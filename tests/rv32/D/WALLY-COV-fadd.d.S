///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fadd.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.840163
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fadd.d f29, f16, f30 # perform first operation
fadd.d f6, f29, f14 # perform second operation

# Testcase cmp_gpr_hazard raw test
fadd.d f16, f22, f5 # perform first operation
fadd.d f7, f14, f16 # perform second operation

# Testcase cmp_gpr_hazard waw test
fadd.d f20, f18, f28 # perform first operation
fadd.d f20, f17, f22 # perform second operation

# Testcase cmp_gpr_hazard waw test
fadd.d f2, f25, f3 # perform first operation
fadd.d f2, f8, f10 # perform second operation

# Testcase cmp_gpr_hazard war test
fadd.d f2, f25, f12 # perform first operation
fadd.d f25, f10, f21 # perform second operation

# Testcase cmp_gpr_hazard war test
fadd.d f12, f22, f25 # perform first operation
fadd.d f25, f15, f30 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x753fd15d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x35f94450 # load x3 with 32 MSBs 0x0000000035f94450
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000035f94450
sw x3, 0(x2) # store x3 (0x35f94450) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x0000000035f94450 from memory into f0
li x3, 0x8f3a0276 # load x3 with 32 MSBs 0x000000008f3a0276
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f3a0276
sw x3, 0(x2) # store x3 (0x8f3a0276) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008f3a0276 from memory into f23
fadd.d f0, f0, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xe8fe32e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6fe97107 # load x3 with 32 MSBs 0x000000006fe97107
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006fe97107
sw x3, 0(x2) # store x3 (0x6fe97107) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006fe97107 from memory into f1
li x3, 0x25210027 # load x3 with 32 MSBs 0x0000000025210027
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025210027
sw x3, 0(x2) # store x3 (0x25210027) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000025210027 from memory into f16
fadd.d f1, f1, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x9a09f111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf221e41f # load x3 with 32 MSBs 0x00000000f221e41f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f221e41f
sw x3, 0(x2) # store x3 (0xf221e41f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f221e41f from memory into f2
li x3, 0xa63d233d # load x3 with 32 MSBs 0x00000000a63d233d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a63d233d
sw x3, 0(x2) # store x3 (0xa63d233d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000a63d233d from memory into f8
fadd.d f2, f2, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x28f615e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96e70e52 # load x3 with 32 MSBs 0x0000000096e70e52
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000096e70e52
sw x3, 0(x2) # store x3 (0x96e70e52) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000096e70e52 from memory into f3
li x3, 0xaf85114c # load x3 with 32 MSBs 0x00000000af85114c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af85114c
sw x3, 0(x2) # store x3 (0xaf85114c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000af85114c from memory into f28
fadd.d f3, f3, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x7c2a22e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28eb3571 # load x3 with 32 MSBs 0x0000000028eb3571
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028eb3571
sw x3, 0(x2) # store x3 (0x28eb3571) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000028eb3571 from memory into f4
li x3, 0x57847833 # load x3 with 32 MSBs 0x0000000057847833
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057847833
sw x3, 0(x2) # store x3 (0x57847833) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000057847833 from memory into f7
fadd.d f4, f4, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xb48b9851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9841493 # load x3 with 32 MSBs 0x00000000b9841493
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9841493
sw x3, 0(x2) # store x3 (0xb9841493) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b9841493 from memory into f5
li x3, 0x3ac710e4 # load x3 with 32 MSBs 0x000000003ac710e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ac710e4
sw x3, 0(x2) # store x3 (0x3ac710e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003ac710e4 from memory into f18
fadd.d f5, f5, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x84a82c16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef300fff # load x3 with 32 MSBs 0x00000000ef300fff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef300fff
sw x3, 0(x2) # store x3 (0xef300fff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ef300fff from memory into f6
li x3, 0x0acaa96e # load x3 with 32 MSBs 0x000000000acaa96e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000acaa96e
sw x3, 0(x2) # store x3 (0x0acaa96e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000acaa96e from memory into f27
fadd.d f6, f6, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x853ba853 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0e0c04d # load x3 with 32 MSBs 0x00000000d0e0c04d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0e0c04d
sw x3, 0(x2) # store x3 (0xd0e0c04d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000d0e0c04d from memory into f7
li x3, 0x531a9128 # load x3 with 32 MSBs 0x00000000531a9128
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000531a9128
sw x3, 0(x2) # store x3 (0x531a9128) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000531a9128 from memory into f3
fadd.d f7, f7, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x210e8581 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32e06355 # load x3 with 32 MSBs 0x0000000032e06355
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032e06355
sw x3, 0(x2) # store x3 (0x32e06355) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000032e06355 from memory into f8
li x3, 0x9e346f2a # load x3 with 32 MSBs 0x000000009e346f2a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e346f2a
sw x3, 0(x2) # store x3 (0x9e346f2a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009e346f2a from memory into f10
fadd.d f8, f8, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x9db1a08c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x97f0da0c # load x3 with 32 MSBs 0x0000000097f0da0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097f0da0c
sw x3, 0(x2) # store x3 (0x97f0da0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000097f0da0c from memory into f9
li x3, 0x7243175b # load x3 with 32 MSBs 0x000000007243175b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007243175b
sw x3, 0(x2) # store x3 (0x7243175b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007243175b from memory into f17
fadd.d f9, f9, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x9d265508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e887abf # load x3 with 32 MSBs 0x000000004e887abf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e887abf
sw x3, 0(x2) # store x3 (0x4e887abf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004e887abf from memory into f10
li x3, 0x86e0cf6d # load x3 with 32 MSBs 0x0000000086e0cf6d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086e0cf6d
sw x3, 0(x2) # store x3 (0x86e0cf6d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000086e0cf6d from memory into f8
fadd.d f10, f10, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x3ff06050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde3246dc # load x3 with 32 MSBs 0x00000000de3246dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de3246dc
sw x3, 0(x2) # store x3 (0xde3246dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000de3246dc from memory into f11
li x3, 0xa4cd35b3 # load x3 with 32 MSBs 0x00000000a4cd35b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4cd35b3
sw x3, 0(x2) # store x3 (0xa4cd35b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000a4cd35b3 from memory into f4
fadd.d f11, f11, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x498955a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3bae360b # load x3 with 32 MSBs 0x000000003bae360b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bae360b
sw x3, 0(x2) # store x3 (0x3bae360b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003bae360b from memory into f12
li x3, 0xc6191afd # load x3 with 32 MSBs 0x00000000c6191afd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6191afd
sw x3, 0(x2) # store x3 (0xc6191afd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c6191afd from memory into f18
fadd.d f12, f12, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0xfaa8cc8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3e5fd517 # load x3 with 32 MSBs 0x000000003e5fd517
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003e5fd517
sw x3, 0(x2) # store x3 (0x3e5fd517) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000003e5fd517 from memory into f13
li x3, 0xa2b36759 # load x3 with 32 MSBs 0x00000000a2b36759
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a2b36759
sw x3, 0(x2) # store x3 (0xa2b36759) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a2b36759 from memory into f14
fadd.d f13, f13, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x0ed1fce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54fbcd05 # load x3 with 32 MSBs 0x0000000054fbcd05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000054fbcd05
sw x3, 0(x2) # store x3 (0x54fbcd05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000054fbcd05 from memory into f14
li x3, 0x231e3856 # load x3 with 32 MSBs 0x00000000231e3856
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000231e3856
sw x3, 0(x2) # store x3 (0x231e3856) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000231e3856 from memory into f25
fadd.d f14, f14, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x7268787f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x884d8978 # load x3 with 32 MSBs 0x00000000884d8978
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000884d8978
sw x3, 0(x2) # store x3 (0x884d8978) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000884d8978 from memory into f15
li x3, 0x513c527b # load x3 with 32 MSBs 0x00000000513c527b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000513c527b
sw x3, 0(x2) # store x3 (0x513c527b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000513c527b from memory into f7
fadd.d f15, f15, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0x547fab9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x97cf7558 # load x3 with 32 MSBs 0x0000000097cf7558
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097cf7558
sw x3, 0(x2) # store x3 (0x97cf7558) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000097cf7558 from memory into f16
li x3, 0x50882ec9 # load x3 with 32 MSBs 0x0000000050882ec9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050882ec9
sw x3, 0(x2) # store x3 (0x50882ec9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000050882ec9 from memory into f20
fadd.d f16, f16, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0xd44d5019 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xedb203af # load x3 with 32 MSBs 0x00000000edb203af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edb203af
sw x3, 0(x2) # store x3 (0xedb203af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000edb203af from memory into f17
li x3, 0xb47c5364 # load x3 with 32 MSBs 0x00000000b47c5364
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b47c5364
sw x3, 0(x2) # store x3 (0xb47c5364) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000b47c5364 from memory into f21
fadd.d f17, f17, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x25ded0b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc3ff66e # load x3 with 32 MSBs 0x00000000fc3ff66e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fc3ff66e
sw x3, 0(x2) # store x3 (0xfc3ff66e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fc3ff66e from memory into f18
li x3, 0x8ccdbb1a # load x3 with 32 MSBs 0x000000008ccdbb1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ccdbb1a
sw x3, 0(x2) # store x3 (0x8ccdbb1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000008ccdbb1a from memory into f26
fadd.d f18, f18, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x8619b4dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1976c600 # load x3 with 32 MSBs 0x000000001976c600
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001976c600
sw x3, 0(x2) # store x3 (0x1976c600) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001976c600 from memory into f19
li x3, 0x9ec9d99a # load x3 with 32 MSBs 0x000000009ec9d99a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ec9d99a
sw x3, 0(x2) # store x3 (0x9ec9d99a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000009ec9d99a from memory into f7
fadd.d f19, f19, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x435ec68e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x577c6689 # load x3 with 32 MSBs 0x00000000577c6689
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000577c6689
sw x3, 0(x2) # store x3 (0x577c6689) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000577c6689 from memory into f20
li x3, 0x05ac8e73 # load x3 with 32 MSBs 0x0000000005ac8e73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005ac8e73
sw x3, 0(x2) # store x3 (0x05ac8e73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000005ac8e73 from memory into f29
fadd.d f20, f20, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0xbb3b4a5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc2f5fcfc # load x3 with 32 MSBs 0x00000000c2f5fcfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2f5fcfc
sw x3, 0(x2) # store x3 (0xc2f5fcfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c2f5fcfc from memory into f21
li x3, 0xef795a07 # load x3 with 32 MSBs 0x00000000ef795a07
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef795a07
sw x3, 0(x2) # store x3 (0xef795a07) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000ef795a07 from memory into f27
fadd.d f21, f21, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xf3109c39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67303d38 # load x3 with 32 MSBs 0x0000000067303d38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067303d38
sw x3, 0(x2) # store x3 (0x67303d38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000067303d38 from memory into f22
li x3, 0xa1c4f152 # load x3 with 32 MSBs 0x00000000a1c4f152
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1c4f152
sw x3, 0(x2) # store x3 (0xa1c4f152) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a1c4f152 from memory into f15
fadd.d f22, f22, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xe6411159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8da1a119 # load x3 with 32 MSBs 0x000000008da1a119
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008da1a119
sw x3, 0(x2) # store x3 (0x8da1a119) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008da1a119 from memory into f23
li x3, 0x0b9a9985 # load x3 with 32 MSBs 0x000000000b9a9985
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b9a9985
sw x3, 0(x2) # store x3 (0x0b9a9985) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000b9a9985 from memory into f17
fadd.d f23, f23, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0xbf9305bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8046d5a6 # load x3 with 32 MSBs 0x000000008046d5a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008046d5a6
sw x3, 0(x2) # store x3 (0x8046d5a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000008046d5a6 from memory into f24
li x3, 0x2ad7dddf # load x3 with 32 MSBs 0x000000002ad7dddf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002ad7dddf
sw x3, 0(x2) # store x3 (0x2ad7dddf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002ad7dddf from memory into f8
fadd.d f24, f24, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xfc8aa636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe7193f67 # load x3 with 32 MSBs 0x00000000e7193f67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7193f67
sw x3, 0(x2) # store x3 (0xe7193f67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e7193f67 from memory into f25
li x3, 0xb7f0ce97 # load x3 with 32 MSBs 0x00000000b7f0ce97
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b7f0ce97
sw x3, 0(x2) # store x3 (0xb7f0ce97) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b7f0ce97 from memory into f20
fadd.d f25, f25, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x5b7e3474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x51342894 # load x3 with 32 MSBs 0x0000000051342894
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051342894
sw x3, 0(x2) # store x3 (0x51342894) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000051342894 from memory into f26
li x3, 0xdd538cb9 # load x3 with 32 MSBs 0x00000000dd538cb9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd538cb9
sw x3, 0(x2) # store x3 (0xdd538cb9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000dd538cb9 from memory into f20
fadd.d f26, f26, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x33b831e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60710f5c # load x3 with 32 MSBs 0x0000000060710f5c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000060710f5c
sw x3, 0(x2) # store x3 (0x60710f5c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000060710f5c from memory into f27
li x3, 0x02936c7e # load x3 with 32 MSBs 0x0000000002936c7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002936c7e
sw x3, 0(x2) # store x3 (0x02936c7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000002936c7e from memory into f24
fadd.d f27, f27, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xab0597a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0658817 # load x3 with 32 MSBs 0x00000000a0658817
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a0658817
sw x3, 0(x2) # store x3 (0xa0658817) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a0658817 from memory into f28
li x3, 0x85e77dcf # load x3 with 32 MSBs 0x0000000085e77dcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085e77dcf
sw x3, 0(x2) # store x3 (0x85e77dcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000085e77dcf from memory into f17
fadd.d f28, f28, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xffbbb212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28ae2090 # load x3 with 32 MSBs 0x0000000028ae2090
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028ae2090
sw x3, 0(x2) # store x3 (0x28ae2090) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000028ae2090 from memory into f29
li x3, 0xc77adac6 # load x3 with 32 MSBs 0x00000000c77adac6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c77adac6
sw x3, 0(x2) # store x3 (0xc77adac6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c77adac6 from memory into f11
fadd.d f29, f29, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x25f7f33a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0e4cdad1 # load x3 with 32 MSBs 0x000000000e4cdad1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e4cdad1
sw x3, 0(x2) # store x3 (0x0e4cdad1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000e4cdad1 from memory into f30
li x3, 0xd7efb784 # load x3 with 32 MSBs 0x00000000d7efb784
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7efb784
sw x3, 0(x2) # store x3 (0xd7efb784) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d7efb784 from memory into f12
fadd.d f30, f30, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xa0f89d32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4659ac5 # load x3 with 32 MSBs 0x00000000c4659ac5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4659ac5
sw x3, 0(x2) # store x3 (0xc4659ac5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c4659ac5 from memory into f31
li x3, 0xebc2d867 # load x3 with 32 MSBs 0x00000000ebc2d867
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebc2d867
sw x3, 0(x2) # store x3 (0xebc2d867) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ebc2d867 from memory into f23
fadd.d f31, f31, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xed46703c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe352ca69 # load x3 with 32 MSBs 0x00000000e352ca69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e352ca69
sw x3, 0(x2) # store x3 (0xe352ca69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e352ca69 from memory into f16
li x3, 0x51c6e76f # load x3 with 32 MSBs 0x0000000051c6e76f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000051c6e76f
sw x3, 0(x2) # store x3 (0x51c6e76f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x0000000051c6e76f from memory into f0
fadd.d f0, f16, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x1def104c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e29d7be # load x3 with 32 MSBs 0x000000008e29d7be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e29d7be
sw x3, 0(x2) # store x3 (0x8e29d7be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000008e29d7be from memory into f19
li x3, 0x9cadbcb6 # load x3 with 32 MSBs 0x000000009cadbcb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009cadbcb6
sw x3, 0(x2) # store x3 (0x9cadbcb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009cadbcb6 from memory into f1
fadd.d f1, f19, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0xe891951f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e413bab # load x3 with 32 MSBs 0x000000001e413bab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e413bab
sw x3, 0(x2) # store x3 (0x1e413bab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000001e413bab from memory into f19
li x3, 0x5be5532f # load x3 with 32 MSBs 0x000000005be5532f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005be5532f
sw x3, 0(x2) # store x3 (0x5be5532f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000005be5532f from memory into f2
fadd.d f2, f19, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0xd6d8266b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf1144978 # load x3 with 32 MSBs 0x00000000f1144978
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f1144978
sw x3, 0(x2) # store x3 (0xf1144978) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000f1144978 from memory into f27
li x3, 0x6af0ffcf # load x3 with 32 MSBs 0x000000006af0ffcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006af0ffcf
sw x3, 0(x2) # store x3 (0x6af0ffcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000006af0ffcf from memory into f3
fadd.d f3, f27, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xf0b7c870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ac3a34f # load x3 with 32 MSBs 0x000000007ac3a34f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ac3a34f
sw x3, 0(x2) # store x3 (0x7ac3a34f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007ac3a34f from memory into f5
li x3, 0xde4961d9 # load x3 with 32 MSBs 0x00000000de4961d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de4961d9
sw x3, 0(x2) # store x3 (0xde4961d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000de4961d9 from memory into f4
fadd.d f4, f5, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x3d8d471b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x46f3a32e # load x3 with 32 MSBs 0x0000000046f3a32e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000046f3a32e
sw x3, 0(x2) # store x3 (0x46f3a32e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000046f3a32e from memory into f31
li x3, 0x174495df # load x3 with 32 MSBs 0x00000000174495df
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000174495df
sw x3, 0(x2) # store x3 (0x174495df) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000174495df from memory into f5
fadd.d f5, f31, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xbb6f93d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb621986 # load x3 with 32 MSBs 0x00000000eb621986
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb621986
sw x3, 0(x2) # store x3 (0xeb621986) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000eb621986 from memory into f7
li x3, 0xaee357b9 # load x3 with 32 MSBs 0x00000000aee357b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aee357b9
sw x3, 0(x2) # store x3 (0xaee357b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000aee357b9 from memory into f6
fadd.d f6, f7, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x697f2594 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x023b41d9 # load x3 with 32 MSBs 0x00000000023b41d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000023b41d9
sw x3, 0(x2) # store x3 (0x023b41d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000023b41d9 from memory into f19
li x3, 0xb025eaad # load x3 with 32 MSBs 0x00000000b025eaad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b025eaad
sw x3, 0(x2) # store x3 (0xb025eaad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b025eaad from memory into f7
fadd.d f7, f19, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x38fbb38c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d8bcf95 # load x3 with 32 MSBs 0x000000003d8bcf95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d8bcf95
sw x3, 0(x2) # store x3 (0x3d8bcf95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003d8bcf95 from memory into f30
li x3, 0xd8f85e9d # load x3 with 32 MSBs 0x00000000d8f85e9d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8f85e9d
sw x3, 0(x2) # store x3 (0xd8f85e9d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d8f85e9d from memory into f8
fadd.d f8, f30, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xd88d1f7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70fbccb2 # load x3 with 32 MSBs 0x0000000070fbccb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070fbccb2
sw x3, 0(x2) # store x3 (0x70fbccb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000070fbccb2 from memory into f15
li x3, 0x17fc39c2 # load x3 with 32 MSBs 0x0000000017fc39c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017fc39c2
sw x3, 0(x2) # store x3 (0x17fc39c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000017fc39c2 from memory into f9
fadd.d f9, f15, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x844a3e0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x768c837d # load x3 with 32 MSBs 0x00000000768c837d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000768c837d
sw x3, 0(x2) # store x3 (0x768c837d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000768c837d from memory into f18
li x3, 0xa4a46143 # load x3 with 32 MSBs 0x00000000a4a46143
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4a46143
sw x3, 0(x2) # store x3 (0xa4a46143) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000a4a46143 from memory into f10
fadd.d f10, f18, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0xb620b89e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd31b4c96 # load x3 with 32 MSBs 0x00000000d31b4c96
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d31b4c96
sw x3, 0(x2) # store x3 (0xd31b4c96) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d31b4c96 from memory into f1
li x3, 0x95b92dfc # load x3 with 32 MSBs 0x0000000095b92dfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095b92dfc
sw x3, 0(x2) # store x3 (0x95b92dfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000095b92dfc from memory into f11
fadd.d f11, f1, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x89354250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x752c51c6 # load x3 with 32 MSBs 0x00000000752c51c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000752c51c6
sw x3, 0(x2) # store x3 (0x752c51c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000752c51c6 from memory into f21
li x3, 0xd518d1ad # load x3 with 32 MSBs 0x00000000d518d1ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d518d1ad
sw x3, 0(x2) # store x3 (0xd518d1ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d518d1ad from memory into f12
fadd.d f12, f21, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x73586dc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb07937ed # load x3 with 32 MSBs 0x00000000b07937ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b07937ed
sw x3, 0(x2) # store x3 (0xb07937ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b07937ed from memory into f27
li x3, 0xbb10b521 # load x3 with 32 MSBs 0x00000000bb10b521
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb10b521
sw x3, 0(x2) # store x3 (0xbb10b521) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000bb10b521 from memory into f13
fadd.d f13, f27, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x669891cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a977335 # load x3 with 32 MSBs 0x000000001a977335
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a977335
sw x3, 0(x2) # store x3 (0x1a977335) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001a977335 from memory into f28
li x3, 0xd1c4a162 # load x3 with 32 MSBs 0x00000000d1c4a162
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d1c4a162
sw x3, 0(x2) # store x3 (0xd1c4a162) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000d1c4a162 from memory into f14
fadd.d f14, f28, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x5694bbf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x56e1d8a9 # load x3 with 32 MSBs 0x0000000056e1d8a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000056e1d8a9
sw x3, 0(x2) # store x3 (0x56e1d8a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000056e1d8a9 from memory into f16
li x3, 0x817438b5 # load x3 with 32 MSBs 0x00000000817438b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000817438b5
sw x3, 0(x2) # store x3 (0x817438b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000817438b5 from memory into f15
fadd.d f15, f16, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x3bbbe2f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74378b95 # load x3 with 32 MSBs 0x0000000074378b95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074378b95
sw x3, 0(x2) # store x3 (0x74378b95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000074378b95 from memory into f7
li x3, 0xdb0b918f # load x3 with 32 MSBs 0x00000000db0b918f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000db0b918f
sw x3, 0(x2) # store x3 (0xdb0b918f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000db0b918f from memory into f16
fadd.d f16, f7, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x83625a0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4521bf45 # load x3 with 32 MSBs 0x000000004521bf45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004521bf45
sw x3, 0(x2) # store x3 (0x4521bf45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004521bf45 from memory into f8
li x3, 0xfcef84d1 # load x3 with 32 MSBs 0x00000000fcef84d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcef84d1
sw x3, 0(x2) # store x3 (0xfcef84d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fcef84d1 from memory into f17
fadd.d f17, f8, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x29cbc060 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4dd626d9 # load x3 with 32 MSBs 0x000000004dd626d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004dd626d9
sw x3, 0(x2) # store x3 (0x4dd626d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000004dd626d9 from memory into f12
li x3, 0xad5c0075 # load x3 with 32 MSBs 0x00000000ad5c0075
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad5c0075
sw x3, 0(x2) # store x3 (0xad5c0075) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ad5c0075 from memory into f18
fadd.d f18, f12, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xcc3bf20e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x47c464d3 # load x3 with 32 MSBs 0x0000000047c464d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000047c464d3
sw x3, 0(x2) # store x3 (0x47c464d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000047c464d3 from memory into f7
li x3, 0x069145da # load x3 with 32 MSBs 0x00000000069145da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000069145da
sw x3, 0(x2) # store x3 (0x069145da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000069145da from memory into f19
fadd.d f19, f7, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x9a985f7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f82c422 # load x3 with 32 MSBs 0x000000005f82c422
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f82c422
sw x3, 0(x2) # store x3 (0x5f82c422) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000005f82c422 from memory into f17
li x3, 0xb9ed46c2 # load x3 with 32 MSBs 0x00000000b9ed46c2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9ed46c2
sw x3, 0(x2) # store x3 (0xb9ed46c2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b9ed46c2 from memory into f20
fadd.d f20, f17, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x84e76d23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4cc9d3b # load x3 with 32 MSBs 0x00000000d4cc9d3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4cc9d3b
sw x3, 0(x2) # store x3 (0xd4cc9d3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d4cc9d3b from memory into f11
li x3, 0x9fa32222 # load x3 with 32 MSBs 0x000000009fa32222
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fa32222
sw x3, 0(x2) # store x3 (0x9fa32222) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009fa32222 from memory into f21
fadd.d f21, f11, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0xc4282d8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55ba2e9a # load x3 with 32 MSBs 0x0000000055ba2e9a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055ba2e9a
sw x3, 0(x2) # store x3 (0x55ba2e9a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000055ba2e9a from memory into f29
li x3, 0xcf566ab0 # load x3 with 32 MSBs 0x00000000cf566ab0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf566ab0
sw x3, 0(x2) # store x3 (0xcf566ab0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000cf566ab0 from memory into f22
fadd.d f22, f29, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x545c490c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06398161 # load x3 with 32 MSBs 0x0000000006398161
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006398161
sw x3, 0(x2) # store x3 (0x06398161) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000006398161 from memory into f31
li x3, 0x00a40b8a # load x3 with 32 MSBs 0x0000000000a40b8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000a40b8a
sw x3, 0(x2) # store x3 (0x00a40b8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000a40b8a from memory into f23
fadd.d f23, f31, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0xcb7fbd27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed7121dc # load x3 with 32 MSBs 0x00000000ed7121dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed7121dc
sw x3, 0(x2) # store x3 (0xed7121dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ed7121dc from memory into f10
li x3, 0x175b501d # load x3 with 32 MSBs 0x00000000175b501d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000175b501d
sw x3, 0(x2) # store x3 (0x175b501d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000175b501d from memory into f24
fadd.d f24, f10, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xc284e7d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc8ea8106 # load x3 with 32 MSBs 0x00000000c8ea8106
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8ea8106
sw x3, 0(x2) # store x3 (0xc8ea8106) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c8ea8106 from memory into f28
li x3, 0xa8071c8c # load x3 with 32 MSBs 0x00000000a8071c8c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8071c8c
sw x3, 0(x2) # store x3 (0xa8071c8c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000a8071c8c from memory into f25
fadd.d f25, f28, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x2c91b633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41ceedd8 # load x3 with 32 MSBs 0x0000000041ceedd8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041ceedd8
sw x3, 0(x2) # store x3 (0x41ceedd8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000041ceedd8 from memory into f28
li x3, 0x89974466 # load x3 with 32 MSBs 0x0000000089974466
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089974466
sw x3, 0(x2) # store x3 (0x89974466) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000089974466 from memory into f26
fadd.d f26, f28, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xf65b66ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9405f781 # load x3 with 32 MSBs 0x000000009405f781
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009405f781
sw x3, 0(x2) # store x3 (0x9405f781) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009405f781 from memory into f26
li x3, 0x5283611b # load x3 with 32 MSBs 0x000000005283611b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005283611b
sw x3, 0(x2) # store x3 (0x5283611b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005283611b from memory into f27
fadd.d f27, f26, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x8c603a80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x889c6019 # load x3 with 32 MSBs 0x00000000889c6019
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000889c6019
sw x3, 0(x2) # store x3 (0x889c6019) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000889c6019 from memory into f2
li x3, 0x0cf1188e # load x3 with 32 MSBs 0x000000000cf1188e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000cf1188e
sw x3, 0(x2) # store x3 (0x0cf1188e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000000cf1188e from memory into f28
fadd.d f28, f2, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xc89db21c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xddff249c # load x3 with 32 MSBs 0x00000000ddff249c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ddff249c
sw x3, 0(x2) # store x3 (0xddff249c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ddff249c from memory into f1
li x3, 0x580195d2 # load x3 with 32 MSBs 0x00000000580195d2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000580195d2
sw x3, 0(x2) # store x3 (0x580195d2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000580195d2 from memory into f29
fadd.d f29, f1, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0xe9d5d4bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc26737f5 # load x3 with 32 MSBs 0x00000000c26737f5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c26737f5
sw x3, 0(x2) # store x3 (0xc26737f5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c26737f5 from memory into f3
li x3, 0x0634fd21 # load x3 with 32 MSBs 0x000000000634fd21
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000634fd21
sw x3, 0(x2) # store x3 (0x0634fd21) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000634fd21 from memory into f30
fadd.d f30, f3, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x2c7591fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41645a1d # load x3 with 32 MSBs 0x0000000041645a1d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000041645a1d
sw x3, 0(x2) # store x3 (0x41645a1d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000041645a1d from memory into f4
li x3, 0xbbd026e4 # load x3 with 32 MSBs 0x00000000bbd026e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbd026e4
sw x3, 0(x2) # store x3 (0xbbd026e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bbd026e4 from memory into f31
fadd.d f31, f4, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x29, 0xfcdd31e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
li x3, 0x1c416cac # load x3 with 32 MSBs 0x000000001c416cac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c416cac
sw x3, 0(x2) # store x3 (0x1c416cac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001c416cac from memory into f28
fadd.d f29, f5, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x12, 0x9ada5088 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
li x3, 0xf6adc990 # load x3 with 32 MSBs 0x00000000f6adc990
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6adc990
sw x3, 0(x2) # store x3 (0xf6adc990) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f6adc990 from memory into f21
fadd.d f12, f27, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x2, 0x9698b942 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x05de0b27 # load x3 with 32 MSBs 0x0000000005de0b27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005de0b27
sw x3, 0(x2) # store x3 (0x05de0b27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000005de0b27 from memory into f25
fadd.d f2, f11, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x21, 0x6dcee862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0xa5aefe39 # load x3 with 32 MSBs 0x00000000a5aefe39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5aefe39
sw x3, 0(x2) # store x3 (0xa5aefe39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a5aefe39 from memory into f18
fadd.d f21, f3, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x29, 0x8f9ae7b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0x00606c15 # load x3 with 32 MSBs 0x0000000000606c15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000606c15
sw x3, 0(x2) # store x3 (0x00606c15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000606c15 from memory into f14
fadd.d f29, f13, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x9, 0xabc0bb9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x81f19f42 # load x3 with 32 MSBs 0x0000000081f19f42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081f19f42
sw x3, 0(x2) # store x3 (0x81f19f42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000081f19f42 from memory into f24
fadd.d f9, f18, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x24, 0xa9c94b57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0xc0e7f96f # load x3 with 32 MSBs 0x00000000c0e7f96f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0e7f96f
sw x3, 0(x2) # store x3 (0xc0e7f96f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000c0e7f96f from memory into f21
fadd.d f24, f13, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x12, 0x47117c87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x22821448 # load x3 with 32 MSBs 0x0000000022821448
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022821448
sw x3, 0(x2) # store x3 (0x22821448) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000022821448 from memory into f2
fadd.d f12, f17, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x26, 0x32d4bf10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0xcf1eacb4 # load x3 with 32 MSBs 0x00000000cf1eacb4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf1eacb4
sw x3, 0(x2) # store x3 (0xcf1eacb4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000cf1eacb4 from memory into f7
fadd.d f26, f27, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x22, 0xd8a7e926 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x92c7955d # load x3 with 32 MSBs 0x0000000092c7955d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000092c7955d
sw x3, 0(x2) # store x3 (0x92c7955d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000092c7955d from memory into f26
fadd.d f22, f19, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x25, 0xc4f548c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
li x3, 0x53dd042e # load x3 with 32 MSBs 0x0000000053dd042e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000053dd042e
sw x3, 0(x2) # store x3 (0x53dd042e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000053dd042e from memory into f21
fadd.d f25, f12, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x20, 0x3b8dd64b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
li x3, 0x0203122b # load x3 with 32 MSBs 0x000000000203122b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000203122b
sw x3, 0(x2) # store x3 (0x0203122b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000203122b from memory into f17
fadd.d f20, f18, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x9, 0x222ef512 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
li x3, 0x1aff5026 # load x3 with 32 MSBs 0x000000001aff5026
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001aff5026
sw x3, 0(x2) # store x3 (0x1aff5026) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000001aff5026 from memory into f5
fadd.d f9, f20, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x15, 0x3b7f18a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x84be5eeb # load x3 with 32 MSBs 0x0000000084be5eeb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000084be5eeb
sw x3, 0(x2) # store x3 (0x84be5eeb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000084be5eeb from memory into f14
fadd.d f15, f4, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x20, 0x7d0b723b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0xbb06a6fd # load x3 with 32 MSBs 0x00000000bb06a6fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb06a6fd
sw x3, 0(x2) # store x3 (0xbb06a6fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bb06a6fd from memory into f22
fadd.d f20, f4, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x15, 0x9e5ab11b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xbcd2bef6 # load x3 with 32 MSBs 0x00000000bcd2bef6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bcd2bef6
sw x3, 0(x2) # store x3 (0xbcd2bef6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000bcd2bef6 from memory into f2
fadd.d f15, f27, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x2, 0xdb9c2acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x58697e12 # load x3 with 32 MSBs 0x0000000058697e12
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058697e12
sw x3, 0(x2) # store x3 (0x58697e12) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000058697e12 from memory into f7
fadd.d f2, f24, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x20, 0x731ef77e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
li x3, 0xf0283710 # load x3 with 32 MSBs 0x00000000f0283710
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0283710
sw x3, 0(x2) # store x3 (0xf0283710) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f0283710 from memory into f14
fadd.d f20, f6, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x10, 0xc0730a83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x1272f0c8 # load x3 with 32 MSBs 0x000000001272f0c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001272f0c8
sw x3, 0(x2) # store x3 (0x1272f0c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000001272f0c8 from memory into f31
fadd.d f10, f19, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x2, 0x4cb6b915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x5e353699 # load x3 with 32 MSBs 0x000000005e353699
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e353699
sw x3, 0(x2) # store x3 (0x5e353699) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000005e353699 from memory into f25
fadd.d f2, f7, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x25, 0xb0ab3094 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xfe2f1836 # load x3 with 32 MSBs 0x00000000fe2f1836
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe2f1836
sw x3, 0(x2) # store x3 (0xfe2f1836) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000fe2f1836 from memory into f20
fadd.d f25, f6, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x22, 0x00ff123c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x6b5ce044 # load x3 with 32 MSBs 0x000000006b5ce044
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b5ce044
sw x3, 0(x2) # store x3 (0x6b5ce044) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000006b5ce044 from memory into f26
fadd.d f22, f12, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x4, 0x62e6a079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0xdecd1069 # load x3 with 32 MSBs 0x00000000decd1069
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000decd1069
sw x3, 0(x2) # store x3 (0xdecd1069) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000decd1069 from memory into f22
fadd.d f4, f23, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x28, 0x1a495d00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0x83493a53 # load x3 with 32 MSBs 0x0000000083493a53
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083493a53
sw x3, 0(x2) # store x3 (0x83493a53) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000083493a53 from memory into f30
fadd.d f28, f29, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x13, 0x4ad4bb4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x9f849f05 # load x3 with 32 MSBs 0x000000009f849f05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f849f05
sw x3, 0(x2) # store x3 (0x9f849f05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009f849f05 from memory into f12
fadd.d f13, f14, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x4, 0xce4ed733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
li x3, 0x9f2052db # load x3 with 32 MSBs 0x000000009f2052db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f2052db
sw x3, 0(x2) # store x3 (0x9f2052db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000009f2052db from memory into f8
fadd.d f4, f17, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x22, 0x25043075 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55fc1630 # load x3 with 32 MSBs 0x0000000055fc1630
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055fc1630
sw x3, 0(x2) # store x3 (0x55fc1630) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000055fc1630 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fadd.d f22, f19, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x30, 0xfba6d4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x723cbc50 # load x3 with 32 MSBs 0x00000000723cbc50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000723cbc50
sw x3, 0(x2) # store x3 (0x723cbc50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000723cbc50 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fadd.d f30, f1, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x8, 0xdb42b0c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed7fc1ce # load x3 with 32 MSBs 0x00000000ed7fc1ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed7fc1ce
sw x3, 0(x2) # store x3 (0xed7fc1ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ed7fc1ce from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fadd.d f8, f17, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x20, 0x7b4498c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x98f7933d # load x3 with 32 MSBs 0x0000000098f7933d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000098f7933d
sw x3, 0(x2) # store x3 (0x98f7933d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000098f7933d from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fadd.d f20, f23, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x9, 0x01d282fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27626291 # load x3 with 32 MSBs 0x0000000027626291
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027626291
sw x3, 0(x2) # store x3 (0x27626291) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000027626291 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fadd.d f9, f14, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x20, 0x894c5e5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27870aff # load x3 with 32 MSBs 0x0000000027870aff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027870aff
sw x3, 0(x2) # store x3 (0x27870aff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000027870aff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fadd.d f20, f21, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x16, 0xfeb48e3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x76704ffd # load x3 with 32 MSBs 0x0000000076704ffd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000076704ffd
sw x3, 0(x2) # store x3 (0x76704ffd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000076704ffd from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fadd.d f16, f24, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x8, 0x858e5b4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87feb150 # load x3 with 32 MSBs 0x0000000087feb150
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087feb150
sw x3, 0(x2) # store x3 (0x87feb150) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000087feb150 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fadd.d f8, f2, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x1, 0x004d1ee6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa5bffb66 # load x3 with 32 MSBs 0x00000000a5bffb66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5bffb66
sw x3, 0(x2) # store x3 (0xa5bffb66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a5bffb66 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fadd.d f1, f24, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x6, 0x61a30c42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6efcd541 # load x3 with 32 MSBs 0x000000006efcd541
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006efcd541
sw x3, 0(x2) # store x3 (0x6efcd541) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000006efcd541 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fadd.d f6, f10, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x4, 0x67550fd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06a53fe5 # load x3 with 32 MSBs 0x0000000006a53fe5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006a53fe5
sw x3, 0(x2) # store x3 (0x06a53fe5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000006a53fe5 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fadd.d f4, f15, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x20, 0x87138652 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50e65baf # load x3 with 32 MSBs 0x0000000050e65baf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050e65baf
sw x3, 0(x2) # store x3 (0x50e65baf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000050e65baf from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
fadd.d f20, f27, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x20, 0x2383b728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03abe15c # load x3 with 32 MSBs 0x0000000003abe15c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003abe15c
sw x3, 0(x2) # store x3 (0x03abe15c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000003abe15c from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fadd.d f20, f10, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x24, 0xfbf78866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbca65934 # load x3 with 32 MSBs 0x00000000bca65934
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bca65934
sw x3, 0(x2) # store x3 (0xbca65934) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bca65934 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fadd.d f24, f22, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x7, 0x51615474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1530ad6 # load x3 with 32 MSBs 0x00000000c1530ad6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1530ad6
sw x3, 0(x2) # store x3 (0xc1530ad6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c1530ad6 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fadd.d f7, f6, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x22, 0x03988aee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6dda5fca # load x3 with 32 MSBs 0x000000006dda5fca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006dda5fca
sw x3, 0(x2) # store x3 (0x6dda5fca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006dda5fca from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fadd.d f22, f16, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x4, 0xc56b00a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89ad7d85 # load x3 with 32 MSBs 0x0000000089ad7d85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000089ad7d85
sw x3, 0(x2) # store x3 (0x89ad7d85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000089ad7d85 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fadd.d f4, f1, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x4, 0xbd41b8c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf02b2bee # load x3 with 32 MSBs 0x00000000f02b2bee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f02b2bee
sw x3, 0(x2) # store x3 (0xf02b2bee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000f02b2bee from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fadd.d f4, f10, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x14, 0x1274cee6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4be20420 # load x3 with 32 MSBs 0x000000004be20420
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004be20420
sw x3, 0(x2) # store x3 (0x4be20420) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004be20420 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fadd.d f14, f6, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x26, 0xafffaba7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8f989ffa # load x3 with 32 MSBs 0x000000008f989ffa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008f989ffa
sw x3, 0(x2) # store x3 (0x8f989ffa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008f989ffa from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fadd.d f26, f17, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x7, 0x62db287b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03d0e4b9 # load x3 with 32 MSBs 0x0000000003d0e4b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003d0e4b9
sw x3, 0(x2) # store x3 (0x03d0e4b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000003d0e4b9 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fadd.d f7, f27, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x9, 0x85595c17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfffb5ad4 # load x3 with 32 MSBs 0x00000000fffb5ad4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fffb5ad4
sw x3, 0(x2) # store x3 (0xfffb5ad4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000fffb5ad4 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fadd.d f9, f2, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x10, 0x2f2d50fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x291b9d05 # load x3 with 32 MSBs 0x00000000291b9d05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000291b9d05
sw x3, 0(x2) # store x3 (0x291b9d05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000291b9d05 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fadd.d f10, f12, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x23, 0x55d900e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9929e7fa # load x3 with 32 MSBs 0x000000009929e7fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009929e7fa
sw x3, 0(x2) # store x3 (0x9929e7fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009929e7fa from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fadd.d f23, f12, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x25, 0x828f883c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d4830db # load x3 with 32 MSBs 0x000000009d4830db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d4830db
sw x3, 0(x2) # store x3 (0x9d4830db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009d4830db from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fadd.d f25, f14, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x5, 0x3d23a178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ac6b13c # load x3 with 32 MSBs 0x000000007ac6b13c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007ac6b13c
sw x3, 0(x2) # store x3 (0x7ac6b13c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007ac6b13c from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
fadd.d f5, f3, f26 # perform operation

# Testcase cp_frm
li x13, 0xa73b58ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2d26bce3 # load x3 with 32 MSBs 0x000000002d26bce3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d26bce3
sw x3, 0(x2) # store x3 (0x2d26bce3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002d26bce3 from memory into f22
li x3, 0x4f722336 # load x3 with 32 MSBs 0x000000004f722336
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f722336
sw x3, 0(x2) # store x3 (0x4f722336) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000004f722336 from memory into f2
fadd.d f13, f22, f2, dyn # perform operation
fadd.d f13, f22, f2, rdn # perform operation
fadd.d f13, f22, f2, rmm # perform operation
fadd.d f13, f22, f2, rne # perform operation
fadd.d f13, f22, f2, rtz # perform operation
fadd.d f13, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x28, 0x98e146f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fadd.d f28, f12, f13, dyn # perform operation
fadd.d f28, f12, f13, rdn # perform operation
fadd.d f28, f12, f13, rmm # perform operation
fadd.d f28, f12, f13, rne # perform operation
fadd.d f28, f12, f13, rtz # perform operation
fadd.d f28, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x1, 0xba2947d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fadd.d f1, f19, f18, dyn # perform operation
fadd.d f1, f19, f18, rdn # perform operation
fadd.d f1, f19, f18, rmm # perform operation
fadd.d f1, f19, f18, rne # perform operation
fadd.d f1, f19, f18, rtz # perform operation
fadd.d f1, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x10, 0xc17b91b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fadd.d f10, f24, f16, dyn # perform operation
fadd.d f10, f24, f16, rdn # perform operation
fadd.d f10, f24, f16, rmm # perform operation
fadd.d f10, f24, f16, rne # perform operation
fadd.d f10, f24, f16, rtz # perform operation
fadd.d f10, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x26, 0xf68ba100 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fadd.d f26, f22, f8, dyn # perform operation
fadd.d f26, f22, f8, rdn # perform operation
fadd.d f26, f22, f8, rmm # perform operation
fadd.d f26, f22, f8, rne # perform operation
fadd.d f26, f22, f8, rtz # perform operation
fadd.d f26, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x9, 0xcf56a2d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fadd.d f9, f24, f18, dyn # perform operation
fadd.d f9, f24, f18, rdn # perform operation
fadd.d f9, f24, f18, rmm # perform operation
fadd.d f9, f24, f18, rne # perform operation
fadd.d f9, f24, f18, rtz # perform operation
fadd.d f9, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x18, 0x3786ceaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fadd.d f18, f26, f20, dyn # perform operation
fadd.d f18, f26, f20, rdn # perform operation
fadd.d f18, f26, f20, rmm # perform operation
fadd.d f18, f26, f20, rne # perform operation
fadd.d f18, f26, f20, rtz # perform operation
fadd.d f18, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x27, 0x6c574d03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fadd.d f27, f24, f16, dyn # perform operation
fadd.d f27, f24, f16, rdn # perform operation
fadd.d f27, f24, f16, rmm # perform operation
fadd.d f27, f24, f16, rne # perform operation
fadd.d f27, f24, f16, rtz # perform operation
fadd.d f27, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x7, 0xe4769307 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fadd.d f7, f6, f10, dyn # perform operation
fadd.d f7, f6, f10, rdn # perform operation
fadd.d f7, f6, f10, rmm # perform operation
fadd.d f7, f6, f10, rne # perform operation
fadd.d f7, f6, f10, rtz # perform operation
fadd.d f7, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x4, 0xf9827732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fadd.d f4, f26, f12, dyn # perform operation
fadd.d f4, f26, f12, rdn # perform operation
fadd.d f4, f26, f12, rmm # perform operation
fadd.d f4, f26, f12, rne # perform operation
fadd.d f4, f26, f12, rtz # perform operation
fadd.d f4, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x10, 0x5a30188c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fadd.d f10, f20, f5, dyn # perform operation
fadd.d f10, f20, f5, rdn # perform operation
fadd.d f10, f20, f5, rmm # perform operation
fadd.d f10, f20, f5, rne # perform operation
fadd.d f10, f20, f5, rtz # perform operation
fadd.d f10, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x20, 0x75049e52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
fadd.d f20, f21, f18, dyn # perform operation
fadd.d f20, f21, f18, rdn # perform operation
fadd.d f20, f21, f18, rmm # perform operation
fadd.d f20, f21, f18, rne # perform operation
fadd.d f20, f21, f18, rtz # perform operation
fadd.d f20, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x1, 0x8137fe5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fadd.d f1, f2, f19, dyn # perform operation
fadd.d f1, f2, f19, rdn # perform operation
fadd.d f1, f2, f19, rmm # perform operation
fadd.d f1, f2, f19, rne # perform operation
fadd.d f1, f2, f19, rtz # perform operation
fadd.d f1, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x14, 0x7f6a9057 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fadd.d f14, f16, f12, dyn # perform operation
fadd.d f14, f16, f12, rdn # perform operation
fadd.d f14, f16, f12, rmm # perform operation
fadd.d f14, f16, f12, rne # perform operation
fadd.d f14, f16, f12, rtz # perform operation
fadd.d f14, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x18, 0x17ac4cde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fadd.d f18, f31, f7, dyn # perform operation
fadd.d f18, f31, f7, rdn # perform operation
fadd.d f18, f31, f7, rmm # perform operation
fadd.d f18, f31, f7, rne # perform operation
fadd.d f18, f31, f7, rtz # perform operation
fadd.d f18, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x12, 0xf5e17813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fadd.d f12, f3, f21, dyn # perform operation
fadd.d f12, f3, f21, rdn # perform operation
fadd.d f12, f3, f21, rmm # perform operation
fadd.d f12, f3, f21, rne # perform operation
fadd.d f12, f3, f21, rtz # perform operation
fadd.d f12, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x3, 0x41288927 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fadd.d f3, f24, f22, dyn # perform operation
fadd.d f3, f24, f22, rdn # perform operation
fadd.d f3, f24, f22, rmm # perform operation
fadd.d f3, f24, f22, rne # perform operation
fadd.d f3, f24, f22, rtz # perform operation
fadd.d f3, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x24, 0x1f316de0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fadd.d f24, f7, f21, dyn # perform operation
fadd.d f24, f7, f21, rdn # perform operation
fadd.d f24, f7, f21, rmm # perform operation
fadd.d f24, f7, f21, rne # perform operation
fadd.d f24, f7, f21, rtz # perform operation
fadd.d f24, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f7, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x6, 0x4b1074bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fadd.d f6, f12, f3, dyn # perform operation
fadd.d f6, f12, f3, rdn # perform operation
fadd.d f6, f12, f3, rmm # perform operation
fadd.d f6, f12, f3, rne # perform operation
fadd.d f6, f12, f3, rtz # perform operation
fadd.d f6, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x26, 0xf8c6df36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fadd.d f26, f10, f3, dyn # perform operation
fadd.d f26, f10, f3, rdn # perform operation
fadd.d f26, f10, f3, rmm # perform operation
fadd.d f26, f10, f3, rne # perform operation
fadd.d f26, f10, f3, rtz # perform operation
fadd.d f26, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x6, 0x96e456c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fadd.d f6, f14, f29, dyn # perform operation
fadd.d f6, f14, f29, rdn # perform operation
fadd.d f6, f14, f29, rmm # perform operation
fadd.d f6, f14, f29, rne # perform operation
fadd.d f6, f14, f29, rtz # perform operation
fadd.d f6, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x29, 0xd83286c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fadd.d f29, f12, f17, dyn # perform operation
fadd.d f29, f12, f17, rdn # perform operation
fadd.d f29, f12, f17, rmm # perform operation
fadd.d f29, f12, f17, rne # perform operation
fadd.d f29, f12, f17, rtz # perform operation
fadd.d f29, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x24, 0xe528798c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fadd.d f24, f26, f28, dyn # perform operation
fadd.d f24, f26, f28, rdn # perform operation
fadd.d f24, f26, f28, rmm # perform operation
fadd.d f24, f26, f28, rne # perform operation
fadd.d f24, f26, f28, rtz # perform operation
fadd.d f24, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x4, 0x1ab58201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
fadd.d f4, f10, f25, dyn # perform operation
fadd.d f4, f10, f25, rdn # perform operation
fadd.d f4, f10, f25, rmm # perform operation
fadd.d f4, f10, f25, rne # perform operation
fadd.d f4, f10, f25, rtz # perform operation
fadd.d f4, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x23, 0x3264e660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fadd.d f23, f20, f25, dyn # perform operation
fadd.d f23, f20, f25, rdn # perform operation
fadd.d f23, f20, f25, rmm # perform operation
fadd.d f23, f20, f25, rne # perform operation
fadd.d f23, f20, f25, rtz # perform operation
fadd.d f23, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x25, 0x2cb5b846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fadd.d f25, f4, f6, dyn # perform operation
fadd.d f25, f4, f6, rdn # perform operation
fadd.d f25, f4, f6, rmm # perform operation
fadd.d f25, f4, f6, rne # perform operation
fadd.d f25, f4, f6, rtz # perform operation
fadd.d f25, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x2, 0x69844270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fadd.d f2, f8, f31, dyn # perform operation
fadd.d f2, f8, f31, rdn # perform operation
fadd.d f2, f8, f31, rmm # perform operation
fadd.d f2, f8, f31, rne # perform operation
fadd.d f2, f8, f31, rtz # perform operation
fadd.d f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x20, 0x77a6ad98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fadd.d f20, f16, f28, dyn # perform operation
fadd.d f20, f16, f28, rdn # perform operation
fadd.d f20, f16, f28, rmm # perform operation
fadd.d f20, f16, f28, rne # perform operation
fadd.d f20, f16, f28, rtz # perform operation
fadd.d f20, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x12, 0x4f76d221 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fadd.d f12, f5, f16, dyn # perform operation
fadd.d f12, f5, f16, rdn # perform operation
fadd.d f12, f5, f16, rmm # perform operation
fadd.d f12, f5, f16, rne # perform operation
fadd.d f12, f5, f16, rtz # perform operation
fadd.d f12, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x14, 0x448df23c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fadd.d f14, f1, f5, dyn # perform operation
fadd.d f14, f1, f5, rdn # perform operation
fadd.d f14, f1, f5, rmm # perform operation
fadd.d f14, f1, f5, rne # perform operation
fadd.d f14, f1, f5, rtz # perform operation
fadd.d f14, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x14, 0x9aaa379b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fadd.d f14, f22, f10, dyn # perform operation
fadd.d f14, f22, f10, rdn # perform operation
fadd.d f14, f22, f10, rmm # perform operation
fadd.d f14, f22, f10, rne # perform operation
fadd.d f14, f22, f10, rtz # perform operation
fadd.d f14, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x24, 0xe35e5df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fadd.d f24, f4, f1, dyn # perform operation
fadd.d f24, f4, f1, rdn # perform operation
fadd.d f24, f4, f1, rmm # perform operation
fadd.d f24, f4, f1, rne # perform operation
fadd.d f24, f4, f1, rtz # perform operation
fadd.d f24, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x17, 0xd1352ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fadd.d f17, f22, f6, dyn # perform operation
fadd.d f17, f22, f6, rdn # perform operation
fadd.d f17, f22, f6, rmm # perform operation
fadd.d f17, f22, f6, rne # perform operation
fadd.d f17, f22, f6, rtz # perform operation
fadd.d f17, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x3, 0xe0c8cc8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fadd.d f3, f9, f31, dyn # perform operation
fadd.d f3, f9, f31, rdn # perform operation
fadd.d f3, f9, f31, rmm # perform operation
fadd.d f3, f9, f31, rne # perform operation
fadd.d f3, f9, f31, rtz # perform operation
fadd.d f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x26, 0xc2895bb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
fadd.d f26, f12, f10, dyn # perform operation
fadd.d f26, f12, f10, rdn # perform operation
fadd.d f26, f12, f10, rmm # perform operation
fadd.d f26, f12, f10, rne # perform operation
fadd.d f26, f12, f10, rtz # perform operation
fadd.d f26, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x24, 0xb9d5dab4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fadd.d f24, f9, f16, dyn # perform operation
fadd.d f24, f9, f16, rdn # perform operation
fadd.d f24, f9, f16, rmm # perform operation
fadd.d f24, f9, f16, rne # perform operation
fadd.d f24, f9, f16, rtz # perform operation
fadd.d f24, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x29, 0xe30a9bf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fadd.d f29, f15, f8, dyn # perform operation
fadd.d f29, f15, f8, rdn # perform operation
fadd.d f29, f15, f8, rmm # perform operation
fadd.d f29, f15, f8, rne # perform operation
fadd.d f29, f15, f8, rtz # perform operation
fadd.d f29, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x27, 0x314c04af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fadd.d f27, f7, f25, dyn # perform operation
fadd.d f27, f7, f25, rdn # perform operation
fadd.d f27, f7, f25, rmm # perform operation
fadd.d f27, f7, f25, rne # perform operation
fadd.d f27, f7, f25, rtz # perform operation
fadd.d f27, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x23, 0x4ca20a21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fadd.d f23, f28, f5, dyn # perform operation
fadd.d f23, f28, f5, rdn # perform operation
fadd.d f23, f28, f5, rmm # perform operation
fadd.d f23, f28, f5, rne # perform operation
fadd.d f23, f28, f5, rtz # perform operation
fadd.d f23, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x16, 0x7e997a32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fadd.d f16, f29, f31, dyn # perform operation
fadd.d f16, f29, f31, rdn # perform operation
fadd.d f16, f29, f31, rmm # perform operation
fadd.d f16, f29, f31, rne # perform operation
fadd.d f16, f29, f31, rtz # perform operation
fadd.d f16, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f29, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x27, 0x460e4974 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
fadd.d f27, f25, f4, dyn # perform operation
fadd.d f27, f25, f4, rdn # perform operation
fadd.d f27, f25, f4, rmm # perform operation
fadd.d f27, f25, f4, rne # perform operation
fadd.d f27, f25, f4, rtz # perform operation
fadd.d f27, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x27, 0x771606ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fadd.d f27, f31, f23, dyn # perform operation
fadd.d f27, f31, f23, rdn # perform operation
fadd.d f27, f31, f23, rmm # perform operation
fadd.d f27, f31, f23, rne # perform operation
fadd.d f27, f31, f23, rtz # perform operation
fadd.d f27, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x15, 0xc89e96b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fadd.d f15, f8, f12, dyn # perform operation
fadd.d f15, f8, f12, rdn # perform operation
fadd.d f15, f8, f12, rmm # perform operation
fadd.d f15, f8, f12, rne # perform operation
fadd.d f15, f8, f12, rtz # perform operation
fadd.d f15, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x13, 0xcf451d38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fadd.d f13, f5, f10, dyn # perform operation
fadd.d f13, f5, f10, rdn # perform operation
fadd.d f13, f5, f10, rmm # perform operation
fadd.d f13, f5, f10, rne # perform operation
fadd.d f13, f5, f10, rtz # perform operation
fadd.d f13, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x17, 0x400b020e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
fadd.d f17, f22, f5, dyn # perform operation
fadd.d f17, f22, f5, rdn # perform operation
fadd.d f17, f22, f5, rmm # perform operation
fadd.d f17, f22, f5, rne # perform operation
fadd.d f17, f22, f5, rtz # perform operation
fadd.d f17, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x2, 0x7269afbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fadd.d f2, f24, f9, dyn # perform operation
fadd.d f2, f24, f9, rdn # perform operation
fadd.d f2, f24, f9, rmm # perform operation
fadd.d f2, f24, f9, rne # perform operation
fadd.d f2, f24, f9, rtz # perform operation
fadd.d f2, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x28, 0x80ad2d1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
fadd.d f28, f16, f31, dyn # perform operation
fadd.d f28, f16, f31, rdn # perform operation
fadd.d f28, f16, f31, rmm # perform operation
fadd.d f28, f16, f31, rne # perform operation
fadd.d f28, f16, f31, rtz # perform operation
fadd.d f28, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x5, 0x9e45bcf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fadd.d f5, f6, f20, dyn # perform operation
fadd.d f5, f6, f20, rdn # perform operation
fadd.d f5, f6, f20, rmm # perform operation
fadd.d f5, f6, f20, rne # perform operation
fadd.d f5, f6, f20, rtz # perform operation
fadd.d f5, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x17, 0xb624cdc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fadd.d f17, f9, f31, dyn # perform operation
fadd.d f17, f9, f31, rdn # perform operation
fadd.d f17, f9, f31, rmm # perform operation
fadd.d f17, f9, f31, rne # perform operation
fadd.d f17, f9, f31, rtz # perform operation
fadd.d f17, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x5, 0x3682ecc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fadd.d f5, f18, f1, dyn # perform operation
fadd.d f5, f18, f1, rdn # perform operation
fadd.d f5, f18, f1, rmm # perform operation
fadd.d f5, f18, f1, rne # perform operation
fadd.d f5, f18, f1, rtz # perform operation
fadd.d f5, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x13, 0xc657daf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
fadd.d f13, f15, f1, dyn # perform operation
fadd.d f13, f15, f1, rdn # perform operation
fadd.d f13, f15, f1, rmm # perform operation
fadd.d f13, f15, f1, rne # perform operation
fadd.d f13, f15, f1, rtz # perform operation
fadd.d f13, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f15, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x30, 0x1988f819 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fadd.d f30, f9, f16, dyn # perform operation
fadd.d f30, f9, f16, rdn # perform operation
fadd.d f30, f9, f16, rmm # perform operation
fadd.d f30, f9, f16, rne # perform operation
fadd.d f30, f9, f16, rtz # perform operation
fadd.d f30, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x2, 0xa420619b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fadd.d f2, f17, f25, dyn # perform operation
fadd.d f2, f17, f25, rdn # perform operation
fadd.d f2, f17, f25, rmm # perform operation
fadd.d f2, f17, f25, rne # perform operation
fadd.d f2, f17, f25, rtz # perform operation
fadd.d f2, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x31, 0x8a927018 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fadd.d f31, f22, f4, dyn # perform operation
fadd.d f31, f22, f4, rdn # perform operation
fadd.d f31, f22, f4, rmm # perform operation
fadd.d f31, f22, f4, rne # perform operation
fadd.d f31, f22, f4, rtz # perform operation
fadd.d f31, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x25, 0x5c55eb54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fadd.d f25, f23, f1, dyn # perform operation
fadd.d f25, f23, f1, rdn # perform operation
fadd.d f25, f23, f1, rmm # perform operation
fadd.d f25, f23, f1, rne # perform operation
fadd.d f25, f23, f1, rtz # perform operation
fadd.d f25, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x28, 0x0f4a35dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fadd.d f28, f8, f16, dyn # perform operation
fadd.d f28, f8, f16, rdn # perform operation
fadd.d f28, f8, f16, rmm # perform operation
fadd.d f28, f8, f16, rne # perform operation
fadd.d f28, f8, f16, rtz # perform operation
fadd.d f28, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x22, 0xe2077eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fadd.d f22, f17, f23, dyn # perform operation
fadd.d f22, f17, f23, rdn # perform operation
fadd.d f22, f17, f23, rmm # perform operation
fadd.d f22, f17, f23, rne # perform operation
fadd.d f22, f17, f23, rtz # perform operation
fadd.d f22, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x15, 0xa60d08e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fadd.d f15, f11, f18, dyn # perform operation
fadd.d f15, f11, f18, rdn # perform operation
fadd.d f15, f11, f18, rmm # perform operation
fadd.d f15, f11, f18, rne # perform operation
fadd.d f15, f11, f18, rtz # perform operation
fadd.d f15, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x27, 0xdcfa44fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fadd.d f27, f16, f14, dyn # perform operation
fadd.d f27, f16, f14, rdn # perform operation
fadd.d f27, f16, f14, rmm # perform operation
fadd.d f27, f16, f14, rne # perform operation
fadd.d f27, f16, f14, rtz # perform operation
fadd.d f27, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x23, 0xcf9b81ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fadd.d f23, f1, f7, dyn # perform operation
fadd.d f23, f1, f7, rdn # perform operation
fadd.d f23, f1, f7, rmm # perform operation
fadd.d f23, f1, f7, rne # perform operation
fadd.d f23, f1, f7, rtz # perform operation
fadd.d f23, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x29, 0x10e261cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fadd.d f29, f18, f11, dyn # perform operation
fadd.d f29, f18, f11, rdn # perform operation
fadd.d f29, f18, f11, rmm # perform operation
fadd.d f29, f18, f11, rne # perform operation
fadd.d f29, f18, f11, rtz # perform operation
fadd.d f29, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x8, 0xbfce6770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
fadd.d f8, f19, f28, dyn # perform operation
fadd.d f8, f19, f28, rdn # perform operation
fadd.d f8, f19, f28, rmm # perform operation
fadd.d f8, f19, f28, rne # perform operation
fadd.d f8, f19, f28, rtz # perform operation
fadd.d f8, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x1, 0x57a3d472 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fadd.d f1, f21, f4, dyn # perform operation
fadd.d f1, f21, f4, rdn # perform operation
fadd.d f1, f21, f4, rmm # perform operation
fadd.d f1, f21, f4, rne # perform operation
fadd.d f1, f21, f4, rtz # perform operation
fadd.d f1, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x2, 0xabdf8744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fadd.d f2, f12, f9, dyn # perform operation
fadd.d f2, f12, f9, rdn # perform operation
fadd.d f2, f12, f9, rmm # perform operation
fadd.d f2, f12, f9, rne # perform operation
fadd.d f2, f12, f9, rtz # perform operation
fadd.d f2, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x18, 0xeedbd1ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fadd.d f18, f7, f4, dyn # perform operation
fadd.d f18, f7, f4, rdn # perform operation
fadd.d f18, f7, f4, rmm # perform operation
fadd.d f18, f7, f4, rne # perform operation
fadd.d f18, f7, f4, rtz # perform operation
fadd.d f18, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x16, 0xc4a06571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fadd.d f16, f13, f12, dyn # perform operation
fadd.d f16, f13, f12, rdn # perform operation
fadd.d f16, f13, f12, rmm # perform operation
fadd.d f16, f13, f12, rne # perform operation
fadd.d f16, f13, f12, rtz # perform operation
fadd.d f16, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x1, 0x78c8a60a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fadd.d f1, f30, f19, dyn # perform operation
fadd.d f1, f30, f19, rdn # perform operation
fadd.d f1, f30, f19, rmm # perform operation
fadd.d f1, f30, f19, rne # perform operation
fadd.d f1, f30, f19, rtz # perform operation
fadd.d f1, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x26, 0xd9316b72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fadd.d f26, f14, f9, dyn # perform operation
fadd.d f26, f14, f9, rdn # perform operation
fadd.d f26, f14, f9, rmm # perform operation
fadd.d f26, f14, f9, rne # perform operation
fadd.d f26, f14, f9, rtz # perform operation
fadd.d f26, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x2, 0x28fe47af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fadd.d f2, f19, f31, dyn # perform operation
fadd.d f2, f19, f31, rdn # perform operation
fadd.d f2, f19, f31, rmm # perform operation
fadd.d f2, f19, f31, rne # perform operation
fadd.d f2, f19, f31, rtz # perform operation
fadd.d f2, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x24, 0xcd57ff7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fadd.d f24, f23, f21, dyn # perform operation
fadd.d f24, f23, f21, rdn # perform operation
fadd.d f24, f23, f21, rmm # perform operation
fadd.d f24, f23, f21, rne # perform operation
fadd.d f24, f23, f21, rtz # perform operation
fadd.d f24, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x8, 0x43e4e76a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fadd.d f8, f6, f23, dyn # perform operation
fadd.d f8, f6, f23, rdn # perform operation
fadd.d f8, f6, f23, rmm # perform operation
fadd.d f8, f6, f23, rne # perform operation
fadd.d f8, f6, f23, rtz # perform operation
fadd.d f8, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x27, 0x5a65bb98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fadd.d f27, f21, f2, dyn # perform operation
fadd.d f27, f21, f2, rdn # perform operation
fadd.d f27, f21, f2, rmm # perform operation
fadd.d f27, f21, f2, rne # perform operation
fadd.d f27, f21, f2, rtz # perform operation
fadd.d f27, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x10, 0xc4b83be6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fadd.d f10, f11, f25, dyn # perform operation
fadd.d f10, f11, f25, rdn # perform operation
fadd.d f10, f11, f25, rmm # perform operation
fadd.d f10, f11, f25, rne # perform operation
fadd.d f10, f11, f25, rtz # perform operation
fadd.d f10, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x23, 0xc490f66d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fadd.d f23, f31, f16, dyn # perform operation
fadd.d f23, f31, f16, rdn # perform operation
fadd.d f23, f31, f16, rmm # perform operation
fadd.d f23, f31, f16, rne # perform operation
fadd.d f23, f31, f16, rtz # perform operation
fadd.d f23, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x10, 0xabb2df39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fadd.d f10, f11, f12, dyn # perform operation
fadd.d f10, f11, f12, rdn # perform operation
fadd.d f10, f11, f12, rmm # perform operation
fadd.d f10, f11, f12, rne # perform operation
fadd.d f10, f11, f12, rtz # perform operation
fadd.d f10, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x29, 0xdc7c7e0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fadd.d f29, f24, f11, dyn # perform operation
fadd.d f29, f24, f11, rdn # perform operation
fadd.d f29, f24, f11, rmm # perform operation
fadd.d f29, f24, f11, rne # perform operation
fadd.d f29, f24, f11, rtz # perform operation
fadd.d f29, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x11, 0x8c1f3612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fadd.d f11, f6, f5, dyn # perform operation
fadd.d f11, f6, f5, rdn # perform operation
fadd.d f11, f6, f5, rmm # perform operation
fadd.d f11, f6, f5, rne # perform operation
fadd.d f11, f6, f5, rtz # perform operation
fadd.d f11, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x20, 0x0938c1fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fadd.d f20, f10, f2, dyn # perform operation
fadd.d f20, f10, f2, rdn # perform operation
fadd.d f20, f10, f2, rmm # perform operation
fadd.d f20, f10, f2, rne # perform operation
fadd.d f20, f10, f2, rtz # perform operation
fadd.d f20, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x21, 0x5d2c2947 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fadd.d f21, f6, f30, dyn # perform operation
fadd.d f21, f6, f30, rdn # perform operation
fadd.d f21, f6, f30, rmm # perform operation
fadd.d f21, f6, f30, rne # perform operation
fadd.d f21, f6, f30, rtz # perform operation
fadd.d f21, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x7, 0xe5fcc208 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fadd.d f7, f13, f31, dyn # perform operation
fadd.d f7, f13, f31, rdn # perform operation
fadd.d f7, f13, f31, rmm # perform operation
fadd.d f7, f13, f31, rne # perform operation
fadd.d f7, f13, f31, rtz # perform operation
fadd.d f7, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x23, 0x25e8b120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
fadd.d f23, f13, f11, dyn # perform operation
fadd.d f23, f13, f11, rdn # perform operation
fadd.d f23, f13, f11, rmm # perform operation
fadd.d f23, f13, f11, rne # perform operation
fadd.d f23, f13, f11, rtz # perform operation
fadd.d f23, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x15, 0x9c058259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fadd.d f15, f7, f27, dyn # perform operation
fadd.d f15, f7, f27, rdn # perform operation
fadd.d f15, f7, f27, rmm # perform operation
fadd.d f15, f7, f27, rne # perform operation
fadd.d f15, f7, f27, rtz # perform operation
fadd.d f15, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x1, 0x47ba0d57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fadd.d f1, f28, f8, dyn # perform operation
fadd.d f1, f28, f8, rdn # perform operation
fadd.d f1, f28, f8, rmm # perform operation
fadd.d f1, f28, f8, rne # perform operation
fadd.d f1, f28, f8, rtz # perform operation
fadd.d f1, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x2, 0x9aa011a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fadd.d f2, f22, f14, dyn # perform operation
fadd.d f2, f22, f14, rdn # perform operation
fadd.d f2, f22, f14, rmm # perform operation
fadd.d f2, f22, f14, rne # perform operation
fadd.d f2, f22, f14, rtz # perform operation
fadd.d f2, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x27, 0x9cd4e063 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
fadd.d f27, f5, f25, dyn # perform operation
fadd.d f27, f5, f25, rdn # perform operation
fadd.d f27, f5, f25, rmm # perform operation
fadd.d f27, f5, f25, rne # perform operation
fadd.d f27, f5, f25, rtz # perform operation
fadd.d f27, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f5, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x15, 0x86c4b666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fadd.d f15, f11, f8, dyn # perform operation
fadd.d f15, f11, f8, rdn # perform operation
fadd.d f15, f11, f8, rmm # perform operation
fadd.d f15, f11, f8, rne # perform operation
fadd.d f15, f11, f8, rtz # perform operation
fadd.d f15, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x3, 0xdf37e77c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fadd.d f3, f13, f1, dyn # perform operation
fadd.d f3, f13, f1, rdn # perform operation
fadd.d f3, f13, f1, rmm # perform operation
fadd.d f3, f13, f1, rne # perform operation
fadd.d f3, f13, f1, rtz # perform operation
fadd.d f3, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x2, 0xfa3ae235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fadd.d f2, f5, f14, dyn # perform operation
fadd.d f2, f5, f14, rdn # perform operation
fadd.d f2, f5, f14, rmm # perform operation
fadd.d f2, f5, f14, rne # perform operation
fadd.d f2, f5, f14, rtz # perform operation
fadd.d f2, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x28, 0xf8f823ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fadd.d f28, f26, f18, dyn # perform operation
fadd.d f28, f26, f18, rdn # perform operation
fadd.d f28, f26, f18, rmm # perform operation
fadd.d f28, f26, f18, rne # perform operation
fadd.d f28, f26, f18, rtz # perform operation
fadd.d f28, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x17, 0xff90668d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
fadd.d f17, f29, f16, dyn # perform operation
fadd.d f17, f29, f16, rdn # perform operation
fadd.d f17, f29, f16, rmm # perform operation
fadd.d f17, f29, f16, rne # perform operation
fadd.d f17, f29, f16, rtz # perform operation
fadd.d f17, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x9, 0x26f01f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fadd.d f9, f17, f25, dyn # perform operation
fadd.d f9, f17, f25, rdn # perform operation
fadd.d f9, f17, f25, rmm # perform operation
fadd.d f9, f17, f25, rne # perform operation
fadd.d f9, f17, f25, rtz # perform operation
fadd.d f9, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x10, 0x25bf3fa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fadd.d f10, f26, f11, dyn # perform operation
fadd.d f10, f26, f11, rdn # perform operation
fadd.d f10, f26, f11, rmm # perform operation
fadd.d f10, f26, f11, rne # perform operation
fadd.d f10, f26, f11, rtz # perform operation
fadd.d f10, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x11, 0xdba41334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fadd.d f11, f23, f3, dyn # perform operation
fadd.d f11, f23, f3, rdn # perform operation
fadd.d f11, f23, f3, rmm # perform operation
fadd.d f11, f23, f3, rne # perform operation
fadd.d f11, f23, f3, rtz # perform operation
fadd.d f11, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x8, 0xc1f9adfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fadd.d f8, f5, f20, dyn # perform operation
fadd.d f8, f5, f20, rdn # perform operation
fadd.d f8, f5, f20, rmm # perform operation
fadd.d f8, f5, f20, rne # perform operation
fadd.d f8, f5, f20, rtz # perform operation
fadd.d f8, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x18, 0xf8a93aea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fadd.d f18, f28, f1, dyn # perform operation
fadd.d f18, f28, f1, rdn # perform operation
fadd.d f18, f28, f1, rmm # perform operation
fadd.d f18, f28, f1, rne # perform operation
fadd.d f18, f28, f1, rtz # perform operation
fadd.d f18, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x17, 0x64d4345f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fadd.d f17, f6, f5, dyn # perform operation
fadd.d f17, f6, f5, rdn # perform operation
fadd.d f17, f6, f5, rmm # perform operation
fadd.d f17, f6, f5, rne # perform operation
fadd.d f17, f6, f5, rtz # perform operation
fadd.d f17, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x17, 0x6135730c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fadd.d f17, f4, f31, dyn # perform operation
fadd.d f17, f4, f31, rdn # perform operation
fadd.d f17, f4, f31, rmm # perform operation
fadd.d f17, f4, f31, rne # perform operation
fadd.d f17, f4, f31, rtz # perform operation
fadd.d f17, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x2, 0x6338d4a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fadd.d f2, f5, f11, dyn # perform operation
fadd.d f2, f5, f11, rdn # perform operation
fadd.d f2, f5, f11, rmm # perform operation
fadd.d f2, f5, f11, rne # perform operation
fadd.d f2, f5, f11, rtz # perform operation
fadd.d f2, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x14, 0xce8f452a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fadd.d f14, f7, f6, dyn # perform operation
fadd.d f14, f7, f6, rdn # perform operation
fadd.d f14, f7, f6, rmm # perform operation
fadd.d f14, f7, f6, rne # perform operation
fadd.d f14, f7, f6, rtz # perform operation
fadd.d f14, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x14, 0x47256d5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
fadd.d f14, f17, f9, dyn # perform operation
fadd.d f14, f17, f9, rdn # perform operation
fadd.d f14, f17, f9, rmm # perform operation
fadd.d f14, f17, f9, rne # perform operation
fadd.d f14, f17, f9, rtz # perform operation
fadd.d f14, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x2, 0x377eac8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fadd.d f2, f21, f14, dyn # perform operation
fadd.d f2, f21, f14, rdn # perform operation
fadd.d f2, f21, f14, rmm # perform operation
fadd.d f2, f21, f14, rne # perform operation
fadd.d f2, f21, f14, rtz # perform operation
fadd.d f2, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x23, 0xd0b4569f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fadd.d f23, f22, f28, dyn # perform operation
fadd.d f23, f22, f28, rdn # perform operation
fadd.d f23, f22, f28, rmm # perform operation
fadd.d f23, f22, f28, rne # perform operation
fadd.d f23, f22, f28, rtz # perform operation
fadd.d f23, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x25, 0x61f2513e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fadd.d f25, f23, f20, dyn # perform operation
fadd.d f25, f23, f20, rdn # perform operation
fadd.d f25, f23, f20, rmm # perform operation
fadd.d f25, f23, f20, rne # perform operation
fadd.d f25, f23, f20, rtz # perform operation
fadd.d f25, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0x9c186f99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fadd.d f31, f26, f14, dyn # perform operation
fadd.d f31, f26, f14, rdn # perform operation
fadd.d f31, f26, f14, rmm # perform operation
fadd.d f31, f26, f14, rne # perform operation
fadd.d f31, f26, f14, rtz # perform operation
fadd.d f31, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x10, 0x3c04b7af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fadd.d f10, f12, f2, dyn # perform operation
fadd.d f10, f12, f2, rdn # perform operation
fadd.d f10, f12, f2, rmm # perform operation
fadd.d f10, f12, f2, rne # perform operation
fadd.d f10, f12, f2, rtz # perform operation
fadd.d f10, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x23, 0x587315d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fadd.d f23, f8, f19, dyn # perform operation
fadd.d f23, f8, f19, rdn # perform operation
fadd.d f23, f8, f19, rmm # perform operation
fadd.d f23, f8, f19, rne # perform operation
fadd.d f23, f8, f19, rtz # perform operation
fadd.d f23, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x6, 0x2dad21e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fadd.d f6, f15, f26, dyn # perform operation
fadd.d f6, f15, f26, rdn # perform operation
fadd.d f6, f15, f26, rmm # perform operation
fadd.d f6, f15, f26, rne # perform operation
fadd.d f6, f15, f26, rtz # perform operation
fadd.d f6, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x4, 0x2bb0f70e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fadd.d f4, f25, f31, dyn # perform operation
fadd.d f4, f25, f31, rdn # perform operation
fadd.d f4, f25, f31, rmm # perform operation
fadd.d f4, f25, f31, rne # perform operation
fadd.d f4, f25, f31, rtz # perform operation
fadd.d f4, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x6, 0x872ed0e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
fadd.d f6, f15, f14, dyn # perform operation
fadd.d f6, f15, f14, rdn # perform operation
fadd.d f6, f15, f14, rmm # perform operation
fadd.d f6, f15, f14, rne # perform operation
fadd.d f6, f15, f14, rtz # perform operation
fadd.d f6, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x6, 0x735a5f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fadd.d f6, f27, f11, dyn # perform operation
fadd.d f6, f27, f11, rdn # perform operation
fadd.d f6, f27, f11, rmm # perform operation
fadd.d f6, f27, f11, rne # perform operation
fadd.d f6, f27, f11, rtz # perform operation
fadd.d f6, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x29, 0xc7634a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fadd.d f29, f22, f9, dyn # perform operation
fadd.d f29, f22, f9, rdn # perform operation
fadd.d f29, f22, f9, rmm # perform operation
fadd.d f29, f22, f9, rne # perform operation
fadd.d f29, f22, f9, rtz # perform operation
fadd.d f29, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x4, 0x2f98252c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fadd.d f4, f5, f19, dyn # perform operation
fadd.d f4, f5, f19, rdn # perform operation
fadd.d f4, f5, f19, rmm # perform operation
fadd.d f4, f5, f19, rne # perform operation
fadd.d f4, f5, f19, rtz # perform operation
fadd.d f4, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x16, 0xb9a3d601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fadd.d f16, f28, f2, dyn # perform operation
fadd.d f16, f28, f2, rdn # perform operation
fadd.d f16, f28, f2, rmm # perform operation
fadd.d f16, f28, f2, rne # perform operation
fadd.d f16, f28, f2, rtz # perform operation
fadd.d f16, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x13, 0x2298b8ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fadd.d f13, f28, f20, dyn # perform operation
fadd.d f13, f28, f20, rdn # perform operation
fadd.d f13, f28, f20, rmm # perform operation
fadd.d f13, f28, f20, rne # perform operation
fadd.d f13, f28, f20, rtz # perform operation
fadd.d f13, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x5, 0xde14a673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fadd.d f5, f6, f26, dyn # perform operation
fadd.d f5, f6, f26, rdn # perform operation
fadd.d f5, f6, f26, rmm # perform operation
fadd.d f5, f6, f26, rne # perform operation
fadd.d f5, f6, f26, rtz # perform operation
fadd.d f5, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x9, 0xfd7a87f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fadd.d f9, f4, f26, dyn # perform operation
fadd.d f9, f4, f26, rdn # perform operation
fadd.d f9, f4, f26, rmm # perform operation
fadd.d f9, f4, f26, rne # perform operation
fadd.d f9, f4, f26, rtz # perform operation
fadd.d f9, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f4, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x25, 0x95d79a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fadd.d f25, f14, f26, dyn # perform operation
fadd.d f25, f14, f26, rdn # perform operation
fadd.d f25, f14, f26, rmm # perform operation
fadd.d f25, f14, f26, rne # perform operation
fadd.d f25, f14, f26, rtz # perform operation
fadd.d f25, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x18, 0x47964959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fadd.d f18, f21, f19, dyn # perform operation
fadd.d f18, f21, f19, rdn # perform operation
fadd.d f18, f21, f19, rmm # perform operation
fadd.d f18, f21, f19, rne # perform operation
fadd.d f18, f21, f19, rtz # perform operation
fadd.d f18, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x16, 0x673a49bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fadd.d f16, f9, f19, dyn # perform operation
fadd.d f16, f9, f19, rdn # perform operation
fadd.d f16, f9, f19, rmm # perform operation
fadd.d f16, f9, f19, rne # perform operation
fadd.d f16, f9, f19, rtz # perform operation
fadd.d f16, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x18, 0x1022e534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fadd.d f18, f5, f29, dyn # perform operation
fadd.d f18, f5, f29, rdn # perform operation
fadd.d f18, f5, f29, rmm # perform operation
fadd.d f18, f5, f29, rne # perform operation
fadd.d f18, f5, f29, rtz # perform operation
fadd.d f18, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x13, 0xf78eb1d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fadd.d f13, f6, f23, dyn # perform operation
fadd.d f13, f6, f23, rdn # perform operation
fadd.d f13, f6, f23, rmm # perform operation
fadd.d f13, f6, f23, rne # perform operation
fadd.d f13, f6, f23, rtz # perform operation
fadd.d f13, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x29, 0x4a79d4fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fadd.d f29, f31, f7, dyn # perform operation
fadd.d f29, f31, f7, rdn # perform operation
fadd.d f29, f31, f7, rmm # perform operation
fadd.d f29, f31, f7, rne # perform operation
fadd.d f29, f31, f7, rtz # perform operation
fadd.d f29, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x5, 0x415fb1b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fadd.d f5, f14, f15, dyn # perform operation
fadd.d f5, f14, f15, rdn # perform operation
fadd.d f5, f14, f15, rmm # perform operation
fadd.d f5, f14, f15, rne # perform operation
fadd.d f5, f14, f15, rtz # perform operation
fadd.d f5, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x20, 0x8c7c6041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fadd.d f20, f24, f19, dyn # perform operation
fadd.d f20, f24, f19, rdn # perform operation
fadd.d f20, f24, f19, rmm # perform operation
fadd.d f20, f24, f19, rne # perform operation
fadd.d f20, f24, f19, rtz # perform operation
fadd.d f20, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x30, 0x47759403 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fadd.d f30, f13, f18, dyn # perform operation
fadd.d f30, f13, f18, rdn # perform operation
fadd.d f30, f13, f18, rmm # perform operation
fadd.d f30, f13, f18, rne # perform operation
fadd.d f30, f13, f18, rtz # perform operation
fadd.d f30, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x19, 0xc88174c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fadd.d f19, f25, f2, dyn # perform operation
fadd.d f19, f25, f2, rdn # perform operation
fadd.d f19, f25, f2, rmm # perform operation
fadd.d f19, f25, f2, rne # perform operation
fadd.d f19, f25, f2, rtz # perform operation
fadd.d f19, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0xa310e552 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fadd.d f12, f14, f23, dyn # perform operation
fadd.d f12, f14, f23, rdn # perform operation
fadd.d f12, f14, f23, rmm # perform operation
fadd.d f12, f14, f23, rne # perform operation
fadd.d f12, f14, f23, rtz # perform operation
fadd.d f12, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x19, 0xa36aa9be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fadd.d f19, f20, f6, dyn # perform operation
fadd.d f19, f20, f6, rdn # perform operation
fadd.d f19, f20, f6, rmm # perform operation
fadd.d f19, f20, f6, rne # perform operation
fadd.d f19, f20, f6, rtz # perform operation
fadd.d f19, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f20, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x9, 0x7ca91a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fadd.d f9, f29, f23, dyn # perform operation
fadd.d f9, f29, f23, rdn # perform operation
fadd.d f9, f29, f23, rmm # perform operation
fadd.d f9, f29, f23, rne # perform operation
fadd.d f9, f29, f23, rtz # perform operation
fadd.d f9, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x10, 0x2e1c36da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fadd.d f10, f11, f31, dyn # perform operation
fadd.d f10, f11, f31, rdn # perform operation
fadd.d f10, f11, f31, rmm # perform operation
fadd.d f10, f11, f31, rne # perform operation
fadd.d f10, f11, f31, rtz # perform operation
fadd.d f10, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x28, 0x5729c334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fadd.d f28, f21, f22, dyn # perform operation
fadd.d f28, f21, f22, rdn # perform operation
fadd.d f28, f21, f22, rmm # perform operation
fadd.d f28, f21, f22, rne # perform operation
fadd.d f28, f21, f22, rtz # perform operation
fadd.d f28, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x17, 0xcfc403ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fadd.d f17, f22, f20, dyn # perform operation
fadd.d f17, f22, f20, rdn # perform operation
fadd.d f17, f22, f20, rmm # perform operation
fadd.d f17, f22, f20, rne # perform operation
fadd.d f17, f22, f20, rtz # perform operation
fadd.d f17, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x7, 0xc2002f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fadd.d f7, f5, f17, dyn # perform operation
fadd.d f7, f5, f17, rdn # perform operation
fadd.d f7, f5, f17, rmm # perform operation
fadd.d f7, f5, f17, rne # perform operation
fadd.d f7, f5, f17, rtz # perform operation
fadd.d f7, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x20, 0x20ee6c28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fadd.d f20, f12, f11, dyn # perform operation
fadd.d f20, f12, f11, rdn # perform operation
fadd.d f20, f12, f11, rmm # perform operation
fadd.d f20, f12, f11, rne # perform operation
fadd.d f20, f12, f11, rtz # perform operation
fadd.d f20, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f12, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x23, 0x59e1cf32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fadd.d f23, f1, f28, dyn # perform operation
fadd.d f23, f1, f28, rdn # perform operation
fadd.d f23, f1, f28, rmm # perform operation
fadd.d f23, f1, f28, rne # perform operation
fadd.d f23, f1, f28, rtz # perform operation
fadd.d f23, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x10, 0x4fea53b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fadd.d f10, f6, f14, dyn # perform operation
fadd.d f10, f6, f14, rdn # perform operation
fadd.d f10, f6, f14, rmm # perform operation
fadd.d f10, f6, f14, rne # perform operation
fadd.d f10, f6, f14, rtz # perform operation
fadd.d f10, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x6, 0x8218f267 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fadd.d f6, f25, f21, dyn # perform operation
fadd.d f6, f25, f21, rdn # perform operation
fadd.d f6, f25, f21, rmm # perform operation
fadd.d f6, f25, f21, rne # perform operation
fadd.d f6, f25, f21, rtz # perform operation
fadd.d f6, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x19, 0x51e4a515 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fadd.d f19, f20, f15, dyn # perform operation
fadd.d f19, f20, f15, rdn # perform operation
fadd.d f19, f20, f15, rmm # perform operation
fadd.d f19, f20, f15, rne # perform operation
fadd.d f19, f20, f15, rtz # perform operation
fadd.d f19, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x15, 0xb8267f47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
fadd.d f15, f6, f21, dyn # perform operation
fadd.d f15, f6, f21, rdn # perform operation
fadd.d f15, f6, f21, rmm # perform operation
fadd.d f15, f6, f21, rne # perform operation
fadd.d f15, f6, f21, rtz # perform operation
fadd.d f15, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x16, 0xee43368b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fadd.d f16, f13, f18, dyn # perform operation
fadd.d f16, f13, f18, rdn # perform operation
fadd.d f16, f13, f18, rmm # perform operation
fadd.d f16, f13, f18, rne # perform operation
fadd.d f16, f13, f18, rtz # perform operation
fadd.d f16, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x13, 0xd89dc0a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fadd.d f13, f16, f26, dyn # perform operation
fadd.d f13, f16, f26, rdn # perform operation
fadd.d f13, f16, f26, rmm # perform operation
fadd.d f13, f16, f26, rne # perform operation
fadd.d f13, f16, f26, rtz # perform operation
fadd.d f13, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x28, 0x0cdc5732 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fadd.d f28, f11, f7, dyn # perform operation
fadd.d f28, f11, f7, rdn # perform operation
fadd.d f28, f11, f7, rmm # perform operation
fadd.d f28, f11, f7, rne # perform operation
fadd.d f28, f11, f7, rtz # perform operation
fadd.d f28, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x30, 0xe27a190f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fadd.d f30, f4, f15, dyn # perform operation
fadd.d f30, f4, f15, rdn # perform operation
fadd.d f30, f4, f15, rmm # perform operation
fadd.d f30, f4, f15, rne # perform operation
fadd.d f30, f4, f15, rtz # perform operation
fadd.d f30, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x3, 0x6c6d6234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fadd.d f3, f9, f27, dyn # perform operation
fadd.d f3, f9, f27, rdn # perform operation
fadd.d f3, f9, f27, rmm # perform operation
fadd.d f3, f9, f27, rne # perform operation
fadd.d f3, f9, f27, rtz # perform operation
fadd.d f3, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x13, 0x9855cfb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fadd.d f13, f20, f12, dyn # perform operation
fadd.d f13, f20, f12, rdn # perform operation
fadd.d f13, f20, f12, rmm # perform operation
fadd.d f13, f20, f12, rne # perform operation
fadd.d f13, f20, f12, rtz # perform operation
fadd.d f13, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x28, 0xa5e81270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fadd.d f28, f27, f29, dyn # perform operation
fadd.d f28, f27, f29, rdn # perform operation
fadd.d f28, f27, f29, rmm # perform operation
fadd.d f28, f27, f29, rne # perform operation
fadd.d f28, f27, f29, rtz # perform operation
fadd.d f28, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x25, 0x3f0b7854 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
fadd.d f25, f27, f24, dyn # perform operation
fadd.d f25, f27, f24, rdn # perform operation
fadd.d f25, f27, f24, rmm # perform operation
fadd.d f25, f27, f24, rne # perform operation
fadd.d f25, f27, f24, rtz # perform operation
fadd.d f25, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x14, 0xd62f5a37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
fadd.d f14, f5, f15, dyn # perform operation
fadd.d f14, f5, f15, rdn # perform operation
fadd.d f14, f5, f15, rmm # perform operation
fadd.d f14, f5, f15, rne # perform operation
fadd.d f14, f5, f15, rtz # perform operation
fadd.d f14, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x15, 0x454c2149 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fadd.d f15, f16, f1, dyn # perform operation
fadd.d f15, f16, f1, rdn # perform operation
fadd.d f15, f16, f1, rmm # perform operation
fadd.d f15, f16, f1, rne # perform operation
fadd.d f15, f16, f1, rtz # perform operation
fadd.d f15, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x9, 0x4c3847db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fadd.d f9, f8, f14, dyn # perform operation
fadd.d f9, f8, f14, rdn # perform operation
fadd.d f9, f8, f14, rmm # perform operation
fadd.d f9, f8, f14, rne # perform operation
fadd.d f9, f8, f14, rtz # perform operation
fadd.d f9, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x19, 0x513931cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fadd.d f19, f28, f7, dyn # perform operation
fadd.d f19, f28, f7, rdn # perform operation
fadd.d f19, f28, f7, rmm # perform operation
fadd.d f19, f28, f7, rne # perform operation
fadd.d f19, f28, f7, rtz # perform operation
fadd.d f19, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x27, 0x3252bf30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fadd.d f27, f22, f2, dyn # perform operation
fadd.d f27, f22, f2, rdn # perform operation
fadd.d f27, f22, f2, rmm # perform operation
fadd.d f27, f22, f2, rne # perform operation
fadd.d f27, f22, f2, rtz # perform operation
fadd.d f27, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x5, 0x44a3c3ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fadd.d f5, f8, f1, dyn # perform operation
fadd.d f5, f8, f1, rdn # perform operation
fadd.d f5, f8, f1, rmm # perform operation
fadd.d f5, f8, f1, rne # perform operation
fadd.d f5, f8, f1, rtz # perform operation
fadd.d f5, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x24, 0x987880a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fadd.d f24, f6, f20, dyn # perform operation
fadd.d f24, f6, f20, rdn # perform operation
fadd.d f24, f6, f20, rmm # perform operation
fadd.d f24, f6, f20, rne # perform operation
fadd.d f24, f6, f20, rtz # perform operation
fadd.d f24, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x12, 0x7aed00f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fadd.d f12, f24, f6, dyn # perform operation
fadd.d f12, f24, f6, rdn # perform operation
fadd.d f12, f24, f6, rmm # perform operation
fadd.d f12, f24, f6, rne # perform operation
fadd.d f12, f24, f6, rtz # perform operation
fadd.d f12, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x14, 0xe34107e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fadd.d f14, f26, f24, dyn # perform operation
fadd.d f14, f26, f24, rdn # perform operation
fadd.d f14, f26, f24, rmm # perform operation
fadd.d f14, f26, f24, rne # perform operation
fadd.d f14, f26, f24, rtz # perform operation
fadd.d f14, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x7, 0x5f562b07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fadd.d f7, f24, f10, dyn # perform operation
fadd.d f7, f24, f10, rdn # perform operation
fadd.d f7, f24, f10, rmm # perform operation
fadd.d f7, f24, f10, rne # perform operation
fadd.d f7, f24, f10, rtz # perform operation
fadd.d f7, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x23, 0xcec62c55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fadd.d f23, f29, f12, dyn # perform operation
fadd.d f23, f29, f12, rdn # perform operation
fadd.d f23, f29, f12, rmm # perform operation
fadd.d f23, f29, f12, rne # perform operation
fadd.d f23, f29, f12, rtz # perform operation
fadd.d f23, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x30, 0x503421aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fadd.d f30, f6, f12, dyn # perform operation
fadd.d f30, f6, f12, rdn # perform operation
fadd.d f30, f6, f12, rmm # perform operation
fadd.d f30, f6, f12, rne # perform operation
fadd.d f30, f6, f12, rtz # perform operation
fadd.d f30, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x10, 0xa2c2cb04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
fadd.d f10, f26, f19, dyn # perform operation
fadd.d f10, f26, f19, rdn # perform operation
fadd.d f10, f26, f19, rmm # perform operation
fadd.d f10, f26, f19, rne # perform operation
fadd.d f10, f26, f19, rtz # perform operation
fadd.d f10, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x23, 0xb9abe66c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fadd.d f23, f10, f18, dyn # perform operation
fadd.d f23, f10, f18, rdn # perform operation
fadd.d f23, f10, f18, rmm # perform operation
fadd.d f23, f10, f18, rne # perform operation
fadd.d f23, f10, f18, rtz # perform operation
fadd.d f23, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x16, 0x48f7f4d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fadd.d f16, f22, f11, dyn # perform operation
fadd.d f16, f22, f11, rdn # perform operation
fadd.d f16, f22, f11, rmm # perform operation
fadd.d f16, f22, f11, rne # perform operation
fadd.d f16, f22, f11, rtz # perform operation
fadd.d f16, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x12, 0x46b857ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fadd.d f12, f20, f23, dyn # perform operation
fadd.d f12, f20, f23, rdn # perform operation
fadd.d f12, f20, f23, rmm # perform operation
fadd.d f12, f20, f23, rne # perform operation
fadd.d f12, f20, f23, rtz # perform operation
fadd.d f12, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x14, 0x5ea7b2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fadd.d f14, f26, f31, dyn # perform operation
fadd.d f14, f26, f31, rdn # perform operation
fadd.d f14, f26, f31, rmm # perform operation
fadd.d f14, f26, f31, rne # perform operation
fadd.d f14, f26, f31, rtz # perform operation
fadd.d f14, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x7, 0x909fa8b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fadd.d f7, f9, f16, dyn # perform operation
fadd.d f7, f9, f16, rdn # perform operation
fadd.d f7, f9, f16, rmm # perform operation
fadd.d f7, f9, f16, rne # perform operation
fadd.d f7, f9, f16, rtz # perform operation
fadd.d f7, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x15, 0x532c4462 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fadd.d f15, f12, f29, dyn # perform operation
fadd.d f15, f12, f29, rdn # perform operation
fadd.d f15, f12, f29, rmm # perform operation
fadd.d f15, f12, f29, rne # perform operation
fadd.d f15, f12, f29, rtz # perform operation
fadd.d f15, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x12, 0x41b99b4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fadd.d f12, f30, f3, dyn # perform operation
fadd.d f12, f30, f3, rdn # perform operation
fadd.d f12, f30, f3, rmm # perform operation
fadd.d f12, f30, f3, rne # perform operation
fadd.d f12, f30, f3, rtz # perform operation
fadd.d f12, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x7, 0xfbd4a5d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fadd.d f7, f12, f27, dyn # perform operation
fadd.d f7, f12, f27, rdn # perform operation
fadd.d f7, f12, f27, rmm # perform operation
fadd.d f7, f12, f27, rne # perform operation
fadd.d f7, f12, f27, rtz # perform operation
fadd.d f7, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x9, 0x5ded314b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fadd.d f9, f26, f24, dyn # perform operation
fadd.d f9, f26, f24, rdn # perform operation
fadd.d f9, f26, f24, rmm # perform operation
fadd.d f9, f26, f24, rne # perform operation
fadd.d f9, f26, f24, rtz # perform operation
fadd.d f9, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x4, 0x0e1613ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fadd.d f4, f8, f28, dyn # perform operation
fadd.d f4, f8, f28, rdn # perform operation
fadd.d f4, f8, f28, rmm # perform operation
fadd.d f4, f8, f28, rne # perform operation
fadd.d f4, f8, f28, rtz # perform operation
fadd.d f4, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x9, 0xaeb84f5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fadd.d f9, f16, f22, dyn # perform operation
fadd.d f9, f16, f22, rdn # perform operation
fadd.d f9, f16, f22, rmm # perform operation
fadd.d f9, f16, f22, rne # perform operation
fadd.d f9, f16, f22, rtz # perform operation
fadd.d f9, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x6, 0x50beb9cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fadd.d f6, f25, f31, dyn # perform operation
fadd.d f6, f25, f31, rdn # perform operation
fadd.d f6, f25, f31, rmm # perform operation
fadd.d f6, f25, f31, rne # perform operation
fadd.d f6, f25, f31, rtz # perform operation
fadd.d f6, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x23, 0x80b69af9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fadd.d f23, f13, f19, dyn # perform operation
fadd.d f23, f13, f19, rdn # perform operation
fadd.d f23, f13, f19, rmm # perform operation
fadd.d f23, f13, f19, rne # perform operation
fadd.d f23, f13, f19, rtz # perform operation
fadd.d f23, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x11, 0x682db5c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fadd.d f11, f19, f16, dyn # perform operation
fadd.d f11, f19, f16, rdn # perform operation
fadd.d f11, f19, f16, rmm # perform operation
fadd.d f11, f19, f16, rne # perform operation
fadd.d f11, f19, f16, rtz # perform operation
fadd.d f11, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x19, 0x424a692a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fadd.d f19, f28, f24, dyn # perform operation
fadd.d f19, f28, f24, rdn # perform operation
fadd.d f19, f28, f24, rmm # perform operation
fadd.d f19, f28, f24, rne # perform operation
fadd.d f19, f28, f24, rtz # perform operation
fadd.d f19, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x3, 0x88460031 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fadd.d f3, f2, f10, dyn # perform operation
fadd.d f3, f2, f10, rdn # perform operation
fadd.d f3, f2, f10, rmm # perform operation
fadd.d f3, f2, f10, rne # perform operation
fadd.d f3, f2, f10, rtz # perform operation
fadd.d f3, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x14, 0x1c190ce4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fadd.d f14, f24, f7, dyn # perform operation
fadd.d f14, f24, f7, rdn # perform operation
fadd.d f14, f24, f7, rmm # perform operation
fadd.d f14, f24, f7, rne # perform operation
fadd.d f14, f24, f7, rtz # perform operation
fadd.d f14, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x14, 0xf9dd7401 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
fadd.d f14, f12, f17, dyn # perform operation
fadd.d f14, f12, f17, rdn # perform operation
fadd.d f14, f12, f17, rmm # perform operation
fadd.d f14, f12, f17, rne # perform operation
fadd.d f14, f12, f17, rtz # perform operation
fadd.d f14, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x17, 0x59e39c34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fadd.d f17, f27, f16, dyn # perform operation
fadd.d f17, f27, f16, rdn # perform operation
fadd.d f17, f27, f16, rmm # perform operation
fadd.d f17, f27, f16, rne # perform operation
fadd.d f17, f27, f16, rtz # perform operation
fadd.d f17, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x11, 0x5c4f1d22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fadd.d f11, f6, f2, dyn # perform operation
fadd.d f11, f6, f2, rdn # perform operation
fadd.d f11, f6, f2, rmm # perform operation
fadd.d f11, f6, f2, rne # perform operation
fadd.d f11, f6, f2, rtz # perform operation
fadd.d f11, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x1, 0xd18c7e0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fadd.d f1, f2, f14, dyn # perform operation
fadd.d f1, f2, f14, rdn # perform operation
fadd.d f1, f2, f14, rmm # perform operation
fadd.d f1, f2, f14, rne # perform operation
fadd.d f1, f2, f14, rtz # perform operation
fadd.d f1, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x1, 0x2e057364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fadd.d f1, f24, f3, dyn # perform operation
fadd.d f1, f24, f3, rdn # perform operation
fadd.d f1, f24, f3, rmm # perform operation
fadd.d f1, f24, f3, rne # perform operation
fadd.d f1, f24, f3, rtz # perform operation
fadd.d f1, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x2, 0xeb5f2b64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fadd.d f2, f13, f16, dyn # perform operation
fadd.d f2, f13, f16, rdn # perform operation
fadd.d f2, f13, f16, rmm # perform operation
fadd.d f2, f13, f16, rne # perform operation
fadd.d f2, f13, f16, rtz # perform operation
fadd.d f2, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x26, 0xf714b71b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
fadd.d f26, f21, f9, dyn # perform operation
fadd.d f26, f21, f9, rdn # perform operation
fadd.d f26, f21, f9, rmm # perform operation
fadd.d f26, f21, f9, rne # perform operation
fadd.d f26, f21, f9, rtz # perform operation
fadd.d f26, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x27, 0x775904de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
fadd.d f27, f17, f15, dyn # perform operation
fadd.d f27, f17, f15, rdn # perform operation
fadd.d f27, f17, f15, rmm # perform operation
fadd.d f27, f17, f15, rne # perform operation
fadd.d f27, f17, f15, rtz # perform operation
fadd.d f27, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x13, 0x690e7f18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fadd.d f13, f11, f27, dyn # perform operation
fadd.d f13, f11, f27, rdn # perform operation
fadd.d f13, f11, f27, rmm # perform operation
fadd.d f13, f11, f27, rne # perform operation
fadd.d f13, f11, f27, rtz # perform operation
fadd.d f13, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x24, 0x3e2786f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fadd.d f24, f1, f5, dyn # perform operation
fadd.d f24, f1, f5, rdn # perform operation
fadd.d f24, f1, f5, rmm # perform operation
fadd.d f24, f1, f5, rne # perform operation
fadd.d f24, f1, f5, rtz # perform operation
fadd.d f24, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x16, 0xb56d9e3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fadd.d f16, f1, f3, dyn # perform operation
fadd.d f16, f1, f3, rdn # perform operation
fadd.d f16, f1, f3, rmm # perform operation
fadd.d f16, f1, f3, rne # perform operation
fadd.d f16, f1, f3, rtz # perform operation
fadd.d f16, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x14, 0x0a475ace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fadd.d f14, f6, f4, dyn # perform operation
fadd.d f14, f6, f4, rdn # perform operation
fadd.d f14, f6, f4, rmm # perform operation
fadd.d f14, f6, f4, rne # perform operation
fadd.d f14, f6, f4, rtz # perform operation
fadd.d f14, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x29, 0x623a4f80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fadd.d f29, f25, f18, dyn # perform operation
fadd.d f29, f25, f18, rdn # perform operation
fadd.d f29, f25, f18, rmm # perform operation
fadd.d f29, f25, f18, rne # perform operation
fadd.d f29, f25, f18, rtz # perform operation
fadd.d f29, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x9, 0xd30f0f12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fadd.d f9, f17, f15, dyn # perform operation
fadd.d f9, f17, f15, rdn # perform operation
fadd.d f9, f17, f15, rmm # perform operation
fadd.d f9, f17, f15, rne # perform operation
fadd.d f9, f17, f15, rtz # perform operation
fadd.d f9, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x19, 0x4658a0eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fadd.d f19, f17, f18, dyn # perform operation
fadd.d f19, f17, f18, rdn # perform operation
fadd.d f19, f17, f18, rmm # perform operation
fadd.d f19, f17, f18, rne # perform operation
fadd.d f19, f17, f18, rtz # perform operation
fadd.d f19, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x9, 0xfd49fdfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fadd.d f9, f11, f13, dyn # perform operation
fadd.d f9, f11, f13, rdn # perform operation
fadd.d f9, f11, f13, rmm # perform operation
fadd.d f9, f11, f13, rne # perform operation
fadd.d f9, f11, f13, rtz # perform operation
fadd.d f9, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0x148e17bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fadd.d f15, f28, f27, dyn # perform operation
fadd.d f15, f28, f27, rdn # perform operation
fadd.d f15, f28, f27, rmm # perform operation
fadd.d f15, f28, f27, rne # perform operation
fadd.d f15, f28, f27, rtz # perform operation
fadd.d f15, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x68d69f1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fadd.d f29, f10, f9, dyn # perform operation
fadd.d f29, f10, f9, rdn # perform operation
fadd.d f29, f10, f9, rmm # perform operation
fadd.d f29, f10, f9, rne # perform operation
fadd.d f29, f10, f9, rtz # perform operation
fadd.d f29, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x29, 0xebf195b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fadd.d f29, f15, f22, dyn # perform operation
fadd.d f29, f15, f22, rdn # perform operation
fadd.d f29, f15, f22, rmm # perform operation
fadd.d f29, f15, f22, rne # perform operation
fadd.d f29, f15, f22, rtz # perform operation
fadd.d f29, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x2, 0x5e7a0ec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fadd.d f2, f19, f9, dyn # perform operation
fadd.d f2, f19, f9, rdn # perform operation
fadd.d f2, f19, f9, rmm # perform operation
fadd.d f2, f19, f9, rne # perform operation
fadd.d f2, f19, f9, rtz # perform operation
fadd.d f2, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x9, 0xf9aff75a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fadd.d f9, f6, f30, dyn # perform operation
fadd.d f9, f6, f30, rdn # perform operation
fadd.d f9, f6, f30, rmm # perform operation
fadd.d f9, f6, f30, rne # perform operation
fadd.d f9, f6, f30, rtz # perform operation
fadd.d f9, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x18, 0x74c2e8a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
fadd.d f18, f16, f13, dyn # perform operation
fadd.d f18, f16, f13, rdn # perform operation
fadd.d f18, f16, f13, rmm # perform operation
fadd.d f18, f16, f13, rne # perform operation
fadd.d f18, f16, f13, rtz # perform operation
fadd.d f18, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x29, 0x8749b545 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fadd.d f29, f22, f8, dyn # perform operation
fadd.d f29, f22, f8, rdn # perform operation
fadd.d f29, f22, f8, rmm # perform operation
fadd.d f29, f22, f8, rne # perform operation
fadd.d f29, f22, f8, rtz # perform operation
fadd.d f29, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x8, 0x3d4f1623 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fadd.d f8, f27, f23, dyn # perform operation
fadd.d f8, f27, f23, rdn # perform operation
fadd.d f8, f27, f23, rmm # perform operation
fadd.d f8, f27, f23, rne # perform operation
fadd.d f8, f27, f23, rtz # perform operation
fadd.d f8, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f27, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x17, 0x497a784a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fadd.d f17, f26, f1, dyn # perform operation
fadd.d f17, f26, f1, rdn # perform operation
fadd.d f17, f26, f1, rmm # perform operation
fadd.d f17, f26, f1, rne # perform operation
fadd.d f17, f26, f1, rtz # perform operation
fadd.d f17, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x30, 0x1d8a4a22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fadd.d f30, f5, f27, dyn # perform operation
fadd.d f30, f5, f27, rdn # perform operation
fadd.d f30, f5, f27, rmm # perform operation
fadd.d f30, f5, f27, rne # perform operation
fadd.d f30, f5, f27, rtz # perform operation
fadd.d f30, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x26, 0x505d0d89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fadd.d f26, f28, f15, dyn # perform operation
fadd.d f26, f28, f15, rdn # perform operation
fadd.d f26, f28, f15, rmm # perform operation
fadd.d f26, f28, f15, rne # perform operation
fadd.d f26, f28, f15, rtz # perform operation
fadd.d f26, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x9, 0x7b96d155 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fadd.d f9, f14, f28, dyn # perform operation
fadd.d f9, f14, f28, rdn # perform operation
fadd.d f9, f14, f28, rmm # perform operation
fadd.d f9, f14, f28, rne # perform operation
fadd.d f9, f14, f28, rtz # perform operation
fadd.d f9, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x23, 0xc05cf72e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fadd.d f23, f29, f30, dyn # perform operation
fadd.d f23, f29, f30, rdn # perform operation
fadd.d f23, f29, f30, rmm # perform operation
fadd.d f23, f29, f30, rne # perform operation
fadd.d f23, f29, f30, rtz # perform operation
fadd.d f23, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x10, 0xd3e62c4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fadd.d f10, f28, f29, dyn # perform operation
fadd.d f10, f28, f29, rdn # perform operation
fadd.d f10, f28, f29, rmm # perform operation
fadd.d f10, f28, f29, rne # perform operation
fadd.d f10, f28, f29, rtz # perform operation
fadd.d f10, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x22, 0x1d7bd573 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fadd.d f22, f30, f25, dyn # perform operation
fadd.d f22, f30, f25, rdn # perform operation
fadd.d f22, f30, f25, rmm # perform operation
fadd.d f22, f30, f25, rne # perform operation
fadd.d f22, f30, f25, rtz # perform operation
fadd.d f22, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x20, 0x823ac83c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fadd.d f20, f30, f21, dyn # perform operation
fadd.d f20, f30, f21, rdn # perform operation
fadd.d f20, f30, f21, rmm # perform operation
fadd.d f20, f30, f21, rne # perform operation
fadd.d f20, f30, f21, rtz # perform operation
fadd.d f20, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x4, 0x04a53097 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
fadd.d f4, f29, f16, dyn # perform operation
fadd.d f4, f29, f16, rdn # perform operation
fadd.d f4, f29, f16, rmm # perform operation
fadd.d f4, f29, f16, rne # perform operation
fadd.d f4, f29, f16, rtz # perform operation
fadd.d f4, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x11, 0xba1b4089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fadd.d f11, f10, f25, dyn # perform operation
fadd.d f11, f10, f25, rdn # perform operation
fadd.d f11, f10, f25, rmm # perform operation
fadd.d f11, f10, f25, rne # perform operation
fadd.d f11, f10, f25, rtz # perform operation
fadd.d f11, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x17, 0x1ab55cf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fadd.d f17, f4, f12, dyn # perform operation
fadd.d f17, f4, f12, rdn # perform operation
fadd.d f17, f4, f12, rmm # perform operation
fadd.d f17, f4, f12, rne # perform operation
fadd.d f17, f4, f12, rtz # perform operation
fadd.d f17, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x14, 0xfeb84e22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fadd.d f14, f6, f7, dyn # perform operation
fadd.d f14, f6, f7, rdn # perform operation
fadd.d f14, f6, f7, rmm # perform operation
fadd.d f14, f6, f7, rne # perform operation
fadd.d f14, f6, f7, rtz # perform operation
fadd.d f14, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x17, 0x57047c82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fadd.d f17, f27, f3, dyn # perform operation
fadd.d f17, f27, f3, rdn # perform operation
fadd.d f17, f27, f3, rmm # perform operation
fadd.d f17, f27, f3, rne # perform operation
fadd.d f17, f27, f3, rtz # perform operation
fadd.d f17, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x26, 0x001ab596 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fadd.d f26, f9, f21, dyn # perform operation
fadd.d f26, f9, f21, rdn # perform operation
fadd.d f26, f9, f21, rmm # perform operation
fadd.d f26, f9, f21, rne # perform operation
fadd.d f26, f9, f21, rtz # perform operation
fadd.d f26, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x20, 0x0857f223 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fadd.d f20, f10, f2, dyn # perform operation
fadd.d f20, f10, f2, rdn # perform operation
fadd.d f20, f10, f2, rmm # perform operation
fadd.d f20, f10, f2, rne # perform operation
fadd.d f20, f10, f2, rtz # perform operation
fadd.d f20, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x6, 0x57f083fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fadd.d f6, f1, f20, dyn # perform operation
fadd.d f6, f1, f20, rdn # perform operation
fadd.d f6, f1, f20, rmm # perform operation
fadd.d f6, f1, f20, rne # perform operation
fadd.d f6, f1, f20, rtz # perform operation
fadd.d f6, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x23, 0x0eb895e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fadd.d f23, f14, f3, dyn # perform operation
fadd.d f23, f14, f3, rdn # perform operation
fadd.d f23, f14, f3, rmm # perform operation
fadd.d f23, f14, f3, rne # perform operation
fadd.d f23, f14, f3, rtz # perform operation
fadd.d f23, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x15, 0xdd69adf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fadd.d f15, f31, f20, dyn # perform operation
fadd.d f15, f31, f20, rdn # perform operation
fadd.d f15, f31, f20, rmm # perform operation
fadd.d f15, f31, f20, rne # perform operation
fadd.d f15, f31, f20, rtz # perform operation
fadd.d f15, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x3, 0x4ae31ed5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fadd.d f3, f5, f2, dyn # perform operation
fadd.d f3, f5, f2, rdn # perform operation
fadd.d f3, f5, f2, rmm # perform operation
fadd.d f3, f5, f2, rne # perform operation
fadd.d f3, f5, f2, rtz # perform operation
fadd.d f3, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x31, 0x40cc14d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fadd.d f31, f7, f22, dyn # perform operation
fadd.d f31, f7, f22, rdn # perform operation
fadd.d f31, f7, f22, rmm # perform operation
fadd.d f31, f7, f22, rne # perform operation
fadd.d f31, f7, f22, rtz # perform operation
fadd.d f31, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x26, 0x44e82a4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fadd.d f26, f23, f11, dyn # perform operation
fadd.d f26, f23, f11, rdn # perform operation
fadd.d f26, f23, f11, rmm # perform operation
fadd.d f26, f23, f11, rne # perform operation
fadd.d f26, f23, f11, rtz # perform operation
fadd.d f26, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x23, 0x2b4cd3a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fadd.d f23, f28, f6, dyn # perform operation
fadd.d f23, f28, f6, rdn # perform operation
fadd.d f23, f28, f6, rmm # perform operation
fadd.d f23, f28, f6, rne # perform operation
fadd.d f23, f28, f6, rtz # perform operation
fadd.d f23, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x19, 0xcda70399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fadd.d f19, f2, f27, dyn # perform operation
fadd.d f19, f2, f27, rdn # perform operation
fadd.d f19, f2, f27, rmm # perform operation
fadd.d f19, f2, f27, rne # perform operation
fadd.d f19, f2, f27, rtz # perform operation
fadd.d f19, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x19, 0xd011d982 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fadd.d f19, f26, f6, dyn # perform operation
fadd.d f19, f26, f6, rdn # perform operation
fadd.d f19, f26, f6, rmm # perform operation
fadd.d f19, f26, f6, rne # perform operation
fadd.d f19, f26, f6, rtz # perform operation
fadd.d f19, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x27, 0xc3eb29a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fadd.d f27, f16, f31, dyn # perform operation
fadd.d f27, f16, f31, rdn # perform operation
fadd.d f27, f16, f31, rmm # perform operation
fadd.d f27, f16, f31, rne # perform operation
fadd.d f27, f16, f31, rtz # perform operation
fadd.d f27, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x28, 0xb4fe3ecd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fadd.d f28, f27, f17, dyn # perform operation
fadd.d f28, f27, f17, rdn # perform operation
fadd.d f28, f27, f17, rmm # perform operation
fadd.d f28, f27, f17, rne # perform operation
fadd.d f28, f27, f17, rtz # perform operation
fadd.d f28, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x21, 0x63f4c8ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fadd.d f21, f25, f26, dyn # perform operation
fadd.d f21, f25, f26, rdn # perform operation
fadd.d f21, f25, f26, rmm # perform operation
fadd.d f21, f25, f26, rne # perform operation
fadd.d f21, f25, f26, rtz # perform operation
fadd.d f21, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x8, 0x79101085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fadd.d f8, f20, f16, dyn # perform operation
fadd.d f8, f20, f16, rdn # perform operation
fadd.d f8, f20, f16, rmm # perform operation
fadd.d f8, f20, f16, rne # perform operation
fadd.d f8, f20, f16, rtz # perform operation
fadd.d f8, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x18, 0xb841517e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fadd.d f18, f30, f6, dyn # perform operation
fadd.d f18, f30, f6, rdn # perform operation
fadd.d f18, f30, f6, rmm # perform operation
fadd.d f18, f30, f6, rne # perform operation
fadd.d f18, f30, f6, rtz # perform operation
fadd.d f18, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x25, 0x56342199 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fadd.d f25, f14, f16, dyn # perform operation
fadd.d f25, f14, f16, rdn # perform operation
fadd.d f25, f14, f16, rmm # perform operation
fadd.d f25, f14, f16, rne # perform operation
fadd.d f25, f14, f16, rtz # perform operation
fadd.d f25, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x1, 0x6ad9e15a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fadd.d f1, f15, f11, dyn # perform operation
fadd.d f1, f15, f11, rdn # perform operation
fadd.d f1, f15, f11, rmm # perform operation
fadd.d f1, f15, f11, rne # perform operation
fadd.d f1, f15, f11, rtz # perform operation
fadd.d f1, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x30, 0x229a562c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fadd.d f30, f17, f26, dyn # perform operation
fadd.d f30, f17, f26, rdn # perform operation
fadd.d f30, f17, f26, rmm # perform operation
fadd.d f30, f17, f26, rne # perform operation
fadd.d f30, f17, f26, rtz # perform operation
fadd.d f30, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x31, 0x80aa7fcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fadd.d f31, f22, f4, dyn # perform operation
fadd.d f31, f22, f4, rdn # perform operation
fadd.d f31, f22, f4, rmm # perform operation
fadd.d f31, f22, f4, rne # perform operation
fadd.d f31, f22, f4, rtz # perform operation
fadd.d f31, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x27, 0x494a1c17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
fadd.d f27, f11, f4, dyn # perform operation
fadd.d f27, f11, f4, rdn # perform operation
fadd.d f27, f11, f4, rmm # perform operation
fadd.d f27, f11, f4, rne # perform operation
fadd.d f27, f11, f4, rtz # perform operation
fadd.d f27, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x12, 0xc420f907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
fadd.d f12, f20, f30, dyn # perform operation
fadd.d f12, f20, f30, rdn # perform operation
fadd.d f12, f20, f30, rmm # perform operation
fadd.d f12, f20, f30, rne # perform operation
fadd.d f12, f20, f30, rtz # perform operation
fadd.d f12, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x4, 0x662df395 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fadd.d f4, f20, f27, dyn # perform operation
fadd.d f4, f20, f27, rdn # perform operation
fadd.d f4, f20, f27, rmm # perform operation
fadd.d f4, f20, f27, rne # perform operation
fadd.d f4, f20, f27, rtz # perform operation
fadd.d f4, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x23, 0xae38f795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fadd.d f23, f31, f1, dyn # perform operation
fadd.d f23, f31, f1, rdn # perform operation
fadd.d f23, f31, f1, rmm # perform operation
fadd.d f23, f31, f1, rne # perform operation
fadd.d f23, f31, f1, rtz # perform operation
fadd.d f23, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x30, 0xa8855e34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fadd.d f30, f3, f24, dyn # perform operation
fadd.d f30, f3, f24, rdn # perform operation
fadd.d f30, f3, f24, rmm # perform operation
fadd.d f30, f3, f24, rne # perform operation
fadd.d f30, f3, f24, rtz # perform operation
fadd.d f30, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x3, 0x164b1173 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fadd.d f3, f20, f25, dyn # perform operation
fadd.d f3, f20, f25, rdn # perform operation
fadd.d f3, f20, f25, rmm # perform operation
fadd.d f3, f20, f25, rne # perform operation
fadd.d f3, f20, f25, rtz # perform operation
fadd.d f3, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x14, 0x077679a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fadd.d f14, f27, f10, dyn # perform operation
fadd.d f14, f27, f10, rdn # perform operation
fadd.d f14, f27, f10, rmm # perform operation
fadd.d f14, f27, f10, rne # perform operation
fadd.d f14, f27, f10, rtz # perform operation
fadd.d f14, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x30, 0xcaea6758 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fadd.d f30, f13, f26, dyn # perform operation
fadd.d f30, f13, f26, rdn # perform operation
fadd.d f30, f13, f26, rmm # perform operation
fadd.d f30, f13, f26, rne # perform operation
fadd.d f30, f13, f26, rtz # perform operation
fadd.d f30, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x7, 0x7873e38a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fadd.d f7, f13, f12, dyn # perform operation
fadd.d f7, f13, f12, rdn # perform operation
fadd.d f7, f13, f12, rmm # perform operation
fadd.d f7, f13, f12, rne # perform operation
fadd.d f7, f13, f12, rtz # perform operation
fadd.d f7, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x26, 0x88514fa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fadd.d f26, f20, f11, dyn # perform operation
fadd.d f26, f20, f11, rdn # perform operation
fadd.d f26, f20, f11, rmm # perform operation
fadd.d f26, f20, f11, rne # perform operation
fadd.d f26, f20, f11, rtz # perform operation
fadd.d f26, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x17, 0xdb62797a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fadd.d f17, f24, f9, dyn # perform operation
fadd.d f17, f24, f9, rdn # perform operation
fadd.d f17, f24, f9, rmm # perform operation
fadd.d f17, f24, f9, rne # perform operation
fadd.d f17, f24, f9, rtz # perform operation
fadd.d f17, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x22, 0x5f4bcea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fadd.d f22, f13, f6, dyn # perform operation
fadd.d f22, f13, f6, rdn # perform operation
fadd.d f22, f13, f6, rmm # perform operation
fadd.d f22, f13, f6, rne # perform operation
fadd.d f22, f13, f6, rtz # perform operation
fadd.d f22, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x8, 0xdf9c2649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fadd.d f8, f25, f6, dyn # perform operation
fadd.d f8, f25, f6, rdn # perform operation
fadd.d f8, f25, f6, rmm # perform operation
fadd.d f8, f25, f6, rne # perform operation
fadd.d f8, f25, f6, rtz # perform operation
fadd.d f8, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x21, 0x14079502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
fadd.d f21, f4, f30, dyn # perform operation
fadd.d f21, f4, f30, rdn # perform operation
fadd.d f21, f4, f30, rmm # perform operation
fadd.d f21, f4, f30, rne # perform operation
fadd.d f21, f4, f30, rtz # perform operation
fadd.d f21, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x18, 0x35c79d2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fadd.d f18, f8, f13, dyn # perform operation
fadd.d f18, f8, f13, rdn # perform operation
fadd.d f18, f8, f13, rmm # perform operation
fadd.d f18, f8, f13, rne # perform operation
fadd.d f18, f8, f13, rtz # perform operation
fadd.d f18, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x20, 0xf8953427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fadd.d f20, f14, f11, dyn # perform operation
fadd.d f20, f14, f11, rdn # perform operation
fadd.d f20, f14, f11, rmm # perform operation
fadd.d f20, f14, f11, rne # perform operation
fadd.d f20, f14, f11, rtz # perform operation
fadd.d f20, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x22, 0xffd0489f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fadd.d f22, f25, f9, dyn # perform operation
fadd.d f22, f25, f9, rdn # perform operation
fadd.d f22, f25, f9, rmm # perform operation
fadd.d f22, f25, f9, rne # perform operation
fadd.d f22, f25, f9, rtz # perform operation
fadd.d f22, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x25, 0x077daa0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fadd.d f25, f28, f24, dyn # perform operation
fadd.d f25, f28, f24, rdn # perform operation
fadd.d f25, f28, f24, rmm # perform operation
fadd.d f25, f28, f24, rne # perform operation
fadd.d f25, f28, f24, rtz # perform operation
fadd.d f25, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x27, 0xe21e14e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fadd.d f27, f22, f1, dyn # perform operation
fadd.d f27, f22, f1, rdn # perform operation
fadd.d f27, f22, f1, rmm # perform operation
fadd.d f27, f22, f1, rne # perform operation
fadd.d f27, f22, f1, rtz # perform operation
fadd.d f27, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x25, 0x336b0ad7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fadd.d f25, f21, f14, dyn # perform operation
fadd.d f25, f21, f14, rdn # perform operation
fadd.d f25, f21, f14, rmm # perform operation
fadd.d f25, f21, f14, rne # perform operation
fadd.d f25, f21, f14, rtz # perform operation
fadd.d f25, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x18, 0xb32a4ddd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fadd.d f18, f7, f26, dyn # perform operation
fadd.d f18, f7, f26, rdn # perform operation
fadd.d f18, f7, f26, rmm # perform operation
fadd.d f18, f7, f26, rne # perform operation
fadd.d f18, f7, f26, rtz # perform operation
fadd.d f18, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x25, 0xe1dbba09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fadd.d f25, f7, f31, dyn # perform operation
fadd.d f25, f7, f31, rdn # perform operation
fadd.d f25, f7, f31, rmm # perform operation
fadd.d f25, f7, f31, rne # perform operation
fadd.d f25, f7, f31, rtz # perform operation
fadd.d f25, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x20, 0x17f76b83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fadd.d f20, f19, f9, dyn # perform operation
fadd.d f20, f19, f9, rdn # perform operation
fadd.d f20, f19, f9, rmm # perform operation
fadd.d f20, f19, f9, rne # perform operation
fadd.d f20, f19, f9, rtz # perform operation
fadd.d f20, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x21, 0x52179aa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fadd.d f21, f20, f31, dyn # perform operation
fadd.d f21, f20, f31, rdn # perform operation
fadd.d f21, f20, f31, rmm # perform operation
fadd.d f21, f20, f31, rne # perform operation
fadd.d f21, f20, f31, rtz # perform operation
fadd.d f21, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x3, 0xb12218b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fadd.d f3, f7, f23, dyn # perform operation
fadd.d f3, f7, f23, rdn # perform operation
fadd.d f3, f7, f23, rmm # perform operation
fadd.d f3, f7, f23, rne # perform operation
fadd.d f3, f7, f23, rtz # perform operation
fadd.d f3, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0x01df217d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fadd.d f29, f18, f15, dyn # perform operation
fadd.d f29, f18, f15, rdn # perform operation
fadd.d f29, f18, f15, rmm # perform operation
fadd.d f29, f18, f15, rne # perform operation
fadd.d f29, f18, f15, rtz # perform operation
fadd.d f29, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x9, 0x758a6fb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fadd.d f9, f29, f3, dyn # perform operation
fadd.d f9, f29, f3, rdn # perform operation
fadd.d f9, f29, f3, rmm # perform operation
fadd.d f9, f29, f3, rne # perform operation
fadd.d f9, f29, f3, rtz # perform operation
fadd.d f9, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x24, 0x56b024e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fadd.d f24, f5, f14, dyn # perform operation
fadd.d f24, f5, f14, rdn # perform operation
fadd.d f24, f5, f14, rmm # perform operation
fadd.d f24, f5, f14, rne # perform operation
fadd.d f24, f5, f14, rtz # perform operation
fadd.d f24, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x12, 0x34773ae5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fadd.d f12, f3, f16, dyn # perform operation
fadd.d f12, f3, f16, rdn # perform operation
fadd.d f12, f3, f16, rmm # perform operation
fadd.d f12, f3, f16, rne # perform operation
fadd.d f12, f3, f16, rtz # perform operation
fadd.d f12, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x6, 0xfb264f77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fadd.d f6, f17, f4, dyn # perform operation
fadd.d f6, f17, f4, rdn # perform operation
fadd.d f6, f17, f4, rmm # perform operation
fadd.d f6, f17, f4, rne # perform operation
fadd.d f6, f17, f4, rtz # perform operation
fadd.d f6, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x14, 0x0c38c0bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fadd.d f14, f11, f25, dyn # perform operation
fadd.d f14, f11, f25, rdn # perform operation
fadd.d f14, f11, f25, rmm # perform operation
fadd.d f14, f11, f25, rne # perform operation
fadd.d f14, f11, f25, rtz # perform operation
fadd.d f14, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x26, 0xc4424dcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fadd.d f26, f13, f24, dyn # perform operation
fadd.d f26, f13, f24, rdn # perform operation
fadd.d f26, f13, f24, rmm # perform operation
fadd.d f26, f13, f24, rne # perform operation
fadd.d f26, f13, f24, rtz # perform operation
fadd.d f26, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x5, 0x9a9479d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
fadd.d f5, f21, f3, dyn # perform operation
fadd.d f5, f21, f3, rdn # perform operation
fadd.d f5, f21, f3, rmm # perform operation
fadd.d f5, f21, f3, rne # perform operation
fadd.d f5, f21, f3, rtz # perform operation
fadd.d f5, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x5, 0x845ba8c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fadd.d f5, f29, f9, dyn # perform operation
fadd.d f5, f29, f9, rdn # perform operation
fadd.d f5, f29, f9, rmm # perform operation
fadd.d f5, f29, f9, rne # perform operation
fadd.d f5, f29, f9, rtz # perform operation
fadd.d f5, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x17, 0xfb48d8a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fadd.d f17, f31, f6, dyn # perform operation
fadd.d f17, f31, f6, rdn # perform operation
fadd.d f17, f31, f6, rmm # perform operation
fadd.d f17, f31, f6, rne # perform operation
fadd.d f17, f31, f6, rtz # perform operation
fadd.d f17, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x29, 0xba6195b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fadd.d f29, f10, f19, dyn # perform operation
fadd.d f29, f10, f19, rdn # perform operation
fadd.d f29, f10, f19, rmm # perform operation
fadd.d f29, f10, f19, rne # perform operation
fadd.d f29, f10, f19, rtz # perform operation
fadd.d f29, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x21, 0x10b17461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fadd.d f21, f31, f10, dyn # perform operation
fadd.d f21, f31, f10, rdn # perform operation
fadd.d f21, f31, f10, rmm # perform operation
fadd.d f21, f31, f10, rne # perform operation
fadd.d f21, f31, f10, rtz # perform operation
fadd.d f21, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x23, 0x75adb685 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fadd.d f23, f28, f20, dyn # perform operation
fadd.d f23, f28, f20, rdn # perform operation
fadd.d f23, f28, f20, rmm # perform operation
fadd.d f23, f28, f20, rne # perform operation
fadd.d f23, f28, f20, rtz # perform operation
fadd.d f23, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x6, 0x5d9d3dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fadd.d f6, f16, f2, dyn # perform operation
fadd.d f6, f16, f2, rdn # perform operation
fadd.d f6, f16, f2, rmm # perform operation
fadd.d f6, f16, f2, rne # perform operation
fadd.d f6, f16, f2, rtz # perform operation
fadd.d f6, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x25, 0x1e789728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fadd.d f25, f28, f14, dyn # perform operation
fadd.d f25, f28, f14, rdn # perform operation
fadd.d f25, f28, f14, rmm # perform operation
fadd.d f25, f28, f14, rne # perform operation
fadd.d f25, f28, f14, rtz # perform operation
fadd.d f25, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x26, 0x61c0455f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fadd.d f26, f7, f5, dyn # perform operation
fadd.d f26, f7, f5, rdn # perform operation
fadd.d f26, f7, f5, rmm # perform operation
fadd.d f26, f7, f5, rne # perform operation
fadd.d f26, f7, f5, rtz # perform operation
fadd.d f26, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x6, 0xae12fa80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fadd.d f6, f8, f2, dyn # perform operation
fadd.d f6, f8, f2, rdn # perform operation
fadd.d f6, f8, f2, rmm # perform operation
fadd.d f6, f8, f2, rne # perform operation
fadd.d f6, f8, f2, rtz # perform operation
fadd.d f6, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x26, 0xd2af0fd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fadd.d f26, f8, f9, dyn # perform operation
fadd.d f26, f8, f9, rdn # perform operation
fadd.d f26, f8, f9, rmm # perform operation
fadd.d f26, f8, f9, rne # perform operation
fadd.d f26, f8, f9, rtz # perform operation
fadd.d f26, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f8, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x11, 0xdad5aa9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fadd.d f11, f18, f3, dyn # perform operation
fadd.d f11, f18, f3, rdn # perform operation
fadd.d f11, f18, f3, rmm # perform operation
fadd.d f11, f18, f3, rne # perform operation
fadd.d f11, f18, f3, rtz # perform operation
fadd.d f11, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x28, 0x4c63c0a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fadd.d f28, f13, f25, dyn # perform operation
fadd.d f28, f13, f25, rdn # perform operation
fadd.d f28, f13, f25, rmm # perform operation
fadd.d f28, f13, f25, rne # perform operation
fadd.d f28, f13, f25, rtz # perform operation
fadd.d f28, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x24, 0x7523303a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fadd.d f24, f5, f22, dyn # perform operation
fadd.d f24, f5, f22, rdn # perform operation
fadd.d f24, f5, f22, rmm # perform operation
fadd.d f24, f5, f22, rne # perform operation
fadd.d f24, f5, f22, rtz # perform operation
fadd.d f24, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f5, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x27, 0xa395b9d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fadd.d f27, f4, f18, dyn # perform operation
fadd.d f27, f4, f18, rdn # perform operation
fadd.d f27, f4, f18, rmm # perform operation
fadd.d f27, f4, f18, rne # perform operation
fadd.d f27, f4, f18, rtz # perform operation
fadd.d f27, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x5, 0x9c1916b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
fadd.d f5, f25, f11, dyn # perform operation
fadd.d f5, f25, f11, rdn # perform operation
fadd.d f5, f25, f11, rmm # perform operation
fadd.d f5, f25, f11, rne # perform operation
fadd.d f5, f25, f11, rtz # perform operation
fadd.d f5, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x15, 0x43198caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fadd.d f15, f28, f14, dyn # perform operation
fadd.d f15, f28, f14, rdn # perform operation
fadd.d f15, f28, f14, rmm # perform operation
fadd.d f15, f28, f14, rne # perform operation
fadd.d f15, f28, f14, rtz # perform operation
fadd.d f15, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x7, 0xab6abd60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fadd.d f7, f28, f14, dyn # perform operation
fadd.d f7, f28, f14, rdn # perform operation
fadd.d f7, f28, f14, rmm # perform operation
fadd.d f7, f28, f14, rne # perform operation
fadd.d f7, f28, f14, rtz # perform operation
fadd.d f7, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x13, 0x3096b555 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fadd.d f13, f28, f20, dyn # perform operation
fadd.d f13, f28, f20, rdn # perform operation
fadd.d f13, f28, f20, rmm # perform operation
fadd.d f13, f28, f20, rne # perform operation
fadd.d f13, f28, f20, rtz # perform operation
fadd.d f13, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x8, 0x49910ffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fadd.d f8, f3, f10, dyn # perform operation
fadd.d f8, f3, f10, rdn # perform operation
fadd.d f8, f3, f10, rmm # perform operation
fadd.d f8, f3, f10, rne # perform operation
fadd.d f8, f3, f10, rtz # perform operation
fadd.d f8, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x10, 0xa9bf1b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fadd.d f10, f23, f22, dyn # perform operation
fadd.d f10, f23, f22, rdn # perform operation
fadd.d f10, f23, f22, rmm # perform operation
fadd.d f10, f23, f22, rne # perform operation
fadd.d f10, f23, f22, rtz # perform operation
fadd.d f10, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x26, 0x0fc54efc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fadd.d f26, f19, f28, dyn # perform operation
fadd.d f26, f19, f28, rdn # perform operation
fadd.d f26, f19, f28, rmm # perform operation
fadd.d f26, f19, f28, rne # perform operation
fadd.d f26, f19, f28, rtz # perform operation
fadd.d f26, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x29, 0x38682a8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fadd.d f29, f21, f13, dyn # perform operation
fadd.d f29, f21, f13, rdn # perform operation
fadd.d f29, f21, f13, rmm # perform operation
fadd.d f29, f21, f13, rne # perform operation
fadd.d f29, f21, f13, rtz # perform operation
fadd.d f29, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x7, 0x199acbaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fadd.d f7, f1, f12, dyn # perform operation
fadd.d f7, f1, f12, rdn # perform operation
fadd.d f7, f1, f12, rmm # perform operation
fadd.d f7, f1, f12, rne # perform operation
fadd.d f7, f1, f12, rtz # perform operation
fadd.d f7, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x29, 0xd03971d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fadd.d f29, f4, f15, dyn # perform operation
fadd.d f29, f4, f15, rdn # perform operation
fadd.d f29, f4, f15, rmm # perform operation
fadd.d f29, f4, f15, rne # perform operation
fadd.d f29, f4, f15, rtz # perform operation
fadd.d f29, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x25, 0x424ef24d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fadd.d f25, f3, f21, dyn # perform operation
fadd.d f25, f3, f21, rdn # perform operation
fadd.d f25, f3, f21, rmm # perform operation
fadd.d f25, f3, f21, rne # perform operation
fadd.d f25, f3, f21, rtz # perform operation
fadd.d f25, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x16, 0xe8a4aa05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fadd.d f16, f2, f10, dyn # perform operation
fadd.d f16, f2, f10, rdn # perform operation
fadd.d f16, f2, f10, rmm # perform operation
fadd.d f16, f2, f10, rne # perform operation
fadd.d f16, f2, f10, rtz # perform operation
fadd.d f16, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x16, 0x4ffb5c29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fadd.d f16, f29, f4, dyn # perform operation
fadd.d f16, f29, f4, rdn # perform operation
fadd.d f16, f29, f4, rmm # perform operation
fadd.d f16, f29, f4, rne # perform operation
fadd.d f16, f29, f4, rtz # perform operation
fadd.d f16, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x26, 0x5e3e65f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fadd.d f26, f6, f27, dyn # perform operation
fadd.d f26, f6, f27, rdn # perform operation
fadd.d f26, f6, f27, rmm # perform operation
fadd.d f26, f6, f27, rne # perform operation
fadd.d f26, f6, f27, rtz # perform operation
fadd.d f26, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x10, 0x9dc0d883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fadd.d f10, f2, f5, dyn # perform operation
fadd.d f10, f2, f5, rdn # perform operation
fadd.d f10, f2, f5, rmm # perform operation
fadd.d f10, f2, f5, rne # perform operation
fadd.d f10, f2, f5, rtz # perform operation
fadd.d f10, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x1, 0xa4999e18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fadd.d f1, f10, f3, dyn # perform operation
fadd.d f1, f10, f3, rdn # perform operation
fadd.d f1, f10, f3, rmm # perform operation
fadd.d f1, f10, f3, rne # perform operation
fadd.d f1, f10, f3, rtz # perform operation
fadd.d f1, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x3, 0x635ceef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fadd.d f3, f25, f12, dyn # perform operation
fadd.d f3, f25, f12, rdn # perform operation
fadd.d f3, f25, f12, rmm # perform operation
fadd.d f3, f25, f12, rne # perform operation
fadd.d f3, f25, f12, rtz # perform operation
fadd.d f3, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x17, 0xdf138d84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fadd.d f17, f26, f2, dyn # perform operation
fadd.d f17, f26, f2, rdn # perform operation
fadd.d f17, f26, f2, rmm # perform operation
fadd.d f17, f26, f2, rne # perform operation
fadd.d f17, f26, f2, rtz # perform operation
fadd.d f17, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x24, 0x69e77a3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fadd.d f24, f9, f12, dyn # perform operation
fadd.d f24, f9, f12, rdn # perform operation
fadd.d f24, f9, f12, rmm # perform operation
fadd.d f24, f9, f12, rne # perform operation
fadd.d f24, f9, f12, rtz # perform operation
fadd.d f24, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x18, 0x65a6b5d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fadd.d f18, f26, f2, dyn # perform operation
fadd.d f18, f26, f2, rdn # perform operation
fadd.d f18, f26, f2, rmm # perform operation
fadd.d f18, f26, f2, rne # perform operation
fadd.d f18, f26, f2, rtz # perform operation
fadd.d f18, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f26, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x10, 0x2828471b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fadd.d f10, f5, f14, dyn # perform operation
fadd.d f10, f5, f14, rdn # perform operation
fadd.d f10, f5, f14, rmm # perform operation
fadd.d f10, f5, f14, rne # perform operation
fadd.d f10, f5, f14, rtz # perform operation
fadd.d f10, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x1, 0x1d96451c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fadd.d f1, f13, f28, dyn # perform operation
fadd.d f1, f13, f28, rdn # perform operation
fadd.d f1, f13, f28, rmm # perform operation
fadd.d f1, f13, f28, rne # perform operation
fadd.d f1, f13, f28, rtz # perform operation
fadd.d f1, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x18, 0x1753adcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
fadd.d f18, f8, f11, dyn # perform operation
fadd.d f18, f8, f11, rdn # perform operation
fadd.d f18, f8, f11, rmm # perform operation
fadd.d f18, f8, f11, rne # perform operation
fadd.d f18, f8, f11, rtz # perform operation
fadd.d f18, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x18, 0xfaf089a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fadd.d f18, f29, f25, dyn # perform operation
fadd.d f18, f29, f25, rdn # perform operation
fadd.d f18, f29, f25, rmm # perform operation
fadd.d f18, f29, f25, rne # perform operation
fadd.d f18, f29, f25, rtz # perform operation
fadd.d f18, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x26, 0xdcd3cb8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
fadd.d f26, f30, f16, dyn # perform operation
fadd.d f26, f30, f16, rdn # perform operation
fadd.d f26, f30, f16, rmm # perform operation
fadd.d f26, f30, f16, rne # perform operation
fadd.d f26, f30, f16, rtz # perform operation
fadd.d f26, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x1, 0x51a4c378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fadd.d f1, f25, f21, dyn # perform operation
fadd.d f1, f25, f21, rdn # perform operation
fadd.d f1, f25, f21, rmm # perform operation
fadd.d f1, f25, f21, rne # perform operation
fadd.d f1, f25, f21, rtz # perform operation
fadd.d f1, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x28, 0x4bddcd57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fadd.d f28, f29, f6, dyn # perform operation
fadd.d f28, f29, f6, rdn # perform operation
fadd.d f28, f29, f6, rmm # perform operation
fadd.d f28, f29, f6, rne # perform operation
fadd.d f28, f29, f6, rtz # perform operation
fadd.d f28, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x23, 0x663f2122 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fadd.d f23, f1, f18, dyn # perform operation
fadd.d f23, f1, f18, rdn # perform operation
fadd.d f23, f1, f18, rmm # perform operation
fadd.d f23, f1, f18, rne # perform operation
fadd.d f23, f1, f18, rtz # perform operation
fadd.d f23, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x20, 0xf3e95c5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fadd.d f20, f4, f12, dyn # perform operation
fadd.d f20, f4, f12, rdn # perform operation
fadd.d f20, f4, f12, rmm # perform operation
fadd.d f20, f4, f12, rne # perform operation
fadd.d f20, f4, f12, rtz # perform operation
fadd.d f20, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x21, 0xad3fdf6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fadd.d f21, f24, f28, dyn # perform operation
fadd.d f21, f24, f28, rdn # perform operation
fadd.d f21, f24, f28, rmm # perform operation
fadd.d f21, f24, f28, rne # perform operation
fadd.d f21, f24, f28, rtz # perform operation
fadd.d f21, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x12, 0x2d14d953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fadd.d f12, f31, f29, dyn # perform operation
fadd.d f12, f31, f29, rdn # perform operation
fadd.d f12, f31, f29, rmm # perform operation
fadd.d f12, f31, f29, rne # perform operation
fadd.d f12, f31, f29, rtz # perform operation
fadd.d f12, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x5, 0x22aee780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fadd.d f5, f20, f31, dyn # perform operation
fadd.d f5, f20, f31, rdn # perform operation
fadd.d f5, f20, f31, rmm # perform operation
fadd.d f5, f20, f31, rne # perform operation
fadd.d f5, f20, f31, rtz # perform operation
fadd.d f5, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x13, 0xb2d5b064 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fadd.d f13, f1, f15, dyn # perform operation
fadd.d f13, f1, f15, rdn # perform operation
fadd.d f13, f1, f15, rmm # perform operation
fadd.d f13, f1, f15, rne # perform operation
fadd.d f13, f1, f15, rtz # perform operation
fadd.d f13, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x29, 0x0b119aba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fadd.d f29, f5, f13, dyn # perform operation
fadd.d f29, f5, f13, rdn # perform operation
fadd.d f29, f5, f13, rmm # perform operation
fadd.d f29, f5, f13, rne # perform operation
fadd.d f29, f5, f13, rtz # perform operation
fadd.d f29, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x24, 0x30be2687 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fadd.d f24, f26, f27, dyn # perform operation
fadd.d f24, f26, f27, rdn # perform operation
fadd.d f24, f26, f27, rmm # perform operation
fadd.d f24, f26, f27, rne # perform operation
fadd.d f24, f26, f27, rtz # perform operation
fadd.d f24, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x12, 0x84d27acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fadd.d f12, f13, f8, dyn # perform operation
fadd.d f12, f13, f8, rdn # perform operation
fadd.d f12, f13, f8, rmm # perform operation
fadd.d f12, f13, f8, rne # perform operation
fadd.d f12, f13, f8, rtz # perform operation
fadd.d f12, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x28, 0xc4fc3a9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fadd.d f28, f17, f18, dyn # perform operation
fadd.d f28, f17, f18, rdn # perform operation
fadd.d f28, f17, f18, rmm # perform operation
fadd.d f28, f17, f18, rne # perform operation
fadd.d f28, f17, f18, rtz # perform operation
fadd.d f28, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x29, 0xe4894b58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fadd.d f29, f14, f6, dyn # perform operation
fadd.d f29, f14, f6, rdn # perform operation
fadd.d f29, f14, f6, rmm # perform operation
fadd.d f29, f14, f6, rne # perform operation
fadd.d f29, f14, f6, rtz # perform operation
fadd.d f29, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x23, 0xa37b334e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
fadd.d f23, f27, f13, dyn # perform operation
fadd.d f23, f27, f13, rdn # perform operation
fadd.d f23, f27, f13, rmm # perform operation
fadd.d f23, f27, f13, rne # perform operation
fadd.d f23, f27, f13, rtz # perform operation
fadd.d f23, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x27, 0x1cb171c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fadd.d f27, f30, f3, dyn # perform operation
fadd.d f27, f30, f3, rdn # perform operation
fadd.d f27, f30, f3, rmm # perform operation
fadd.d f27, f30, f3, rne # perform operation
fadd.d f27, f30, f3, rtz # perform operation
fadd.d f27, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x7, 0x1d47b701 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fadd.d f7, f3, f29, dyn # perform operation
fadd.d f7, f3, f29, rdn # perform operation
fadd.d f7, f3, f29, rmm # perform operation
fadd.d f7, f3, f29, rne # perform operation
fadd.d f7, f3, f29, rtz # perform operation
fadd.d f7, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x16, 0xfa60aa53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fadd.d f16, f10, f9, dyn # perform operation
fadd.d f16, f10, f9, rdn # perform operation
fadd.d f16, f10, f9, rmm # perform operation
fadd.d f16, f10, f9, rne # perform operation
fadd.d f16, f10, f9, rtz # perform operation
fadd.d f16, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x24, 0x1e5352c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
fadd.d f24, f1, f4, dyn # perform operation
fadd.d f24, f1, f4, rdn # perform operation
fadd.d f24, f1, f4, rmm # perform operation
fadd.d f24, f1, f4, rne # perform operation
fadd.d f24, f1, f4, rtz # perform operation
fadd.d f24, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x31, 0x2276cf2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fadd.d f31, f8, f14, dyn # perform operation
fadd.d f31, f8, f14, rdn # perform operation
fadd.d f31, f8, f14, rmm # perform operation
fadd.d f31, f8, f14, rne # perform operation
fadd.d f31, f8, f14, rtz # perform operation
fadd.d f31, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x19, 0xbc407a6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fadd.d f19, f16, f14, dyn # perform operation
fadd.d f19, f16, f14, rdn # perform operation
fadd.d f19, f16, f14, rmm # perform operation
fadd.d f19, f16, f14, rne # perform operation
fadd.d f19, f16, f14, rtz # perform operation
fadd.d f19, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x17, 0xfe30726f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
fadd.d f17, f25, f28, dyn # perform operation
fadd.d f17, f25, f28, rdn # perform operation
fadd.d f17, f25, f28, rmm # perform operation
fadd.d f17, f25, f28, rne # perform operation
fadd.d f17, f25, f28, rtz # perform operation
fadd.d f17, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x26, 0xaf44e452 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fadd.d f26, f1, f22, dyn # perform operation
fadd.d f26, f1, f22, rdn # perform operation
fadd.d f26, f1, f22, rmm # perform operation
fadd.d f26, f1, f22, rne # perform operation
fadd.d f26, f1, f22, rtz # perform operation
fadd.d f26, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x22, 0xf4eb5e70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fadd.d f22, f23, f9, dyn # perform operation
fadd.d f22, f23, f9, rdn # perform operation
fadd.d f22, f23, f9, rmm # perform operation
fadd.d f22, f23, f9, rne # perform operation
fadd.d f22, f23, f9, rtz # perform operation
fadd.d f22, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x1, 0x4577de41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fadd.d f1, f11, f13, dyn # perform operation
fadd.d f1, f11, f13, rdn # perform operation
fadd.d f1, f11, f13, rmm # perform operation
fadd.d f1, f11, f13, rne # perform operation
fadd.d f1, f11, f13, rtz # perform operation
fadd.d f1, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f11, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x24, 0xe64c090b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fadd.d f24, f26, f28, dyn # perform operation
fadd.d f24, f26, f28, rdn # perform operation
fadd.d f24, f26, f28, rmm # perform operation
fadd.d f24, f26, f28, rne # perform operation
fadd.d f24, f26, f28, rtz # perform operation
fadd.d f24, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x5, 0x0b2a6a3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fadd.d f5, f6, f3, dyn # perform operation
fadd.d f5, f6, f3, rdn # perform operation
fadd.d f5, f6, f3, rmm # perform operation
fadd.d f5, f6, f3, rne # perform operation
fadd.d f5, f6, f3, rtz # perform operation
fadd.d f5, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x10, 0x1402d2d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fadd.d f10, f31, f21, dyn # perform operation
fadd.d f10, f31, f21, rdn # perform operation
fadd.d f10, f31, f21, rmm # perform operation
fadd.d f10, f31, f21, rne # perform operation
fadd.d f10, f31, f21, rtz # perform operation
fadd.d f10, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x28, 0x78cf44ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fadd.d f28, f4, f19, dyn # perform operation
fadd.d f28, f4, f19, rdn # perform operation
fadd.d f28, f4, f19, rmm # perform operation
fadd.d f28, f4, f19, rne # perform operation
fadd.d f28, f4, f19, rtz # perform operation
fadd.d f28, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x7, 0xd91173a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fadd.d f7, f6, f14, dyn # perform operation
fadd.d f7, f6, f14, rdn # perform operation
fadd.d f7, f6, f14, rmm # perform operation
fadd.d f7, f6, f14, rne # perform operation
fadd.d f7, f6, f14, rtz # perform operation
fadd.d f7, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x15, 0x52d1d37f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fadd.d f15, f12, f16, dyn # perform operation
fadd.d f15, f12, f16, rdn # perform operation
fadd.d f15, f12, f16, rmm # perform operation
fadd.d f15, f12, f16, rne # perform operation
fadd.d f15, f12, f16, rtz # perform operation
fadd.d f15, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f12, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x12, 0xd0a6f1fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
fadd.d f12, f31, f21, dyn # perform operation
fadd.d f12, f31, f21, rdn # perform operation
fadd.d f12, f31, f21, rmm # perform operation
fadd.d f12, f31, f21, rne # perform operation
fadd.d f12, f31, f21, rtz # perform operation
fadd.d f12, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x22, 0x36bae13a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fadd.d f22, f2, f6, dyn # perform operation
fadd.d f22, f2, f6, rdn # perform operation
fadd.d f22, f2, f6, rmm # perform operation
fadd.d f22, f2, f6, rne # perform operation
fadd.d f22, f2, f6, rtz # perform operation
fadd.d f22, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x12, 0xb97b26be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fadd.d f12, f23, f30, dyn # perform operation
fadd.d f12, f23, f30, rdn # perform operation
fadd.d f12, f23, f30, rmm # perform operation
fadd.d f12, f23, f30, rne # perform operation
fadd.d f12, f23, f30, rtz # perform operation
fadd.d f12, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x17, 0x511f8dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x800fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fadd.d f17, f28, f4, dyn # perform operation
fadd.d f17, f28, f4, rdn # perform operation
fadd.d f17, f28, f4, rmm # perform operation
fadd.d f17, f28, f4, rne # perform operation
fadd.d f17, f28, f4, rtz # perform operation
fadd.d f17, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x30, 0x5bc0a189 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fadd.d f30, f21, f13, dyn # perform operation
fadd.d f30, f21, f13, rdn # perform operation
fadd.d f30, f21, f13, rmm # perform operation
fadd.d f30, f21, f13, rne # perform operation
fadd.d f30, f21, f13, rtz # perform operation
fadd.d f30, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x26, 0x43e09d29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fadd.d f26, f19, f20, dyn # perform operation
fadd.d f26, f19, f20, rdn # perform operation
fadd.d f26, f19, f20, rmm # perform operation
fadd.d f26, f19, f20, rne # perform operation
fadd.d f26, f19, f20, rtz # perform operation
fadd.d f26, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x28, 0xb2ae3071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fadd.d f28, f13, f29, dyn # perform operation
fadd.d f28, f13, f29, rdn # perform operation
fadd.d f28, f13, f29, rmm # perform operation
fadd.d f28, f13, f29, rne # perform operation
fadd.d f28, f13, f29, rtz # perform operation
fadd.d f28, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x28, 0xcdf4d0c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fadd.d f28, f4, f11, dyn # perform operation
fadd.d f28, f4, f11, rdn # perform operation
fadd.d f28, f4, f11, rmm # perform operation
fadd.d f28, f4, f11, rne # perform operation
fadd.d f28, f4, f11, rtz # perform operation
fadd.d f28, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x11, 0x289e5d14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fadd.d f11, f22, f29, dyn # perform operation
fadd.d f11, f22, f29, rdn # perform operation
fadd.d f11, f22, f29, rmm # perform operation
fadd.d f11, f22, f29, rne # perform operation
fadd.d f11, f22, f29, rtz # perform operation
fadd.d f11, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x5, 0x0c67041b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fadd.d f5, f20, f14, dyn # perform operation
fadd.d f5, f20, f14, rdn # perform operation
fadd.d f5, f20, f14, rmm # perform operation
fadd.d f5, f20, f14, rne # perform operation
fadd.d f5, f20, f14, rtz # perform operation
fadd.d f5, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x26, 0xcb611856 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fadd.d f26, f7, f11, dyn # perform operation
fadd.d f26, f7, f11, rdn # perform operation
fadd.d f26, f7, f11, rmm # perform operation
fadd.d f26, f7, f11, rne # perform operation
fadd.d f26, f7, f11, rtz # perform operation
fadd.d f26, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x16, 0xc0c1f8e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fadd.d f16, f6, f24, dyn # perform operation
fadd.d f16, f6, f24, rdn # perform operation
fadd.d f16, f6, f24, rmm # perform operation
fadd.d f16, f6, f24, rne # perform operation
fadd.d f16, f6, f24, rtz # perform operation
fadd.d f16, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x3, 0xeae59a15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fadd.d f3, f11, f17, dyn # perform operation
fadd.d f3, f11, f17, rdn # perform operation
fadd.d f3, f11, f17, rmm # perform operation
fadd.d f3, f11, f17, rne # perform operation
fadd.d f3, f11, f17, rtz # perform operation
fadd.d f3, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x16, 0xcd1842d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fadd.d f16, f8, f24, dyn # perform operation
fadd.d f16, f8, f24, rdn # perform operation
fadd.d f16, f8, f24, rmm # perform operation
fadd.d f16, f8, f24, rne # perform operation
fadd.d f16, f8, f24, rtz # perform operation
fadd.d f16, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x11, 0xbc33e9ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fadd.d f11, f8, f15, dyn # perform operation
fadd.d f11, f8, f15, rdn # perform operation
fadd.d f11, f8, f15, rmm # perform operation
fadd.d f11, f8, f15, rne # perform operation
fadd.d f11, f8, f15, rtz # perform operation
fadd.d f11, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x9, 0xa7c7eaf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fadd.d f9, f16, f25, dyn # perform operation
fadd.d f9, f16, f25, rdn # perform operation
fadd.d f9, f16, f25, rmm # perform operation
fadd.d f9, f16, f25, rne # perform operation
fadd.d f9, f16, f25, rtz # perform operation
fadd.d f9, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x9, 0x3deb9a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fadd.d f9, f13, f27, dyn # perform operation
fadd.d f9, f13, f27, rdn # perform operation
fadd.d f9, f13, f27, rmm # perform operation
fadd.d f9, f13, f27, rne # perform operation
fadd.d f9, f13, f27, rtz # perform operation
fadd.d f9, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x3, 0x532474d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fadd.d f3, f12, f13, dyn # perform operation
fadd.d f3, f12, f13, rdn # perform operation
fadd.d f3, f12, f13, rmm # perform operation
fadd.d f3, f12, f13, rne # perform operation
fadd.d f3, f12, f13, rtz # perform operation
fadd.d f3, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x1, 0x8d16864c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fadd.d f1, f31, f8, dyn # perform operation
fadd.d f1, f31, f8, rdn # perform operation
fadd.d f1, f31, f8, rmm # perform operation
fadd.d f1, f31, f8, rne # perform operation
fadd.d f1, f31, f8, rtz # perform operation
fadd.d f1, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x1, 0xb372ef20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fadd.d f1, f17, f20, dyn # perform operation
fadd.d f1, f17, f20, rdn # perform operation
fadd.d f1, f17, f20, rmm # perform operation
fadd.d f1, f17, f20, rne # perform operation
fadd.d f1, f17, f20, rtz # perform operation
fadd.d f1, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x18, 0x4bc14666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fadd.d f18, f13, f12, dyn # perform operation
fadd.d f18, f13, f12, rdn # perform operation
fadd.d f18, f13, f12, rmm # perform operation
fadd.d f18, f13, f12, rne # perform operation
fadd.d f18, f13, f12, rtz # perform operation
fadd.d f18, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x1, 0x9b6d3e61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fadd.d f1, f6, f10, dyn # perform operation
fadd.d f1, f6, f10, rdn # perform operation
fadd.d f1, f6, f10, rmm # perform operation
fadd.d f1, f6, f10, rne # perform operation
fadd.d f1, f6, f10, rtz # perform operation
fadd.d f1, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x19, 0x15e5342a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fadd.d f19, f23, f30, dyn # perform operation
fadd.d f19, f23, f30, rdn # perform operation
fadd.d f19, f23, f30, rmm # perform operation
fadd.d f19, f23, f30, rne # perform operation
fadd.d f19, f23, f30, rtz # perform operation
fadd.d f19, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x12, 0xcc4d7d53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fadd.d f12, f5, f18, dyn # perform operation
fadd.d f12, f5, f18, rdn # perform operation
fadd.d f12, f5, f18, rmm # perform operation
fadd.d f12, f5, f18, rne # perform operation
fadd.d f12, f5, f18, rtz # perform operation
fadd.d f12, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x31, 0x95352fa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fadd.d f31, f2, f13, dyn # perform operation
fadd.d f31, f2, f13, rdn # perform operation
fadd.d f31, f2, f13, rmm # perform operation
fadd.d f31, f2, f13, rne # perform operation
fadd.d f31, f2, f13, rtz # perform operation
fadd.d f31, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x13, 0xce2a8525 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fadd.d f13, f29, f12, dyn # perform operation
fadd.d f13, f29, f12, rdn # perform operation
fadd.d f13, f29, f12, rmm # perform operation
fadd.d f13, f29, f12, rne # perform operation
fadd.d f13, f29, f12, rtz # perform operation
fadd.d f13, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x3, 0xe26bc3be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fadd.d f3, f16, f25, dyn # perform operation
fadd.d f3, f16, f25, rdn # perform operation
fadd.d f3, f16, f25, rmm # perform operation
fadd.d f3, f16, f25, rne # perform operation
fadd.d f3, f16, f25, rtz # perform operation
fadd.d f3, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x8, 0x2785cc68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
fadd.d f8, f26, f7, dyn # perform operation
fadd.d f8, f26, f7, rdn # perform operation
fadd.d f8, f26, f7, rmm # perform operation
fadd.d f8, f26, f7, rne # perform operation
fadd.d f8, f26, f7, rtz # perform operation
fadd.d f8, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x2, 0x5b7f3d04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fadd.d f2, f21, f14, dyn # perform operation
fadd.d f2, f21, f14, rdn # perform operation
fadd.d f2, f21, f14, rmm # perform operation
fadd.d f2, f21, f14, rne # perform operation
fadd.d f2, f21, f14, rtz # perform operation
fadd.d f2, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x16, 0xe2c6c3a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fadd.d f16, f20, f8, dyn # perform operation
fadd.d f16, f20, f8, rdn # perform operation
fadd.d f16, f20, f8, rmm # perform operation
fadd.d f16, f20, f8, rne # perform operation
fadd.d f16, f20, f8, rtz # perform operation
fadd.d f16, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x30, 0xc0943a49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fadd.d f30, f20, f12, dyn # perform operation
fadd.d f30, f20, f12, rdn # perform operation
fadd.d f30, f20, f12, rmm # perform operation
fadd.d f30, f20, f12, rne # perform operation
fadd.d f30, f20, f12, rtz # perform operation
fadd.d f30, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x17, 0x1a901676 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fadd.d f17, f24, f10, dyn # perform operation
fadd.d f17, f24, f10, rdn # perform operation
fadd.d f17, f24, f10, rmm # perform operation
fadd.d f17, f24, f10, rne # perform operation
fadd.d f17, f24, f10, rtz # perform operation
fadd.d f17, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x9, 0x791ea716 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fadd.d f9, f27, f25, dyn # perform operation
fadd.d f9, f27, f25, rdn # perform operation
fadd.d f9, f27, f25, rmm # perform operation
fadd.d f9, f27, f25, rne # perform operation
fadd.d f9, f27, f25, rtz # perform operation
fadd.d f9, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x8, 0x2c7a3cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fadd.d f8, f2, f11, dyn # perform operation
fadd.d f8, f2, f11, rdn # perform operation
fadd.d f8, f2, f11, rmm # perform operation
fadd.d f8, f2, f11, rne # perform operation
fadd.d f8, f2, f11, rtz # perform operation
fadd.d f8, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x28, 0xbd4e6db4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fadd.d f28, f23, f19, dyn # perform operation
fadd.d f28, f23, f19, rdn # perform operation
fadd.d f28, f23, f19, rmm # perform operation
fadd.d f28, f23, f19, rne # perform operation
fadd.d f28, f23, f19, rtz # perform operation
fadd.d f28, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x25, 0x354a3b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fadd.d f25, f15, f21, dyn # perform operation
fadd.d f25, f15, f21, rdn # perform operation
fadd.d f25, f15, f21, rmm # perform operation
fadd.d f25, f15, f21, rne # perform operation
fadd.d f25, f15, f21, rtz # perform operation
fadd.d f25, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x11, 0x428b8703 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
fadd.d f11, f12, f23, dyn # perform operation
fadd.d f11, f12, f23, rdn # perform operation
fadd.d f11, f12, f23, rmm # perform operation
fadd.d f11, f12, f23, rne # perform operation
fadd.d f11, f12, f23, rtz # perform operation
fadd.d f11, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x26, 0x1611f179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fadd.d f26, f24, f3, dyn # perform operation
fadd.d f26, f24, f3, rdn # perform operation
fadd.d f26, f24, f3, rmm # perform operation
fadd.d f26, f24, f3, rne # perform operation
fadd.d f26, f24, f3, rtz # perform operation
fadd.d f26, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x2, 0x73f0f3c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fadd.d f2, f31, f5, dyn # perform operation
fadd.d f2, f31, f5, rdn # perform operation
fadd.d f2, f31, f5, rmm # perform operation
fadd.d f2, f31, f5, rne # perform operation
fadd.d f2, f31, f5, rtz # perform operation
fadd.d f2, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x4, 0x91af3372 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fadd.d f4, f17, f9, dyn # perform operation
fadd.d f4, f17, f9, rdn # perform operation
fadd.d f4, f17, f9, rmm # perform operation
fadd.d f4, f17, f9, rne # perform operation
fadd.d f4, f17, f9, rtz # perform operation
fadd.d f4, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x3ff9f99a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fadd.d f29, f21, f17, dyn # perform operation
fadd.d f29, f21, f17, rdn # perform operation
fadd.d f29, f21, f17, rmm # perform operation
fadd.d f29, f21, f17, rne # perform operation
fadd.d f29, f21, f17, rtz # perform operation
fadd.d f29, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x10, 0xe0829559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fadd.d f10, f2, f19, dyn # perform operation
fadd.d f10, f2, f19, rdn # perform operation
fadd.d f10, f2, f19, rmm # perform operation
fadd.d f10, f2, f19, rne # perform operation
fadd.d f10, f2, f19, rtz # perform operation
fadd.d f10, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x30, 0xa2de27c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fadd.d f30, f5, f3, dyn # perform operation
fadd.d f30, f5, f3, rdn # perform operation
fadd.d f30, f5, f3, rmm # perform operation
fadd.d f30, f5, f3, rne # perform operation
fadd.d f30, f5, f3, rtz # perform operation
fadd.d f30, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x31, 0x5481a53f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fadd.d f31, f18, f14, dyn # perform operation
fadd.d f31, f18, f14, rdn # perform operation
fadd.d f31, f18, f14, rmm # perform operation
fadd.d f31, f18, f14, rne # perform operation
fadd.d f31, f18, f14, rtz # perform operation
fadd.d f31, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x21, 0x9dff5588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
fadd.d f21, f28, f31, dyn # perform operation
fadd.d f21, f28, f31, rdn # perform operation
fadd.d f21, f28, f31, rmm # perform operation
fadd.d f21, f28, f31, rne # perform operation
fadd.d f21, f28, f31, rtz # perform operation
fadd.d f21, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x28, 0x42cc8235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fadd.d f28, f21, f19, dyn # perform operation
fadd.d f28, f21, f19, rdn # perform operation
fadd.d f28, f21, f19, rmm # perform operation
fadd.d f28, f21, f19, rne # perform operation
fadd.d f28, f21, f19, rtz # perform operation
fadd.d f28, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x26, 0xdc2b565a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fadd.d f26, f30, f12, dyn # perform operation
fadd.d f26, f30, f12, rdn # perform operation
fadd.d f26, f30, f12, rmm # perform operation
fadd.d f26, f30, f12, rne # perform operation
fadd.d f26, f30, f12, rtz # perform operation
fadd.d f26, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x10, 0x8c81dc2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fadd.d f10, f31, f9, dyn # perform operation
fadd.d f10, f31, f9, rdn # perform operation
fadd.d f10, f31, f9, rmm # perform operation
fadd.d f10, f31, f9, rne # perform operation
fadd.d f10, f31, f9, rtz # perform operation
fadd.d f10, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f31, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x30, 0xe63a5fbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fadd.d f30, f27, f17, dyn # perform operation
fadd.d f30, f27, f17, rdn # perform operation
fadd.d f30, f27, f17, rmm # perform operation
fadd.d f30, f27, f17, rne # perform operation
fadd.d f30, f27, f17, rtz # perform operation
fadd.d f30, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x3, 0xdebf9d73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fadd.d f3, f15, f19, dyn # perform operation
fadd.d f3, f15, f19, rdn # perform operation
fadd.d f3, f15, f19, rmm # perform operation
fadd.d f3, f15, f19, rne # perform operation
fadd.d f3, f15, f19, rtz # perform operation
fadd.d f3, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x26, 0x144a7041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
fadd.d f26, f14, f6, dyn # perform operation
fadd.d f26, f14, f6, rdn # perform operation
fadd.d f26, f14, f6, rmm # perform operation
fadd.d f26, f14, f6, rne # perform operation
fadd.d f26, f14, f6, rtz # perform operation
fadd.d f26, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x11, 0xab55b08d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fadd.d f11, f25, f28, dyn # perform operation
fadd.d f11, f25, f28, rdn # perform operation
fadd.d f11, f25, f28, rmm # perform operation
fadd.d f11, f25, f28, rne # perform operation
fadd.d f11, f25, f28, rtz # perform operation
fadd.d f11, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x6, 0xe8719a00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fadd.d f6, f27, f29, dyn # perform operation
fadd.d f6, f27, f29, rdn # perform operation
fadd.d f6, f27, f29, rmm # perform operation
fadd.d f6, f27, f29, rne # perform operation
fadd.d f6, f27, f29, rtz # perform operation
fadd.d f6, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x14, 0x8bb8973f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fadd.d f14, f5, f18, dyn # perform operation
fadd.d f14, f5, f18, rdn # perform operation
fadd.d f14, f5, f18, rmm # perform operation
fadd.d f14, f5, f18, rne # perform operation
fadd.d f14, f5, f18, rtz # perform operation
fadd.d f14, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x5, 0x7efd4366 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fadd.d f5, f17, f6, dyn # perform operation
fadd.d f5, f17, f6, rdn # perform operation
fadd.d f5, f17, f6, rmm # perform operation
fadd.d f5, f17, f6, rne # perform operation
fadd.d f5, f17, f6, rtz # perform operation
fadd.d f5, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x9, 0xf5479613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
fadd.d f9, f14, f17, dyn # perform operation
fadd.d f9, f14, f17, rdn # perform operation
fadd.d f9, f14, f17, rmm # perform operation
fadd.d f9, f14, f17, rne # perform operation
fadd.d f9, f14, f17, rtz # perform operation
fadd.d f9, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f14, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x3, 0xb8cb92a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fadd.d f3, f5, f10, dyn # perform operation
fadd.d f3, f5, f10, rdn # perform operation
fadd.d f3, f5, f10, rmm # perform operation
fadd.d f3, f5, f10, rne # perform operation
fadd.d f3, f5, f10, rtz # perform operation
fadd.d f3, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x21, 0x96bb2534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fadd.d f21, f14, f7, dyn # perform operation
fadd.d f21, f14, f7, rdn # perform operation
fadd.d f21, f14, f7, rmm # perform operation
fadd.d f21, f14, f7, rne # perform operation
fadd.d f21, f14, f7, rtz # perform operation
fadd.d f21, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x27, 0xd7c8ea1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fadd.d f27, f29, f7, dyn # perform operation
fadd.d f27, f29, f7, rdn # perform operation
fadd.d f27, f29, f7, rmm # perform operation
fadd.d f27, f29, f7, rne # perform operation
fadd.d f27, f29, f7, rtz # perform operation
fadd.d f27, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x25, 0x53be01e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
fadd.d f25, f24, f22, dyn # perform operation
fadd.d f25, f24, f22, rdn # perform operation
fadd.d f25, f24, f22, rmm # perform operation
fadd.d f25, f24, f22, rne # perform operation
fadd.d f25, f24, f22, rtz # perform operation
fadd.d f25, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x27, 0xc39b796e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fadd.d f27, f12, f29, dyn # perform operation
fadd.d f27, f12, f29, rdn # perform operation
fadd.d f27, f12, f29, rmm # perform operation
fadd.d f27, f12, f29, rne # perform operation
fadd.d f27, f12, f29, rtz # perform operation
fadd.d f27, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x21, 0x3cd89c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fadd.d f21, f26, f11, dyn # perform operation
fadd.d f21, f26, f11, rdn # perform operation
fadd.d f21, f26, f11, rmm # perform operation
fadd.d f21, f26, f11, rne # perform operation
fadd.d f21, f26, f11, rtz # perform operation
fadd.d f21, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x30, 0xcd96ac88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
fadd.d f30, f2, f4, dyn # perform operation
fadd.d f30, f2, f4, rdn # perform operation
fadd.d f30, f2, f4, rmm # perform operation
fadd.d f30, f2, f4, rne # perform operation
fadd.d f30, f2, f4, rtz # perform operation
fadd.d f30, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x7, 0x74ad7c62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fadd.d f7, f19, f23, dyn # perform operation
fadd.d f7, f19, f23, rdn # perform operation
fadd.d f7, f19, f23, rmm # perform operation
fadd.d f7, f19, f23, rne # perform operation
fadd.d f7, f19, f23, rtz # perform operation
fadd.d f7, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x25, 0x91a38a23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fadd.d f25, f31, f2, dyn # perform operation
fadd.d f25, f31, f2, rdn # perform operation
fadd.d f25, f31, f2, rmm # perform operation
fadd.d f25, f31, f2, rne # perform operation
fadd.d f25, f31, f2, rtz # perform operation
fadd.d f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x30, 0x5fa85587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fadd.d f30, f16, f15, dyn # perform operation
fadd.d f30, f16, f15, rdn # perform operation
fadd.d f30, f16, f15, rmm # perform operation
fadd.d f30, f16, f15, rne # perform operation
fadd.d f30, f16, f15, rtz # perform operation
fadd.d f30, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x24, 0xb90e01bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fadd.d f24, f23, f22, dyn # perform operation
fadd.d f24, f23, f22, rdn # perform operation
fadd.d f24, f23, f22, rmm # perform operation
fadd.d f24, f23, f22, rne # perform operation
fadd.d f24, f23, f22, rtz # perform operation
fadd.d f24, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x4, 0xe10b3998 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fadd.d f4, f12, f29, dyn # perform operation
fadd.d f4, f12, f29, rdn # perform operation
fadd.d f4, f12, f29, rmm # perform operation
fadd.d f4, f12, f29, rne # perform operation
fadd.d f4, f12, f29, rtz # perform operation
fadd.d f4, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x17, 0xda7a1dbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fadd.d f17, f9, f6, dyn # perform operation
fadd.d f17, f9, f6, rdn # perform operation
fadd.d f17, f9, f6, rmm # perform operation
fadd.d f17, f9, f6, rne # perform operation
fadd.d f17, f9, f6, rtz # perform operation
fadd.d f17, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x11, 0x17eeee3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fadd.d f11, f18, f25, dyn # perform operation
fadd.d f11, f18, f25, rdn # perform operation
fadd.d f11, f18, f25, rmm # perform operation
fadd.d f11, f18, f25, rne # perform operation
fadd.d f11, f18, f25, rtz # perform operation
fadd.d f11, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x21, 0x654c1a53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fadd.d f21, f20, f1, dyn # perform operation
fadd.d f21, f20, f1, rdn # perform operation
fadd.d f21, f20, f1, rmm # perform operation
fadd.d f21, f20, f1, rne # perform operation
fadd.d f21, f20, f1, rtz # perform operation
fadd.d f21, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x30, 0x6e883e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
fadd.d f30, f11, f4, dyn # perform operation
fadd.d f30, f11, f4, rdn # perform operation
fadd.d f30, f11, f4, rmm # perform operation
fadd.d f30, f11, f4, rne # perform operation
fadd.d f30, f11, f4, rtz # perform operation
fadd.d f30, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x7, 0x69792e6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fadd.d f7, f23, f18, dyn # perform operation
fadd.d f7, f23, f18, rdn # perform operation
fadd.d f7, f23, f18, rmm # perform operation
fadd.d f7, f23, f18, rne # perform operation
fadd.d f7, f23, f18, rtz # perform operation
fadd.d f7, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x18, 0x08735227 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fadd.d f18, f29, f10, dyn # perform operation
fadd.d f18, f29, f10, rdn # perform operation
fadd.d f18, f29, f10, rmm # perform operation
fadd.d f18, f29, f10, rne # perform operation
fadd.d f18, f29, f10, rtz # perform operation
fadd.d f18, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x26, 0x39c9a931 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fadd.d f26, f25, f21, dyn # perform operation
fadd.d f26, f25, f21, rdn # perform operation
fadd.d f26, f25, f21, rmm # perform operation
fadd.d f26, f25, f21, rne # perform operation
fadd.d f26, f25, f21, rtz # perform operation
fadd.d f26, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x24, 0x3edd7bb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fadd.d f24, f13, f3, dyn # perform operation
fadd.d f24, f13, f3, rdn # perform operation
fadd.d f24, f13, f3, rmm # perform operation
fadd.d f24, f13, f3, rne # perform operation
fadd.d f24, f13, f3, rtz # perform operation
fadd.d f24, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x31, 0x160837d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fadd.d f31, f18, f12, dyn # perform operation
fadd.d f31, f18, f12, rdn # perform operation
fadd.d f31, f18, f12, rmm # perform operation
fadd.d f31, f18, f12, rne # perform operation
fadd.d f31, f18, f12, rtz # perform operation
fadd.d f31, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x26, 0x7ca90004 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fadd.d f26, f17, f2, dyn # perform operation
fadd.d f26, f17, f2, rdn # perform operation
fadd.d f26, f17, f2, rmm # perform operation
fadd.d f26, f17, f2, rne # perform operation
fadd.d f26, f17, f2, rtz # perform operation
fadd.d f26, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x6, 0x598c6502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
fadd.d f6, f11, f23, dyn # perform operation
fadd.d f6, f11, f23, rdn # perform operation
fadd.d f6, f11, f23, rmm # perform operation
fadd.d f6, f11, f23, rne # perform operation
fadd.d f6, f11, f23, rtz # perform operation
fadd.d f6, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x12, 0x603e3ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fadd.d f12, f27, f10, dyn # perform operation
fadd.d f12, f27, f10, rdn # perform operation
fadd.d f12, f27, f10, rmm # perform operation
fadd.d f12, f27, f10, rne # perform operation
fadd.d f12, f27, f10, rtz # perform operation
fadd.d f12, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x14, 0xd34d34a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fadd.d f14, f17, f31, dyn # perform operation
fadd.d f14, f17, f31, rdn # perform operation
fadd.d f14, f17, f31, rmm # perform operation
fadd.d f14, f17, f31, rne # perform operation
fadd.d f14, f17, f31, rtz # perform operation
fadd.d f14, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x11, 0x70aeb4ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fadd.d f11, f28, f3, dyn # perform operation
fadd.d f11, f28, f3, rdn # perform operation
fadd.d f11, f28, f3, rmm # perform operation
fadd.d f11, f28, f3, rne # perform operation
fadd.d f11, f28, f3, rtz # perform operation
fadd.d f11, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x11, 0x4d358df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fadd.d f11, f28, f24, dyn # perform operation
fadd.d f11, f28, f24, rdn # perform operation
fadd.d f11, f28, f24, rmm # perform operation
fadd.d f11, f28, f24, rne # perform operation
fadd.d f11, f28, f24, rtz # perform operation
fadd.d f11, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x18, 0xc334fc22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fadd.d f18, f24, f3, dyn # perform operation
fadd.d f18, f24, f3, rdn # perform operation
fadd.d f18, f24, f3, rmm # perform operation
fadd.d f18, f24, f3, rne # perform operation
fadd.d f18, f24, f3, rtz # perform operation
fadd.d f18, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x19, 0xf5d2e507 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fadd.d f19, f12, f21, dyn # perform operation
fadd.d f19, f12, f21, rdn # perform operation
fadd.d f19, f12, f21, rmm # perform operation
fadd.d f19, f12, f21, rne # perform operation
fadd.d f19, f12, f21, rtz # perform operation
fadd.d f19, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x1, 0xee8e2b05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fadd.d f1, f31, f23, dyn # perform operation
fadd.d f1, f31, f23, rdn # perform operation
fadd.d f1, f31, f23, rmm # perform operation
fadd.d f1, f31, f23, rne # perform operation
fadd.d f1, f31, f23, rtz # perform operation
fadd.d f1, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x24, 0x1f5d6d80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fadd.d f24, f10, f19, dyn # perform operation
fadd.d f24, f10, f19, rdn # perform operation
fadd.d f24, f10, f19, rmm # perform operation
fadd.d f24, f10, f19, rne # perform operation
fadd.d f24, f10, f19, rtz # perform operation
fadd.d f24, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x27, 0x7b615eeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fadd.d f27, f17, f21, dyn # perform operation
fadd.d f27, f17, f21, rdn # perform operation
fadd.d f27, f17, f21, rmm # perform operation
fadd.d f27, f17, f21, rne # perform operation
fadd.d f27, f17, f21, rtz # perform operation
fadd.d f27, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x24, 0x70fdfc16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fadd.d f24, f14, f3, dyn # perform operation
fadd.d f24, f14, f3, rdn # perform operation
fadd.d f24, f14, f3, rmm # perform operation
fadd.d f24, f14, f3, rne # perform operation
fadd.d f24, f14, f3, rtz # perform operation
fadd.d f24, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x13, 0x4b2d181a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fadd.d f13, f28, f1, dyn # perform operation
fadd.d f13, f28, f1, rdn # perform operation
fadd.d f13, f28, f1, rmm # perform operation
fadd.d f13, f28, f1, rne # perform operation
fadd.d f13, f28, f1, rtz # perform operation
fadd.d f13, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x27, 0x16834d8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fadd.d f27, f21, f4, dyn # perform operation
fadd.d f27, f21, f4, rdn # perform operation
fadd.d f27, f21, f4, rmm # perform operation
fadd.d f27, f21, f4, rne # perform operation
fadd.d f27, f21, f4, rtz # perform operation
fadd.d f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x7, 0xc6298468 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fadd.d f7, f24, f11, dyn # perform operation
fadd.d f7, f24, f11, rdn # perform operation
fadd.d f7, f24, f11, rmm # perform operation
fadd.d f7, f24, f11, rne # perform operation
fadd.d f7, f24, f11, rtz # perform operation
fadd.d f7, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x3, 0xb078f8af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fadd.d f3, f20, f28, dyn # perform operation
fadd.d f3, f20, f28, rdn # perform operation
fadd.d f3, f20, f28, rmm # perform operation
fadd.d f3, f20, f28, rne # perform operation
fadd.d f3, f20, f28, rtz # perform operation
fadd.d f3, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x21, 0x3ec77dbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
fadd.d f21, f31, f25, dyn # perform operation
fadd.d f21, f31, f25, rdn # perform operation
fadd.d f21, f31, f25, rmm # perform operation
fadd.d f21, f31, f25, rne # perform operation
fadd.d f21, f31, f25, rtz # perform operation
fadd.d f21, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x20, 0x0836fadb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fadd.d f20, f15, f14, dyn # perform operation
fadd.d f20, f15, f14, rdn # perform operation
fadd.d f20, f15, f14, rmm # perform operation
fadd.d f20, f15, f14, rne # perform operation
fadd.d f20, f15, f14, rtz # perform operation
fadd.d f20, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x23, 0xfb7759b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fadd.d f23, f7, f24, dyn # perform operation
fadd.d f23, f7, f24, rdn # perform operation
fadd.d f23, f7, f24, rmm # perform operation
fadd.d f23, f7, f24, rne # perform operation
fadd.d f23, f7, f24, rtz # perform operation
fadd.d f23, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x7, 0x98e0d541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fadd.d f7, f2, f4, dyn # perform operation
fadd.d f7, f2, f4, rdn # perform operation
fadd.d f7, f2, f4, rmm # perform operation
fadd.d f7, f2, f4, rne # perform operation
fadd.d f7, f2, f4, rtz # perform operation
fadd.d f7, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x2, 0xf7a92c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fadd.d f2, f31, f26, dyn # perform operation
fadd.d f2, f31, f26, rdn # perform operation
fadd.d f2, f31, f26, rmm # perform operation
fadd.d f2, f31, f26, rne # perform operation
fadd.d f2, f31, f26, rtz # perform operation
fadd.d f2, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x15, 0x1a1d3dca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fadd.d f15, f31, f14, dyn # perform operation
fadd.d f15, f31, f14, rdn # perform operation
fadd.d f15, f31, f14, rmm # perform operation
fadd.d f15, f31, f14, rne # perform operation
fadd.d f15, f31, f14, rtz # perform operation
fadd.d f15, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x29, 0x639eb0f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000001 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fadd.d f29, f4, f5, dyn # perform operation
fadd.d f29, f4, f5, rdn # perform operation
fadd.d f29, f4, f5, rmm # perform operation
fadd.d f29, f4, f5, rne # perform operation
fadd.d f29, f4, f5, rtz # perform operation
fadd.d f29, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x15, 0xaf12d2ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fadd.d f15, f23, f7, dyn # perform operation
fadd.d f15, f23, f7, rdn # perform operation
fadd.d f15, f23, f7, rmm # perform operation
fadd.d f15, f23, f7, rne # perform operation
fadd.d f15, f23, f7, rtz # perform operation
fadd.d f15, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x6, 0x52dbbe48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fadd.d f6, f31, f23, dyn # perform operation
fadd.d f6, f31, f23, rdn # perform operation
fadd.d f6, f31, f23, rmm # perform operation
fadd.d f6, f31, f23, rne # perform operation
fadd.d f6, f31, f23, rtz # perform operation
fadd.d f6, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x7, 0x6ebe9703 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fadd.d f7, f26, f8, dyn # perform operation
fadd.d f7, f26, f8, rdn # perform operation
fadd.d f7, f26, f8, rmm # perform operation
fadd.d f7, f26, f8, rne # perform operation
fadd.d f7, f26, f8, rtz # perform operation
fadd.d f7, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x21, 0x2c6d53f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fadd.d f21, f30, f14, dyn # perform operation
fadd.d f21, f30, f14, rdn # perform operation
fadd.d f21, f30, f14, rmm # perform operation
fadd.d f21, f30, f14, rne # perform operation
fadd.d f21, f30, f14, rtz # perform operation
fadd.d f21, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x13, 0x6bdaded2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fadd.d f13, f12, f10, dyn # perform operation
fadd.d f13, f12, f10, rdn # perform operation
fadd.d f13, f12, f10, rmm # perform operation
fadd.d f13, f12, f10, rne # perform operation
fadd.d f13, f12, f10, rtz # perform operation
fadd.d f13, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x2, 0x55442fb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fadd.d f2, f26, f28, dyn # perform operation
fadd.d f2, f26, f28, rdn # perform operation
fadd.d f2, f26, f28, rmm # perform operation
fadd.d f2, f26, f28, rne # perform operation
fadd.d f2, f26, f28, rtz # perform operation
fadd.d f2, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f26, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x22, 0x524f0254 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
fadd.d f22, f5, f24, dyn # perform operation
fadd.d f22, f5, f24, rdn # perform operation
fadd.d f22, f5, f24, rmm # perform operation
fadd.d f22, f5, f24, rne # perform operation
fadd.d f22, f5, f24, rtz # perform operation
fadd.d f22, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x14, 0x302b5777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fadd.d f14, f12, f26, dyn # perform operation
fadd.d f14, f12, f26, rdn # perform operation
fadd.d f14, f12, f26, rmm # perform operation
fadd.d f14, f12, f26, rne # perform operation
fadd.d f14, f12, f26, rtz # perform operation
fadd.d f14, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x8, 0x27c07916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fadd.d f8, f26, f13, dyn # perform operation
fadd.d f8, f26, f13, rdn # perform operation
fadd.d f8, f26, f13, rmm # perform operation
fadd.d f8, f26, f13, rne # perform operation
fadd.d f8, f26, f13, rtz # perform operation
fadd.d f8, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x24, 0x25eaaf4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
fadd.d f24, f1, f10, dyn # perform operation
fadd.d f24, f1, f10, rdn # perform operation
fadd.d f24, f1, f10, rmm # perform operation
fadd.d f24, f1, f10, rne # perform operation
fadd.d f24, f1, f10, rtz # perform operation
fadd.d f24, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x28, 0x1587d002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fadd.d f28, f9, f8, dyn # perform operation
fadd.d f28, f9, f8, rdn # perform operation
fadd.d f28, f9, f8, rmm # perform operation
fadd.d f28, f9, f8, rne # perform operation
fadd.d f28, f9, f8, rtz # perform operation
fadd.d f28, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x27, 0x1dc04641 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fadd.d f27, f1, f9, dyn # perform operation
fadd.d f27, f1, f9, rdn # perform operation
fadd.d f27, f1, f9, rmm # perform operation
fadd.d f27, f1, f9, rne # perform operation
fadd.d f27, f1, f9, rtz # perform operation
fadd.d f27, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x6, 0xf485603a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fadd.d f6, f26, f30, dyn # perform operation
fadd.d f6, f26, f30, rdn # perform operation
fadd.d f6, f26, f30, rmm # perform operation
fadd.d f6, f26, f30, rne # perform operation
fadd.d f6, f26, f30, rtz # perform operation
fadd.d f6, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x7, 0x5ac01e3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fadd.d f7, f1, f8, dyn # perform operation
fadd.d f7, f1, f8, rdn # perform operation
fadd.d f7, f1, f8, rmm # perform operation
fadd.d f7, f1, f8, rne # perform operation
fadd.d f7, f1, f8, rtz # perform operation
fadd.d f7, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x1, 0x01a305c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fadd.d f1, f16, f6, dyn # perform operation
fadd.d f1, f16, f6, rdn # perform operation
fadd.d f1, f16, f6, rmm # perform operation
fadd.d f1, f16, f6, rne # perform operation
fadd.d f1, f16, f6, rtz # perform operation
fadd.d f1, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x22, 0xb2ba3282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fadd.d f22, f30, f24, dyn # perform operation
fadd.d f22, f30, f24, rdn # perform operation
fadd.d f22, f30, f24, rmm # perform operation
fadd.d f22, f30, f24, rne # perform operation
fadd.d f22, f30, f24, rtz # perform operation
fadd.d f22, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x10, 0xf43d9877 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fadd.d f10, f29, f21, dyn # perform operation
fadd.d f10, f29, f21, rdn # perform operation
fadd.d f10, f29, f21, rmm # perform operation
fadd.d f10, f29, f21, rne # perform operation
fadd.d f10, f29, f21, rtz # perform operation
fadd.d f10, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x4, 0x95ba4cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fadd.d f4, f9, f10, dyn # perform operation
fadd.d f4, f9, f10, rdn # perform operation
fadd.d f4, f9, f10, rmm # perform operation
fadd.d f4, f9, f10, rne # perform operation
fadd.d f4, f9, f10, rtz # perform operation
fadd.d f4, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x22, 0x32af7134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fadd.d f22, f3, f29, dyn # perform operation
fadd.d f22, f3, f29, rdn # perform operation
fadd.d f22, f3, f29, rmm # perform operation
fadd.d f22, f3, f29, rne # perform operation
fadd.d f22, f3, f29, rtz # perform operation
fadd.d f22, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x28, 0x6d742501 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fadd.d f28, f5, f3, dyn # perform operation
fadd.d f28, f5, f3, rdn # perform operation
fadd.d f28, f5, f3, rmm # perform operation
fadd.d f28, f5, f3, rne # perform operation
fadd.d f28, f5, f3, rtz # perform operation
fadd.d f28, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x19, 0xb5ec36b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fadd.d f19, f13, f12, dyn # perform operation
fadd.d f19, f13, f12, rdn # perform operation
fadd.d f19, f13, f12, rmm # perform operation
fadd.d f19, f13, f12, rne # perform operation
fadd.d f19, f13, f12, rtz # perform operation
fadd.d f19, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x2, 0xc74bd500 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
fadd.d f2, f15, f19, dyn # perform operation
fadd.d f2, f15, f19, rdn # perform operation
fadd.d f2, f15, f19, rmm # perform operation
fadd.d f2, f15, f19, rne # perform operation
fadd.d f2, f15, f19, rtz # perform operation
fadd.d f2, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x27, 0xba0635a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fadd.d f27, f2, f19, dyn # perform operation
fadd.d f27, f2, f19, rdn # perform operation
fadd.d f27, f2, f19, rmm # perform operation
fadd.d f27, f2, f19, rne # perform operation
fadd.d f27, f2, f19, rtz # perform operation
fadd.d f27, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f2, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x5, 0x42ba5588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
fadd.d f5, f8, f15, dyn # perform operation
fadd.d f5, f8, f15, rdn # perform operation
fadd.d f5, f8, f15, rmm # perform operation
fadd.d f5, f8, f15, rne # perform operation
fadd.d f5, f8, f15, rtz # perform operation
fadd.d f5, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f8, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x25, 0x81eade45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fadd.d f25, f23, f24, dyn # perform operation
fadd.d f25, f23, f24, rdn # perform operation
fadd.d f25, f23, f24, rmm # perform operation
fadd.d f25, f23, f24, rne # perform operation
fadd.d f25, f23, f24, rtz # perform operation
fadd.d f25, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x11, 0xa328e1df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fadd.d f11, f27, f21, dyn # perform operation
fadd.d f11, f27, f21, rdn # perform operation
fadd.d f11, f27, f21, rmm # perform operation
fadd.d f11, f27, f21, rne # perform operation
fadd.d f11, f27, f21, rtz # perform operation
fadd.d f11, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x4, 0x4a109feb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fadd.d f4, f28, f20, dyn # perform operation
fadd.d f4, f28, f20, rdn # perform operation
fadd.d f4, f28, f20, rmm # perform operation
fadd.d f4, f28, f20, rne # perform operation
fadd.d f4, f28, f20, rtz # perform operation
fadd.d f4, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x9, 0xcbd5aab4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fadd.d f9, f16, f22, dyn # perform operation
fadd.d f9, f16, f22, rdn # perform operation
fadd.d f9, f16, f22, rmm # perform operation
fadd.d f9, f16, f22, rne # perform operation
fadd.d f9, f16, f22, rtz # perform operation
fadd.d f9, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x26, 0x6d9ad52d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fadd.d f26, f1, f23, dyn # perform operation
fadd.d f26, f1, f23, rdn # perform operation
fadd.d f26, f1, f23, rmm # perform operation
fadd.d f26, f1, f23, rne # perform operation
fadd.d f26, f1, f23, rtz # perform operation
fadd.d f26, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x8, 0xcba974dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fadd.d f8, f23, f27, dyn # perform operation
fadd.d f8, f23, f27, rdn # perform operation
fadd.d f8, f23, f27, rmm # perform operation
fadd.d f8, f23, f27, rne # perform operation
fadd.d f8, f23, f27, rtz # perform operation
fadd.d f8, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x21, 0x68373ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fadd.d f21, f8, f29, dyn # perform operation
fadd.d f21, f8, f29, rdn # perform operation
fadd.d f21, f8, f29, rmm # perform operation
fadd.d f21, f8, f29, rne # perform operation
fadd.d f21, f8, f29, rtz # perform operation
fadd.d f21, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x23, 0x1b6e5c9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fadd.d f23, f18, f17, dyn # perform operation
fadd.d f23, f18, f17, rdn # perform operation
fadd.d f23, f18, f17, rmm # perform operation
fadd.d f23, f18, f17, rne # perform operation
fadd.d f23, f18, f17, rtz # perform operation
fadd.d f23, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x21, 0x4806bb24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fadd.d f21, f12, f8, dyn # perform operation
fadd.d f21, f12, f8, rdn # perform operation
fadd.d f21, f12, f8, rmm # perform operation
fadd.d f21, f12, f8, rne # perform operation
fadd.d f21, f12, f8, rtz # perform operation
fadd.d f21, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x3, 0x6f4783c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fadd.d f3, f13, f27, dyn # perform operation
fadd.d f3, f13, f27, rdn # perform operation
fadd.d f3, f13, f27, rmm # perform operation
fadd.d f3, f13, f27, rne # perform operation
fadd.d f3, f13, f27, rtz # perform operation
fadd.d f3, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x25, 0x797547f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fadd.d f25, f19, f2, dyn # perform operation
fadd.d f25, f19, f2, rdn # perform operation
fadd.d f25, f19, f2, rmm # perform operation
fadd.d f25, f19, f2, rne # perform operation
fadd.d f25, f19, f2, rtz # perform operation
fadd.d f25, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x31, 0x46509a45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fadd.d f31, f16, f24, dyn # perform operation
fadd.d f31, f16, f24, rdn # perform operation
fadd.d f31, f16, f24, rmm # perform operation
fadd.d f31, f16, f24, rne # perform operation
fadd.d f31, f16, f24, rtz # perform operation
fadd.d f31, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x13, 0x5ea91fd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fadd.d f13, f30, f26, dyn # perform operation
fadd.d f13, f30, f26, rdn # perform operation
fadd.d f13, f30, f26, rmm # perform operation
fadd.d f13, f30, f26, rne # perform operation
fadd.d f13, f30, f26, rtz # perform operation
fadd.d f13, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x10, 0xf5f6f4e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fadd.d f10, f19, f2, dyn # perform operation
fadd.d f10, f19, f2, rdn # perform operation
fadd.d f10, f19, f2, rmm # perform operation
fadd.d f10, f19, f2, rne # perform operation
fadd.d f10, f19, f2, rtz # perform operation
fadd.d f10, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x25, 0xdd1f3090 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fadd.d f25, f15, f23, dyn # perform operation
fadd.d f25, f15, f23, rdn # perform operation
fadd.d f25, f15, f23, rmm # perform operation
fadd.d f25, f15, f23, rne # perform operation
fadd.d f25, f15, f23, rtz # perform operation
fadd.d f25, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x2, 0xb0fb0e90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fadd.d f2, f21, f9, dyn # perform operation
fadd.d f2, f21, f9, rdn # perform operation
fadd.d f2, f21, f9, rmm # perform operation
fadd.d f2, f21, f9, rne # perform operation
fadd.d f2, f21, f9, rtz # perform operation
fadd.d f2, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x22, 0xc1fc20cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fadd.d f22, f30, f31, dyn # perform operation
fadd.d f22, f30, f31, rdn # perform operation
fadd.d f22, f30, f31, rmm # perform operation
fadd.d f22, f30, f31, rne # perform operation
fadd.d f22, f30, f31, rtz # perform operation
fadd.d f22, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x31, 0x6d700044 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fadd.d f31, f16, f24, dyn # perform operation
fadd.d f31, f16, f24, rdn # perform operation
fadd.d f31, f16, f24, rmm # perform operation
fadd.d f31, f16, f24, rne # perform operation
fadd.d f31, f16, f24, rtz # perform operation
fadd.d f31, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x29, 0x87784ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fadd.d f29, f25, f5, dyn # perform operation
fadd.d f29, f25, f5, rdn # perform operation
fadd.d f29, f25, f5, rmm # perform operation
fadd.d f29, f25, f5, rne # perform operation
fadd.d f29, f25, f5, rtz # perform operation
fadd.d f29, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x21, 0xd147adf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fadd.d f21, f16, f15, dyn # perform operation
fadd.d f21, f16, f15, rdn # perform operation
fadd.d f21, f16, f15, rmm # perform operation
fadd.d f21, f16, f15, rne # perform operation
fadd.d f21, f16, f15, rtz # perform operation
fadd.d f21, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x27, 0x24e227e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fadd.d f27, f30, f14, dyn # perform operation
fadd.d f27, f30, f14, rdn # perform operation
fadd.d f27, f30, f14, rmm # perform operation
fadd.d f27, f30, f14, rne # perform operation
fadd.d f27, f30, f14, rtz # perform operation
fadd.d f27, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x19, 0xbb6f331f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fadd.d f19, f23, f11, dyn # perform operation
fadd.d f19, f23, f11, rdn # perform operation
fadd.d f19, f23, f11, rmm # perform operation
fadd.d f19, f23, f11, rne # perform operation
fadd.d f19, f23, f11, rtz # perform operation
fadd.d f19, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x16, 0xaa3f2e7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fadd.d f16, f9, f7, dyn # perform operation
fadd.d f16, f9, f7, rdn # perform operation
fadd.d f16, f9, f7, rmm # perform operation
fadd.d f16, f9, f7, rne # perform operation
fadd.d f16, f9, f7, rtz # perform operation
fadd.d f16, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x5, 0xb271f125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fadd.d f5, f14, f13, dyn # perform operation
fadd.d f5, f14, f13, rdn # perform operation
fadd.d f5, f14, f13, rmm # perform operation
fadd.d f5, f14, f13, rne # perform operation
fadd.d f5, f14, f13, rtz # perform operation
fadd.d f5, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x7, 0x6a489862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fadd.d f7, f30, f10, dyn # perform operation
fadd.d f7, f30, f10, rdn # perform operation
fadd.d f7, f30, f10, rmm # perform operation
fadd.d f7, f30, f10, rne # perform operation
fadd.d f7, f30, f10, rtz # perform operation
fadd.d f7, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x2, 0x6c08439c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fadd.d f2, f8, f31, dyn # perform operation
fadd.d f2, f8, f31, rdn # perform operation
fadd.d f2, f8, f31, rmm # perform operation
fadd.d f2, f8, f31, rne # perform operation
fadd.d f2, f8, f31, rtz # perform operation
fadd.d f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x6, 0xf2782109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fadd.d f6, f17, f11, dyn # perform operation
fadd.d f6, f17, f11, rdn # perform operation
fadd.d f6, f17, f11, rmm # perform operation
fadd.d f6, f17, f11, rne # perform operation
fadd.d f6, f17, f11, rtz # perform operation
fadd.d f6, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x30, 0xa718c95c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fadd.d f30, f28, f5, dyn # perform operation
fadd.d f30, f28, f5, rdn # perform operation
fadd.d f30, f28, f5, rmm # perform operation
fadd.d f30, f28, f5, rne # perform operation
fadd.d f30, f28, f5, rtz # perform operation
fadd.d f30, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x1, 0x1f30d953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fadd.d f1, f21, f17, dyn # perform operation
fadd.d f1, f21, f17, rdn # perform operation
fadd.d f1, f21, f17, rmm # perform operation
fadd.d f1, f21, f17, rne # perform operation
fadd.d f1, f21, f17, rtz # perform operation
fadd.d f1, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x11, 0x66b0406f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fadd.d f11, f16, f31, dyn # perform operation
fadd.d f11, f16, f31, rdn # perform operation
fadd.d f11, f16, f31, rmm # perform operation
fadd.d f11, f16, f31, rne # perform operation
fadd.d f11, f16, f31, rtz # perform operation
fadd.d f11, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x1, 0xeb764604 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fadd.d f1, f7, f2, dyn # perform operation
fadd.d f1, f7, f2, rdn # perform operation
fadd.d f1, f7, f2, rmm # perform operation
fadd.d f1, f7, f2, rne # perform operation
fadd.d f1, f7, f2, rtz # perform operation
fadd.d f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x14, 0x3929b2db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fadd.d f14, f5, f12, dyn # perform operation
fadd.d f14, f5, f12, rdn # perform operation
fadd.d f14, f5, f12, rmm # perform operation
fadd.d f14, f5, f12, rne # perform operation
fadd.d f14, f5, f12, rtz # perform operation
fadd.d f14, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x22, 0x4fd77d80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fadd.d f22, f5, f13, dyn # perform operation
fadd.d f22, f5, f13, rdn # perform operation
fadd.d f22, f5, f13, rmm # perform operation
fadd.d f22, f5, f13, rne # perform operation
fadd.d f22, f5, f13, rtz # perform operation
fadd.d f22, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x10, 0x36a01107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
fadd.d f10, f1, f5, dyn # perform operation
fadd.d f10, f1, f5, rdn # perform operation
fadd.d f10, f1, f5, rmm # perform operation
fadd.d f10, f1, f5, rne # perform operation
fadd.d f10, f1, f5, rtz # perform operation
fadd.d f10, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x29, 0x9dec90ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fadd.d f29, f20, f1, dyn # perform operation
fadd.d f29, f20, f1, rdn # perform operation
fadd.d f29, f20, f1, rmm # perform operation
fadd.d f29, f20, f1, rne # perform operation
fadd.d f29, f20, f1, rtz # perform operation
fadd.d f29, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x10, 0xadf8fc79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fadd.d f10, f8, f28, dyn # perform operation
fadd.d f10, f8, f28, rdn # perform operation
fadd.d f10, f8, f28, rmm # perform operation
fadd.d f10, f8, f28, rne # perform operation
fadd.d f10, f8, f28, rtz # perform operation
fadd.d f10, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x4, 0x66c5c517 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fadd.d f4, f2, f20, dyn # perform operation
fadd.d f4, f2, f20, rdn # perform operation
fadd.d f4, f2, f20, rmm # perform operation
fadd.d f4, f2, f20, rne # perform operation
fadd.d f4, f2, f20, rtz # perform operation
fadd.d f4, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f2, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x2, 0x667d4bb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fadd.d f2, f17, f9, dyn # perform operation
fadd.d f2, f17, f9, rdn # perform operation
fadd.d f2, f17, f9, rmm # perform operation
fadd.d f2, f17, f9, rne # perform operation
fadd.d f2, f17, f9, rtz # perform operation
fadd.d f2, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x1, 0x40ba311b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fadd.d f1, f15, f18, dyn # perform operation
fadd.d f1, f15, f18, rdn # perform operation
fadd.d f1, f15, f18, rmm # perform operation
fadd.d f1, f15, f18, rne # perform operation
fadd.d f1, f15, f18, rtz # perform operation
fadd.d f1, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x13, 0x41e8fdb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fadd.d f13, f17, f16, dyn # perform operation
fadd.d f13, f17, f16, rdn # perform operation
fadd.d f13, f17, f16, rmm # perform operation
fadd.d f13, f17, f16, rne # perform operation
fadd.d f13, f17, f16, rtz # perform operation
fadd.d f13, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x23, 0xc2889b3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fadd.d f23, f5, f31, dyn # perform operation
fadd.d f23, f5, f31, rdn # perform operation
fadd.d f23, f5, f31, rmm # perform operation
fadd.d f23, f5, f31, rne # perform operation
fadd.d f23, f5, f31, rtz # perform operation
fadd.d f23, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x17, 0xc1b6fb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fadd.d f17, f28, f21, dyn # perform operation
fadd.d f17, f28, f21, rdn # perform operation
fadd.d f17, f28, f21, rmm # perform operation
fadd.d f17, f28, f21, rne # perform operation
fadd.d f17, f28, f21, rtz # perform operation
fadd.d f17, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x14, 0xf64553cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fadd.d f14, f13, f8, dyn # perform operation
fadd.d f14, f13, f8, rdn # perform operation
fadd.d f14, f13, f8, rmm # perform operation
fadd.d f14, f13, f8, rne # perform operation
fadd.d f14, f13, f8, rtz # perform operation
fadd.d f14, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x30, 0xd1c10282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fadd.d f30, f23, f5, dyn # perform operation
fadd.d f30, f23, f5, rdn # perform operation
fadd.d f30, f23, f5, rmm # perform operation
fadd.d f30, f23, f5, rne # perform operation
fadd.d f30, f23, f5, rtz # perform operation
fadd.d f30, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x21, 0x4181701a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fadd.d f21, f17, f9, dyn # perform operation
fadd.d f21, f17, f9, rdn # perform operation
fadd.d f21, f17, f9, rmm # perform operation
fadd.d f21, f17, f9, rne # perform operation
fadd.d f21, f17, f9, rtz # perform operation
fadd.d f21, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x31, 0x84d906f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fadd.d f31, f10, f19, dyn # perform operation
fadd.d f31, f10, f19, rdn # perform operation
fadd.d f31, f10, f19, rmm # perform operation
fadd.d f31, f10, f19, rne # perform operation
fadd.d f31, f10, f19, rtz # perform operation
fadd.d f31, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x1, 0xdd6b7e42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fadd.d f1, f24, f16, dyn # perform operation
fadd.d f1, f24, f16, rdn # perform operation
fadd.d f1, f24, f16, rmm # perform operation
fadd.d f1, f24, f16, rne # perform operation
fadd.d f1, f24, f16, rtz # perform operation
fadd.d f1, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x9, 0x9162ddbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
fadd.d f9, f1, f31, dyn # perform operation
fadd.d f9, f1, f31, rdn # perform operation
fadd.d f9, f1, f31, rmm # perform operation
fadd.d f9, f1, f31, rne # perform operation
fadd.d f9, f1, f31, rtz # perform operation
fadd.d f9, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x17, 0xd9898168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fadd.d f17, f6, f11, dyn # perform operation
fadd.d f17, f6, f11, rdn # perform operation
fadd.d f17, f6, f11, rmm # perform operation
fadd.d f17, f6, f11, rne # perform operation
fadd.d f17, f6, f11, rtz # perform operation
fadd.d f17, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x4, 0x0b55c7d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fadd.d f4, f13, f24, dyn # perform operation
fadd.d f4, f13, f24, rdn # perform operation
fadd.d f4, f13, f24, rmm # perform operation
fadd.d f4, f13, f24, rne # perform operation
fadd.d f4, f13, f24, rtz # perform operation
fadd.d f4, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x19, 0x30351c4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fadd.d f19, f24, f3, dyn # perform operation
fadd.d f19, f24, f3, rdn # perform operation
fadd.d f19, f24, f3, rmm # perform operation
fadd.d f19, f24, f3, rne # perform operation
fadd.d f19, f24, f3, rtz # perform operation
fadd.d f19, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x18, 0x2e5cf2f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fadd.d f18, f12, f20, dyn # perform operation
fadd.d f18, f12, f20, rdn # perform operation
fadd.d f18, f12, f20, rmm # perform operation
fadd.d f18, f12, f20, rne # perform operation
fadd.d f18, f12, f20, rtz # perform operation
fadd.d f18, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x20, 0xc1909ac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
fadd.d f20, f1, f3, dyn # perform operation
fadd.d f20, f1, f3, rdn # perform operation
fadd.d f20, f1, f3, rmm # perform operation
fadd.d f20, f1, f3, rne # perform operation
fadd.d f20, f1, f3, rtz # perform operation
fadd.d f20, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x21, 0xf7260821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
fadd.d f21, f1, f7, dyn # perform operation
fadd.d f21, f1, f7, rdn # perform operation
fadd.d f21, f1, f7, rmm # perform operation
fadd.d f21, f1, f7, rne # perform operation
fadd.d f21, f1, f7, rtz # perform operation
fadd.d f21, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x4, 0x32ad49b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fadd.d f4, f12, f30, dyn # perform operation
fadd.d f4, f12, f30, rdn # perform operation
fadd.d f4, f12, f30, rmm # perform operation
fadd.d f4, f12, f30, rne # perform operation
fadd.d f4, f12, f30, rtz # perform operation
fadd.d f4, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f12, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x17, 0x72d49ca1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
fadd.d f17, f19, f9, dyn # perform operation
fadd.d f17, f19, f9, rdn # perform operation
fadd.d f17, f19, f9, rmm # perform operation
fadd.d f17, f19, f9, rne # perform operation
fadd.d f17, f19, f9, rtz # perform operation
fadd.d f17, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x14, 0xe2dd58cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fadd.d f14, f17, f27, dyn # perform operation
fadd.d f14, f17, f27, rdn # perform operation
fadd.d f14, f17, f27, rmm # perform operation
fadd.d f14, f17, f27, rne # perform operation
fadd.d f14, f17, f27, rtz # perform operation
fadd.d f14, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x13, 0x6cd0a3c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fadd.d f13, f2, f30, dyn # perform operation
fadd.d f13, f2, f30, rdn # perform operation
fadd.d f13, f2, f30, rmm # perform operation
fadd.d f13, f2, f30, rne # perform operation
fadd.d f13, f2, f30, rtz # perform operation
fadd.d f13, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x11, 0x51820983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fadd.d f11, f25, f8, dyn # perform operation
fadd.d f11, f25, f8, rdn # perform operation
fadd.d f11, f25, f8, rmm # perform operation
fadd.d f11, f25, f8, rne # perform operation
fadd.d f11, f25, f8, rtz # perform operation
fadd.d f11, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f25, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x13, 0x99ae14f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fadd.d f13, f6, f15, dyn # perform operation
fadd.d f13, f6, f15, rdn # perform operation
fadd.d f13, f6, f15, rmm # perform operation
fadd.d f13, f6, f15, rne # perform operation
fadd.d f13, f6, f15, rtz # perform operation
fadd.d f13, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x17, 0x56a14ad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fadd.d f17, f28, f3, dyn # perform operation
fadd.d f17, f28, f3, rdn # perform operation
fadd.d f17, f28, f3, rmm # perform operation
fadd.d f17, f28, f3, rne # perform operation
fadd.d f17, f28, f3, rtz # perform operation
fadd.d f17, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x5, 0xad8fc403 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fadd.d f5, f20, f3, dyn # perform operation
fadd.d f5, f20, f3, rdn # perform operation
fadd.d f5, f20, f3, rmm # perform operation
fadd.d f5, f20, f3, rne # perform operation
fadd.d f5, f20, f3, rtz # perform operation
fadd.d f5, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x29, 0x0a8a8a91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fadd.d f29, f18, f28, dyn # perform operation
fadd.d f29, f18, f28, rdn # perform operation
fadd.d f29, f18, f28, rmm # perform operation
fadd.d f29, f18, f28, rne # perform operation
fadd.d f29, f18, f28, rtz # perform operation
fadd.d f29, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x18, 0x96cd3f2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fadd.d f18, f10, f7, dyn # perform operation
fadd.d f18, f10, f7, rdn # perform operation
fadd.d f18, f10, f7, rmm # perform operation
fadd.d f18, f10, f7, rne # perform operation
fadd.d f18, f10, f7, rtz # perform operation
fadd.d f18, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x24, 0xdd353626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fadd.d f24, f8, f18, dyn # perform operation
fadd.d f24, f8, f18, rdn # perform operation
fadd.d f24, f8, f18, rmm # perform operation
fadd.d f24, f8, f18, rne # perform operation
fadd.d f24, f8, f18, rtz # perform operation
fadd.d f24, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x20, 0xaf416e4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fadd.d f20, f18, f1, dyn # perform operation
fadd.d f20, f18, f1, rdn # perform operation
fadd.d f20, f18, f1, rmm # perform operation
fadd.d f20, f18, f1, rne # perform operation
fadd.d f20, f18, f1, rtz # perform operation
fadd.d f20, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x17, 0x5334811c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fadd.d f17, f23, f14, dyn # perform operation
fadd.d f17, f23, f14, rdn # perform operation
fadd.d f17, f23, f14, rmm # perform operation
fadd.d f17, f23, f14, rne # perform operation
fadd.d f17, f23, f14, rtz # perform operation
fadd.d f17, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x8, 0x27b24761 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fadd.d f8, f7, f5, dyn # perform operation
fadd.d f8, f7, f5, rdn # perform operation
fadd.d f8, f7, f5, rmm # perform operation
fadd.d f8, f7, f5, rne # perform operation
fadd.d f8, f7, f5, rtz # perform operation
fadd.d f8, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x2, 0x3102cd6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fadd.d f2, f8, f25, dyn # perform operation
fadd.d f2, f8, f25, rdn # perform operation
fadd.d f2, f8, f25, rmm # perform operation
fadd.d f2, f8, f25, rne # perform operation
fadd.d f2, f8, f25, rtz # perform operation
fadd.d f2, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x28, 0xd141efe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fadd.d f28, f3, f27, dyn # perform operation
fadd.d f28, f3, f27, rdn # perform operation
fadd.d f28, f3, f27, rmm # perform operation
fadd.d f28, f3, f27, rne # perform operation
fadd.d f28, f3, f27, rtz # perform operation
fadd.d f28, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x26, 0xf1915c0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
fadd.d f26, f6, f27, dyn # perform operation
fadd.d f26, f6, f27, rdn # perform operation
fadd.d f26, f6, f27, rmm # perform operation
fadd.d f26, f6, f27, rne # perform operation
fadd.d f26, f6, f27, rtz # perform operation
fadd.d f26, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0x1de8222d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
fadd.d f15, f11, f21, dyn # perform operation
fadd.d f15, f11, f21, rdn # perform operation
fadd.d f15, f11, f21, rmm # perform operation
fadd.d f15, f11, f21, rne # perform operation
fadd.d f15, f11, f21, rtz # perform operation
fadd.d f15, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x26, 0x7d11bb75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fadd.d f26, f21, f4, dyn # perform operation
fadd.d f26, f21, f4, rdn # perform operation
fadd.d f26, f21, f4, rmm # perform operation
fadd.d f26, f21, f4, rne # perform operation
fadd.d f26, f21, f4, rtz # perform operation
fadd.d f26, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x31, 0x20b152bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fadd.d f31, f12, f22, dyn # perform operation
fadd.d f31, f12, f22, rdn # perform operation
fadd.d f31, f12, f22, rmm # perform operation
fadd.d f31, f12, f22, rne # perform operation
fadd.d f31, f12, f22, rtz # perform operation
fadd.d f31, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x9, 0x9b442277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fadd.d f9, f18, f31, dyn # perform operation
fadd.d f9, f18, f31, rdn # perform operation
fadd.d f9, f18, f31, rmm # perform operation
fadd.d f9, f18, f31, rne # perform operation
fadd.d f9, f18, f31, rtz # perform operation
fadd.d f9, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x20, 0x59694051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fadd.d f20, f23, f13, dyn # perform operation
fadd.d f20, f23, f13, rdn # perform operation
fadd.d f20, f23, f13, rmm # perform operation
fadd.d f20, f23, f13, rne # perform operation
fadd.d f20, f23, f13, rtz # perform operation
fadd.d f20, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x21, 0x5d1cec25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fadd.d f21, f18, f23, dyn # perform operation
fadd.d f21, f18, f23, rdn # perform operation
fadd.d f21, f18, f23, rmm # perform operation
fadd.d f21, f18, f23, rne # perform operation
fadd.d f21, f18, f23, rtz # perform operation
fadd.d f21, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x22, 0x603ffda7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fadd.d f22, f18, f20, dyn # perform operation
fadd.d f22, f18, f20, rdn # perform operation
fadd.d f22, f18, f20, rmm # perform operation
fadd.d f22, f18, f20, rne # perform operation
fadd.d f22, f18, f20, rtz # perform operation
fadd.d f22, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f18, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x2, 0x4aa3c943 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fadd.d f2, f13, f26, dyn # perform operation
fadd.d f2, f13, f26, rdn # perform operation
fadd.d f2, f13, f26, rmm # perform operation
fadd.d f2, f13, f26, rne # perform operation
fadd.d f2, f13, f26, rtz # perform operation
fadd.d f2, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x27, 0xa01c9797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fadd.d f27, f28, f23, dyn # perform operation
fadd.d f27, f28, f23, rdn # perform operation
fadd.d f27, f28, f23, rmm # perform operation
fadd.d f27, f28, f23, rne # perform operation
fadd.d f27, f28, f23, rtz # perform operation
fadd.d f27, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x7, 0x06606688 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fadd.d f7, f24, f29, dyn # perform operation
fadd.d f7, f24, f29, rdn # perform operation
fadd.d f7, f24, f29, rmm # perform operation
fadd.d f7, f24, f29, rne # perform operation
fadd.d f7, f24, f29, rtz # perform operation
fadd.d f7, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x11, 0x9f4eadda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fadd.d f11, f14, f5, dyn # perform operation
fadd.d f11, f14, f5, rdn # perform operation
fadd.d f11, f14, f5, rmm # perform operation
fadd.d f11, f14, f5, rne # perform operation
fadd.d f11, f14, f5, rtz # perform operation
fadd.d f11, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x15, 0xa084f312 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fadd.d f15, f11, f18, dyn # perform operation
fadd.d f15, f11, f18, rdn # perform operation
fadd.d f15, f11, f18, rmm # perform operation
fadd.d f15, f11, f18, rne # perform operation
fadd.d f15, f11, f18, rtz # perform operation
fadd.d f15, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x21, 0x4939d5dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fadd.d f21, f27, f5, dyn # perform operation
fadd.d f21, f27, f5, rdn # perform operation
fadd.d f21, f27, f5, rmm # perform operation
fadd.d f21, f27, f5, rne # perform operation
fadd.d f21, f27, f5, rtz # perform operation
fadd.d f21, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x18, 0x712b6a5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fadd.d f18, f16, f15, dyn # perform operation
fadd.d f18, f16, f15, rdn # perform operation
fadd.d f18, f16, f15, rmm # perform operation
fadd.d f18, f16, f15, rne # perform operation
fadd.d f18, f16, f15, rtz # perform operation
fadd.d f18, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x8, 0x71213299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fadd.d f8, f1, f21, dyn # perform operation
fadd.d f8, f1, f21, rdn # perform operation
fadd.d f8, f1, f21, rmm # perform operation
fadd.d f8, f1, f21, rne # perform operation
fadd.d f8, f1, f21, rtz # perform operation
fadd.d f8, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x13, 0x957e1356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fadd.d f13, f16, f27, dyn # perform operation
fadd.d f13, f16, f27, rdn # perform operation
fadd.d f13, f16, f27, rmm # perform operation
fadd.d f13, f16, f27, rne # perform operation
fadd.d f13, f16, f27, rtz # perform operation
fadd.d f13, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x9, 0x00994edf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fadd.d f9, f12, f1, dyn # perform operation
fadd.d f9, f12, f1, rdn # perform operation
fadd.d f9, f12, f1, rmm # perform operation
fadd.d f9, f12, f1, rne # perform operation
fadd.d f9, f12, f1, rtz # perform operation
fadd.d f9, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x13, 0xe65462f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fadd.d f13, f29, f26, dyn # perform operation
fadd.d f13, f29, f26, rdn # perform operation
fadd.d f13, f29, f26, rmm # perform operation
fadd.d f13, f29, f26, rne # perform operation
fadd.d f13, f29, f26, rtz # perform operation
fadd.d f13, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f29, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x11, 0xef330a62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fadd.d f11, f24, f31, dyn # perform operation
fadd.d f11, f24, f31, rdn # perform operation
fadd.d f11, f24, f31, rmm # perform operation
fadd.d f11, f24, f31, rne # perform operation
fadd.d f11, f24, f31, rtz # perform operation
fadd.d f11, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x27, 0x89c4197a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fffffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fadd.d f27, f4, f24, dyn # perform operation
fadd.d f27, f4, f24, rdn # perform operation
fadd.d f27, f4, f24, rmm # perform operation
fadd.d f27, f4, f24, rne # perform operation
fadd.d f27, f4, f24, rtz # perform operation
fadd.d f27, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x10, 0xd8824c0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fadd.d f10, f8, f24, dyn # perform operation
fadd.d f10, f8, f24, rdn # perform operation
fadd.d f10, f8, f24, rmm # perform operation
fadd.d f10, f8, f24, rne # perform operation
fadd.d f10, f8, f24, rtz # perform operation
fadd.d f10, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f10, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f10, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f10, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f10, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f10, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x4, 0x17f61d8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fadd.d f4, f24, f1, dyn # perform operation
fadd.d f4, f24, f1, rdn # perform operation
fadd.d f4, f24, f1, rmm # perform operation
fadd.d f4, f24, f1, rne # perform operation
fadd.d f4, f24, f1, rtz # perform operation
fadd.d f4, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x15, 0x7b7fad85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fadd.d f15, f21, f17, dyn # perform operation
fadd.d f15, f21, f17, rdn # perform operation
fadd.d f15, f21, f17, rmm # perform operation
fadd.d f15, f21, f17, rne # perform operation
fadd.d f15, f21, f17, rtz # perform operation
fadd.d f15, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x15, 0xd26cabc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
fadd.d f15, f6, f1, dyn # perform operation
fadd.d f15, f6, f1, rdn # perform operation
fadd.d f15, f6, f1, rmm # perform operation
fadd.d f15, f6, f1, rne # perform operation
fadd.d f15, f6, f1, rtz # perform operation
fadd.d f15, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x20, 0x5fe5aa58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fadd.d f20, f27, f9, dyn # perform operation
fadd.d f20, f27, f9, rdn # perform operation
fadd.d f20, f27, f9, rmm # perform operation
fadd.d f20, f27, f9, rne # perform operation
fadd.d f20, f27, f9, rtz # perform operation
fadd.d f20, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x19, 0xd654e934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fadd.d f19, f14, f26, dyn # perform operation
fadd.d f19, f14, f26, rdn # perform operation
fadd.d f19, f14, f26, rmm # perform operation
fadd.d f19, f14, f26, rne # perform operation
fadd.d f19, f14, f26, rtz # perform operation
fadd.d f19, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x8, 0x605145dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fadd.d f8, f3, f13, dyn # perform operation
fadd.d f8, f3, f13, rdn # perform operation
fadd.d f8, f3, f13, rmm # perform operation
fadd.d f8, f3, f13, rne # perform operation
fadd.d f8, f3, f13, rtz # perform operation
fadd.d f8, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x5, 0x2a59f5a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
fadd.d f5, f29, f2, dyn # perform operation
fadd.d f5, f29, f2, rdn # perform operation
fadd.d f5, f29, f2, rmm # perform operation
fadd.d f5, f29, f2, rne # perform operation
fadd.d f5, f29, f2, rtz # perform operation
fadd.d f5, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x22, 0x85b725b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fadd.d f22, f30, f19, dyn # perform operation
fadd.d f22, f30, f19, rdn # perform operation
fadd.d f22, f30, f19, rmm # perform operation
fadd.d f22, f30, f19, rne # perform operation
fadd.d f22, f30, f19, rtz # perform operation
fadd.d f22, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x9, 0xc1c0ce1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fadd.d f9, f11, f31, dyn # perform operation
fadd.d f9, f11, f31, rdn # perform operation
fadd.d f9, f11, f31, rmm # perform operation
fadd.d f9, f11, f31, rne # perform operation
fadd.d f9, f11, f31, rtz # perform operation
fadd.d f9, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x18, 0x6c5c389a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fadd.d f18, f22, f11, dyn # perform operation
fadd.d f18, f22, f11, rdn # perform operation
fadd.d f18, f22, f11, rmm # perform operation
fadd.d f18, f22, f11, rne # perform operation
fadd.d f18, f22, f11, rtz # perform operation
fadd.d f18, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x13, 0x03fce3ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fadd.d f13, f23, f11, dyn # perform operation
fadd.d f13, f23, f11, rdn # perform operation
fadd.d f13, f23, f11, rmm # perform operation
fadd.d f13, f23, f11, rne # perform operation
fadd.d f13, f23, f11, rtz # perform operation
fadd.d f13, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x24, 0x8d0e39bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fadd.d f24, f17, f12, dyn # perform operation
fadd.d f24, f17, f12, rdn # perform operation
fadd.d f24, f17, f12, rmm # perform operation
fadd.d f24, f17, f12, rne # perform operation
fadd.d f24, f17, f12, rtz # perform operation
fadd.d f24, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x17, 0x0f8b7c8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
fadd.d f17, f2, f5, dyn # perform operation
fadd.d f17, f2, f5, rdn # perform operation
fadd.d f17, f2, f5, rmm # perform operation
fadd.d f17, f2, f5, rne # perform operation
fadd.d f17, f2, f5, rtz # perform operation
fadd.d f17, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x18, 0x58ecd0d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fadd.d f18, f27, f19, dyn # perform operation
fadd.d f18, f27, f19, rdn # perform operation
fadd.d f18, f27, f19, rmm # perform operation
fadd.d f18, f27, f19, rne # perform operation
fadd.d f18, f27, f19, rtz # perform operation
fadd.d f18, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x6, 0x3c71c2a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
fadd.d f6, f22, f31, dyn # perform operation
fadd.d f6, f22, f31, rdn # perform operation
fadd.d f6, f22, f31, rmm # perform operation
fadd.d f6, f22, f31, rne # perform operation
fadd.d f6, f22, f31, rtz # perform operation
fadd.d f6, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f22, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x9, 0x3d02440e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fadd.d f9, f15, f18, dyn # perform operation
fadd.d f9, f15, f18, rdn # perform operation
fadd.d f9, f15, f18, rmm # perform operation
fadd.d f9, f15, f18, rne # perform operation
fadd.d f9, f15, f18, rtz # perform operation
fadd.d f9, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x11, 0xd0b88e72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fadd.d f11, f28, f17, dyn # perform operation
fadd.d f11, f28, f17, rdn # perform operation
fadd.d f11, f28, f17, rmm # perform operation
fadd.d f11, f28, f17, rne # perform operation
fadd.d f11, f28, f17, rtz # perform operation
fadd.d f11, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x4, 0xd538e734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fadd.d f4, f15, f30, dyn # perform operation
fadd.d f4, f15, f30, rdn # perform operation
fadd.d f4, f15, f30, rmm # perform operation
fadd.d f4, f15, f30, rne # perform operation
fadd.d f4, f15, f30, rtz # perform operation
fadd.d f4, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x5, 0x239b17a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
fadd.d f5, f28, f12, dyn # perform operation
fadd.d f5, f28, f12, rdn # perform operation
fadd.d f5, f28, f12, rmm # perform operation
fadd.d f5, f28, f12, rne # perform operation
fadd.d f5, f28, f12, rtz # perform operation
fadd.d f5, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x14, 0x44b7da3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fadd.d f14, f25, f16, dyn # perform operation
fadd.d f14, f25, f16, rdn # perform operation
fadd.d f14, f25, f16, rmm # perform operation
fadd.d f14, f25, f16, rne # perform operation
fadd.d f14, f25, f16, rtz # perform operation
fadd.d f14, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x20, 0xf863d916 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fadd.d f20, f3, f8, dyn # perform operation
fadd.d f20, f3, f8, rdn # perform operation
fadd.d f20, f3, f8, rmm # perform operation
fadd.d f20, f3, f8, rne # perform operation
fadd.d f20, f3, f8, rtz # perform operation
fadd.d f20, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x3, 0x989857f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fadd.d f3, f15, f27, dyn # perform operation
fadd.d f3, f15, f27, rdn # perform operation
fadd.d f3, f15, f27, rmm # perform operation
fadd.d f3, f15, f27, rne # perform operation
fadd.d f3, f15, f27, rtz # perform operation
fadd.d f3, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f3, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f3, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f3, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f3, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f3, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x12, 0xa493c2c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fadd.d f12, f27, f16, dyn # perform operation
fadd.d f12, f27, f16, rdn # perform operation
fadd.d f12, f27, f16, rmm # perform operation
fadd.d f12, f27, f16, rne # perform operation
fadd.d f12, f27, f16, rtz # perform operation
fadd.d f12, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f27, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x17, 0xe5897259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fadd.d f17, f26, f30, dyn # perform operation
fadd.d f17, f26, f30, rdn # perform operation
fadd.d f17, f26, f30, rmm # perform operation
fadd.d f17, f26, f30, rne # perform operation
fadd.d f17, f26, f30, rtz # perform operation
fadd.d f17, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x12, 0x22b325af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fadd.d f12, f15, f18, dyn # perform operation
fadd.d f12, f15, f18, rdn # perform operation
fadd.d f12, f15, f18, rmm # perform operation
fadd.d f12, f15, f18, rne # perform operation
fadd.d f12, f15, f18, rtz # perform operation
fadd.d f12, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x1, 0x266878bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fadd.d f1, f18, f7, dyn # perform operation
fadd.d f1, f18, f7, rdn # perform operation
fadd.d f1, f18, f7, rmm # perform operation
fadd.d f1, f18, f7, rne # perform operation
fadd.d f1, f18, f7, rtz # perform operation
fadd.d f1, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x9, 0xb72795d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fadd.d f9, f8, f26, dyn # perform operation
fadd.d f9, f8, f26, rdn # perform operation
fadd.d f9, f8, f26, rmm # perform operation
fadd.d f9, f8, f26, rne # perform operation
fadd.d f9, f8, f26, rtz # perform operation
fadd.d f9, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x11, 0x522d589a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
fadd.d f11, f27, f10, dyn # perform operation
fadd.d f11, f27, f10, rdn # perform operation
fadd.d f11, f27, f10, rmm # perform operation
fadd.d f11, f27, f10, rne # perform operation
fadd.d f11, f27, f10, rtz # perform operation
fadd.d f11, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f27, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x21, 0x34fe78fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fadd.d f21, f30, f20, dyn # perform operation
fadd.d f21, f30, f20, rdn # perform operation
fadd.d f21, f30, f20, rmm # perform operation
fadd.d f21, f30, f20, rne # perform operation
fadd.d f21, f30, f20, rtz # perform operation
fadd.d f21, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x26, 0xb45fe250 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fadd.d f26, f14, f22, dyn # perform operation
fadd.d f26, f14, f22, rdn # perform operation
fadd.d f26, f14, f22, rmm # perform operation
fadd.d f26, f14, f22, rne # perform operation
fadd.d f26, f14, f22, rtz # perform operation
fadd.d f26, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f26, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f26, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f26, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f26, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f26, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x17, 0x7c07486e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
fadd.d f17, f12, f23, dyn # perform operation
fadd.d f17, f12, f23, rdn # perform operation
fadd.d f17, f12, f23, rmm # perform operation
fadd.d f17, f12, f23, rne # perform operation
fadd.d f17, f12, f23, rtz # perform operation
fadd.d f17, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x5, 0xe842ac0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fadd.d f5, f4, f2, dyn # perform operation
fadd.d f5, f4, f2, rdn # perform operation
fadd.d f5, f4, f2, rmm # perform operation
fadd.d f5, f4, f2, rne # perform operation
fadd.d f5, f4, f2, rtz # perform operation
fadd.d f5, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x23, 0xf8df39ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
fadd.d f23, f21, f14, dyn # perform operation
fadd.d f23, f21, f14, rdn # perform operation
fadd.d f23, f21, f14, rmm # perform operation
fadd.d f23, f21, f14, rne # perform operation
fadd.d f23, f21, f14, rtz # perform operation
fadd.d f23, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x4, 0x9e402404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
fadd.d f4, f2, f5, dyn # perform operation
fadd.d f4, f2, f5, rdn # perform operation
fadd.d f4, f2, f5, rmm # perform operation
fadd.d f4, f2, f5, rne # perform operation
fadd.d f4, f2, f5, rtz # perform operation
fadd.d f4, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x12, 0x5901d9a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
fadd.d f12, f15, f19, dyn # perform operation
fadd.d f12, f15, f19, rdn # perform operation
fadd.d f12, f15, f19, rmm # perform operation
fadd.d f12, f15, f19, rne # perform operation
fadd.d f12, f15, f19, rtz # perform operation
fadd.d f12, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x24, 0xf988dad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fadd.d f24, f18, f11, dyn # perform operation
fadd.d f24, f18, f11, rdn # perform operation
fadd.d f24, f18, f11, rmm # perform operation
fadd.d f24, f18, f11, rne # perform operation
fadd.d f24, f18, f11, rtz # perform operation
fadd.d f24, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x16, 0x96080c82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fadd.d f16, f19, f15, dyn # perform operation
fadd.d f16, f19, f15, rdn # perform operation
fadd.d f16, f19, f15, rmm # perform operation
fadd.d f16, f19, f15, rne # perform operation
fadd.d f16, f19, f15, rtz # perform operation
fadd.d f16, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x2, 0x19cb869d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fadd.d f2, f12, f29, dyn # perform operation
fadd.d f2, f12, f29, rdn # perform operation
fadd.d f2, f12, f29, rmm # perform operation
fadd.d f2, f12, f29, rne # perform operation
fadd.d f2, f12, f29, rtz # perform operation
fadd.d f2, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f12, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x11, 0x90366180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fadd.d f11, f27, f31, dyn # perform operation
fadd.d f11, f27, f31, rdn # perform operation
fadd.d f11, f27, f31, rmm # perform operation
fadd.d f11, f27, f31, rne # perform operation
fadd.d f11, f27, f31, rtz # perform operation
fadd.d f11, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x6, 0xa30c64bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fadd.d f6, f18, f14, dyn # perform operation
fadd.d f6, f18, f14, rdn # perform operation
fadd.d f6, f18, f14, rmm # perform operation
fadd.d f6, f18, f14, rne # perform operation
fadd.d f6, f18, f14, rtz # perform operation
fadd.d f6, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x24, 0x18cf42ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fadd.d f24, f22, f20, dyn # perform operation
fadd.d f24, f22, f20, rdn # perform operation
fadd.d f24, f22, f20, rmm # perform operation
fadd.d f24, f22, f20, rne # perform operation
fadd.d f24, f22, f20, rtz # perform operation
fadd.d f24, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x18, 0x82c56dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fadd.d f18, f7, f27, dyn # perform operation
fadd.d f18, f7, f27, rdn # perform operation
fadd.d f18, f7, f27, rmm # perform operation
fadd.d f18, f7, f27, rne # perform operation
fadd.d f18, f7, f27, rtz # perform operation
fadd.d f18, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x22, 0x85f56e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fadd.d f22, f3, f21, dyn # perform operation
fadd.d f22, f3, f21, rdn # perform operation
fadd.d f22, f3, f21, rmm # perform operation
fadd.d f22, f3, f21, rne # perform operation
fadd.d f22, f3, f21, rtz # perform operation
fadd.d f22, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x30, 0x1153c06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fadd.d f30, f17, f28, dyn # perform operation
fadd.d f30, f17, f28, rdn # perform operation
fadd.d f30, f17, f28, rmm # perform operation
fadd.d f30, f17, f28, rne # perform operation
fadd.d f30, f17, f28, rtz # perform operation
fadd.d f30, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x2, 0xa1feaa7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fadd.d f2, f19, f10, dyn # perform operation
fadd.d f2, f19, f10, rdn # perform operation
fadd.d f2, f19, f10, rmm # perform operation
fadd.d f2, f19, f10, rne # perform operation
fadd.d f2, f19, f10, rtz # perform operation
fadd.d f2, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f19, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x19, 0xe4135912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fadd.d f19, f9, f13, dyn # perform operation
fadd.d f19, f9, f13, rdn # perform operation
fadd.d f19, f9, f13, rmm # perform operation
fadd.d f19, f9, f13, rne # perform operation
fadd.d f19, f9, f13, rtz # perform operation
fadd.d f19, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x16, 0x7c26b0e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fadd.d f16, f29, f10, dyn # perform operation
fadd.d f16, f29, f10, rdn # perform operation
fadd.d f16, f29, f10, rmm # perform operation
fadd.d f16, f29, f10, rne # perform operation
fadd.d f16, f29, f10, rtz # perform operation
fadd.d f16, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x25, 0xc5a6cf98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fadd.d f25, f14, f4, dyn # perform operation
fadd.d f25, f14, f4, rdn # perform operation
fadd.d f25, f14, f4, rmm # perform operation
fadd.d f25, f14, f4, rne # perform operation
fadd.d f25, f14, f4, rtz # perform operation
fadd.d f25, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x19, 0x0e00efa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fadd.d f19, f23, f17, dyn # perform operation
fadd.d f19, f23, f17, rdn # perform operation
fadd.d f19, f23, f17, rmm # perform operation
fadd.d f19, f23, f17, rne # perform operation
fadd.d f19, f23, f17, rtz # perform operation
fadd.d f19, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x17, 0x1c3656fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fadd.d f17, f23, f13, dyn # perform operation
fadd.d f17, f23, f13, rdn # perform operation
fadd.d f17, f23, f13, rmm # perform operation
fadd.d f17, f23, f13, rne # perform operation
fadd.d f17, f23, f13, rtz # perform operation
fadd.d f17, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x24, 0x231db57b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fadd.d f24, f21, f17, dyn # perform operation
fadd.d f24, f21, f17, rdn # perform operation
fadd.d f24, f21, f17, rmm # perform operation
fadd.d f24, f21, f17, rne # perform operation
fadd.d f24, f21, f17, rtz # perform operation
fadd.d f24, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x25, 0x6d618d35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fadd.d f25, f14, f11, dyn # perform operation
fadd.d f25, f14, f11, rdn # perform operation
fadd.d f25, f14, f11, rmm # perform operation
fadd.d f25, f14, f11, rne # perform operation
fadd.d f25, f14, f11, rtz # perform operation
fadd.d f25, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x12, 0x33edcc02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fadd.d f12, f25, f27, dyn # perform operation
fadd.d f12, f25, f27, rdn # perform operation
fadd.d f12, f25, f27, rmm # perform operation
fadd.d f12, f25, f27, rne # perform operation
fadd.d f12, f25, f27, rtz # perform operation
fadd.d f12, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x7, 0x3ba21b67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fadd.d f7, f11, f25, dyn # perform operation
fadd.d f7, f11, f25, rdn # perform operation
fadd.d f7, f11, f25, rmm # perform operation
fadd.d f7, f11, f25, rne # perform operation
fadd.d f7, f11, f25, rtz # perform operation
fadd.d f7, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x20, 0x2e2ae7a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
fadd.d f20, f22, f23, dyn # perform operation
fadd.d f20, f22, f23, rdn # perform operation
fadd.d f20, f22, f23, rmm # perform operation
fadd.d f20, f22, f23, rne # perform operation
fadd.d f20, f22, f23, rtz # perform operation
fadd.d f20, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x7, 0xd36150a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fadd.d f7, f20, f31, dyn # perform operation
fadd.d f7, f20, f31, rdn # perform operation
fadd.d f7, f20, f31, rmm # perform operation
fadd.d f7, f20, f31, rne # perform operation
fadd.d f7, f20, f31, rtz # perform operation
fadd.d f7, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x18, 0x4878e3e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
fadd.d f18, f16, f1, dyn # perform operation
fadd.d f18, f16, f1, rdn # perform operation
fadd.d f18, f16, f1, rmm # perform operation
fadd.d f18, f16, f1, rne # perform operation
fadd.d f18, f16, f1, rtz # perform operation
fadd.d f18, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x22, 0x69025039 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fadd.d f22, f12, f27, dyn # perform operation
fadd.d f22, f12, f27, rdn # perform operation
fadd.d f22, f12, f27, rmm # perform operation
fadd.d f22, f12, f27, rne # perform operation
fadd.d f22, f12, f27, rtz # perform operation
fadd.d f22, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x2, 0x60e8931d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fadd.d f2, f1, f20, dyn # perform operation
fadd.d f2, f1, f20, rdn # perform operation
fadd.d f2, f1, f20, rmm # perform operation
fadd.d f2, f1, f20, rne # perform operation
fadd.d f2, f1, f20, rtz # perform operation
fadd.d f2, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x13, 0xea927e6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fadd.d f13, f23, f18, dyn # perform operation
fadd.d f13, f23, f18, rdn # perform operation
fadd.d f13, f23, f18, rmm # perform operation
fadd.d f13, f23, f18, rne # perform operation
fadd.d f13, f23, f18, rtz # perform operation
fadd.d f13, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f13, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f13, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f13, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f13, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f13, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x8, 0xf3bcc5f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fadd.d f8, f1, f2, dyn # perform operation
fadd.d f8, f1, f2, rdn # perform operation
fadd.d f8, f1, f2, rmm # perform operation
fadd.d f8, f1, f2, rne # perform operation
fadd.d f8, f1, f2, rtz # perform operation
fadd.d f8, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f8, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f8, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f8, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f8, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f8, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x11, 0x929406cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
fadd.d f11, f17, f10, dyn # perform operation
fadd.d f11, f17, f10, rdn # perform operation
fadd.d f11, f17, f10, rmm # perform operation
fadd.d f11, f17, f10, rne # perform operation
fadd.d f11, f17, f10, rtz # perform operation
fadd.d f11, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x11, 0x94b4f872 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fadd.d f11, f24, f26, dyn # perform operation
fadd.d f11, f24, f26, rdn # perform operation
fadd.d f11, f24, f26, rmm # perform operation
fadd.d f11, f24, f26, rne # perform operation
fadd.d f11, f24, f26, rtz # perform operation
fadd.d f11, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x14, 0xee81c951 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
fadd.d f14, f26, f29, dyn # perform operation
fadd.d f14, f26, f29, rdn # perform operation
fadd.d f14, f26, f29, rmm # perform operation
fadd.d f14, f26, f29, rne # perform operation
fadd.d f14, f26, f29, rtz # perform operation
fadd.d f14, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x25, 0xe0a4eb5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
fadd.d f25, f11, f2, dyn # perform operation
fadd.d f25, f11, f2, rdn # perform operation
fadd.d f25, f11, f2, rmm # perform operation
fadd.d f25, f11, f2, rne # perform operation
fadd.d f25, f11, f2, rtz # perform operation
fadd.d f25, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x31, 0x394f5247 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
fadd.d f31, f13, f28, dyn # perform operation
fadd.d f31, f13, f28, rdn # perform operation
fadd.d f31, f13, f28, rmm # perform operation
fadd.d f31, f13, f28, rne # perform operation
fadd.d f31, f13, f28, rtz # perform operation
fadd.d f31, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f31, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x11, 0x35c00137 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fadd.d f11, f24, f26, dyn # perform operation
fadd.d f11, f24, f26, rdn # perform operation
fadd.d f11, f24, f26, rmm # perform operation
fadd.d f11, f24, f26, rne # perform operation
fadd.d f11, f24, f26, rtz # perform operation
fadd.d f11, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x18, 0x7387561f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fadd.d f18, f10, f13, dyn # perform operation
fadd.d f18, f10, f13, rdn # perform operation
fadd.d f18, f10, f13, rmm # perform operation
fadd.d f18, f10, f13, rne # perform operation
fadd.d f18, f10, f13, rtz # perform operation
fadd.d f18, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x11, 0x23fc272f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fadd.d f11, f29, f24, dyn # perform operation
fadd.d f11, f29, f24, rdn # perform operation
fadd.d f11, f29, f24, rmm # perform operation
fadd.d f11, f29, f24, rne # perform operation
fadd.d f11, f29, f24, rtz # perform operation
fadd.d f11, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x23, 0xd69d4183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fadd.d f23, f11, f9, dyn # perform operation
fadd.d f23, f11, f9, rdn # perform operation
fadd.d f23, f11, f9, rmm # perform operation
fadd.d f23, f11, f9, rne # perform operation
fadd.d f23, f11, f9, rtz # perform operation
fadd.d f23, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x21, 0xcce5389d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fadd.d f21, f26, f14, dyn # perform operation
fadd.d f21, f26, f14, rdn # perform operation
fadd.d f21, f26, f14, rmm # perform operation
fadd.d f21, f26, f14, rne # perform operation
fadd.d f21, f26, f14, rtz # perform operation
fadd.d f21, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x20, 0x7fbd2cf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fadd.d f20, f25, f18, dyn # perform operation
fadd.d f20, f25, f18, rdn # perform operation
fadd.d f20, f25, f18, rmm # perform operation
fadd.d f20, f25, f18, rne # perform operation
fadd.d f20, f25, f18, rtz # perform operation
fadd.d f20, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f20, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f20, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f20, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f20, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f20, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x17, 0xd63ecd57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fadd.d f17, f6, f2, dyn # perform operation
fadd.d f17, f6, f2, rdn # perform operation
fadd.d f17, f6, f2, rmm # perform operation
fadd.d f17, f6, f2, rne # perform operation
fadd.d f17, f6, f2, rtz # perform operation
fadd.d f17, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x9, 0xb0d433cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fadd.d f9, f8, f26, dyn # perform operation
fadd.d f9, f8, f26, rdn # perform operation
fadd.d f9, f8, f26, rmm # perform operation
fadd.d f9, f8, f26, rne # perform operation
fadd.d f9, f8, f26, rtz # perform operation
fadd.d f9, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x29, 0x1a50c347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
fadd.d f29, f21, f26, dyn # perform operation
fadd.d f29, f21, f26, rdn # perform operation
fadd.d f29, f21, f26, rmm # perform operation
fadd.d f29, f21, f26, rne # perform operation
fadd.d f29, f21, f26, rtz # perform operation
fadd.d f29, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x25, 0x00d56196 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fadd.d f25, f16, f9, dyn # perform operation
fadd.d f25, f16, f9, rdn # perform operation
fadd.d f25, f16, f9, rmm # perform operation
fadd.d f25, f16, f9, rne # perform operation
fadd.d f25, f16, f9, rtz # perform operation
fadd.d f25, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x6, 0x07ec99f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fadd.d f6, f20, f28, dyn # perform operation
fadd.d f6, f20, f28, rdn # perform operation
fadd.d f6, f20, f28, rmm # perform operation
fadd.d f6, f20, f28, rne # perform operation
fadd.d f6, f20, f28, rtz # perform operation
fadd.d f6, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x5, 0x5bd66271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fadd.d f5, f8, f2, dyn # perform operation
fadd.d f5, f8, f2, rdn # perform operation
fadd.d f5, f8, f2, rmm # perform operation
fadd.d f5, f8, f2, rne # perform operation
fadd.d f5, f8, f2, rtz # perform operation
fadd.d f5, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f5, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f5, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f5, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f5, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f5, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x17, 0x68bc77f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fadd.d f17, f13, f6, dyn # perform operation
fadd.d f17, f13, f6, rdn # perform operation
fadd.d f17, f13, f6, rmm # perform operation
fadd.d f17, f13, f6, rne # perform operation
fadd.d f17, f13, f6, rtz # perform operation
fadd.d f17, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x16, 0xb0f4e47c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fadd.d f16, f7, f27, dyn # perform operation
fadd.d f16, f7, f27, rdn # perform operation
fadd.d f16, f7, f27, rmm # perform operation
fadd.d f16, f7, f27, rne # perform operation
fadd.d f16, f7, f27, rtz # perform operation
fadd.d f16, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x15, 0x6d491ecf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fadd.d f15, f25, f22, dyn # perform operation
fadd.d f15, f25, f22, rdn # perform operation
fadd.d f15, f25, f22, rmm # perform operation
fadd.d f15, f25, f22, rne # perform operation
fadd.d f15, f25, f22, rtz # perform operation
fadd.d f15, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x2, 0xef0a634d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fadd.d f2, f14, f26, dyn # perform operation
fadd.d f2, f14, f26, rdn # perform operation
fadd.d f2, f14, f26, rmm # perform operation
fadd.d f2, f14, f26, rne # perform operation
fadd.d f2, f14, f26, rtz # perform operation
fadd.d f2, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x6, 0x4c9d0ace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fadd.d f6, f12, f10, dyn # perform operation
fadd.d f6, f12, f10, rdn # perform operation
fadd.d f6, f12, f10, rmm # perform operation
fadd.d f6, f12, f10, rne # perform operation
fadd.d f6, f12, f10, rtz # perform operation
fadd.d f6, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f12, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x14, 0x6b5eb5ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
fadd.d f14, f24, f16, dyn # perform operation
fadd.d f14, f24, f16, rdn # perform operation
fadd.d f14, f24, f16, rmm # perform operation
fadd.d f14, f24, f16, rne # perform operation
fadd.d f14, f24, f16, rtz # perform operation
fadd.d f14, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x14, 0x9ecc68da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fadd.d f14, f15, f28, dyn # perform operation
fadd.d f14, f15, f28, rdn # perform operation
fadd.d f14, f15, f28, rmm # perform operation
fadd.d f14, f15, f28, rne # perform operation
fadd.d f14, f15, f28, rtz # perform operation
fadd.d f14, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f14, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f14, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f14, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f14, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f14, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x4, 0x6124d2b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fadd.d f4, f8, f20, dyn # perform operation
fadd.d f4, f8, f20, rdn # perform operation
fadd.d f4, f8, f20, rmm # perform operation
fadd.d f4, f8, f20, rne # perform operation
fadd.d f4, f8, f20, rtz # perform operation
fadd.d f4, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f8, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x30, 0xfb649848 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fadd.d f30, f29, f22, dyn # perform operation
fadd.d f30, f29, f22, rdn # perform operation
fadd.d f30, f29, f22, rmm # perform operation
fadd.d f30, f29, f22, rne # perform operation
fadd.d f30, f29, f22, rtz # perform operation
fadd.d f30, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x24, 0x795567f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fadd.d f24, f16, f7, dyn # perform operation
fadd.d f24, f16, f7, rdn # perform operation
fadd.d f24, f16, f7, rmm # perform operation
fadd.d f24, f16, f7, rne # perform operation
fadd.d f24, f16, f7, rtz # perform operation
fadd.d f24, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x23, 0xd5118b82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fadd.d f23, f3, f4, dyn # perform operation
fadd.d f23, f3, f4, rdn # perform operation
fadd.d f23, f3, f4, rmm # perform operation
fadd.d f23, f3, f4, rne # perform operation
fadd.d f23, f3, f4, rtz # perform operation
fadd.d f23, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x17, 0xe774e34e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fadd.d f17, f1, f3, dyn # perform operation
fadd.d f17, f1, f3, rdn # perform operation
fadd.d f17, f1, f3, rmm # perform operation
fadd.d f17, f1, f3, rne # perform operation
fadd.d f17, f1, f3, rtz # perform operation
fadd.d f17, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x11, 0xc01bab21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
fadd.d f11, f24, f5, dyn # perform operation
fadd.d f11, f24, f5, rdn # perform operation
fadd.d f11, f24, f5, rmm # perform operation
fadd.d f11, f24, f5, rne # perform operation
fadd.d f11, f24, f5, rtz # perform operation
fadd.d f11, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x16, 0xf5b1c62f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fadd.d f16, f13, f25, dyn # perform operation
fadd.d f16, f13, f25, rdn # perform operation
fadd.d f16, f13, f25, rmm # perform operation
fadd.d f16, f13, f25, rne # perform operation
fadd.d f16, f13, f25, rtz # perform operation
fadd.d f16, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x27, 0x2095a86e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fadd.d f27, f3, f30, dyn # perform operation
fadd.d f27, f3, f30, rdn # perform operation
fadd.d f27, f3, f30, rmm # perform operation
fadd.d f27, f3, f30, rne # perform operation
fadd.d f27, f3, f30, rtz # perform operation
fadd.d f27, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f3, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x24, 0x791d63f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fadd.d f24, f29, f8, dyn # perform operation
fadd.d f24, f29, f8, rdn # perform operation
fadd.d f24, f29, f8, rmm # perform operation
fadd.d f24, f29, f8, rne # perform operation
fadd.d f24, f29, f8, rtz # perform operation
fadd.d f24, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f24, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f24, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f24, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f24, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f24, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x27, 0x5a849c66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fadd.d f27, f1, f15, dyn # perform operation
fadd.d f27, f1, f15, rdn # perform operation
fadd.d f27, f1, f15, rmm # perform operation
fadd.d f27, f1, f15, rne # perform operation
fadd.d f27, f1, f15, rtz # perform operation
fadd.d f27, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x29, 0x63d975ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000001 from memory into f4
fadd.d f29, f18, f4, dyn # perform operation
fadd.d f29, f18, f4, rdn # perform operation
fadd.d f29, f18, f4, rmm # perform operation
fadd.d f29, f18, f4, rne # perform operation
fadd.d f29, f18, f4, rtz # perform operation
fadd.d f29, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x28, 0x2b1cc143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fadd.d f28, f14, f5, dyn # perform operation
fadd.d f28, f14, f5, rdn # perform operation
fadd.d f28, f14, f5, rmm # perform operation
fadd.d f28, f14, f5, rne # perform operation
fadd.d f28, f14, f5, rtz # perform operation
fadd.d f28, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f28, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f28, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f28, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f28, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f28, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x15, 0x7708a346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fadd.d f15, f19, f12, dyn # perform operation
fadd.d f15, f19, f12, rdn # perform operation
fadd.d f15, f19, f12, rmm # perform operation
fadd.d f15, f19, f12, rne # perform operation
fadd.d f15, f19, f12, rtz # perform operation
fadd.d f15, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f15, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f15, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f15, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f15, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f15, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x7, 0x672b18ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fadd.d f7, f6, f25, dyn # perform operation
fadd.d f7, f6, f25, rdn # perform operation
fadd.d f7, f6, f25, rmm # perform operation
fadd.d f7, f6, f25, rne # perform operation
fadd.d f7, f6, f25, rtz # perform operation
fadd.d f7, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f7, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f7, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f7, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f7, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f7, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x22, 0xa628434c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fadd.d f22, f10, f14, dyn # perform operation
fadd.d f22, f10, f14, rdn # perform operation
fadd.d f22, f10, f14, rmm # perform operation
fadd.d f22, f10, f14, rne # perform operation
fadd.d f22, f10, f14, rtz # perform operation
fadd.d f22, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f22, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f22, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f22, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f22, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f22, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x21, 0x238dfc8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
fadd.d f21, f29, f14, dyn # perform operation
fadd.d f21, f29, f14, rdn # perform operation
fadd.d f21, f29, f14, rmm # perform operation
fadd.d f21, f29, f14, rne # perform operation
fadd.d f21, f29, f14, rtz # perform operation
fadd.d f21, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f21, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f21, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f21, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f21, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f21, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x11, 0xeee77c40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fadd.d f11, f18, f21, dyn # perform operation
fadd.d f11, f18, f21, rdn # perform operation
fadd.d f11, f18, f21, rmm # perform operation
fadd.d f11, f18, f21, rne # perform operation
fadd.d f11, f18, f21, rtz # perform operation
fadd.d f11, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x11, 0x7bda2935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fadd.d f11, f27, f21, dyn # perform operation
fadd.d f11, f27, f21, rdn # perform operation
fadd.d f11, f27, f21, rmm # perform operation
fadd.d f11, f27, f21, rne # perform operation
fadd.d f11, f27, f21, rtz # perform operation
fadd.d f11, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f11, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f11, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x9, 0x76aa1433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fadd.d f9, f16, f6, dyn # perform operation
fadd.d f9, f16, f6, rdn # perform operation
fadd.d f9, f16, f6, rmm # perform operation
fadd.d f9, f16, f6, rne # perform operation
fadd.d f9, f16, f6, rtz # perform operation
fadd.d f9, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x2, 0xf623b59b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fadd.d f2, f18, f19, dyn # perform operation
fadd.d f2, f18, f19, rdn # perform operation
fadd.d f2, f18, f19, rmm # perform operation
fadd.d f2, f18, f19, rne # perform operation
fadd.d f2, f18, f19, rtz # perform operation
fadd.d f2, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f2, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f2, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f2, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f2, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f2, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x9, 0x1949b3ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
fadd.d f9, f22, f10, dyn # perform operation
fadd.d f9, f22, f10, rdn # perform operation
fadd.d f9, f22, f10, rmm # perform operation
fadd.d f9, f22, f10, rne # perform operation
fadd.d f9, f22, f10, rtz # perform operation
fadd.d f9, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x25, 0x8c974d36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
fadd.d f25, f23, f4, dyn # perform operation
fadd.d f25, f23, f4, rdn # perform operation
fadd.d f25, f23, f4, rmm # perform operation
fadd.d f25, f23, f4, rne # perform operation
fadd.d f25, f23, f4, rtz # perform operation
fadd.d f25, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x18, 0x3b274038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fadd.d f18, f6, f5, dyn # perform operation
fadd.d f18, f6, f5, rdn # perform operation
fadd.d f18, f6, f5, rmm # perform operation
fadd.d f18, f6, f5, rne # perform operation
fadd.d f18, f6, f5, rtz # perform operation
fadd.d f18, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x19, 0xa316a542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fadd.d f19, f22, f21, dyn # perform operation
fadd.d f19, f22, f21, rdn # perform operation
fadd.d f19, f22, f21, rmm # perform operation
fadd.d f19, f22, f21, rne # perform operation
fadd.d f19, f22, f21, rtz # perform operation
fadd.d f19, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f19, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f19, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f19, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f19, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f19, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x30, 0x7f216666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fadd.d f30, f19, f26, dyn # perform operation
fadd.d f30, f19, f26, rdn # perform operation
fadd.d f30, f19, f26, rmm # perform operation
fadd.d f30, f19, f26, rne # perform operation
fadd.d f30, f19, f26, rtz # perform operation
fadd.d f30, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f30, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f30, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f30, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f30, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f30, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x23, 0xd284698c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fadd.d f23, f30, f15, dyn # perform operation
fadd.d f23, f30, f15, rdn # perform operation
fadd.d f23, f30, f15, rmm # perform operation
fadd.d f23, f30, f15, rne # perform operation
fadd.d f23, f30, f15, rtz # perform operation
fadd.d f23, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x12, 0x36533cb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fadd.d f12, f5, f13, dyn # perform operation
fadd.d f12, f5, f13, rdn # perform operation
fadd.d f12, f5, f13, rmm # perform operation
fadd.d f12, f5, f13, rne # perform operation
fadd.d f12, f5, f13, rtz # perform operation
fadd.d f12, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f12, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f12, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f12, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f12, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f12, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x25, 0xcf7a0976 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fadd.d f25, f24, f21, dyn # perform operation
fadd.d f25, f24, f21, rdn # perform operation
fadd.d f25, f24, f21, rmm # perform operation
fadd.d f25, f24, f21, rne # perform operation
fadd.d f25, f24, f21, rtz # perform operation
fadd.d f25, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f25, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f25, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f25, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f25, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f25, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x6, 0x8ad81d35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fadd.d f6, f25, f18, dyn # perform operation
fadd.d f6, f25, f18, rdn # perform operation
fadd.d f6, f25, f18, rmm # perform operation
fadd.d f6, f25, f18, rne # perform operation
fadd.d f6, f25, f18, rtz # perform operation
fadd.d f6, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x17, 0x7498235b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
fadd.d f17, f6, f20, dyn # perform operation
fadd.d f17, f6, f20, rdn # perform operation
fadd.d f17, f6, f20, rmm # perform operation
fadd.d f17, f6, f20, rne # perform operation
fadd.d f17, f6, f20, rtz # perform operation
fadd.d f17, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f17, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f17, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f17, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f17, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f17, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x18, 0x822b5ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fadd.d f18, f19, f9, dyn # perform operation
fadd.d f18, f19, f9, rdn # perform operation
fadd.d f18, f19, f9, rmm # perform operation
fadd.d f18, f19, f9, rne # perform operation
fadd.d f18, f19, f9, rtz # perform operation
fadd.d f18, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f18, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f18, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x9, 0x5df0b5f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fadd.d f9, f24, f29, dyn # perform operation
fadd.d f9, f24, f29, rdn # perform operation
fadd.d f9, f24, f29, rmm # perform operation
fadd.d f9, f24, f29, rne # perform operation
fadd.d f9, f24, f29, rtz # perform operation
fadd.d f9, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f9, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f9, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x4, 0x5dc41a33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fadd.d f4, f22, f10, dyn # perform operation
fadd.d f4, f22, f10, rdn # perform operation
fadd.d f4, f22, f10, rmm # perform operation
fadd.d f4, f22, f10, rne # perform operation
fadd.d f4, f22, f10, rtz # perform operation
fadd.d f4, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x23, 0x35f23420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fadd.d f23, f20, f25, dyn # perform operation
fadd.d f23, f20, f25, rdn # perform operation
fadd.d f23, f20, f25, rmm # perform operation
fadd.d f23, f20, f25, rne # perform operation
fadd.d f23, f20, f25, rtz # perform operation
fadd.d f23, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f23, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f23, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x4, 0x98f7ba2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fadd.d f4, f24, f16, dyn # perform operation
fadd.d f4, f24, f16, rdn # perform operation
fadd.d f4, f24, f16, rmm # perform operation
fadd.d f4, f24, f16, rne # perform operation
fadd.d f4, f24, f16, rtz # perform operation
fadd.d f4, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f4, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f4, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f4, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f4, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f4, f24, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x27, 0x56f6bf73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fadd.d f27, f31, f8, dyn # perform operation
fadd.d f27, f31, f8, rdn # perform operation
fadd.d f27, f31, f8, rmm # perform operation
fadd.d f27, f31, f8, rne # perform operation
fadd.d f27, f31, f8, rtz # perform operation
fadd.d f27, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f27, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x1, 0x2c8ba655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
fadd.d f1, f18, f10, dyn # perform operation
fadd.d f1, f18, f10, rdn # perform operation
fadd.d f1, f18, f10, rmm # perform operation
fadd.d f1, f18, f10, rne # perform operation
fadd.d f1, f18, f10, rtz # perform operation
fadd.d f1, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f1, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f1, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f1, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f1, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f1, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x29, 0x608fa08c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fadd.d f29, f9, f24, dyn # perform operation
fadd.d f29, f9, f24, rdn # perform operation
fadd.d f29, f9, f24, rmm # perform operation
fadd.d f29, f9, f24, rne # perform operation
fadd.d f29, f9, f24, rtz # perform operation
fadd.d f29, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f29, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x16, 0xcc306162 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
fadd.d f16, f7, f9, dyn # perform operation
fadd.d f16, f7, f9, rdn # perform operation
fadd.d f16, f7, f9, rmm # perform operation
fadd.d f16, f7, f9, rne # perform operation
fadd.d f16, f7, f9, rtz # perform operation
fadd.d f16, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f16, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f16, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f16, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f16, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f16, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x6, 0xe8c1baba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fadd.d f6, f8, f25, dyn # perform operation
fadd.d f6, f8, f25, rdn # perform operation
fadd.d f6, f8, f25, rmm # perform operation
fadd.d f6, f8, f25, rne # perform operation
fadd.d f6, f8, f25, rtz # perform operation
fadd.d f6, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fadd.d f6, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fadd.d f6, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fadd.d f6, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fadd.d f6, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fadd.d f6, f8, f25 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x3ecc1d22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4c1ee6c # load x3 with 32 MSBs 0x00000000f4c1ee6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4c1ee6c
sw x3, 0(x2) # store x3 (0xf4c1ee6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f4c1ee6c from memory into f23
li x3, 0x298683d3 # load x3 with 32 MSBs 0x00000000298683d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000298683d3
sw x3, 0(x2) # store x3 (0x298683d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000298683d3 from memory into f18
fadd.d f0, f23, f18 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0xba3fb768 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x38ff1798 # load x3 with 32 MSBs 0x0000000038ff1798
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038ff1798
sw x3, 0(x2) # store x3 (0x38ff1798) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000038ff1798 from memory into f8
li x3, 0x02730319 # load x3 with 32 MSBs 0x0000000002730319
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002730319
sw x3, 0(x2) # store x3 (0x02730319) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000002730319 from memory into f17
fadd.d f1, f8, f17 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x4d56b763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a036d99 # load x3 with 32 MSBs 0x000000002a036d99
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a036d99
sw x3, 0(x2) # store x3 (0x2a036d99) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002a036d99 from memory into f13
li x3, 0x8ae2a33f # load x3 with 32 MSBs 0x000000008ae2a33f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ae2a33f
sw x3, 0(x2) # store x3 (0x8ae2a33f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000008ae2a33f from memory into f28
fadd.d f2, f13, f28 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xb125ff7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f89436a # load x3 with 32 MSBs 0x000000000f89436a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000f89436a
sw x3, 0(x2) # store x3 (0x0f89436a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000000f89436a from memory into f10
li x3, 0x6b210608 # load x3 with 32 MSBs 0x000000006b210608
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b210608
sw x3, 0(x2) # store x3 (0x6b210608) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006b210608 from memory into f18
fadd.d f3, f10, f18 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x593f35eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b736b20 # load x3 with 32 MSBs 0x000000001b736b20
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b736b20
sw x3, 0(x2) # store x3 (0x1b736b20) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001b736b20 from memory into f8
li x3, 0x2e3bcbf7 # load x3 with 32 MSBs 0x000000002e3bcbf7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e3bcbf7
sw x3, 0(x2) # store x3 (0x2e3bcbf7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002e3bcbf7 from memory into f29
fadd.d f4, f8, f29 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x4046d8c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4df33864 # load x3 with 32 MSBs 0x000000004df33864
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004df33864
sw x3, 0(x2) # store x3 (0x4df33864) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004df33864 from memory into f10
li x3, 0x057ff8b2 # load x3 with 32 MSBs 0x00000000057ff8b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000057ff8b2
sw x3, 0(x2) # store x3 (0x057ff8b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000057ff8b2 from memory into f25
fadd.d f5, f10, f25 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x839911be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4529feed # load x3 with 32 MSBs 0x000000004529feed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004529feed
sw x3, 0(x2) # store x3 (0x4529feed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004529feed from memory into f11
li x3, 0x75fb91d0 # load x3 with 32 MSBs 0x0000000075fb91d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075fb91d0
sw x3, 0(x2) # store x3 (0x75fb91d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000075fb91d0 from memory into f7
fadd.d f6, f11, f7 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0xb831b245 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa5e73233 # load x3 with 32 MSBs 0x00000000a5e73233
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5e73233
sw x3, 0(x2) # store x3 (0xa5e73233) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a5e73233 from memory into f5
li x3, 0x07da3ad3 # load x3 with 32 MSBs 0x0000000007da3ad3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000007da3ad3
sw x3, 0(x2) # store x3 (0x07da3ad3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000007da3ad3 from memory into f31
fadd.d f7, f5, f31 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0xffa23a45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ef718e5 # load x3 with 32 MSBs 0x000000005ef718e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ef718e5
sw x3, 0(x2) # store x3 (0x5ef718e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005ef718e5 from memory into f27
li x3, 0x2a765a15 # load x3 with 32 MSBs 0x000000002a765a15
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a765a15
sw x3, 0(x2) # store x3 (0x2a765a15) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002a765a15 from memory into f4
fadd.d f8, f27, f4 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x5d1a9ebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b4a3291 # load x3 with 32 MSBs 0x000000008b4a3291
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b4a3291
sw x3, 0(x2) # store x3 (0x8b4a3291) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000008b4a3291 from memory into f8
li x3, 0x8358d37e # load x3 with 32 MSBs 0x000000008358d37e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008358d37e
sw x3, 0(x2) # store x3 (0x8358d37e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008358d37e from memory into f23
fadd.d f9, f8, f23 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0xfb85f528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7289ac55 # load x3 with 32 MSBs 0x000000007289ac55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007289ac55
sw x3, 0(x2) # store x3 (0x7289ac55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000007289ac55 from memory into f17
li x3, 0xc18d1eef # load x3 with 32 MSBs 0x00000000c18d1eef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c18d1eef
sw x3, 0(x2) # store x3 (0xc18d1eef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c18d1eef from memory into f14
fadd.d f10, f17, f14 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x1fe6d609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d2c9fdd # load x3 with 32 MSBs 0x000000009d2c9fdd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d2c9fdd
sw x3, 0(x2) # store x3 (0x9d2c9fdd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000009d2c9fdd from memory into f17
li x3, 0x6c69cea0 # load x3 with 32 MSBs 0x000000006c69cea0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c69cea0
sw x3, 0(x2) # store x3 (0x6c69cea0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006c69cea0 from memory into f1
fadd.d f11, f17, f1 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x9f1aaf6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x174adcbf # load x3 with 32 MSBs 0x00000000174adcbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000174adcbf
sw x3, 0(x2) # store x3 (0x174adcbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000174adcbf from memory into f28
li x3, 0x459a79c1 # load x3 with 32 MSBs 0x00000000459a79c1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000459a79c1
sw x3, 0(x2) # store x3 (0x459a79c1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000459a79c1 from memory into f5
fadd.d f12, f28, f5 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0xa6e8b3b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf894961d # load x3 with 32 MSBs 0x00000000f894961d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f894961d
sw x3, 0(x2) # store x3 (0xf894961d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f894961d from memory into f31
li x3, 0xb2b0a54f # load x3 with 32 MSBs 0x00000000b2b0a54f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2b0a54f
sw x3, 0(x2) # store x3 (0xb2b0a54f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000b2b0a54f from memory into f25
fadd.d f13, f31, f25 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x3695b052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8284cdd # load x3 with 32 MSBs 0x00000000f8284cdd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8284cdd
sw x3, 0(x2) # store x3 (0xf8284cdd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f8284cdd from memory into f17
li x3, 0xfe8f0b2c # load x3 with 32 MSBs 0x00000000fe8f0b2c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fe8f0b2c
sw x3, 0(x2) # store x3 (0xfe8f0b2c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000fe8f0b2c from memory into f29
fadd.d f14, f17, f29 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x66ec4896 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa2f86ac # load x3 with 32 MSBs 0x00000000fa2f86ac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa2f86ac
sw x3, 0(x2) # store x3 (0xfa2f86ac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000fa2f86ac from memory into f15
li x3, 0x9f8e2f7a # load x3 with 32 MSBs 0x000000009f8e2f7a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f8e2f7a
sw x3, 0(x2) # store x3 (0x9f8e2f7a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000009f8e2f7a from memory into f24
fadd.d f15, f15, f24 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x5f5cb790 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4306b53e # load x3 with 32 MSBs 0x000000004306b53e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004306b53e
sw x3, 0(x2) # store x3 (0x4306b53e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000004306b53e from memory into f30
li x3, 0xea369e5a # load x3 with 32 MSBs 0x00000000ea369e5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea369e5a
sw x3, 0(x2) # store x3 (0xea369e5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ea369e5a from memory into f15
fadd.d f16, f30, f15 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x7a14a0bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78bdcea4 # load x3 with 32 MSBs 0x0000000078bdcea4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000078bdcea4
sw x3, 0(x2) # store x3 (0x78bdcea4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000078bdcea4 from memory into f27
li x3, 0x4fbfb689 # load x3 with 32 MSBs 0x000000004fbfb689
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fbfb689
sw x3, 0(x2) # store x3 (0x4fbfb689) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000004fbfb689 from memory into f6
fadd.d f17, f27, f6 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x56789add # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a97a016 # load x3 with 32 MSBs 0x000000009a97a016
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009a97a016
sw x3, 0(x2) # store x3 (0x9a97a016) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009a97a016 from memory into f14
li x3, 0xee121c08 # load x3 with 32 MSBs 0x00000000ee121c08
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ee121c08
sw x3, 0(x2) # store x3 (0xee121c08) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ee121c08 from memory into f4
fadd.d f18, f14, f4 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xef1094a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7656dc6b # load x3 with 32 MSBs 0x000000007656dc6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007656dc6b
sw x3, 0(x2) # store x3 (0x7656dc6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007656dc6b from memory into f27
li x3, 0x508e465f # load x3 with 32 MSBs 0x00000000508e465f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000508e465f
sw x3, 0(x2) # store x3 (0x508e465f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000508e465f from memory into f21
fadd.d f19, f27, f21 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x09422ad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x067d470a # load x3 with 32 MSBs 0x00000000067d470a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000067d470a
sw x3, 0(x2) # store x3 (0x067d470a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000067d470a from memory into f14
li x3, 0x8e38a9d1 # load x3 with 32 MSBs 0x000000008e38a9d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e38a9d1
sw x3, 0(x2) # store x3 (0x8e38a9d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000008e38a9d1 from memory into f4
fadd.d f20, f14, f4 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x74e30082 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b4d8399 # load x3 with 32 MSBs 0x000000006b4d8399
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b4d8399
sw x3, 0(x2) # store x3 (0x6b4d8399) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000006b4d8399 from memory into f3
li x3, 0x6f882b1b # load x3 with 32 MSBs 0x000000006f882b1b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f882b1b
sw x3, 0(x2) # store x3 (0x6f882b1b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006f882b1b from memory into f12
fadd.d f21, f3, f12 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x489e45fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc5af78 # load x3 with 32 MSBs 0x00000000bfc5af78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bfc5af78
sw x3, 0(x2) # store x3 (0xbfc5af78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000bfc5af78 from memory into f27
li x3, 0x647e78d1 # load x3 with 32 MSBs 0x00000000647e78d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000647e78d1
sw x3, 0(x2) # store x3 (0x647e78d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000647e78d1 from memory into f31
fadd.d f22, f27, f31 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x5e6da9b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf58c87eb # load x3 with 32 MSBs 0x00000000f58c87eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f58c87eb
sw x3, 0(x2) # store x3 (0xf58c87eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000f58c87eb from memory into f20
li x3, 0x805b9783 # load x3 with 32 MSBs 0x00000000805b9783
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000805b9783
sw x3, 0(x2) # store x3 (0x805b9783) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000805b9783 from memory into f6
fadd.d f23, f20, f6 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0xec94a264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4c0a0b8 # load x3 with 32 MSBs 0x00000000d4c0a0b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d4c0a0b8
sw x3, 0(x2) # store x3 (0xd4c0a0b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000d4c0a0b8 from memory into f10
li x3, 0xffa9b51f # load x3 with 32 MSBs 0x00000000ffa9b51f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ffa9b51f
sw x3, 0(x2) # store x3 (0xffa9b51f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ffa9b51f from memory into f23
fadd.d f24, f10, f23 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x7f682488 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c4c9e69 # load x3 with 32 MSBs 0x000000000c4c9e69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c4c9e69
sw x3, 0(x2) # store x3 (0x0c4c9e69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000c4c9e69 from memory into f17
li x3, 0xfd6236b3 # load x3 with 32 MSBs 0x00000000fd6236b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd6236b3
sw x3, 0(x2) # store x3 (0xfd6236b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fd6236b3 from memory into f18
fadd.d f25, f17, f18 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x003c9beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e300fa9 # load x3 with 32 MSBs 0x000000007e300fa9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e300fa9
sw x3, 0(x2) # store x3 (0x7e300fa9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007e300fa9 from memory into f21
li x3, 0xcf4a5451 # load x3 with 32 MSBs 0x00000000cf4a5451
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf4a5451
sw x3, 0(x2) # store x3 (0xcf4a5451) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cf4a5451 from memory into f14
fadd.d f26, f21, f14 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xc6c861aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa39cf845 # load x3 with 32 MSBs 0x00000000a39cf845
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a39cf845
sw x3, 0(x2) # store x3 (0xa39cf845) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a39cf845 from memory into f17
li x3, 0x82f439db # load x3 with 32 MSBs 0x0000000082f439db
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000082f439db
sw x3, 0(x2) # store x3 (0x82f439db) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000082f439db from memory into f12
fadd.d f27, f17, f12 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x3a788cc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71c3132b # load x3 with 32 MSBs 0x0000000071c3132b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071c3132b
sw x3, 0(x2) # store x3 (0x71c3132b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000071c3132b from memory into f3
li x3, 0x5a488558 # load x3 with 32 MSBs 0x000000005a488558
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a488558
sw x3, 0(x2) # store x3 (0x5a488558) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000005a488558 from memory into f24
fadd.d f28, f3, f24 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x51792eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf447e204 # load x3 with 32 MSBs 0x00000000f447e204
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f447e204
sw x3, 0(x2) # store x3 (0xf447e204) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000f447e204 from memory into f25
li x3, 0x68e2899b # load x3 with 32 MSBs 0x0000000068e2899b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068e2899b
sw x3, 0(x2) # store x3 (0x68e2899b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000068e2899b from memory into f21
fadd.d f29, f25, f21 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x657f6888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21a76d42 # load x3 with 32 MSBs 0x0000000021a76d42
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021a76d42
sw x3, 0(x2) # store x3 (0x21a76d42) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000021a76d42 from memory into f5
li x3, 0x953aff38 # load x3 with 32 MSBs 0x00000000953aff38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000953aff38
sw x3, 0(x2) # store x3 (0x953aff38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000953aff38 from memory into f23
fadd.d f30, f5, f23 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xa1f0ec92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x070036e9 # load x3 with 32 MSBs 0x00000000070036e9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000070036e9
sw x3, 0(x2) # store x3 (0x070036e9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000070036e9 from memory into f10
li x3, 0x8c7af996 # load x3 with 32 MSBs 0x000000008c7af996
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c7af996
sw x3, 0(x2) # store x3 (0x8c7af996) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000008c7af996 from memory into f7
fadd.d f31, f10, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x16, 0xf94e5a0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2651c71 # load x3 with 32 MSBs 0x00000000b2651c71
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2651c71
sw x3, 0(x2) # store x3 (0xb2651c71) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000b2651c71 from memory into f0
li x3, 0xa708fc32 # load x3 with 32 MSBs 0x00000000a708fc32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a708fc32
sw x3, 0(x2) # store x3 (0xa708fc32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a708fc32 from memory into f15
fadd.d f16, f0, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x17, 0x30696ad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x50f810dc # load x3 with 32 MSBs 0x0000000050f810dc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050f810dc
sw x3, 0(x2) # store x3 (0x50f810dc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000050f810dc from memory into f1
li x3, 0x1be0e046 # load x3 with 32 MSBs 0x000000001be0e046
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001be0e046
sw x3, 0(x2) # store x3 (0x1be0e046) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000001be0e046 from memory into f6
fadd.d f17, f1, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x31, 0x7cf62c68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x686abb1a # load x3 with 32 MSBs 0x00000000686abb1a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000686abb1a
sw x3, 0(x2) # store x3 (0x686abb1a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000686abb1a from memory into f2
li x3, 0x16e18729 # load x3 with 32 MSBs 0x0000000016e18729
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016e18729
sw x3, 0(x2) # store x3 (0x16e18729) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000016e18729 from memory into f10
fadd.d f31, f2, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x30, 0x0aba6f05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4487993 # load x3 with 32 MSBs 0x00000000c4487993
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4487993
sw x3, 0(x2) # store x3 (0xc4487993) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000c4487993 from memory into f3
li x3, 0xc83af8a4 # load x3 with 32 MSBs 0x00000000c83af8a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c83af8a4
sw x3, 0(x2) # store x3 (0xc83af8a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c83af8a4 from memory into f20
fadd.d f30, f3, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x31, 0x9d292178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e24b55a # load x3 with 32 MSBs 0x000000001e24b55a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001e24b55a
sw x3, 0(x2) # store x3 (0x1e24b55a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001e24b55a from memory into f4
li x3, 0xd8ffdb16 # load x3 with 32 MSBs 0x00000000d8ffdb16
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d8ffdb16
sw x3, 0(x2) # store x3 (0xd8ffdb16) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d8ffdb16 from memory into f16
fadd.d f31, f4, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x15, 0xc92e2334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6ba1cac # load x3 with 32 MSBs 0x00000000f6ba1cac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6ba1cac
sw x3, 0(x2) # store x3 (0xf6ba1cac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f6ba1cac from memory into f5
li x3, 0x609bd552 # load x3 with 32 MSBs 0x00000000609bd552
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000609bd552
sw x3, 0(x2) # store x3 (0x609bd552) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000609bd552 from memory into f31
fadd.d f15, f5, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x4, 0x16e2691c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x336d6bd3 # load x3 with 32 MSBs 0x00000000336d6bd3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000336d6bd3
sw x3, 0(x2) # store x3 (0x336d6bd3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000336d6bd3 from memory into f6
li x3, 0xf6c08805 # load x3 with 32 MSBs 0x00000000f6c08805
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f6c08805
sw x3, 0(x2) # store x3 (0xf6c08805) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f6c08805 from memory into f14
fadd.d f4, f6, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x10, 0x8e8e04b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb017e09c # load x3 with 32 MSBs 0x00000000b017e09c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b017e09c
sw x3, 0(x2) # store x3 (0xb017e09c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b017e09c from memory into f7
li x3, 0x652075c3 # load x3 with 32 MSBs 0x00000000652075c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000652075c3
sw x3, 0(x2) # store x3 (0x652075c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000652075c3 from memory into f16
fadd.d f10, f7, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x21, 0x6ff69638 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c701391 # load x3 with 32 MSBs 0x000000001c701391
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001c701391
sw x3, 0(x2) # store x3 (0x1c701391) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001c701391 from memory into f8
li x3, 0xc4bd0776 # load x3 with 32 MSBs 0x00000000c4bd0776
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4bd0776
sw x3, 0(x2) # store x3 (0xc4bd0776) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c4bd0776 from memory into f1
fadd.d f21, f8, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x14, 0x450d9dcf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d5f9d46 # load x3 with 32 MSBs 0x000000008d5f9d46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008d5f9d46
sw x3, 0(x2) # store x3 (0x8d5f9d46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000008d5f9d46 from memory into f9
li x3, 0x0a058e72 # load x3 with 32 MSBs 0x000000000a058e72
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a058e72
sw x3, 0(x2) # store x3 (0x0a058e72) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000000a058e72 from memory into f31
fadd.d f14, f9, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x14, 0x66815ac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d4bcb6c # load x3 with 32 MSBs 0x000000005d4bcb6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005d4bcb6c
sw x3, 0(x2) # store x3 (0x5d4bcb6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005d4bcb6c from memory into f10
li x3, 0x7d247627 # load x3 with 32 MSBs 0x000000007d247627
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d247627
sw x3, 0(x2) # store x3 (0x7d247627) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000007d247627 from memory into f8
fadd.d f14, f10, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x3, 0xc2cf6df3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9283dac # load x3 with 32 MSBs 0x00000000a9283dac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9283dac
sw x3, 0(x2) # store x3 (0xa9283dac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a9283dac from memory into f11
li x3, 0x9e35eabb # load x3 with 32 MSBs 0x000000009e35eabb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e35eabb
sw x3, 0(x2) # store x3 (0x9e35eabb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009e35eabb from memory into f4
fadd.d f3, f11, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x18, 0xef8120de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c434ebc # load x3 with 32 MSBs 0x000000000c434ebc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c434ebc
sw x3, 0(x2) # store x3 (0x0c434ebc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000000c434ebc from memory into f12
li x3, 0x73cb2392 # load x3 with 32 MSBs 0x0000000073cb2392
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073cb2392
sw x3, 0(x2) # store x3 (0x73cb2392) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000073cb2392 from memory into f2
fadd.d f18, f12, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x26, 0xabde8a12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0dc57c8 # load x3 with 32 MSBs 0x00000000c0dc57c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0dc57c8
sw x3, 0(x2) # store x3 (0xc0dc57c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c0dc57c8 from memory into f13
li x3, 0x58264b0b # load x3 with 32 MSBs 0x0000000058264b0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000058264b0b
sw x3, 0(x2) # store x3 (0x58264b0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000058264b0b from memory into f16
fadd.d f26, f13, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x27, 0x488eb079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74f9561b # load x3 with 32 MSBs 0x0000000074f9561b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074f9561b
sw x3, 0(x2) # store x3 (0x74f9561b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000074f9561b from memory into f14
li x3, 0x4e5c9687 # load x3 with 32 MSBs 0x000000004e5c9687
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004e5c9687
sw x3, 0(x2) # store x3 (0x4e5c9687) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004e5c9687 from memory into f8
fadd.d f27, f14, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x23, 0xbc3943d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25d50a30 # load x3 with 32 MSBs 0x0000000025d50a30
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025d50a30
sw x3, 0(x2) # store x3 (0x25d50a30) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000025d50a30 from memory into f15
li x3, 0x6ec7647f # load x3 with 32 MSBs 0x000000006ec7647f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ec7647f
sw x3, 0(x2) # store x3 (0x6ec7647f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006ec7647f from memory into f5
fadd.d f23, f15, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x22, 0x1431a09c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a719de7 # load x3 with 32 MSBs 0x000000002a719de7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002a719de7
sw x3, 0(x2) # store x3 (0x2a719de7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000002a719de7 from memory into f16
li x3, 0xfbcb8431 # load x3 with 32 MSBs 0x00000000fbcb8431
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fbcb8431
sw x3, 0(x2) # store x3 (0xfbcb8431) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000fbcb8431 from memory into f14
fadd.d f22, f16, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x19, 0x17a826cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0ac67e6c # load x3 with 32 MSBs 0x000000000ac67e6c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000ac67e6c
sw x3, 0(x2) # store x3 (0x0ac67e6c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000ac67e6c from memory into f17
li x3, 0x75822c3b # load x3 with 32 MSBs 0x0000000075822c3b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000075822c3b
sw x3, 0(x2) # store x3 (0x75822c3b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000075822c3b from memory into f24
fadd.d f19, f17, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x27, 0xd989f9ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83f05136 # load x3 with 32 MSBs 0x0000000083f05136
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000083f05136
sw x3, 0(x2) # store x3 (0x83f05136) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000083f05136 from memory into f18
li x3, 0xcf1b8c89 # load x3 with 32 MSBs 0x00000000cf1b8c89
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cf1b8c89
sw x3, 0(x2) # store x3 (0xcf1b8c89) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000cf1b8c89 from memory into f25
fadd.d f27, f18, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x7, 0x60b51a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe792d26d # load x3 with 32 MSBs 0x00000000e792d26d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e792d26d
sw x3, 0(x2) # store x3 (0xe792d26d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e792d26d from memory into f19
li x3, 0x175779dd # load x3 with 32 MSBs 0x00000000175779dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000175779dd
sw x3, 0(x2) # store x3 (0x175779dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000175779dd from memory into f1
fadd.d f7, f19, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x8, 0x7286323e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a466fd7 # load x3 with 32 MSBs 0x000000001a466fd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a466fd7
sw x3, 0(x2) # store x3 (0x1a466fd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001a466fd7 from memory into f20
li x3, 0xb5e27774 # load x3 with 32 MSBs 0x00000000b5e27774
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5e27774
sw x3, 0(x2) # store x3 (0xb5e27774) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b5e27774 from memory into f16
fadd.d f8, f20, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x13, 0x617a6ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9fb09610 # load x3 with 32 MSBs 0x000000009fb09610
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fb09610
sw x3, 0(x2) # store x3 (0x9fb09610) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009fb09610 from memory into f21
li x3, 0x6a58719f # load x3 with 32 MSBs 0x000000006a58719f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a58719f
sw x3, 0(x2) # store x3 (0x6a58719f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006a58719f from memory into f1
fadd.d f13, f21, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x1, 0xd7a82241 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x567c8945 # load x3 with 32 MSBs 0x00000000567c8945
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000567c8945
sw x3, 0(x2) # store x3 (0x567c8945) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000567c8945 from memory into f22
li x3, 0x5c9fe82a # load x3 with 32 MSBs 0x000000005c9fe82a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c9fe82a
sw x3, 0(x2) # store x3 (0x5c9fe82a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000005c9fe82a from memory into f11
fadd.d f1, f22, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x3, 0xd5f747ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1b0a0a05 # load x3 with 32 MSBs 0x000000001b0a0a05
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b0a0a05
sw x3, 0(x2) # store x3 (0x1b0a0a05) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000001b0a0a05 from memory into f23
li x3, 0x933a0812 # load x3 with 32 MSBs 0x00000000933a0812
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000933a0812
sw x3, 0(x2) # store x3 (0x933a0812) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000933a0812 from memory into f24
fadd.d f3, f23, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x12, 0x53583863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbbd5a86c # load x3 with 32 MSBs 0x00000000bbd5a86c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bbd5a86c
sw x3, 0(x2) # store x3 (0xbbd5a86c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bbd5a86c from memory into f24
li x3, 0xf561fb01 # load x3 with 32 MSBs 0x00000000f561fb01
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f561fb01
sw x3, 0(x2) # store x3 (0xf561fb01) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f561fb01 from memory into f15
fadd.d f12, f24, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x5, 0xd42b4b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3279ecb2 # load x3 with 32 MSBs 0x000000003279ecb2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003279ecb2
sw x3, 0(x2) # store x3 (0x3279ecb2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000003279ecb2 from memory into f25
li x3, 0x28d85a36 # load x3 with 32 MSBs 0x0000000028d85a36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028d85a36
sw x3, 0(x2) # store x3 (0x28d85a36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000028d85a36 from memory into f9
fadd.d f5, f25, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x31, 0x6bb442e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4021c88e # load x3 with 32 MSBs 0x000000004021c88e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004021c88e
sw x3, 0(x2) # store x3 (0x4021c88e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000004021c88e from memory into f26
li x3, 0xfec273d0 # load x3 with 32 MSBs 0x00000000fec273d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fec273d0
sw x3, 0(x2) # store x3 (0xfec273d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000fec273d0 from memory into f21
fadd.d f31, f26, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x29, 0xa12ad42e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b1694f8 # load x3 with 32 MSBs 0x000000009b1694f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b1694f8
sw x3, 0(x2) # store x3 (0x9b1694f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000009b1694f8 from memory into f27
li x3, 0x5ee2214d # load x3 with 32 MSBs 0x000000005ee2214d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ee2214d
sw x3, 0(x2) # store x3 (0x5ee2214d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005ee2214d from memory into f16
fadd.d f29, f27, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x4, 0x929d0548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d0ecdf0 # load x3 with 32 MSBs 0x000000003d0ecdf0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d0ecdf0
sw x3, 0(x2) # store x3 (0x3d0ecdf0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003d0ecdf0 from memory into f28
li x3, 0xe5072947 # load x3 with 32 MSBs 0x00000000e5072947
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e5072947
sw x3, 0(x2) # store x3 (0xe5072947) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e5072947 from memory into f2
fadd.d f4, f28, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x30, 0x304e30d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb94abd84 # load x3 with 32 MSBs 0x00000000b94abd84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b94abd84
sw x3, 0(x2) # store x3 (0xb94abd84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000b94abd84 from memory into f29
li x3, 0x27f92412 # load x3 with 32 MSBs 0x0000000027f92412
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000027f92412
sw x3, 0(x2) # store x3 (0x27f92412) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000027f92412 from memory into f7
fadd.d f30, f29, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x13, 0xf4322abf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf56a2b92 # load x3 with 32 MSBs 0x00000000f56a2b92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f56a2b92
sw x3, 0(x2) # store x3 (0xf56a2b92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f56a2b92 from memory into f30
li x3, 0xe891a6c8 # load x3 with 32 MSBs 0x00000000e891a6c8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e891a6c8
sw x3, 0(x2) # store x3 (0xe891a6c8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000e891a6c8 from memory into f20
fadd.d f13, f30, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x18, 0x4712add4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x740732b9 # load x3 with 32 MSBs 0x00000000740732b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000740732b9
sw x3, 0(x2) # store x3 (0x740732b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000740732b9 from memory into f31
li x3, 0xfcecb563 # load x3 with 32 MSBs 0x00000000fcecb563
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcecb563
sw x3, 0(x2) # store x3 (0xfcecb563) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000fcecb563 from memory into f15
fadd.d f18, f31, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x3, 0x0c8820e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb0eea6c9 # load x3 with 32 MSBs 0x00000000b0eea6c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b0eea6c9
sw x3, 0(x2) # store x3 (0xb0eea6c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000b0eea6c9 from memory into f27
li x3, 0xac135ff9 # load x3 with 32 MSBs 0x00000000ac135ff9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac135ff9
sw x3, 0(x2) # store x3 (0xac135ff9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000ac135ff9 from memory into f0
fadd.d f3, f27, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x30, 0x8f99f252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d8496be # load x3 with 32 MSBs 0x000000001d8496be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d8496be
sw x3, 0(x2) # store x3 (0x1d8496be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000001d8496be from memory into f16
li x3, 0xe50e1d7f # load x3 with 32 MSBs 0x00000000e50e1d7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e50e1d7f
sw x3, 0(x2) # store x3 (0xe50e1d7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e50e1d7f from memory into f1
fadd.d f30, f16, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x12, 0x6674679d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a9a63b5 # load x3 with 32 MSBs 0x000000000a9a63b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a9a63b5
sw x3, 0(x2) # store x3 (0x0a9a63b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000000a9a63b5 from memory into f8
li x3, 0xc4d4ee54 # load x3 with 32 MSBs 0x00000000c4d4ee54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c4d4ee54
sw x3, 0(x2) # store x3 (0xc4d4ee54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c4d4ee54 from memory into f2
fadd.d f12, f8, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x12, 0x51dfbe04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc55fca5b # load x3 with 32 MSBs 0x00000000c55fca5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c55fca5b
sw x3, 0(x2) # store x3 (0xc55fca5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c55fca5b from memory into f1
li x3, 0x28a49020 # load x3 with 32 MSBs 0x0000000028a49020
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028a49020
sw x3, 0(x2) # store x3 (0x28a49020) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000028a49020 from memory into f3
fadd.d f12, f1, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x22, 0x385861c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c547198 # load x3 with 32 MSBs 0x000000000c547198
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c547198
sw x3, 0(x2) # store x3 (0x0c547198) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000000c547198 from memory into f26
li x3, 0x5a12b724 # load x3 with 32 MSBs 0x000000005a12b724
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a12b724
sw x3, 0(x2) # store x3 (0x5a12b724) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000005a12b724 from memory into f4
fadd.d f22, f26, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x26, 0x38f64b18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9b3f48a9 # load x3 with 32 MSBs 0x000000009b3f48a9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b3f48a9
sw x3, 0(x2) # store x3 (0x9b3f48a9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000009b3f48a9 from memory into f4
li x3, 0xf314373a # load x3 with 32 MSBs 0x00000000f314373a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f314373a
sw x3, 0(x2) # store x3 (0xf314373a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f314373a from memory into f5
fadd.d f26, f4, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x18, 0xd1e1fcd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9fae35ec # load x3 with 32 MSBs 0x000000009fae35ec
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009fae35ec
sw x3, 0(x2) # store x3 (0x9fae35ec) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009fae35ec from memory into f29
li x3, 0xf740d6c3 # load x3 with 32 MSBs 0x00000000f740d6c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f740d6c3
sw x3, 0(x2) # store x3 (0xf740d6c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000f740d6c3 from memory into f6
fadd.d f18, f29, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x10, 0x4e87e978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a586b69 # load x3 with 32 MSBs 0x000000008a586b69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008a586b69
sw x3, 0(x2) # store x3 (0x8a586b69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000008a586b69 from memory into f5
li x3, 0x824b5968 # load x3 with 32 MSBs 0x00000000824b5968
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000824b5968
sw x3, 0(x2) # store x3 (0x824b5968) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000824b5968 from memory into f7
fadd.d f10, f5, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x10, 0x93e434e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e763a7e # load x3 with 32 MSBs 0x000000009e763a7e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e763a7e
sw x3, 0(x2) # store x3 (0x9e763a7e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009e763a7e from memory into f30
li x3, 0x1ed4791f # load x3 with 32 MSBs 0x000000001ed4791f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ed4791f
sw x3, 0(x2) # store x3 (0x1ed4791f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001ed4791f from memory into f8
fadd.d f10, f30, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x14, 0xb9454f9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1b22d32 # load x3 with 32 MSBs 0x00000000c1b22d32
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1b22d32
sw x3, 0(x2) # store x3 (0xc1b22d32) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c1b22d32 from memory into f15
li x3, 0x24f07461 # load x3 with 32 MSBs 0x0000000024f07461
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000024f07461
sw x3, 0(x2) # store x3 (0x24f07461) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000024f07461 from memory into f9
fadd.d f14, f15, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x14, 0xae5e8e71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a0f2f67 # load x3 with 32 MSBs 0x000000000a0f2f67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a0f2f67
sw x3, 0(x2) # store x3 (0x0a0f2f67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000000a0f2f67 from memory into f22
li x3, 0x4ef98262 # load x3 with 32 MSBs 0x000000004ef98262
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ef98262
sw x3, 0(x2) # store x3 (0x4ef98262) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000004ef98262 from memory into f10
fadd.d f14, f22, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x30, 0xa1dd4ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc8297a23 # load x3 with 32 MSBs 0x00000000c8297a23
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c8297a23
sw x3, 0(x2) # store x3 (0xc8297a23) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000c8297a23 from memory into f7
li x3, 0xb5076f46 # load x3 with 32 MSBs 0x00000000b5076f46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b5076f46
sw x3, 0(x2) # store x3 (0xb5076f46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000b5076f46 from memory into f11
fadd.d f30, f7, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x15, 0xb0005c9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa4625b4 # load x3 with 32 MSBs 0x00000000aa4625b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa4625b4
sw x3, 0(x2) # store x3 (0xaa4625b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000aa4625b4 from memory into f31
li x3, 0x2aabd443 # load x3 with 32 MSBs 0x000000002aabd443
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002aabd443
sw x3, 0(x2) # store x3 (0x2aabd443) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000002aabd443 from memory into f12
fadd.d f15, f31, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x20, 0xfb4e384b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d5e5e4d # load x3 with 32 MSBs 0x000000009d5e5e4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d5e5e4d
sw x3, 0(x2) # store x3 (0x9d5e5e4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009d5e5e4d from memory into f14
li x3, 0xfdcc8258 # load x3 with 32 MSBs 0x00000000fdcc8258
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fdcc8258
sw x3, 0(x2) # store x3 (0xfdcc8258) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000fdcc8258 from memory into f13
fadd.d f20, f14, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x3, 0x6b0a7978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fe1c35e # load x3 with 32 MSBs 0x000000003fe1c35e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003fe1c35e
sw x3, 0(x2) # store x3 (0x3fe1c35e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000003fe1c35e from memory into f11
li x3, 0xa4c268d3 # load x3 with 32 MSBs 0x00000000a4c268d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a4c268d3
sw x3, 0(x2) # store x3 (0xa4c268d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a4c268d3 from memory into f14
fadd.d f3, f11, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x31, 0xa73136e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7259385b # load x3 with 32 MSBs 0x000000007259385b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007259385b
sw x3, 0(x2) # store x3 (0x7259385b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007259385b from memory into f11
li x3, 0x06c83dd7 # load x3 with 32 MSBs 0x0000000006c83dd7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006c83dd7
sw x3, 0(x2) # store x3 (0x06c83dd7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000006c83dd7 from memory into f15
fadd.d f31, f11, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x4, 0x5aaeb793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a2c3bfc # load x3 with 32 MSBs 0x000000003a2c3bfc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a2c3bfc
sw x3, 0(x2) # store x3 (0x3a2c3bfc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000003a2c3bfc from memory into f8
li x3, 0x49817793 # load x3 with 32 MSBs 0x0000000049817793
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049817793
sw x3, 0(x2) # store x3 (0x49817793) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000049817793 from memory into f16
fadd.d f4, f8, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x27, 0x8baec2af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a72fccc # load x3 with 32 MSBs 0x000000005a72fccc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a72fccc
sw x3, 0(x2) # store x3 (0x5a72fccc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000005a72fccc from memory into f21
li x3, 0x34d93abe # load x3 with 32 MSBs 0x0000000034d93abe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000034d93abe
sw x3, 0(x2) # store x3 (0x34d93abe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000034d93abe from memory into f17
fadd.d f27, f21, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x19, 0x1147f5a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb468bf73 # load x3 with 32 MSBs 0x00000000b468bf73
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b468bf73
sw x3, 0(x2) # store x3 (0xb468bf73) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000b468bf73 from memory into f1
li x3, 0x0e3f52fb # load x3 with 32 MSBs 0x000000000e3f52fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000e3f52fb
sw x3, 0(x2) # store x3 (0x0e3f52fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000000e3f52fb from memory into f18
fadd.d f19, f1, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x4, 0xe6783608 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d1a4467 # load x3 with 32 MSBs 0x000000007d1a4467
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d1a4467
sw x3, 0(x2) # store x3 (0x7d1a4467) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007d1a4467 from memory into f25
li x3, 0x275115e7 # load x3 with 32 MSBs 0x00000000275115e7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000275115e7
sw x3, 0(x2) # store x3 (0x275115e7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000275115e7 from memory into f19
fadd.d f4, f25, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x11, 0x12453862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec6f03b5 # load x3 with 32 MSBs 0x00000000ec6f03b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ec6f03b5
sw x3, 0(x2) # store x3 (0xec6f03b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ec6f03b5 from memory into f17
li x3, 0x6b2983f7 # load x3 with 32 MSBs 0x000000006b2983f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b2983f7
sw x3, 0(x2) # store x3 (0x6b2983f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006b2983f7 from memory into f20
fadd.d f11, f17, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x14, 0xda02c432 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b55bff0 # load x3 with 32 MSBs 0x000000006b55bff0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006b55bff0
sw x3, 0(x2) # store x3 (0x6b55bff0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000006b55bff0 from memory into f24
li x3, 0x5721da74 # load x3 with 32 MSBs 0x000000005721da74
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005721da74
sw x3, 0(x2) # store x3 (0x5721da74) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000005721da74 from memory into f21
fadd.d f14, f24, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x22, 0x7ac38590 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea16c973 # load x3 with 32 MSBs 0x00000000ea16c973
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea16c973
sw x3, 0(x2) # store x3 (0xea16c973) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000ea16c973 from memory into f18
li x3, 0x2c2a62d9 # load x3 with 32 MSBs 0x000000002c2a62d9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c2a62d9
sw x3, 0(x2) # store x3 (0x2c2a62d9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000002c2a62d9 from memory into f22
fadd.d f22, f18, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x29, 0x8e025503 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03138cb5 # load x3 with 32 MSBs 0x0000000003138cb5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000003138cb5
sw x3, 0(x2) # store x3 (0x03138cb5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000003138cb5 from memory into f13
li x3, 0xaa84f086 # load x3 with 32 MSBs 0x00000000aa84f086
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aa84f086
sw x3, 0(x2) # store x3 (0xaa84f086) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000aa84f086 from memory into f23
fadd.d f29, f13, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x2, 0xff523fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc72f2673 # load x3 with 32 MSBs 0x00000000c72f2673
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c72f2673
sw x3, 0(x2) # store x3 (0xc72f2673) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c72f2673 from memory into f6
li x3, 0x81f5327b # load x3 with 32 MSBs 0x0000000081f5327b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081f5327b
sw x3, 0(x2) # store x3 (0x81f5327b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000081f5327b from memory into f24
fadd.d f2, f6, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x4, 0x4a11c832 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cc78d0a # load x3 with 32 MSBs 0x000000003cc78d0a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003cc78d0a
sw x3, 0(x2) # store x3 (0x3cc78d0a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000003cc78d0a from memory into f30
li x3, 0x7d75fb54 # load x3 with 32 MSBs 0x000000007d75fb54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d75fb54
sw x3, 0(x2) # store x3 (0x7d75fb54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007d75fb54 from memory into f25
fadd.d f4, f30, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x15, 0x92e4822d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa8a93f80 # load x3 with 32 MSBs 0x00000000a8a93f80
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8a93f80
sw x3, 0(x2) # store x3 (0xa8a93f80) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000a8a93f80 from memory into f9
li x3, 0x38eded25 # load x3 with 32 MSBs 0x0000000038eded25
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000038eded25
sw x3, 0(x2) # store x3 (0x38eded25) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000038eded25 from memory into f26
fadd.d f15, f9, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x12, 0xa909b52e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1cf42eac # load x3 with 32 MSBs 0x000000001cf42eac
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cf42eac
sw x3, 0(x2) # store x3 (0x1cf42eac) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000001cf42eac from memory into f5
li x3, 0xc1a0267a # load x3 with 32 MSBs 0x00000000c1a0267a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c1a0267a
sw x3, 0(x2) # store x3 (0xc1a0267a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000c1a0267a from memory into f27
fadd.d f12, f5, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x18, 0xd55359f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1cef9c03 # load x3 with 32 MSBs 0x000000001cef9c03
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001cef9c03
sw x3, 0(x2) # store x3 (0x1cef9c03) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001cef9c03 from memory into f13
li x3, 0xca01a56e # load x3 with 32 MSBs 0x00000000ca01a56e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ca01a56e
sw x3, 0(x2) # store x3 (0xca01a56e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000ca01a56e from memory into f28
fadd.d f18, f13, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x12, 0x1b51ff48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40a0b535 # load x3 with 32 MSBs 0x0000000040a0b535
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040a0b535
sw x3, 0(x2) # store x3 (0x40a0b535) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000040a0b535 from memory into f27
li x3, 0x18560913 # load x3 with 32 MSBs 0x0000000018560913
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018560913
sw x3, 0(x2) # store x3 (0x18560913) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000018560913 from memory into f29
fadd.d f12, f27, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x5, 0x55bf865a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22806dd9 # load x3 with 32 MSBs 0x0000000022806dd9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022806dd9
sw x3, 0(x2) # store x3 (0x22806dd9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000022806dd9 from memory into f28
li x3, 0xf2b6b52a # load x3 with 32 MSBs 0x00000000f2b6b52a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2b6b52a
sw x3, 0(x2) # store x3 (0xf2b6b52a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000f2b6b52a from memory into f30
fadd.d f5, f28, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x9, 0xefb6bbff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0b693a92 # load x3 with 32 MSBs 0x000000000b693a92
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000b693a92
sw x3, 0(x2) # store x3 (0x0b693a92) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000b693a92 from memory into f25
li x3, 0x800d676e # load x3 with 32 MSBs 0x00000000800d676e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000800d676e
sw x3, 0(x2) # store x3 (0x800d676e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000800d676e from memory into f31
fadd.d f9, f25, f31 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
