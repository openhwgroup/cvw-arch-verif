///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/D//WALLY-COV-fdiv.d.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.854602
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fdiv.d f2, f5, f18 # perform first operation
fdiv.d f24, f2, f20 # perform second operation

# Testcase cmp_gpr_hazard raw test
fdiv.d f8, f26, f16 # perform first operation
fdiv.d f20, f9, f8 # perform second operation

# Testcase cmp_gpr_hazard waw test
fdiv.d f2, f10, f29 # perform first operation
fdiv.d f2, f7, f26 # perform second operation

# Testcase cmp_gpr_hazard waw test
fdiv.d f18, f13, f7 # perform first operation
fdiv.d f18, f3, f19 # perform second operation

# Testcase cmp_gpr_hazard war test
fdiv.d f26, f12, f15 # perform first operation
fdiv.d f12, f22, f12 # perform second operation

# Testcase cmp_gpr_hazard war test
fdiv.d f30, f4, f29 # perform first operation
fdiv.d f29, f9, f6 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xc4be3c7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x978276c3 # load x3 with 32 MSBs 0x00000000978276c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000978276c3
sw x3, 0(x2) # store x3 (0x978276c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000978276c3 from memory into f0
li x3, 0xf75485d4 # load x3 with 32 MSBs 0x00000000f75485d4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f75485d4
sw x3, 0(x2) # store x3 (0xf75485d4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f75485d4 from memory into f11
fdiv.d f0, f0, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x5828f16f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95a0cf66 # load x3 with 32 MSBs 0x0000000095a0cf66
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095a0cf66
sw x3, 0(x2) # store x3 (0x95a0cf66) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000095a0cf66 from memory into f1
li x3, 0x2d14ed5b # load x3 with 32 MSBs 0x000000002d14ed5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d14ed5b
sw x3, 0(x2) # store x3 (0x2d14ed5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002d14ed5b from memory into f5
fdiv.d f1, f1, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x88d0f98b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf805ebfe # load x3 with 32 MSBs 0x00000000f805ebfe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f805ebfe
sw x3, 0(x2) # store x3 (0xf805ebfe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000f805ebfe from memory into f2
li x3, 0xd045590f # load x3 with 32 MSBs 0x00000000d045590f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d045590f
sw x3, 0(x2) # store x3 (0xd045590f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d045590f from memory into f25
fdiv.d f2, f2, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x25c2a4d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb405fe0c # load x3 with 32 MSBs 0x00000000b405fe0c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b405fe0c
sw x3, 0(x2) # store x3 (0xb405fe0c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b405fe0c from memory into f3
li x3, 0x64ccb67d # load x3 with 32 MSBs 0x0000000064ccb67d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000064ccb67d
sw x3, 0(x2) # store x3 (0x64ccb67d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000064ccb67d from memory into f2
fdiv.d f3, f3, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x09f20703 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde475088 # load x3 with 32 MSBs 0x00000000de475088
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de475088
sw x3, 0(x2) # store x3 (0xde475088) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000de475088 from memory into f4
li x3, 0x8c3f33fa # load x3 with 32 MSBs 0x000000008c3f33fa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c3f33fa
sw x3, 0(x2) # store x3 (0x8c3f33fa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008c3f33fa from memory into f16
fdiv.d f4, f4, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0xab071f8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x147b33f7 # load x3 with 32 MSBs 0x00000000147b33f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000147b33f7
sw x3, 0(x2) # store x3 (0x147b33f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000147b33f7 from memory into f5
li x3, 0x7d1e84d1 # load x3 with 32 MSBs 0x000000007d1e84d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007d1e84d1
sw x3, 0(x2) # store x3 (0x7d1e84d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000007d1e84d1 from memory into f4
fdiv.d f5, f5, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xf9f4ead4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7cae2255 # load x3 with 32 MSBs 0x000000007cae2255
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cae2255
sw x3, 0(x2) # store x3 (0x7cae2255) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007cae2255 from memory into f6
li x3, 0x05075e87 # load x3 with 32 MSBs 0x0000000005075e87
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000005075e87
sw x3, 0(x2) # store x3 (0x05075e87) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000005075e87 from memory into f26
fdiv.d f6, f6, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x4c6fec4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ed59af7 # load x3 with 32 MSBs 0x000000006ed59af7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ed59af7
sw x3, 0(x2) # store x3 (0x6ed59af7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000006ed59af7 from memory into f7
li x3, 0x9ec4899f # load x3 with 32 MSBs 0x000000009ec4899f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009ec4899f
sw x3, 0(x2) # store x3 (0x9ec4899f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009ec4899f from memory into f5
fdiv.d f7, f7, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x2a959564 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99248340 # load x3 with 32 MSBs 0x0000000099248340
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099248340
sw x3, 0(x2) # store x3 (0x99248340) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000099248340 from memory into f8
li x3, 0x7cdbb31a # load x3 with 32 MSBs 0x000000007cdbb31a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cdbb31a
sw x3, 0(x2) # store x3 (0x7cdbb31a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000007cdbb31a from memory into f3
fdiv.d f8, f8, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x00fb4a71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb630d46 # load x3 with 32 MSBs 0x00000000cb630d46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cb630d46
sw x3, 0(x2) # store x3 (0xcb630d46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000cb630d46 from memory into f9
li x3, 0x29fbb975 # load x3 with 32 MSBs 0x0000000029fbb975
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029fbb975
sw x3, 0(x2) # store x3 (0x29fbb975) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000029fbb975 from memory into f15
fdiv.d f9, f9, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x1bcfb65c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42020876 # load x3 with 32 MSBs 0x0000000042020876
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042020876
sw x3, 0(x2) # store x3 (0x42020876) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000042020876 from memory into f10
li x3, 0xc2c66e3c # load x3 with 32 MSBs 0x00000000c2c66e3c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c2c66e3c
sw x3, 0(x2) # store x3 (0xc2c66e3c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c2c66e3c from memory into f25
fdiv.d f10, f10, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x93abf627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x081bfde7 # load x3 with 32 MSBs 0x00000000081bfde7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000081bfde7
sw x3, 0(x2) # store x3 (0x081bfde7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000081bfde7 from memory into f11
li x3, 0x4367d7d7 # load x3 with 32 MSBs 0x000000004367d7d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004367d7d7
sw x3, 0(x2) # store x3 (0x4367d7d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004367d7d7 from memory into f24
fdiv.d f11, f11, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x68b20835 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8a8309f # load x3 with 32 MSBs 0x00000000f8a8309f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f8a8309f
sw x3, 0(x2) # store x3 (0xf8a8309f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000f8a8309f from memory into f12
li x3, 0x1b943580 # load x3 with 32 MSBs 0x000000001b943580
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001b943580
sw x3, 0(x2) # store x3 (0x1b943580) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000001b943580 from memory into f16
fdiv.d f12, f12, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0xd1dfd0c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5589b6a8 # load x3 with 32 MSBs 0x000000005589b6a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005589b6a8
sw x3, 0(x2) # store x3 (0x5589b6a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000005589b6a8 from memory into f13
li x3, 0x99ff1ced # load x3 with 32 MSBs 0x0000000099ff1ced
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000099ff1ced
sw x3, 0(x2) # store x3 (0x99ff1ced) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000099ff1ced from memory into f2
fdiv.d f13, f13, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0xdb783696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf517e5ff # load x3 with 32 MSBs 0x00000000f517e5ff
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f517e5ff
sw x3, 0(x2) # store x3 (0xf517e5ff) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f517e5ff from memory into f14
li x3, 0x39d9f020 # load x3 with 32 MSBs 0x0000000039d9f020
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039d9f020
sw x3, 0(x2) # store x3 (0x39d9f020) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000039d9f020 from memory into f21
fdiv.d f14, f14, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x7324b59f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x65283f78 # load x3 with 32 MSBs 0x0000000065283f78
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065283f78
sw x3, 0(x2) # store x3 (0x65283f78) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000065283f78 from memory into f15
li x3, 0x258a2ab7 # load x3 with 32 MSBs 0x00000000258a2ab7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000258a2ab7
sw x3, 0(x2) # store x3 (0x258a2ab7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000258a2ab7 from memory into f6
fdiv.d f15, f15, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xd309c4be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d866bbc # load x3 with 32 MSBs 0x000000003d866bbc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d866bbc
sw x3, 0(x2) # store x3 (0x3d866bbc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000003d866bbc from memory into f16
li x3, 0xebc7f4b7 # load x3 with 32 MSBs 0x00000000ebc7f4b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebc7f4b7
sw x3, 0(x2) # store x3 (0xebc7f4b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ebc7f4b7 from memory into f17
fdiv.d f16, f16, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x600130b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x572243b7 # load x3 with 32 MSBs 0x00000000572243b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000572243b7
sw x3, 0(x2) # store x3 (0x572243b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000572243b7 from memory into f17
li x3, 0x7e53122e # load x3 with 32 MSBs 0x000000007e53122e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007e53122e
sw x3, 0(x2) # store x3 (0x7e53122e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000007e53122e from memory into f11
fdiv.d f17, f17, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x1019c078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c4550ee # load x3 with 32 MSBs 0x000000006c4550ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c4550ee
sw x3, 0(x2) # store x3 (0x6c4550ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006c4550ee from memory into f18
li x3, 0xabbc56a3 # load x3 with 32 MSBs 0x00000000abbc56a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000abbc56a3
sw x3, 0(x2) # store x3 (0xabbc56a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000abbc56a3 from memory into f31
fdiv.d f18, f18, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x71773545 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52760d38 # load x3 with 32 MSBs 0x0000000052760d38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052760d38
sw x3, 0(x2) # store x3 (0x52760d38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000052760d38 from memory into f19
li x3, 0x68bf3c50 # load x3 with 32 MSBs 0x0000000068bf3c50
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000068bf3c50
sw x3, 0(x2) # store x3 (0x68bf3c50) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000068bf3c50 from memory into f9
fdiv.d f19, f19, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0x801b97c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d574ad1 # load x3 with 32 MSBs 0x000000004d574ad1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d574ad1
sw x3, 0(x2) # store x3 (0x4d574ad1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004d574ad1 from memory into f20
li x3, 0xf26c37ca # load x3 with 32 MSBs 0x00000000f26c37ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f26c37ca
sw x3, 0(x2) # store x3 (0xf26c37ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000f26c37ca from memory into f24
fdiv.d f20, f20, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x4966fae0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11ec6451 # load x3 with 32 MSBs 0x0000000011ec6451
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011ec6451
sw x3, 0(x2) # store x3 (0x11ec6451) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000011ec6451 from memory into f21
li x3, 0xf149c80a # load x3 with 32 MSBs 0x00000000f149c80a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f149c80a
sw x3, 0(x2) # store x3 (0xf149c80a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f149c80a from memory into f29
fdiv.d f21, f21, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0x9cb0ecdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa575693b # load x3 with 32 MSBs 0x00000000a575693b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a575693b
sw x3, 0(x2) # store x3 (0xa575693b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a575693b from memory into f22
li x3, 0xefcd8cef # load x3 with 32 MSBs 0x00000000efcd8cef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efcd8cef
sw x3, 0(x2) # store x3 (0xefcd8cef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000efcd8cef from memory into f25
fdiv.d f22, f22, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xee7c34e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x712356d0 # load x3 with 32 MSBs 0x00000000712356d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000712356d0
sw x3, 0(x2) # store x3 (0x712356d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000712356d0 from memory into f23
li x3, 0x97b693de # load x3 with 32 MSBs 0x0000000097b693de
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000097b693de
sw x3, 0(x2) # store x3 (0x97b693de) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000097b693de from memory into f20
fdiv.d f23, f23, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x149b0235 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28bf3108 # load x3 with 32 MSBs 0x0000000028bf3108
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028bf3108
sw x3, 0(x2) # store x3 (0x28bf3108) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000028bf3108 from memory into f24
li x3, 0x5032e118 # load x3 with 32 MSBs 0x000000005032e118
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005032e118
sw x3, 0(x2) # store x3 (0x5032e118) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005032e118 from memory into f7
fdiv.d f24, f24, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xf1a1e12a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42829f36 # load x3 with 32 MSBs 0x0000000042829f36
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000042829f36
sw x3, 0(x2) # store x3 (0x42829f36) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000042829f36 from memory into f25
li x3, 0xc0281912 # load x3 with 32 MSBs 0x00000000c0281912
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c0281912
sw x3, 0(x2) # store x3 (0xc0281912) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000c0281912 from memory into f12
fdiv.d f25, f25, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0x5ba9f76a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6417479 # load x3 with 32 MSBs 0x00000000a6417479
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a6417479
sw x3, 0(x2) # store x3 (0xa6417479) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a6417479 from memory into f26
li x3, 0x9580075f # load x3 with 32 MSBs 0x000000009580075f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009580075f
sw x3, 0(x2) # store x3 (0x9580075f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009580075f from memory into f30
fdiv.d f26, f26, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x141cf106 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28850653 # load x3 with 32 MSBs 0x0000000028850653
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028850653
sw x3, 0(x2) # store x3 (0x28850653) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000028850653 from memory into f27
li x3, 0x4c90e616 # load x3 with 32 MSBs 0x000000004c90e616
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004c90e616
sw x3, 0(x2) # store x3 (0x4c90e616) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004c90e616 from memory into f29
fdiv.d f27, f27, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xadff22a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44794206 # load x3 with 32 MSBs 0x0000000044794206
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044794206
sw x3, 0(x2) # store x3 (0x44794206) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000044794206 from memory into f28
li x3, 0x85eb4c55 # load x3 with 32 MSBs 0x0000000085eb4c55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000085eb4c55
sw x3, 0(x2) # store x3 (0x85eb4c55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000085eb4c55 from memory into f29
fdiv.d f28, f28, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0x4e326437 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe48e31d3 # load x3 with 32 MSBs 0x00000000e48e31d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e48e31d3
sw x3, 0(x2) # store x3 (0xe48e31d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e48e31d3 from memory into f29
li x3, 0x02abc6c6 # load x3 with 32 MSBs 0x0000000002abc6c6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000002abc6c6
sw x3, 0(x2) # store x3 (0x02abc6c6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000002abc6c6 from memory into f29
fdiv.d f29, f29, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x9eac6ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xafd335bf # load x3 with 32 MSBs 0x00000000afd335bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000afd335bf
sw x3, 0(x2) # store x3 (0xafd335bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000afd335bf from memory into f30
li x3, 0x52e8e4e4 # load x3 with 32 MSBs 0x0000000052e8e4e4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052e8e4e4
sw x3, 0(x2) # store x3 (0x52e8e4e4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000052e8e4e4 from memory into f11
fdiv.d f30, f30, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x3e83e224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x74581629 # load x3 with 32 MSBs 0x0000000074581629
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074581629
sw x3, 0(x2) # store x3 (0x74581629) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000074581629 from memory into f31
li x3, 0x14181943 # load x3 with 32 MSBs 0x0000000014181943
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014181943
sw x3, 0(x2) # store x3 (0x14181943) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000014181943 from memory into f13
fdiv.d f31, f31, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0xf91b3032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c6f106e # load x3 with 32 MSBs 0x000000006c6f106e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006c6f106e
sw x3, 0(x2) # store x3 (0x6c6f106e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006c6f106e from memory into f16
li x3, 0x1839a4ea # load x3 with 32 MSBs 0x000000001839a4ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001839a4ea
sw x3, 0(x2) # store x3 (0x1839a4ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000001839a4ea from memory into f0
fdiv.d f0, f16, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x6132481a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c5a9a46 # load x3 with 32 MSBs 0x000000002c5a9a46
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c5a9a46
sw x3, 0(x2) # store x3 (0x2c5a9a46) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002c5a9a46 from memory into f25
li x3, 0xf57325b3 # load x3 with 32 MSBs 0x00000000f57325b3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f57325b3
sw x3, 0(x2) # store x3 (0xf57325b3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f57325b3 from memory into f1
fdiv.d f1, f25, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0xe1159bf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x61ec1274 # load x3 with 32 MSBs 0x0000000061ec1274
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061ec1274
sw x3, 0(x2) # store x3 (0x61ec1274) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000061ec1274 from memory into f12
li x3, 0x1d74a33f # load x3 with 32 MSBs 0x000000001d74a33f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d74a33f
sw x3, 0(x2) # store x3 (0x1d74a33f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000001d74a33f from memory into f2
fdiv.d f2, f12, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x46677744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x28691283 # load x3 with 32 MSBs 0x0000000028691283
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000028691283
sw x3, 0(x2) # store x3 (0x28691283) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000028691283 from memory into f21
li x3, 0xa1a99b69 # load x3 with 32 MSBs 0x00000000a1a99b69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a1a99b69
sw x3, 0(x2) # store x3 (0xa1a99b69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000a1a99b69 from memory into f3
fdiv.d f3, f21, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x9c1ce740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x734df61f # load x3 with 32 MSBs 0x00000000734df61f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000734df61f
sw x3, 0(x2) # store x3 (0x734df61f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000734df61f from memory into f17
li x3, 0x3f5bbdf2 # load x3 with 32 MSBs 0x000000003f5bbdf2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f5bbdf2
sw x3, 0(x2) # store x3 (0x3f5bbdf2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000003f5bbdf2 from memory into f4
fdiv.d f4, f17, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xc15104c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4558fc0e # load x3 with 32 MSBs 0x000000004558fc0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004558fc0e
sw x3, 0(x2) # store x3 (0x4558fc0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004558fc0e from memory into f28
li x3, 0x86f2d817 # load x3 with 32 MSBs 0x0000000086f2d817
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000086f2d817
sw x3, 0(x2) # store x3 (0x86f2d817) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000086f2d817 from memory into f5
fdiv.d f5, f28, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x1eb0e2b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d004578 # load x3 with 32 MSBs 0x000000009d004578
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009d004578
sw x3, 0(x2) # store x3 (0x9d004578) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000009d004578 from memory into f25
li x3, 0xe6a14939 # load x3 with 32 MSBs 0x00000000e6a14939
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6a14939
sw x3, 0(x2) # store x3 (0xe6a14939) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e6a14939 from memory into f6
fdiv.d f6, f25, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0xbc8ab069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f2b1041 # load x3 with 32 MSBs 0x000000007f2b1041
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f2b1041
sw x3, 0(x2) # store x3 (0x7f2b1041) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007f2b1041 from memory into f7
li x3, 0x3633f5b1 # load x3 with 32 MSBs 0x000000003633f5b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003633f5b1
sw x3, 0(x2) # store x3 (0x3633f5b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003633f5b1 from memory into f7
fdiv.d f7, f7, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xbcfc9b74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea857f67 # load x3 with 32 MSBs 0x00000000ea857f67
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea857f67
sw x3, 0(x2) # store x3 (0xea857f67) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000ea857f67 from memory into f21
li x3, 0x1ddf11f8 # load x3 with 32 MSBs 0x000000001ddf11f8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001ddf11f8
sw x3, 0(x2) # store x3 (0x1ddf11f8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001ddf11f8 from memory into f8
fdiv.d f8, f21, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x75261bf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x10370fbe # load x3 with 32 MSBs 0x0000000010370fbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010370fbe
sw x3, 0(x2) # store x3 (0x10370fbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000010370fbe from memory into f3
li x3, 0xc542f47c # load x3 with 32 MSBs 0x00000000c542f47c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c542f47c
sw x3, 0(x2) # store x3 (0xc542f47c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c542f47c from memory into f9
fdiv.d f9, f3, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x4d62fe46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f5b05cc # load x3 with 32 MSBs 0x000000001f5b05cc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001f5b05cc
sw x3, 0(x2) # store x3 (0x1f5b05cc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000001f5b05cc from memory into f4
li x3, 0x7f0646a1 # load x3 with 32 MSBs 0x000000007f0646a1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f0646a1
sw x3, 0(x2) # store x3 (0x7f0646a1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007f0646a1 from memory into f10
fdiv.d f10, f4, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x3c6b96d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06e86367 # load x3 with 32 MSBs 0x0000000006e86367
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000006e86367
sw x3, 0(x2) # store x3 (0x06e86367) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000006e86367 from memory into f28
li x3, 0xe0c101ea # load x3 with 32 MSBs 0x00000000e0c101ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0c101ea
sw x3, 0(x2) # store x3 (0xe0c101ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000e0c101ea from memory into f11
fdiv.d f11, f28, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0xb521d547 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd658c0d3 # load x3 with 32 MSBs 0x00000000d658c0d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d658c0d3
sw x3, 0(x2) # store x3 (0xd658c0d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d658c0d3 from memory into f31
li x3, 0x4451e5be # load x3 with 32 MSBs 0x000000004451e5be
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004451e5be
sw x3, 0(x2) # store x3 (0x4451e5be) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000004451e5be from memory into f12
fdiv.d f12, f31, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xd5719aff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0593b76 # load x3 with 32 MSBs 0x00000000f0593b76
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f0593b76
sw x3, 0(x2) # store x3 (0xf0593b76) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f0593b76 from memory into f3
li x3, 0xaf0a8245 # load x3 with 32 MSBs 0x00000000af0a8245
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000af0a8245
sw x3, 0(x2) # store x3 (0xaf0a8245) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000af0a8245 from memory into f13
fdiv.d f13, f3, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xd0cb042c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01b4f0ba # load x3 with 32 MSBs 0x0000000001b4f0ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000001b4f0ba
sw x3, 0(x2) # store x3 (0x01b4f0ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000001b4f0ba from memory into f14
li x3, 0x0a1513ef # load x3 with 32 MSBs 0x000000000a1513ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000a1513ef
sw x3, 0(x2) # store x3 (0x0a1513ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000000a1513ef from memory into f14
fdiv.d f14, f14, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0x49d572ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfcd9c0fc # load x3 with 32 MSBs 0x00000000fcd9c0fc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fcd9c0fc
sw x3, 0(x2) # store x3 (0xfcd9c0fc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fcd9c0fc from memory into f9
li x3, 0x8b3b46b8 # load x3 with 32 MSBs 0x000000008b3b46b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008b3b46b8
sw x3, 0(x2) # store x3 (0x8b3b46b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008b3b46b8 from memory into f15
fdiv.d f15, f9, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x60853786 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32af4e3a # load x3 with 32 MSBs 0x0000000032af4e3a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032af4e3a
sw x3, 0(x2) # store x3 (0x32af4e3a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000032af4e3a from memory into f23
li x3, 0x44a3ee4d # load x3 with 32 MSBs 0x0000000044a3ee4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000044a3ee4d
sw x3, 0(x2) # store x3 (0x44a3ee4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000044a3ee4d from memory into f16
fdiv.d f16, f23, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x3b966302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f77b680 # load x3 with 32 MSBs 0x000000006f77b680
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006f77b680
sw x3, 0(x2) # store x3 (0x6f77b680) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006f77b680 from memory into f29
li x3, 0xfa4aa91b # load x3 with 32 MSBs 0x00000000fa4aa91b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa4aa91b
sw x3, 0(x2) # store x3 (0xfa4aa91b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000fa4aa91b from memory into f17
fdiv.d f17, f29, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x487de254 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaeee80dd # load x3 with 32 MSBs 0x00000000aeee80dd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aeee80dd
sw x3, 0(x2) # store x3 (0xaeee80dd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000aeee80dd from memory into f14
li x3, 0xa7238a85 # load x3 with 32 MSBs 0x00000000a7238a85
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7238a85
sw x3, 0(x2) # store x3 (0xa7238a85) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a7238a85 from memory into f18
fdiv.d f18, f14, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x60be5516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3199f48 # load x3 with 32 MSBs 0x00000000a3199f48
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3199f48
sw x3, 0(x2) # store x3 (0xa3199f48) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000a3199f48 from memory into f24
li x3, 0x2c36d109 # load x3 with 32 MSBs 0x000000002c36d109
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002c36d109
sw x3, 0(x2) # store x3 (0x2c36d109) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002c36d109 from memory into f19
fdiv.d f19, f24, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x55218731 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd7769f6 # load x3 with 32 MSBs 0x00000000dd7769f6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd7769f6
sw x3, 0(x2) # store x3 (0xdd7769f6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000dd7769f6 from memory into f13
li x3, 0x4624d814 # load x3 with 32 MSBs 0x000000004624d814
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004624d814
sw x3, 0(x2) # store x3 (0x4624d814) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000004624d814 from memory into f20
fdiv.d f20, f13, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x60088121 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a2b5c44 # load x3 with 32 MSBs 0x000000006a2b5c44
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006a2b5c44
sw x3, 0(x2) # store x3 (0x6a2b5c44) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000006a2b5c44 from memory into f17
li x3, 0x7025ef31 # load x3 with 32 MSBs 0x000000007025ef31
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007025ef31
sw x3, 0(x2) # store x3 (0x7025ef31) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000007025ef31 from memory into f21
fdiv.d f21, f17, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x33cc8a3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x400408d5 # load x3 with 32 MSBs 0x00000000400408d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000400408d5
sw x3, 0(x2) # store x3 (0x400408d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000400408d5 from memory into f5
li x3, 0x52901420 # load x3 with 32 MSBs 0x0000000052901420
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000052901420
sw x3, 0(x2) # store x3 (0x52901420) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000052901420 from memory into f22
fdiv.d f22, f5, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0xc63a786c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5b62615d # load x3 with 32 MSBs 0x000000005b62615d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005b62615d
sw x3, 0(x2) # store x3 (0x5b62615d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005b62615d from memory into f26
li x3, 0xe9cd33c4 # load x3 with 32 MSBs 0x00000000e9cd33c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e9cd33c4
sw x3, 0(x2) # store x3 (0xe9cd33c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e9cd33c4 from memory into f23
fdiv.d f23, f26, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x1e5ddb55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa422f358 # load x3 with 32 MSBs 0x00000000a422f358
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a422f358
sw x3, 0(x2) # store x3 (0xa422f358) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a422f358 from memory into f23
li x3, 0xc3459ab1 # load x3 with 32 MSBs 0x00000000c3459ab1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3459ab1
sw x3, 0(x2) # store x3 (0xc3459ab1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c3459ab1 from memory into f24
fdiv.d f24, f23, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xd403ddd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73d474d5 # load x3 with 32 MSBs 0x0000000073d474d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073d474d5
sw x3, 0(x2) # store x3 (0x73d474d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000073d474d5 from memory into f30
li x3, 0x65237048 # load x3 with 32 MSBs 0x0000000065237048
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000065237048
sw x3, 0(x2) # store x3 (0x65237048) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000065237048 from memory into f25
fdiv.d f25, f30, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x3b3d7b0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf76c592 # load x3 with 32 MSBs 0x00000000df76c592
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df76c592
sw x3, 0(x2) # store x3 (0xdf76c592) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000df76c592 from memory into f6
li x3, 0x91b3224a # load x3 with 32 MSBs 0x0000000091b3224a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000091b3224a
sw x3, 0(x2) # store x3 (0x91b3224a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000091b3224a from memory into f26
fdiv.d f26, f6, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xf19b1239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4acdfae3 # load x3 with 32 MSBs 0x000000004acdfae3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004acdfae3
sw x3, 0(x2) # store x3 (0x4acdfae3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000004acdfae3 from memory into f30
li x3, 0x8c03eb4d # load x3 with 32 MSBs 0x000000008c03eb4d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008c03eb4d
sw x3, 0(x2) # store x3 (0x8c03eb4d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000008c03eb4d from memory into f27
fdiv.d f27, f30, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x76c692b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0364768f # load x3 with 32 MSBs 0x000000000364768f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000364768f
sw x3, 0(x2) # store x3 (0x0364768f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000000364768f from memory into f20
li x3, 0xa46a34f9 # load x3 with 32 MSBs 0x00000000a46a34f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a46a34f9
sw x3, 0(x2) # store x3 (0xa46a34f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a46a34f9 from memory into f28
fdiv.d f28, f20, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xc7b95107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x455a7aaa # load x3 with 32 MSBs 0x00000000455a7aaa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000455a7aaa
sw x3, 0(x2) # store x3 (0x455a7aaa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000455a7aaa from memory into f3
li x3, 0x45cb0783 # load x3 with 32 MSBs 0x0000000045cb0783
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000045cb0783
sw x3, 0(x2) # store x3 (0x45cb0783) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000045cb0783 from memory into f29
fdiv.d f29, f3, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x246edcbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3919394 # load x3 with 32 MSBs 0x00000000b3919394
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b3919394
sw x3, 0(x2) # store x3 (0xb3919394) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000b3919394 from memory into f7
li x3, 0x67ecd04d # load x3 with 32 MSBs 0x0000000067ecd04d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000067ecd04d
sw x3, 0(x2) # store x3 (0x67ecd04d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000067ecd04d from memory into f30
fdiv.d f30, f7, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0xf1fa728a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0eedea5a # load x3 with 32 MSBs 0x000000000eedea5a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000eedea5a
sw x3, 0(x2) # store x3 (0x0eedea5a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000000eedea5a from memory into f26
li x3, 0x4018beb6 # load x3 with 32 MSBs 0x000000004018beb6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004018beb6
sw x3, 0(x2) # store x3 (0x4018beb6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004018beb6 from memory into f31
fdiv.d f31, f26, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x24, 0x7d39e973 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x20effb75 # load x3 with 32 MSBs 0x0000000020effb75
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000020effb75
sw x3, 0(x2) # store x3 (0x20effb75) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000020effb75 from memory into f13
fdiv.d f24, f19, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
li x5, 0x2ee9f312 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
li x3, 0x08995936 # load x3 with 32 MSBs 0x0000000008995936
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000008995936
sw x3, 0(x2) # store x3 (0x08995936) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000008995936 from memory into f1
fdiv.d f5, f9, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
li x2, 0x8e4d3473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0xea3f7825 # load x3 with 32 MSBs 0x00000000ea3f7825
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea3f7825
sw x3, 0(x2) # store x3 (0xea3f7825) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000ea3f7825 from memory into f17
fdiv.d f2, f12, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
li x24, 0xce1eeb08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x17cd6cbb # load x3 with 32 MSBs 0x0000000017cd6cbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017cd6cbb
sw x3, 0(x2) # store x3 (0x17cd6cbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000017cd6cbb from memory into f2
fdiv.d f24, f9, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
li x30, 0x1905d25e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff8000000000000 from memory into f4
li x3, 0x50c8e70a # load x3 with 32 MSBs 0x0000000050c8e70a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000050c8e70a
sw x3, 0(x2) # store x3 (0x50c8e70a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000050c8e70a from memory into f29
fdiv.d f30, f4, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
li x27, 0x0c938f28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
li x3, 0xd0e20e84 # load x3 with 32 MSBs 0x00000000d0e20e84
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0e20e84
sw x3, 0(x2) # store x3 (0xd0e20e84) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d0e20e84 from memory into f4
fdiv.d f27, f16, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
li x10, 0xc6c6de03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x026f0e02 # load x3 with 32 MSBs 0x00000000026f0e02
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000026f0e02
sw x3, 0(x2) # store x3 (0x026f0e02) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000026f0e02 from memory into f9
fdiv.d f10, f16, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
li x15, 0x71c6ba2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x194c98d8 # load x3 with 32 MSBs 0x00000000194c98d8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000194c98d8
sw x3, 0(x2) # store x3 (0x194c98d8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000194c98d8 from memory into f11
fdiv.d f15, f2, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
li x20, 0xb812afd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
li x3, 0x7670e6fd # load x3 with 32 MSBs 0x000000007670e6fd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007670e6fd
sw x3, 0(x2) # store x3 (0x7670e6fd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007670e6fd from memory into f6
fdiv.d f20, f15, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
li x8, 0xa7da180a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0xde0aa4b7 # load x3 with 32 MSBs 0x00000000de0aa4b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000de0aa4b7
sw x3, 0(x2) # store x3 (0xde0aa4b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000de0aa4b7 from memory into f14
fdiv.d f8, f11, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
li x13, 0xaee0fc4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0x61661467 # load x3 with 32 MSBs 0x0000000061661467
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061661467
sw x3, 0(x2) # store x3 (0x61661467) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000061661467 from memory into f10
fdiv.d f13, f1, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
li x5, 0xa5e099c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0xf2f0b65c # load x3 with 32 MSBs 0x00000000f2f0b65c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2f0b65c
sw x3, 0(x2) # store x3 (0xf2f0b65c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f2f0b65c from memory into f19
fdiv.d f5, f31, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
li x15, 0x3b76ba17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0xf7d4fe98 # load x3 with 32 MSBs 0x00000000f7d4fe98
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f7d4fe98
sw x3, 0(x2) # store x3 (0xf7d4fe98) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000f7d4fe98 from memory into f23
fdiv.d f15, f3, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
li x30, 0x37a6ab64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
li x3, 0x18359d35 # load x3 with 32 MSBs 0x0000000018359d35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018359d35
sw x3, 0(x2) # store x3 (0x18359d35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000018359d35 from memory into f12
fdiv.d f30, f10, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
li x29, 0xc334f634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
li x3, 0x9b3ba55c # load x3 with 32 MSBs 0x000000009b3ba55c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009b3ba55c
sw x3, 0(x2) # store x3 (0x9b3ba55c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009b3ba55c from memory into f3
fdiv.d f29, f22, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
li x12, 0x3151471b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xfa468311 # load x3 with 32 MSBs 0x00000000fa468311
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa468311
sw x3, 0(x2) # store x3 (0xfa468311) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000fa468311 from memory into f16
fdiv.d f12, f3, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x20, 0xd4740043 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0xd47263ea # load x3 with 32 MSBs 0x00000000d47263ea
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d47263ea
sw x3, 0(x2) # store x3 (0xd47263ea) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d47263ea from memory into f12
fdiv.d f20, f19, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
li x24, 0xb1f42228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x4b0c2f6e # load x3 with 32 MSBs 0x000000004b0c2f6e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004b0c2f6e
sw x3, 0(x2) # store x3 (0x4b0c2f6e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004b0c2f6e from memory into f22
fdiv.d f24, f12, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
li x20, 0xabf0402a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
li x3, 0xfd4d81e6 # load x3 with 32 MSBs 0x00000000fd4d81e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd4d81e6
sw x3, 0(x2) # store x3 (0xfd4d81e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000fd4d81e6 from memory into f23
fdiv.d f20, f26, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
li x30, 0x08ef4ce2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0x624a4a18 # load x3 with 32 MSBs 0x00000000624a4a18
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000624a4a18
sw x3, 0(x2) # store x3 (0x624a4a18) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000624a4a18 from memory into f7
fdiv.d f30, f6, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
li x21, 0x13e25802 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x77a02010 # load x3 with 32 MSBs 0x0000000077a02010
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000077a02010
sw x3, 0(x2) # store x3 (0x77a02010) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000077a02010 from memory into f24
fdiv.d f21, f15, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
li x26, 0x8a7897db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0xe7537c17 # load x3 with 32 MSBs 0x00000000e7537c17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e7537c17
sw x3, 0(x2) # store x3 (0xe7537c17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000e7537c17 from memory into f16
fdiv.d f26, f23, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
li x12, 0xceb0ab4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
li x3, 0x3f27044c # load x3 with 32 MSBs 0x000000003f27044c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003f27044c
sw x3, 0(x2) # store x3 (0x3f27044c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003f27044c from memory into f18
fdiv.d f12, f29, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
li x11, 0x44e007ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
li x3, 0xedc0cbbd # load x3 with 32 MSBs 0x00000000edc0cbbd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000edc0cbbd
sw x3, 0(x2) # store x3 (0xedc0cbbd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000edc0cbbd from memory into f28
fdiv.d f11, f13, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
li x31, 0xc221bd47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
li x3, 0xcd2ee5b9 # load x3 with 32 MSBs 0x00000000cd2ee5b9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cd2ee5b9
sw x3, 0(x2) # store x3 (0xcd2ee5b9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000cd2ee5b9 from memory into f12
fdiv.d f31, f19, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
li x4, 0x31fdd863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0xeb16e272 # load x3 with 32 MSBs 0x00000000eb16e272
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb16e272
sw x3, 0(x2) # store x3 (0xeb16e272) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000eb16e272 from memory into f16
fdiv.d f4, f14, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x22, 0x7ba558d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40e4c9b7 # load x3 with 32 MSBs 0x0000000040e4c9b7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040e4c9b7
sw x3, 0(x2) # store x3 (0x40e4c9b7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000040e4c9b7 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fdiv.d f22, f11, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
li x11, 0x98b79f65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe950052c # load x3 with 32 MSBs 0x00000000e950052c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e950052c
sw x3, 0(x2) # store x3 (0xe950052c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e950052c from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fdiv.d f11, f5, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
li x19, 0xef5cc0c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2aa3d244 # load x3 with 32 MSBs 0x000000002aa3d244
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002aa3d244
sw x3, 0(x2) # store x3 (0x2aa3d244) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000002aa3d244 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fdiv.d f19, f30, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
li x8, 0xb5d1fcdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa8c79c55 # load x3 with 32 MSBs 0x00000000a8c79c55
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a8c79c55
sw x3, 0(x2) # store x3 (0xa8c79c55) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000a8c79c55 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
fdiv.d f8, f16, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
li x12, 0x34984baa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4eaf729 # load x3 with 32 MSBs 0x00000000f4eaf729
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f4eaf729
sw x3, 0(x2) # store x3 (0xf4eaf729) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f4eaf729 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fdiv.d f12, f14, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
li x27, 0x2df4b94e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf95cc4f1 # load x3 with 32 MSBs 0x00000000f95cc4f1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f95cc4f1
sw x3, 0(x2) # store x3 (0xf95cc4f1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f95cc4f1 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
fdiv.d f27, f3, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
li x13, 0x85cbf6b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa5fe92c4 # load x3 with 32 MSBs 0x00000000a5fe92c4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a5fe92c4
sw x3, 0(x2) # store x3 (0xa5fe92c4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a5fe92c4 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
fdiv.d f13, f28, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
li x20, 0x6b7e188e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9a49a35 # load x3 with 32 MSBs 0x00000000c9a49a35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c9a49a35
sw x3, 0(x2) # store x3 (0xc9a49a35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c9a49a35 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fdiv.d f20, f22, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
li x9, 0xccb53b02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2cde5ebf # load x3 with 32 MSBs 0x000000002cde5ebf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002cde5ebf
sw x3, 0(x2) # store x3 (0x2cde5ebf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000002cde5ebf from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fdiv.d f9, f6, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
li x20, 0x442b2b75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff0ea955 # load x3 with 32 MSBs 0x00000000ff0ea955
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ff0ea955
sw x3, 0(x2) # store x3 (0xff0ea955) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ff0ea955 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fdiv.d f20, f14, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
li x9, 0xf0cbb2f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed4f3904 # load x3 with 32 MSBs 0x00000000ed4f3904
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed4f3904
sw x3, 0(x2) # store x3 (0xed4f3904) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ed4f3904 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
fdiv.d f9, f1, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
li x31, 0xc183da1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc344b7ca # load x3 with 32 MSBs 0x00000000c344b7ca
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c344b7ca
sw x3, 0(x2) # store x3 (0xc344b7ca) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000c344b7ca from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fdiv.d f31, f14, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
li x7, 0xfe754b14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc3f26dcc # load x3 with 32 MSBs 0x00000000c3f26dcc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3f26dcc
sw x3, 0(x2) # store x3 (0xc3f26dcc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c3f26dcc from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fdiv.d f7, f24, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
li x4, 0xc98d2455 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc00c1e17 # load x3 with 32 MSBs 0x00000000c00c1e17
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c00c1e17
sw x3, 0(x2) # store x3 (0xc00c1e17) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c00c1e17 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fdiv.d f4, f6, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
li x8, 0x42462b93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62ed1787 # load x3 with 32 MSBs 0x0000000062ed1787
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062ed1787
sw x3, 0(x2) # store x3 (0x62ed1787) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000062ed1787 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fdiv.d f8, f26, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
li x2, 0x039d9062 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb358589 # load x3 with 32 MSBs 0x00000000fb358589
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb358589
sw x3, 0(x2) # store x3 (0xfb358589) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000fb358589 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fdiv.d f2, f4, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x24, 0x936bf857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9b0a956 # load x3 with 32 MSBs 0x00000000a9b0a956
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a9b0a956
sw x3, 0(x2) # store x3 (0xa9b0a956) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000a9b0a956 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fdiv.d f24, f23, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
li x14, 0x3c1c74b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29b37422 # load x3 with 32 MSBs 0x0000000029b37422
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000029b37422
sw x3, 0(x2) # store x3 (0x29b37422) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000029b37422 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fdiv.d f14, f25, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
li x16, 0xd366ce01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x260f4950 # load x3 with 32 MSBs 0x00000000260f4950
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000260f4950
sw x3, 0(x2) # store x3 (0x260f4950) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000260f4950 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fdiv.d f16, f8, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
li x11, 0x96c2db0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11a37365 # load x3 with 32 MSBs 0x0000000011a37365
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000011a37365
sw x3, 0(x2) # store x3 (0x11a37365) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000011a37365 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fdiv.d f11, f2, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
li x24, 0x121c9c96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc32eb0b4 # load x3 with 32 MSBs 0x00000000c32eb0b4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c32eb0b4
sw x3, 0(x2) # store x3 (0xc32eb0b4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c32eb0b4 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fdiv.d f24, f28, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
li x4, 0x66f7c82d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14bd3198 # load x3 with 32 MSBs 0x0000000014bd3198
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000014bd3198
sw x3, 0(x2) # store x3 (0x14bd3198) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000014bd3198 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fdiv.d f4, f1, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
li x8, 0x403a795e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a2211d7 # load x3 with 32 MSBs 0x000000001a2211d7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001a2211d7
sw x3, 0(x2) # store x3 (0x1a2211d7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001a2211d7 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fdiv.d f8, f13, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
li x25, 0xe9203f3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7626ced6 # load x3 with 32 MSBs 0x000000007626ced6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007626ced6
sw x3, 0(x2) # store x3 (0x7626ced6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007626ced6 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fdiv.d f25, f13, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
li x11, 0x1e0be9c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fdaa028 # load x3 with 32 MSBs 0x000000007fdaa028
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fdaa028
sw x3, 0(x2) # store x3 (0x7fdaa028) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000007fdaa028 from memory into f23
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fdiv.d f11, f23, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
li x9, 0xfe974895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e9de5e6 # load x3 with 32 MSBs 0x000000005e9de5e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005e9de5e6
sw x3, 0(x2) # store x3 (0x5e9de5e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000005e9de5e6 from memory into f20
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fdiv.d f9, f20, f10 # perform operation

# Testcase cp_frm
li x8, 0xa9d4c0ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x196e5174 # load x3 with 32 MSBs 0x00000000196e5174
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000196e5174
sw x3, 0(x2) # store x3 (0x196e5174) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000196e5174 from memory into f4
li x3, 0x8e25eb7f # load x3 with 32 MSBs 0x000000008e25eb7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e25eb7f
sw x3, 0(x2) # store x3 (0x8e25eb7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008e25eb7f from memory into f29
fdiv.d f8, f4, f29, dyn # perform operation
fdiv.d f8, f4, f29, rdn # perform operation
fdiv.d f8, f4, f29, rmm # perform operation
fdiv.d f8, f4, f29, rne # perform operation
fdiv.d f8, f4, f29, rtz # perform operation
fdiv.d f8, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x9, 0x7914d2cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
fdiv.d f9, f8, f22, dyn # perform operation
fdiv.d f9, f8, f22, rdn # perform operation
fdiv.d f9, f8, f22, rmm # perform operation
fdiv.d f9, f8, f22, rne # perform operation
fdiv.d f9, f8, f22, rtz # perform operation
fdiv.d f9, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
li x25, 0x0a76a1c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fdiv.d f25, f28, f7, dyn # perform operation
fdiv.d f25, f28, f7, rdn # perform operation
fdiv.d f25, f28, f7, rmm # perform operation
fdiv.d f25, f28, f7, rne # perform operation
fdiv.d f25, f28, f7, rtz # perform operation
fdiv.d f25, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
li x7, 0xca5fcf48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fdiv.d f7, f29, f14, dyn # perform operation
fdiv.d f7, f29, f14, rdn # perform operation
fdiv.d f7, f29, f14, rmm # perform operation
fdiv.d f7, f29, f14, rne # perform operation
fdiv.d f7, f29, f14, rtz # perform operation
fdiv.d f7, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
li x3, 0xe3f4e41c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fdiv.d f3, f6, f23, dyn # perform operation
fdiv.d f3, f6, f23, rdn # perform operation
fdiv.d f3, f6, f23, rmm # perform operation
fdiv.d f3, f6, f23, rne # perform operation
fdiv.d f3, f6, f23, rtz # perform operation
fdiv.d f3, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
li x28, 0xa8b6511b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fdiv.d f28, f6, f13, dyn # perform operation
fdiv.d f28, f6, f13, rdn # perform operation
fdiv.d f28, f6, f13, rmm # perform operation
fdiv.d f28, f6, f13, rne # perform operation
fdiv.d f28, f6, f13, rtz # perform operation
fdiv.d f28, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
li x2, 0x79fa6a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fdiv.d f2, f9, f12, dyn # perform operation
fdiv.d f2, f9, f12, rdn # perform operation
fdiv.d f2, f9, f12, rmm # perform operation
fdiv.d f2, f9, f12, rne # perform operation
fdiv.d f2, f9, f12, rtz # perform operation
fdiv.d f2, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
li x8, 0x98eafc54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fdiv.d f8, f27, f14, dyn # perform operation
fdiv.d f8, f27, f14, rdn # perform operation
fdiv.d f8, f27, f14, rmm # perform operation
fdiv.d f8, f27, f14, rne # perform operation
fdiv.d f8, f27, f14, rtz # perform operation
fdiv.d f8, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
li x7, 0xcac8f647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fdiv.d f7, f20, f22, dyn # perform operation
fdiv.d f7, f20, f22, rdn # perform operation
fdiv.d f7, f20, f22, rmm # perform operation
fdiv.d f7, f20, f22, rne # perform operation
fdiv.d f7, f20, f22, rtz # perform operation
fdiv.d f7, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
li x12, 0x22565a2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
fdiv.d f12, f10, f25, dyn # perform operation
fdiv.d f12, f10, f25, rdn # perform operation
fdiv.d f12, f10, f25, rmm # perform operation
fdiv.d f12, f10, f25, rne # perform operation
fdiv.d f12, f10, f25, rtz # perform operation
fdiv.d f12, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
li x8, 0x0d7cfa89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
fdiv.d f8, f17, f23, dyn # perform operation
fdiv.d f8, f17, f23, rdn # perform operation
fdiv.d f8, f17, f23, rmm # perform operation
fdiv.d f8, f17, f23, rne # perform operation
fdiv.d f8, f17, f23, rtz # perform operation
fdiv.d f8, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
li x8, 0x3b1cf884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fdiv.d f8, f27, f5, dyn # perform operation
fdiv.d f8, f27, f5, rdn # perform operation
fdiv.d f8, f27, f5, rmm # perform operation
fdiv.d f8, f27, f5, rne # perform operation
fdiv.d f8, f27, f5, rtz # perform operation
fdiv.d f8, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
li x17, 0x9a730f2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xffefffffffffffff from memory into f21
fdiv.d f17, f22, f21, dyn # perform operation
fdiv.d f17, f22, f21, rdn # perform operation
fdiv.d f17, f22, f21, rmm # perform operation
fdiv.d f17, f22, f21, rne # perform operation
fdiv.d f17, f22, f21, rtz # perform operation
fdiv.d f17, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
li x13, 0x0d0d386c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fdiv.d f13, f8, f19, dyn # perform operation
fdiv.d f13, f8, f19, rdn # perform operation
fdiv.d f13, f8, f19, rmm # perform operation
fdiv.d f13, f8, f19, rne # perform operation
fdiv.d f13, f8, f19, rtz # perform operation
fdiv.d f13, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
li x9, 0x67a54ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fdiv.d f9, f3, f14, dyn # perform operation
fdiv.d f9, f3, f14, rdn # perform operation
fdiv.d f9, f3, f14, rmm # perform operation
fdiv.d f9, f3, f14, rne # perform operation
fdiv.d f9, f3, f14, rtz # perform operation
fdiv.d f9, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
li x3, 0x8399afed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fdiv.d f3, f19, f18, dyn # perform operation
fdiv.d f3, f19, f18, rdn # perform operation
fdiv.d f3, f19, f18, rmm # perform operation
fdiv.d f3, f19, f18, rne # perform operation
fdiv.d f3, f19, f18, rtz # perform operation
fdiv.d f3, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
li x30, 0x49fac519 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fdiv.d f30, f17, f23, dyn # perform operation
fdiv.d f30, f17, f23, rdn # perform operation
fdiv.d f30, f17, f23, rmm # perform operation
fdiv.d f30, f17, f23, rne # perform operation
fdiv.d f30, f17, f23, rtz # perform operation
fdiv.d f30, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x28, 0x19a9dc52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fdiv.d f28, f24, f27, dyn # perform operation
fdiv.d f28, f24, f27, rdn # perform operation
fdiv.d f28, f24, f27, rmm # perform operation
fdiv.d f28, f24, f27, rne # perform operation
fdiv.d f28, f24, f27, rtz # perform operation
fdiv.d f28, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
li x21, 0x50229f71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fdiv.d f21, f7, f14, dyn # perform operation
fdiv.d f21, f7, f14, rdn # perform operation
fdiv.d f21, f7, f14, rmm # perform operation
fdiv.d f21, f7, f14, rne # perform operation
fdiv.d f21, f7, f14, rtz # perform operation
fdiv.d f21, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
li x4, 0x9c9bf0ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fdiv.d f4, f20, f30, dyn # perform operation
fdiv.d f4, f20, f30, rdn # perform operation
fdiv.d f4, f20, f30, rmm # perform operation
fdiv.d f4, f20, f30, rne # perform operation
fdiv.d f4, f20, f30, rtz # perform operation
fdiv.d f4, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
li x19, 0x4a63c74d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
fdiv.d f19, f18, f4, dyn # perform operation
fdiv.d f19, f18, f4, rdn # perform operation
fdiv.d f19, f18, f4, rmm # perform operation
fdiv.d f19, f18, f4, rne # perform operation
fdiv.d f19, f18, f4, rtz # perform operation
fdiv.d f19, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
li x28, 0xa63e927b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fdiv.d f28, f21, f10, dyn # perform operation
fdiv.d f28, f21, f10, rdn # perform operation
fdiv.d f28, f21, f10, rmm # perform operation
fdiv.d f28, f21, f10, rne # perform operation
fdiv.d f28, f21, f10, rtz # perform operation
fdiv.d f28, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
li x23, 0xa891b79e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fdiv.d f23, f21, f14, dyn # perform operation
fdiv.d f23, f21, f14, rdn # perform operation
fdiv.d f23, f21, f14, rmm # perform operation
fdiv.d f23, f21, f14, rne # perform operation
fdiv.d f23, f21, f14, rtz # perform operation
fdiv.d f23, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
li x17, 0x06dbe75f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fdiv.d f17, f9, f12, dyn # perform operation
fdiv.d f17, f9, f12, rdn # perform operation
fdiv.d f17, f9, f12, rmm # perform operation
fdiv.d f17, f9, f12, rne # perform operation
fdiv.d f17, f9, f12, rtz # perform operation
fdiv.d f17, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f9, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
li x13, 0xc24c9be1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fdiv.d f13, f2, f5, dyn # perform operation
fdiv.d f13, f2, f5, rdn # perform operation
fdiv.d f13, f2, f5, rmm # perform operation
fdiv.d f13, f2, f5, rne # perform operation
fdiv.d f13, f2, f5, rtz # perform operation
fdiv.d f13, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
li x16, 0x031c5659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fdiv.d f16, f24, f19, dyn # perform operation
fdiv.d f16, f24, f19, rdn # perform operation
fdiv.d f16, f24, f19, rmm # perform operation
fdiv.d f16, f24, f19, rne # perform operation
fdiv.d f16, f24, f19, rtz # perform operation
fdiv.d f16, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
li x28, 0x97ce013d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fdiv.d f28, f1, f29, dyn # perform operation
fdiv.d f28, f1, f29, rdn # perform operation
fdiv.d f28, f1, f29, rmm # perform operation
fdiv.d f28, f1, f29, rne # perform operation
fdiv.d f28, f1, f29, rtz # perform operation
fdiv.d f28, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
li x10, 0x3ad3aa40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f10, f17, f24, dyn # perform operation
fdiv.d f10, f17, f24, rdn # perform operation
fdiv.d f10, f17, f24, rmm # perform operation
fdiv.d f10, f17, f24, rne # perform operation
fdiv.d f10, f17, f24, rtz # perform operation
fdiv.d f10, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
li x25, 0x7cafb34c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fdiv.d f25, f30, f13, dyn # perform operation
fdiv.d f25, f30, f13, rdn # perform operation
fdiv.d f25, f30, f13, rmm # perform operation
fdiv.d f25, f30, f13, rne # perform operation
fdiv.d f25, f30, f13, rtz # perform operation
fdiv.d f25, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
li x6, 0x112c30f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fdiv.d f6, f22, f26, dyn # perform operation
fdiv.d f6, f22, f26, rdn # perform operation
fdiv.d f6, f22, f26, rmm # perform operation
fdiv.d f6, f22, f26, rne # perform operation
fdiv.d f6, f22, f26, rtz # perform operation
fdiv.d f6, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
li x3, 0xcde2aec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
fdiv.d f3, f13, f8, dyn # perform operation
fdiv.d f3, f13, f8, rdn # perform operation
fdiv.d f3, f13, f8, rmm # perform operation
fdiv.d f3, f13, f8, rne # perform operation
fdiv.d f3, f13, f8, rtz # perform operation
fdiv.d f3, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
li x26, 0x134509b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
fdiv.d f26, f10, f22, dyn # perform operation
fdiv.d f26, f10, f22, rdn # perform operation
fdiv.d f26, f10, f22, rmm # perform operation
fdiv.d f26, f10, f22, rne # perform operation
fdiv.d f26, f10, f22, rtz # perform operation
fdiv.d f26, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
li x5, 0x04967b80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
fdiv.d f5, f20, f4, dyn # perform operation
fdiv.d f5, f20, f4, rdn # perform operation
fdiv.d f5, f20, f4, rmm # perform operation
fdiv.d f5, f20, f4, rne # perform operation
fdiv.d f5, f20, f4, rtz # perform operation
fdiv.d f5, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
li x23, 0x7b1b33b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fdiv.d f23, f20, f24, dyn # perform operation
fdiv.d f23, f20, f24, rdn # perform operation
fdiv.d f23, f20, f24, rmm # perform operation
fdiv.d f23, f20, f24, rne # perform operation
fdiv.d f23, f20, f24, rtz # perform operation
fdiv.d f23, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
li x24, 0x99470541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fdiv.d f24, f12, f8, dyn # perform operation
fdiv.d f24, f12, f8, rdn # perform operation
fdiv.d f24, f12, f8, rmm # perform operation
fdiv.d f24, f12, f8, rne # perform operation
fdiv.d f24, f12, f8, rtz # perform operation
fdiv.d f24, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
li x23, 0x28bd863f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fdiv.d f23, f15, f31, dyn # perform operation
fdiv.d f23, f15, f31, rdn # perform operation
fdiv.d f23, f15, f31, rmm # perform operation
fdiv.d f23, f15, f31, rne # perform operation
fdiv.d f23, f15, f31, rtz # perform operation
fdiv.d f23, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
li x13, 0x16b0ddf4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
fdiv.d f13, f16, f27, dyn # perform operation
fdiv.d f13, f16, f27, rdn # perform operation
fdiv.d f13, f16, f27, rmm # perform operation
fdiv.d f13, f16, f27, rne # perform operation
fdiv.d f13, f16, f27, rtz # perform operation
fdiv.d f13, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
li x31, 0x68331b90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fdiv.d f31, f28, f8, dyn # perform operation
fdiv.d f31, f28, f8, rdn # perform operation
fdiv.d f31, f28, f8, rmm # perform operation
fdiv.d f31, f28, f8, rne # perform operation
fdiv.d f31, f28, f8, rtz # perform operation
fdiv.d f31, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
li x5, 0x2fbbd30b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
fdiv.d f5, f26, f1, dyn # perform operation
fdiv.d f5, f26, f1, rdn # perform operation
fdiv.d f5, f26, f1, rmm # perform operation
fdiv.d f5, f26, f1, rne # perform operation
fdiv.d f5, f26, f1, rtz # perform operation
fdiv.d f5, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
li x26, 0x9ba23ddc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
fdiv.d f26, f17, f4, dyn # perform operation
fdiv.d f26, f17, f4, rdn # perform operation
fdiv.d f26, f17, f4, rmm # perform operation
fdiv.d f26, f17, f4, rne # perform operation
fdiv.d f26, f17, f4, rtz # perform operation
fdiv.d f26, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
li x23, 0x5b1fe0f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fdiv.d f23, f8, f22, dyn # perform operation
fdiv.d f23, f8, f22, rdn # perform operation
fdiv.d f23, f8, f22, rmm # perform operation
fdiv.d f23, f8, f22, rne # perform operation
fdiv.d f23, f8, f22, rtz # perform operation
fdiv.d f23, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
li x22, 0x482fd131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fdiv.d f22, f25, f16, dyn # perform operation
fdiv.d f22, f25, f16, rdn # perform operation
fdiv.d f22, f25, f16, rmm # perform operation
fdiv.d f22, f25, f16, rne # perform operation
fdiv.d f22, f25, f16, rtz # perform operation
fdiv.d f22, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
li x20, 0x2ce07888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fdiv.d f20, f6, f19, dyn # perform operation
fdiv.d f20, f6, f19, rdn # perform operation
fdiv.d f20, f6, f19, rmm # perform operation
fdiv.d f20, f6, f19, rne # perform operation
fdiv.d f20, f6, f19, rtz # perform operation
fdiv.d f20, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
li x27, 0x98f386c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fdiv.d f27, f22, f17, dyn # perform operation
fdiv.d f27, f22, f17, rdn # perform operation
fdiv.d f27, f22, f17, rmm # perform operation
fdiv.d f27, f22, f17, rne # perform operation
fdiv.d f27, f22, f17, rtz # perform operation
fdiv.d f27, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
li x8, 0xefd6aa61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fdiv.d f8, f19, f13, dyn # perform operation
fdiv.d f8, f19, f13, rdn # perform operation
fdiv.d f8, f19, f13, rmm # perform operation
fdiv.d f8, f19, f13, rne # perform operation
fdiv.d f8, f19, f13, rtz # perform operation
fdiv.d f8, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
li x16, 0xcff5786d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fdiv.d f16, f26, f14, dyn # perform operation
fdiv.d f16, f26, f14, rdn # perform operation
fdiv.d f16, f26, f14, rmm # perform operation
fdiv.d f16, f26, f14, rne # perform operation
fdiv.d f16, f26, f14, rtz # perform operation
fdiv.d f16, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f26, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
li x18, 0xfbcc8d42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fdiv.d f18, f31, f13, dyn # perform operation
fdiv.d f18, f31, f13, rdn # perform operation
fdiv.d f18, f31, f13, rmm # perform operation
fdiv.d f18, f31, f13, rne # perform operation
fdiv.d f18, f31, f13, rtz # perform operation
fdiv.d f18, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
li x28, 0xec29cc7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
fdiv.d f28, f16, f1, dyn # perform operation
fdiv.d f28, f16, f1, rdn # perform operation
fdiv.d f28, f16, f1, rmm # perform operation
fdiv.d f28, f16, f1, rne # perform operation
fdiv.d f28, f16, f1, rtz # perform operation
fdiv.d f28, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
li x25, 0xaaca15b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fdiv.d f25, f31, f2, dyn # perform operation
fdiv.d f25, f31, f2, rdn # perform operation
fdiv.d f25, f31, f2, rmm # perform operation
fdiv.d f25, f31, f2, rne # perform operation
fdiv.d f25, f31, f2, rtz # perform operation
fdiv.d f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
li x30, 0xa480b497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fdiv.d f30, f8, f27, dyn # perform operation
fdiv.d f30, f8, f27, rdn # perform operation
fdiv.d f30, f8, f27, rmm # perform operation
fdiv.d f30, f8, f27, rne # perform operation
fdiv.d f30, f8, f27, rtz # perform operation
fdiv.d f30, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
li x28, 0xe4fbc314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fdiv.d f28, f25, f31, dyn # perform operation
fdiv.d f28, f25, f31, rdn # perform operation
fdiv.d f28, f25, f31, rmm # perform operation
fdiv.d f28, f25, f31, rne # perform operation
fdiv.d f28, f25, f31, rtz # perform operation
fdiv.d f28, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
li x29, 0x69100185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fdiv.d f29, f7, f22, dyn # perform operation
fdiv.d f29, f7, f22, rdn # perform operation
fdiv.d f29, f7, f22, rmm # perform operation
fdiv.d f29, f7, f22, rne # perform operation
fdiv.d f29, f7, f22, rtz # perform operation
fdiv.d f29, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
li x1, 0x915013f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fdiv.d f1, f24, f15, dyn # perform operation
fdiv.d f1, f24, f15, rdn # perform operation
fdiv.d f1, f24, f15, rmm # perform operation
fdiv.d f1, f24, f15, rne # perform operation
fdiv.d f1, f24, f15, rtz # perform operation
fdiv.d f1, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
li x8, 0x3519c613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000000 from memory into f18
fdiv.d f8, f12, f18, dyn # perform operation
fdiv.d f8, f12, f18, rdn # perform operation
fdiv.d f8, f12, f18, rmm # perform operation
fdiv.d f8, f12, f18, rne # perform operation
fdiv.d f8, f12, f18, rtz # perform operation
fdiv.d f8, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
li x28, 0x1a4a70bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fdiv.d f28, f6, f18, dyn # perform operation
fdiv.d f28, f6, f18, rdn # perform operation
fdiv.d f28, f6, f18, rmm # perform operation
fdiv.d f28, f6, f18, rne # perform operation
fdiv.d f28, f6, f18, rtz # perform operation
fdiv.d f28, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
li x31, 0x25a42860 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fdiv.d f31, f25, f14, dyn # perform operation
fdiv.d f31, f25, f14, rdn # perform operation
fdiv.d f31, f25, f14, rmm # perform operation
fdiv.d f31, f25, f14, rne # perform operation
fdiv.d f31, f25, f14, rtz # perform operation
fdiv.d f31, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f25, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
li x2, 0xbca02cd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
fdiv.d f2, f15, f18, dyn # perform operation
fdiv.d f2, f15, f18, rdn # perform operation
fdiv.d f2, f15, f18, rmm # perform operation
fdiv.d f2, f15, f18, rne # perform operation
fdiv.d f2, f15, f18, rtz # perform operation
fdiv.d f2, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
li x27, 0x9848527a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fdiv.d f27, f31, f18, dyn # perform operation
fdiv.d f27, f31, f18, rdn # perform operation
fdiv.d f27, f31, f18, rmm # perform operation
fdiv.d f27, f31, f18, rne # perform operation
fdiv.d f27, f31, f18, rtz # perform operation
fdiv.d f27, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
li x5, 0xb742387f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fdiv.d f5, f7, f23, dyn # perform operation
fdiv.d f5, f7, f23, rdn # perform operation
fdiv.d f5, f7, f23, rmm # perform operation
fdiv.d f5, f7, f23, rne # perform operation
fdiv.d f5, f7, f23, rtz # perform operation
fdiv.d f5, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
li x5, 0x46cb3631 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
fdiv.d f5, f13, f10, dyn # perform operation
fdiv.d f5, f13, f10, rdn # perform operation
fdiv.d f5, f13, f10, rmm # perform operation
fdiv.d f5, f13, f10, rne # perform operation
fdiv.d f5, f13, f10, rtz # perform operation
fdiv.d f5, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
li x9, 0x66eb8bda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
fdiv.d f9, f25, f30, dyn # perform operation
fdiv.d f9, f25, f30, rdn # perform operation
fdiv.d f9, f25, f30, rmm # perform operation
fdiv.d f9, f25, f30, rne # perform operation
fdiv.d f9, f25, f30, rtz # perform operation
fdiv.d f9, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f25, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
li x9, 0xdf5dee3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fdiv.d f9, f8, f31, dyn # perform operation
fdiv.d f9, f8, f31, rdn # perform operation
fdiv.d f9, f8, f31, rmm # perform operation
fdiv.d f9, f8, f31, rne # perform operation
fdiv.d f9, f8, f31, rtz # perform operation
fdiv.d f9, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
li x27, 0x7224b6e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fdiv.d f27, f7, f2, dyn # perform operation
fdiv.d f27, f7, f2, rdn # perform operation
fdiv.d f27, f7, f2, rmm # perform operation
fdiv.d f27, f7, f2, rne # perform operation
fdiv.d f27, f7, f2, rtz # perform operation
fdiv.d f27, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
li x31, 0x11b89690 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fdiv.d f31, f10, f9, dyn # perform operation
fdiv.d f31, f10, f9, rdn # perform operation
fdiv.d f31, f10, f9, rmm # perform operation
fdiv.d f31, f10, f9, rne # perform operation
fdiv.d f31, f10, f9, rtz # perform operation
fdiv.d f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
li x23, 0x1bc821f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fdiv.d f23, f31, f26, dyn # perform operation
fdiv.d f23, f31, f26, rdn # perform operation
fdiv.d f23, f31, f26, rmm # perform operation
fdiv.d f23, f31, f26, rne # perform operation
fdiv.d f23, f31, f26, rtz # perform operation
fdiv.d f23, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
li x25, 0x974f96d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fdiv.d f25, f15, f14, dyn # perform operation
fdiv.d f25, f15, f14, rdn # perform operation
fdiv.d f25, f15, f14, rmm # perform operation
fdiv.d f25, f15, f14, rne # perform operation
fdiv.d f25, f15, f14, rtz # perform operation
fdiv.d f25, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
li x25, 0x5ac179da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fdiv.d f25, f30, f16, dyn # perform operation
fdiv.d f25, f30, f16, rdn # perform operation
fdiv.d f25, f30, f16, rmm # perform operation
fdiv.d f25, f30, f16, rne # perform operation
fdiv.d f25, f30, f16, rtz # perform operation
fdiv.d f25, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
li x21, 0xf0601851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fdiv.d f21, f3, f9, dyn # perform operation
fdiv.d f21, f3, f9, rdn # perform operation
fdiv.d f21, f3, f9, rmm # perform operation
fdiv.d f21, f3, f9, rne # perform operation
fdiv.d f21, f3, f9, rtz # perform operation
fdiv.d f21, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
li x18, 0x7972b96b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fdiv.d f18, f29, f22, dyn # perform operation
fdiv.d f18, f29, f22, rdn # perform operation
fdiv.d f18, f29, f22, rmm # perform operation
fdiv.d f18, f29, f22, rne # perform operation
fdiv.d f18, f29, f22, rtz # perform operation
fdiv.d f18, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
li x7, 0xf3e26c12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fdiv.d f7, f13, f1, dyn # perform operation
fdiv.d f7, f13, f1, rdn # perform operation
fdiv.d f7, f13, f1, rmm # perform operation
fdiv.d f7, f13, f1, rne # perform operation
fdiv.d f7, f13, f1, rtz # perform operation
fdiv.d f7, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
li x10, 0x8d1c9200 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fdiv.d f10, f15, f22, dyn # perform operation
fdiv.d f10, f15, f22, rdn # perform operation
fdiv.d f10, f15, f22, rmm # perform operation
fdiv.d f10, f15, f22, rne # perform operation
fdiv.d f10, f15, f22, rtz # perform operation
fdiv.d f10, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
li x8, 0xfceb2bad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fdiv.d f8, f31, f23, dyn # perform operation
fdiv.d f8, f31, f23, rdn # perform operation
fdiv.d f8, f31, f23, rmm # perform operation
fdiv.d f8, f31, f23, rne # perform operation
fdiv.d f8, f31, f23, rtz # perform operation
fdiv.d f8, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
li x5, 0xb2296419 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fdiv.d f5, f4, f6, dyn # perform operation
fdiv.d f5, f4, f6, rdn # perform operation
fdiv.d f5, f4, f6, rmm # perform operation
fdiv.d f5, f4, f6, rne # perform operation
fdiv.d f5, f4, f6, rtz # perform operation
fdiv.d f5, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
li x21, 0x931f1918 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fdiv.d f21, f25, f27, dyn # perform operation
fdiv.d f21, f25, f27, rdn # perform operation
fdiv.d f21, f25, f27, rmm # perform operation
fdiv.d f21, f25, f27, rne # perform operation
fdiv.d f21, f25, f27, rtz # perform operation
fdiv.d f21, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
li x31, 0xf4715f4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
fdiv.d f31, f12, f28, dyn # perform operation
fdiv.d f31, f12, f28, rdn # perform operation
fdiv.d f31, f12, f28, rmm # perform operation
fdiv.d f31, f12, f28, rne # perform operation
fdiv.d f31, f12, f28, rtz # perform operation
fdiv.d f31, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
li x18, 0xd4b75360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fdiv.d f18, f27, f2, dyn # perform operation
fdiv.d f18, f27, f2, rdn # perform operation
fdiv.d f18, f27, f2, rmm # perform operation
fdiv.d f18, f27, f2, rne # perform operation
fdiv.d f18, f27, f2, rtz # perform operation
fdiv.d f18, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x26, 0x84a2d759 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff0000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
fdiv.d f26, f28, f29, dyn # perform operation
fdiv.d f26, f28, f29, rdn # perform operation
fdiv.d f26, f28, f29, rmm # perform operation
fdiv.d f26, f28, f29, rne # perform operation
fdiv.d f26, f28, f29, rtz # perform operation
fdiv.d f26, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
li x19, 0x535a2579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fdiv.d f19, f27, f12, dyn # perform operation
fdiv.d f19, f27, f12, rdn # perform operation
fdiv.d f19, f27, f12, rmm # perform operation
fdiv.d f19, f27, f12, rne # perform operation
fdiv.d f19, f27, f12, rtz # perform operation
fdiv.d f19, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
li x13, 0x7a8f7a0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fdiv.d f13, f18, f16, dyn # perform operation
fdiv.d f13, f18, f16, rdn # perform operation
fdiv.d f13, f18, f16, rmm # perform operation
fdiv.d f13, f18, f16, rne # perform operation
fdiv.d f13, f18, f16, rtz # perform operation
fdiv.d f13, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
li x17, 0x54c8df4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
fdiv.d f17, f29, f30, dyn # perform operation
fdiv.d f17, f29, f30, rdn # perform operation
fdiv.d f17, f29, f30, rmm # perform operation
fdiv.d f17, f29, f30, rne # perform operation
fdiv.d f17, f29, f30, rtz # perform operation
fdiv.d f17, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
li x27, 0xd5c05410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fdiv.d f27, f16, f13, dyn # perform operation
fdiv.d f27, f16, f13, rdn # perform operation
fdiv.d f27, f16, f13, rmm # perform operation
fdiv.d f27, f16, f13, rne # perform operation
fdiv.d f27, f16, f13, rtz # perform operation
fdiv.d f27, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
li x16, 0xe088e6ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fdiv.d f16, f4, f6, dyn # perform operation
fdiv.d f16, f4, f6, rdn # perform operation
fdiv.d f16, f4, f6, rmm # perform operation
fdiv.d f16, f4, f6, rne # perform operation
fdiv.d f16, f4, f6, rtz # perform operation
fdiv.d f16, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
li x12, 0x9a272963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fdiv.d f12, f10, f5, dyn # perform operation
fdiv.d f12, f10, f5, rdn # perform operation
fdiv.d f12, f10, f5, rmm # perform operation
fdiv.d f12, f10, f5, rne # perform operation
fdiv.d f12, f10, f5, rtz # perform operation
fdiv.d f12, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
li x17, 0xa54846bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
fdiv.d f17, f25, f31, dyn # perform operation
fdiv.d f17, f25, f31, rdn # perform operation
fdiv.d f17, f25, f31, rmm # perform operation
fdiv.d f17, f25, f31, rne # perform operation
fdiv.d f17, f25, f31, rtz # perform operation
fdiv.d f17, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
li x11, 0x797abf8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fdiv.d f11, f9, f27, dyn # perform operation
fdiv.d f11, f9, f27, rdn # perform operation
fdiv.d f11, f9, f27, rmm # perform operation
fdiv.d f11, f9, f27, rne # perform operation
fdiv.d f11, f9, f27, rtz # perform operation
fdiv.d f11, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
li x5, 0xcd81206f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fdiv.d f5, f24, f11, dyn # perform operation
fdiv.d f5, f24, f11, rdn # perform operation
fdiv.d f5, f24, f11, rmm # perform operation
fdiv.d f5, f24, f11, rne # perform operation
fdiv.d f5, f24, f11, rtz # perform operation
fdiv.d f5, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
li x19, 0x79075f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fdiv.d f19, f4, f14, dyn # perform operation
fdiv.d f19, f4, f14, rdn # perform operation
fdiv.d f19, f4, f14, rmm # perform operation
fdiv.d f19, f4, f14, rne # perform operation
fdiv.d f19, f4, f14, rtz # perform operation
fdiv.d f19, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
li x15, 0x68e11a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fdiv.d f15, f27, f4, dyn # perform operation
fdiv.d f15, f27, f4, rdn # perform operation
fdiv.d f15, f27, f4, rmm # perform operation
fdiv.d f15, f27, f4, rne # perform operation
fdiv.d f15, f27, f4, rtz # perform operation
fdiv.d f15, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
li x12, 0x98881a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fdiv.d f12, f21, f10, dyn # perform operation
fdiv.d f12, f21, f10, rdn # perform operation
fdiv.d f12, f21, f10, rmm # perform operation
fdiv.d f12, f21, f10, rne # perform operation
fdiv.d f12, f21, f10, rtz # perform operation
fdiv.d f12, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
li x11, 0x686a6297 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fdiv.d f11, f5, f2, dyn # perform operation
fdiv.d f11, f5, f2, rdn # perform operation
fdiv.d f11, f5, f2, rmm # perform operation
fdiv.d f11, f5, f2, rne # perform operation
fdiv.d f11, f5, f2, rtz # perform operation
fdiv.d f11, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
li x17, 0x1f02d401 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fdiv.d f17, f1, f10, dyn # perform operation
fdiv.d f17, f1, f10, rdn # perform operation
fdiv.d f17, f1, f10, rmm # perform operation
fdiv.d f17, f1, f10, rne # perform operation
fdiv.d f17, f1, f10, rtz # perform operation
fdiv.d f17, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
li x16, 0x0b284e3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fdiv.d f16, f12, f6, dyn # perform operation
fdiv.d f16, f12, f6, rdn # perform operation
fdiv.d f16, f12, f6, rmm # perform operation
fdiv.d f16, f12, f6, rne # perform operation
fdiv.d f16, f12, f6, rtz # perform operation
fdiv.d f16, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
li x30, 0x93e3d1de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fdiv.d f30, f10, f20, dyn # perform operation
fdiv.d f30, f10, f20, rdn # perform operation
fdiv.d f30, f10, f20, rmm # perform operation
fdiv.d f30, f10, f20, rne # perform operation
fdiv.d f30, f10, f20, rtz # perform operation
fdiv.d f30, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
li x7, 0x17f10f9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
fdiv.d f7, f17, f30, dyn # perform operation
fdiv.d f7, f17, f30, rdn # perform operation
fdiv.d f7, f17, f30, rmm # perform operation
fdiv.d f7, f17, f30, rne # perform operation
fdiv.d f7, f17, f30, rtz # perform operation
fdiv.d f7, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
li x14, 0xb5d280a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
fdiv.d f14, f23, f16, dyn # perform operation
fdiv.d f14, f23, f16, rdn # perform operation
fdiv.d f14, f23, f16, rmm # perform operation
fdiv.d f14, f23, f16, rne # perform operation
fdiv.d f14, f23, f16, rtz # perform operation
fdiv.d f14, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
li x10, 0x300ee660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fdiv.d f10, f13, f14, dyn # perform operation
fdiv.d f10, f13, f14, rdn # perform operation
fdiv.d f10, f13, f14, rmm # perform operation
fdiv.d f10, f13, f14, rne # perform operation
fdiv.d f10, f13, f14, rtz # perform operation
fdiv.d f10, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
li x28, 0x944ec54f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fdiv.d f28, f3, f21, dyn # perform operation
fdiv.d f28, f3, f21, rdn # perform operation
fdiv.d f28, f3, f21, rmm # perform operation
fdiv.d f28, f3, f21, rne # perform operation
fdiv.d f28, f3, f21, rtz # perform operation
fdiv.d f28, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
li x17, 0x848e29fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fdiv.d f17, f11, f6, dyn # perform operation
fdiv.d f17, f11, f6, rdn # perform operation
fdiv.d f17, f11, f6, rmm # perform operation
fdiv.d f17, f11, f6, rne # perform operation
fdiv.d f17, f11, f6, rtz # perform operation
fdiv.d f17, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
li x8, 0x7532f0ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fdiv.d f8, f18, f6, dyn # perform operation
fdiv.d f8, f18, f6, rdn # perform operation
fdiv.d f8, f18, f6, rmm # perform operation
fdiv.d f8, f18, f6, rne # perform operation
fdiv.d f8, f18, f6, rtz # perform operation
fdiv.d f8, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f18, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
li x1, 0xbf5de099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fdiv.d f1, f15, f22, dyn # perform operation
fdiv.d f1, f15, f22, rdn # perform operation
fdiv.d f1, f15, f22, rmm # perform operation
fdiv.d f1, f15, f22, rne # perform operation
fdiv.d f1, f15, f22, rtz # perform operation
fdiv.d f1, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
li x30, 0xe2624767 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fdiv.d f30, f13, f8, dyn # perform operation
fdiv.d f30, f13, f8, rdn # perform operation
fdiv.d f30, f13, f8, rmm # perform operation
fdiv.d f30, f13, f8, rne # perform operation
fdiv.d f30, f13, f8, rtz # perform operation
fdiv.d f30, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
li x5, 0xc38ea16c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fdiv.d f5, f22, f23, dyn # perform operation
fdiv.d f5, f22, f23, rdn # perform operation
fdiv.d f5, f22, f23, rmm # perform operation
fdiv.d f5, f22, f23, rne # perform operation
fdiv.d f5, f22, f23, rtz # perform operation
fdiv.d f5, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x14, 0xc0e027e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
fdiv.d f14, f13, f27, dyn # perform operation
fdiv.d f14, f13, f27, rdn # perform operation
fdiv.d f14, f13, f27, rmm # perform operation
fdiv.d f14, f13, f27, rne # perform operation
fdiv.d f14, f13, f27, rtz # perform operation
fdiv.d f14, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
li x10, 0x0c61a410 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fdiv.d f10, f15, f18, dyn # perform operation
fdiv.d f10, f15, f18, rdn # perform operation
fdiv.d f10, f15, f18, rmm # perform operation
fdiv.d f10, f15, f18, rne # perform operation
fdiv.d f10, f15, f18, rtz # perform operation
fdiv.d f10, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
li x16, 0x8d297d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fdiv.d f16, f11, f30, dyn # perform operation
fdiv.d f16, f11, f30, rdn # perform operation
fdiv.d f16, f11, f30, rmm # perform operation
fdiv.d f16, f11, f30, rne # perform operation
fdiv.d f16, f11, f30, rtz # perform operation
fdiv.d f16, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
li x9, 0x8d51cabd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fdiv.d f9, f2, f31, dyn # perform operation
fdiv.d f9, f2, f31, rdn # perform operation
fdiv.d f9, f2, f31, rmm # perform operation
fdiv.d f9, f2, f31, rne # perform operation
fdiv.d f9, f2, f31, rtz # perform operation
fdiv.d f9, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
li x14, 0x6b0195eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fdiv.d f14, f23, f29, dyn # perform operation
fdiv.d f14, f23, f29, rdn # perform operation
fdiv.d f14, f23, f29, rmm # perform operation
fdiv.d f14, f23, f29, rne # perform operation
fdiv.d f14, f23, f29, rtz # perform operation
fdiv.d f14, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f23, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
li x6, 0x50c42797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fdiv.d f6, f20, f7, dyn # perform operation
fdiv.d f6, f20, f7, rdn # perform operation
fdiv.d f6, f20, f7, rmm # perform operation
fdiv.d f6, f20, f7, rne # perform operation
fdiv.d f6, f20, f7, rtz # perform operation
fdiv.d f6, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
li x4, 0x911d46fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fdiv.d f4, f26, f12, dyn # perform operation
fdiv.d f4, f26, f12, rdn # perform operation
fdiv.d f4, f26, f12, rmm # perform operation
fdiv.d f4, f26, f12, rne # perform operation
fdiv.d f4, f26, f12, rtz # perform operation
fdiv.d f4, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
li x4, 0xbb43034f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fdiv.d f4, f19, f6, dyn # perform operation
fdiv.d f4, f19, f6, rdn # perform operation
fdiv.d f4, f19, f6, rmm # perform operation
fdiv.d f4, f19, f6, rne # perform operation
fdiv.d f4, f19, f6, rtz # perform operation
fdiv.d f4, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
li x12, 0x1038dc15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fdiv.d f12, f20, f15, dyn # perform operation
fdiv.d f12, f20, f15, rdn # perform operation
fdiv.d f12, f20, f15, rmm # perform operation
fdiv.d f12, f20, f15, rne # perform operation
fdiv.d f12, f20, f15, rtz # perform operation
fdiv.d f12, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
li x29, 0x03d23032 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fdiv.d f29, f31, f25, dyn # perform operation
fdiv.d f29, f31, f25, rdn # perform operation
fdiv.d f29, f31, f25, rmm # perform operation
fdiv.d f29, f31, f25, rne # perform operation
fdiv.d f29, f31, f25, rtz # perform operation
fdiv.d f29, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
li x12, 0x54e2d5f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fdiv.d f12, f2, f27, dyn # perform operation
fdiv.d f12, f2, f27, rdn # perform operation
fdiv.d f12, f2, f27, rmm # perform operation
fdiv.d f12, f2, f27, rne # perform operation
fdiv.d f12, f2, f27, rtz # perform operation
fdiv.d f12, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
li x5, 0x9fdef309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fdiv.d f5, f3, f14, dyn # perform operation
fdiv.d f5, f3, f14, rdn # perform operation
fdiv.d f5, f3, f14, rmm # perform operation
fdiv.d f5, f3, f14, rne # perform operation
fdiv.d f5, f3, f14, rtz # perform operation
fdiv.d f5, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
li x28, 0xc74e249d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fdiv.d f28, f2, f24, dyn # perform operation
fdiv.d f28, f2, f24, rdn # perform operation
fdiv.d f28, f2, f24, rmm # perform operation
fdiv.d f28, f2, f24, rne # perform operation
fdiv.d f28, f2, f24, rtz # perform operation
fdiv.d f28, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
li x29, 0x636dd20f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fdiv.d f29, f27, f12, dyn # perform operation
fdiv.d f29, f27, f12, rdn # perform operation
fdiv.d f29, f27, f12, rmm # perform operation
fdiv.d f29, f27, f12, rne # perform operation
fdiv.d f29, f27, f12, rtz # perform operation
fdiv.d f29, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
li x15, 0x8c1b2dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fdiv.d f15, f28, f3, dyn # perform operation
fdiv.d f15, f28, f3, rdn # perform operation
fdiv.d f15, f28, f3, rmm # perform operation
fdiv.d f15, f28, f3, rne # perform operation
fdiv.d f15, f28, f3, rtz # perform operation
fdiv.d f15, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
li x4, 0xf72ac449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fdiv.d f4, f9, f14, dyn # perform operation
fdiv.d f4, f9, f14, rdn # perform operation
fdiv.d f4, f9, f14, rmm # perform operation
fdiv.d f4, f9, f14, rne # perform operation
fdiv.d f4, f9, f14, rtz # perform operation
fdiv.d f4, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
li x31, 0x42b7abc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fdiv.d f31, f18, f1, dyn # perform operation
fdiv.d f31, f18, f1, rdn # perform operation
fdiv.d f31, f18, f1, rmm # perform operation
fdiv.d f31, f18, f1, rne # perform operation
fdiv.d f31, f18, f1, rtz # perform operation
fdiv.d f31, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
li x25, 0xfc6ab865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fdiv.d f25, f21, f13, dyn # perform operation
fdiv.d f25, f21, f13, rdn # perform operation
fdiv.d f25, f21, f13, rmm # perform operation
fdiv.d f25, f21, f13, rne # perform operation
fdiv.d f25, f21, f13, rtz # perform operation
fdiv.d f25, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
li x11, 0xe81091d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fdiv.d f11, f29, f17, dyn # perform operation
fdiv.d f11, f29, f17, rdn # perform operation
fdiv.d f11, f29, f17, rmm # perform operation
fdiv.d f11, f29, f17, rne # perform operation
fdiv.d f11, f29, f17, rtz # perform operation
fdiv.d f11, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
li x19, 0xa9924364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fdiv.d f19, f3, f27, dyn # perform operation
fdiv.d f19, f3, f27, rdn # perform operation
fdiv.d f19, f3, f27, rmm # perform operation
fdiv.d f19, f3, f27, rne # perform operation
fdiv.d f19, f3, f27, rtz # perform operation
fdiv.d f19, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
li x28, 0xc7100a64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
fdiv.d f28, f9, f23, dyn # perform operation
fdiv.d f28, f9, f23, rdn # perform operation
fdiv.d f28, f9, f23, rmm # perform operation
fdiv.d f28, f9, f23, rne # perform operation
fdiv.d f28, f9, f23, rtz # perform operation
fdiv.d f28, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f9, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
li x20, 0xc0cd0e2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fdiv.d f20, f21, f5, dyn # perform operation
fdiv.d f20, f21, f5, rdn # perform operation
fdiv.d f20, f21, f5, rmm # perform operation
fdiv.d f20, f21, f5, rne # perform operation
fdiv.d f20, f21, f5, rtz # perform operation
fdiv.d f20, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f21, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
li x8, 0x38860952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fdiv.d f8, f18, f23, dyn # perform operation
fdiv.d f8, f18, f23, rdn # perform operation
fdiv.d f8, f18, f23, rmm # perform operation
fdiv.d f8, f18, f23, rne # perform operation
fdiv.d f8, f18, f23, rtz # perform operation
fdiv.d f8, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
li x25, 0xaa139a88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fdiv.d f25, f28, f2, dyn # perform operation
fdiv.d f25, f28, f2, rdn # perform operation
fdiv.d f25, f28, f2, rmm # perform operation
fdiv.d f25, f28, f2, rne # perform operation
fdiv.d f25, f28, f2, rtz # perform operation
fdiv.d f25, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
li x24, 0xe84bce2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fdiv.d f24, f18, f29, dyn # perform operation
fdiv.d f24, f18, f29, rdn # perform operation
fdiv.d f24, f18, f29, rmm # perform operation
fdiv.d f24, f18, f29, rne # perform operation
fdiv.d f24, f18, f29, rtz # perform operation
fdiv.d f24, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
li x27, 0xb75587c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fdiv.d f27, f5, f31, dyn # perform operation
fdiv.d f27, f5, f31, rdn # perform operation
fdiv.d f27, f5, f31, rmm # perform operation
fdiv.d f27, f5, f31, rne # perform operation
fdiv.d f27, f5, f31, rtz # perform operation
fdiv.d f27, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x26, 0xfb74473f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fdiv.d f26, f18, f10, dyn # perform operation
fdiv.d f26, f18, f10, rdn # perform operation
fdiv.d f26, f18, f10, rmm # perform operation
fdiv.d f26, f18, f10, rne # perform operation
fdiv.d f26, f18, f10, rtz # perform operation
fdiv.d f26, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
li x7, 0x904c3d42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fdiv.d f7, f14, f21, dyn # perform operation
fdiv.d f7, f14, f21, rdn # perform operation
fdiv.d f7, f14, f21, rmm # perform operation
fdiv.d f7, f14, f21, rne # perform operation
fdiv.d f7, f14, f21, rtz # perform operation
fdiv.d f7, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
li x31, 0xb5746e65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fdiv.d f31, f21, f6, dyn # perform operation
fdiv.d f31, f21, f6, rdn # perform operation
fdiv.d f31, f21, f6, rmm # perform operation
fdiv.d f31, f21, f6, rne # perform operation
fdiv.d f31, f21, f6, rtz # perform operation
fdiv.d f31, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
li x13, 0x5bdc8043 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f13, f30, f24, dyn # perform operation
fdiv.d f13, f30, f24, rdn # perform operation
fdiv.d f13, f30, f24, rmm # perform operation
fdiv.d f13, f30, f24, rne # perform operation
fdiv.d f13, f30, f24, rtz # perform operation
fdiv.d f13, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
li x13, 0x58a8d112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
fdiv.d f13, f17, f23, dyn # perform operation
fdiv.d f13, f17, f23, rdn # perform operation
fdiv.d f13, f17, f23, rmm # perform operation
fdiv.d f13, f17, f23, rne # perform operation
fdiv.d f13, f17, f23, rtz # perform operation
fdiv.d f13, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
li x9, 0xbc186e9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fdiv.d f9, f28, f6, dyn # perform operation
fdiv.d f9, f28, f6, rdn # perform operation
fdiv.d f9, f28, f6, rmm # perform operation
fdiv.d f9, f28, f6, rne # perform operation
fdiv.d f9, f28, f6, rtz # perform operation
fdiv.d f9, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f28, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
li x24, 0x4e64ecfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fdiv.d f24, f21, f27, dyn # perform operation
fdiv.d f24, f21, f27, rdn # perform operation
fdiv.d f24, f21, f27, rmm # perform operation
fdiv.d f24, f21, f27, rne # perform operation
fdiv.d f24, f21, f27, rtz # perform operation
fdiv.d f24, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
li x2, 0x3c9d3801 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fdiv.d f2, f15, f24, dyn # perform operation
fdiv.d f2, f15, f24, rdn # perform operation
fdiv.d f2, f15, f24, rmm # perform operation
fdiv.d f2, f15, f24, rne # perform operation
fdiv.d f2, f15, f24, rtz # perform operation
fdiv.d f2, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
li x21, 0x4b33480e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
fdiv.d f21, f30, f7, dyn # perform operation
fdiv.d f21, f30, f7, rdn # perform operation
fdiv.d f21, f30, f7, rmm # perform operation
fdiv.d f21, f30, f7, rne # perform operation
fdiv.d f21, f30, f7, rtz # perform operation
fdiv.d f21, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
li x4, 0x98bc1a10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fdiv.d f4, f29, f6, dyn # perform operation
fdiv.d f4, f29, f6, rdn # perform operation
fdiv.d f4, f29, f6, rmm # perform operation
fdiv.d f4, f29, f6, rne # perform operation
fdiv.d f4, f29, f6, rtz # perform operation
fdiv.d f4, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
li x21, 0x821aa2ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fdiv.d f21, f7, f27, dyn # perform operation
fdiv.d f21, f7, f27, rdn # perform operation
fdiv.d f21, f7, f27, rmm # perform operation
fdiv.d f21, f7, f27, rne # perform operation
fdiv.d f21, f7, f27, rtz # perform operation
fdiv.d f21, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
li x8, 0xe3715c87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fdiv.d f8, f15, f20, dyn # perform operation
fdiv.d f8, f15, f20, rdn # perform operation
fdiv.d f8, f15, f20, rmm # perform operation
fdiv.d f8, f15, f20, rne # perform operation
fdiv.d f8, f15, f20, rtz # perform operation
fdiv.d f8, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
li x20, 0xb0c4b3a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fdiv.d f20, f4, f25, dyn # perform operation
fdiv.d f20, f4, f25, rdn # perform operation
fdiv.d f20, f4, f25, rmm # perform operation
fdiv.d f20, f4, f25, rne # perform operation
fdiv.d f20, f4, f25, rtz # perform operation
fdiv.d f20, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
li x13, 0x511f69b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fdiv.d f13, f7, f24, dyn # perform operation
fdiv.d f13, f7, f24, rdn # perform operation
fdiv.d f13, f7, f24, rmm # perform operation
fdiv.d f13, f7, f24, rne # perform operation
fdiv.d f13, f7, f24, rtz # perform operation
fdiv.d f13, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
li x2, 0x3fb7579b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fdiv.d f2, f29, f19, dyn # perform operation
fdiv.d f2, f29, f19, rdn # perform operation
fdiv.d f2, f29, f19, rmm # perform operation
fdiv.d f2, f29, f19, rne # perform operation
fdiv.d f2, f29, f19, rtz # perform operation
fdiv.d f2, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
li x1, 0xf2730262 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fdiv.d f1, f4, f27, dyn # perform operation
fdiv.d f1, f4, f27, rdn # perform operation
fdiv.d f1, f4, f27, rmm # perform operation
fdiv.d f1, f4, f27, rne # perform operation
fdiv.d f1, f4, f27, rtz # perform operation
fdiv.d f1, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
li x3, 0xdff21572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fdiv.d f3, f10, f6, dyn # perform operation
fdiv.d f3, f10, f6, rdn # perform operation
fdiv.d f3, f10, f6, rmm # perform operation
fdiv.d f3, f10, f6, rne # perform operation
fdiv.d f3, f10, f6, rtz # perform operation
fdiv.d f3, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
li x31, 0xb2e2d28b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fdiv.d f31, f1, f22, dyn # perform operation
fdiv.d f31, f1, f22, rdn # perform operation
fdiv.d f31, f1, f22, rmm # perform operation
fdiv.d f31, f1, f22, rne # perform operation
fdiv.d f31, f1, f22, rtz # perform operation
fdiv.d f31, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
li x30, 0x138efb01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fdiv.d f30, f18, f8, dyn # perform operation
fdiv.d f30, f18, f8, rdn # perform operation
fdiv.d f30, f18, f8, rmm # perform operation
fdiv.d f30, f18, f8, rne # perform operation
fdiv.d f30, f18, f8, rtz # perform operation
fdiv.d f30, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
li x10, 0x571260ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fdiv.d f10, f30, f21, dyn # perform operation
fdiv.d f10, f30, f21, rdn # perform operation
fdiv.d f10, f30, f21, rmm # perform operation
fdiv.d f10, f30, f21, rne # perform operation
fdiv.d f10, f30, f21, rtz # perform operation
fdiv.d f10, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
li x23, 0x1d82e920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fdiv.d f23, f14, f22, dyn # perform operation
fdiv.d f23, f14, f22, rdn # perform operation
fdiv.d f23, f14, f22, rmm # perform operation
fdiv.d f23, f14, f22, rne # perform operation
fdiv.d f23, f14, f22, rtz # perform operation
fdiv.d f23, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
li x6, 0x73cb8179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fdiv.d f6, f8, f3, dyn # perform operation
fdiv.d f6, f8, f3, rdn # perform operation
fdiv.d f6, f8, f3, rmm # perform operation
fdiv.d f6, f8, f3, rne # perform operation
fdiv.d f6, f8, f3, rtz # perform operation
fdiv.d f6, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
li x25, 0x07016e78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff8000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fdiv.d f25, f4, f30, dyn # perform operation
fdiv.d f25, f4, f30, rdn # perform operation
fdiv.d f25, f4, f30, rmm # perform operation
fdiv.d f25, f4, f30, rne # perform operation
fdiv.d f25, f4, f30, rtz # perform operation
fdiv.d f25, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
li x15, 0x9c779ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
fdiv.d f15, f20, f28, dyn # perform operation
fdiv.d f15, f20, f28, rdn # perform operation
fdiv.d f15, f20, f28, rmm # perform operation
fdiv.d f15, f20, f28, rne # perform operation
fdiv.d f15, f20, f28, rtz # perform operation
fdiv.d f15, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
li x19, 0xd96a94f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fdiv.d f19, f1, f30, dyn # perform operation
fdiv.d f19, f1, f30, rdn # perform operation
fdiv.d f19, f1, f30, rmm # perform operation
fdiv.d f19, f1, f30, rne # perform operation
fdiv.d f19, f1, f30, rtz # perform operation
fdiv.d f19, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
li x2, 0x75d1bb7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fdiv.d f2, f20, f31, dyn # perform operation
fdiv.d f2, f20, f31, rdn # perform operation
fdiv.d f2, f20, f31, rmm # perform operation
fdiv.d f2, f20, f31, rne # perform operation
fdiv.d f2, f20, f31, rtz # perform operation
fdiv.d f2, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x17, 0xac62a33f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fdiv.d f17, f3, f28, dyn # perform operation
fdiv.d f17, f3, f28, rdn # perform operation
fdiv.d f17, f3, f28, rmm # perform operation
fdiv.d f17, f3, f28, rne # perform operation
fdiv.d f17, f3, f28, rtz # perform operation
fdiv.d f17, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
li x14, 0xf45cadee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
fdiv.d f14, f3, f26, dyn # perform operation
fdiv.d f14, f3, f26, rdn # perform operation
fdiv.d f14, f3, f26, rmm # perform operation
fdiv.d f14, f3, f26, rne # perform operation
fdiv.d f14, f3, f26, rtz # perform operation
fdiv.d f14, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
li x30, 0x08cee0ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fdiv.d f30, f5, f2, dyn # perform operation
fdiv.d f30, f5, f2, rdn # perform operation
fdiv.d f30, f5, f2, rmm # perform operation
fdiv.d f30, f5, f2, rne # perform operation
fdiv.d f30, f5, f2, rtz # perform operation
fdiv.d f30, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
li x15, 0x15ea1102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
fdiv.d f15, f19, f30, dyn # perform operation
fdiv.d f15, f19, f30, rdn # perform operation
fdiv.d f15, f19, f30, rmm # perform operation
fdiv.d f15, f19, f30, rne # perform operation
fdiv.d f15, f19, f30, rtz # perform operation
fdiv.d f15, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
li x31, 0xad738ecd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fdiv.d f31, f8, f5, dyn # perform operation
fdiv.d f31, f8, f5, rdn # perform operation
fdiv.d f31, f8, f5, rmm # perform operation
fdiv.d f31, f8, f5, rne # perform operation
fdiv.d f31, f8, f5, rtz # perform operation
fdiv.d f31, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f8, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
li x28, 0x2ecaefd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fdiv.d f28, f10, f27, dyn # perform operation
fdiv.d f28, f10, f27, rdn # perform operation
fdiv.d f28, f10, f27, rmm # perform operation
fdiv.d f28, f10, f27, rne # perform operation
fdiv.d f28, f10, f27, rtz # perform operation
fdiv.d f28, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
li x23, 0xdb7b25a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fdiv.d f23, f29, f19, dyn # perform operation
fdiv.d f23, f29, f19, rdn # perform operation
fdiv.d f23, f29, f19, rmm # perform operation
fdiv.d f23, f29, f19, rne # perform operation
fdiv.d f23, f29, f19, rtz # perform operation
fdiv.d f23, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
li x21, 0x367d0248 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fdiv.d f21, f31, f25, dyn # perform operation
fdiv.d f21, f31, f25, rdn # perform operation
fdiv.d f21, f31, f25, rmm # perform operation
fdiv.d f21, f31, f25, rne # perform operation
fdiv.d f21, f31, f25, rtz # perform operation
fdiv.d f21, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
li x2, 0xed023fe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fdiv.d f2, f26, f29, dyn # perform operation
fdiv.d f2, f26, f29, rdn # perform operation
fdiv.d f2, f26, f29, rmm # perform operation
fdiv.d f2, f26, f29, rne # perform operation
fdiv.d f2, f26, f29, rtz # perform operation
fdiv.d f2, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
li x27, 0x5f134ebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fdiv.d f27, f7, f20, dyn # perform operation
fdiv.d f27, f7, f20, rdn # perform operation
fdiv.d f27, f7, f20, rmm # perform operation
fdiv.d f27, f7, f20, rne # perform operation
fdiv.d f27, f7, f20, rtz # perform operation
fdiv.d f27, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
li x19, 0x537f22e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
fdiv.d f19, f26, f23, dyn # perform operation
fdiv.d f19, f26, f23, rdn # perform operation
fdiv.d f19, f26, f23, rmm # perform operation
fdiv.d f19, f26, f23, rne # perform operation
fdiv.d f19, f26, f23, rtz # perform operation
fdiv.d f19, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
li x17, 0x2e4f3d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fdiv.d f17, f16, f23, dyn # perform operation
fdiv.d f17, f16, f23, rdn # perform operation
fdiv.d f17, f16, f23, rmm # perform operation
fdiv.d f17, f16, f23, rne # perform operation
fdiv.d f17, f16, f23, rtz # perform operation
fdiv.d f17, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f16, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
li x18, 0x24a67f28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fdiv.d f18, f13, f24, dyn # perform operation
fdiv.d f18, f13, f24, rdn # perform operation
fdiv.d f18, f13, f24, rmm # perform operation
fdiv.d f18, f13, f24, rne # perform operation
fdiv.d f18, f13, f24, rtz # perform operation
fdiv.d f18, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
li x12, 0xb55257b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fefffffffffffff from memory into f15
fdiv.d f12, f10, f15, dyn # perform operation
fdiv.d f12, f10, f15, rdn # perform operation
fdiv.d f12, f10, f15, rmm # perform operation
fdiv.d f12, f10, f15, rne # perform operation
fdiv.d f12, f10, f15, rtz # perform operation
fdiv.d f12, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
li x4, 0xd58b75b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fdiv.d f4, f7, f26, dyn # perform operation
fdiv.d f4, f7, f26, rdn # perform operation
fdiv.d f4, f7, f26, rmm # perform operation
fdiv.d f4, f7, f26, rne # perform operation
fdiv.d f4, f7, f26, rtz # perform operation
fdiv.d f4, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
li x28, 0xf2abb20b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fdiv.d f28, f7, f19, dyn # perform operation
fdiv.d f28, f7, f19, rdn # perform operation
fdiv.d f28, f7, f19, rmm # perform operation
fdiv.d f28, f7, f19, rne # perform operation
fdiv.d f28, f7, f19, rtz # perform operation
fdiv.d f28, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f7, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
li x19, 0x4121b5f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fdiv.d f19, f8, f21, dyn # perform operation
fdiv.d f19, f8, f21, rdn # perform operation
fdiv.d f19, f8, f21, rmm # perform operation
fdiv.d f19, f8, f21, rne # perform operation
fdiv.d f19, f8, f21, rtz # perform operation
fdiv.d f19, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f8, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
li x8, 0xc9d9b7e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fdiv.d f8, f31, f18, dyn # perform operation
fdiv.d f8, f31, f18, rdn # perform operation
fdiv.d f8, f31, f18, rmm # perform operation
fdiv.d f8, f31, f18, rne # perform operation
fdiv.d f8, f31, f18, rtz # perform operation
fdiv.d f8, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f31, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
li x11, 0x59821975 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fdiv.d f11, f17, f28, dyn # perform operation
fdiv.d f11, f17, f28, rdn # perform operation
fdiv.d f11, f17, f28, rmm # perform operation
fdiv.d f11, f17, f28, rne # perform operation
fdiv.d f11, f17, f28, rtz # perform operation
fdiv.d f11, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
li x23, 0x87710486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fdiv.d f23, f5, f26, dyn # perform operation
fdiv.d f23, f5, f26, rdn # perform operation
fdiv.d f23, f5, f26, rmm # perform operation
fdiv.d f23, f5, f26, rne # perform operation
fdiv.d f23, f5, f26, rtz # perform operation
fdiv.d f23, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f5, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
li x24, 0xb117fa28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fdiv.d f24, f4, f30, dyn # perform operation
fdiv.d f24, f4, f30, rdn # perform operation
fdiv.d f24, f4, f30, rmm # perform operation
fdiv.d f24, f4, f30, rne # perform operation
fdiv.d f24, f4, f30, rtz # perform operation
fdiv.d f24, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f4, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
li x31, 0x22096f85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fdiv.d f31, f28, f26, dyn # perform operation
fdiv.d f31, f28, f26, rdn # perform operation
fdiv.d f31, f28, f26, rmm # perform operation
fdiv.d f31, f28, f26, rne # perform operation
fdiv.d f31, f28, f26, rtz # perform operation
fdiv.d f31, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
li x27, 0x8e3e7df2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xfff0000000000000 from memory into f4
fdiv.d f27, f13, f4, dyn # perform operation
fdiv.d f27, f13, f4, rdn # perform operation
fdiv.d f27, f13, f4, rmm # perform operation
fdiv.d f27, f13, f4, rne # perform operation
fdiv.d f27, f13, f4, rtz # perform operation
fdiv.d f27, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
li x5, 0x6af4859d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fdiv.d f5, f1, f21, dyn # perform operation
fdiv.d f5, f1, f21, rdn # perform operation
fdiv.d f5, f1, f21, rmm # perform operation
fdiv.d f5, f1, f21, rne # perform operation
fdiv.d f5, f1, f21, rtz # perform operation
fdiv.d f5, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
li x16, 0x0f7c2fb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fdiv.d f16, f24, f8, dyn # perform operation
fdiv.d f16, f24, f8, rdn # perform operation
fdiv.d f16, f24, f8, rmm # perform operation
fdiv.d f16, f24, f8, rne # perform operation
fdiv.d f16, f24, f8, rtz # perform operation
fdiv.d f16, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f24, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
li x26, 0xc12faa21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fdiv.d f26, f8, f18, dyn # perform operation
fdiv.d f26, f8, f18, rdn # perform operation
fdiv.d f26, f8, f18, rmm # perform operation
fdiv.d f26, f8, f18, rne # perform operation
fdiv.d f26, f8, f18, rtz # perform operation
fdiv.d f26, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
li x3, 0xfcb95448 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fdiv.d f3, f4, f22, dyn # perform operation
fdiv.d f3, f4, f22, rdn # perform operation
fdiv.d f3, f4, f22, rmm # perform operation
fdiv.d f3, f4, f22, rne # perform operation
fdiv.d f3, f4, f22, rtz # perform operation
fdiv.d f3, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
li x10, 0xd2f5b75a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
fdiv.d f10, f1, f24, dyn # perform operation
fdiv.d f10, f1, f24, rdn # perform operation
fdiv.d f10, f1, f24, rmm # perform operation
fdiv.d f10, f1, f24, rne # perform operation
fdiv.d f10, f1, f24, rtz # perform operation
fdiv.d f10, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
li x15, 0x4323c798 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fdiv.d f15, f29, f2, dyn # perform operation
fdiv.d f15, f29, f2, rdn # perform operation
fdiv.d f15, f29, f2, rmm # perform operation
fdiv.d f15, f29, f2, rne # perform operation
fdiv.d f15, f29, f2, rtz # perform operation
fdiv.d f15, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
li x28, 0x5f2ad558 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fdiv.d f28, f6, f15, dyn # perform operation
fdiv.d f28, f6, f15, rdn # perform operation
fdiv.d f28, f6, f15, rmm # perform operation
fdiv.d f28, f6, f15, rne # perform operation
fdiv.d f28, f6, f15, rtz # perform operation
fdiv.d f28, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
li x15, 0x2cc53b3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fdiv.d f15, f8, f25, dyn # perform operation
fdiv.d f15, f8, f25, rdn # perform operation
fdiv.d f15, f8, f25, rmm # perform operation
fdiv.d f15, f8, f25, rne # perform operation
fdiv.d f15, f8, f25, rtz # perform operation
fdiv.d f15, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
li x16, 0xa8b20633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fdiv.d f16, f4, f27, dyn # perform operation
fdiv.d f16, f4, f27, rdn # perform operation
fdiv.d f16, f4, f27, rmm # perform operation
fdiv.d f16, f4, f27, rne # perform operation
fdiv.d f16, f4, f27, rtz # perform operation
fdiv.d f16, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
li x12, 0xb96bc179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fdiv.d f12, f16, f19, dyn # perform operation
fdiv.d f12, f16, f19, rdn # perform operation
fdiv.d f12, f16, f19, rmm # perform operation
fdiv.d f12, f16, f19, rne # perform operation
fdiv.d f12, f16, f19, rtz # perform operation
fdiv.d f12, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
li x26, 0x24c66f78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f26, f7, f30, dyn # perform operation
fdiv.d f26, f7, f30, rdn # perform operation
fdiv.d f26, f7, f30, rmm # perform operation
fdiv.d f26, f7, f30, rne # perform operation
fdiv.d f26, f7, f30, rtz # perform operation
fdiv.d f26, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
li x27, 0x194a3f57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
fdiv.d f27, f19, f3, dyn # perform operation
fdiv.d f27, f19, f3, rdn # perform operation
fdiv.d f27, f19, f3, rmm # perform operation
fdiv.d f27, f19, f3, rne # perform operation
fdiv.d f27, f19, f3, rtz # perform operation
fdiv.d f27, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
li x28, 0x02888046 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fdiv.d f28, f29, f15, dyn # perform operation
fdiv.d f28, f29, f15, rdn # perform operation
fdiv.d f28, f29, f15, rmm # perform operation
fdiv.d f28, f29, f15, rne # perform operation
fdiv.d f28, f29, f15, rtz # perform operation
fdiv.d f28, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
li x23, 0x353a77dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
fdiv.d f23, f8, f22, dyn # perform operation
fdiv.d f23, f8, f22, rdn # perform operation
fdiv.d f23, f8, f22, rmm # perform operation
fdiv.d f23, f8, f22, rne # perform operation
fdiv.d f23, f8, f22, rtz # perform operation
fdiv.d f23, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
li x29, 0x3b66875d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
fdiv.d f29, f6, f4, dyn # perform operation
fdiv.d f29, f6, f4, rdn # perform operation
fdiv.d f29, f6, f4, rmm # perform operation
fdiv.d f29, f6, f4, rne # perform operation
fdiv.d f29, f6, f4, rtz # perform operation
fdiv.d f29, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
li x24, 0x3b8a5277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fdiv.d f24, f28, f19, dyn # perform operation
fdiv.d f24, f28, f19, rdn # perform operation
fdiv.d f24, f28, f19, rmm # perform operation
fdiv.d f24, f28, f19, rne # perform operation
fdiv.d f24, f28, f19, rtz # perform operation
fdiv.d f24, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f28, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
li x25, 0x0745f7b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fdiv.d f25, f11, f2, dyn # perform operation
fdiv.d f25, f11, f2, rdn # perform operation
fdiv.d f25, f11, f2, rmm # perform operation
fdiv.d f25, f11, f2, rne # perform operation
fdiv.d f25, f11, f2, rtz # perform operation
fdiv.d f25, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
li x6, 0x2df3d461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fdiv.d f6, f9, f3, dyn # perform operation
fdiv.d f6, f9, f3, rdn # perform operation
fdiv.d f6, f9, f3, rmm # perform operation
fdiv.d f6, f9, f3, rne # perform operation
fdiv.d f6, f9, f3, rtz # perform operation
fdiv.d f6, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
li x22, 0x824f2239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fdiv.d f22, f1, f9, dyn # perform operation
fdiv.d f22, f1, f9, rdn # perform operation
fdiv.d f22, f1, f9, rmm # perform operation
fdiv.d f22, f1, f9, rne # perform operation
fdiv.d f22, f1, f9, rtz # perform operation
fdiv.d f22, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
li x10, 0xd1d70563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fdiv.d f10, f30, f2, dyn # perform operation
fdiv.d f10, f30, f2, rdn # perform operation
fdiv.d f10, f30, f2, rmm # perform operation
fdiv.d f10, f30, f2, rne # perform operation
fdiv.d f10, f30, f2, rtz # perform operation
fdiv.d f10, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
li x3, 0x7a86f93f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fdiv.d f3, f2, f25, dyn # perform operation
fdiv.d f3, f2, f25, rdn # perform operation
fdiv.d f3, f2, f25, rmm # perform operation
fdiv.d f3, f2, f25, rne # perform operation
fdiv.d f3, f2, f25, rtz # perform operation
fdiv.d f3, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
li x19, 0x248f8652 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
fdiv.d f19, f12, f22, dyn # perform operation
fdiv.d f19, f12, f22, rdn # perform operation
fdiv.d f19, f12, f22, rmm # perform operation
fdiv.d f19, f12, f22, rne # perform operation
fdiv.d f19, f12, f22, rtz # perform operation
fdiv.d f19, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
li x6, 0x2009e37a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fdiv.d f6, f23, f22, dyn # perform operation
fdiv.d f6, f23, f22, rdn # perform operation
fdiv.d f6, f23, f22, rmm # perform operation
fdiv.d f6, f23, f22, rne # perform operation
fdiv.d f6, f23, f22, rtz # perform operation
fdiv.d f6, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f23, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
li x28, 0xb32f7c44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fdiv.d f28, f21, f29, dyn # perform operation
fdiv.d f28, f21, f29, rdn # perform operation
fdiv.d f28, f21, f29, rmm # perform operation
fdiv.d f28, f21, f29, rne # perform operation
fdiv.d f28, f21, f29, rtz # perform operation
fdiv.d f28, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
li x22, 0xe59c1363 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fdiv.d f22, f17, f24, dyn # perform operation
fdiv.d f22, f17, f24, rdn # perform operation
fdiv.d f22, f17, f24, rmm # perform operation
fdiv.d f22, f17, f24, rne # perform operation
fdiv.d f22, f17, f24, rtz # perform operation
fdiv.d f22, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
li x12, 0x0a87bf9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fdiv.d f12, f3, f27, dyn # perform operation
fdiv.d f12, f3, f27, rdn # perform operation
fdiv.d f12, f3, f27, rmm # perform operation
fdiv.d f12, f3, f27, rne # perform operation
fdiv.d f12, f3, f27, rtz # perform operation
fdiv.d f12, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
li x20, 0x1676c4d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fdiv.d f20, f5, f24, dyn # perform operation
fdiv.d f20, f5, f24, rdn # perform operation
fdiv.d f20, f5, f24, rmm # perform operation
fdiv.d f20, f5, f24, rne # perform operation
fdiv.d f20, f5, f24, rtz # perform operation
fdiv.d f20, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
li x13, 0x3603a5dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
fdiv.d f13, f22, f16, dyn # perform operation
fdiv.d f13, f22, f16, rdn # perform operation
fdiv.d f13, f22, f16, rmm # perform operation
fdiv.d f13, f22, f16, rne # perform operation
fdiv.d f13, f22, f16, rtz # perform operation
fdiv.d f13, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
li x29, 0xe97d5d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fdiv.d f29, f28, f16, dyn # perform operation
fdiv.d f29, f28, f16, rdn # perform operation
fdiv.d f29, f28, f16, rmm # perform operation
fdiv.d f29, f28, f16, rne # perform operation
fdiv.d f29, f28, f16, rtz # perform operation
fdiv.d f29, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
li x22, 0x75650985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fdiv.d f22, f6, f26, dyn # perform operation
fdiv.d f22, f6, f26, rdn # perform operation
fdiv.d f22, f6, f26, rmm # perform operation
fdiv.d f22, f6, f26, rne # perform operation
fdiv.d f22, f6, f26, rtz # perform operation
fdiv.d f22, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
li x7, 0xd538195f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xc000000000000000 from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
fdiv.d f7, f26, f4, dyn # perform operation
fdiv.d f7, f26, f4, rdn # perform operation
fdiv.d f7, f26, f4, rmm # perform operation
fdiv.d f7, f26, f4, rne # perform operation
fdiv.d f7, f26, f4, rtz # perform operation
fdiv.d f7, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
li x26, 0xeb0f746e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
fdiv.d f26, f25, f22, dyn # perform operation
fdiv.d f26, f25, f22, rdn # perform operation
fdiv.d f26, f25, f22, rmm # perform operation
fdiv.d f26, f25, f22, rne # perform operation
fdiv.d f26, f25, f22, rtz # perform operation
fdiv.d f26, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
li x13, 0x1dc99d42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
fdiv.d f13, f11, f23, dyn # perform operation
fdiv.d f13, f11, f23, rdn # perform operation
fdiv.d f13, f11, f23, rmm # perform operation
fdiv.d f13, f11, f23, rne # perform operation
fdiv.d f13, f11, f23, rtz # perform operation
fdiv.d f13, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
li x23, 0x5097ea2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fdiv.d f23, f25, f17, dyn # perform operation
fdiv.d f23, f25, f17, rdn # perform operation
fdiv.d f23, f25, f17, rmm # perform operation
fdiv.d f23, f25, f17, rne # perform operation
fdiv.d f23, f25, f17, rtz # perform operation
fdiv.d f23, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
li x21, 0x8cc14bcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fdiv.d f21, f6, f1, dyn # perform operation
fdiv.d f21, f6, f1, rdn # perform operation
fdiv.d f21, f6, f1, rmm # perform operation
fdiv.d f21, f6, f1, rne # perform operation
fdiv.d f21, f6, f1, rtz # perform operation
fdiv.d f21, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
li x18, 0xde0dc323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fdiv.d f18, f9, f16, dyn # perform operation
fdiv.d f18, f9, f16, rdn # perform operation
fdiv.d f18, f9, f16, rmm # perform operation
fdiv.d f18, f9, f16, rne # perform operation
fdiv.d f18, f9, f16, rtz # perform operation
fdiv.d f18, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
li x10, 0x9525ba62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
fdiv.d f10, f25, f21, dyn # perform operation
fdiv.d f10, f25, f21, rdn # perform operation
fdiv.d f10, f25, f21, rmm # perform operation
fdiv.d f10, f25, f21, rne # perform operation
fdiv.d f10, f25, f21, rtz # perform operation
fdiv.d f10, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
li x20, 0x05445569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fdiv.d f20, f31, f13, dyn # perform operation
fdiv.d f20, f31, f13, rdn # perform operation
fdiv.d f20, f31, f13, rmm # perform operation
fdiv.d f20, f31, f13, rne # perform operation
fdiv.d f20, f31, f13, rtz # perform operation
fdiv.d f20, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
li x13, 0x8dae60c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fdiv.d f13, f11, f30, dyn # perform operation
fdiv.d f13, f11, f30, rdn # perform operation
fdiv.d f13, f11, f30, rmm # perform operation
fdiv.d f13, f11, f30, rne # perform operation
fdiv.d f13, f11, f30, rtz # perform operation
fdiv.d f13, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
li x7, 0xb096352c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xc000000000000000 from memory into f4
fdiv.d f7, f26, f4, dyn # perform operation
fdiv.d f7, f26, f4, rdn # perform operation
fdiv.d f7, f26, f4, rmm # perform operation
fdiv.d f7, f26, f4, rne # perform operation
fdiv.d f7, f26, f4, rtz # perform operation
fdiv.d f7, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
li x8, 0x93a5d7d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fdiv.d f8, f21, f18, dyn # perform operation
fdiv.d f8, f21, f18, rdn # perform operation
fdiv.d f8, f21, f18, rmm # perform operation
fdiv.d f8, f21, f18, rne # perform operation
fdiv.d f8, f21, f18, rtz # perform operation
fdiv.d f8, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f21, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
li x23, 0xeb90ec47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fdiv.d f23, f8, f30, dyn # perform operation
fdiv.d f23, f8, f30, rdn # perform operation
fdiv.d f23, f8, f30, rmm # perform operation
fdiv.d f23, f8, f30, rne # perform operation
fdiv.d f23, f8, f30, rtz # perform operation
fdiv.d f23, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
li x23, 0xb607a5da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fdiv.d f23, f1, f19, dyn # perform operation
fdiv.d f23, f1, f19, rdn # perform operation
fdiv.d f23, f1, f19, rmm # perform operation
fdiv.d f23, f1, f19, rne # perform operation
fdiv.d f23, f1, f19, rtz # perform operation
fdiv.d f23, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
li x29, 0x04f34a1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0010000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
fdiv.d f29, f4, f31, dyn # perform operation
fdiv.d f29, f4, f31, rdn # perform operation
fdiv.d f29, f4, f31, rmm # perform operation
fdiv.d f29, f4, f31, rne # perform operation
fdiv.d f29, f4, f31, rtz # perform operation
fdiv.d f29, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
li x24, 0x2e45b983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fdiv.d f24, f10, f1, dyn # perform operation
fdiv.d f24, f10, f1, rdn # perform operation
fdiv.d f24, f10, f1, rmm # perform operation
fdiv.d f24, f10, f1, rne # perform operation
fdiv.d f24, f10, f1, rtz # perform operation
fdiv.d f24, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
li x21, 0x341da1f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fdiv.d f21, f13, f14, dyn # perform operation
fdiv.d f21, f13, f14, rdn # perform operation
fdiv.d f21, f13, f14, rmm # perform operation
fdiv.d f21, f13, f14, rne # perform operation
fdiv.d f21, f13, f14, rtz # perform operation
fdiv.d f21, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
li x17, 0x9782b647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
fdiv.d f17, f18, f19, dyn # perform operation
fdiv.d f17, f18, f19, rdn # perform operation
fdiv.d f17, f18, f19, rmm # perform operation
fdiv.d f17, f18, f19, rne # perform operation
fdiv.d f17, f18, f19, rtz # perform operation
fdiv.d f17, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
li x28, 0xb9d4512e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
fdiv.d f28, f30, f4, dyn # perform operation
fdiv.d f28, f30, f4, rdn # perform operation
fdiv.d f28, f30, f4, rmm # perform operation
fdiv.d f28, f30, f4, rne # perform operation
fdiv.d f28, f30, f4, rtz # perform operation
fdiv.d f28, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
li x21, 0x5d90690b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fdiv.d f21, f22, f19, dyn # perform operation
fdiv.d f21, f22, f19, rdn # perform operation
fdiv.d f21, f22, f19, rmm # perform operation
fdiv.d f21, f22, f19, rne # perform operation
fdiv.d f21, f22, f19, rtz # perform operation
fdiv.d f21, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
li x10, 0xe4d5a096 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fdiv.d f10, f21, f26, dyn # perform operation
fdiv.d f10, f21, f26, rdn # perform operation
fdiv.d f10, f21, f26, rmm # perform operation
fdiv.d f10, f21, f26, rne # perform operation
fdiv.d f10, f21, f26, rtz # perform operation
fdiv.d f10, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
li x9, 0x980cba38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fdiv.d f9, f18, f30, dyn # perform operation
fdiv.d f9, f18, f30, rdn # perform operation
fdiv.d f9, f18, f30, rmm # perform operation
fdiv.d f9, f18, f30, rne # perform operation
fdiv.d f9, f18, f30, rtz # perform operation
fdiv.d f9, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f18, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
li x12, 0xf34beee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fdiv.d f12, f3, f26, dyn # perform operation
fdiv.d f12, f3, f26, rdn # perform operation
fdiv.d f12, f3, f26, rmm # perform operation
fdiv.d f12, f3, f26, rne # perform operation
fdiv.d f12, f3, f26, rtz # perform operation
fdiv.d f12, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
li x24, 0xad84f4f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fdiv.d f24, f10, f18, dyn # perform operation
fdiv.d f24, f10, f18, rdn # perform operation
fdiv.d f24, f10, f18, rmm # perform operation
fdiv.d f24, f10, f18, rne # perform operation
fdiv.d f24, f10, f18, rtz # perform operation
fdiv.d f24, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
li x28, 0x5c111f68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fdiv.d f28, f21, f8, dyn # perform operation
fdiv.d f28, f21, f8, rdn # perform operation
fdiv.d f28, f21, f8, rmm # perform operation
fdiv.d f28, f21, f8, rne # perform operation
fdiv.d f28, f21, f8, rtz # perform operation
fdiv.d f28, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
li x23, 0xad0a5406 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fdiv.d f23, f25, f21, dyn # perform operation
fdiv.d f23, f25, f21, rdn # perform operation
fdiv.d f23, f25, f21, rmm # perform operation
fdiv.d f23, f25, f21, rne # perform operation
fdiv.d f23, f25, f21, rtz # perform operation
fdiv.d f23, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
li x25, 0xdbe4907e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fdiv.d f25, f16, f4, dyn # perform operation
fdiv.d f25, f16, f4, rdn # perform operation
fdiv.d f25, f16, f4, rmm # perform operation
fdiv.d f25, f16, f4, rne # perform operation
fdiv.d f25, f16, f4, rtz # perform operation
fdiv.d f25, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
li x26, 0xd64bbc32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fdiv.d f26, f24, f20, dyn # perform operation
fdiv.d f26, f24, f20, rdn # perform operation
fdiv.d f26, f24, f20, rmm # perform operation
fdiv.d f26, f24, f20, rne # perform operation
fdiv.d f26, f24, f20, rtz # perform operation
fdiv.d f26, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
li x12, 0xdda92e6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fdiv.d f12, f11, f20, dyn # perform operation
fdiv.d f12, f11, f20, rdn # perform operation
fdiv.d f12, f11, f20, rmm # perform operation
fdiv.d f12, f11, f20, rne # perform operation
fdiv.d f12, f11, f20, rtz # perform operation
fdiv.d f12, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
li x20, 0x04c4fde7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
fdiv.d f20, f24, f29, dyn # perform operation
fdiv.d f20, f24, f29, rdn # perform operation
fdiv.d f20, f24, f29, rmm # perform operation
fdiv.d f20, f24, f29, rne # perform operation
fdiv.d f20, f24, f29, rtz # perform operation
fdiv.d f20, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
li x9, 0x11a4cbf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fdiv.d f9, f6, f30, dyn # perform operation
fdiv.d f9, f6, f30, rdn # perform operation
fdiv.d f9, f6, f30, rmm # perform operation
fdiv.d f9, f6, f30, rne # perform operation
fdiv.d f9, f6, f30, rtz # perform operation
fdiv.d f9, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
li x7, 0x64161de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fdiv.d f7, f28, f9, dyn # perform operation
fdiv.d f7, f28, f9, rdn # perform operation
fdiv.d f7, f28, f9, rmm # perform operation
fdiv.d f7, f28, f9, rne # perform operation
fdiv.d f7, f28, f9, rtz # perform operation
fdiv.d f7, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
li x21, 0xa2367490 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fdiv.d f21, f5, f6, dyn # perform operation
fdiv.d f21, f5, f6, rdn # perform operation
fdiv.d f21, f5, f6, rmm # perform operation
fdiv.d f21, f5, f6, rne # perform operation
fdiv.d f21, f5, f6, rtz # perform operation
fdiv.d f21, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
li x7, 0xe7819eb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fdiv.d f7, f29, f1, dyn # perform operation
fdiv.d f7, f29, f1, rdn # perform operation
fdiv.d f7, f29, f1, rmm # perform operation
fdiv.d f7, f29, f1, rne # perform operation
fdiv.d f7, f29, f1, rtz # perform operation
fdiv.d f7, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
li x3, 0xf868ecb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fdiv.d f3, f4, f14, dyn # perform operation
fdiv.d f3, f4, f14, rdn # perform operation
fdiv.d f3, f4, f14, rmm # perform operation
fdiv.d f3, f4, f14, rne # perform operation
fdiv.d f3, f4, f14, rtz # perform operation
fdiv.d f3, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
li x22, 0x8f39e6c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fdiv.d f22, f19, f9, dyn # perform operation
fdiv.d f22, f19, f9, rdn # perform operation
fdiv.d f22, f19, f9, rmm # perform operation
fdiv.d f22, f19, f9, rne # perform operation
fdiv.d f22, f19, f9, rtz # perform operation
fdiv.d f22, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
li x20, 0x6cd77722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fdiv.d f20, f23, f19, dyn # perform operation
fdiv.d f20, f23, f19, rdn # perform operation
fdiv.d f20, f23, f19, rmm # perform operation
fdiv.d f20, f23, f19, rne # perform operation
fdiv.d f20, f23, f19, rtz # perform operation
fdiv.d f20, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
li x13, 0x59325e3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fdiv.d f13, f1, f3, dyn # perform operation
fdiv.d f13, f1, f3, rdn # perform operation
fdiv.d f13, f1, f3, rmm # perform operation
fdiv.d f13, f1, f3, rne # perform operation
fdiv.d f13, f1, f3, rtz # perform operation
fdiv.d f13, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
li x26, 0x247f6804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fdiv.d f26, f6, f13, dyn # perform operation
fdiv.d f26, f6, f13, rdn # perform operation
fdiv.d f26, f6, f13, rmm # perform operation
fdiv.d f26, f6, f13, rne # perform operation
fdiv.d f26, f6, f13, rtz # perform operation
fdiv.d f26, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
li x7, 0x27800f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fdiv.d f7, f30, f12, dyn # perform operation
fdiv.d f7, f30, f12, rdn # perform operation
fdiv.d f7, f30, f12, rmm # perform operation
fdiv.d f7, f30, f12, rne # perform operation
fdiv.d f7, f30, f12, rtz # perform operation
fdiv.d f7, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
li x27, 0x59b72bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fdiv.d f27, f11, f9, dyn # perform operation
fdiv.d f27, f11, f9, rdn # perform operation
fdiv.d f27, f11, f9, rmm # perform operation
fdiv.d f27, f11, f9, rne # perform operation
fdiv.d f27, f11, f9, rtz # perform operation
fdiv.d f27, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
li x19, 0xd474d608 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fdiv.d f19, f10, f14, dyn # perform operation
fdiv.d f19, f10, f14, rdn # perform operation
fdiv.d f19, f10, f14, rmm # perform operation
fdiv.d f19, f10, f14, rne # perform operation
fdiv.d f19, f10, f14, rtz # perform operation
fdiv.d f19, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f10, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
li x14, 0x3da92215 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fdiv.d f14, f2, f13, dyn # perform operation
fdiv.d f14, f2, f13, rdn # perform operation
fdiv.d f14, f2, f13, rmm # perform operation
fdiv.d f14, f2, f13, rne # perform operation
fdiv.d f14, f2, f13, rtz # perform operation
fdiv.d f14, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
li x5, 0xaae8924f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fdiv.d f5, f8, f27, dyn # perform operation
fdiv.d f5, f8, f27, rdn # perform operation
fdiv.d f5, f8, f27, rmm # perform operation
fdiv.d f5, f8, f27, rne # perform operation
fdiv.d f5, f8, f27, rtz # perform operation
fdiv.d f5, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
li x11, 0xe141f477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
fdiv.d f11, f13, f25, dyn # perform operation
fdiv.d f11, f13, f25, rdn # perform operation
fdiv.d f11, f13, f25, rmm # perform operation
fdiv.d f11, f13, f25, rne # perform operation
fdiv.d f11, f13, f25, rtz # perform operation
fdiv.d f11, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
li x13, 0x05dd9306 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fdiv.d f13, f31, f7, dyn # perform operation
fdiv.d f13, f31, f7, rdn # perform operation
fdiv.d f13, f31, f7, rmm # perform operation
fdiv.d f13, f31, f7, rne # perform operation
fdiv.d f13, f31, f7, rtz # perform operation
fdiv.d f13, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
li x20, 0xf1d02e7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fdiv.d f20, f17, f6, dyn # perform operation
fdiv.d f20, f17, f6, rdn # perform operation
fdiv.d f20, f17, f6, rmm # perform operation
fdiv.d f20, f17, f6, rne # perform operation
fdiv.d f20, f17, f6, rtz # perform operation
fdiv.d f20, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f17, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
li x27, 0x402cb789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fdiv.d f27, f22, f2, dyn # perform operation
fdiv.d f27, f22, f2, rdn # perform operation
fdiv.d f27, f22, f2, rmm # perform operation
fdiv.d f27, f22, f2, rne # perform operation
fdiv.d f27, f22, f2, rtz # perform operation
fdiv.d f27, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
li x4, 0x6c52b370 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fdiv.d f4, f20, f27, dyn # perform operation
fdiv.d f4, f20, f27, rdn # perform operation
fdiv.d f4, f20, f27, rmm # perform operation
fdiv.d f4, f20, f27, rne # perform operation
fdiv.d f4, f20, f27, rtz # perform operation
fdiv.d f4, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
li x31, 0xcc6bbce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff8000000000000 from memory into f4
fdiv.d f31, f24, f4, dyn # perform operation
fdiv.d f31, f24, f4, rdn # perform operation
fdiv.d f31, f24, f4, rmm # perform operation
fdiv.d f31, f24, f4, rne # perform operation
fdiv.d f31, f24, f4, rtz # perform operation
fdiv.d f31, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
li x24, 0x810e310a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
fdiv.d f24, f27, f3, dyn # perform operation
fdiv.d f24, f27, f3, rdn # perform operation
fdiv.d f24, f27, f3, rmm # perform operation
fdiv.d f24, f27, f3, rne # perform operation
fdiv.d f24, f27, f3, rtz # perform operation
fdiv.d f24, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
li x9, 0x13811ec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fdiv.d f9, f7, f27, dyn # perform operation
fdiv.d f9, f7, f27, rdn # perform operation
fdiv.d f9, f7, f27, rmm # perform operation
fdiv.d f9, f7, f27, rne # perform operation
fdiv.d f9, f7, f27, rtz # perform operation
fdiv.d f9, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
li x17, 0xd1757cda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
fdiv.d f17, f25, f27, dyn # perform operation
fdiv.d f17, f25, f27, rdn # perform operation
fdiv.d f17, f25, f27, rmm # perform operation
fdiv.d f17, f25, f27, rne # perform operation
fdiv.d f17, f25, f27, rtz # perform operation
fdiv.d f17, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
li x2, 0x8ee15347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fdiv.d f2, f14, f19, dyn # perform operation
fdiv.d f2, f14, f19, rdn # perform operation
fdiv.d f2, f14, f19, rmm # perform operation
fdiv.d f2, f14, f19, rne # perform operation
fdiv.d f2, f14, f19, rtz # perform operation
fdiv.d f2, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
li x4, 0xef5a31b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
fdiv.d f4, f14, f24, dyn # perform operation
fdiv.d f4, f14, f24, rdn # perform operation
fdiv.d f4, f14, f24, rmm # perform operation
fdiv.d f4, f14, f24, rne # perform operation
fdiv.d f4, f14, f24, rtz # perform operation
fdiv.d f4, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
li x14, 0x4fe64539 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fdiv.d f14, f2, f28, dyn # perform operation
fdiv.d f14, f2, f28, rdn # perform operation
fdiv.d f14, f2, f28, rmm # perform operation
fdiv.d f14, f2, f28, rne # perform operation
fdiv.d f14, f2, f28, rtz # perform operation
fdiv.d f14, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
li x22, 0x385f3ba8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fdiv.d f22, f30, f7, dyn # perform operation
fdiv.d f22, f30, f7, rdn # perform operation
fdiv.d f22, f30, f7, rmm # perform operation
fdiv.d f22, f30, f7, rne # perform operation
fdiv.d f22, f30, f7, rtz # perform operation
fdiv.d f22, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
li x8, 0xf9e12c9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fdiv.d f8, f5, f30, dyn # perform operation
fdiv.d f8, f5, f30, rdn # perform operation
fdiv.d f8, f5, f30, rmm # perform operation
fdiv.d f8, f5, f30, rne # perform operation
fdiv.d f8, f5, f30, rtz # perform operation
fdiv.d f8, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
li x9, 0xf1c8d0de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fdiv.d f9, f5, f12, dyn # perform operation
fdiv.d f9, f5, f12, rdn # perform operation
fdiv.d f9, f5, f12, rmm # perform operation
fdiv.d f9, f5, f12, rne # perform operation
fdiv.d f9, f5, f12, rtz # perform operation
fdiv.d f9, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
li x21, 0x8a83ac39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f21, f13, f30, dyn # perform operation
fdiv.d f21, f13, f30, rdn # perform operation
fdiv.d f21, f13, f30, rmm # perform operation
fdiv.d f21, f13, f30, rne # perform operation
fdiv.d f21, f13, f30, rtz # perform operation
fdiv.d f21, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
li x4, 0x9f6951ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fdiv.d f4, f26, f23, dyn # perform operation
fdiv.d f4, f26, f23, rdn # perform operation
fdiv.d f4, f26, f23, rmm # perform operation
fdiv.d f4, f26, f23, rne # perform operation
fdiv.d f4, f26, f23, rtz # perform operation
fdiv.d f4, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
li x21, 0xd681c2f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fdiv.d f21, f19, f7, dyn # perform operation
fdiv.d f21, f19, f7, rdn # perform operation
fdiv.d f21, f19, f7, rmm # perform operation
fdiv.d f21, f19, f7, rne # perform operation
fdiv.d f21, f19, f7, rtz # perform operation
fdiv.d f21, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
li x1, 0x30c99eef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fdiv.d f1, f6, f12, dyn # perform operation
fdiv.d f1, f6, f12, rdn # perform operation
fdiv.d f1, f6, f12, rmm # perform operation
fdiv.d f1, f6, f12, rne # perform operation
fdiv.d f1, f6, f12, rtz # perform operation
fdiv.d f1, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
li x28, 0xe2af3635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fdiv.d f28, f30, f6, dyn # perform operation
fdiv.d f28, f30, f6, rdn # perform operation
fdiv.d f28, f30, f6, rmm # perform operation
fdiv.d f28, f30, f6, rne # perform operation
fdiv.d f28, f30, f6, rtz # perform operation
fdiv.d f28, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
li x29, 0xe247b4db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fdiv.d f29, f21, f19, dyn # perform operation
fdiv.d f29, f21, f19, rdn # perform operation
fdiv.d f29, f21, f19, rmm # perform operation
fdiv.d f29, f21, f19, rne # perform operation
fdiv.d f29, f21, f19, rtz # perform operation
fdiv.d f29, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
li x7, 0x2a7dc0d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fdiv.d f7, f5, f10, dyn # perform operation
fdiv.d f7, f5, f10, rdn # perform operation
fdiv.d f7, f5, f10, rmm # perform operation
fdiv.d f7, f5, f10, rne # perform operation
fdiv.d f7, f5, f10, rtz # perform operation
fdiv.d f7, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
li x24, 0x1e18cf4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fdiv.d f24, f17, f16, dyn # perform operation
fdiv.d f24, f17, f16, rdn # perform operation
fdiv.d f24, f17, f16, rmm # perform operation
fdiv.d f24, f17, f16, rne # perform operation
fdiv.d f24, f17, f16, rtz # perform operation
fdiv.d f24, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
li x17, 0xa72e3e46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
fdiv.d f17, f13, f24, dyn # perform operation
fdiv.d f17, f13, f24, rdn # perform operation
fdiv.d f17, f13, f24, rmm # perform operation
fdiv.d f17, f13, f24, rne # perform operation
fdiv.d f17, f13, f24, rtz # perform operation
fdiv.d f17, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
li x4, 0x905a9f38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fdiv.d f4, f30, f5, dyn # perform operation
fdiv.d f4, f30, f5, rdn # perform operation
fdiv.d f4, f30, f5, rmm # perform operation
fdiv.d f4, f30, f5, rne # perform operation
fdiv.d f4, f30, f5, rtz # perform operation
fdiv.d f4, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
li x20, 0x81eb158f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fdiv.d f20, f23, f5, dyn # perform operation
fdiv.d f20, f23, f5, rdn # perform operation
fdiv.d f20, f23, f5, rmm # perform operation
fdiv.d f20, f23, f5, rne # perform operation
fdiv.d f20, f23, f5, rtz # perform operation
fdiv.d f20, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
li x26, 0x8e3db4a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f26, f29, f7, dyn # perform operation
fdiv.d f26, f29, f7, rdn # perform operation
fdiv.d f26, f29, f7, rmm # perform operation
fdiv.d f26, f29, f7, rne # perform operation
fdiv.d f26, f29, f7, rtz # perform operation
fdiv.d f26, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
li x9, 0xb330b8fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fdiv.d f9, f31, f22, dyn # perform operation
fdiv.d f9, f31, f22, rdn # perform operation
fdiv.d f9, f31, f22, rmm # perform operation
fdiv.d f9, f31, f22, rne # perform operation
fdiv.d f9, f31, f22, rtz # perform operation
fdiv.d f9, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
li x6, 0xa12ccb89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fdiv.d f6, f7, f28, dyn # perform operation
fdiv.d f6, f7, f28, rdn # perform operation
fdiv.d f6, f7, f28, rmm # perform operation
fdiv.d f6, f7, f28, rne # perform operation
fdiv.d f6, f7, f28, rtz # perform operation
fdiv.d f6, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
li x4, 0x04680c30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fdiv.d f4, f20, f5, dyn # perform operation
fdiv.d f4, f20, f5, rdn # perform operation
fdiv.d f4, f20, f5, rmm # perform operation
fdiv.d f4, f20, f5, rne # perform operation
fdiv.d f4, f20, f5, rtz # perform operation
fdiv.d f4, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f20, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
li x2, 0xee096ea5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fdiv.d f2, f7, f17, dyn # perform operation
fdiv.d f2, f7, f17, rdn # perform operation
fdiv.d f2, f7, f17, rmm # perform operation
fdiv.d f2, f7, f17, rne # perform operation
fdiv.d f2, f7, f17, rtz # perform operation
fdiv.d f2, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
li x31, 0xd9da81a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7fefffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fdiv.d f31, f4, f24, dyn # perform operation
fdiv.d f31, f4, f24, rdn # perform operation
fdiv.d f31, f4, f24, rmm # perform operation
fdiv.d f31, f4, f24, rne # perform operation
fdiv.d f31, f4, f24, rtz # perform operation
fdiv.d f31, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
li x9, 0xba687edf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fdiv.d f9, f1, f8, dyn # perform operation
fdiv.d f9, f1, f8, rdn # perform operation
fdiv.d f9, f1, f8, rmm # perform operation
fdiv.d f9, f1, f8, rne # perform operation
fdiv.d f9, f1, f8, rtz # perform operation
fdiv.d f9, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
li x2, 0x4c70d2fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fdiv.d f2, f31, f27, dyn # perform operation
fdiv.d f2, f31, f27, rdn # perform operation
fdiv.d f2, f31, f27, rmm # perform operation
fdiv.d f2, f31, f27, rne # perform operation
fdiv.d f2, f31, f27, rtz # perform operation
fdiv.d f2, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x31, 0xfa0dbe90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fdiv.d f31, f14, f15, dyn # perform operation
fdiv.d f31, f14, f15, rdn # perform operation
fdiv.d f31, f14, f15, rmm # perform operation
fdiv.d f31, f14, f15, rne # perform operation
fdiv.d f31, f14, f15, rtz # perform operation
fdiv.d f31, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
li x5, 0x17cc9af1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
fdiv.d f5, f30, f31, dyn # perform operation
fdiv.d f5, f30, f31, rdn # perform operation
fdiv.d f5, f30, f31, rmm # perform operation
fdiv.d f5, f30, f31, rne # perform operation
fdiv.d f5, f30, f31, rtz # perform operation
fdiv.d f5, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f30, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
li x14, 0x00bfe9dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fdiv.d f14, f8, f1, dyn # perform operation
fdiv.d f14, f8, f1, rdn # perform operation
fdiv.d f14, f8, f1, rmm # perform operation
fdiv.d f14, f8, f1, rne # perform operation
fdiv.d f14, f8, f1, rtz # perform operation
fdiv.d f14, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
li x25, 0x6c5d59ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fdiv.d f25, f2, f7, dyn # perform operation
fdiv.d f25, f2, f7, rdn # perform operation
fdiv.d f25, f2, f7, rmm # perform operation
fdiv.d f25, f2, f7, rne # perform operation
fdiv.d f25, f2, f7, rtz # perform operation
fdiv.d f25, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
li x10, 0x63f72cd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fdiv.d f10, f7, f1, dyn # perform operation
fdiv.d f10, f7, f1, rdn # perform operation
fdiv.d f10, f7, f1, rmm # perform operation
fdiv.d f10, f7, f1, rne # perform operation
fdiv.d f10, f7, f1, rtz # perform operation
fdiv.d f10, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
li x20, 0x91289b86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fdiv.d f20, f26, f5, dyn # perform operation
fdiv.d f20, f26, f5, rdn # perform operation
fdiv.d f20, f26, f5, rmm # perform operation
fdiv.d f20, f26, f5, rne # perform operation
fdiv.d f20, f26, f5, rtz # perform operation
fdiv.d f20, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f26, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
li x5, 0x8b837391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fdiv.d f5, f24, f30, dyn # perform operation
fdiv.d f5, f24, f30, rdn # perform operation
fdiv.d f5, f24, f30, rmm # perform operation
fdiv.d f5, f24, f30, rne # perform operation
fdiv.d f5, f24, f30, rtz # perform operation
fdiv.d f5, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
li x16, 0xe2b7747d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
fdiv.d f16, f29, f17, dyn # perform operation
fdiv.d f16, f29, f17, rdn # perform operation
fdiv.d f16, f29, f17, rmm # perform operation
fdiv.d f16, f29, f17, rne # perform operation
fdiv.d f16, f29, f17, rtz # perform operation
fdiv.d f16, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
li x17, 0x728cf2d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fdiv.d f17, f24, f27, dyn # perform operation
fdiv.d f17, f24, f27, rdn # perform operation
fdiv.d f17, f24, f27, rmm # perform operation
fdiv.d f17, f24, f27, rne # perform operation
fdiv.d f17, f24, f27, rtz # perform operation
fdiv.d f17, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
li x9, 0xeb9cad70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fdiv.d f9, f30, f8, dyn # perform operation
fdiv.d f9, f30, f8, rdn # perform operation
fdiv.d f9, f30, f8, rmm # perform operation
fdiv.d f9, f30, f8, rne # perform operation
fdiv.d f9, f30, f8, rtz # perform operation
fdiv.d f9, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
li x28, 0xeea128db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fdiv.d f28, f30, f5, dyn # perform operation
fdiv.d f28, f30, f5, rdn # perform operation
fdiv.d f28, f30, f5, rmm # perform operation
fdiv.d f28, f30, f5, rne # perform operation
fdiv.d f28, f30, f5, rtz # perform operation
fdiv.d f28, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
li x26, 0x442baeb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fdiv.d f26, f3, f31, dyn # perform operation
fdiv.d f26, f3, f31, rdn # perform operation
fdiv.d f26, f3, f31, rmm # perform operation
fdiv.d f26, f3, f31, rne # perform operation
fdiv.d f26, f3, f31, rtz # perform operation
fdiv.d f26, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
li x10, 0x14afc535 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fdiv.d f10, f27, f31, dyn # perform operation
fdiv.d f10, f27, f31, rdn # perform operation
fdiv.d f10, f27, f31, rmm # perform operation
fdiv.d f10, f27, f31, rne # perform operation
fdiv.d f10, f27, f31, rtz # perform operation
fdiv.d f10, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
li x3, 0xe875c46a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fdiv.d f3, f8, f22, dyn # perform operation
fdiv.d f3, f8, f22, rdn # perform operation
fdiv.d f3, f8, f22, rmm # perform operation
fdiv.d f3, f8, f22, rne # perform operation
fdiv.d f3, f8, f22, rtz # perform operation
fdiv.d f3, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
li x10, 0x9ce0c78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fdiv.d f10, f17, f9, dyn # perform operation
fdiv.d f10, f17, f9, rdn # perform operation
fdiv.d f10, f17, f9, rmm # perform operation
fdiv.d f10, f17, f9, rne # perform operation
fdiv.d f10, f17, f9, rtz # perform operation
fdiv.d f10, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
li x12, 0x0c6abc68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fdiv.d f12, f5, f15, dyn # perform operation
fdiv.d f12, f5, f15, rdn # perform operation
fdiv.d f12, f5, f15, rmm # perform operation
fdiv.d f12, f5, f15, rne # perform operation
fdiv.d f12, f5, f15, rtz # perform operation
fdiv.d f12, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
li x7, 0x0ff91fa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fdiv.d f7, f14, f2, dyn # perform operation
fdiv.d f7, f14, f2, rdn # perform operation
fdiv.d f7, f14, f2, rmm # perform operation
fdiv.d f7, f14, f2, rne # perform operation
fdiv.d f7, f14, f2, rtz # perform operation
fdiv.d f7, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
li x10, 0x90797cd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fdiv.d f10, f24, f23, dyn # perform operation
fdiv.d f10, f24, f23, rdn # perform operation
fdiv.d f10, f24, f23, rmm # perform operation
fdiv.d f10, f24, f23, rne # perform operation
fdiv.d f10, f24, f23, rtz # perform operation
fdiv.d f10, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
li x23, 0x4a87ac6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fdiv.d f23, f19, f15, dyn # perform operation
fdiv.d f23, f19, f15, rdn # perform operation
fdiv.d f23, f19, f15, rmm # perform operation
fdiv.d f23, f19, f15, rne # perform operation
fdiv.d f23, f19, f15, rtz # perform operation
fdiv.d f23, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
li x22, 0x1e668a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fdiv.d f22, f12, f20, dyn # perform operation
fdiv.d f22, f12, f20, rdn # perform operation
fdiv.d f22, f12, f20, rmm # perform operation
fdiv.d f22, f12, f20, rne # perform operation
fdiv.d f22, f12, f20, rtz # perform operation
fdiv.d f22, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
li x8, 0xd9ab8cb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fdiv.d f8, f1, f18, dyn # perform operation
fdiv.d f8, f1, f18, rdn # perform operation
fdiv.d f8, f1, f18, rmm # perform operation
fdiv.d f8, f1, f18, rne # perform operation
fdiv.d f8, f1, f18, rtz # perform operation
fdiv.d f8, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
li x19, 0x7541319d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
fdiv.d f19, f26, f7, dyn # perform operation
fdiv.d f19, f26, f7, rdn # perform operation
fdiv.d f19, f26, f7, rmm # perform operation
fdiv.d f19, f26, f7, rne # perform operation
fdiv.d f19, f26, f7, rtz # perform operation
fdiv.d f19, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
li x7, 0x5448b39a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fdiv.d f7, f31, f29, dyn # perform operation
fdiv.d f7, f31, f29, rdn # perform operation
fdiv.d f7, f31, f29, rmm # perform operation
fdiv.d f7, f31, f29, rne # perform operation
fdiv.d f7, f31, f29, rtz # perform operation
fdiv.d f7, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
li x15, 0x56b4cce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fdiv.d f15, f5, f16, dyn # perform operation
fdiv.d f15, f5, f16, rdn # perform operation
fdiv.d f15, f5, f16, rmm # perform operation
fdiv.d f15, f5, f16, rne # perform operation
fdiv.d f15, f5, f16, rtz # perform operation
fdiv.d f15, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
li x12, 0x2488cae5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fdiv.d f12, f11, f7, dyn # perform operation
fdiv.d f12, f11, f7, rdn # perform operation
fdiv.d f12, f11, f7, rmm # perform operation
fdiv.d f12, f11, f7, rne # perform operation
fdiv.d f12, f11, f7, rtz # perform operation
fdiv.d f12, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
li x12, 0xf2465fbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fdiv.d f12, f8, f17, dyn # perform operation
fdiv.d f12, f8, f17, rdn # perform operation
fdiv.d f12, f8, f17, rmm # perform operation
fdiv.d f12, f8, f17, rne # perform operation
fdiv.d f12, f8, f17, rtz # perform operation
fdiv.d f12, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
li x28, 0x57d43e53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fdiv.d f28, f5, f15, dyn # perform operation
fdiv.d f28, f5, f15, rdn # perform operation
fdiv.d f28, f5, f15, rmm # perform operation
fdiv.d f28, f5, f15, rne # perform operation
fdiv.d f28, f5, f15, rtz # perform operation
fdiv.d f28, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
li x22, 0x80437643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fdiv.d f22, f26, f13, dyn # perform operation
fdiv.d f22, f26, f13, rdn # perform operation
fdiv.d f22, f26, f13, rmm # perform operation
fdiv.d f22, f26, f13, rne # perform operation
fdiv.d f22, f26, f13, rtz # perform operation
fdiv.d f22, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
li x23, 0x871ab86a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
fdiv.d f23, f16, f7, dyn # perform operation
fdiv.d f23, f16, f7, rdn # perform operation
fdiv.d f23, f16, f7, rmm # perform operation
fdiv.d f23, f16, f7, rne # perform operation
fdiv.d f23, f16, f7, rtz # perform operation
fdiv.d f23, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
li x8, 0xdeb4b27a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fdiv.d f8, f2, f3, dyn # perform operation
fdiv.d f8, f2, f3, rdn # perform operation
fdiv.d f8, f2, f3, rmm # perform operation
fdiv.d f8, f2, f3, rne # perform operation
fdiv.d f8, f2, f3, rtz # perform operation
fdiv.d f8, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
li x8, 0xe1407f64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fdiv.d f8, f28, f16, dyn # perform operation
fdiv.d f8, f28, f16, rdn # perform operation
fdiv.d f8, f28, f16, rmm # perform operation
fdiv.d f8, f28, f16, rne # perform operation
fdiv.d f8, f28, f16, rtz # perform operation
fdiv.d f8, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
li x21, 0x06951cc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fdiv.d f21, f7, f26, dyn # perform operation
fdiv.d f21, f7, f26, rdn # perform operation
fdiv.d f21, f7, f26, rmm # perform operation
fdiv.d f21, f7, f26, rne # perform operation
fdiv.d f21, f7, f26, rtz # perform operation
fdiv.d f21, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
li x22, 0xe649c4db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fdiv.d f22, f12, f25, dyn # perform operation
fdiv.d f22, f12, f25, rdn # perform operation
fdiv.d f22, f12, f25, rmm # perform operation
fdiv.d f22, f12, f25, rne # perform operation
fdiv.d f22, f12, f25, rtz # perform operation
fdiv.d f22, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
li x20, 0xaff13ba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fdiv.d f20, f28, f27, dyn # perform operation
fdiv.d f20, f28, f27, rdn # perform operation
fdiv.d f20, f28, f27, rmm # perform operation
fdiv.d f20, f28, f27, rne # perform operation
fdiv.d f20, f28, f27, rtz # perform operation
fdiv.d f20, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
li x28, 0x19be3735 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fdiv.d f28, f17, f11, dyn # perform operation
fdiv.d f28, f17, f11, rdn # perform operation
fdiv.d f28, f17, f11, rmm # perform operation
fdiv.d f28, f17, f11, rne # perform operation
fdiv.d f28, f17, f11, rtz # perform operation
fdiv.d f28, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
li x30, 0x1afb1661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fdiv.d f30, f3, f14, dyn # perform operation
fdiv.d f30, f3, f14, rdn # perform operation
fdiv.d f30, f3, f14, rmm # perform operation
fdiv.d f30, f3, f14, rne # perform operation
fdiv.d f30, f3, f14, rtz # perform operation
fdiv.d f30, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
li x4, 0x9656127c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
fdiv.d f4, f25, f5, dyn # perform operation
fdiv.d f4, f25, f5, rdn # perform operation
fdiv.d f4, f25, f5, rmm # perform operation
fdiv.d f4, f25, f5, rne # perform operation
fdiv.d f4, f25, f5, rtz # perform operation
fdiv.d f4, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
li x20, 0x95408077 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fdiv.d f20, f18, f14, dyn # perform operation
fdiv.d f20, f18, f14, rdn # perform operation
fdiv.d f20, f18, f14, rmm # perform operation
fdiv.d f20, f18, f14, rne # perform operation
fdiv.d f20, f18, f14, rtz # perform operation
fdiv.d f20, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
li x23, 0xf22b3a17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8010000000000000 from memory into f4
fdiv.d f23, f25, f4, dyn # perform operation
fdiv.d f23, f25, f4, rdn # perform operation
fdiv.d f23, f25, f4, rmm # perform operation
fdiv.d f23, f25, f4, rne # perform operation
fdiv.d f23, f25, f4, rtz # perform operation
fdiv.d f23, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
li x23, 0x9cd2f4b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fdiv.d f23, f27, f6, dyn # perform operation
fdiv.d f23, f27, f6, rdn # perform operation
fdiv.d f23, f27, f6, rmm # perform operation
fdiv.d f23, f27, f6, rne # perform operation
fdiv.d f23, f27, f6, rtz # perform operation
fdiv.d f23, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
li x8, 0xacca7b5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xffefffffffffffff from memory into f4
fdiv.d f8, f26, f4, dyn # perform operation
fdiv.d f8, f26, f4, rdn # perform operation
fdiv.d f8, f26, f4, rmm # perform operation
fdiv.d f8, f26, f4, rne # perform operation
fdiv.d f8, f26, f4, rtz # perform operation
fdiv.d f8, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
li x4, 0x935bfbce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fdiv.d f4, f6, f9, dyn # perform operation
fdiv.d f4, f6, f9, rdn # perform operation
fdiv.d f4, f6, f9, rmm # perform operation
fdiv.d f4, f6, f9, rne # perform operation
fdiv.d f4, f6, f9, rtz # perform operation
fdiv.d f4, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f6, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
li x18, 0x23917653 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fdiv.d f18, f2, f7, dyn # perform operation
fdiv.d f18, f2, f7, rdn # perform operation
fdiv.d f18, f2, f7, rmm # perform operation
fdiv.d f18, f2, f7, rne # perform operation
fdiv.d f18, f2, f7, rtz # perform operation
fdiv.d f18, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
li x18, 0xa8411aa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fdiv.d f18, f17, f31, dyn # perform operation
fdiv.d f18, f17, f31, rdn # perform operation
fdiv.d f18, f17, f31, rmm # perform operation
fdiv.d f18, f17, f31, rne # perform operation
fdiv.d f18, f17, f31, rtz # perform operation
fdiv.d f18, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
li x3, 0xa827c04d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f3, f16, f7, dyn # perform operation
fdiv.d f3, f16, f7, rdn # perform operation
fdiv.d f3, f16, f7, rmm # perform operation
fdiv.d f3, f16, f7, rne # perform operation
fdiv.d f3, f16, f7, rtz # perform operation
fdiv.d f3, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
li x19, 0x85ae801e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fdiv.d f19, f25, f13, dyn # perform operation
fdiv.d f19, f25, f13, rdn # perform operation
fdiv.d f19, f25, f13, rmm # perform operation
fdiv.d f19, f25, f13, rne # perform operation
fdiv.d f19, f25, f13, rtz # perform operation
fdiv.d f19, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
li x25, 0xa39afe0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fdiv.d f25, f18, f19, dyn # perform operation
fdiv.d f25, f18, f19, rdn # perform operation
fdiv.d f25, f18, f19, rmm # perform operation
fdiv.d f25, f18, f19, rne # perform operation
fdiv.d f25, f18, f19, rtz # perform operation
fdiv.d f25, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
li x7, 0xd0df116a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fdiv.d f7, f14, f11, dyn # perform operation
fdiv.d f7, f14, f11, rdn # perform operation
fdiv.d f7, f14, f11, rmm # perform operation
fdiv.d f7, f14, f11, rne # perform operation
fdiv.d f7, f14, f11, rtz # perform operation
fdiv.d f7, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
li x1, 0x0219f1d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fdiv.d f1, f26, f18, dyn # perform operation
fdiv.d f1, f26, f18, rdn # perform operation
fdiv.d f1, f26, f18, rmm # perform operation
fdiv.d f1, f26, f18, rne # perform operation
fdiv.d f1, f26, f18, rtz # perform operation
fdiv.d f1, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
li x2, 0x59e4ce30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fdiv.d f2, f7, f13, dyn # perform operation
fdiv.d f2, f7, f13, rdn # perform operation
fdiv.d f2, f7, f13, rmm # perform operation
fdiv.d f2, f7, f13, rne # perform operation
fdiv.d f2, f7, f13, rtz # perform operation
fdiv.d f2, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
li x13, 0xe09f3b97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fdiv.d f13, f11, f27, dyn # perform operation
fdiv.d f13, f11, f27, rdn # perform operation
fdiv.d f13, f11, f27, rmm # perform operation
fdiv.d f13, f11, f27, rne # perform operation
fdiv.d f13, f11, f27, rtz # perform operation
fdiv.d f13, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
li x4, 0xbd0059b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fdiv.d f4, f5, f13, dyn # perform operation
fdiv.d f4, f5, f13, rdn # perform operation
fdiv.d f4, f5, f13, rmm # perform operation
fdiv.d f4, f5, f13, rne # perform operation
fdiv.d f4, f5, f13, rtz # perform operation
fdiv.d f4, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
li x26, 0x81fb5163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fdiv.d f26, f30, f19, dyn # perform operation
fdiv.d f26, f30, f19, rdn # perform operation
fdiv.d f26, f30, f19, rmm # perform operation
fdiv.d f26, f30, f19, rne # perform operation
fdiv.d f26, f30, f19, rtz # perform operation
fdiv.d f26, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
li x3, 0xef47d213 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000fffffffffffff from memory into f4
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fdiv.d f3, f4, f14, dyn # perform operation
fdiv.d f3, f4, f14, rdn # perform operation
fdiv.d f3, f4, f14, rmm # perform operation
fdiv.d f3, f4, f14, rne # perform operation
fdiv.d f3, f4, f14, rtz # perform operation
fdiv.d f3, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
li x6, 0xcc67078e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
fdiv.d f6, f12, f15, dyn # perform operation
fdiv.d f6, f12, f15, rdn # perform operation
fdiv.d f6, f12, f15, rmm # perform operation
fdiv.d f6, f12, f15, rne # perform operation
fdiv.d f6, f12, f15, rtz # perform operation
fdiv.d f6, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
li x27, 0xff980a58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x800fffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
fdiv.d f27, f4, f9, dyn # perform operation
fdiv.d f27, f4, f9, rdn # perform operation
fdiv.d f27, f4, f9, rmm # perform operation
fdiv.d f27, f4, f9, rne # perform operation
fdiv.d f27, f4, f9, rtz # perform operation
fdiv.d f27, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
li x15, 0xe0d81326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fdiv.d f15, f21, f16, dyn # perform operation
fdiv.d f15, f21, f16, rdn # perform operation
fdiv.d f15, f21, f16, rmm # perform operation
fdiv.d f15, f21, f16, rne # perform operation
fdiv.d f15, f21, f16, rtz # perform operation
fdiv.d f15, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
li x13, 0x360e8dbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fdiv.d f13, f24, f12, dyn # perform operation
fdiv.d f13, f24, f12, rdn # perform operation
fdiv.d f13, f24, f12, rmm # perform operation
fdiv.d f13, f24, f12, rne # perform operation
fdiv.d f13, f24, f12, rtz # perform operation
fdiv.d f13, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
li x20, 0xed690de7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fdiv.d f20, f12, f24, dyn # perform operation
fdiv.d f20, f12, f24, rdn # perform operation
fdiv.d f20, f12, f24, rmm # perform operation
fdiv.d f20, f12, f24, rne # perform operation
fdiv.d f20, f12, f24, rtz # perform operation
fdiv.d f20, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
li x17, 0x5f3107ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f17, f16, f30, dyn # perform operation
fdiv.d f17, f16, f30, rdn # perform operation
fdiv.d f17, f16, f30, rmm # perform operation
fdiv.d f17, f16, f30, rne # perform operation
fdiv.d f17, f16, f30, rtz # perform operation
fdiv.d f17, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
li x20, 0xac520d53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fdiv.d f20, f22, f15, dyn # perform operation
fdiv.d f20, f22, f15, rdn # perform operation
fdiv.d f20, f22, f15, rmm # perform operation
fdiv.d f20, f22, f15, rne # perform operation
fdiv.d f20, f22, f15, rtz # perform operation
fdiv.d f20, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
li x15, 0x7761d6b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
fdiv.d f15, f14, f21, dyn # perform operation
fdiv.d f15, f14, f21, rdn # perform operation
fdiv.d f15, f14, f21, rmm # perform operation
fdiv.d f15, f14, f21, rne # perform operation
fdiv.d f15, f14, f21, rtz # perform operation
fdiv.d f15, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
li x5, 0x7fcbe7d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fdiv.d f5, f26, f3, dyn # perform operation
fdiv.d f5, f26, f3, rdn # perform operation
fdiv.d f5, f26, f3, rmm # perform operation
fdiv.d f5, f26, f3, rne # perform operation
fdiv.d f5, f26, f3, rtz # perform operation
fdiv.d f5, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
li x31, 0x9dcb5fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fdiv.d f31, f19, f18, dyn # perform operation
fdiv.d f31, f19, f18, rdn # perform operation
fdiv.d f31, f19, f18, rmm # perform operation
fdiv.d f31, f19, f18, rne # perform operation
fdiv.d f31, f19, f18, rtz # perform operation
fdiv.d f31, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
li x14, 0xc818f159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fdiv.d f14, f29, f18, dyn # perform operation
fdiv.d f14, f29, f18, rdn # perform operation
fdiv.d f14, f29, f18, rmm # perform operation
fdiv.d f14, f29, f18, rne # perform operation
fdiv.d f14, f29, f18, rtz # perform operation
fdiv.d f14, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
li x29, 0x1d19abf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fdiv.d f29, f25, f17, dyn # perform operation
fdiv.d f29, f25, f17, rdn # perform operation
fdiv.d f29, f25, f17, rmm # perform operation
fdiv.d f29, f25, f17, rne # perform operation
fdiv.d f29, f25, f17, rtz # perform operation
fdiv.d f29, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
li x6, 0x42e70ca9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fdiv.d f6, f25, f29, dyn # perform operation
fdiv.d f6, f25, f29, rdn # perform operation
fdiv.d f6, f25, f29, rmm # perform operation
fdiv.d f6, f25, f29, rne # perform operation
fdiv.d f6, f25, f29, rtz # perform operation
fdiv.d f6, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
li x3, 0x221feb48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fdiv.d f3, f7, f22, dyn # perform operation
fdiv.d f3, f7, f22, rdn # perform operation
fdiv.d f3, f7, f22, rmm # perform operation
fdiv.d f3, f7, f22, rne # perform operation
fdiv.d f3, f7, f22, rtz # perform operation
fdiv.d f3, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
li x8, 0x5065db24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fdiv.d f8, f24, f23, dyn # perform operation
fdiv.d f8, f24, f23, rdn # perform operation
fdiv.d f8, f24, f23, rmm # perform operation
fdiv.d f8, f24, f23, rne # perform operation
fdiv.d f8, f24, f23, rtz # perform operation
fdiv.d f8, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
li x3, 0x310fdc0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
fdiv.d f3, f31, f10, dyn # perform operation
fdiv.d f3, f31, f10, rdn # perform operation
fdiv.d f3, f31, f10, rmm # perform operation
fdiv.d f3, f31, f10, rne # perform operation
fdiv.d f3, f31, f10, rtz # perform operation
fdiv.d f3, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
li x4, 0x35e0f862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fdiv.d f4, f2, f9, dyn # perform operation
fdiv.d f4, f2, f9, rdn # perform operation
fdiv.d f4, f2, f9, rmm # perform operation
fdiv.d f4, f2, f9, rne # perform operation
fdiv.d f4, f2, f9, rtz # perform operation
fdiv.d f4, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
li x4, 0xe27f830f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fdiv.d f4, f18, f28, dyn # perform operation
fdiv.d f4, f18, f28, rdn # perform operation
fdiv.d f4, f18, f28, rmm # perform operation
fdiv.d f4, f18, f28, rne # perform operation
fdiv.d f4, f18, f28, rtz # perform operation
fdiv.d f4, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
li x10, 0x1b43cd43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fdiv.d f10, f8, f17, dyn # perform operation
fdiv.d f10, f8, f17, rdn # perform operation
fdiv.d f10, f8, f17, rmm # perform operation
fdiv.d f10, f8, f17, rne # perform operation
fdiv.d f10, f8, f17, rtz # perform operation
fdiv.d f10, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
li x24, 0xb35b3b50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fdiv.d f24, f2, f15, dyn # perform operation
fdiv.d f24, f2, f15, rdn # perform operation
fdiv.d f24, f2, f15, rmm # perform operation
fdiv.d f24, f2, f15, rne # perform operation
fdiv.d f24, f2, f15, rtz # perform operation
fdiv.d f24, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
li x14, 0x515f2444 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fdiv.d f14, f5, f20, dyn # perform operation
fdiv.d f14, f5, f20, rdn # perform operation
fdiv.d f14, f5, f20, rmm # perform operation
fdiv.d f14, f5, f20, rne # perform operation
fdiv.d f14, f5, f20, rtz # perform operation
fdiv.d f14, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
li x6, 0xbb98c1d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fdiv.d f6, f12, f23, dyn # perform operation
fdiv.d f6, f12, f23, rdn # perform operation
fdiv.d f6, f12, f23, rmm # perform operation
fdiv.d f6, f12, f23, rne # perform operation
fdiv.d f6, f12, f23, rtz # perform operation
fdiv.d f6, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
li x26, 0xf0eb0157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fdiv.d f26, f5, f15, dyn # perform operation
fdiv.d f26, f5, f15, rdn # perform operation
fdiv.d f26, f5, f15, rmm # perform operation
fdiv.d f26, f5, f15, rne # perform operation
fdiv.d f26, f5, f15, rtz # perform operation
fdiv.d f26, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
li x27, 0x0da1061a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fdiv.d f27, f16, f3, dyn # perform operation
fdiv.d f27, f16, f3, rdn # perform operation
fdiv.d f27, f16, f3, rmm # perform operation
fdiv.d f27, f16, f3, rne # perform operation
fdiv.d f27, f16, f3, rtz # perform operation
fdiv.d f27, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
li x13, 0xef38a6df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fdiv.d f13, f7, f4, dyn # perform operation
fdiv.d f13, f7, f4, rdn # perform operation
fdiv.d f13, f7, f4, rmm # perform operation
fdiv.d f13, f7, f4, rne # perform operation
fdiv.d f13, f7, f4, rtz # perform operation
fdiv.d f13, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
li x27, 0x266a8d32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fdiv.d f27, f31, f3, dyn # perform operation
fdiv.d f27, f31, f3, rdn # perform operation
fdiv.d f27, f31, f3, rmm # perform operation
fdiv.d f27, f31, f3, rne # perform operation
fdiv.d f27, f31, f3, rtz # perform operation
fdiv.d f27, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
li x4, 0xb3d5f61b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fdiv.d f4, f26, f31, dyn # perform operation
fdiv.d f4, f26, f31, rdn # perform operation
fdiv.d f4, f26, f31, rmm # perform operation
fdiv.d f4, f26, f31, rne # perform operation
fdiv.d f4, f26, f31, rtz # perform operation
fdiv.d f4, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
li x19, 0x2e25ba84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
fdiv.d f19, f9, f6, dyn # perform operation
fdiv.d f19, f9, f6, rdn # perform operation
fdiv.d f19, f9, f6, rmm # perform operation
fdiv.d f19, f9, f6, rne # perform operation
fdiv.d f19, f9, f6, rtz # perform operation
fdiv.d f19, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
li x24, 0x110205aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fdiv.d f24, f30, f9, dyn # perform operation
fdiv.d f24, f30, f9, rdn # perform operation
fdiv.d f24, f30, f9, rmm # perform operation
fdiv.d f24, f30, f9, rne # perform operation
fdiv.d f24, f30, f9, rtz # perform operation
fdiv.d f24, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
li x2, 0x6ca538da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fdiv.d f2, f6, f18, dyn # perform operation
fdiv.d f2, f6, f18, rdn # perform operation
fdiv.d f2, f6, f18, rmm # perform operation
fdiv.d f2, f6, f18, rne # perform operation
fdiv.d f2, f6, f18, rtz # perform operation
fdiv.d f2, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
li x16, 0xd68456a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fdiv.d f16, f6, f19, dyn # perform operation
fdiv.d f16, f6, f19, rdn # perform operation
fdiv.d f16, f6, f19, rmm # perform operation
fdiv.d f16, f6, f19, rne # perform operation
fdiv.d f16, f6, f19, rtz # perform operation
fdiv.d f16, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
li x30, 0xa3ce7f1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0008000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fdiv.d f30, f4, f19, dyn # perform operation
fdiv.d f30, f4, f19, rdn # perform operation
fdiv.d f30, f4, f19, rmm # perform operation
fdiv.d f30, f4, f19, rne # perform operation
fdiv.d f30, f4, f19, rtz # perform operation
fdiv.d f30, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
li x5, 0x2676caba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
fdiv.d f5, f31, f24, dyn # perform operation
fdiv.d f5, f31, f24, rdn # perform operation
fdiv.d f5, f31, f24, rmm # perform operation
fdiv.d f5, f31, f24, rne # perform operation
fdiv.d f5, f31, f24, rtz # perform operation
fdiv.d f5, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
li x20, 0x4439a4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fdiv.d f20, f1, f12, dyn # perform operation
fdiv.d f20, f1, f12, rdn # perform operation
fdiv.d f20, f1, f12, rmm # perform operation
fdiv.d f20, f1, f12, rne # perform operation
fdiv.d f20, f1, f12, rtz # perform operation
fdiv.d f20, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
li x14, 0x06deaac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fdiv.d f14, f31, f13, dyn # perform operation
fdiv.d f14, f31, f13, rdn # perform operation
fdiv.d f14, f31, f13, rmm # perform operation
fdiv.d f14, f31, f13, rne # perform operation
fdiv.d f14, f31, f13, rtz # perform operation
fdiv.d f14, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
li x28, 0x42135a3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fdiv.d f28, f13, f20, dyn # perform operation
fdiv.d f28, f13, f20, rdn # perform operation
fdiv.d f28, f13, f20, rmm # perform operation
fdiv.d f28, f13, f20, rne # perform operation
fdiv.d f28, f13, f20, rtz # perform operation
fdiv.d f28, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
li x5, 0x2f8e30a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fdiv.d f5, f21, f15, dyn # perform operation
fdiv.d f5, f21, f15, rdn # perform operation
fdiv.d f5, f21, f15, rmm # perform operation
fdiv.d f5, f21, f15, rne # perform operation
fdiv.d f5, f21, f15, rtz # perform operation
fdiv.d f5, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f21, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
li x27, 0x22d034e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fdiv.d f27, f6, f29, dyn # perform operation
fdiv.d f27, f6, f29, rdn # perform operation
fdiv.d f27, f6, f29, rmm # perform operation
fdiv.d f27, f6, f29, rne # perform operation
fdiv.d f27, f6, f29, rtz # perform operation
fdiv.d f27, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
li x12, 0x436c54f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fdiv.d f12, f15, f23, dyn # perform operation
fdiv.d f12, f15, f23, rdn # perform operation
fdiv.d f12, f15, f23, rmm # perform operation
fdiv.d f12, f15, f23, rne # perform operation
fdiv.d f12, f15, f23, rtz # perform operation
fdiv.d f12, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
li x27, 0x83f6deef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fdiv.d f27, f16, f12, dyn # perform operation
fdiv.d f27, f16, f12, rdn # perform operation
fdiv.d f27, f16, f12, rmm # perform operation
fdiv.d f27, f16, f12, rne # perform operation
fdiv.d f27, f16, f12, rtz # perform operation
fdiv.d f27, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
li x5, 0x55c04316 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fdiv.d f5, f19, f2, dyn # perform operation
fdiv.d f5, f19, f2, rdn # perform operation
fdiv.d f5, f19, f2, rmm # perform operation
fdiv.d f5, f19, f2, rne # perform operation
fdiv.d f5, f19, f2, rtz # perform operation
fdiv.d f5, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
li x9, 0x480a60cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fdiv.d f9, f6, f26, dyn # perform operation
fdiv.d f9, f6, f26, rdn # perform operation
fdiv.d f9, f6, f26, rmm # perform operation
fdiv.d f9, f6, f26, rne # perform operation
fdiv.d f9, f6, f26, rtz # perform operation
fdiv.d f9, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
li x14, 0x0b3455aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
fdiv.d f14, f8, f25, dyn # perform operation
fdiv.d f14, f8, f25, rdn # perform operation
fdiv.d f14, f8, f25, rmm # perform operation
fdiv.d f14, f8, f25, rne # perform operation
fdiv.d f14, f8, f25, rtz # perform operation
fdiv.d f14, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
li x3, 0xd5a61147 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
fdiv.d f3, f7, f6, dyn # perform operation
fdiv.d f3, f7, f6, rdn # perform operation
fdiv.d f3, f7, f6, rmm # perform operation
fdiv.d f3, f7, f6, rne # perform operation
fdiv.d f3, f7, f6, rtz # perform operation
fdiv.d f3, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
li x4, 0x7f5fcd9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fdiv.d f4, f13, f6, dyn # perform operation
fdiv.d f4, f13, f6, rdn # perform operation
fdiv.d f4, f13, f6, rmm # perform operation
fdiv.d f4, f13, f6, rne # perform operation
fdiv.d f4, f13, f6, rtz # perform operation
fdiv.d f4, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
li x24, 0x4d0f3f62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fdiv.d f24, f30, f14, dyn # perform operation
fdiv.d f24, f30, f14, rdn # perform operation
fdiv.d f24, f30, f14, rmm # perform operation
fdiv.d f24, f30, f14, rne # perform operation
fdiv.d f24, f30, f14, rtz # perform operation
fdiv.d f24, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
li x14, 0xd8a6a944 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fdiv.d f14, f6, f29, dyn # perform operation
fdiv.d f14, f6, f29, rdn # perform operation
fdiv.d f14, f6, f29, rmm # perform operation
fdiv.d f14, f6, f29, rne # perform operation
fdiv.d f14, f6, f29, rtz # perform operation
fdiv.d f14, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
li x25, 0xc26010ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
fdiv.d f25, f3, f22, dyn # perform operation
fdiv.d f25, f3, f22, rdn # perform operation
fdiv.d f25, f3, f22, rmm # perform operation
fdiv.d f25, f3, f22, rne # perform operation
fdiv.d f25, f3, f22, rtz # perform operation
fdiv.d f25, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f3, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
li x29, 0x1ea39d26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
fdiv.d f29, f10, f30, dyn # perform operation
fdiv.d f29, f10, f30, rdn # perform operation
fdiv.d f29, f10, f30, rmm # perform operation
fdiv.d f29, f10, f30, rne # perform operation
fdiv.d f29, f10, f30, rtz # perform operation
fdiv.d f29, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
li x17, 0x1436b85b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fdiv.d f17, f10, f3, dyn # perform operation
fdiv.d f17, f10, f3, rdn # perform operation
fdiv.d f17, f10, f3, rmm # perform operation
fdiv.d f17, f10, f3, rne # perform operation
fdiv.d f17, f10, f3, rtz # perform operation
fdiv.d f17, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
li x12, 0xdbe2966b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fdiv.d f12, f3, f10, dyn # perform operation
fdiv.d f12, f3, f10, rdn # perform operation
fdiv.d f12, f3, f10, rmm # perform operation
fdiv.d f12, f3, f10, rne # perform operation
fdiv.d f12, f3, f10, rtz # perform operation
fdiv.d f12, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
li x18, 0xe13f1100 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fdiv.d f18, f31, f13, dyn # perform operation
fdiv.d f18, f31, f13, rdn # perform operation
fdiv.d f18, f31, f13, rmm # perform operation
fdiv.d f18, f31, f13, rne # perform operation
fdiv.d f18, f31, f13, rtz # perform operation
fdiv.d f18, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
li x22, 0x17925fd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fdiv.d f22, f21, f9, dyn # perform operation
fdiv.d f22, f21, f9, rdn # perform operation
fdiv.d f22, f21, f9, rmm # perform operation
fdiv.d f22, f21, f9, rne # perform operation
fdiv.d f22, f21, f9, rtz # perform operation
fdiv.d f22, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
li x16, 0x83d53403 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f16, f4, f24, dyn # perform operation
fdiv.d f16, f4, f24, rdn # perform operation
fdiv.d f16, f4, f24, rmm # perform operation
fdiv.d f16, f4, f24, rne # perform operation
fdiv.d f16, f4, f24, rtz # perform operation
fdiv.d f16, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
li x10, 0x3e601c9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8000000000000000 from memory into f4
fdiv.d f10, f22, f4, dyn # perform operation
fdiv.d f10, f22, f4, rdn # perform operation
fdiv.d f10, f22, f4, rmm # perform operation
fdiv.d f10, f22, f4, rne # perform operation
fdiv.d f10, f22, f4, rtz # perform operation
fdiv.d f10, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
li x29, 0xda01b2a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fdiv.d f29, f26, f23, dyn # perform operation
fdiv.d f29, f26, f23, rdn # perform operation
fdiv.d f29, f26, f23, rmm # perform operation
fdiv.d f29, f26, f23, rne # perform operation
fdiv.d f29, f26, f23, rtz # perform operation
fdiv.d f29, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
li x2, 0x7e1059f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fdiv.d f2, f23, f12, dyn # perform operation
fdiv.d f2, f23, f12, rdn # perform operation
fdiv.d f2, f23, f12, rmm # perform operation
fdiv.d f2, f23, f12, rne # perform operation
fdiv.d f2, f23, f12, rtz # perform operation
fdiv.d f2, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
li x17, 0x543c1986 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fdiv.d f17, f13, f5, dyn # perform operation
fdiv.d f17, f13, f5, rdn # perform operation
fdiv.d f17, f13, f5, rmm # perform operation
fdiv.d f17, f13, f5, rne # perform operation
fdiv.d f17, f13, f5, rtz # perform operation
fdiv.d f17, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
li x9, 0x766359a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fdiv.d f9, f15, f13, dyn # perform operation
fdiv.d f9, f15, f13, rdn # perform operation
fdiv.d f9, f15, f13, rmm # perform operation
fdiv.d f9, f15, f13, rne # perform operation
fdiv.d f9, f15, f13, rtz # perform operation
fdiv.d f9, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
li x25, 0xb5301dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fdiv.d f25, f14, f2, dyn # perform operation
fdiv.d f25, f14, f2, rdn # perform operation
fdiv.d f25, f14, f2, rmm # perform operation
fdiv.d f25, f14, f2, rne # perform operation
fdiv.d f25, f14, f2, rtz # perform operation
fdiv.d f25, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
li x11, 0x3d504265 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fdiv.d f11, f14, f29, dyn # perform operation
fdiv.d f11, f14, f29, rdn # perform operation
fdiv.d f11, f14, f29, rmm # perform operation
fdiv.d f11, f14, f29, rne # perform operation
fdiv.d f11, f14, f29, rtz # perform operation
fdiv.d f11, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
li x8, 0xf6c8dff1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fdiv.d f8, f9, f16, dyn # perform operation
fdiv.d f8, f9, f16, rdn # perform operation
fdiv.d f8, f9, f16, rmm # perform operation
fdiv.d f8, f9, f16, rne # perform operation
fdiv.d f8, f9, f16, rtz # perform operation
fdiv.d f8, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
li x30, 0xb21b6f20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fdiv.d f30, f25, f22, dyn # perform operation
fdiv.d f30, f25, f22, rdn # perform operation
fdiv.d f30, f25, f22, rmm # perform operation
fdiv.d f30, f25, f22, rne # perform operation
fdiv.d f30, f25, f22, rtz # perform operation
fdiv.d f30, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
li x23, 0x0f42951e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fdiv.d f23, f27, f2, dyn # perform operation
fdiv.d f23, f27, f2, rdn # perform operation
fdiv.d f23, f27, f2, rmm # perform operation
fdiv.d f23, f27, f2, rne # perform operation
fdiv.d f23, f27, f2, rtz # perform operation
fdiv.d f23, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
li x30, 0xd5e79f37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fdiv.d f30, f21, f3, dyn # perform operation
fdiv.d f30, f21, f3, rdn # perform operation
fdiv.d f30, f21, f3, rmm # perform operation
fdiv.d f30, f21, f3, rne # perform operation
fdiv.d f30, f21, f3, rtz # perform operation
fdiv.d f30, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
li x14, 0xd38eefeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fdiv.d f14, f4, f20, dyn # perform operation
fdiv.d f14, f4, f20, rdn # perform operation
fdiv.d f14, f4, f20, rmm # perform operation
fdiv.d f14, f4, f20, rne # perform operation
fdiv.d f14, f4, f20, rtz # perform operation
fdiv.d f14, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
li x8, 0x0657d2dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fdiv.d f8, f21, f23, dyn # perform operation
fdiv.d f8, f21, f23, rdn # perform operation
fdiv.d f8, f21, f23, rmm # perform operation
fdiv.d f8, f21, f23, rne # perform operation
fdiv.d f8, f21, f23, rtz # perform operation
fdiv.d f8, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
li x21, 0xca95ed33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fdiv.d f21, f25, f28, dyn # perform operation
fdiv.d f21, f25, f28, rdn # perform operation
fdiv.d f21, f25, f28, rmm # perform operation
fdiv.d f21, f25, f28, rne # perform operation
fdiv.d f21, f25, f28, rtz # perform operation
fdiv.d f21, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
li x4, 0xe9b75929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fdiv.d f4, f9, f29, dyn # perform operation
fdiv.d f4, f9, f29, rdn # perform operation
fdiv.d f4, f9, f29, rmm # perform operation
fdiv.d f4, f9, f29, rne # perform operation
fdiv.d f4, f9, f29, rtz # perform operation
fdiv.d f4, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f9, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
li x16, 0x65817903 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fdiv.d f16, f3, f14, dyn # perform operation
fdiv.d f16, f3, f14, rdn # perform operation
fdiv.d f16, f3, f14, rmm # perform operation
fdiv.d f16, f3, f14, rne # perform operation
fdiv.d f16, f3, f14, rtz # perform operation
fdiv.d f16, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
li x6, 0xd6c9feb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fdiv.d f6, f1, f29, dyn # perform operation
fdiv.d f6, f1, f29, rdn # perform operation
fdiv.d f6, f1, f29, rmm # perform operation
fdiv.d f6, f1, f29, rne # perform operation
fdiv.d f6, f1, f29, rtz # perform operation
fdiv.d f6, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
li x19, 0x93a32960 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fdiv.d f19, f3, f31, dyn # perform operation
fdiv.d f19, f3, f31, rdn # perform operation
fdiv.d f19, f3, f31, rmm # perform operation
fdiv.d f19, f3, f31, rne # perform operation
fdiv.d f19, f3, f31, rtz # perform operation
fdiv.d f19, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
li x2, 0xe487c171 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fdiv.d f2, f18, f13, dyn # perform operation
fdiv.d f2, f18, f13, rdn # perform operation
fdiv.d f2, f18, f13, rmm # perform operation
fdiv.d f2, f18, f13, rne # perform operation
fdiv.d f2, f18, f13, rtz # perform operation
fdiv.d f2, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
li x17, 0x6972fb49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fdiv.d f17, f22, f6, dyn # perform operation
fdiv.d f17, f22, f6, rdn # perform operation
fdiv.d f17, f22, f6, rmm # perform operation
fdiv.d f17, f22, f6, rne # perform operation
fdiv.d f17, f22, f6, rtz # perform operation
fdiv.d f17, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
li x12, 0x8233d8db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fdiv.d f12, f27, f8, dyn # perform operation
fdiv.d f12, f27, f8, rdn # perform operation
fdiv.d f12, f27, f8, rmm # perform operation
fdiv.d f12, f27, f8, rne # perform operation
fdiv.d f12, f27, f8, rtz # perform operation
fdiv.d f12, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
li x21, 0x7c1d5516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x8008000000000000 from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
fdiv.d f21, f4, f5, dyn # perform operation
fdiv.d f21, f4, f5, rdn # perform operation
fdiv.d f21, f4, f5, rmm # perform operation
fdiv.d f21, f4, f5, rne # perform operation
fdiv.d f21, f4, f5, rtz # perform operation
fdiv.d f21, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
li x1, 0x25af5262 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
fdiv.d f1, f3, f12, dyn # perform operation
fdiv.d f1, f3, f12, rdn # perform operation
fdiv.d f1, f3, f12, rmm # perform operation
fdiv.d f1, f3, f12, rne # perform operation
fdiv.d f1, f3, f12, rtz # perform operation
fdiv.d f1, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
li x1, 0x7ff37a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fdiv.d f1, f29, f22, dyn # perform operation
fdiv.d f1, f29, f22, rdn # perform operation
fdiv.d f1, f29, f22, rmm # perform operation
fdiv.d f1, f29, f22, rne # perform operation
fdiv.d f1, f29, f22, rtz # perform operation
fdiv.d f1, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
li x17, 0xd4d9141a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fdiv.d f17, f1, f6, dyn # perform operation
fdiv.d f17, f1, f6, rdn # perform operation
fdiv.d f17, f1, f6, rmm # perform operation
fdiv.d f17, f1, f6, rne # perform operation
fdiv.d f17, f1, f6, rtz # perform operation
fdiv.d f17, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x3, 0x81e63002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fdiv.d f3, f9, f31, dyn # perform operation
fdiv.d f3, f9, f31, rdn # perform operation
fdiv.d f3, f9, f31, rmm # perform operation
fdiv.d f3, f9, f31, rne # perform operation
fdiv.d f3, f9, f31, rtz # perform operation
fdiv.d f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
li x3, 0xf1545651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fdiv.d f3, f28, f10, dyn # perform operation
fdiv.d f3, f28, f10, rdn # perform operation
fdiv.d f3, f28, f10, rmm # perform operation
fdiv.d f3, f28, f10, rne # perform operation
fdiv.d f3, f28, f10, rtz # perform operation
fdiv.d f3, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
li x26, 0x6782efb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fdiv.d f26, f14, f6, dyn # perform operation
fdiv.d f26, f14, f6, rdn # perform operation
fdiv.d f26, f14, f6, rmm # perform operation
fdiv.d f26, f14, f6, rne # perform operation
fdiv.d f26, f14, f6, rtz # perform operation
fdiv.d f26, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
li x21, 0x93e0589d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fdiv.d f21, f25, f16, dyn # perform operation
fdiv.d f21, f25, f16, rdn # perform operation
fdiv.d f21, f25, f16, rmm # perform operation
fdiv.d f21, f25, f16, rne # perform operation
fdiv.d f21, f25, f16, rtz # perform operation
fdiv.d f21, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
li x5, 0xa48c288a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
fdiv.d f5, f7, f17, dyn # perform operation
fdiv.d f5, f7, f17, rdn # perform operation
fdiv.d f5, f7, f17, rmm # perform operation
fdiv.d f5, f7, f17, rne # perform operation
fdiv.d f5, f7, f17, rtz # perform operation
fdiv.d f5, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
li x9, 0xdf87e96f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff8000000000000 from memory into f10
fdiv.d f9, f20, f10, dyn # perform operation
fdiv.d f9, f20, f10, rdn # perform operation
fdiv.d f9, f20, f10, rmm # perform operation
fdiv.d f9, f20, f10, rne # perform operation
fdiv.d f9, f20, f10, rtz # perform operation
fdiv.d f9, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
li x24, 0xadb47d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fdiv.d f24, f29, f4, dyn # perform operation
fdiv.d f24, f29, f4, rdn # perform operation
fdiv.d f24, f29, f4, rmm # perform operation
fdiv.d f24, f29, f4, rne # perform operation
fdiv.d f24, f29, f4, rtz # perform operation
fdiv.d f24, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
li x26, 0xa512d0ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fdiv.d f26, f19, f9, dyn # perform operation
fdiv.d f26, f19, f9, rdn # perform operation
fdiv.d f26, f19, f9, rmm # perform operation
fdiv.d f26, f19, f9, rne # perform operation
fdiv.d f26, f19, f9, rtz # perform operation
fdiv.d f26, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f19, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
li x29, 0x5e961661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fdiv.d f29, f13, f17, dyn # perform operation
fdiv.d f29, f13, f17, rdn # perform operation
fdiv.d f29, f13, f17, rmm # perform operation
fdiv.d f29, f13, f17, rne # perform operation
fdiv.d f29, f13, f17, rtz # perform operation
fdiv.d f29, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
li x19, 0xa0d17665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fdiv.d f19, f10, f29, dyn # perform operation
fdiv.d f19, f10, f29, rdn # perform operation
fdiv.d f19, f10, f29, rmm # perform operation
fdiv.d f19, f10, f29, rne # perform operation
fdiv.d f19, f10, f29, rtz # perform operation
fdiv.d f19, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
li x22, 0xcd5c24dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fdiv.d f22, f2, f28, dyn # perform operation
fdiv.d f22, f2, f28, rdn # perform operation
fdiv.d f22, f2, f28, rmm # perform operation
fdiv.d f22, f2, f28, rne # perform operation
fdiv.d f22, f2, f28, rtz # perform operation
fdiv.d f22, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
li x21, 0x20642d13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fdiv.d f21, f2, f11, dyn # perform operation
fdiv.d f21, f2, f11, rdn # perform operation
fdiv.d f21, f2, f11, rmm # perform operation
fdiv.d f21, f2, f11, rne # perform operation
fdiv.d f21, f2, f11, rtz # perform operation
fdiv.d f21, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
li x16, 0x018ad246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fdiv.d f16, f2, f17, dyn # perform operation
fdiv.d f16, f2, f17, rdn # perform operation
fdiv.d f16, f2, f17, rmm # perform operation
fdiv.d f16, f2, f17, rne # perform operation
fdiv.d f16, f2, f17, rtz # perform operation
fdiv.d f16, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
li x18, 0x4d11da8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
fdiv.d f18, f2, f26, dyn # perform operation
fdiv.d f18, f2, f26, rdn # perform operation
fdiv.d f18, f2, f26, rmm # perform operation
fdiv.d f18, f2, f26, rne # perform operation
fdiv.d f18, f2, f26, rtz # perform operation
fdiv.d f18, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
li x9, 0x49868b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fdiv.d f9, f18, f15, dyn # perform operation
fdiv.d f9, f18, f15, rdn # perform operation
fdiv.d f9, f18, f15, rmm # perform operation
fdiv.d f9, f18, f15, rne # perform operation
fdiv.d f9, f18, f15, rtz # perform operation
fdiv.d f9, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
li x9, 0xdbc879d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fdiv.d f9, f31, f23, dyn # perform operation
fdiv.d f9, f31, f23, rdn # perform operation
fdiv.d f9, f31, f23, rmm # perform operation
fdiv.d f9, f31, f23, rne # perform operation
fdiv.d f9, f31, f23, rtz # perform operation
fdiv.d f9, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x13, 0xd7f7da1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fdiv.d f13, f3, f9, dyn # perform operation
fdiv.d f13, f3, f9, rdn # perform operation
fdiv.d f13, f3, f9, rmm # perform operation
fdiv.d f13, f3, f9, rne # perform operation
fdiv.d f13, f3, f9, rtz # perform operation
fdiv.d f13, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
li x8, 0x1dd51fc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fdiv.d f8, f30, f19, dyn # perform operation
fdiv.d f8, f30, f19, rdn # perform operation
fdiv.d f8, f30, f19, rmm # perform operation
fdiv.d f8, f30, f19, rne # perform operation
fdiv.d f8, f30, f19, rtz # perform operation
fdiv.d f8, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
li x4, 0x824407db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fdiv.d f4, f6, f13, dyn # perform operation
fdiv.d f4, f6, f13, rdn # perform operation
fdiv.d f4, f6, f13, rmm # perform operation
fdiv.d f4, f6, f13, rne # perform operation
fdiv.d f4, f6, f13, rtz # perform operation
fdiv.d f4, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
li x26, 0x147ca4a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fdiv.d f26, f19, f13, dyn # perform operation
fdiv.d f26, f19, f13, rdn # perform operation
fdiv.d f26, f19, f13, rmm # perform operation
fdiv.d f26, f19, f13, rne # perform operation
fdiv.d f26, f19, f13, rtz # perform operation
fdiv.d f26, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
li x14, 0x1123a76b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fdiv.d f14, f8, f23, dyn # perform operation
fdiv.d f14, f8, f23, rdn # perform operation
fdiv.d f14, f8, f23, rmm # perform operation
fdiv.d f14, f8, f23, rne # perform operation
fdiv.d f14, f8, f23, rtz # perform operation
fdiv.d f14, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
li x11, 0x834c4361 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fdiv.d f11, f22, f1, dyn # perform operation
fdiv.d f11, f22, f1, rdn # perform operation
fdiv.d f11, f22, f1, rmm # perform operation
fdiv.d f11, f22, f1, rne # perform operation
fdiv.d f11, f22, f1, rtz # perform operation
fdiv.d f11, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
li x25, 0x692f8483 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fdiv.d f25, f29, f22, dyn # perform operation
fdiv.d f25, f29, f22, rdn # perform operation
fdiv.d f25, f29, f22, rmm # perform operation
fdiv.d f25, f29, f22, rne # perform operation
fdiv.d f25, f29, f22, rtz # perform operation
fdiv.d f25, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
li x30, 0x2036375f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fdiv.d f30, f25, f5, dyn # perform operation
fdiv.d f30, f25, f5, rdn # perform operation
fdiv.d f30, f25, f5, rmm # perform operation
fdiv.d f30, f25, f5, rne # perform operation
fdiv.d f30, f25, f5, rtz # perform operation
fdiv.d f30, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
li x3, 0x5f4c65f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
fdiv.d f3, f24, f7, dyn # perform operation
fdiv.d f3, f24, f7, rdn # perform operation
fdiv.d f3, f24, f7, rmm # perform operation
fdiv.d f3, f24, f7, rne # perform operation
fdiv.d f3, f24, f7, rtz # perform operation
fdiv.d f3, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
li x6, 0xca5b2c45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fdiv.d f6, f9, f1, dyn # perform operation
fdiv.d f6, f9, f1, rdn # perform operation
fdiv.d f6, f9, f1, rmm # perform operation
fdiv.d f6, f9, f1, rne # perform operation
fdiv.d f6, f9, f1, rtz # perform operation
fdiv.d f6, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
li x26, 0x53939ebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fdiv.d f26, f30, f21, dyn # perform operation
fdiv.d f26, f30, f21, rdn # perform operation
fdiv.d f26, f30, f21, rmm # perform operation
fdiv.d f26, f30, f21, rne # perform operation
fdiv.d f26, f30, f21, rtz # perform operation
fdiv.d f26, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
li x4, 0xb3ebe7c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fdiv.d f4, f16, f8, dyn # perform operation
fdiv.d f4, f16, f8, rdn # perform operation
fdiv.d f4, f16, f8, rmm # perform operation
fdiv.d f4, f16, f8, rne # perform operation
fdiv.d f4, f16, f8, rtz # perform operation
fdiv.d f4, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
li x5, 0x470d0310 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
fdiv.d f5, f19, f17, dyn # perform operation
fdiv.d f5, f19, f17, rdn # perform operation
fdiv.d f5, f19, f17, rmm # perform operation
fdiv.d f5, f19, f17, rne # perform operation
fdiv.d f5, f19, f17, rtz # perform operation
fdiv.d f5, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
li x22, 0x442d5e5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xbff0000000000000 from memory into f4
fdiv.d f22, f20, f4, dyn # perform operation
fdiv.d f22, f20, f4, rdn # perform operation
fdiv.d f22, f20, f4, rmm # perform operation
fdiv.d f22, f20, f4, rne # perform operation
fdiv.d f22, f20, f4, rtz # perform operation
fdiv.d f22, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
li x10, 0x37ad918c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fdiv.d f10, f1, f25, dyn # perform operation
fdiv.d f10, f1, f25, rdn # perform operation
fdiv.d f10, f1, f25, rmm # perform operation
fdiv.d f10, f1, f25, rne # perform operation
fdiv.d f10, f1, f25, rtz # perform operation
fdiv.d f10, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
li x21, 0xd7bed963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
fdiv.d f21, f9, f1, dyn # perform operation
fdiv.d f21, f9, f1, rdn # perform operation
fdiv.d f21, f9, f1, rmm # perform operation
fdiv.d f21, f9, f1, rne # perform operation
fdiv.d f21, f9, f1, rtz # perform operation
fdiv.d f21, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
li x11, 0x7639466f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
fdiv.d f11, f25, f17, dyn # perform operation
fdiv.d f11, f25, f17, rdn # perform operation
fdiv.d f11, f25, f17, rmm # perform operation
fdiv.d f11, f25, f17, rne # perform operation
fdiv.d f11, f25, f17, rtz # perform operation
fdiv.d f11, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
li x16, 0x84929542 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fdiv.d f16, f12, f13, dyn # perform operation
fdiv.d f16, f12, f13, rdn # perform operation
fdiv.d f16, f12, f13, rmm # perform operation
fdiv.d f16, f12, f13, rne # perform operation
fdiv.d f16, f12, f13, rtz # perform operation
fdiv.d f16, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f12, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
li x29, 0xd51afbce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fdiv.d f29, f9, f24, dyn # perform operation
fdiv.d f29, f9, f24, rdn # perform operation
fdiv.d f29, f9, f24, rmm # perform operation
fdiv.d f29, f9, f24, rne # perform operation
fdiv.d f29, f9, f24, rtz # perform operation
fdiv.d f29, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
li x27, 0x3219aa51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fdiv.d f27, f19, f16, dyn # perform operation
fdiv.d f27, f19, f16, rdn # perform operation
fdiv.d f27, f19, f16, rmm # perform operation
fdiv.d f27, f19, f16, rne # perform operation
fdiv.d f27, f19, f16, rtz # perform operation
fdiv.d f27, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
li x12, 0xac9beb0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
fdiv.d f12, f25, f9, dyn # perform operation
fdiv.d f12, f25, f9, rdn # perform operation
fdiv.d f12, f25, f9, rmm # perform operation
fdiv.d f12, f25, f9, rne # perform operation
fdiv.d f12, f25, f9, rtz # perform operation
fdiv.d f12, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
li x14, 0x73ce5bb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fdiv.d f14, f8, f22, dyn # perform operation
fdiv.d f14, f8, f22, rdn # perform operation
fdiv.d f14, f8, f22, rmm # perform operation
fdiv.d f14, f8, f22, rne # perform operation
fdiv.d f14, f8, f22, rtz # perform operation
fdiv.d f14, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
li x10, 0xcb6b6271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fdiv.d f10, f9, f17, dyn # perform operation
fdiv.d f10, f9, f17, rdn # perform operation
fdiv.d f10, f9, f17, rmm # perform operation
fdiv.d f10, f9, f17, rne # perform operation
fdiv.d f10, f9, f17, rtz # perform operation
fdiv.d f10, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
li x12, 0x46cf61bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fdiv.d f12, f18, f10, dyn # perform operation
fdiv.d f12, f18, f10, rdn # perform operation
fdiv.d f12, f18, f10, rmm # perform operation
fdiv.d f12, f18, f10, rne # perform operation
fdiv.d f12, f18, f10, rtz # perform operation
fdiv.d f12, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
li x7, 0xedd11ba5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
fdiv.d f7, f15, f25, dyn # perform operation
fdiv.d f7, f15, f25, rdn # perform operation
fdiv.d f7, f15, f25, rmm # perform operation
fdiv.d f7, f15, f25, rne # perform operation
fdiv.d f7, f15, f25, rtz # perform operation
fdiv.d f7, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
li x26, 0xffc329f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fdiv.d f26, f19, f18, dyn # perform operation
fdiv.d f26, f19, f18, rdn # perform operation
fdiv.d f26, f19, f18, rmm # perform operation
fdiv.d f26, f19, f18, rne # perform operation
fdiv.d f26, f19, f18, rtz # perform operation
fdiv.d f26, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
li x28, 0xaaeec0b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
fdiv.d f28, f26, f30, dyn # perform operation
fdiv.d f28, f26, f30, rdn # perform operation
fdiv.d f28, f26, f30, rmm # perform operation
fdiv.d f28, f26, f30, rne # perform operation
fdiv.d f28, f26, f30, rtz # perform operation
fdiv.d f28, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
li x26, 0x8c31a711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fdiv.d f26, f24, f12, dyn # perform operation
fdiv.d f26, f24, f12, rdn # perform operation
fdiv.d f26, f24, f12, rmm # perform operation
fdiv.d f26, f24, f12, rne # perform operation
fdiv.d f26, f24, f12, rtz # perform operation
fdiv.d f26, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
li x2, 0x5f6cd467 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fdiv.d f2, f7, f23, dyn # perform operation
fdiv.d f2, f7, f23, rdn # perform operation
fdiv.d f2, f7, f23, rmm # perform operation
fdiv.d f2, f7, f23, rne # perform operation
fdiv.d f2, f7, f23, rtz # perform operation
fdiv.d f2, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
li x30, 0xdbafe9bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fdiv.d f30, f10, f21, dyn # perform operation
fdiv.d f30, f10, f21, rdn # perform operation
fdiv.d f30, f10, f21, rmm # perform operation
fdiv.d f30, f10, f21, rne # perform operation
fdiv.d f30, f10, f21, rtz # perform operation
fdiv.d f30, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
li x9, 0x7c2ac32e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fdiv.d f9, f8, f24, dyn # perform operation
fdiv.d f9, f8, f24, rdn # perform operation
fdiv.d f9, f8, f24, rmm # perform operation
fdiv.d f9, f8, f24, rne # perform operation
fdiv.d f9, f8, f24, rtz # perform operation
fdiv.d f9, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
li x17, 0x45b1e7da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fdiv.d f17, f29, f27, dyn # perform operation
fdiv.d f17, f29, f27, rdn # perform operation
fdiv.d f17, f29, f27, rmm # perform operation
fdiv.d f17, f29, f27, rne # perform operation
fdiv.d f17, f29, f27, rtz # perform operation
fdiv.d f17, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
li x9, 0xe129a4ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
fdiv.d f9, f19, f13, dyn # perform operation
fdiv.d f9, f19, f13, rdn # perform operation
fdiv.d f9, f19, f13, rmm # perform operation
fdiv.d f9, f19, f13, rne # perform operation
fdiv.d f9, f19, f13, rtz # perform operation
fdiv.d f9, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
li x14, 0x0af3e1a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fdiv.d f14, f12, f18, dyn # perform operation
fdiv.d f14, f12, f18, rdn # perform operation
fdiv.d f14, f12, f18, rmm # perform operation
fdiv.d f14, f12, f18, rne # perform operation
fdiv.d f14, f12, f18, rtz # perform operation
fdiv.d f14, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
li x3, 0x04369a94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fdiv.d f3, f20, f2, dyn # perform operation
fdiv.d f3, f20, f2, rdn # perform operation
fdiv.d f3, f20, f2, rmm # perform operation
fdiv.d f3, f20, f2, rne # perform operation
fdiv.d f3, f20, f2, rtz # perform operation
fdiv.d f3, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
li x13, 0xc3b33eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fdiv.d f13, f16, f12, dyn # perform operation
fdiv.d f13, f16, f12, rdn # perform operation
fdiv.d f13, f16, f12, rmm # perform operation
fdiv.d f13, f16, f12, rne # perform operation
fdiv.d f13, f16, f12, rtz # perform operation
fdiv.d f13, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f16, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
li x7, 0xbf519ec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
fdiv.d f7, f13, f21, dyn # perform operation
fdiv.d f7, f13, f21, rdn # perform operation
fdiv.d f7, f13, f21, rmm # perform operation
fdiv.d f7, f13, f21, rne # perform operation
fdiv.d f7, f13, f21, rtz # perform operation
fdiv.d f7, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
li x11, 0xee0ceffb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fdiv.d f11, f13, f25, dyn # perform operation
fdiv.d f11, f13, f25, rdn # perform operation
fdiv.d f11, f13, f25, rmm # perform operation
fdiv.d f11, f13, f25, rne # perform operation
fdiv.d f11, f13, f25, rtz # perform operation
fdiv.d f11, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
li x21, 0x192fd2d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fdiv.d f21, f6, f13, dyn # perform operation
fdiv.d f21, f6, f13, rdn # perform operation
fdiv.d f21, f6, f13, rmm # perform operation
fdiv.d f21, f6, f13, rne # perform operation
fdiv.d f21, f6, f13, rtz # perform operation
fdiv.d f21, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
li x9, 0xa0896a4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fdiv.d f9, f15, f27, dyn # perform operation
fdiv.d f9, f15, f27, rdn # perform operation
fdiv.d f9, f15, f27, rmm # perform operation
fdiv.d f9, f15, f27, rne # perform operation
fdiv.d f9, f15, f27, rtz # perform operation
fdiv.d f9, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
li x23, 0x6aaf87f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fdiv.d f23, f27, f8, dyn # perform operation
fdiv.d f23, f27, f8, rdn # perform operation
fdiv.d f23, f27, f8, rmm # perform operation
fdiv.d f23, f27, f8, rne # perform operation
fdiv.d f23, f27, f8, rtz # perform operation
fdiv.d f23, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
li x19, 0xe441a81d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fdiv.d f19, f10, f18, dyn # perform operation
fdiv.d f19, f10, f18, rdn # perform operation
fdiv.d f19, f10, f18, rmm # perform operation
fdiv.d f19, f10, f18, rne # perform operation
fdiv.d f19, f10, f18, rtz # perform operation
fdiv.d f19, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
li x4, 0xc9a0558f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fdiv.d f4, f5, f30, dyn # perform operation
fdiv.d f4, f5, f30, rdn # perform operation
fdiv.d f4, f5, f30, rmm # perform operation
fdiv.d f4, f5, f30, rne # perform operation
fdiv.d f4, f5, f30, rtz # perform operation
fdiv.d f4, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
li x1, 0xac7b2ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fdiv.d f1, f17, f14, dyn # perform operation
fdiv.d f1, f17, f14, rdn # perform operation
fdiv.d f1, f17, f14, rmm # perform operation
fdiv.d f1, f17, f14, rne # perform operation
fdiv.d f1, f17, f14, rtz # perform operation
fdiv.d f1, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f17, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
li x20, 0x3e572f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fdiv.d f20, f31, f27, dyn # perform operation
fdiv.d f20, f31, f27, rdn # perform operation
fdiv.d f20, f31, f27, rmm # perform operation
fdiv.d f20, f31, f27, rne # perform operation
fdiv.d f20, f31, f27, rtz # perform operation
fdiv.d f20, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
li x6, 0x5070ddb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fdiv.d f6, f17, f30, dyn # perform operation
fdiv.d f6, f17, f30, rdn # perform operation
fdiv.d f6, f17, f30, rmm # perform operation
fdiv.d f6, f17, f30, rne # perform operation
fdiv.d f6, f17, f30, rtz # perform operation
fdiv.d f6, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
li x15, 0xa9de63cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fdiv.d f15, f10, f12, dyn # perform operation
fdiv.d f15, f10, f12, rdn # perform operation
fdiv.d f15, f10, f12, rmm # perform operation
fdiv.d f15, f10, f12, rne # perform operation
fdiv.d f15, f10, f12, rtz # perform operation
fdiv.d f15, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
li x4, 0x7676891d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fdiv.d f4, f25, f3, dyn # perform operation
fdiv.d f4, f25, f3, rdn # perform operation
fdiv.d f4, f25, f3, rmm # perform operation
fdiv.d f4, f25, f3, rne # perform operation
fdiv.d f4, f25, f3, rtz # perform operation
fdiv.d f4, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
li x30, 0xd5e22149 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
fdiv.d f30, f7, f18, dyn # perform operation
fdiv.d f30, f7, f18, rdn # perform operation
fdiv.d f30, f7, f18, rmm # perform operation
fdiv.d f30, f7, f18, rne # perform operation
fdiv.d f30, f7, f18, rtz # perform operation
fdiv.d f30, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f7, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
li x20, 0xa77a722a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
fdiv.d f20, f23, f26, dyn # perform operation
fdiv.d f20, f23, f26, rdn # perform operation
fdiv.d f20, f23, f26, rmm # perform operation
fdiv.d f20, f23, f26, rne # perform operation
fdiv.d f20, f23, f26, rtz # perform operation
fdiv.d f20, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
li x27, 0x39f6dae3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fdiv.d f27, f17, f28, dyn # perform operation
fdiv.d f27, f17, f28, rdn # perform operation
fdiv.d f27, f17, f28, rmm # perform operation
fdiv.d f27, f17, f28, rne # perform operation
fdiv.d f27, f17, f28, rtz # perform operation
fdiv.d f27, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f17, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
li x16, 0xf212a934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fdiv.d f16, f1, f19, dyn # perform operation
fdiv.d f16, f1, f19, rdn # perform operation
fdiv.d f16, f1, f19, rmm # perform operation
fdiv.d f16, f1, f19, rne # perform operation
fdiv.d f16, f1, f19, rtz # perform operation
fdiv.d f16, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
li x12, 0x222afe16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fdiv.d f12, f9, f3, dyn # perform operation
fdiv.d f12, f9, f3, rdn # perform operation
fdiv.d f12, f9, f3, rmm # perform operation
fdiv.d f12, f9, f3, rne # perform operation
fdiv.d f12, f9, f3, rtz # perform operation
fdiv.d f12, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
li x1, 0x21eea7f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fdiv.d f1, f14, f16, dyn # perform operation
fdiv.d f1, f14, f16, rdn # perform operation
fdiv.d f1, f14, f16, rmm # perform operation
fdiv.d f1, f14, f16, rne # perform operation
fdiv.d f1, f14, f16, rtz # perform operation
fdiv.d f1, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
li x22, 0x29af7a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fdiv.d f22, f12, f31, dyn # perform operation
fdiv.d f22, f12, f31, rdn # perform operation
fdiv.d f22, f12, f31, rmm # perform operation
fdiv.d f22, f12, f31, rne # perform operation
fdiv.d f22, f12, f31, rtz # perform operation
fdiv.d f22, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
li x15, 0x1e7145b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fdiv.d f15, f8, f29, dyn # perform operation
fdiv.d f15, f8, f29, rdn # perform operation
fdiv.d f15, f8, f29, rmm # perform operation
fdiv.d f15, f8, f29, rne # perform operation
fdiv.d f15, f8, f29, rtz # perform operation
fdiv.d f15, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
li x26, 0x75527452 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fdiv.d f26, f18, f23, dyn # perform operation
fdiv.d f26, f18, f23, rdn # perform operation
fdiv.d f26, f18, f23, rmm # perform operation
fdiv.d f26, f18, f23, rne # perform operation
fdiv.d f26, f18, f23, rtz # perform operation
fdiv.d f26, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
li x23, 0xea43431f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fdiv.d f23, f6, f15, dyn # perform operation
fdiv.d f23, f6, f15, rdn # perform operation
fdiv.d f23, f6, f15, rmm # perform operation
fdiv.d f23, f6, f15, rne # perform operation
fdiv.d f23, f6, f15, rtz # perform operation
fdiv.d f23, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
li x3, 0xac0f87b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fdiv.d f3, f21, f17, dyn # perform operation
fdiv.d f3, f21, f17, rdn # perform operation
fdiv.d f3, f21, f17, rmm # perform operation
fdiv.d f3, f21, f17, rne # perform operation
fdiv.d f3, f21, f17, rtz # perform operation
fdiv.d f3, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x19, 0x4819f4b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fdiv.d f19, f15, f24, dyn # perform operation
fdiv.d f19, f15, f24, rdn # perform operation
fdiv.d f19, f15, f24, rmm # perform operation
fdiv.d f19, f15, f24, rne # perform operation
fdiv.d f19, f15, f24, rtz # perform operation
fdiv.d f19, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
li x27, 0x26762eb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
fdiv.d f27, f2, f26, dyn # perform operation
fdiv.d f27, f2, f26, rdn # perform operation
fdiv.d f27, f2, f26, rmm # perform operation
fdiv.d f27, f2, f26, rne # perform operation
fdiv.d f27, f2, f26, rtz # perform operation
fdiv.d f27, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
li x10, 0xa60b9671 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fdiv.d f10, f19, f6, dyn # perform operation
fdiv.d f10, f19, f6, rdn # perform operation
fdiv.d f10, f19, f6, rmm # perform operation
fdiv.d f10, f19, f6, rne # perform operation
fdiv.d f10, f19, f6, rtz # perform operation
fdiv.d f10, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
li x17, 0x81589091 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fdiv.d f17, f6, f19, dyn # perform operation
fdiv.d f17, f6, f19, rdn # perform operation
fdiv.d f17, f6, f19, rmm # perform operation
fdiv.d f17, f6, f19, rne # perform operation
fdiv.d f17, f6, f19, rtz # perform operation
fdiv.d f17, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
li x18, 0xade4d294 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fdiv.d f18, f9, f27, dyn # perform operation
fdiv.d f18, f9, f27, rdn # perform operation
fdiv.d f18, f9, f27, rmm # perform operation
fdiv.d f18, f9, f27, rne # perform operation
fdiv.d f18, f9, f27, rtz # perform operation
fdiv.d f18, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
li x11, 0x25e86179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fdiv.d f11, f24, f9, dyn # perform operation
fdiv.d f11, f24, f9, rdn # perform operation
fdiv.d f11, f24, f9, rmm # perform operation
fdiv.d f11, f24, f9, rne # perform operation
fdiv.d f11, f24, f9, rtz # perform operation
fdiv.d f11, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
li x31, 0x5b11a347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fdiv.d f31, f25, f10, dyn # perform operation
fdiv.d f31, f25, f10, rdn # perform operation
fdiv.d f31, f25, f10, rmm # perform operation
fdiv.d f31, f25, f10, rne # perform operation
fdiv.d f31, f25, f10, rtz # perform operation
fdiv.d f31, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
li x4, 0x3adc2d72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
fdiv.d f4, f1, f28, dyn # perform operation
fdiv.d f4, f1, f28, rdn # perform operation
fdiv.d f4, f1, f28, rmm # perform operation
fdiv.d f4, f1, f28, rne # perform operation
fdiv.d f4, f1, f28, rtz # perform operation
fdiv.d f4, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f1, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
li x9, 0xf1b5bd67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fdiv.d f9, f21, f17, dyn # perform operation
fdiv.d f9, f21, f17, rdn # perform operation
fdiv.d f9, f21, f17, rmm # perform operation
fdiv.d f9, f21, f17, rne # perform operation
fdiv.d f9, f21, f17, rtz # perform operation
fdiv.d f9, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
li x4, 0x1ee6ecf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fdiv.d f4, f7, f2, dyn # perform operation
fdiv.d f4, f7, f2, rdn # perform operation
fdiv.d f4, f7, f2, rmm # perform operation
fdiv.d f4, f7, f2, rne # perform operation
fdiv.d f4, f7, f2, rtz # perform operation
fdiv.d f4, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
li x2, 0xc332740d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fdiv.d f2, f3, f8, dyn # perform operation
fdiv.d f2, f3, f8, rdn # perform operation
fdiv.d f2, f3, f8, rmm # perform operation
fdiv.d f2, f3, f8, rne # perform operation
fdiv.d f2, f3, f8, rtz # perform operation
fdiv.d f2, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
li x28, 0x922c6378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fdiv.d f28, f25, f3, dyn # perform operation
fdiv.d f28, f25, f3, rdn # perform operation
fdiv.d f28, f25, f3, rmm # perform operation
fdiv.d f28, f25, f3, rne # perform operation
fdiv.d f28, f25, f3, rtz # perform operation
fdiv.d f28, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
li x6, 0x2615ffd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fdiv.d f6, f9, f16, dyn # perform operation
fdiv.d f6, f9, f16, rdn # perform operation
fdiv.d f6, f9, f16, rmm # perform operation
fdiv.d f6, f9, f16, rne # perform operation
fdiv.d f6, f9, f16, rtz # perform operation
fdiv.d f6, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
li x18, 0xa16e9b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fdiv.d f18, f10, f12, dyn # perform operation
fdiv.d f18, f10, f12, rdn # perform operation
fdiv.d f18, f10, f12, rmm # perform operation
fdiv.d f18, f10, f12, rne # perform operation
fdiv.d f18, f10, f12, rtz # perform operation
fdiv.d f18, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
li x15, 0x7a636799 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fdiv.d f15, f13, f19, dyn # perform operation
fdiv.d f15, f13, f19, rdn # perform operation
fdiv.d f15, f13, f19, rmm # perform operation
fdiv.d f15, f13, f19, rne # perform operation
fdiv.d f15, f13, f19, rtz # perform operation
fdiv.d f15, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
li x20, 0x9def6205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fdiv.d f20, f26, f22, dyn # perform operation
fdiv.d f20, f26, f22, rdn # perform operation
fdiv.d f20, f26, f22, rmm # perform operation
fdiv.d f20, f26, f22, rne # perform operation
fdiv.d f20, f26, f22, rtz # perform operation
fdiv.d f20, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
li x29, 0x96dcc566 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fdiv.d f29, f22, f23, dyn # perform operation
fdiv.d f29, f22, f23, rdn # perform operation
fdiv.d f29, f22, f23, rmm # perform operation
fdiv.d f29, f22, f23, rne # perform operation
fdiv.d f29, f22, f23, rtz # perform operation
fdiv.d f29, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
li x8, 0x3b08eb4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fdiv.d f8, f21, f29, dyn # perform operation
fdiv.d f8, f21, f29, rdn # perform operation
fdiv.d f8, f21, f29, rmm # perform operation
fdiv.d f8, f21, f29, rne # perform operation
fdiv.d f8, f21, f29, rtz # perform operation
fdiv.d f8, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
li x17, 0x187dd5d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fdiv.d f17, f5, f11, dyn # perform operation
fdiv.d f17, f5, f11, rdn # perform operation
fdiv.d f17, f5, f11, rmm # perform operation
fdiv.d f17, f5, f11, rne # perform operation
fdiv.d f17, f5, f11, rtz # perform operation
fdiv.d f17, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
li x31, 0x3c0e60b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fdiv.d f31, f1, f10, dyn # perform operation
fdiv.d f31, f1, f10, rdn # perform operation
fdiv.d f31, f1, f10, rmm # perform operation
fdiv.d f31, f1, f10, rne # perform operation
fdiv.d f31, f1, f10, rtz # perform operation
fdiv.d f31, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
li x15, 0xd37e2ccb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fdiv.d f15, f25, f26, dyn # perform operation
fdiv.d f15, f25, f26, rdn # perform operation
fdiv.d f15, f25, f26, rmm # perform operation
fdiv.d f15, f25, f26, rne # perform operation
fdiv.d f15, f25, f26, rtz # perform operation
fdiv.d f15, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
li x22, 0x8c914ed4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fdiv.d f22, f23, f13, dyn # perform operation
fdiv.d f22, f23, f13, rdn # perform operation
fdiv.d f22, f23, f13, rmm # perform operation
fdiv.d f22, f23, f13, rne # perform operation
fdiv.d f22, f23, f13, rtz # perform operation
fdiv.d f22, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f23, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
li x13, 0x6abfa51c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fdiv.d f13, f11, f25, dyn # perform operation
fdiv.d f13, f11, f25, rdn # perform operation
fdiv.d f13, f11, f25, rmm # perform operation
fdiv.d f13, f11, f25, rne # perform operation
fdiv.d f13, f11, f25, rtz # perform operation
fdiv.d f13, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
li x29, 0xa11b8e29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fdiv.d f29, f22, f10, dyn # perform operation
fdiv.d f29, f22, f10, rdn # perform operation
fdiv.d f29, f22, f10, rmm # perform operation
fdiv.d f29, f22, f10, rne # perform operation
fdiv.d f29, f22, f10, rtz # perform operation
fdiv.d f29, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
li x22, 0x3a97c613 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fdiv.d f22, f13, f2, dyn # perform operation
fdiv.d f22, f13, f2, rdn # perform operation
fdiv.d f22, f13, f2, rmm # perform operation
fdiv.d f22, f13, f2, rne # perform operation
fdiv.d f22, f13, f2, rtz # perform operation
fdiv.d f22, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
li x11, 0x624d7d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fdiv.d f11, f8, f19, dyn # perform operation
fdiv.d f11, f8, f19, rdn # perform operation
fdiv.d f11, f8, f19, rmm # perform operation
fdiv.d f11, f8, f19, rne # perform operation
fdiv.d f11, f8, f19, rtz # perform operation
fdiv.d f11, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f8, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
li x16, 0x5a22c02d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fdiv.d f16, f5, f8, dyn # perform operation
fdiv.d f16, f5, f8, rdn # perform operation
fdiv.d f16, f5, f8, rmm # perform operation
fdiv.d f16, f5, f8, rne # perform operation
fdiv.d f16, f5, f8, rtz # perform operation
fdiv.d f16, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
li x18, 0x523dca00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fdiv.d f18, f3, f11, dyn # perform operation
fdiv.d f18, f3, f11, rdn # perform operation
fdiv.d f18, f3, f11, rmm # perform operation
fdiv.d f18, f3, f11, rne # perform operation
fdiv.d f18, f3, f11, rtz # perform operation
fdiv.d f18, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
li x20, 0x8e249158 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fdiv.d f20, f7, f12, dyn # perform operation
fdiv.d f20, f7, f12, rdn # perform operation
fdiv.d f20, f7, f12, rmm # perform operation
fdiv.d f20, f7, f12, rne # perform operation
fdiv.d f20, f7, f12, rtz # perform operation
fdiv.d f20, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
li x21, 0x51d9b1a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f21, f30, f24, dyn # perform operation
fdiv.d f21, f30, f24, rdn # perform operation
fdiv.d f21, f30, f24, rmm # perform operation
fdiv.d f21, f30, f24, rne # perform operation
fdiv.d f21, f30, f24, rtz # perform operation
fdiv.d f21, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
li x2, 0x710f5f48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
fdiv.d f2, f29, f23, dyn # perform operation
fdiv.d f2, f29, f23, rdn # perform operation
fdiv.d f2, f29, f23, rmm # perform operation
fdiv.d f2, f29, f23, rne # perform operation
fdiv.d f2, f29, f23, rtz # perform operation
fdiv.d f2, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
li x28, 0xe1a9ade3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fdiv.d f28, f16, f24, dyn # perform operation
fdiv.d f28, f16, f24, rdn # perform operation
fdiv.d f28, f16, f24, rmm # perform operation
fdiv.d f28, f16, f24, rne # perform operation
fdiv.d f28, f16, f24, rtz # perform operation
fdiv.d f28, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
li x1, 0x7fc1d7b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fdiv.d f1, f23, f17, dyn # perform operation
fdiv.d f1, f23, f17, rdn # perform operation
fdiv.d f1, f23, f17, rmm # perform operation
fdiv.d f1, f23, f17, rne # perform operation
fdiv.d f1, f23, f17, rtz # perform operation
fdiv.d f1, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
li x2, 0xb9b453a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fdiv.d f2, f21, f19, dyn # perform operation
fdiv.d f2, f21, f19, rdn # perform operation
fdiv.d f2, f21, f19, rmm # perform operation
fdiv.d f2, f21, f19, rne # perform operation
fdiv.d f2, f21, f19, rtz # perform operation
fdiv.d f2, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f21, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
li x20, 0xe50d1512 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fdiv.d f20, f21, f26, dyn # perform operation
fdiv.d f20, f21, f26, rdn # perform operation
fdiv.d f20, f21, f26, rmm # perform operation
fdiv.d f20, f21, f26, rne # perform operation
fdiv.d f20, f21, f26, rtz # perform operation
fdiv.d f20, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f21, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
li x23, 0xba667661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fdiv.d f23, f17, f16, dyn # perform operation
fdiv.d f23, f17, f16, rdn # perform operation
fdiv.d f23, f17, f16, rmm # perform operation
fdiv.d f23, f17, f16, rne # perform operation
fdiv.d f23, f17, f16, rtz # perform operation
fdiv.d f23, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
li x17, 0xd63b8593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fdiv.d f17, f19, f14, dyn # perform operation
fdiv.d f17, f19, f14, rdn # perform operation
fdiv.d f17, f19, f14, rmm # perform operation
fdiv.d f17, f19, f14, rne # perform operation
fdiv.d f17, f19, f14, rtz # perform operation
fdiv.d f17, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f19, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
li x22, 0x6172efe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fdiv.d f22, f24, f7, dyn # perform operation
fdiv.d f22, f24, f7, rdn # perform operation
fdiv.d f22, f24, f7, rmm # perform operation
fdiv.d f22, f24, f7, rne # perform operation
fdiv.d f22, f24, f7, rtz # perform operation
fdiv.d f22, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
li x7, 0x052e162c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fdiv.d f7, f2, f29, dyn # perform operation
fdiv.d f7, f2, f29, rdn # perform operation
fdiv.d f7, f2, f29, rmm # perform operation
fdiv.d f7, f2, f29, rne # perform operation
fdiv.d f7, f2, f29, rtz # perform operation
fdiv.d f7, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
li x19, 0x35c72349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fdiv.d f19, f30, f28, dyn # perform operation
fdiv.d f19, f30, f28, rdn # perform operation
fdiv.d f19, f30, f28, rmm # perform operation
fdiv.d f19, f30, f28, rne # perform operation
fdiv.d f19, f30, f28, rtz # perform operation
fdiv.d f19, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
li x10, 0x3c5289af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
fdiv.d f10, f29, f13, dyn # perform operation
fdiv.d f10, f29, f13, rdn # perform operation
fdiv.d f10, f29, f13, rmm # perform operation
fdiv.d f10, f29, f13, rne # perform operation
fdiv.d f10, f29, f13, rtz # perform operation
fdiv.d f10, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
li x12, 0xf4ed0148 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fdiv.d f12, f7, f17, dyn # perform operation
fdiv.d f12, f7, f17, rdn # perform operation
fdiv.d f12, f7, f17, rmm # perform operation
fdiv.d f12, f7, f17, rne # perform operation
fdiv.d f12, f7, f17, rtz # perform operation
fdiv.d f12, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
li x13, 0xd52ce72b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fdiv.d f13, f6, f23, dyn # perform operation
fdiv.d f13, f6, f23, rdn # perform operation
fdiv.d f13, f6, f23, rmm # perform operation
fdiv.d f13, f6, f23, rne # perform operation
fdiv.d f13, f6, f23, rtz # perform operation
fdiv.d f13, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
li x28, 0x3cbfec3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fdiv.d f28, f14, f26, dyn # perform operation
fdiv.d f28, f14, f26, rdn # perform operation
fdiv.d f28, f14, f26, rmm # perform operation
fdiv.d f28, f14, f26, rne # perform operation
fdiv.d f28, f14, f26, rtz # perform operation
fdiv.d f28, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
li x13, 0x5a73db5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
fdiv.d f13, f15, f12, dyn # perform operation
fdiv.d f13, f15, f12, rdn # perform operation
fdiv.d f13, f15, f12, rmm # perform operation
fdiv.d f13, f15, f12, rne # perform operation
fdiv.d f13, f15, f12, rtz # perform operation
fdiv.d f13, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
li x15, 0xace19e3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fdiv.d f15, f16, f8, dyn # perform operation
fdiv.d f15, f16, f8, rdn # perform operation
fdiv.d f15, f16, f8, rmm # perform operation
fdiv.d f15, f16, f8, rne # perform operation
fdiv.d f15, f16, f8, rtz # perform operation
fdiv.d f15, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
li x29, 0xaaafff33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
fdiv.d f29, f12, f27, dyn # perform operation
fdiv.d f29, f12, f27, rdn # perform operation
fdiv.d f29, f12, f27, rmm # perform operation
fdiv.d f29, f12, f27, rne # perform operation
fdiv.d f29, f12, f27, rtz # perform operation
fdiv.d f29, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
li x20, 0x37a56548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fdiv.d f20, f10, f21, dyn # perform operation
fdiv.d f20, f10, f21, rdn # perform operation
fdiv.d f20, f10, f21, rmm # perform operation
fdiv.d f20, f10, f21, rne # perform operation
fdiv.d f20, f10, f21, rtz # perform operation
fdiv.d f20, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
li x19, 0x391478ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fdiv.d f19, f31, f16, dyn # perform operation
fdiv.d f19, f31, f16, rdn # perform operation
fdiv.d f19, f31, f16, rmm # perform operation
fdiv.d f19, f31, f16, rne # perform operation
fdiv.d f19, f31, f16, rtz # perform operation
fdiv.d f19, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
li x8, 0x2f8cbe71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fdiv.d f8, f11, f16, dyn # perform operation
fdiv.d f8, f11, f16, rdn # perform operation
fdiv.d f8, f11, f16, rmm # perform operation
fdiv.d f8, f11, f16, rne # perform operation
fdiv.d f8, f11, f16, rtz # perform operation
fdiv.d f8, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
li x7, 0x6a4044be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fdiv.d f7, f22, f19, dyn # perform operation
fdiv.d f7, f22, f19, rdn # perform operation
fdiv.d f7, f22, f19, rmm # perform operation
fdiv.d f7, f22, f19, rne # perform operation
fdiv.d f7, f22, f19, rtz # perform operation
fdiv.d f7, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
li x18, 0x5ed34f22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fdiv.d f18, f28, f29, dyn # perform operation
fdiv.d f18, f28, f29, rdn # perform operation
fdiv.d f18, f28, f29, rmm # perform operation
fdiv.d f18, f28, f29, rne # perform operation
fdiv.d f18, f28, f29, rtz # perform operation
fdiv.d f18, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
li x15, 0x6a903be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fdiv.d f15, f16, f8, dyn # perform operation
fdiv.d f15, f16, f8, rdn # perform operation
fdiv.d f15, f16, f8, rmm # perform operation
fdiv.d f15, f16, f8, rne # perform operation
fdiv.d f15, f16, f8, rtz # perform operation
fdiv.d f15, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
li x17, 0xc29ef83f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fdiv.d f17, f20, f8, dyn # perform operation
fdiv.d f17, f20, f8, rdn # perform operation
fdiv.d f17, f20, f8, rmm # perform operation
fdiv.d f17, f20, f8, rne # perform operation
fdiv.d f17, f20, f8, rtz # perform operation
fdiv.d f17, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
li x23, 0x5efb0d60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fdiv.d f23, f5, f1, dyn # perform operation
fdiv.d f23, f5, f1, rdn # perform operation
fdiv.d f23, f5, f1, rmm # perform operation
fdiv.d f23, f5, f1, rne # perform operation
fdiv.d f23, f5, f1, rtz # perform operation
fdiv.d f23, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
li x21, 0xe8d5b8d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f21, f17, f24, dyn # perform operation
fdiv.d f21, f17, f24, rdn # perform operation
fdiv.d f21, f17, f24, rmm # perform operation
fdiv.d f21, f17, f24, rne # perform operation
fdiv.d f21, f17, f24, rtz # perform operation
fdiv.d f21, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
li x16, 0xbfaca8f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fdiv.d f16, f22, f17, dyn # perform operation
fdiv.d f16, f22, f17, rdn # perform operation
fdiv.d f16, f22, f17, rmm # perform operation
fdiv.d f16, f22, f17, rne # perform operation
fdiv.d f16, f22, f17, rtz # perform operation
fdiv.d f16, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
li x5, 0x5402fd48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x3ff0000000000000 from memory into f4
fdiv.d f5, f19, f4, dyn # perform operation
fdiv.d f5, f19, f4, rdn # perform operation
fdiv.d f5, f19, f4, rmm # perform operation
fdiv.d f5, f19, f4, rne # perform operation
fdiv.d f5, f19, f4, rtz # perform operation
fdiv.d f5, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
li x5, 0x652372fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fdiv.d f5, f28, f23, dyn # perform operation
fdiv.d f5, f28, f23, rdn # perform operation
fdiv.d f5, f28, f23, rmm # perform operation
fdiv.d f5, f28, f23, rne # perform operation
fdiv.d f5, f28, f23, rtz # perform operation
fdiv.d f5, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
li x10, 0x4369ea58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fdiv.d f10, f23, f24, dyn # perform operation
fdiv.d f10, f23, f24, rdn # perform operation
fdiv.d f10, f23, f24, rmm # perform operation
fdiv.d f10, f23, f24, rne # perform operation
fdiv.d f10, f23, f24, rtz # perform operation
fdiv.d f10, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
li x28, 0x83cdd9f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fdiv.d f28, f31, f29, dyn # perform operation
fdiv.d f28, f31, f29, rdn # perform operation
fdiv.d f28, f31, f29, rmm # perform operation
fdiv.d f28, f31, f29, rne # perform operation
fdiv.d f28, f31, f29, rtz # perform operation
fdiv.d f28, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
li x18, 0x42b66c2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fdiv.d f18, f16, f26, dyn # perform operation
fdiv.d f18, f16, f26, rdn # perform operation
fdiv.d f18, f16, f26, rmm # perform operation
fdiv.d f18, f16, f26, rne # perform operation
fdiv.d f18, f16, f26, rtz # perform operation
fdiv.d f18, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
li x9, 0x76efbec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fdiv.d f9, f26, f18, dyn # perform operation
fdiv.d f9, f26, f18, rdn # perform operation
fdiv.d f9, f26, f18, rmm # perform operation
fdiv.d f9, f26, f18, rne # perform operation
fdiv.d f9, f26, f18, rtz # perform operation
fdiv.d f9, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
li x8, 0x8f4ba2d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fdiv.d f8, f23, f24, dyn # perform operation
fdiv.d f8, f23, f24, rdn # perform operation
fdiv.d f8, f23, f24, rmm # perform operation
fdiv.d f8, f23, f24, rne # perform operation
fdiv.d f8, f23, f24, rtz # perform operation
fdiv.d f8, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
li x13, 0x22241098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fdiv.d f13, f15, f26, dyn # perform operation
fdiv.d f13, f15, f26, rdn # perform operation
fdiv.d f13, f15, f26, rmm # perform operation
fdiv.d f13, f15, f26, rne # perform operation
fdiv.d f13, f15, f26, rtz # perform operation
fdiv.d f13, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f15, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
li x12, 0x1bfed2c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
fdiv.d f12, f24, f25, dyn # perform operation
fdiv.d f12, f24, f25, rdn # perform operation
fdiv.d f12, f24, f25, rmm # perform operation
fdiv.d f12, f24, f25, rne # perform operation
fdiv.d f12, f24, f25, rtz # perform operation
fdiv.d f12, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
li x11, 0x7b65c646 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fdiv.d f11, f22, f28, dyn # perform operation
fdiv.d f11, f22, f28, rdn # perform operation
fdiv.d f11, f22, f28, rmm # perform operation
fdiv.d f11, f22, f28, rne # perform operation
fdiv.d f11, f22, f28, rtz # perform operation
fdiv.d f11, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
li x3, 0xfaf68254 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fdiv.d f3, f24, f29, dyn # perform operation
fdiv.d f3, f24, f29, rdn # perform operation
fdiv.d f3, f24, f29, rmm # perform operation
fdiv.d f3, f24, f29, rne # perform operation
fdiv.d f3, f24, f29, rtz # perform operation
fdiv.d f3, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
li x19, 0xd28e5a02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fdiv.d f19, f14, f31, dyn # perform operation
fdiv.d f19, f14, f31, rdn # perform operation
fdiv.d f19, f14, f31, rmm # perform operation
fdiv.d f19, f14, f31, rne # perform operation
fdiv.d f19, f14, f31, rtz # perform operation
fdiv.d f19, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
li x12, 0xe1f29271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fdiv.d f12, f13, f27, dyn # perform operation
fdiv.d f12, f13, f27, rdn # perform operation
fdiv.d f12, f13, f27, rmm # perform operation
fdiv.d f12, f13, f27, rne # perform operation
fdiv.d f12, f13, f27, rtz # perform operation
fdiv.d f12, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
li x24, 0x9af1572b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f24, f17, f7, dyn # perform operation
fdiv.d f24, f17, f7, rdn # perform operation
fdiv.d f24, f17, f7, rmm # perform operation
fdiv.d f24, f17, f7, rne # perform operation
fdiv.d f24, f17, f7, rtz # perform operation
fdiv.d f24, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
li x28, 0x6dfd4878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fdiv.d f28, f23, f21, dyn # perform operation
fdiv.d f28, f23, f21, rdn # perform operation
fdiv.d f28, f23, f21, rmm # perform operation
fdiv.d f28, f23, f21, rne # perform operation
fdiv.d f28, f23, f21, rtz # perform operation
fdiv.d f28, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
li x31, 0x994a09ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fdiv.d f31, f1, f12, dyn # perform operation
fdiv.d f31, f1, f12, rdn # perform operation
fdiv.d f31, f1, f12, rmm # perform operation
fdiv.d f31, f1, f12, rne # perform operation
fdiv.d f31, f1, f12, rtz # perform operation
fdiv.d f31, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
li x28, 0x322245b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fdiv.d f28, f5, f11, dyn # perform operation
fdiv.d f28, f5, f11, rdn # perform operation
fdiv.d f28, f5, f11, rmm # perform operation
fdiv.d f28, f5, f11, rne # perform operation
fdiv.d f28, f5, f11, rtz # perform operation
fdiv.d f28, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
li x18, 0xd11253ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
fdiv.d f18, f14, f10, dyn # perform operation
fdiv.d f18, f14, f10, rdn # perform operation
fdiv.d f18, f14, f10, rmm # perform operation
fdiv.d f18, f14, f10, rne # perform operation
fdiv.d f18, f14, f10, rtz # perform operation
fdiv.d f18, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
li x8, 0xa3d59728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fffffffffffffff from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fdiv.d f8, f28, f14, dyn # perform operation
fdiv.d f8, f28, f14, rdn # perform operation
fdiv.d f8, f28, f14, rmm # perform operation
fdiv.d f8, f28, f14, rne # perform operation
fdiv.d f8, f28, f14, rtz # perform operation
fdiv.d f8, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
li x15, 0x4410385b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fdiv.d f15, f26, f11, dyn # perform operation
fdiv.d f15, f26, f11, rdn # perform operation
fdiv.d f15, f26, f11, rmm # perform operation
fdiv.d f15, f26, f11, rne # perform operation
fdiv.d f15, f26, f11, rtz # perform operation
fdiv.d f15, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
li x16, 0x3e96d264 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fdiv.d f16, f29, f22, dyn # perform operation
fdiv.d f16, f29, f22, rdn # perform operation
fdiv.d f16, f29, f22, rmm # perform operation
fdiv.d f16, f29, f22, rne # perform operation
fdiv.d f16, f29, f22, rtz # perform operation
fdiv.d f16, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
li x22, 0x4c192709 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
fdiv.d f22, f27, f28, dyn # perform operation
fdiv.d f22, f27, f28, rdn # perform operation
fdiv.d f22, f27, f28, rmm # perform operation
fdiv.d f22, f27, f28, rne # perform operation
fdiv.d f22, f27, f28, rtz # perform operation
fdiv.d f22, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
li x31, 0x81d04ec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fdiv.d f31, f17, f11, dyn # perform operation
fdiv.d f31, f17, f11, rdn # perform operation
fdiv.d f31, f17, f11, rmm # perform operation
fdiv.d f31, f17, f11, rne # perform operation
fdiv.d f31, f17, f11, rtz # perform operation
fdiv.d f31, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f17, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
li x14, 0x37b22e88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fdiv.d f14, f3, f27, dyn # perform operation
fdiv.d f14, f3, f27, rdn # perform operation
fdiv.d f14, f3, f27, rmm # perform operation
fdiv.d f14, f3, f27, rne # perform operation
fdiv.d f14, f3, f27, rtz # perform operation
fdiv.d f14, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
li x28, 0x908c54c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000000000000 from memory into f4
fdiv.d f28, f13, f4, dyn # perform operation
fdiv.d f28, f13, f4, rdn # perform operation
fdiv.d f28, f13, f4, rmm # perform operation
fdiv.d f28, f13, f4, rne # perform operation
fdiv.d f28, f13, f4, rtz # perform operation
fdiv.d f28, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
li x13, 0x49f9db9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
fdiv.d f13, f5, f17, dyn # perform operation
fdiv.d f13, f5, f17, rdn # perform operation
fdiv.d f13, f5, f17, rmm # perform operation
fdiv.d f13, f5, f17, rne # perform operation
fdiv.d f13, f5, f17, rtz # perform operation
fdiv.d f13, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
li x2, 0xbd7a1983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fdiv.d f2, f19, f29, dyn # perform operation
fdiv.d f2, f19, f29, rdn # perform operation
fdiv.d f2, f19, f29, rmm # perform operation
fdiv.d f2, f19, f29, rne # perform operation
fdiv.d f2, f19, f29, rtz # perform operation
fdiv.d f2, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
li x27, 0x7bbdc910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000001 from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fdiv.d f27, f25, f13, dyn # perform operation
fdiv.d f27, f25, f13, rdn # perform operation
fdiv.d f27, f25, f13, rmm # perform operation
fdiv.d f27, f25, f13, rne # perform operation
fdiv.d f27, f25, f13, rtz # perform operation
fdiv.d f27, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
li x31, 0x96f53634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fdiv.d f31, f7, f13, dyn # perform operation
fdiv.d f31, f7, f13, rdn # perform operation
fdiv.d f31, f7, f13, rmm # perform operation
fdiv.d f31, f7, f13, rne # perform operation
fdiv.d f31, f7, f13, rtz # perform operation
fdiv.d f31, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
li x1, 0xaea77e30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fdiv.d f1, f30, f21, dyn # perform operation
fdiv.d f1, f30, f21, rdn # perform operation
fdiv.d f1, f30, f21, rmm # perform operation
fdiv.d f1, f30, f21, rne # perform operation
fdiv.d f1, f30, f21, rtz # perform operation
fdiv.d f1, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
li x8, 0xc4ba3bca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x4000000000000000 from memory into f4
fdiv.d f8, f19, f4, dyn # perform operation
fdiv.d f8, f19, f4, rdn # perform operation
fdiv.d f8, f19, f4, rmm # perform operation
fdiv.d f8, f19, f4, rne # perform operation
fdiv.d f8, f19, f4, rtz # perform operation
fdiv.d f8, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
li x26, 0xea8d0cb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fdiv.d f26, f12, f31, dyn # perform operation
fdiv.d f26, f12, f31, rdn # perform operation
fdiv.d f26, f12, f31, rmm # perform operation
fdiv.d f26, f12, f31, rne # perform operation
fdiv.d f26, f12, f31, rtz # perform operation
fdiv.d f26, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
li x21, 0xb3ef7152 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fdiv.d f21, f12, f3, dyn # perform operation
fdiv.d f21, f12, f3, rdn # perform operation
fdiv.d f21, f12, f3, rmm # perform operation
fdiv.d f21, f12, f3, rne # perform operation
fdiv.d f21, f12, f3, rtz # perform operation
fdiv.d f21, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
li x13, 0x85be7777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
fdiv.d f13, f22, f6, dyn # perform operation
fdiv.d f13, f22, f6, rdn # perform operation
fdiv.d f13, f22, f6, rmm # perform operation
fdiv.d f13, f22, f6, rne # perform operation
fdiv.d f13, f22, f6, rtz # perform operation
fdiv.d f13, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
li x11, 0xd0e0f370 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000001 from memory into f7
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fdiv.d f11, f7, f31, dyn # perform operation
fdiv.d f11, f7, f31, rdn # perform operation
fdiv.d f11, f7, f31, rmm # perform operation
fdiv.d f11, f7, f31, rne # perform operation
fdiv.d f11, f7, f31, rtz # perform operation
fdiv.d f11, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f7, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
li x7, 0xad98d96a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fdiv.d f7, f3, f11, dyn # perform operation
fdiv.d f7, f3, f11, rdn # perform operation
fdiv.d f7, f3, f11, rmm # perform operation
fdiv.d f7, f3, f11, rne # perform operation
fdiv.d f7, f3, f11, rtz # perform operation
fdiv.d f7, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
li x8, 0x616d87e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
fdiv.d f8, f2, f28, dyn # perform operation
fdiv.d f8, f2, f28, rdn # perform operation
fdiv.d f8, f2, f28, rmm # perform operation
fdiv.d f8, f2, f28, rne # perform operation
fdiv.d f8, f2, f28, rtz # perform operation
fdiv.d f8, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
li x1, 0x2297a41b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fdiv.d f1, f6, f17, dyn # perform operation
fdiv.d f1, f6, f17, rdn # perform operation
fdiv.d f1, f6, f17, rmm # perform operation
fdiv.d f1, f6, f17, rne # perform operation
fdiv.d f1, f6, f17, rtz # perform operation
fdiv.d f1, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
li x2, 0xe74c7bfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
fdiv.d f2, f1, f8, dyn # perform operation
fdiv.d f2, f1, f8, rdn # perform operation
fdiv.d f2, f1, f8, rmm # perform operation
fdiv.d f2, f1, f8, rne # perform operation
fdiv.d f2, f1, f8, rtz # perform operation
fdiv.d f2, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f1, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
li x30, 0x647bfe72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fdiv.d f30, f2, f26, dyn # perform operation
fdiv.d f30, f2, f26, rdn # perform operation
fdiv.d f30, f2, f26, rmm # perform operation
fdiv.d f30, f2, f26, rne # perform operation
fdiv.d f30, f2, f26, rtz # perform operation
fdiv.d f30, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
li x7, 0x07f73017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fdiv.d f7, f22, f3, dyn # perform operation
fdiv.d f7, f22, f3, rdn # perform operation
fdiv.d f7, f22, f3, rmm # perform operation
fdiv.d f7, f22, f3, rne # perform operation
fdiv.d f7, f22, f3, rtz # perform operation
fdiv.d f7, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
li x21, 0xa1729409 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fdiv.d f21, f18, f31, dyn # perform operation
fdiv.d f21, f18, f31, rdn # perform operation
fdiv.d f21, f18, f31, rmm # perform operation
fdiv.d f21, f18, f31, rne # perform operation
fdiv.d f21, f18, f31, rtz # perform operation
fdiv.d f21, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
li x29, 0xcbf2d1ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fdiv.d f29, f11, f24, dyn # perform operation
fdiv.d f29, f11, f24, rdn # perform operation
fdiv.d f29, f11, f24, rmm # perform operation
fdiv.d f29, f11, f24, rne # perform operation
fdiv.d f29, f11, f24, rtz # perform operation
fdiv.d f29, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
li x1, 0x92115f0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fdiv.d f1, f27, f3, dyn # perform operation
fdiv.d f1, f27, f3, rdn # perform operation
fdiv.d f1, f27, f3, rmm # perform operation
fdiv.d f1, f27, f3, rne # perform operation
fdiv.d f1, f27, f3, rtz # perform operation
fdiv.d f1, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
li x28, 0x4ed34643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fdiv.d f28, f15, f6, dyn # perform operation
fdiv.d f28, f15, f6, rdn # perform operation
fdiv.d f28, f15, f6, rmm # perform operation
fdiv.d f28, f15, f6, rne # perform operation
fdiv.d f28, f15, f6, rtz # perform operation
fdiv.d f28, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
li x10, 0x9c08098d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fdiv.d f10, f23, f27, dyn # perform operation
fdiv.d f10, f23, f27, rdn # perform operation
fdiv.d f10, f23, f27, rmm # perform operation
fdiv.d f10, f23, f27, rne # perform operation
fdiv.d f10, f23, f27, rtz # perform operation
fdiv.d f10, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
li x12, 0x6ea1fc4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fdiv.d f12, f27, f11, dyn # perform operation
fdiv.d f12, f27, f11, rdn # perform operation
fdiv.d f12, f27, f11, rmm # perform operation
fdiv.d f12, f27, f11, rne # perform operation
fdiv.d f12, f27, f11, rtz # perform operation
fdiv.d f12, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
li x4, 0x39f4c2f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fdiv.d f4, f18, f17, dyn # perform operation
fdiv.d f4, f18, f17, rdn # perform operation
fdiv.d f4, f18, f17, rmm # perform operation
fdiv.d f4, f18, f17, rne # perform operation
fdiv.d f4, f18, f17, rtz # perform operation
fdiv.d f4, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f4, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f4, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f4, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f4, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f4, f18, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
li x26, 0xc797da77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fdiv.d f26, f6, f3, dyn # perform operation
fdiv.d f26, f6, f3, rdn # perform operation
fdiv.d f26, f6, f3, rmm # perform operation
fdiv.d f26, f6, f3, rne # perform operation
fdiv.d f26, f6, f3, rtz # perform operation
fdiv.d f26, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f6, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
li x23, 0x7f9f2fcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fdiv.d f23, f26, f29, dyn # perform operation
fdiv.d f23, f26, f29, rdn # perform operation
fdiv.d f23, f26, f29, rmm # perform operation
fdiv.d f23, f26, f29, rne # perform operation
fdiv.d f23, f26, f29, rtz # perform operation
fdiv.d f23, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
li x18, 0x6faea2f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fdiv.d f18, f5, f13, dyn # perform operation
fdiv.d f18, f5, f13, rdn # perform operation
fdiv.d f18, f5, f13, rmm # perform operation
fdiv.d f18, f5, f13, rne # perform operation
fdiv.d f18, f5, f13, rtz # perform operation
fdiv.d f18, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
li x13, 0x585d91b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fdiv.d f13, f3, f29, dyn # perform operation
fdiv.d f13, f3, f29, rdn # perform operation
fdiv.d f13, f3, f29, rmm # perform operation
fdiv.d f13, f3, f29, rne # perform operation
fdiv.d f13, f3, f29, rtz # perform operation
fdiv.d f13, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
li x8, 0x490c67cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fdiv.d f8, f11, f7, dyn # perform operation
fdiv.d f8, f11, f7, rdn # perform operation
fdiv.d f8, f11, f7, rmm # perform operation
fdiv.d f8, f11, f7, rne # perform operation
fdiv.d f8, f11, f7, rtz # perform operation
fdiv.d f8, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
li x27, 0x4187b1ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fdiv.d f27, f2, f21, dyn # perform operation
fdiv.d f27, f2, f21, rdn # perform operation
fdiv.d f27, f2, f21, rmm # perform operation
fdiv.d f27, f2, f21, rne # perform operation
fdiv.d f27, f2, f21, rtz # perform operation
fdiv.d f27, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
li x24, 0xb86f04b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
fdiv.d f24, f16, f8, dyn # perform operation
fdiv.d f24, f16, f8, rdn # perform operation
fdiv.d f24, f16, f8, rmm # perform operation
fdiv.d f24, f16, f8, rne # perform operation
fdiv.d f24, f16, f8, rtz # perform operation
fdiv.d f24, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
li x24, 0x2fce68fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fdiv.d f24, f3, f5, dyn # perform operation
fdiv.d f24, f3, f5, rdn # perform operation
fdiv.d f24, f3, f5, rmm # perform operation
fdiv.d f24, f3, f5, rne # perform operation
fdiv.d f24, f3, f5, rtz # perform operation
fdiv.d f24, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
li x18, 0x1cff5af4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fdiv.d f18, f12, f15, dyn # perform operation
fdiv.d f18, f12, f15, rdn # perform operation
fdiv.d f18, f12, f15, rmm # perform operation
fdiv.d f18, f12, f15, rne # perform operation
fdiv.d f18, f12, f15, rtz # perform operation
fdiv.d f18, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
li x25, 0x12f11f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fdiv.d f25, f26, f8, dyn # perform operation
fdiv.d f25, f26, f8, rdn # perform operation
fdiv.d f25, f26, f8, rmm # perform operation
fdiv.d f25, f26, f8, rne # perform operation
fdiv.d f25, f26, f8, rtz # perform operation
fdiv.d f25, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
li x27, 0x74787259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fdiv.d f27, f30, f19, dyn # perform operation
fdiv.d f27, f30, f19, rdn # perform operation
fdiv.d f27, f30, f19, rmm # perform operation
fdiv.d f27, f30, f19, rne # perform operation
fdiv.d f27, f30, f19, rtz # perform operation
fdiv.d f27, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
li x29, 0x38b93103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fdiv.d f29, f4, f20, dyn # perform operation
fdiv.d f29, f4, f20, rdn # perform operation
fdiv.d f29, f4, f20, rmm # perform operation
fdiv.d f29, f4, f20, rne # perform operation
fdiv.d f29, f4, f20, rtz # perform operation
fdiv.d f29, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
li x24, 0x33c6a793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fdiv.d f24, f9, f30, dyn # perform operation
fdiv.d f24, f9, f30, rdn # perform operation
fdiv.d f24, f9, f30, rmm # perform operation
fdiv.d f24, f9, f30, rne # perform operation
fdiv.d f24, f9, f30, rtz # perform operation
fdiv.d f24, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
li x18, 0xcdd72e33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fdiv.d f18, f10, f9, dyn # perform operation
fdiv.d f18, f10, f9, rdn # perform operation
fdiv.d f18, f10, f9, rmm # perform operation
fdiv.d f18, f10, f9, rne # perform operation
fdiv.d f18, f10, f9, rtz # perform operation
fdiv.d f18, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
li x5, 0xe6db0197 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fdiv.d f5, f19, f3, dyn # perform operation
fdiv.d f5, f19, f3, rdn # perform operation
fdiv.d f5, f19, f3, rmm # perform operation
fdiv.d f5, f19, f3, rne # perform operation
fdiv.d f5, f19, f3, rtz # perform operation
fdiv.d f5, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
li x10, 0xbf1c11d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fdiv.d f10, f14, f16, dyn # perform operation
fdiv.d f10, f14, f16, rdn # perform operation
fdiv.d f10, f14, f16, rmm # perform operation
fdiv.d f10, f14, f16, rne # perform operation
fdiv.d f10, f14, f16, rtz # perform operation
fdiv.d f10, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
li x11, 0xd94570cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fdiv.d f11, f7, f13, dyn # perform operation
fdiv.d f11, f7, f13, rdn # perform operation
fdiv.d f11, f7, f13, rmm # perform operation
fdiv.d f11, f7, f13, rne # perform operation
fdiv.d f11, f7, f13, rtz # perform operation
fdiv.d f11, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
li x27, 0xc078c553 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fdiv.d f27, f11, f1, dyn # perform operation
fdiv.d f27, f11, f1, rdn # perform operation
fdiv.d f27, f11, f1, rmm # perform operation
fdiv.d f27, f11, f1, rne # perform operation
fdiv.d f27, f11, f1, rtz # perform operation
fdiv.d f27, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
li x5, 0xf1c65dd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fdiv.d f5, f4, f12, dyn # perform operation
fdiv.d f5, f4, f12, rdn # perform operation
fdiv.d f5, f4, f12, rmm # perform operation
fdiv.d f5, f4, f12, rne # perform operation
fdiv.d f5, f4, f12, rtz # perform operation
fdiv.d f5, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
li x19, 0x37061b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fdiv.d f19, f16, f20, dyn # perform operation
fdiv.d f19, f16, f20, rdn # perform operation
fdiv.d f19, f16, f20, rmm # perform operation
fdiv.d f19, f16, f20, rne # perform operation
fdiv.d f19, f16, f20, rtz # perform operation
fdiv.d f19, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
li x1, 0xf6dbe11d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fdiv.d f1, f18, f21, dyn # perform operation
fdiv.d f1, f18, f21, rdn # perform operation
fdiv.d f1, f18, f21, rmm # perform operation
fdiv.d f1, f18, f21, rne # perform operation
fdiv.d f1, f18, f21, rtz # perform operation
fdiv.d f1, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
li x15, 0x3833ba9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fdiv.d f15, f2, f18, dyn # perform operation
fdiv.d f15, f2, f18, rdn # perform operation
fdiv.d f15, f2, f18, rmm # perform operation
fdiv.d f15, f2, f18, rne # perform operation
fdiv.d f15, f2, f18, rtz # perform operation
fdiv.d f15, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f2, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
li x8, 0xcde21125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fdiv.d f8, f25, f20, dyn # perform operation
fdiv.d f8, f25, f20, rdn # perform operation
fdiv.d f8, f25, f20, rmm # perform operation
fdiv.d f8, f25, f20, rne # perform operation
fdiv.d f8, f25, f20, rtz # perform operation
fdiv.d f8, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
li x31, 0x5d251df9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fdiv.d f31, f28, f5, dyn # perform operation
fdiv.d f31, f28, f5, rdn # perform operation
fdiv.d f31, f28, f5, rmm # perform operation
fdiv.d f31, f28, f5, rne # perform operation
fdiv.d f31, f28, f5, rtz # perform operation
fdiv.d f31, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
li x18, 0xee7e6dc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fdiv.d f18, f19, f22, dyn # perform operation
fdiv.d f18, f19, f22, rdn # perform operation
fdiv.d f18, f19, f22, rmm # perform operation
fdiv.d f18, f19, f22, rne # perform operation
fdiv.d f18, f19, f22, rtz # perform operation
fdiv.d f18, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
li x9, 0x930d3f9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
fdiv.d f9, f6, f21, dyn # perform operation
fdiv.d f9, f6, f21, rdn # perform operation
fdiv.d f9, f6, f21, rmm # perform operation
fdiv.d f9, f6, f21, rne # perform operation
fdiv.d f9, f6, f21, rtz # perform operation
fdiv.d f9, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
li x20, 0x9bf61680 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fdiv.d f20, f31, f30, dyn # perform operation
fdiv.d f20, f31, f30, rdn # perform operation
fdiv.d f20, f31, f30, rmm # perform operation
fdiv.d f20, f31, f30, rne # perform operation
fdiv.d f20, f31, f30, rtz # perform operation
fdiv.d f20, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f31, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
li x9, 0xf69394b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f4, 0(x2) # load 0xa6e895993737426c from memory into f4
fdiv.d f9, f15, f4, dyn # perform operation
fdiv.d f9, f15, f4, rdn # perform operation
fdiv.d f9, f15, f4, rmm # perform operation
fdiv.d f9, f15, f4, rne # perform operation
fdiv.d f9, f15, f4, rtz # perform operation
fdiv.d f9, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
li x18, 0x8af7be03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fdiv.d f18, f15, f5, dyn # perform operation
fdiv.d f18, f15, f5, rdn # perform operation
fdiv.d f18, f15, f5, rmm # perform operation
fdiv.d f18, f15, f5, rne # perform operation
fdiv.d f18, f15, f5, rtz # perform operation
fdiv.d f18, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
li x30, 0xf42b9420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fdiv.d f30, f28, f29, dyn # perform operation
fdiv.d f30, f28, f29, rdn # perform operation
fdiv.d f30, f28, f29, rmm # perform operation
fdiv.d f30, f28, f29, rne # perform operation
fdiv.d f30, f28, f29, rtz # perform operation
fdiv.d f30, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
li x23, 0x23918b4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fdiv.d f23, f17, f25, dyn # perform operation
fdiv.d f23, f17, f25, rdn # perform operation
fdiv.d f23, f17, f25, rmm # perform operation
fdiv.d f23, f17, f25, rne # perform operation
fdiv.d f23, f17, f25, rtz # perform operation
fdiv.d f23, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
li x22, 0xf441a64c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fdiv.d f22, f1, f11, dyn # perform operation
fdiv.d f22, f1, f11, rdn # perform operation
fdiv.d f22, f1, f11, rmm # perform operation
fdiv.d f22, f1, f11, rne # perform operation
fdiv.d f22, f1, f11, rtz # perform operation
fdiv.d f22, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
li x22, 0x13898ca5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fdiv.d f22, f6, f13, dyn # perform operation
fdiv.d f22, f6, f13, rdn # perform operation
fdiv.d f22, f6, f13, rmm # perform operation
fdiv.d f22, f6, f13, rne # perform operation
fdiv.d f22, f6, f13, rtz # perform operation
fdiv.d f22, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
li x26, 0xd6ffd222 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fdiv.d f26, f22, f8, dyn # perform operation
fdiv.d f26, f22, f8, rdn # perform operation
fdiv.d f26, f22, f8, rmm # perform operation
fdiv.d f26, f22, f8, rne # perform operation
fdiv.d f26, f22, f8, rtz # perform operation
fdiv.d f26, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
li x5, 0xc4bfed94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fdiv.d f5, f28, f15, dyn # perform operation
fdiv.d f5, f28, f15, rdn # perform operation
fdiv.d f5, f28, f15, rmm # perform operation
fdiv.d f5, f28, f15, rne # perform operation
fdiv.d f5, f28, f15, rtz # perform operation
fdiv.d f5, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
li x25, 0x5a639fa6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fdiv.d f25, f28, f9, dyn # perform operation
fdiv.d f25, f28, f9, rdn # perform operation
fdiv.d f25, f28, f9, rmm # perform operation
fdiv.d f25, f28, f9, rne # perform operation
fdiv.d f25, f28, f9, rtz # perform operation
fdiv.d f25, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
li x31, 0x3122e4b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
fdiv.d f31, f10, f22, dyn # perform operation
fdiv.d f31, f10, f22, rdn # perform operation
fdiv.d f31, f10, f22, rmm # perform operation
fdiv.d f31, f10, f22, rne # perform operation
fdiv.d f31, f10, f22, rtz # perform operation
fdiv.d f31, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
li x18, 0x2e83b0d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fdiv.d f18, f26, f31, dyn # perform operation
fdiv.d f18, f26, f31, rdn # perform operation
fdiv.d f18, f26, f31, rmm # perform operation
fdiv.d f18, f26, f31, rne # perform operation
fdiv.d f18, f26, f31, rtz # perform operation
fdiv.d f18, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
li x10, 0xc59fc18b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
fdiv.d f10, f9, f3, dyn # perform operation
fdiv.d f10, f9, f3, rdn # perform operation
fdiv.d f10, f9, f3, rmm # perform operation
fdiv.d f10, f9, f3, rne # perform operation
fdiv.d f10, f9, f3, rtz # perform operation
fdiv.d f10, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
li x5, 0x776b1857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
fdiv.d f5, f14, f31, dyn # perform operation
fdiv.d f5, f14, f31, rdn # perform operation
fdiv.d f5, f14, f31, rmm # perform operation
fdiv.d f5, f14, f31, rne # perform operation
fdiv.d f5, f14, f31, rtz # perform operation
fdiv.d f5, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
li x31, 0xc1ff1fd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fdiv.d f31, f15, f22, dyn # perform operation
fdiv.d f31, f15, f22, rdn # perform operation
fdiv.d f31, f15, f22, rmm # perform operation
fdiv.d f31, f15, f22, rne # perform operation
fdiv.d f31, f15, f22, rtz # perform operation
fdiv.d f31, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
li x25, 0xc994de19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fdiv.d f25, f16, f31, dyn # perform operation
fdiv.d f25, f16, f31, rdn # perform operation
fdiv.d f25, f16, f31, rmm # perform operation
fdiv.d f25, f16, f31, rne # perform operation
fdiv.d f25, f16, f31, rtz # perform operation
fdiv.d f25, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
li x14, 0xaabc60ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x5a392534a57711ad from memory into f4
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fdiv.d f14, f4, f2, dyn # perform operation
fdiv.d f14, f4, f2, rdn # perform operation
fdiv.d f14, f4, f2, rmm # perform operation
fdiv.d f14, f4, f2, rne # perform operation
fdiv.d f14, f4, f2, rtz # perform operation
fdiv.d f14, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
li x21, 0xf81d2c97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fdiv.d f21, f16, f8, dyn # perform operation
fdiv.d f21, f16, f8, rdn # perform operation
fdiv.d f21, f16, f8, rmm # perform operation
fdiv.d f21, f16, f8, rne # perform operation
fdiv.d f21, f16, f8, rtz # perform operation
fdiv.d f21, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
li x27, 0xb9848c89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fdiv.d f27, f31, f24, dyn # perform operation
fdiv.d f27, f31, f24, rdn # perform operation
fdiv.d f27, f31, f24, rmm # perform operation
fdiv.d f27, f31, f24, rne # perform operation
fdiv.d f27, f31, f24, rtz # perform operation
fdiv.d f27, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
li x3, 0x793357f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
fdiv.d f3, f13, f6, dyn # perform operation
fdiv.d f3, f13, f6, rdn # perform operation
fdiv.d f3, f13, f6, rmm # perform operation
fdiv.d f3, f13, f6, rne # perform operation
fdiv.d f3, f13, f6, rtz # perform operation
fdiv.d f3, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
li x2, 0x727992ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fdiv.d f2, f27, f9, dyn # perform operation
fdiv.d f2, f27, f9, rdn # perform operation
fdiv.d f2, f27, f9, rmm # perform operation
fdiv.d f2, f27, f9, rne # perform operation
fdiv.d f2, f27, f9, rtz # perform operation
fdiv.d f2, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
li x31, 0xf6f8af43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fdiv.d f31, f21, f11, dyn # perform operation
fdiv.d f31, f21, f11, rdn # perform operation
fdiv.d f31, f21, f11, rmm # perform operation
fdiv.d f31, f21, f11, rne # perform operation
fdiv.d f31, f21, f11, rtz # perform operation
fdiv.d f31, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
li x7, 0x2c01b541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fdiv.d f7, f14, f23, dyn # perform operation
fdiv.d f7, f14, f23, rdn # perform operation
fdiv.d f7, f14, f23, rmm # perform operation
fdiv.d f7, f14, f23, rne # perform operation
fdiv.d f7, f14, f23, rtz # perform operation
fdiv.d f7, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
li x13, 0xd18b1955 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
fdiv.d f13, f23, f14, dyn # perform operation
fdiv.d f13, f23, f14, rdn # perform operation
fdiv.d f13, f23, f14, rmm # perform operation
fdiv.d f13, f23, f14, rne # perform operation
fdiv.d f13, f23, f14, rtz # perform operation
fdiv.d f13, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
li x28, 0xb4da0bde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
fdiv.d f28, f6, f27, dyn # perform operation
fdiv.d f28, f6, f27, rdn # perform operation
fdiv.d f28, f6, f27, rmm # perform operation
fdiv.d f28, f6, f27, rne # perform operation
fdiv.d f28, f6, f27, rtz # perform operation
fdiv.d f28, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
li x29, 0x8d45897f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fdiv.d f29, f26, f19, dyn # perform operation
fdiv.d f29, f26, f19, rdn # perform operation
fdiv.d f29, f26, f19, rmm # perform operation
fdiv.d f29, f26, f19, rne # perform operation
fdiv.d f29, f26, f19, rtz # perform operation
fdiv.d f29, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
li x1, 0x4c0d46f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fdiv.d f1, f31, f6, dyn # perform operation
fdiv.d f1, f31, f6, rdn # perform operation
fdiv.d f1, f31, f6, rmm # perform operation
fdiv.d f1, f31, f6, rne # perform operation
fdiv.d f1, f31, f6, rtz # perform operation
fdiv.d f1, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
li x10, 0xf783372d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fdiv.d f10, f17, f2, dyn # perform operation
fdiv.d f10, f17, f2, rdn # perform operation
fdiv.d f10, f17, f2, rmm # perform operation
fdiv.d f10, f17, f2, rne # perform operation
fdiv.d f10, f17, f2, rtz # perform operation
fdiv.d f10, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
li x1, 0x3d61074c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
fdiv.d f1, f19, f29, dyn # perform operation
fdiv.d f1, f19, f29, rdn # perform operation
fdiv.d f1, f19, f29, rmm # perform operation
fdiv.d f1, f19, f29, rne # perform operation
fdiv.d f1, f19, f29, rtz # perform operation
fdiv.d f1, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
li x25, 0x8ca587a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fdiv.d f25, f19, f21, dyn # perform operation
fdiv.d f25, f19, f21, rdn # perform operation
fdiv.d f25, f19, f21, rmm # perform operation
fdiv.d f25, f19, f21, rne # perform operation
fdiv.d f25, f19, f21, rtz # perform operation
fdiv.d f25, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
li x3, 0x4beb5246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
li x4, 0x3ff00000 # load x4 with 32 LSBs of 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fdiv.d f3, f25, f24, dyn # perform operation
fdiv.d f3, f25, f24, rdn # perform operation
fdiv.d f3, f25, f24, rmm # perform operation
fdiv.d f3, f25, f24, rne # perform operation
fdiv.d f3, f25, f24, rtz # perform operation
fdiv.d f3, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
li x18, 0x8d759b54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
li x4, 0xbff00000 # load x4 with 32 LSBs of 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fdiv.d f18, f19, f25, dyn # perform operation
fdiv.d f18, f19, f25, rdn # perform operation
fdiv.d f18, f19, f25, rmm # perform operation
fdiv.d f18, f19, f25, rne # perform operation
fdiv.d f18, f19, f25, rtz # perform operation
fdiv.d f18, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
li x5, 0x56ed5089 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
li x4, 0x3ff80000 # load x4 with 32 LSBs of 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fdiv.d f5, f29, f7, dyn # perform operation
fdiv.d f5, f29, f7, rdn # perform operation
fdiv.d f5, f29, f7, rmm # perform operation
fdiv.d f5, f29, f7, rne # perform operation
fdiv.d f5, f29, f7, rtz # perform operation
fdiv.d f5, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
li x21, 0x528a46fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
li x4, 0xbff80000 # load x4 with 32 LSBs of 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fdiv.d f21, f2, f15, dyn # perform operation
fdiv.d f21, f2, f15, rdn # perform operation
fdiv.d f21, f2, f15, rmm # perform operation
fdiv.d f21, f2, f15, rne # perform operation
fdiv.d f21, f2, f15, rtz # perform operation
fdiv.d f21, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
li x24, 0xec9577a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
li x4, 0x40000000 # load x4 with 32 LSBs of 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fdiv.d f24, f18, f16, dyn # perform operation
fdiv.d f24, f18, f16, rdn # perform operation
fdiv.d f24, f18, f16, rmm # perform operation
fdiv.d f24, f18, f16, rne # perform operation
fdiv.d f24, f18, f16, rtz # perform operation
fdiv.d f24, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
li x22, 0x5e3943fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
li x4, 0xc0000000 # load x4 with 32 LSBs of 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fdiv.d f22, f5, f9, dyn # perform operation
fdiv.d f22, f5, f9, rdn # perform operation
fdiv.d f22, f5, f9, rmm # perform operation
fdiv.d f22, f5, f9, rne # perform operation
fdiv.d f22, f5, f9, rtz # perform operation
fdiv.d f22, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
li x23, 0x58a015b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
li x4, 0x00100000 # load x4 with 32 LSBs of 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fdiv.d f23, f12, f31, dyn # perform operation
fdiv.d f23, f12, f31, rdn # perform operation
fdiv.d f23, f12, f31, rmm # perform operation
fdiv.d f23, f12, f31, rne # perform operation
fdiv.d f23, f12, f31, rtz # perform operation
fdiv.d f23, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
li x18, 0x16fde83f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
li x4, 0x80100000 # load x4 with 32 LSBs of 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fdiv.d f18, f19, f28, dyn # perform operation
fdiv.d f18, f19, f28, rdn # perform operation
fdiv.d f18, f19, f28, rmm # perform operation
fdiv.d f18, f19, f28, rne # perform operation
fdiv.d f18, f19, f28, rtz # perform operation
fdiv.d f18, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
li x27, 0x7f4eeb6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
li x4, 0x7fefffff # load x4 with 32 LSBs of 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fdiv.d f27, f2, f31, dyn # perform operation
fdiv.d f27, f2, f31, rdn # perform operation
fdiv.d f27, f2, f31, rmm # perform operation
fdiv.d f27, f2, f31, rne # perform operation
fdiv.d f27, f2, f31, rtz # perform operation
fdiv.d f27, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
li x16, 0xa864d9d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
li x4, 0xffefffff # load x4 with 32 LSBs of 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fdiv.d f16, f26, f22, dyn # perform operation
fdiv.d f16, f26, f22, rdn # perform operation
fdiv.d f16, f26, f22, rmm # perform operation
fdiv.d f16, f26, f22, rne # perform operation
fdiv.d f16, f26, f22, rtz # perform operation
fdiv.d f16, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
li x18, 0xdd1584ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
li x4, 0x000fffff # load x4 with 32 LSBs of 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fdiv.d f18, f15, f11, dyn # perform operation
fdiv.d f18, f15, f11, rdn # perform operation
fdiv.d f18, f15, f11, rmm # perform operation
fdiv.d f18, f15, f11, rne # perform operation
fdiv.d f18, f15, f11, rtz # perform operation
fdiv.d f18, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
li x19, 0xeec40af2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
li x4, 0x800fffff # load x4 with 32 LSBs of 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fdiv.d f19, f20, f13, dyn # perform operation
fdiv.d f19, f20, f13, rdn # perform operation
fdiv.d f19, f20, f13, rmm # perform operation
fdiv.d f19, f20, f13, rne # perform operation
fdiv.d f19, f20, f13, rtz # perform operation
fdiv.d f19, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
li x7, 0xd1e182bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
li x4, 0x00080000 # load x4 with 32 LSBs of 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fdiv.d f7, f13, f2, dyn # perform operation
fdiv.d f7, f13, f2, rdn # perform operation
fdiv.d f7, f13, f2, rmm # perform operation
fdiv.d f7, f13, f2, rne # perform operation
fdiv.d f7, f13, f2, rtz # perform operation
fdiv.d f7, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
li x18, 0x2573287d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
li x4, 0x80080000 # load x4 with 32 LSBs of 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f18, f9, f7, dyn # perform operation
fdiv.d f18, f9, f7, rdn # perform operation
fdiv.d f18, f9, f7, rmm # perform operation
fdiv.d f18, f9, f7, rne # perform operation
fdiv.d f18, f9, f7, rtz # perform operation
fdiv.d f18, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f9, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
li x15, 0xbae90d9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fdiv.d f15, f30, f16, dyn # perform operation
fdiv.d f15, f30, f16, rdn # perform operation
fdiv.d f15, f30, f16, rmm # perform operation
fdiv.d f15, f30, f16, rne # perform operation
fdiv.d f15, f30, f16, rtz # perform operation
fdiv.d f15, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
li x25, 0xc4e87288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
li x4, 0x80000000 # load x4 with 32 LSBs of 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
fdiv.d f25, f15, f10, dyn # perform operation
fdiv.d f25, f15, f10, rdn # perform operation
fdiv.d f25, f15, f10, rmm # perform operation
fdiv.d f25, f15, f10, rne # perform operation
fdiv.d f25, f15, f10, rtz # perform operation
fdiv.d f25, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f15, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
li x20, 0x965fa207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff0000000000000 from memory into f4
fdiv.d f20, f31, f4, dyn # perform operation
fdiv.d f20, f31, f4, rdn # perform operation
fdiv.d f20, f31, f4, rmm # perform operation
fdiv.d f20, f31, f4, rne # perform operation
fdiv.d f20, f31, f4, rtz # perform operation
fdiv.d f20, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
li x9, 0xf3c16a7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
li x4, 0xfff00000 # load x4 with 32 LSBs of 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
fdiv.d f9, f14, f1, dyn # perform operation
fdiv.d f9, f14, f1, rdn # perform operation
fdiv.d f9, f14, f1, rmm # perform operation
fdiv.d f9, f14, f1, rne # perform operation
fdiv.d f9, f14, f1, rtz # perform operation
fdiv.d f9, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
li x30, 0xf3cc4421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
li x4, 0x7ff80000 # load x4 with 32 LSBs of 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
sw x4, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fdiv.d f30, f29, f19, dyn # perform operation
fdiv.d f30, f29, f19, rdn # perform operation
fdiv.d f30, f29, f19, rmm # perform operation
fdiv.d f30, f29, f19, rne # perform operation
fdiv.d f30, f29, f19, rtz # perform operation
fdiv.d f30, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
li x8, 0xbe5afb49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
li x4, 0x7fffffff # load x4 with 32 LSBs of 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fdiv.d f8, f30, f18, dyn # perform operation
fdiv.d f8, f30, f18, rdn # perform operation
fdiv.d f8, f30, f18, rmm # perform operation
fdiv.d f8, f30, f18, rne # perform operation
fdiv.d f8, f30, f18, rtz # perform operation
fdiv.d f8, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
li x8, 0x35d6830f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
li x4, 0x7ff00000 # load x4 with 32 LSBs of 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
sw x4, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fdiv.d f8, f9, f31, dyn # perform operation
fdiv.d f8, f9, f31, rdn # perform operation
fdiv.d f8, f9, f31, rmm # perform operation
fdiv.d f8, f9, f31, rne # perform operation
fdiv.d f8, f9, f31, rtz # perform operation
fdiv.d f8, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
li x14, 0x66cb9351 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
li x4, 0x7ff7ffff # load x4 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
sw x4, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x7ff7ffffffffffff from memory into f4
fdiv.d f14, f18, f4, dyn # perform operation
fdiv.d f14, f18, f4, rdn # perform operation
fdiv.d f14, f18, f4, rmm # perform operation
fdiv.d f14, f18, f4, rne # perform operation
fdiv.d f14, f18, f4, rtz # perform operation
fdiv.d f14, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
li x29, 0x0050b5d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
li x4, 0x5a392534 # load x4 with 32 LSBs of 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
sw x4, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fdiv.d f29, f21, f13, dyn # perform operation
fdiv.d f29, f21, f13, rdn # perform operation
fdiv.d f29, f21, f13, rmm # perform operation
fdiv.d f29, f21, f13, rne # perform operation
fdiv.d f29, f21, f13, rtz # perform operation
fdiv.d f29, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
li x7, 0xc31a3409 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
li x4, 0xa6e89599 # load x4 with 32 LSBs of 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
sw x4, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fdiv.d f7, f10, f17, dyn # perform operation
fdiv.d f7, f10, f17, rdn # perform operation
fdiv.d f7, f10, f17, rmm # perform operation
fdiv.d f7, f10, f17, rne # perform operation
fdiv.d f7, f10, f17, rtz # perform operation
fdiv.d f7, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f10, f17 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x2ca2b0f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16c7f040 # load x3 with 32 MSBs 0x0000000016c7f040
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000016c7f040
sw x3, 0(x2) # store x3 (0x16c7f040) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000016c7f040 from memory into f30
li x3, 0x37c095b1 # load x3 with 32 MSBs 0x0000000037c095b1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000037c095b1
sw x3, 0(x2) # store x3 (0x37c095b1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000037c095b1 from memory into f24
fdiv.d f0, f30, f24 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x1f6a44cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdf5c006c # load x3 with 32 MSBs 0x00000000df5c006c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df5c006c
sw x3, 0(x2) # store x3 (0xdf5c006c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000df5c006c from memory into f18
li x3, 0x8daf00a8 # load x3 with 32 MSBs 0x000000008daf00a8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008daf00a8
sw x3, 0(x2) # store x3 (0x8daf00a8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000008daf00a8 from memory into f2
fdiv.d f1, f18, f2 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x1036d35c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d8494ef # load x3 with 32 MSBs 0x000000004d8494ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d8494ef
sw x3, 0(x2) # store x3 (0x4d8494ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004d8494ef from memory into f28
li x3, 0xdf63a38d # load x3 with 32 MSBs 0x00000000df63a38d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df63a38d
sw x3, 0(x2) # store x3 (0xdf63a38d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000df63a38d from memory into f12
fdiv.d f2, f28, f12 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xf697add4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21caa041 # load x3 with 32 MSBs 0x0000000021caa041
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000021caa041
sw x3, 0(x2) # store x3 (0x21caa041) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000021caa041 from memory into f7
li x3, 0x18696a64 # load x3 with 32 MSBs 0x0000000018696a64
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000018696a64
sw x3, 0(x2) # store x3 (0x18696a64) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000018696a64 from memory into f14
fdiv.d f3, f7, f14 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x019cf5eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6f5d54a # load x3 with 32 MSBs 0x00000000e6f5d54a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e6f5d54a
sw x3, 0(x2) # store x3 (0xe6f5d54a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000e6f5d54a from memory into f14
li x3, 0x743c2ff2 # load x3 with 32 MSBs 0x00000000743c2ff2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000743c2ff2
sw x3, 0(x2) # store x3 (0x743c2ff2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000743c2ff2 from memory into f29
fdiv.d f4, f14, f29 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0xcd88dc23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71044ea5 # load x3 with 32 MSBs 0x0000000071044ea5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071044ea5
sw x3, 0(x2) # store x3 (0x71044ea5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000071044ea5 from memory into f17
li x3, 0xc92ded86 # load x3 with 32 MSBs 0x00000000c92ded86
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c92ded86
sw x3, 0(x2) # store x3 (0xc92ded86) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c92ded86 from memory into f31
fdiv.d f5, f17, f31 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x02ec218d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7a3c4ef7 # load x3 with 32 MSBs 0x000000007a3c4ef7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007a3c4ef7
sw x3, 0(x2) # store x3 (0x7a3c4ef7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000007a3c4ef7 from memory into f5
li x3, 0xd0ae184f # load x3 with 32 MSBs 0x00000000d0ae184f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0ae184f
sw x3, 0(x2) # store x3 (0xd0ae184f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000d0ae184f from memory into f4
fdiv.d f6, f5, f4 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x5d3d9f70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfad09422 # load x3 with 32 MSBs 0x00000000fad09422
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fad09422
sw x3, 0(x2) # store x3 (0xfad09422) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000fad09422 from memory into f10
li x3, 0x677f59d5 # load x3 with 32 MSBs 0x00000000677f59d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000677f59d5
sw x3, 0(x2) # store x3 (0x677f59d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000677f59d5 from memory into f14
fdiv.d f7, f10, f14 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0xc1d17c98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x832e15c9 # load x3 with 32 MSBs 0x00000000832e15c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000832e15c9
sw x3, 0(x2) # store x3 (0x832e15c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000832e15c9 from memory into f3
li x3, 0x49704dc9 # load x3 with 32 MSBs 0x0000000049704dc9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000049704dc9
sw x3, 0(x2) # store x3 (0x49704dc9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000049704dc9 from memory into f31
fdiv.d f8, f3, f31 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x50ae18b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x267f77c9 # load x3 with 32 MSBs 0x00000000267f77c9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000267f77c9
sw x3, 0(x2) # store x3 (0x267f77c9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000267f77c9 from memory into f3
li x3, 0xbd18aa88 # load x3 with 32 MSBs 0x00000000bd18aa88
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bd18aa88
sw x3, 0(x2) # store x3 (0xbd18aa88) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bd18aa88 from memory into f21
fdiv.d f9, f3, f21 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x1ddce318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17554c6b # load x3 with 32 MSBs 0x0000000017554c6b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000017554c6b
sw x3, 0(x2) # store x3 (0x17554c6b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000017554c6b from memory into f13
li x3, 0x71b8210f # load x3 with 32 MSBs 0x0000000071b8210f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071b8210f
sw x3, 0(x2) # store x3 (0x71b8210f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000071b8210f from memory into f15
fdiv.d f10, f13, f15 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x8108c122 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fdfa7a0 # load x3 with 32 MSBs 0x000000007fdfa7a0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007fdfa7a0
sw x3, 0(x2) # store x3 (0x7fdfa7a0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007fdfa7a0 from memory into f27
li x3, 0x9dd6c329 # load x3 with 32 MSBs 0x000000009dd6c329
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009dd6c329
sw x3, 0(x2) # store x3 (0x9dd6c329) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009dd6c329 from memory into f9
fdiv.d f11, f27, f9 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x906cd34d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5a947ebf # load x3 with 32 MSBs 0x000000005a947ebf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005a947ebf
sw x3, 0(x2) # store x3 (0x5a947ebf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005a947ebf from memory into f10
li x3, 0xb727339e # load x3 with 32 MSBs 0x00000000b727339e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b727339e
sw x3, 0(x2) # store x3 (0xb727339e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b727339e from memory into f16
fdiv.d f12, f10, f16 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x6b214282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32f2a192 # load x3 with 32 MSBs 0x0000000032f2a192
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032f2a192
sw x3, 0(x2) # store x3 (0x32f2a192) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000032f2a192 from memory into f30
li x3, 0xcde1c4b6 # load x3 with 32 MSBs 0x00000000cde1c4b6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cde1c4b6
sw x3, 0(x2) # store x3 (0xcde1c4b6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000cde1c4b6 from memory into f22
fdiv.d f13, f30, f22 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x46df955d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf80e946f # load x3 with 32 MSBs 0x00000000f80e946f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f80e946f
sw x3, 0(x2) # store x3 (0xf80e946f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f80e946f from memory into f8
li x3, 0x387f1792 # load x3 with 32 MSBs 0x00000000387f1792
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000387f1792
sw x3, 0(x2) # store x3 (0x387f1792) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000387f1792 from memory into f11
fdiv.d f14, f8, f11 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xbcf06715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d9f2260 # load x3 with 32 MSBs 0x000000004d9f2260
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004d9f2260
sw x3, 0(x2) # store x3 (0x4d9f2260) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000004d9f2260 from memory into f26
li x3, 0x723b64ed # load x3 with 32 MSBs 0x00000000723b64ed
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000723b64ed
sw x3, 0(x2) # store x3 (0x723b64ed) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000723b64ed from memory into f27
fdiv.d f15, f26, f27 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x5d8cefb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe603456b # load x3 with 32 MSBs 0x00000000e603456b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e603456b
sw x3, 0(x2) # store x3 (0xe603456b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e603456b from memory into f27
li x3, 0xdf99d7ee # load x3 with 32 MSBs 0x00000000df99d7ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000df99d7ee
sw x3, 0(x2) # store x3 (0xdf99d7ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000df99d7ee from memory into f25
fdiv.d f16, f27, f25 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x30b8fe08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0e3cdbb # load x3 with 32 MSBs 0x00000000d0e3cdbb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d0e3cdbb
sw x3, 0(x2) # store x3 (0xd0e3cdbb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000d0e3cdbb from memory into f8
li x3, 0x0815667a # load x3 with 32 MSBs 0x000000000815667a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000815667a
sw x3, 0(x2) # store x3 (0x0815667a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000815667a from memory into f21
fdiv.d f17, f8, f21 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0xa8566d19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5df0a05a # load x3 with 32 MSBs 0x000000005df0a05a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005df0a05a
sw x3, 0(x2) # store x3 (0x5df0a05a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000005df0a05a from memory into f11
li x3, 0x835e1938 # load x3 with 32 MSBs 0x00000000835e1938
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000835e1938
sw x3, 0(x2) # store x3 (0x835e1938) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000835e1938 from memory into f23
fdiv.d f18, f11, f23 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x01f59ca3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd38f4078 # load x3 with 32 MSBs 0x00000000d38f4078
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d38f4078
sw x3, 0(x2) # store x3 (0xd38f4078) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d38f4078 from memory into f9
li x3, 0xa3342f8e # load x3 with 32 MSBs 0x00000000a3342f8e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a3342f8e
sw x3, 0(x2) # store x3 (0xa3342f8e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000a3342f8e from memory into f6
fdiv.d f19, f9, f6 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x7161d9ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x198632a3 # load x3 with 32 MSBs 0x00000000198632a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000198632a3
sw x3, 0(x2) # store x3 (0x198632a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000198632a3 from memory into f19
li x3, 0x10adc22f # load x3 with 32 MSBs 0x0000000010adc22f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010adc22f
sw x3, 0(x2) # store x3 (0x10adc22f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000010adc22f from memory into f7
fdiv.d f20, f19, f7 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x3c6b0f42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfac018ae # load x3 with 32 MSBs 0x00000000fac018ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fac018ae
sw x3, 0(x2) # store x3 (0xfac018ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fac018ae from memory into f1
li x3, 0xd62156e0 # load x3 with 32 MSBs 0x00000000d62156e0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d62156e0
sw x3, 0(x2) # store x3 (0xd62156e0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d62156e0 from memory into f17
fdiv.d f21, f1, f17 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x55d99ad7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4ccce1af # load x3 with 32 MSBs 0x000000004ccce1af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004ccce1af
sw x3, 0(x2) # store x3 (0x4ccce1af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004ccce1af from memory into f29
li x3, 0x32c390ee # load x3 with 32 MSBs 0x0000000032c390ee
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000032c390ee
sw x3, 0(x2) # store x3 (0x32c390ee) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000032c390ee from memory into f5
fdiv.d f22, f29, f5 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xf6eb769a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed3095eb # load x3 with 32 MSBs 0x00000000ed3095eb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ed3095eb
sw x3, 0(x2) # store x3 (0xed3095eb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ed3095eb from memory into f2
li x3, 0x5104173e # load x3 with 32 MSBs 0x000000005104173e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005104173e
sw x3, 0(x2) # store x3 (0x5104173e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000005104173e from memory into f18
fdiv.d f23, f2, f18 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x8bcf3ace # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b789737 # load x3 with 32 MSBs 0x000000007b789737
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b789737
sw x3, 0(x2) # store x3 (0x7b789737) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007b789737 from memory into f28
li x3, 0x9be4aede # load x3 with 32 MSBs 0x000000009be4aede
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009be4aede
sw x3, 0(x2) # store x3 (0x9be4aede) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009be4aede from memory into f18
fdiv.d f24, f28, f18 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xfdac72d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x378661a4 # load x3 with 32 MSBs 0x00000000378661a4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000378661a4
sw x3, 0(x2) # store x3 (0x378661a4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000378661a4 from memory into f17
li x3, 0x478e31a6 # load x3 with 32 MSBs 0x00000000478e31a6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000478e31a6
sw x3, 0(x2) # store x3 (0x478e31a6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000478e31a6 from memory into f11
fdiv.d f25, f17, f11 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0xd3d0f1a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13803a7f # load x3 with 32 MSBs 0x0000000013803a7f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000013803a7f
sw x3, 0(x2) # store x3 (0x13803a7f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000013803a7f from memory into f26
li x3, 0x10752aab # load x3 with 32 MSBs 0x0000000010752aab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000010752aab
sw x3, 0(x2) # store x3 (0x10752aab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000010752aab from memory into f31
fdiv.d f26, f26, f31 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x8ac0936b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b9f6bef # load x3 with 32 MSBs 0x000000007b9f6bef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007b9f6bef
sw x3, 0(x2) # store x3 (0x7b9f6bef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000007b9f6bef from memory into f8
li x3, 0xe515002d # load x3 with 32 MSBs 0x00000000e515002d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e515002d
sw x3, 0(x2) # store x3 (0xe515002d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e515002d from memory into f19
fdiv.d f27, f8, f19 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xa95da73b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x326af1d1 # load x3 with 32 MSBs 0x00000000326af1d1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000326af1d1
sw x3, 0(x2) # store x3 (0x326af1d1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000326af1d1 from memory into f8
li x3, 0xfd66b966 # load x3 with 32 MSBs 0x00000000fd66b966
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd66b966
sw x3, 0(x2) # store x3 (0xfd66b966) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000fd66b966 from memory into f28
fdiv.d f28, f8, f28 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0xadfdc0bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdff2079b # load x3 with 32 MSBs 0x00000000dff2079b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dff2079b
sw x3, 0(x2) # store x3 (0xdff2079b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000dff2079b from memory into f22
li x3, 0x2e0d1c2e # load x3 with 32 MSBs 0x000000002e0d1c2e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002e0d1c2e
sw x3, 0(x2) # store x3 (0x2e0d1c2e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000002e0d1c2e from memory into f4
fdiv.d f29, f22, f4 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0xf8f38aa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40d91411 # load x3 with 32 MSBs 0x0000000040d91411
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000040d91411
sw x3, 0(x2) # store x3 (0x40d91411) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000040d91411 from memory into f31
li x3, 0x81bb216d # load x3 with 32 MSBs 0x0000000081bb216d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000081bb216d
sw x3, 0(x2) # store x3 (0x81bb216d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000081bb216d from memory into f17
fdiv.d f30, f31, f17 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x8f9f20a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe222bdf4 # load x3 with 32 MSBs 0x00000000e222bdf4
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e222bdf4
sw x3, 0(x2) # store x3 (0xe222bdf4) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e222bdf4 from memory into f12
li x3, 0xcfed515a # load x3 with 32 MSBs 0x00000000cfed515a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cfed515a
sw x3, 0(x2) # store x3 (0xcfed515a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000cfed515a from memory into f9
fdiv.d f31, f12, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x25, 0xf69e8b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf631c563 # load x3 with 32 MSBs 0x00000000f631c563
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f631c563
sw x3, 0(x2) # store x3 (0xf631c563) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000f631c563 from memory into f0
li x3, 0x4fb5a41b # load x3 with 32 MSBs 0x000000004fb5a41b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fb5a41b
sw x3, 0(x2) # store x3 (0x4fb5a41b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004fb5a41b from memory into f9
fdiv.d f25, f0, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x12, 0x3b055920 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcdfea249 # load x3 with 32 MSBs 0x00000000cdfea249
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdfea249
sw x3, 0(x2) # store x3 (0xcdfea249) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000cdfea249 from memory into f1
li x3, 0x9da852ab # load x3 with 32 MSBs 0x000000009da852ab
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009da852ab
sw x3, 0(x2) # store x3 (0x9da852ab) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009da852ab from memory into f22
fdiv.d f12, f1, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x31, 0x065a8984 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea5547a5 # load x3 with 32 MSBs 0x00000000ea5547a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ea5547a5
sw x3, 0(x2) # store x3 (0xea5547a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000ea5547a5 from memory into f2
li x3, 0x39ecdfbe # load x3 with 32 MSBs 0x0000000039ecdfbe
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000039ecdfbe
sw x3, 0(x2) # store x3 (0x39ecdfbe) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000039ecdfbe from memory into f29
fdiv.d f31, f2, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x28, 0x521916c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a04f4a3 # load x3 with 32 MSBs 0x000000003a04f4a3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003a04f4a3
sw x3, 0(x2) # store x3 (0x3a04f4a3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000003a04f4a3 from memory into f3
li x3, 0x71ea6585 # load x3 with 32 MSBs 0x0000000071ea6585
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000071ea6585
sw x3, 0(x2) # store x3 (0x71ea6585) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000071ea6585 from memory into f21
fdiv.d f28, f3, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x30, 0x91486ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac048a22 # load x3 with 32 MSBs 0x00000000ac048a22
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ac048a22
sw x3, 0(x2) # store x3 (0xac048a22) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000ac048a22 from memory into f4
li x3, 0xa7b09942 # load x3 with 32 MSBs 0x00000000a7b09942
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000a7b09942
sw x3, 0(x2) # store x3 (0xa7b09942) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a7b09942 from memory into f17
fdiv.d f30, f4, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x27, 0xe6bf2ddd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf29088d # load x3 with 32 MSBs 0x00000000bf29088d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf29088d
sw x3, 0(x2) # store x3 (0xbf29088d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000bf29088d from memory into f5
li x3, 0xc6b3dfc8 # load x3 with 32 MSBs 0x00000000c6b3dfc8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c6b3dfc8
sw x3, 0(x2) # store x3 (0xc6b3dfc8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000c6b3dfc8 from memory into f8
fdiv.d f27, f5, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x26, 0xcde44502 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62015068 # load x3 with 32 MSBs 0x0000000062015068
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000062015068
sw x3, 0(x2) # store x3 (0x62015068) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000062015068 from memory into f6
li x3, 0xe56673af # load x3 with 32 MSBs 0x00000000e56673af
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e56673af
sw x3, 0(x2) # store x3 (0xe56673af) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000e56673af from memory into f13
fdiv.d f26, f6, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x29, 0xad56738c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b49a5f7 # load x3 with 32 MSBs 0x000000002b49a5f7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b49a5f7
sw x3, 0(x2) # store x3 (0x2b49a5f7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000002b49a5f7 from memory into f7
li x3, 0xb2905dcf # load x3 with 32 MSBs 0x00000000b2905dcf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b2905dcf
sw x3, 0(x2) # store x3 (0xb2905dcf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000b2905dcf from memory into f15
fdiv.d f29, f7, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x11, 0xe7a59681 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe8e50358 # load x3 with 32 MSBs 0x00000000e8e50358
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e8e50358
sw x3, 0(x2) # store x3 (0xe8e50358) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000e8e50358 from memory into f8
li x3, 0x55c3d871 # load x3 with 32 MSBs 0x0000000055c3d871
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000055c3d871
sw x3, 0(x2) # store x3 (0x55c3d871) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000055c3d871 from memory into f24
fdiv.d f11, f8, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x28, 0x82107b71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd2822157 # load x3 with 32 MSBs 0x00000000d2822157
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d2822157
sw x3, 0(x2) # store x3 (0xd2822157) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d2822157 from memory into f9
li x3, 0x73fc8253 # load x3 with 32 MSBs 0x0000000073fc8253
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073fc8253
sw x3, 0(x2) # store x3 (0x73fc8253) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000073fc8253 from memory into f17
fdiv.d f28, f9, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x24, 0xb2f2814f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x15101973 # load x3 with 32 MSBs 0x0000000015101973
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015101973
sw x3, 0(x2) # store x3 (0x15101973) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000015101973 from memory into f10
li x3, 0x1dd51a8f # load x3 with 32 MSBs 0x000000001dd51a8f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001dd51a8f
sw x3, 0(x2) # store x3 (0x1dd51a8f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000001dd51a8f from memory into f29
fdiv.d f24, f10, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x24, 0x104a824b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31250533 # load x3 with 32 MSBs 0x0000000031250533
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000031250533
sw x3, 0(x2) # store x3 (0x31250533) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000031250533 from memory into f11
li x3, 0x15863e49 # load x3 with 32 MSBs 0x0000000015863e49
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000015863e49
sw x3, 0(x2) # store x3 (0x15863e49) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000015863e49 from memory into f16
fdiv.d f24, f11, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x15, 0x44844711 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73245aa1 # load x3 with 32 MSBs 0x0000000073245aa1
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000073245aa1
sw x3, 0(x2) # store x3 (0x73245aa1) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000073245aa1 from memory into f12
li x3, 0xb51443a5 # load x3 with 32 MSBs 0x00000000b51443a5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b51443a5
sw x3, 0(x2) # store x3 (0xb51443a5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b51443a5 from memory into f8
fdiv.d f15, f12, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x22, 0xdb76e404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x430bde8a # load x3 with 32 MSBs 0x00000000430bde8a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000430bde8a
sw x3, 0(x2) # store x3 (0x430bde8a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000430bde8a from memory into f13
li x3, 0x977a2f35 # load x3 with 32 MSBs 0x00000000977a2f35
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000977a2f35
sw x3, 0(x2) # store x3 (0x977a2f35) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000977a2f35 from memory into f14
fdiv.d f22, f13, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x7, 0xac0a8073 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1bdeab28 # load x3 with 32 MSBs 0x000000001bdeab28
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001bdeab28
sw x3, 0(x2) # store x3 (0x1bdeab28) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001bdeab28 from memory into f14
li x3, 0x326e5b83 # load x3 with 32 MSBs 0x00000000326e5b83
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000326e5b83
sw x3, 0(x2) # store x3 (0x326e5b83) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000326e5b83 from memory into f10
fdiv.d f7, f14, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x1, 0x2d5cf966 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e92d816 # load x3 with 32 MSBs 0x000000008e92d816
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008e92d816
sw x3, 0(x2) # store x3 (0x8e92d816) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008e92d816 from memory into f15
li x3, 0xd7e4dd38 # load x3 with 32 MSBs 0x00000000d7e4dd38
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d7e4dd38
sw x3, 0(x2) # store x3 (0xd7e4dd38) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d7e4dd38 from memory into f12
fdiv.d f1, f15, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x25, 0xd2cd66b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8cc11918 # load x3 with 32 MSBs 0x000000008cc11918
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008cc11918
sw x3, 0(x2) # store x3 (0x8cc11918) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008cc11918 from memory into f16
li x3, 0x1d0511f9 # load x3 with 32 MSBs 0x000000001d0511f9
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001d0511f9
sw x3, 0(x2) # store x3 (0x1d0511f9) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000001d0511f9 from memory into f21
fdiv.d f25, f16, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x1, 0xc8077b23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc42eb3ae # load x3 with 32 MSBs 0x00000000c42eb3ae
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c42eb3ae
sw x3, 0(x2) # store x3 (0xc42eb3ae) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000c42eb3ae from memory into f17
li x3, 0xf5a47ee8 # load x3 with 32 MSBs 0x00000000f5a47ee8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f5a47ee8
sw x3, 0(x2) # store x3 (0xf5a47ee8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000f5a47ee8 from memory into f15
fdiv.d f1, f17, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x31, 0x83365c32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdcfe4ea3 # load x3 with 32 MSBs 0x00000000dcfe4ea3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dcfe4ea3
sw x3, 0(x2) # store x3 (0xdcfe4ea3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000dcfe4ea3 from memory into f18
li x3, 0xebf455a7 # load x3 with 32 MSBs 0x00000000ebf455a7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ebf455a7
sw x3, 0(x2) # store x3 (0xebf455a7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000ebf455a7 from memory into f26
fdiv.d f31, f18, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x14, 0xac5c87d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe580d410 # load x3 with 32 MSBs 0x00000000e580d410
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e580d410
sw x3, 0(x2) # store x3 (0xe580d410) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000e580d410 from memory into f19
li x3, 0x1fbcbd2f # load x3 with 32 MSBs 0x000000001fbcbd2f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000001fbcbd2f
sw x3, 0(x2) # store x3 (0x1fbcbd2f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000001fbcbd2f from memory into f26
fdiv.d f14, f19, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x7, 0xe9a67ed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ba58515 # load x3 with 32 MSBs 0x000000003ba58515
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003ba58515
sw x3, 0(x2) # store x3 (0x3ba58515) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000003ba58515 from memory into f20
li x3, 0xad78fb23 # load x3 with 32 MSBs 0x00000000ad78fb23
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ad78fb23
sw x3, 0(x2) # store x3 (0xad78fb23) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000ad78fb23 from memory into f23
fdiv.d f7, f20, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x14, 0x3cbd778b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4f8f15bc # load x3 with 32 MSBs 0x000000004f8f15bc
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004f8f15bc
sw x3, 0(x2) # store x3 (0x4f8f15bc) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000004f8f15bc from memory into f21
li x3, 0xeb0089ba # load x3 with 32 MSBs 0x00000000eb0089ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000eb0089ba
sw x3, 0(x2) # store x3 (0xeb0089ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000eb0089ba from memory into f10
fdiv.d f14, f21, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x6, 0x3f6abddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x954fe9d5 # load x3 with 32 MSBs 0x00000000954fe9d5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000954fe9d5
sw x3, 0(x2) # store x3 (0x954fe9d5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000954fe9d5 from memory into f22
li x3, 0xfb72255e # load x3 with 32 MSBs 0x00000000fb72255e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fb72255e
sw x3, 0(x2) # store x3 (0xfb72255e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000fb72255e from memory into f12
fdiv.d f6, f22, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x2, 0x49a3326b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc879676e # load x3 with 32 MSBs 0x00000000c879676e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c879676e
sw x3, 0(x2) # store x3 (0xc879676e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c879676e from memory into f23
li x3, 0x4fee28ad # load x3 with 32 MSBs 0x000000004fee28ad
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004fee28ad
sw x3, 0(x2) # store x3 (0x4fee28ad) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004fee28ad from memory into f19
fdiv.d f2, f23, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x25, 0xba634342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9a38ad2 # load x3 with 32 MSBs 0x00000000b9a38ad2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b9a38ad2
sw x3, 0(x2) # store x3 (0xb9a38ad2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b9a38ad2 from memory into f24
li x3, 0x5c40cd60 # load x3 with 32 MSBs 0x000000005c40cd60
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c40cd60
sw x3, 0(x2) # store x3 (0x5c40cd60) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005c40cd60 from memory into f16
fdiv.d f25, f24, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x15, 0xca170ad9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd162201d # load x3 with 32 MSBs 0x00000000d162201d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d162201d
sw x3, 0(x2) # store x3 (0xd162201d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000d162201d from memory into f25
li x3, 0x12177b5f # load x3 with 32 MSBs 0x0000000012177b5f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012177b5f
sw x3, 0(x2) # store x3 (0x12177b5f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000012177b5f from memory into f10
fdiv.d f15, f25, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x7, 0x5a737bba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0956ba27 # load x3 with 32 MSBs 0x000000000956ba27
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000956ba27
sw x3, 0(x2) # store x3 (0x0956ba27) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000000956ba27 from memory into f26
li x3, 0xaeea7ec8 # load x3 with 32 MSBs 0x00000000aeea7ec8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000aeea7ec8
sw x3, 0(x2) # store x3 (0xaeea7ec8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000aeea7ec8 from memory into f27
fdiv.d f7, f26, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x15, 0x076a3d57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x94297712 # load x3 with 32 MSBs 0x0000000094297712
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000094297712
sw x3, 0(x2) # store x3 (0x94297712) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000094297712 from memory into f27
li x3, 0xcdb3d929 # load x3 with 32 MSBs 0x00000000cdb3d929
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000cdb3d929
sw x3, 0(x2) # store x3 (0xcdb3d929) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000cdb3d929 from memory into f12
fdiv.d f15, f27, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x2, 0xd01dc6f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2b1188fb # load x3 with 32 MSBs 0x000000002b1188fb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002b1188fb
sw x3, 0(x2) # store x3 (0x2b1188fb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000002b1188fb from memory into f28
li x3, 0x5c2c5377 # load x3 with 32 MSBs 0x000000005c2c5377
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005c2c5377
sw x3, 0(x2) # store x3 (0x5c2c5377) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005c2c5377 from memory into f10
fdiv.d f2, f28, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x3, 0x189ffef1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4916008e # load x3 with 32 MSBs 0x000000004916008e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004916008e
sw x3, 0(x2) # store x3 (0x4916008e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004916008e from memory into f29
li x3, 0x045d5791 # load x3 with 32 MSBs 0x00000000045d5791
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000045d5791
sw x3, 0(x2) # store x3 (0x045d5791) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000045d5791 from memory into f6
fdiv.d f3, f29, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x29, 0x01516862 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x61a2a1b0 # load x3 with 32 MSBs 0x0000000061a2a1b0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000061a2a1b0
sw x3, 0(x2) # store x3 (0x61a2a1b0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000061a2a1b0 from memory into f30
li x3, 0x3d65719d # load x3 with 32 MSBs 0x000000003d65719d
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003d65719d
sw x3, 0(x2) # store x3 (0x3d65719d) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003d65719d from memory into f19
fdiv.d f29, f30, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x28, 0x62f91c7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7829ff0b # load x3 with 32 MSBs 0x000000007829ff0b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007829ff0b
sw x3, 0(x2) # store x3 (0x7829ff0b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007829ff0b from memory into f31
li x3, 0x63eed0c3 # load x3 with 32 MSBs 0x0000000063eed0c3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000063eed0c3
sw x3, 0(x2) # store x3 (0x63eed0c3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000063eed0c3 from memory into f4
fdiv.d f28, f31, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x3, 0x6181e314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x90db87da # load x3 with 32 MSBs 0x0000000090db87da
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000090db87da
sw x3, 0(x2) # store x3 (0x90db87da) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000090db87da from memory into f29
li x3, 0xef3ae9d0 # load x3 with 32 MSBs 0x00000000ef3ae9d0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ef3ae9d0
sw x3, 0(x2) # store x3 (0xef3ae9d0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000ef3ae9d0 from memory into f0
fdiv.d f3, f29, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x1, 0xffad74e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22b8a5c7 # load x3 with 32 MSBs 0x0000000022b8a5c7
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000022b8a5c7
sw x3, 0(x2) # store x3 (0x22b8a5c7) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000022b8a5c7 from memory into f17
li x3, 0xfd4a5a5b # load x3 with 32 MSBs 0x00000000fd4a5a5b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fd4a5a5b
sw x3, 0(x2) # store x3 (0xfd4a5a5b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fd4a5a5b from memory into f1
fdiv.d f1, f17, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x22, 0x628d4077 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb258d4c5 # load x3 with 32 MSBs 0x00000000b258d4c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b258d4c5
sw x3, 0(x2) # store x3 (0xb258d4c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000b258d4c5 from memory into f31
li x3, 0xfeaf6e94 # load x3 with 32 MSBs 0x00000000feaf6e94
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000feaf6e94
sw x3, 0(x2) # store x3 (0xfeaf6e94) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000feaf6e94 from memory into f2
fdiv.d f22, f31, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x15, 0x3bc06634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd921339 # load x3 with 32 MSBs 0x00000000dd921339
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd921339
sw x3, 0(x2) # store x3 (0xdd921339) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000dd921339 from memory into f17
li x3, 0xb077551c # load x3 with 32 MSBs 0x00000000b077551c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000b077551c
sw x3, 0(x2) # store x3 (0xb077551c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b077551c from memory into f3
fdiv.d f15, f17, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x22, 0x6a2b1c41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x873bc8e6 # load x3 with 32 MSBs 0x00000000873bc8e6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000873bc8e6
sw x3, 0(x2) # store x3 (0x873bc8e6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000873bc8e6 from memory into f19
li x3, 0xf2557ca5 # load x3 with 32 MSBs 0x00000000f2557ca5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f2557ca5
sw x3, 0(x2) # store x3 (0xf2557ca5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000f2557ca5 from memory into f4
fdiv.d f22, f19, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x23, 0xd5723b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x254f86cd # load x3 with 32 MSBs 0x00000000254f86cd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000254f86cd
sw x3, 0(x2) # store x3 (0x254f86cd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000254f86cd from memory into f15
li x3, 0x4a151d54 # load x3 with 32 MSBs 0x000000004a151d54
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000004a151d54
sw x3, 0(x2) # store x3 (0x4a151d54) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000004a151d54 from memory into f5
fdiv.d f23, f15, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x13, 0x5c843116 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd32807f # load x3 with 32 MSBs 0x00000000dd32807f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dd32807f
sw x3, 0(x2) # store x3 (0xdd32807f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000dd32807f from memory into f2
li x3, 0xfa0dab95 # load x3 with 32 MSBs 0x00000000fa0dab95
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000fa0dab95
sw x3, 0(x2) # store x3 (0xfa0dab95) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000fa0dab95 from memory into f6
fdiv.d f13, f2, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x15, 0x4efec9ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f7fb7d3 # load x3 with 32 MSBs 0x000000009f7fb7d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009f7fb7d3
sw x3, 0(x2) # store x3 (0x9f7fb7d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009f7fb7d3 from memory into f3
li x3, 0xbf7620bf # load x3 with 32 MSBs 0x00000000bf7620bf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bf7620bf
sw x3, 0(x2) # store x3 (0xbf7620bf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000bf7620bf from memory into f7
fdiv.d f15, f3, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x23, 0x9546b256 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2bf3d97c # load x3 with 32 MSBs 0x000000002bf3d97c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002bf3d97c
sw x3, 0(x2) # store x3 (0x2bf3d97c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000002bf3d97c from memory into f20
li x3, 0x74272778 # load x3 with 32 MSBs 0x0000000074272778
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000074272778
sw x3, 0(x2) # store x3 (0x74272778) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000074272778 from memory into f8
fdiv.d f23, f20, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x27, 0x786c837b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc987be19 # load x3 with 32 MSBs 0x00000000c987be19
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c987be19
sw x3, 0(x2) # store x3 (0xc987be19) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c987be19 from memory into f11
li x3, 0x87c9a4d3 # load x3 with 32 MSBs 0x0000000087c9a4d3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000087c9a4d3
sw x3, 0(x2) # store x3 (0x87c9a4d3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000087c9a4d3 from memory into f9
fdiv.d f27, f11, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x25, 0x24cc1d71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf11be6ce # load x3 with 32 MSBs 0x00000000f11be6ce
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f11be6ce
sw x3, 0(x2) # store x3 (0xf11be6ce) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000f11be6ce from memory into f29
li x3, 0x9e8c007a # load x3 with 32 MSBs 0x000000009e8c007a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009e8c007a
sw x3, 0(x2) # store x3 (0x9e8c007a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009e8c007a from memory into f10
fdiv.d f25, f29, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x3, 0xc4e1d4b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8ba86d0e # load x3 with 32 MSBs 0x000000008ba86d0e
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000008ba86d0e
sw x3, 0(x2) # store x3 (0x8ba86d0e) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000008ba86d0e from memory into f22
li x3, 0xce2591ef # load x3 with 32 MSBs 0x00000000ce2591ef
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000ce2591ef
sw x3, 0(x2) # store x3 (0xce2591ef) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ce2591ef from memory into f11
fdiv.d f3, f22, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x28, 0x96157ad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70332713 # load x3 with 32 MSBs 0x0000000070332713
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000070332713
sw x3, 0(x2) # store x3 (0x70332713) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000070332713 from memory into f9
li x3, 0x3bcba58c # load x3 with 32 MSBs 0x000000003bcba58c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003bcba58c
sw x3, 0(x2) # store x3 (0x3bcba58c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000003bcba58c from memory into f12
fdiv.d f28, f9, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x19, 0x8309a538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f3c4889 # load x3 with 32 MSBs 0x000000007f3c4889
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007f3c4889
sw x3, 0(x2) # store x3 (0x7f3c4889) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007f3c4889 from memory into f31
li x3, 0xc3a14721 # load x3 with 32 MSBs 0x00000000c3a14721
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c3a14721
sw x3, 0(x2) # store x3 (0xc3a14721) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c3a14721 from memory into f13
fdiv.d f19, f31, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x16, 0xabbd9e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7cc439a2 # load x3 with 32 MSBs 0x000000007cc439a2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000007cc439a2
sw x3, 0(x2) # store x3 (0x7cc439a2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007cc439a2 from memory into f27
li x3, 0x00b5003a # load x3 with 32 MSBs 0x0000000000b5003a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000000b5003a
sw x3, 0(x2) # store x3 (0x00b5003a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000b5003a from memory into f14
fdiv.d f16, f27, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x1, 0xc601aba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd27b8589 # load x3 with 32 MSBs 0x00000000d27b8589
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000d27b8589
sw x3, 0(x2) # store x3 (0xd27b8589) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d27b8589 from memory into f29
li x3, 0x9344ec61 # load x3 with 32 MSBs 0x000000009344ec61
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009344ec61
sw x3, 0(x2) # store x3 (0x9344ec61) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009344ec61 from memory into f15
fdiv.d f1, f29, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x9, 0xddacc3b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x796d910b # load x3 with 32 MSBs 0x00000000796d910b
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000796d910b
sw x3, 0(x2) # store x3 (0x796d910b) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000796d910b from memory into f23
li x3, 0x6d24760f # load x3 with 32 MSBs 0x000000006d24760f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006d24760f
sw x3, 0(x2) # store x3 (0x6d24760f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000006d24760f from memory into f16
fdiv.d f9, f23, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x18, 0xfbeb6a1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ed00c0f # load x3 with 32 MSBs 0x000000006ed00c0f
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006ed00c0f
sw x3, 0(x2) # store x3 (0x6ed00c0f) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006ed00c0f from memory into f12
li x3, 0x684481b5 # load x3 with 32 MSBs 0x00000000684481b5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000684481b5
sw x3, 0(x2) # store x3 (0x684481b5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000684481b5 from memory into f17
fdiv.d f18, f12, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x17, 0xdb5e6cdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bee7768 # load x3 with 32 MSBs 0x000000009bee7768
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000009bee7768
sw x3, 0(x2) # store x3 (0x9bee7768) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000009bee7768 from memory into f14
li x3, 0x3c2ff4c5 # load x3 with 32 MSBs 0x000000003c2ff4c5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000003c2ff4c5
sw x3, 0(x2) # store x3 (0x3c2ff4c5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000003c2ff4c5 from memory into f18
fdiv.d f17, f14, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x4, 0xa926a5b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x750ce3e3 # load x3 with 32 MSBs 0x00000000750ce3e3
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000750ce3e3
sw x3, 0(x2) # store x3 (0x750ce3e3) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000750ce3e3 from memory into f2
li x3, 0xc7ef18d6 # load x3 with 32 MSBs 0x00000000c7ef18d6
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c7ef18d6
sw x3, 0(x2) # store x3 (0xc7ef18d6) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c7ef18d6 from memory into f19
fdiv.d f4, f2, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x17, 0x855ddd81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f978abb # load x3 with 32 MSBs 0x000000005f978abb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005f978abb
sw x3, 0(x2) # store x3 (0x5f978abb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005f978abb from memory into f7
li x3, 0x401e632c # load x3 with 32 MSBs 0x00000000401e632c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000401e632c
sw x3, 0(x2) # store x3 (0x401e632c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000401e632c from memory into f20
fdiv.d f17, f7, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x22, 0x3547c91d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x207f1c45 # load x3 with 32 MSBs 0x00000000207f1c45
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000207f1c45
sw x3, 0(x2) # store x3 (0x207f1c45) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000207f1c45 from memory into f16
li x3, 0x2f394d59 # load x3 with 32 MSBs 0x000000002f394d59
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002f394d59
sw x3, 0(x2) # store x3 (0x2f394d59) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000002f394d59 from memory into f21
fdiv.d f22, f16, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x25, 0x922b89cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc5a47986 # load x3 with 32 MSBs 0x00000000c5a47986
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000c5a47986
sw x3, 0(x2) # store x3 (0xc5a47986) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c5a47986 from memory into f20
li x3, 0x5ab7c0e5 # load x3 with 32 MSBs 0x000000005ab7c0e5
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000005ab7c0e5
sw x3, 0(x2) # store x3 (0x5ab7c0e5) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005ab7c0e5 from memory into f22
fdiv.d f25, f20, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x16, 0xa90db138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95d0c1b8 # load x3 with 32 MSBs 0x0000000095d0c1b8
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000095d0c1b8
sw x3, 0(x2) # store x3 (0x95d0c1b8) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000095d0c1b8 from memory into f10
li x3, 0x12ef91aa # load x3 with 32 MSBs 0x0000000012ef91aa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012ef91aa
sw x3, 0(x2) # store x3 (0x12ef91aa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000012ef91aa from memory into f23
fdiv.d f16, f10, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x1, 0xec9ea86c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xefdbb88c # load x3 with 32 MSBs 0x00000000efdbb88c
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000efdbb88c
sw x3, 0(x2) # store x3 (0xefdbb88c) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000efdbb88c from memory into f27
li x3, 0x0c9f088a # load x3 with 32 MSBs 0x000000000c9f088a
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000000c9f088a
sw x3, 0(x2) # store x3 (0x0c9f088a) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000000c9f088a from memory into f24
fdiv.d f1, f27, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x17, 0xe40a324f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe93ffe34 # load x3 with 32 MSBs 0x00000000e93ffe34
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e93ffe34
sw x3, 0(x2) # store x3 (0xe93ffe34) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e93ffe34 from memory into f10
li x3, 0x2d5103ba # load x3 with 32 MSBs 0x000000002d5103ba
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000002d5103ba
sw x3, 0(x2) # store x3 (0x2d5103ba) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000002d5103ba from memory into f25
fdiv.d f17, f10, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x19, 0xe21f0ca8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e43adfa # load x3 with 32 MSBs 0x000000006e43adfa
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006e43adfa
sw x3, 0(x2) # store x3 (0x6e43adfa) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000006e43adfa from memory into f20
li x3, 0x12502729 # load x3 with 32 MSBs 0x0000000012502729
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000012502729
sw x3, 0(x2) # store x3 (0x12502729) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000012502729 from memory into f26
fdiv.d f19, f20, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x25, 0x82b72825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc912906 # load x3 with 32 MSBs 0x00000000dc912906
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000dc912906
sw x3, 0(x2) # store x3 (0xdc912906) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000dc912906 from memory into f11
li x3, 0xbb97e221 # load x3 with 32 MSBs 0x00000000bb97e221
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000bb97e221
sw x3, 0(x2) # store x3 (0xbb97e221) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000bb97e221 from memory into f27
fdiv.d f25, f11, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x9, 0x870f94bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf03ae330 # load x3 with 32 MSBs 0x00000000f03ae330
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000f03ae330
sw x3, 0(x2) # store x3 (0xf03ae330) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000f03ae330 from memory into f21
li x3, 0x6facacbf # load x3 with 32 MSBs 0x000000006facacbf
li x4, 0x00000000 # load x4 with 32 LSBs of 0x000000006facacbf
sw x3, 0(x2) # store x3 (0x6facacbf) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006facacbf from memory into f28
fdiv.d f9, f21, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x13, 0x5cb0727a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25bf23bd # load x3 with 32 MSBs 0x0000000025bf23bd
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000025bf23bd
sw x3, 0(x2) # store x3 (0x25bf23bd) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000025bf23bd from memory into f6
li x3, 0x105655bb # load x3 with 32 MSBs 0x00000000105655bb
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000105655bb
sw x3, 0(x2) # store x3 (0x105655bb) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000105655bb from memory into f29
fdiv.d f13, f6, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x27, 0xd424bbaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x779698b2 # load x3 with 32 MSBs 0x00000000779698b2
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000779698b2
sw x3, 0(x2) # store x3 (0x779698b2) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000779698b2 from memory into f6
li x3, 0xe0dd0cc0 # load x3 with 32 MSBs 0x00000000e0dd0cc0
li x4, 0x00000000 # load x4 with 32 LSBs of 0x00000000e0dd0cc0
sw x3, 0(x2) # store x3 (0xe0dd0cc0) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e0dd0cc0 from memory into f30
fdiv.d f27, f6, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x29, 0xca3fb663 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x26c3ba39 # load x3 with 32 MSBs 0x0000000026c3ba39
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000026c3ba39
sw x3, 0(x2) # store x3 (0x26c3ba39) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000026c3ba39 from memory into f26
li x3, 0x57d4fb69 # load x3 with 32 MSBs 0x0000000057d4fb69
li x4, 0x00000000 # load x4 with 32 LSBs of 0x0000000057d4fb69
sw x3, 0(x2) # store x3 (0x57d4fb69) in memory
sw x4, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000057d4fb69 from memory into f31
fdiv.d f29, f26, f31 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
