///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv64/F/WALLY-COV-fmsub.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x19, x2, x18 # perform first operation
fmsub.s f16, f25, f26, f20 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x22, x26, x18 # perform first operation
fmsub.s f23, f25, f17, f14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x23, x2, x17 # perform first operation
fmsub.s f3, f21, f7, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f30, f5, f25 # perform first operation
fmsub.s f30, f30, f16, f11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f3, f28, f8 # perform first operation
fmsub.s f1, f9, f13, f12 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f24, f1, f3 # perform first operation
fmsub.s f1, f3, f10, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f9, f25, f29 # perform first operation
fmsub.s f9, f28, f2, f31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f16, f12, f31 # perform first operation
fmsub.s f16, f25, f29, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f1, f17, f7 # perform first operation
fmsub.s f1, f22, f20, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f30, f3, f24 # perform first operation
fmsub.s f3, f18, f25, f19 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f7, f10, f2 # perform first operation
fmsub.s f2, f19, f15, f28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f27, f13, f26 # perform first operation
fmsub.s f15, f24, f1, f23 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x893089de4ebc9d60 # load x3 with value 0x893089de4ebc9d60
sw x3, 0(x2) # store 0x893089de4ebc9d60 in memory
flw f0, 0(x2) # load 0x893089de4ebc9d60 from memory into f0
la x2, scratch
li x3, 0xf8800cc2f2036100 # load x3 with value 0xf8800cc2f2036100
sw x3, 0(x2) # store 0xf8800cc2f2036100 in memory
flw f12, 0(x2) # load 0xf8800cc2f2036100 from memory into f12
la x2, scratch
li x3, 0xfa1e945fde06e5df # load x3 with value 0xfa1e945fde06e5df
sw x3, 0(x2) # store 0xfa1e945fde06e5df in memory
flw f19, 0(x2) # load 0xfa1e945fde06e5df from memory into f19
fmsub.s f30, f0, f12, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0xa2cb3aa9cc69b0e4 # load x3 with value 0xa2cb3aa9cc69b0e4
sw x3, 0(x2) # store 0xa2cb3aa9cc69b0e4 in memory
flw f1, 0(x2) # load 0xa2cb3aa9cc69b0e4 from memory into f1
la x2, scratch
li x3, 0x5e1a92dbdc274658 # load x3 with value 0x5e1a92dbdc274658
sw x3, 0(x2) # store 0x5e1a92dbdc274658 in memory
flw f20, 0(x2) # load 0x5e1a92dbdc274658 from memory into f20
la x2, scratch
li x3, 0x5b8bdc6d82572026 # load x3 with value 0x5b8bdc6d82572026
sw x3, 0(x2) # store 0x5b8bdc6d82572026 in memory
flw f7, 0(x2) # load 0x5b8bdc6d82572026 from memory into f7
fmsub.s f12, f1, f20, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x29409db71d0cd49f # load x3 with value 0x29409db71d0cd49f
sw x3, 0(x2) # store 0x29409db71d0cd49f in memory
flw f2, 0(x2) # load 0x29409db71d0cd49f from memory into f2
la x2, scratch
li x3, 0x986bf359bdaef1df # load x3 with value 0x986bf359bdaef1df
sw x3, 0(x2) # store 0x986bf359bdaef1df in memory
flw f16, 0(x2) # load 0x986bf359bdaef1df from memory into f16
la x2, scratch
li x3, 0x36aaaee671ff131a # load x3 with value 0x36aaaee671ff131a
sw x3, 0(x2) # store 0x36aaaee671ff131a in memory
flw f11, 0(x2) # load 0x36aaaee671ff131a from memory into f11
fmsub.s f26, f2, f16, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0x745179a70e140d98 # load x3 with value 0x745179a70e140d98
sw x3, 0(x2) # store 0x745179a70e140d98 in memory
flw f3, 0(x2) # load 0x745179a70e140d98 from memory into f3
la x2, scratch
li x3, 0x3279bdd6c6be24fc # load x3 with value 0x3279bdd6c6be24fc
sw x3, 0(x2) # store 0x3279bdd6c6be24fc in memory
flw f8, 0(x2) # load 0x3279bdd6c6be24fc from memory into f8
la x2, scratch
li x3, 0x388d6f1a31d92bfe # load x3 with value 0x388d6f1a31d92bfe
sw x3, 0(x2) # store 0x388d6f1a31d92bfe in memory
flw f18, 0(x2) # load 0x388d6f1a31d92bfe from memory into f18
fmsub.s f6, f3, f8, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x23221f1136a072fc # load x3 with value 0x23221f1136a072fc
sw x3, 0(x2) # store 0x23221f1136a072fc in memory
flw f4, 0(x2) # load 0x23221f1136a072fc from memory into f4
la x2, scratch
li x3, 0x2273df1ee67aad26 # load x3 with value 0x2273df1ee67aad26
sw x3, 0(x2) # store 0x2273df1ee67aad26 in memory
flw f29, 0(x2) # load 0x2273df1ee67aad26 from memory into f29
la x2, scratch
li x3, 0x15b2a3f1b3a1ad8a # load x3 with value 0x15b2a3f1b3a1ad8a
sw x3, 0(x2) # store 0x15b2a3f1b3a1ad8a in memory
flw f23, 0(x2) # load 0x15b2a3f1b3a1ad8a from memory into f23
fmsub.s f30, f4, f29, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x53eed7e6c929418e # load x3 with value 0x53eed7e6c929418e
sw x3, 0(x2) # store 0x53eed7e6c929418e in memory
flw f5, 0(x2) # load 0x53eed7e6c929418e from memory into f5
la x2, scratch
li x3, 0x9d6f60a46dc18e0 # load x3 with value 0x9d6f60a46dc18e0
sw x3, 0(x2) # store 0x9d6f60a46dc18e0 in memory
flw f13, 0(x2) # load 0x9d6f60a46dc18e0 from memory into f13
la x2, scratch
li x3, 0xd0f3e25b5ab91228 # load x3 with value 0xd0f3e25b5ab91228
sw x3, 0(x2) # store 0xd0f3e25b5ab91228 in memory
flw f25, 0(x2) # load 0xd0f3e25b5ab91228 from memory into f25
fmsub.s f4, f5, f13, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xe6aa98a24ac194bd # load x3 with value 0xe6aa98a24ac194bd
sw x3, 0(x2) # store 0xe6aa98a24ac194bd in memory
flw f6, 0(x2) # load 0xe6aa98a24ac194bd from memory into f6
la x2, scratch
li x3, 0x5e734023a19cd2c # load x3 with value 0x5e734023a19cd2c
sw x3, 0(x2) # store 0x5e734023a19cd2c in memory
flw f29, 0(x2) # load 0x5e734023a19cd2c from memory into f29
la x2, scratch
li x3, 0x2077ffd61578abea # load x3 with value 0x2077ffd61578abea
sw x3, 0(x2) # store 0x2077ffd61578abea in memory
flw f21, 0(x2) # load 0x2077ffd61578abea from memory into f21
fmsub.s f14, f6, f29, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x5696c44e008219a3 # load x3 with value 0x5696c44e008219a3
sw x3, 0(x2) # store 0x5696c44e008219a3 in memory
flw f7, 0(x2) # load 0x5696c44e008219a3 from memory into f7
la x2, scratch
li x3, 0x4be1c832b9ab4ad5 # load x3 with value 0x4be1c832b9ab4ad5
sw x3, 0(x2) # store 0x4be1c832b9ab4ad5 in memory
flw f6, 0(x2) # load 0x4be1c832b9ab4ad5 from memory into f6
la x2, scratch
li x3, 0x2cfd72ac558a00a5 # load x3 with value 0x2cfd72ac558a00a5
sw x3, 0(x2) # store 0x2cfd72ac558a00a5 in memory
flw f26, 0(x2) # load 0x2cfd72ac558a00a5 from memory into f26
fmsub.s f11, f7, f6, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x465bed7514d41895 # load x3 with value 0x465bed7514d41895
sw x3, 0(x2) # store 0x465bed7514d41895 in memory
flw f8, 0(x2) # load 0x465bed7514d41895 from memory into f8
la x2, scratch
li x3, 0xce09e76c861f5add # load x3 with value 0xce09e76c861f5add
sw x3, 0(x2) # store 0xce09e76c861f5add in memory
flw f3, 0(x2) # load 0xce09e76c861f5add from memory into f3
la x2, scratch
li x3, 0x6815321e1cf050bd # load x3 with value 0x6815321e1cf050bd
sw x3, 0(x2) # store 0x6815321e1cf050bd in memory
flw f31, 0(x2) # load 0x6815321e1cf050bd from memory into f31
fmsub.s f12, f8, f3, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x9b41d64c5eb5e54a # load x3 with value 0x9b41d64c5eb5e54a
sw x3, 0(x2) # store 0x9b41d64c5eb5e54a in memory
flw f9, 0(x2) # load 0x9b41d64c5eb5e54a from memory into f9
la x2, scratch
li x3, 0x38ff21df2edb6269 # load x3 with value 0x38ff21df2edb6269
sw x3, 0(x2) # store 0x38ff21df2edb6269 in memory
flw f30, 0(x2) # load 0x38ff21df2edb6269 from memory into f30
la x2, scratch
li x3, 0x2bc21a7b9f76fec2 # load x3 with value 0x2bc21a7b9f76fec2
sw x3, 0(x2) # store 0x2bc21a7b9f76fec2 in memory
flw f1, 0(x2) # load 0x2bc21a7b9f76fec2 from memory into f1
fmsub.s f28, f9, f30, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x10f23eea72a5cfcb # load x3 with value 0x10f23eea72a5cfcb
sw x3, 0(x2) # store 0x10f23eea72a5cfcb in memory
flw f10, 0(x2) # load 0x10f23eea72a5cfcb from memory into f10
la x2, scratch
li x3, 0x4289e334d661f054 # load x3 with value 0x4289e334d661f054
sw x3, 0(x2) # store 0x4289e334d661f054 in memory
flw f12, 0(x2) # load 0x4289e334d661f054 from memory into f12
la x2, scratch
li x3, 0x1e2a12a117f19f26 # load x3 with value 0x1e2a12a117f19f26
sw x3, 0(x2) # store 0x1e2a12a117f19f26 in memory
flw f3, 0(x2) # load 0x1e2a12a117f19f26 from memory into f3
fmsub.s f24, f10, f12, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x1c88bfb16e7ad55d # load x3 with value 0x1c88bfb16e7ad55d
sw x3, 0(x2) # store 0x1c88bfb16e7ad55d in memory
flw f11, 0(x2) # load 0x1c88bfb16e7ad55d from memory into f11
la x2, scratch
li x3, 0x33ff687fa47f0cee # load x3 with value 0x33ff687fa47f0cee
sw x3, 0(x2) # store 0x33ff687fa47f0cee in memory
flw f2, 0(x2) # load 0x33ff687fa47f0cee from memory into f2
la x2, scratch
li x3, 0x85e6f41739d1a6f # load x3 with value 0x85e6f41739d1a6f
sw x3, 0(x2) # store 0x85e6f41739d1a6f in memory
flw f30, 0(x2) # load 0x85e6f41739d1a6f from memory into f30
fmsub.s f17, f11, f2, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x4ed5f81bd1799b8 # load x3 with value 0x4ed5f81bd1799b8
sw x3, 0(x2) # store 0x4ed5f81bd1799b8 in memory
flw f12, 0(x2) # load 0x4ed5f81bd1799b8 from memory into f12
la x2, scratch
li x3, 0x89e23f77095dd720 # load x3 with value 0x89e23f77095dd720
sw x3, 0(x2) # store 0x89e23f77095dd720 in memory
flw f15, 0(x2) # load 0x89e23f77095dd720 from memory into f15
la x2, scratch
li x3, 0x17576daea5a4838c # load x3 with value 0x17576daea5a4838c
sw x3, 0(x2) # store 0x17576daea5a4838c in memory
flw f29, 0(x2) # load 0x17576daea5a4838c from memory into f29
fmsub.s f6, f12, f15, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xbc9ceb07df5cf64e # load x3 with value 0xbc9ceb07df5cf64e
sw x3, 0(x2) # store 0xbc9ceb07df5cf64e in memory
flw f13, 0(x2) # load 0xbc9ceb07df5cf64e from memory into f13
la x2, scratch
li x3, 0x72aa37f9fb650997 # load x3 with value 0x72aa37f9fb650997
sw x3, 0(x2) # store 0x72aa37f9fb650997 in memory
flw f26, 0(x2) # load 0x72aa37f9fb650997 from memory into f26
la x2, scratch
li x3, 0x70736faec657b097 # load x3 with value 0x70736faec657b097
sw x3, 0(x2) # store 0x70736faec657b097 in memory
flw f3, 0(x2) # load 0x70736faec657b097 from memory into f3
fmsub.s f8, f13, f26, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x3a8084698a557a09 # load x3 with value 0x3a8084698a557a09
sw x3, 0(x2) # store 0x3a8084698a557a09 in memory
flw f14, 0(x2) # load 0x3a8084698a557a09 from memory into f14
la x2, scratch
li x3, 0x26c868c6248c1252 # load x3 with value 0x26c868c6248c1252
sw x3, 0(x2) # store 0x26c868c6248c1252 in memory
flw f30, 0(x2) # load 0x26c868c6248c1252 from memory into f30
la x2, scratch
li x3, 0xd498e6d5d6aaaaf5 # load x3 with value 0xd498e6d5d6aaaaf5
sw x3, 0(x2) # store 0xd498e6d5d6aaaaf5 in memory
flw f10, 0(x2) # load 0xd498e6d5d6aaaaf5 from memory into f10
fmsub.s f3, f14, f30, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x478d581595160976 # load x3 with value 0x478d581595160976
sw x3, 0(x2) # store 0x478d581595160976 in memory
flw f15, 0(x2) # load 0x478d581595160976 from memory into f15
la x2, scratch
li x3, 0x2589956034ed786f # load x3 with value 0x2589956034ed786f
sw x3, 0(x2) # store 0x2589956034ed786f in memory
flw f1, 0(x2) # load 0x2589956034ed786f from memory into f1
la x2, scratch
li x3, 0xb20771e06a3c377f # load x3 with value 0xb20771e06a3c377f
sw x3, 0(x2) # store 0xb20771e06a3c377f in memory
flw f18, 0(x2) # load 0xb20771e06a3c377f from memory into f18
fmsub.s f9, f15, f1, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0xf309787f231b0936 # load x3 with value 0xf309787f231b0936
sw x3, 0(x2) # store 0xf309787f231b0936 in memory
flw f16, 0(x2) # load 0xf309787f231b0936 from memory into f16
la x2, scratch
li x3, 0x4631a3af389d28a7 # load x3 with value 0x4631a3af389d28a7
sw x3, 0(x2) # store 0x4631a3af389d28a7 in memory
flw f1, 0(x2) # load 0x4631a3af389d28a7 from memory into f1
la x2, scratch
li x3, 0x437126019ec60424 # load x3 with value 0x437126019ec60424
sw x3, 0(x2) # store 0x437126019ec60424 in memory
flw f24, 0(x2) # load 0x437126019ec60424 from memory into f24
fmsub.s f11, f16, f1, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x7ee1f8185af7dc1c # load x3 with value 0x7ee1f8185af7dc1c
sw x3, 0(x2) # store 0x7ee1f8185af7dc1c in memory
flw f17, 0(x2) # load 0x7ee1f8185af7dc1c from memory into f17
la x2, scratch
li x3, 0xb3af8f6e5a33e200 # load x3 with value 0xb3af8f6e5a33e200
sw x3, 0(x2) # store 0xb3af8f6e5a33e200 in memory
flw f15, 0(x2) # load 0xb3af8f6e5a33e200 from memory into f15
la x2, scratch
li x3, 0x195145fd5b2df850 # load x3 with value 0x195145fd5b2df850
sw x3, 0(x2) # store 0x195145fd5b2df850 in memory
flw f10, 0(x2) # load 0x195145fd5b2df850 from memory into f10
fmsub.s f31, f17, f15, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xbb9182f4a1b78fb6 # load x3 with value 0xbb9182f4a1b78fb6
sw x3, 0(x2) # store 0xbb9182f4a1b78fb6 in memory
flw f18, 0(x2) # load 0xbb9182f4a1b78fb6 from memory into f18
la x2, scratch
li x3, 0xad8ee523ddf39a56 # load x3 with value 0xad8ee523ddf39a56
sw x3, 0(x2) # store 0xad8ee523ddf39a56 in memory
flw f10, 0(x2) # load 0xad8ee523ddf39a56 from memory into f10
la x2, scratch
li x3, 0x35e15220c00b539a # load x3 with value 0x35e15220c00b539a
sw x3, 0(x2) # store 0x35e15220c00b539a in memory
flw f8, 0(x2) # load 0x35e15220c00b539a from memory into f8
fmsub.s f22, f18, f10, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xf6ebbd183c783a61 # load x3 with value 0xf6ebbd183c783a61
sw x3, 0(x2) # store 0xf6ebbd183c783a61 in memory
flw f19, 0(x2) # load 0xf6ebbd183c783a61 from memory into f19
la x2, scratch
li x3, 0x7d7fa6d53860fd7b # load x3 with value 0x7d7fa6d53860fd7b
sw x3, 0(x2) # store 0x7d7fa6d53860fd7b in memory
flw f5, 0(x2) # load 0x7d7fa6d53860fd7b from memory into f5
la x2, scratch
li x3, 0xa5ddcc6b6e3821aa # load x3 with value 0xa5ddcc6b6e3821aa
sw x3, 0(x2) # store 0xa5ddcc6b6e3821aa in memory
flw f11, 0(x2) # load 0xa5ddcc6b6e3821aa from memory into f11
fmsub.s f12, f19, f5, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xef67d26c78ac309c # load x3 with value 0xef67d26c78ac309c
sw x3, 0(x2) # store 0xef67d26c78ac309c in memory
flw f20, 0(x2) # load 0xef67d26c78ac309c from memory into f20
la x2, scratch
li x3, 0x2ac76c61b2d7d13 # load x3 with value 0x2ac76c61b2d7d13
sw x3, 0(x2) # store 0x2ac76c61b2d7d13 in memory
flw f6, 0(x2) # load 0x2ac76c61b2d7d13 from memory into f6
la x2, scratch
li x3, 0x17a3e7b119b2466 # load x3 with value 0x17a3e7b119b2466
sw x3, 0(x2) # store 0x17a3e7b119b2466 in memory
flw f17, 0(x2) # load 0x17a3e7b119b2466 from memory into f17
fmsub.s f1, f20, f6, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0xcfaf962211e00a35 # load x3 with value 0xcfaf962211e00a35
sw x3, 0(x2) # store 0xcfaf962211e00a35 in memory
flw f21, 0(x2) # load 0xcfaf962211e00a35 from memory into f21
la x2, scratch
li x3, 0x9f7010e05e748c29 # load x3 with value 0x9f7010e05e748c29
sw x3, 0(x2) # store 0x9f7010e05e748c29 in memory
flw f17, 0(x2) # load 0x9f7010e05e748c29 from memory into f17
la x2, scratch
li x3, 0x14fa4738aecc1d02 # load x3 with value 0x14fa4738aecc1d02
sw x3, 0(x2) # store 0x14fa4738aecc1d02 in memory
flw f24, 0(x2) # load 0x14fa4738aecc1d02 from memory into f24
fmsub.s f29, f21, f17, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x2725024369d8d48b # load x3 with value 0x2725024369d8d48b
sw x3, 0(x2) # store 0x2725024369d8d48b in memory
flw f22, 0(x2) # load 0x2725024369d8d48b from memory into f22
la x2, scratch
li x3, 0xa4ddf8fdd2cd2028 # load x3 with value 0xa4ddf8fdd2cd2028
sw x3, 0(x2) # store 0xa4ddf8fdd2cd2028 in memory
flw f28, 0(x2) # load 0xa4ddf8fdd2cd2028 from memory into f28
la x2, scratch
li x3, 0x63a3738d1f1d371d # load x3 with value 0x63a3738d1f1d371d
sw x3, 0(x2) # store 0x63a3738d1f1d371d in memory
flw f15, 0(x2) # load 0x63a3738d1f1d371d from memory into f15
fmsub.s f21, f22, f28, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0xe232af089fc6be4a # load x3 with value 0xe232af089fc6be4a
sw x3, 0(x2) # store 0xe232af089fc6be4a in memory
flw f23, 0(x2) # load 0xe232af089fc6be4a from memory into f23
la x2, scratch
li x3, 0x66333dc2b9d6eb8e # load x3 with value 0x66333dc2b9d6eb8e
sw x3, 0(x2) # store 0x66333dc2b9d6eb8e in memory
flw f27, 0(x2) # load 0x66333dc2b9d6eb8e from memory into f27
la x2, scratch
li x3, 0xdf008ae5a7e1d5f0 # load x3 with value 0xdf008ae5a7e1d5f0
sw x3, 0(x2) # store 0xdf008ae5a7e1d5f0 in memory
flw f26, 0(x2) # load 0xdf008ae5a7e1d5f0 from memory into f26
fmsub.s f18, f23, f27, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x82c79d70219e8795 # load x3 with value 0x82c79d70219e8795
sw x3, 0(x2) # store 0x82c79d70219e8795 in memory
flw f24, 0(x2) # load 0x82c79d70219e8795 from memory into f24
la x2, scratch
li x3, 0xb64c7ce894242c97 # load x3 with value 0xb64c7ce894242c97
sw x3, 0(x2) # store 0xb64c7ce894242c97 in memory
flw f17, 0(x2) # load 0xb64c7ce894242c97 from memory into f17
la x2, scratch
li x3, 0xaa25a8d4704dd062 # load x3 with value 0xaa25a8d4704dd062
sw x3, 0(x2) # store 0xaa25a8d4704dd062 in memory
flw f10, 0(x2) # load 0xaa25a8d4704dd062 from memory into f10
fmsub.s f16, f24, f17, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x775aefcbfeafafc2 # load x3 with value 0x775aefcbfeafafc2
sw x3, 0(x2) # store 0x775aefcbfeafafc2 in memory
flw f25, 0(x2) # load 0x775aefcbfeafafc2 from memory into f25
la x2, scratch
li x3, 0x7b64ca1a5a9c757a # load x3 with value 0x7b64ca1a5a9c757a
sw x3, 0(x2) # store 0x7b64ca1a5a9c757a in memory
flw f30, 0(x2) # load 0x7b64ca1a5a9c757a from memory into f30
la x2, scratch
li x3, 0x5381d0c656ca26b6 # load x3 with value 0x5381d0c656ca26b6
sw x3, 0(x2) # store 0x5381d0c656ca26b6 in memory
flw f29, 0(x2) # load 0x5381d0c656ca26b6 from memory into f29
fmsub.s f8, f25, f30, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x4eb22a9145da8e94 # load x3 with value 0x4eb22a9145da8e94
sw x3, 0(x2) # store 0x4eb22a9145da8e94 in memory
flw f26, 0(x2) # load 0x4eb22a9145da8e94 from memory into f26
la x2, scratch
li x3, 0x2309c9dcc2ae5ec3 # load x3 with value 0x2309c9dcc2ae5ec3
sw x3, 0(x2) # store 0x2309c9dcc2ae5ec3 in memory
flw f7, 0(x2) # load 0x2309c9dcc2ae5ec3 from memory into f7
la x2, scratch
li x3, 0xb11df02c5ad0df02 # load x3 with value 0xb11df02c5ad0df02
sw x3, 0(x2) # store 0xb11df02c5ad0df02 in memory
flw f15, 0(x2) # load 0xb11df02c5ad0df02 from memory into f15
fmsub.s f28, f26, f7, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x51644fd2749cc7d # load x3 with value 0x51644fd2749cc7d
sw x3, 0(x2) # store 0x51644fd2749cc7d in memory
flw f27, 0(x2) # load 0x51644fd2749cc7d from memory into f27
la x2, scratch
li x3, 0xff425a8418d09f55 # load x3 with value 0xff425a8418d09f55
sw x3, 0(x2) # store 0xff425a8418d09f55 in memory
flw f21, 0(x2) # load 0xff425a8418d09f55 from memory into f21
la x2, scratch
li x3, 0xfb2cb786b696f88c # load x3 with value 0xfb2cb786b696f88c
sw x3, 0(x2) # store 0xfb2cb786b696f88c in memory
flw f23, 0(x2) # load 0xfb2cb786b696f88c from memory into f23
fmsub.s f15, f27, f21, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0x271765f112c317b5 # load x3 with value 0x271765f112c317b5
sw x3, 0(x2) # store 0x271765f112c317b5 in memory
flw f28, 0(x2) # load 0x271765f112c317b5 from memory into f28
la x2, scratch
li x3, 0xfd50d5738823d65a # load x3 with value 0xfd50d5738823d65a
sw x3, 0(x2) # store 0xfd50d5738823d65a in memory
flw f8, 0(x2) # load 0xfd50d5738823d65a from memory into f8
la x2, scratch
li x3, 0xd06ea5f52fcfc1dc # load x3 with value 0xd06ea5f52fcfc1dc
sw x3, 0(x2) # store 0xd06ea5f52fcfc1dc in memory
flw f29, 0(x2) # load 0xd06ea5f52fcfc1dc from memory into f29
fmsub.s f1, f28, f8, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xf9d68b83b0bb9154 # load x3 with value 0xf9d68b83b0bb9154
sw x3, 0(x2) # store 0xf9d68b83b0bb9154 in memory
flw f29, 0(x2) # load 0xf9d68b83b0bb9154 from memory into f29
la x2, scratch
li x3, 0x32f8d24dac5f002f # load x3 with value 0x32f8d24dac5f002f
sw x3, 0(x2) # store 0x32f8d24dac5f002f in memory
flw f19, 0(x2) # load 0x32f8d24dac5f002f from memory into f19
la x2, scratch
li x3, 0xe1e90c475a83c33f # load x3 with value 0xe1e90c475a83c33f
sw x3, 0(x2) # store 0xe1e90c475a83c33f in memory
flw f21, 0(x2) # load 0xe1e90c475a83c33f from memory into f21
fmsub.s f13, f29, f19, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x8ff12303d48909d7 # load x3 with value 0x8ff12303d48909d7
sw x3, 0(x2) # store 0x8ff12303d48909d7 in memory
flw f30, 0(x2) # load 0x8ff12303d48909d7 from memory into f30
la x2, scratch
li x3, 0x52d3b0aeaca08f4c # load x3 with value 0x52d3b0aeaca08f4c
sw x3, 0(x2) # store 0x52d3b0aeaca08f4c in memory
flw f11, 0(x2) # load 0x52d3b0aeaca08f4c from memory into f11
la x2, scratch
li x3, 0xfbf14ddc0db1527a # load x3 with value 0xfbf14ddc0db1527a
sw x3, 0(x2) # store 0xfbf14ddc0db1527a in memory
flw f10, 0(x2) # load 0xfbf14ddc0db1527a from memory into f10
fmsub.s f20, f30, f11, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0x46b115182844f5aa # load x3 with value 0x46b115182844f5aa
sw x3, 0(x2) # store 0x46b115182844f5aa in memory
flw f31, 0(x2) # load 0x46b115182844f5aa from memory into f31
la x2, scratch
li x3, 0x5c49f41abe9ada18 # load x3 with value 0x5c49f41abe9ada18
sw x3, 0(x2) # store 0x5c49f41abe9ada18 in memory
flw f14, 0(x2) # load 0x5c49f41abe9ada18 from memory into f14
la x2, scratch
li x3, 0x6b52e8202d08feab # load x3 with value 0x6b52e8202d08feab
sw x3, 0(x2) # store 0x6b52e8202d08feab in memory
flw f26, 0(x2) # load 0x6b52e8202d08feab from memory into f26
fmsub.s f31, f31, f14, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0xdc511765627273e # load x3 with value 0xdc511765627273e
sw x3, 0(x2) # store 0xdc511765627273e in memory
flw f7, 0(x2) # load 0xdc511765627273e from memory into f7
la x2, scratch
li x3, 0x6333e8b8b2d580f8 # load x3 with value 0x6333e8b8b2d580f8
sw x3, 0(x2) # store 0x6333e8b8b2d580f8 in memory
flw f0, 0(x2) # load 0x6333e8b8b2d580f8 from memory into f0
la x2, scratch
li x3, 0x82c283679fad1c78 # load x3 with value 0x82c283679fad1c78
sw x3, 0(x2) # store 0x82c283679fad1c78 in memory
flw f30, 0(x2) # load 0x82c283679fad1c78 from memory into f30
fmsub.s f26, f7, f0, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x9edd257ad984bcd9 # load x3 with value 0x9edd257ad984bcd9
sw x3, 0(x2) # store 0x9edd257ad984bcd9 in memory
flw f31, 0(x2) # load 0x9edd257ad984bcd9 from memory into f31
la x2, scratch
li x3, 0xdc8a2dc313534af6 # load x3 with value 0xdc8a2dc313534af6
sw x3, 0(x2) # store 0xdc8a2dc313534af6 in memory
flw f1, 0(x2) # load 0xdc8a2dc313534af6 from memory into f1
la x2, scratch
li x3, 0xbfa5998735a7a03d # load x3 with value 0xbfa5998735a7a03d
sw x3, 0(x2) # store 0xbfa5998735a7a03d in memory
flw f24, 0(x2) # load 0xbfa5998735a7a03d from memory into f24
fmsub.s f22, f31, f1, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x16e4c5984a3042aa # load x3 with value 0x16e4c5984a3042aa
sw x3, 0(x2) # store 0x16e4c5984a3042aa in memory
flw f18, 0(x2) # load 0x16e4c5984a3042aa from memory into f18
la x2, scratch
li x3, 0xe739ffe957881a4d # load x3 with value 0xe739ffe957881a4d
sw x3, 0(x2) # store 0xe739ffe957881a4d in memory
flw f2, 0(x2) # load 0xe739ffe957881a4d from memory into f2
la x2, scratch
li x3, 0x9937effc33864f7f # load x3 with value 0x9937effc33864f7f
sw x3, 0(x2) # store 0x9937effc33864f7f in memory
flw f7, 0(x2) # load 0x9937effc33864f7f from memory into f7
fmsub.s f14, f18, f2, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x5f9de04646f43010 # load x3 with value 0x5f9de04646f43010
sw x3, 0(x2) # store 0x5f9de04646f43010 in memory
flw f26, 0(x2) # load 0x5f9de04646f43010 from memory into f26
la x2, scratch
li x3, 0xf896494579b061f4 # load x3 with value 0xf896494579b061f4
sw x3, 0(x2) # store 0xf896494579b061f4 in memory
flw f3, 0(x2) # load 0xf896494579b061f4 from memory into f3
la x2, scratch
li x3, 0xd45f245a090d39f # load x3 with value 0xd45f245a090d39f
sw x3, 0(x2) # store 0xd45f245a090d39f in memory
flw f28, 0(x2) # load 0xd45f245a090d39f from memory into f28
fmsub.s f5, f26, f3, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3f2df115ab77bc18 # load x3 with value 0x3f2df115ab77bc18
sw x3, 0(x2) # store 0x3f2df115ab77bc18 in memory
flw f20, 0(x2) # load 0x3f2df115ab77bc18 from memory into f20
la x2, scratch
li x3, 0x5fb462a258b1bfeb # load x3 with value 0x5fb462a258b1bfeb
sw x3, 0(x2) # store 0x5fb462a258b1bfeb in memory
flw f4, 0(x2) # load 0x5fb462a258b1bfeb from memory into f4
la x2, scratch
li x3, 0x1ae3627f20aac2af # load x3 with value 0x1ae3627f20aac2af
sw x3, 0(x2) # store 0x1ae3627f20aac2af in memory
flw f19, 0(x2) # load 0x1ae3627f20aac2af from memory into f19
fmsub.s f7, f20, f4, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8a277ca18b29c12c # load x3 with value 0x8a277ca18b29c12c
sw x3, 0(x2) # store 0x8a277ca18b29c12c in memory
flw f9, 0(x2) # load 0x8a277ca18b29c12c from memory into f9
la x2, scratch
li x3, 0x15a02b2f3c93be49 # load x3 with value 0x15a02b2f3c93be49
sw x3, 0(x2) # store 0x15a02b2f3c93be49 in memory
flw f5, 0(x2) # load 0x15a02b2f3c93be49 from memory into f5
la x2, scratch
li x3, 0x7cfbc402623ef840 # load x3 with value 0x7cfbc402623ef840
sw x3, 0(x2) # store 0x7cfbc402623ef840 in memory
flw f26, 0(x2) # load 0x7cfbc402623ef840 from memory into f26
fmsub.s f7, f9, f5, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x4f9210e5fe266e78 # load x3 with value 0x4f9210e5fe266e78
sw x3, 0(x2) # store 0x4f9210e5fe266e78 in memory
flw f24, 0(x2) # load 0x4f9210e5fe266e78 from memory into f24
la x2, scratch
li x3, 0x2f54d559566d8e2f # load x3 with value 0x2f54d559566d8e2f
sw x3, 0(x2) # store 0x2f54d559566d8e2f in memory
flw f6, 0(x2) # load 0x2f54d559566d8e2f from memory into f6
la x2, scratch
li x3, 0x3303c6e13a55d788 # load x3 with value 0x3303c6e13a55d788
sw x3, 0(x2) # store 0x3303c6e13a55d788 in memory
flw f10, 0(x2) # load 0x3303c6e13a55d788 from memory into f10
fmsub.s f18, f24, f6, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xef6de8e21bc0f700 # load x3 with value 0xef6de8e21bc0f700
sw x3, 0(x2) # store 0xef6de8e21bc0f700 in memory
flw f8, 0(x2) # load 0xef6de8e21bc0f700 from memory into f8
la x2, scratch
li x3, 0xee6ab60919e99266 # load x3 with value 0xee6ab60919e99266
sw x3, 0(x2) # store 0xee6ab60919e99266 in memory
flw f7, 0(x2) # load 0xee6ab60919e99266 from memory into f7
la x2, scratch
li x3, 0x9b4a8257295bdded # load x3 with value 0x9b4a8257295bdded
sw x3, 0(x2) # store 0x9b4a8257295bdded in memory
flw f5, 0(x2) # load 0x9b4a8257295bdded from memory into f5
fmsub.s f20, f8, f7, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xcdbbdee17a536f8c # load x3 with value 0xcdbbdee17a536f8c
sw x3, 0(x2) # store 0xcdbbdee17a536f8c in memory
flw f6, 0(x2) # load 0xcdbbdee17a536f8c from memory into f6
la x2, scratch
li x3, 0xd18893705a3e018 # load x3 with value 0xd18893705a3e018
sw x3, 0(x2) # store 0xd18893705a3e018 in memory
flw f8, 0(x2) # load 0xd18893705a3e018 from memory into f8
la x2, scratch
li x3, 0x3d8c80f264cdb3c4 # load x3 with value 0x3d8c80f264cdb3c4
sw x3, 0(x2) # store 0x3d8c80f264cdb3c4 in memory
flw f17, 0(x2) # load 0x3d8c80f264cdb3c4 from memory into f17
fmsub.s f27, f6, f8, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0x9ea5b5fdb04963bf # load x3 with value 0x9ea5b5fdb04963bf
sw x3, 0(x2) # store 0x9ea5b5fdb04963bf in memory
flw f15, 0(x2) # load 0x9ea5b5fdb04963bf from memory into f15
la x2, scratch
li x3, 0xcb8cbc0eb80ce369 # load x3 with value 0xcb8cbc0eb80ce369
sw x3, 0(x2) # store 0xcb8cbc0eb80ce369 in memory
flw f9, 0(x2) # load 0xcb8cbc0eb80ce369 from memory into f9
la x2, scratch
li x3, 0xed6866ec1c3e217a # load x3 with value 0xed6866ec1c3e217a
sw x3, 0(x2) # store 0xed6866ec1c3e217a in memory
flw f11, 0(x2) # load 0xed6866ec1c3e217a from memory into f11
fmsub.s f9, f15, f9, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x3d67932519d3ae3d # load x3 with value 0x3d67932519d3ae3d
sw x3, 0(x2) # store 0x3d67932519d3ae3d in memory
flw f18, 0(x2) # load 0x3d67932519d3ae3d from memory into f18
la x2, scratch
li x3, 0x81a2cff4fd01ca74 # load x3 with value 0x81a2cff4fd01ca74
sw x3, 0(x2) # store 0x81a2cff4fd01ca74 in memory
flw f10, 0(x2) # load 0x81a2cff4fd01ca74 from memory into f10
la x2, scratch
li x3, 0xb64e5380f85059be # load x3 with value 0xb64e5380f85059be
sw x3, 0(x2) # store 0xb64e5380f85059be in memory
flw f21, 0(x2) # load 0xb64e5380f85059be from memory into f21
fmsub.s f17, f18, f10, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x61a35fe04b3f82b5 # load x3 with value 0x61a35fe04b3f82b5
sw x3, 0(x2) # store 0x61a35fe04b3f82b5 in memory
flw f6, 0(x2) # load 0x61a35fe04b3f82b5 from memory into f6
la x2, scratch
li x3, 0xdba80fc447e8a562 # load x3 with value 0xdba80fc447e8a562
sw x3, 0(x2) # store 0xdba80fc447e8a562 in memory
flw f11, 0(x2) # load 0xdba80fc447e8a562 from memory into f11
la x2, scratch
li x3, 0x65f7a500e2a3459b # load x3 with value 0x65f7a500e2a3459b
sw x3, 0(x2) # store 0x65f7a500e2a3459b in memory
flw f1, 0(x2) # load 0x65f7a500e2a3459b from memory into f1
fmsub.s f29, f6, f11, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xa35a5add6ada9af4 # load x3 with value 0xa35a5add6ada9af4
sw x3, 0(x2) # store 0xa35a5add6ada9af4 in memory
flw f2, 0(x2) # load 0xa35a5add6ada9af4 from memory into f2
la x2, scratch
li x3, 0x13efcedaaa57770a # load x3 with value 0x13efcedaaa57770a
sw x3, 0(x2) # store 0x13efcedaaa57770a in memory
flw f12, 0(x2) # load 0x13efcedaaa57770a from memory into f12
la x2, scratch
li x3, 0xe6f291214c391946 # load x3 with value 0xe6f291214c391946
sw x3, 0(x2) # store 0xe6f291214c391946 in memory
flw f26, 0(x2) # load 0xe6f291214c391946 from memory into f26
fmsub.s f3, f2, f12, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0xcfa7be877cf53cfb # load x3 with value 0xcfa7be877cf53cfb
sw x3, 0(x2) # store 0xcfa7be877cf53cfb in memory
flw f24, 0(x2) # load 0xcfa7be877cf53cfb from memory into f24
la x2, scratch
li x3, 0x3bb2b978aeb3de7d # load x3 with value 0x3bb2b978aeb3de7d
sw x3, 0(x2) # store 0x3bb2b978aeb3de7d in memory
flw f13, 0(x2) # load 0x3bb2b978aeb3de7d from memory into f13
la x2, scratch
li x3, 0x5d872913f3d63c79 # load x3 with value 0x5d872913f3d63c79
sw x3, 0(x2) # store 0x5d872913f3d63c79 in memory
flw f3, 0(x2) # load 0x5d872913f3d63c79 from memory into f3
fmsub.s f1, f24, f13, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0xeba21c0058f4498 # load x3 with value 0xeba21c0058f4498
sw x3, 0(x2) # store 0xeba21c0058f4498 in memory
flw f7, 0(x2) # load 0xeba21c0058f4498 from memory into f7
la x2, scratch
li x3, 0x2a45ecc5a6fe1107 # load x3 with value 0x2a45ecc5a6fe1107
sw x3, 0(x2) # store 0x2a45ecc5a6fe1107 in memory
flw f14, 0(x2) # load 0x2a45ecc5a6fe1107 from memory into f14
la x2, scratch
li x3, 0x59fff58c15e5bf9e # load x3 with value 0x59fff58c15e5bf9e
sw x3, 0(x2) # store 0x59fff58c15e5bf9e in memory
flw f20, 0(x2) # load 0x59fff58c15e5bf9e from memory into f20
fmsub.s f12, f7, f14, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x7b540e28c1fadc73 # load x3 with value 0x7b540e28c1fadc73
sw x3, 0(x2) # store 0x7b540e28c1fadc73 in memory
flw f27, 0(x2) # load 0x7b540e28c1fadc73 from memory into f27
la x2, scratch
li x3, 0x42cb09f76549af62 # load x3 with value 0x42cb09f76549af62
sw x3, 0(x2) # store 0x42cb09f76549af62 in memory
flw f15, 0(x2) # load 0x42cb09f76549af62 from memory into f15
la x2, scratch
li x3, 0xb5b6c4e4991a3f1 # load x3 with value 0xb5b6c4e4991a3f1
sw x3, 0(x2) # store 0xb5b6c4e4991a3f1 in memory
flw f21, 0(x2) # load 0xb5b6c4e4991a3f1 from memory into f21
fmsub.s f22, f27, f15, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0xf593fe2e8a5f4ed0 # load x3 with value 0xf593fe2e8a5f4ed0
sw x3, 0(x2) # store 0xf593fe2e8a5f4ed0 in memory
flw f25, 0(x2) # load 0xf593fe2e8a5f4ed0 from memory into f25
la x2, scratch
li x3, 0x6df1929d6069a4eb # load x3 with value 0x6df1929d6069a4eb
sw x3, 0(x2) # store 0x6df1929d6069a4eb in memory
flw f16, 0(x2) # load 0x6df1929d6069a4eb from memory into f16
la x2, scratch
li x3, 0xac0cd7b32821c2a4 # load x3 with value 0xac0cd7b32821c2a4
sw x3, 0(x2) # store 0xac0cd7b32821c2a4 in memory
flw f7, 0(x2) # load 0xac0cd7b32821c2a4 from memory into f7
fmsub.s f11, f25, f16, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0xcba46627bfd15808 # load x3 with value 0xcba46627bfd15808
sw x3, 0(x2) # store 0xcba46627bfd15808 in memory
flw f7, 0(x2) # load 0xcba46627bfd15808 from memory into f7
la x2, scratch
li x3, 0x76fbdcf244d3d732 # load x3 with value 0x76fbdcf244d3d732
sw x3, 0(x2) # store 0x76fbdcf244d3d732 in memory
flw f17, 0(x2) # load 0x76fbdcf244d3d732 from memory into f17
la x2, scratch
li x3, 0x432a27df0039b25a # load x3 with value 0x432a27df0039b25a
sw x3, 0(x2) # store 0x432a27df0039b25a in memory
flw f27, 0(x2) # load 0x432a27df0039b25a from memory into f27
fmsub.s f13, f7, f17, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x7eae17fddb4f4d65 # load x3 with value 0x7eae17fddb4f4d65
sw x3, 0(x2) # store 0x7eae17fddb4f4d65 in memory
flw f29, 0(x2) # load 0x7eae17fddb4f4d65 from memory into f29
la x2, scratch
li x3, 0xe5df4482378749db # load x3 with value 0xe5df4482378749db
sw x3, 0(x2) # store 0xe5df4482378749db in memory
flw f18, 0(x2) # load 0xe5df4482378749db from memory into f18
la x2, scratch
li x3, 0x8e058edd5fe5ae56 # load x3 with value 0x8e058edd5fe5ae56
sw x3, 0(x2) # store 0x8e058edd5fe5ae56 in memory
flw f31, 0(x2) # load 0x8e058edd5fe5ae56 from memory into f31
fmsub.s f10, f29, f18, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0xb4dc4931a234397e # load x3 with value 0xb4dc4931a234397e
sw x3, 0(x2) # store 0xb4dc4931a234397e in memory
flw f29, 0(x2) # load 0xb4dc4931a234397e from memory into f29
la x2, scratch
li x3, 0xe03a2654a694d55 # load x3 with value 0xe03a2654a694d55
sw x3, 0(x2) # store 0xe03a2654a694d55 in memory
flw f19, 0(x2) # load 0xe03a2654a694d55 from memory into f19
la x2, scratch
li x3, 0xed7f3902ca92df44 # load x3 with value 0xed7f3902ca92df44
sw x3, 0(x2) # store 0xed7f3902ca92df44 in memory
flw f24, 0(x2) # load 0xed7f3902ca92df44 from memory into f24
fmsub.s f9, f29, f19, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0xd0f34f8948364593 # load x3 with value 0xd0f34f8948364593
sw x3, 0(x2) # store 0xd0f34f8948364593 in memory
flw f7, 0(x2) # load 0xd0f34f8948364593 from memory into f7
la x2, scratch
li x3, 0x53090186e0d166b8 # load x3 with value 0x53090186e0d166b8
sw x3, 0(x2) # store 0x53090186e0d166b8 in memory
flw f20, 0(x2) # load 0x53090186e0d166b8 from memory into f20
la x2, scratch
li x3, 0xeaf17e284eecd106 # load x3 with value 0xeaf17e284eecd106
sw x3, 0(x2) # store 0xeaf17e284eecd106 in memory
flw f14, 0(x2) # load 0xeaf17e284eecd106 from memory into f14
fmsub.s f23, f7, f20, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x1369374ee5116d07 # load x3 with value 0x1369374ee5116d07
sw x3, 0(x2) # store 0x1369374ee5116d07 in memory
flw f16, 0(x2) # load 0x1369374ee5116d07 from memory into f16
la x2, scratch
li x3, 0xb6fa825dcf4df7a6 # load x3 with value 0xb6fa825dcf4df7a6
sw x3, 0(x2) # store 0xb6fa825dcf4df7a6 in memory
flw f21, 0(x2) # load 0xb6fa825dcf4df7a6 from memory into f21
la x2, scratch
li x3, 0x70319cd05dedfd1e # load x3 with value 0x70319cd05dedfd1e
sw x3, 0(x2) # store 0x70319cd05dedfd1e in memory
flw f14, 0(x2) # load 0x70319cd05dedfd1e from memory into f14
fmsub.s f8, f16, f21, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x64d9590131a3c9af # load x3 with value 0x64d9590131a3c9af
sw x3, 0(x2) # store 0x64d9590131a3c9af in memory
flw f13, 0(x2) # load 0x64d9590131a3c9af from memory into f13
la x2, scratch
li x3, 0x6cb34a4bb139aab4 # load x3 with value 0x6cb34a4bb139aab4
sw x3, 0(x2) # store 0x6cb34a4bb139aab4 in memory
flw f22, 0(x2) # load 0x6cb34a4bb139aab4 from memory into f22
la x2, scratch
li x3, 0x5fa44e3bdd182bda # load x3 with value 0x5fa44e3bdd182bda
sw x3, 0(x2) # store 0x5fa44e3bdd182bda in memory
flw f20, 0(x2) # load 0x5fa44e3bdd182bda from memory into f20
fmsub.s f2, f13, f22, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0xdafc5e4f686460b4 # load x3 with value 0xdafc5e4f686460b4
sw x3, 0(x2) # store 0xdafc5e4f686460b4 in memory
flw f31, 0(x2) # load 0xdafc5e4f686460b4 from memory into f31
la x2, scratch
li x3, 0x657b7f057233b9ae # load x3 with value 0x657b7f057233b9ae
sw x3, 0(x2) # store 0x657b7f057233b9ae in memory
flw f23, 0(x2) # load 0x657b7f057233b9ae from memory into f23
la x2, scratch
li x3, 0xcf87db7faf1d9b36 # load x3 with value 0xcf87db7faf1d9b36
sw x3, 0(x2) # store 0xcf87db7faf1d9b36 in memory
flw f20, 0(x2) # load 0xcf87db7faf1d9b36 from memory into f20
fmsub.s f16, f31, f23, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0x39a931152fc4f918 # load x3 with value 0x39a931152fc4f918
sw x3, 0(x2) # store 0x39a931152fc4f918 in memory
flw f22, 0(x2) # load 0x39a931152fc4f918 from memory into f22
la x2, scratch
li x3, 0x877d473c2b35ad01 # load x3 with value 0x877d473c2b35ad01
sw x3, 0(x2) # store 0x877d473c2b35ad01 in memory
flw f24, 0(x2) # load 0x877d473c2b35ad01 from memory into f24
la x2, scratch
li x3, 0xdc72473399d9dbd3 # load x3 with value 0xdc72473399d9dbd3
sw x3, 0(x2) # store 0xdc72473399d9dbd3 in memory
flw f10, 0(x2) # load 0xdc72473399d9dbd3 from memory into f10
fmsub.s f25, f22, f24, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x9a33bbb7f9991ae6 # load x3 with value 0x9a33bbb7f9991ae6
sw x3, 0(x2) # store 0x9a33bbb7f9991ae6 in memory
flw f31, 0(x2) # load 0x9a33bbb7f9991ae6 from memory into f31
la x2, scratch
li x3, 0x833e322506d7c61 # load x3 with value 0x833e322506d7c61
sw x3, 0(x2) # store 0x833e322506d7c61 in memory
flw f25, 0(x2) # load 0x833e322506d7c61 from memory into f25
la x2, scratch
li x3, 0x959d9840e182b36a # load x3 with value 0x959d9840e182b36a
sw x3, 0(x2) # store 0x959d9840e182b36a in memory
flw f20, 0(x2) # load 0x959d9840e182b36a from memory into f20
fmsub.s f15, f31, f25, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x5eccbe3163782fff # load x3 with value 0x5eccbe3163782fff
sw x3, 0(x2) # store 0x5eccbe3163782fff in memory
flw f30, 0(x2) # load 0x5eccbe3163782fff from memory into f30
la x2, scratch
li x3, 0xa1aa76a8bbdbfed2 # load x3 with value 0xa1aa76a8bbdbfed2
sw x3, 0(x2) # store 0xa1aa76a8bbdbfed2 in memory
flw f26, 0(x2) # load 0xa1aa76a8bbdbfed2 from memory into f26
la x2, scratch
li x3, 0xa0491525cc9420ae # load x3 with value 0xa0491525cc9420ae
sw x3, 0(x2) # store 0xa0491525cc9420ae in memory
flw f16, 0(x2) # load 0xa0491525cc9420ae from memory into f16
fmsub.s f14, f30, f26, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x106ce703aebf15d1 # load x3 with value 0x106ce703aebf15d1
sw x3, 0(x2) # store 0x106ce703aebf15d1 in memory
flw f20, 0(x2) # load 0x106ce703aebf15d1 from memory into f20
la x2, scratch
li x3, 0x6b0fea83a56cf575 # load x3 with value 0x6b0fea83a56cf575
sw x3, 0(x2) # store 0x6b0fea83a56cf575 in memory
flw f27, 0(x2) # load 0x6b0fea83a56cf575 from memory into f27
la x2, scratch
li x3, 0x7f203917c00dd7a8 # load x3 with value 0x7f203917c00dd7a8
sw x3, 0(x2) # store 0x7f203917c00dd7a8 in memory
flw f28, 0(x2) # load 0x7f203917c00dd7a8 from memory into f28
fmsub.s f18, f20, f27, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0xf56b5b60140fec03 # load x3 with value 0xf56b5b60140fec03
sw x3, 0(x2) # store 0xf56b5b60140fec03 in memory
flw f29, 0(x2) # load 0xf56b5b60140fec03 from memory into f29
la x2, scratch
li x3, 0xc2f10cb5bef966f4 # load x3 with value 0xc2f10cb5bef966f4
sw x3, 0(x2) # store 0xc2f10cb5bef966f4 in memory
flw f28, 0(x2) # load 0xc2f10cb5bef966f4 from memory into f28
la x2, scratch
li x3, 0x6a44ca94b7767340 # load x3 with value 0x6a44ca94b7767340
sw x3, 0(x2) # store 0x6a44ca94b7767340 in memory
flw f1, 0(x2) # load 0x6a44ca94b7767340 from memory into f1
fmsub.s f23, f29, f28, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x53416bdaed54a46a # load x3 with value 0x53416bdaed54a46a
sw x3, 0(x2) # store 0x53416bdaed54a46a in memory
flw f13, 0(x2) # load 0x53416bdaed54a46a from memory into f13
la x2, scratch
li x3, 0x6d6997c6a329ba5e # load x3 with value 0x6d6997c6a329ba5e
sw x3, 0(x2) # store 0x6d6997c6a329ba5e in memory
flw f29, 0(x2) # load 0x6d6997c6a329ba5e from memory into f29
la x2, scratch
li x3, 0xa0a72c998878dbba # load x3 with value 0xa0a72c998878dbba
sw x3, 0(x2) # store 0xa0a72c998878dbba in memory
flw f3, 0(x2) # load 0xa0a72c998878dbba from memory into f3
fmsub.s f8, f13, f29, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x1ea2de1ea8f52e45 # load x3 with value 0x1ea2de1ea8f52e45
sw x3, 0(x2) # store 0x1ea2de1ea8f52e45 in memory
flw f16, 0(x2) # load 0x1ea2de1ea8f52e45 from memory into f16
la x2, scratch
li x3, 0x4789385a257a7be1 # load x3 with value 0x4789385a257a7be1
sw x3, 0(x2) # store 0x4789385a257a7be1 in memory
flw f30, 0(x2) # load 0x4789385a257a7be1 from memory into f30
la x2, scratch
li x3, 0x281cf3d9efced45e # load x3 with value 0x281cf3d9efced45e
sw x3, 0(x2) # store 0x281cf3d9efced45e in memory
flw f1, 0(x2) # load 0x281cf3d9efced45e from memory into f1
fmsub.s f28, f16, f30, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0xab2cd6f3a5d5c399 # load x3 with value 0xab2cd6f3a5d5c399
sw x3, 0(x2) # store 0xab2cd6f3a5d5c399 in memory
flw f22, 0(x2) # load 0xab2cd6f3a5d5c399 from memory into f22
la x2, scratch
li x3, 0xb854fc0fea60c69b # load x3 with value 0xb854fc0fea60c69b
sw x3, 0(x2) # store 0xb854fc0fea60c69b in memory
flw f31, 0(x2) # load 0xb854fc0fea60c69b from memory into f31
la x2, scratch
li x3, 0xc2da30c0329a8996 # load x3 with value 0xc2da30c0329a8996
sw x3, 0(x2) # store 0xc2da30c0329a8996 in memory
flw f23, 0(x2) # load 0xc2da30c0329a8996 from memory into f23
fmsub.s f31, f22, f31, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x7ab81ba39ff7e1ed # load x3 with value 0x7ab81ba39ff7e1ed
sw x3, 0(x2) # store 0x7ab81ba39ff7e1ed in memory
flw f8, 0(x2) # load 0x7ab81ba39ff7e1ed from memory into f8
la x2, scratch
li x3, 0x7b297191cd2e28f9 # load x3 with value 0x7b297191cd2e28f9
sw x3, 0(x2) # store 0x7b297191cd2e28f9 in memory
flw f17, 0(x2) # load 0x7b297191cd2e28f9 from memory into f17
la x2, scratch
li x3, 0x612038f2db7727be # load x3 with value 0x612038f2db7727be
sw x3, 0(x2) # store 0x612038f2db7727be in memory
flw f0, 0(x2) # load 0x612038f2db7727be from memory into f0
fmsub.s f29, f8, f17, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0x72a663a06bb1593d # load x3 with value 0x72a663a06bb1593d
sw x3, 0(x2) # store 0x72a663a06bb1593d in memory
flw f7, 0(x2) # load 0x72a663a06bb1593d from memory into f7
la x2, scratch
li x3, 0xcbbc4021c2dfdd0 # load x3 with value 0xcbbc4021c2dfdd0
sw x3, 0(x2) # store 0xcbbc4021c2dfdd0 in memory
flw f31, 0(x2) # load 0xcbbc4021c2dfdd0 from memory into f31
la x2, scratch
li x3, 0xe90a52ca071d4263 # load x3 with value 0xe90a52ca071d4263
sw x3, 0(x2) # store 0xe90a52ca071d4263 in memory
flw f1, 0(x2) # load 0xe90a52ca071d4263 from memory into f1
fmsub.s f21, f7, f31, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xd07c862fe8c6628 # load x3 with value 0xd07c862fe8c6628
sw x3, 0(x2) # store 0xd07c862fe8c6628 in memory
flw f23, 0(x2) # load 0xd07c862fe8c6628 from memory into f23
la x2, scratch
li x3, 0x43457eb686cb8cb5 # load x3 with value 0x43457eb686cb8cb5
sw x3, 0(x2) # store 0x43457eb686cb8cb5 in memory
flw f6, 0(x2) # load 0x43457eb686cb8cb5 from memory into f6
la x2, scratch
li x3, 0x2657a5b0d416eb51 # load x3 with value 0x2657a5b0d416eb51
sw x3, 0(x2) # store 0x2657a5b0d416eb51 in memory
flw f2, 0(x2) # load 0x2657a5b0d416eb51 from memory into f2
fmsub.s f31, f23, f6, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0x9070b86f559c1c75 # load x3 with value 0x9070b86f559c1c75
sw x3, 0(x2) # store 0x9070b86f559c1c75 in memory
flw f1, 0(x2) # load 0x9070b86f559c1c75 from memory into f1
la x2, scratch
li x3, 0x17a1b046d6d777b0 # load x3 with value 0x17a1b046d6d777b0
sw x3, 0(x2) # store 0x17a1b046d6d777b0 in memory
flw f29, 0(x2) # load 0x17a1b046d6d777b0 from memory into f29
la x2, scratch
li x3, 0x7c988ef4d56de # load x3 with value 0x7c988ef4d56de
sw x3, 0(x2) # store 0x7c988ef4d56de in memory
flw f3, 0(x2) # load 0x7c988ef4d56de from memory into f3
fmsub.s f15, f1, f29, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x5d9ff05c98833908 # load x3 with value 0x5d9ff05c98833908
sw x3, 0(x2) # store 0x5d9ff05c98833908 in memory
flw f2, 0(x2) # load 0x5d9ff05c98833908 from memory into f2
la x2, scratch
li x3, 0xacb2ba34abc0c238 # load x3 with value 0xacb2ba34abc0c238
sw x3, 0(x2) # store 0xacb2ba34abc0c238 in memory
flw f6, 0(x2) # load 0xacb2ba34abc0c238 from memory into f6
la x2, scratch
li x3, 0x52b4018012e2c01e # load x3 with value 0x52b4018012e2c01e
sw x3, 0(x2) # store 0x52b4018012e2c01e in memory
flw f4, 0(x2) # load 0x52b4018012e2c01e from memory into f4
fmsub.s f18, f2, f6, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0x7f16ab8e7c7b4475 # load x3 with value 0x7f16ab8e7c7b4475
sw x3, 0(x2) # store 0x7f16ab8e7c7b4475 in memory
flw f21, 0(x2) # load 0x7f16ab8e7c7b4475 from memory into f21
la x2, scratch
li x3, 0x7a22006ce6738e4b # load x3 with value 0x7a22006ce6738e4b
sw x3, 0(x2) # store 0x7a22006ce6738e4b in memory
flw f7, 0(x2) # load 0x7a22006ce6738e4b from memory into f7
la x2, scratch
li x3, 0x97703ea452d61ae # load x3 with value 0x97703ea452d61ae
sw x3, 0(x2) # store 0x97703ea452d61ae in memory
flw f5, 0(x2) # load 0x97703ea452d61ae from memory into f5
fmsub.s f12, f21, f7, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x5a4a5c13a9a88d1b # load x3 with value 0x5a4a5c13a9a88d1b
sw x3, 0(x2) # store 0x5a4a5c13a9a88d1b in memory
flw f30, 0(x2) # load 0x5a4a5c13a9a88d1b from memory into f30
la x2, scratch
li x3, 0xef26ac87c7e939eb # load x3 with value 0xef26ac87c7e939eb
sw x3, 0(x2) # store 0xef26ac87c7e939eb in memory
flw f22, 0(x2) # load 0xef26ac87c7e939eb from memory into f22
la x2, scratch
li x3, 0x7a0df84ba8f20f9 # load x3 with value 0x7a0df84ba8f20f9
sw x3, 0(x2) # store 0x7a0df84ba8f20f9 in memory
flw f6, 0(x2) # load 0x7a0df84ba8f20f9 from memory into f6
fmsub.s f31, f30, f22, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0x1381ce0a519bf6c # load x3 with value 0x1381ce0a519bf6c
sw x3, 0(x2) # store 0x1381ce0a519bf6c in memory
flw f29, 0(x2) # load 0x1381ce0a519bf6c from memory into f29
la x2, scratch
li x3, 0x2ce5113c602e5520 # load x3 with value 0x2ce5113c602e5520
sw x3, 0(x2) # store 0x2ce5113c602e5520 in memory
flw f24, 0(x2) # load 0x2ce5113c602e5520 from memory into f24
la x2, scratch
li x3, 0x809ae10bd5ae15f8 # load x3 with value 0x809ae10bd5ae15f8
sw x3, 0(x2) # store 0x809ae10bd5ae15f8 in memory
flw f7, 0(x2) # load 0x809ae10bd5ae15f8 from memory into f7
fmsub.s f25, f29, f24, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0x52002e3088ff234e # load x3 with value 0x52002e3088ff234e
sw x3, 0(x2) # store 0x52002e3088ff234e in memory
flw f28, 0(x2) # load 0x52002e3088ff234e from memory into f28
la x2, scratch
li x3, 0x35c3b28ced643cd1 # load x3 with value 0x35c3b28ced643cd1
sw x3, 0(x2) # store 0x35c3b28ced643cd1 in memory
flw f3, 0(x2) # load 0x35c3b28ced643cd1 from memory into f3
la x2, scratch
li x3, 0x4256fb01cbe41785 # load x3 with value 0x4256fb01cbe41785
sw x3, 0(x2) # store 0x4256fb01cbe41785 in memory
flw f8, 0(x2) # load 0x4256fb01cbe41785 from memory into f8
fmsub.s f25, f28, f3, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0xc323491a55b32cb0 # load x3 with value 0xc323491a55b32cb0
sw x3, 0(x2) # store 0xc323491a55b32cb0 in memory
flw f19, 0(x2) # load 0xc323491a55b32cb0 from memory into f19
la x2, scratch
li x3, 0x8218db9b733db173 # load x3 with value 0x8218db9b733db173
sw x3, 0(x2) # store 0x8218db9b733db173 in memory
flw f2, 0(x2) # load 0x8218db9b733db173 from memory into f2
la x2, scratch
li x3, 0xb98d3a0dcfaf8608 # load x3 with value 0xb98d3a0dcfaf8608
sw x3, 0(x2) # store 0xb98d3a0dcfaf8608 in memory
flw f9, 0(x2) # load 0xb98d3a0dcfaf8608 from memory into f9
fmsub.s f17, f19, f2, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x30119e1879c32f75 # load x3 with value 0x30119e1879c32f75
sw x3, 0(x2) # store 0x30119e1879c32f75 in memory
flw f13, 0(x2) # load 0x30119e1879c32f75 from memory into f13
la x2, scratch
li x3, 0x22a7c8ce62ca9cfe # load x3 with value 0x22a7c8ce62ca9cfe
sw x3, 0(x2) # store 0x22a7c8ce62ca9cfe in memory
flw f28, 0(x2) # load 0x22a7c8ce62ca9cfe from memory into f28
la x2, scratch
li x3, 0xcb854a0a3f9034c6 # load x3 with value 0xcb854a0a3f9034c6
sw x3, 0(x2) # store 0xcb854a0a3f9034c6 in memory
flw f10, 0(x2) # load 0xcb854a0a3f9034c6 from memory into f10
fmsub.s f15, f13, f28, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x2f86ff7f19589006 # load x3 with value 0x2f86ff7f19589006
sw x3, 0(x2) # store 0x2f86ff7f19589006 in memory
flw f13, 0(x2) # load 0x2f86ff7f19589006 from memory into f13
la x2, scratch
li x3, 0x4c60e8ef70a1ceb0 # load x3 with value 0x4c60e8ef70a1ceb0
sw x3, 0(x2) # store 0x4c60e8ef70a1ceb0 in memory
flw f22, 0(x2) # load 0x4c60e8ef70a1ceb0 from memory into f22
la x2, scratch
li x3, 0xa927ed05c934b0f3 # load x3 with value 0xa927ed05c934b0f3
sw x3, 0(x2) # store 0xa927ed05c934b0f3 in memory
flw f11, 0(x2) # load 0xa927ed05c934b0f3 from memory into f11
fmsub.s f18, f13, f22, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0xc8b4b89881e938f5 # load x3 with value 0xc8b4b89881e938f5
sw x3, 0(x2) # store 0xc8b4b89881e938f5 in memory
flw f28, 0(x2) # load 0xc8b4b89881e938f5 from memory into f28
la x2, scratch
li x3, 0xf72a346b989882a6 # load x3 with value 0xf72a346b989882a6
sw x3, 0(x2) # store 0xf72a346b989882a6 in memory
flw f17, 0(x2) # load 0xf72a346b989882a6 from memory into f17
la x2, scratch
li x3, 0xfd482b174bc3f23d # load x3 with value 0xfd482b174bc3f23d
sw x3, 0(x2) # store 0xfd482b174bc3f23d in memory
flw f12, 0(x2) # load 0xfd482b174bc3f23d from memory into f12
fmsub.s f11, f28, f17, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x3bca18754ddd18c0 # load x3 with value 0x3bca18754ddd18c0
sw x3, 0(x2) # store 0x3bca18754ddd18c0 in memory
flw f25, 0(x2) # load 0x3bca18754ddd18c0 from memory into f25
la x2, scratch
li x3, 0x5729f839f1c178df # load x3 with value 0x5729f839f1c178df
sw x3, 0(x2) # store 0x5729f839f1c178df in memory
flw f27, 0(x2) # load 0x5729f839f1c178df from memory into f27
la x2, scratch
li x3, 0xc467ea6b88b346da # load x3 with value 0xc467ea6b88b346da
sw x3, 0(x2) # store 0xc467ea6b88b346da in memory
flw f13, 0(x2) # load 0xc467ea6b88b346da from memory into f13
fmsub.s f2, f25, f27, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0x3e8678be138d4449 # load x3 with value 0x3e8678be138d4449
sw x3, 0(x2) # store 0x3e8678be138d4449 in memory
flw f25, 0(x2) # load 0x3e8678be138d4449 from memory into f25
la x2, scratch
li x3, 0x4ff90d3e657fe6f8 # load x3 with value 0x4ff90d3e657fe6f8
sw x3, 0(x2) # store 0x4ff90d3e657fe6f8 in memory
flw f9, 0(x2) # load 0x4ff90d3e657fe6f8 from memory into f9
la x2, scratch
li x3, 0x826fa9458062cd3b # load x3 with value 0x826fa9458062cd3b
sw x3, 0(x2) # store 0x826fa9458062cd3b in memory
flw f14, 0(x2) # load 0x826fa9458062cd3b from memory into f14
fmsub.s f18, f25, f9, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x44b4f6908019ce52 # load x3 with value 0x44b4f6908019ce52
sw x3, 0(x2) # store 0x44b4f6908019ce52 in memory
flw f8, 0(x2) # load 0x44b4f6908019ce52 from memory into f8
la x2, scratch
li x3, 0xa2ce4ae0598cc74f # load x3 with value 0xa2ce4ae0598cc74f
sw x3, 0(x2) # store 0xa2ce4ae0598cc74f in memory
flw f2, 0(x2) # load 0xa2ce4ae0598cc74f from memory into f2
la x2, scratch
li x3, 0x45135aed5d2e28ca # load x3 with value 0x45135aed5d2e28ca
sw x3, 0(x2) # store 0x45135aed5d2e28ca in memory
flw f15, 0(x2) # load 0x45135aed5d2e28ca from memory into f15
fmsub.s f14, f8, f2, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0x5640b13e3e1fd89e # load x3 with value 0x5640b13e3e1fd89e
sw x3, 0(x2) # store 0x5640b13e3e1fd89e in memory
flw f12, 0(x2) # load 0x5640b13e3e1fd89e from memory into f12
la x2, scratch
li x3, 0x5e5e3c5fbd05373 # load x3 with value 0x5e5e3c5fbd05373
sw x3, 0(x2) # store 0x5e5e3c5fbd05373 in memory
flw f23, 0(x2) # load 0x5e5e3c5fbd05373 from memory into f23
la x2, scratch
li x3, 0x144ea47e928e013f # load x3 with value 0x144ea47e928e013f
sw x3, 0(x2) # store 0x144ea47e928e013f in memory
flw f16, 0(x2) # load 0x144ea47e928e013f from memory into f16
fmsub.s f14, f12, f23, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0x6c553fa3bf4c6f27 # load x3 with value 0x6c553fa3bf4c6f27
sw x3, 0(x2) # store 0x6c553fa3bf4c6f27 in memory
flw f24, 0(x2) # load 0x6c553fa3bf4c6f27 from memory into f24
la x2, scratch
li x3, 0x87f7646f88dbc654 # load x3 with value 0x87f7646f88dbc654
sw x3, 0(x2) # store 0x87f7646f88dbc654 in memory
flw f11, 0(x2) # load 0x87f7646f88dbc654 from memory into f11
la x2, scratch
li x3, 0xca6d4b23f76276b6 # load x3 with value 0xca6d4b23f76276b6
sw x3, 0(x2) # store 0xca6d4b23f76276b6 in memory
flw f17, 0(x2) # load 0xca6d4b23f76276b6 from memory into f17
fmsub.s f2, f24, f11, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x96d0a83722d63404 # load x3 with value 0x96d0a83722d63404
sw x3, 0(x2) # store 0x96d0a83722d63404 in memory
flw f8, 0(x2) # load 0x96d0a83722d63404 from memory into f8
la x2, scratch
li x3, 0x29dfb05c20a2ee93 # load x3 with value 0x29dfb05c20a2ee93
sw x3, 0(x2) # store 0x29dfb05c20a2ee93 in memory
flw f22, 0(x2) # load 0x29dfb05c20a2ee93 from memory into f22
la x2, scratch
li x3, 0xb83e64a72ca84631 # load x3 with value 0xb83e64a72ca84631
sw x3, 0(x2) # store 0xb83e64a72ca84631 in memory
flw f18, 0(x2) # load 0xb83e64a72ca84631 from memory into f18
fmsub.s f27, f8, f22, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x97a85c2bdba451d # load x3 with value 0x97a85c2bdba451d
sw x3, 0(x2) # store 0x97a85c2bdba451d in memory
flw f3, 0(x2) # load 0x97a85c2bdba451d from memory into f3
la x2, scratch
li x3, 0x24b370d1dd047c9a # load x3 with value 0x24b370d1dd047c9a
sw x3, 0(x2) # store 0x24b370d1dd047c9a in memory
flw f31, 0(x2) # load 0x24b370d1dd047c9a from memory into f31
la x2, scratch
li x3, 0x8888d3db7a7990f4 # load x3 with value 0x8888d3db7a7990f4
sw x3, 0(x2) # store 0x8888d3db7a7990f4 in memory
flw f19, 0(x2) # load 0x8888d3db7a7990f4 from memory into f19
fmsub.s f11, f3, f31, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0x7bb4af3e1a859528 # load x3 with value 0x7bb4af3e1a859528
sw x3, 0(x2) # store 0x7bb4af3e1a859528 in memory
flw f14, 0(x2) # load 0x7bb4af3e1a859528 from memory into f14
la x2, scratch
li x3, 0xf4cb9402478b1360 # load x3 with value 0xf4cb9402478b1360
sw x3, 0(x2) # store 0xf4cb9402478b1360 in memory
flw f29, 0(x2) # load 0xf4cb9402478b1360 from memory into f29
la x2, scratch
li x3, 0x12b588a4d3f9139e # load x3 with value 0x12b588a4d3f9139e
sw x3, 0(x2) # store 0x12b588a4d3f9139e in memory
flw f20, 0(x2) # load 0x12b588a4d3f9139e from memory into f20
fmsub.s f3, f14, f29, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x34c81aedb7a8ebc4 # load x3 with value 0x34c81aedb7a8ebc4
sw x3, 0(x2) # store 0x34c81aedb7a8ebc4 in memory
flw f19, 0(x2) # load 0x34c81aedb7a8ebc4 from memory into f19
la x2, scratch
li x3, 0x5f84aaecbf2547a6 # load x3 with value 0x5f84aaecbf2547a6
sw x3, 0(x2) # store 0x5f84aaecbf2547a6 in memory
flw f28, 0(x2) # load 0x5f84aaecbf2547a6 from memory into f28
la x2, scratch
li x3, 0xd178ad41c26d78cc # load x3 with value 0xd178ad41c26d78cc
sw x3, 0(x2) # store 0xd178ad41c26d78cc in memory
flw f21, 0(x2) # load 0xd178ad41c26d78cc from memory into f21
fmsub.s f11, f19, f28, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x83fda75dde1df347 # load x3 with value 0x83fda75dde1df347
sw x3, 0(x2) # store 0x83fda75dde1df347 in memory
flw f30, 0(x2) # load 0x83fda75dde1df347 from memory into f30
la x2, scratch
li x3, 0xc33bb70efab1399c # load x3 with value 0xc33bb70efab1399c
sw x3, 0(x2) # store 0xc33bb70efab1399c in memory
flw f12, 0(x2) # load 0xc33bb70efab1399c from memory into f12
la x2, scratch
li x3, 0x83aa954537bc026b # load x3 with value 0x83aa954537bc026b
sw x3, 0(x2) # store 0x83aa954537bc026b in memory
flw f22, 0(x2) # load 0x83aa954537bc026b from memory into f22
fmsub.s f21, f30, f12, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0xa273fc33ea092e2d # load x3 with value 0xa273fc33ea092e2d
sw x3, 0(x2) # store 0xa273fc33ea092e2d in memory
flw f31, 0(x2) # load 0xa273fc33ea092e2d from memory into f31
la x2, scratch
li x3, 0x2411d2ceb55abf1c # load x3 with value 0x2411d2ceb55abf1c
sw x3, 0(x2) # store 0x2411d2ceb55abf1c in memory
flw f13, 0(x2) # load 0x2411d2ceb55abf1c from memory into f13
la x2, scratch
li x3, 0x8fa93b81c7ecbdae # load x3 with value 0x8fa93b81c7ecbdae
sw x3, 0(x2) # store 0x8fa93b81c7ecbdae in memory
flw f23, 0(x2) # load 0x8fa93b81c7ecbdae from memory into f23
fmsub.s f26, f31, f13, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0xd711dd71d80458ac # load x3 with value 0xd711dd71d80458ac
sw x3, 0(x2) # store 0xd711dd71d80458ac in memory
flw f31, 0(x2) # load 0xd711dd71d80458ac from memory into f31
la x2, scratch
li x3, 0x75abcdaf1dfe670c # load x3 with value 0x75abcdaf1dfe670c
sw x3, 0(x2) # store 0x75abcdaf1dfe670c in memory
flw f10, 0(x2) # load 0x75abcdaf1dfe670c from memory into f10
la x2, scratch
li x3, 0x17ae3b173033fab7 # load x3 with value 0x17ae3b173033fab7
sw x3, 0(x2) # store 0x17ae3b173033fab7 in memory
flw f24, 0(x2) # load 0x17ae3b173033fab7 from memory into f24
fmsub.s f16, f31, f10, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x103d81037ecf5c94 # load x3 with value 0x103d81037ecf5c94
sw x3, 0(x2) # store 0x103d81037ecf5c94 in memory
flw f27, 0(x2) # load 0x103d81037ecf5c94 from memory into f27
la x2, scratch
li x3, 0x3d84447de1f3f866 # load x3 with value 0x3d84447de1f3f866
sw x3, 0(x2) # store 0x3d84447de1f3f866 in memory
flw f29, 0(x2) # load 0x3d84447de1f3f866 from memory into f29
la x2, scratch
li x3, 0xf92e0bb9df63448a # load x3 with value 0xf92e0bb9df63448a
sw x3, 0(x2) # store 0xf92e0bb9df63448a in memory
flw f25, 0(x2) # load 0xf92e0bb9df63448a from memory into f25
fmsub.s f10, f27, f29, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0xc8e83181c1d92722 # load x3 with value 0xc8e83181c1d92722
sw x3, 0(x2) # store 0xc8e83181c1d92722 in memory
flw f15, 0(x2) # load 0xc8e83181c1d92722 from memory into f15
la x2, scratch
li x3, 0xafce4e17e4be0ac1 # load x3 with value 0xafce4e17e4be0ac1
sw x3, 0(x2) # store 0xafce4e17e4be0ac1 in memory
flw f14, 0(x2) # load 0xafce4e17e4be0ac1 from memory into f14
la x2, scratch
li x3, 0x393ca04874a6fcf5 # load x3 with value 0x393ca04874a6fcf5
sw x3, 0(x2) # store 0x393ca04874a6fcf5 in memory
flw f26, 0(x2) # load 0x393ca04874a6fcf5 from memory into f26
fmsub.s f26, f15, f14, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0x5ab16fc03d318704 # load x3 with value 0x5ab16fc03d318704
sw x3, 0(x2) # store 0x5ab16fc03d318704 in memory
flw f23, 0(x2) # load 0x5ab16fc03d318704 from memory into f23
la x2, scratch
li x3, 0x963daa4eae82a631 # load x3 with value 0x963daa4eae82a631
sw x3, 0(x2) # store 0x963daa4eae82a631 in memory
flw f21, 0(x2) # load 0x963daa4eae82a631 from memory into f21
la x2, scratch
li x3, 0xf4cb664bc68f9552 # load x3 with value 0xf4cb664bc68f9552
sw x3, 0(x2) # store 0xf4cb664bc68f9552 in memory
flw f27, 0(x2) # load 0xf4cb664bc68f9552 from memory into f27
fmsub.s f17, f23, f21, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x132f4771fe214a5b # load x3 with value 0x132f4771fe214a5b
sw x3, 0(x2) # store 0x132f4771fe214a5b in memory
flw f16, 0(x2) # load 0x132f4771fe214a5b from memory into f16
la x2, scratch
li x3, 0xcfc45298906bff15 # load x3 with value 0xcfc45298906bff15
sw x3, 0(x2) # store 0xcfc45298906bff15 in memory
flw f22, 0(x2) # load 0xcfc45298906bff15 from memory into f22
la x2, scratch
li x3, 0x93c90686bef9613b # load x3 with value 0x93c90686bef9613b
sw x3, 0(x2) # store 0x93c90686bef9613b in memory
flw f28, 0(x2) # load 0x93c90686bef9613b from memory into f28
fmsub.s f5, f16, f22, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0xd2ade41db2785363 # load x3 with value 0xd2ade41db2785363
sw x3, 0(x2) # store 0xd2ade41db2785363 in memory
flw f27, 0(x2) # load 0xd2ade41db2785363 from memory into f27
la x2, scratch
li x3, 0x96074fae09a259f0 # load x3 with value 0x96074fae09a259f0
sw x3, 0(x2) # store 0x96074fae09a259f0 in memory
flw f23, 0(x2) # load 0x96074fae09a259f0 from memory into f23
la x2, scratch
li x3, 0x6e6219b83f88a2bb # load x3 with value 0x6e6219b83f88a2bb
sw x3, 0(x2) # store 0x6e6219b83f88a2bb in memory
flw f29, 0(x2) # load 0x6e6219b83f88a2bb from memory into f29
fmsub.s f25, f27, f23, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x18a2f7f79b6f6045 # load x3 with value 0x18a2f7f79b6f6045
sw x3, 0(x2) # store 0x18a2f7f79b6f6045 in memory
flw f23, 0(x2) # load 0x18a2f7f79b6f6045 from memory into f23
la x2, scratch
li x3, 0xfe443bb7ff0f6a81 # load x3 with value 0xfe443bb7ff0f6a81
sw x3, 0(x2) # store 0xfe443bb7ff0f6a81 in memory
flw f12, 0(x2) # load 0xfe443bb7ff0f6a81 from memory into f12
la x2, scratch
li x3, 0xee510616a99d72c6 # load x3 with value 0xee510616a99d72c6
sw x3, 0(x2) # store 0xee510616a99d72c6 in memory
flw f30, 0(x2) # load 0xee510616a99d72c6 from memory into f30
fmsub.s f25, f23, f12, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x6483d312e4653703 # load x3 with value 0x6483d312e4653703
sw x3, 0(x2) # store 0x6483d312e4653703 in memory
flw f5, 0(x2) # load 0x6483d312e4653703 from memory into f5
la x2, scratch
li x3, 0x18ec9467d55a94b2 # load x3 with value 0x18ec9467d55a94b2
sw x3, 0(x2) # store 0x18ec9467d55a94b2 in memory
flw f16, 0(x2) # load 0x18ec9467d55a94b2 from memory into f16
la x2, scratch
li x3, 0xd860a896e98e431f # load x3 with value 0xd860a896e98e431f
sw x3, 0(x2) # store 0xd860a896e98e431f in memory
flw f31, 0(x2) # load 0xd860a896e98e431f from memory into f31
fmsub.s f28, f5, f16, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0x98934a81a89fb1db # load x3 with value 0x98934a81a89fb1db
sw x3, 0(x2) # store 0x98934a81a89fb1db in memory
flw f6, 0(x2) # load 0x98934a81a89fb1db from memory into f6
la x2, scratch
li x3, 0x2fcbb505bf6abaff # load x3 with value 0x2fcbb505bf6abaff
sw x3, 0(x2) # store 0x2fcbb505bf6abaff in memory
flw f7, 0(x2) # load 0x2fcbb505bf6abaff from memory into f7
la x2, scratch
li x3, 0x262914f7b473341a # load x3 with value 0x262914f7b473341a
sw x3, 0(x2) # store 0x262914f7b473341a in memory
flw f12, 0(x2) # load 0x262914f7b473341a from memory into f12
fmsub.s f0, f6, f7, f12 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x2c2bc0b7be7b753f # load x3 with value 0x2c2bc0b7be7b753f
sw x3, 0(x2) # store 0x2c2bc0b7be7b753f in memory
flw f8, 0(x2) # load 0x2c2bc0b7be7b753f from memory into f8
la x2, scratch
li x3, 0x2f62e345c29bf098 # load x3 with value 0x2f62e345c29bf098
sw x3, 0(x2) # store 0x2f62e345c29bf098 in memory
flw f19, 0(x2) # load 0x2f62e345c29bf098 from memory into f19
la x2, scratch
li x3, 0x2933d7eedde28fb7 # load x3 with value 0x2933d7eedde28fb7
sw x3, 0(x2) # store 0x2933d7eedde28fb7 in memory
flw f12, 0(x2) # load 0x2933d7eedde28fb7 from memory into f12
fmsub.s f1, f8, f19, f12 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x6f6a96029608880d # load x3 with value 0x6f6a96029608880d
sw x3, 0(x2) # store 0x6f6a96029608880d in memory
flw f29, 0(x2) # load 0x6f6a96029608880d from memory into f29
la x2, scratch
li x3, 0x567e4356b8d28422 # load x3 with value 0x567e4356b8d28422
sw x3, 0(x2) # store 0x567e4356b8d28422 in memory
flw f21, 0(x2) # load 0x567e4356b8d28422 from memory into f21
la x2, scratch
li x3, 0x7ca22d00db020dc0 # load x3 with value 0x7ca22d00db020dc0
sw x3, 0(x2) # store 0x7ca22d00db020dc0 in memory
flw f27, 0(x2) # load 0x7ca22d00db020dc0 from memory into f27
fmsub.s f2, f29, f21, f27 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0xd09d2ecaf255eb6c # load x3 with value 0xd09d2ecaf255eb6c
sw x3, 0(x2) # store 0xd09d2ecaf255eb6c in memory
flw f21, 0(x2) # load 0xd09d2ecaf255eb6c from memory into f21
la x2, scratch
li x3, 0x73edc8cee63b44db # load x3 with value 0x73edc8cee63b44db
sw x3, 0(x2) # store 0x73edc8cee63b44db in memory
flw f9, 0(x2) # load 0x73edc8cee63b44db from memory into f9
la x2, scratch
li x3, 0xa9e3851f00e26962 # load x3 with value 0xa9e3851f00e26962
sw x3, 0(x2) # store 0xa9e3851f00e26962 in memory
flw f17, 0(x2) # load 0xa9e3851f00e26962 from memory into f17
fmsub.s f3, f21, f9, f17 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x25e54196073a82a7 # load x3 with value 0x25e54196073a82a7
sw x3, 0(x2) # store 0x25e54196073a82a7 in memory
flw f22, 0(x2) # load 0x25e54196073a82a7 from memory into f22
la x2, scratch
li x3, 0xbd6936d06781343a # load x3 with value 0xbd6936d06781343a
sw x3, 0(x2) # store 0xbd6936d06781343a in memory
flw f8, 0(x2) # load 0xbd6936d06781343a from memory into f8
la x2, scratch
li x3, 0xf16cfa93713d541f # load x3 with value 0xf16cfa93713d541f
sw x3, 0(x2) # store 0xf16cfa93713d541f in memory
flw f2, 0(x2) # load 0xf16cfa93713d541f from memory into f2
fmsub.s f4, f22, f8, f2 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbc3fdb18590736a6 # load x3 with value 0xbc3fdb18590736a6
sw x3, 0(x2) # store 0xbc3fdb18590736a6 in memory
flw f6, 0(x2) # load 0xbc3fdb18590736a6 from memory into f6
la x2, scratch
li x3, 0x6c6ba0a75fe83353 # load x3 with value 0x6c6ba0a75fe83353
sw x3, 0(x2) # store 0x6c6ba0a75fe83353 in memory
flw f25, 0(x2) # load 0x6c6ba0a75fe83353 from memory into f25
la x2, scratch
li x3, 0x2944b2acaaa4eb30 # load x3 with value 0x2944b2acaaa4eb30
sw x3, 0(x2) # store 0x2944b2acaaa4eb30 in memory
flw f13, 0(x2) # load 0x2944b2acaaa4eb30 from memory into f13
fmsub.s f5, f6, f25, f13 # perform operation

# Testcase cp_fd (Test destination fd = x6)
la x2, scratch
li x3, 0xc92246d83a7a38d # load x3 with value 0xc92246d83a7a38d
sw x3, 0(x2) # store 0xc92246d83a7a38d in memory
flw f23, 0(x2) # load 0xc92246d83a7a38d from memory into f23
la x2, scratch
li x3, 0xcabb4584f3c21d24 # load x3 with value 0xcabb4584f3c21d24
sw x3, 0(x2) # store 0xcabb4584f3c21d24 in memory
flw f6, 0(x2) # load 0xcabb4584f3c21d24 from memory into f6
la x2, scratch
li x3, 0x71543e82c235f9c1 # load x3 with value 0x71543e82c235f9c1
sw x3, 0(x2) # store 0x71543e82c235f9c1 in memory
flw f13, 0(x2) # load 0x71543e82c235f9c1 from memory into f13
fmsub.s f6, f23, f6, f13 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3591e5236d0d3da3 # load x3 with value 0x3591e5236d0d3da3
sw x3, 0(x2) # store 0x3591e5236d0d3da3 in memory
flw f8, 0(x2) # load 0x3591e5236d0d3da3 from memory into f8
la x2, scratch
li x3, 0x75ffa7caa13fce32 # load x3 with value 0x75ffa7caa13fce32
sw x3, 0(x2) # store 0x75ffa7caa13fce32 in memory
flw f9, 0(x2) # load 0x75ffa7caa13fce32 from memory into f9
la x2, scratch
li x3, 0x4d9ffb176ffe33ce # load x3 with value 0x4d9ffb176ffe33ce
sw x3, 0(x2) # store 0x4d9ffb176ffe33ce in memory
flw f11, 0(x2) # load 0x4d9ffb176ffe33ce from memory into f11
fmsub.s f7, f8, f9, f11 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0xf54c0261438a09d2 # load x3 with value 0xf54c0261438a09d2
sw x3, 0(x2) # store 0xf54c0261438a09d2 in memory
flw f19, 0(x2) # load 0xf54c0261438a09d2 from memory into f19
la x2, scratch
li x3, 0xd1bb01e922718e52 # load x3 with value 0xd1bb01e922718e52
sw x3, 0(x2) # store 0xd1bb01e922718e52 in memory
flw f27, 0(x2) # load 0xd1bb01e922718e52 from memory into f27
la x2, scratch
li x3, 0x8015c1c9b9a9f642 # load x3 with value 0x8015c1c9b9a9f642
sw x3, 0(x2) # store 0x8015c1c9b9a9f642 in memory
flw f29, 0(x2) # load 0x8015c1c9b9a9f642 from memory into f29
fmsub.s f8, f19, f27, f29 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0xb2c597a0d036de81 # load x3 with value 0xb2c597a0d036de81
sw x3, 0(x2) # store 0xb2c597a0d036de81 in memory
flw f25, 0(x2) # load 0xb2c597a0d036de81 from memory into f25
la x2, scratch
li x3, 0x3888cf83aa426f8b # load x3 with value 0x3888cf83aa426f8b
sw x3, 0(x2) # store 0x3888cf83aa426f8b in memory
flw f9, 0(x2) # load 0x3888cf83aa426f8b from memory into f9
la x2, scratch
li x3, 0xbe1b5404db7b38d3 # load x3 with value 0xbe1b5404db7b38d3
sw x3, 0(x2) # store 0xbe1b5404db7b38d3 in memory
flw f21, 0(x2) # load 0xbe1b5404db7b38d3 from memory into f21
fmsub.s f9, f25, f9, f21 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0xa99513bdc6820055 # load x3 with value 0xa99513bdc6820055
sw x3, 0(x2) # store 0xa99513bdc6820055 in memory
flw f15, 0(x2) # load 0xa99513bdc6820055 from memory into f15
la x2, scratch
li x3, 0x2c5da9621012fd26 # load x3 with value 0x2c5da9621012fd26
sw x3, 0(x2) # store 0x2c5da9621012fd26 in memory
flw f9, 0(x2) # load 0x2c5da9621012fd26 from memory into f9
la x2, scratch
li x3, 0x4e6dcd49274132fc # load x3 with value 0x4e6dcd49274132fc
sw x3, 0(x2) # store 0x4e6dcd49274132fc in memory
flw f28, 0(x2) # load 0x4e6dcd49274132fc from memory into f28
fmsub.s f10, f15, f9, f28 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xde05faa5928d74f1 # load x3 with value 0xde05faa5928d74f1
sw x3, 0(x2) # store 0xde05faa5928d74f1 in memory
flw f5, 0(x2) # load 0xde05faa5928d74f1 from memory into f5
la x2, scratch
li x3, 0x1b26f1d92b9c42e5 # load x3 with value 0x1b26f1d92b9c42e5
sw x3, 0(x2) # store 0x1b26f1d92b9c42e5 in memory
flw f19, 0(x2) # load 0x1b26f1d92b9c42e5 from memory into f19
la x2, scratch
li x3, 0x80559cb6d488bf49 # load x3 with value 0x80559cb6d488bf49
sw x3, 0(x2) # store 0x80559cb6d488bf49 in memory
flw f2, 0(x2) # load 0x80559cb6d488bf49 from memory into f2
fmsub.s f11, f5, f19, f2 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x9591246c8d799a7a # load x3 with value 0x9591246c8d799a7a
sw x3, 0(x2) # store 0x9591246c8d799a7a in memory
flw f22, 0(x2) # load 0x9591246c8d799a7a from memory into f22
la x2, scratch
li x3, 0x3cc6d9d58076f037 # load x3 with value 0x3cc6d9d58076f037
sw x3, 0(x2) # store 0x3cc6d9d58076f037 in memory
flw f10, 0(x2) # load 0x3cc6d9d58076f037 from memory into f10
la x2, scratch
li x3, 0xa221ca9c3a937f4c # load x3 with value 0xa221ca9c3a937f4c
sw x3, 0(x2) # store 0xa221ca9c3a937f4c in memory
flw f21, 0(x2) # load 0xa221ca9c3a937f4c from memory into f21
fmsub.s f12, f22, f10, f21 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xf8961105e3807ac0 # load x3 with value 0xf8961105e3807ac0
sw x3, 0(x2) # store 0xf8961105e3807ac0 in memory
flw f6, 0(x2) # load 0xf8961105e3807ac0 from memory into f6
la x2, scratch
li x3, 0x6ecd6b08a6bcc60f # load x3 with value 0x6ecd6b08a6bcc60f
sw x3, 0(x2) # store 0x6ecd6b08a6bcc60f in memory
flw f17, 0(x2) # load 0x6ecd6b08a6bcc60f from memory into f17
la x2, scratch
li x3, 0x32564dbb8c814411 # load x3 with value 0x32564dbb8c814411
sw x3, 0(x2) # store 0x32564dbb8c814411 in memory
flw f30, 0(x2) # load 0x32564dbb8c814411 from memory into f30
fmsub.s f13, f6, f17, f30 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x595ecf7d759bdb45 # load x3 with value 0x595ecf7d759bdb45
sw x3, 0(x2) # store 0x595ecf7d759bdb45 in memory
flw f2, 0(x2) # load 0x595ecf7d759bdb45 from memory into f2
la x2, scratch
li x3, 0x6b451533887976c # load x3 with value 0x6b451533887976c
sw x3, 0(x2) # store 0x6b451533887976c in memory
flw f23, 0(x2) # load 0x6b451533887976c from memory into f23
la x2, scratch
li x3, 0x211c759703f2cc4a # load x3 with value 0x211c759703f2cc4a
sw x3, 0(x2) # store 0x211c759703f2cc4a in memory
flw f11, 0(x2) # load 0x211c759703f2cc4a from memory into f11
fmsub.s f14, f2, f23, f11 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xb295d331ec14d98 # load x3 with value 0xb295d331ec14d98
sw x3, 0(x2) # store 0xb295d331ec14d98 in memory
flw f12, 0(x2) # load 0xb295d331ec14d98 from memory into f12
la x2, scratch
li x3, 0x43cdf6f16cdf17a9 # load x3 with value 0x43cdf6f16cdf17a9
sw x3, 0(x2) # store 0x43cdf6f16cdf17a9 in memory
flw f17, 0(x2) # load 0x43cdf6f16cdf17a9 from memory into f17
la x2, scratch
li x3, 0xac281f919040e5d6 # load x3 with value 0xac281f919040e5d6
sw x3, 0(x2) # store 0xac281f919040e5d6 in memory
flw f31, 0(x2) # load 0xac281f919040e5d6 from memory into f31
fmsub.s f15, f12, f17, f31 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0xbcad502d95712b78 # load x3 with value 0xbcad502d95712b78
sw x3, 0(x2) # store 0xbcad502d95712b78 in memory
flw f16, 0(x2) # load 0xbcad502d95712b78 from memory into f16
la x2, scratch
li x3, 0xefbcb36f0e05f7f8 # load x3 with value 0xefbcb36f0e05f7f8
sw x3, 0(x2) # store 0xefbcb36f0e05f7f8 in memory
flw f20, 0(x2) # load 0xefbcb36f0e05f7f8 from memory into f20
la x2, scratch
li x3, 0xb2c2dd98958d2143 # load x3 with value 0xb2c2dd98958d2143
sw x3, 0(x2) # store 0xb2c2dd98958d2143 in memory
flw f8, 0(x2) # load 0xb2c2dd98958d2143 from memory into f8
fmsub.s f16, f16, f20, f8 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x2646c5e5063698 # load x3 with value 0x2646c5e5063698
sw x3, 0(x2) # store 0x2646c5e5063698 in memory
flw f23, 0(x2) # load 0x2646c5e5063698 from memory into f23
la x2, scratch
li x3, 0x16f89afe7241672a # load x3 with value 0x16f89afe7241672a
sw x3, 0(x2) # store 0x16f89afe7241672a in memory
flw f28, 0(x2) # load 0x16f89afe7241672a from memory into f28
la x2, scratch
li x3, 0xf9b29c7b2fd4cac3 # load x3 with value 0xf9b29c7b2fd4cac3
sw x3, 0(x2) # store 0xf9b29c7b2fd4cac3 in memory
flw f8, 0(x2) # load 0xf9b29c7b2fd4cac3 from memory into f8
fmsub.s f17, f23, f28, f8 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0xcfae218fa7ba727b # load x3 with value 0xcfae218fa7ba727b
sw x3, 0(x2) # store 0xcfae218fa7ba727b in memory
flw f13, 0(x2) # load 0xcfae218fa7ba727b from memory into f13
la x2, scratch
li x3, 0xabb5b47185cc0a4f # load x3 with value 0xabb5b47185cc0a4f
sw x3, 0(x2) # store 0xabb5b47185cc0a4f in memory
flw f30, 0(x2) # load 0xabb5b47185cc0a4f from memory into f30
la x2, scratch
li x3, 0x8a49ea4d7d0113f6 # load x3 with value 0x8a49ea4d7d0113f6
sw x3, 0(x2) # store 0x8a49ea4d7d0113f6 in memory
flw f5, 0(x2) # load 0x8a49ea4d7d0113f6 from memory into f5
fmsub.s f18, f13, f30, f5 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0xdd895d9f5f378b9d # load x3 with value 0xdd895d9f5f378b9d
sw x3, 0(x2) # store 0xdd895d9f5f378b9d in memory
flw f3, 0(x2) # load 0xdd895d9f5f378b9d from memory into f3
la x2, scratch
li x3, 0x73a54cc08543ce30 # load x3 with value 0x73a54cc08543ce30
sw x3, 0(x2) # store 0x73a54cc08543ce30 in memory
flw f20, 0(x2) # load 0x73a54cc08543ce30 from memory into f20
la x2, scratch
li x3, 0x2e390faef3432ada # load x3 with value 0x2e390faef3432ada
sw x3, 0(x2) # store 0x2e390faef3432ada in memory
flw f18, 0(x2) # load 0x2e390faef3432ada from memory into f18
fmsub.s f19, f3, f20, f18 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x41935e4e7da8aafa # load x3 with value 0x41935e4e7da8aafa
sw x3, 0(x2) # store 0x41935e4e7da8aafa in memory
flw f18, 0(x2) # load 0x41935e4e7da8aafa from memory into f18
la x2, scratch
li x3, 0x99939009693d62d7 # load x3 with value 0x99939009693d62d7
sw x3, 0(x2) # store 0x99939009693d62d7 in memory
flw f23, 0(x2) # load 0x99939009693d62d7 from memory into f23
la x2, scratch
li x3, 0xfb8a04f278c2cdf # load x3 with value 0xfb8a04f278c2cdf
sw x3, 0(x2) # store 0xfb8a04f278c2cdf in memory
flw f17, 0(x2) # load 0xfb8a04f278c2cdf from memory into f17
fmsub.s f20, f18, f23, f17 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x6a1c370c300f4aa4 # load x3 with value 0x6a1c370c300f4aa4
sw x3, 0(x2) # store 0x6a1c370c300f4aa4 in memory
flw f5, 0(x2) # load 0x6a1c370c300f4aa4 from memory into f5
la x2, scratch
li x3, 0xb87bac1a05e30071 # load x3 with value 0xb87bac1a05e30071
sw x3, 0(x2) # store 0xb87bac1a05e30071 in memory
flw f2, 0(x2) # load 0xb87bac1a05e30071 from memory into f2
la x2, scratch
li x3, 0x4cc6f47b791c6f81 # load x3 with value 0x4cc6f47b791c6f81
sw x3, 0(x2) # store 0x4cc6f47b791c6f81 in memory
flw f19, 0(x2) # load 0x4cc6f47b791c6f81 from memory into f19
fmsub.s f21, f5, f2, f19 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x2d8553aad45eab4 # load x3 with value 0x2d8553aad45eab4
sw x3, 0(x2) # store 0x2d8553aad45eab4 in memory
flw f1, 0(x2) # load 0x2d8553aad45eab4 from memory into f1
la x2, scratch
li x3, 0xabf57e4dcd1a42e4 # load x3 with value 0xabf57e4dcd1a42e4
sw x3, 0(x2) # store 0xabf57e4dcd1a42e4 in memory
flw f20, 0(x2) # load 0xabf57e4dcd1a42e4 from memory into f20
la x2, scratch
li x3, 0x8ce01ad5805c16d9 # load x3 with value 0x8ce01ad5805c16d9
sw x3, 0(x2) # store 0x8ce01ad5805c16d9 in memory
flw f9, 0(x2) # load 0x8ce01ad5805c16d9 from memory into f9
fmsub.s f22, f1, f20, f9 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x13518969b80052c2 # load x3 with value 0x13518969b80052c2
sw x3, 0(x2) # store 0x13518969b80052c2 in memory
flw f25, 0(x2) # load 0x13518969b80052c2 from memory into f25
la x2, scratch
li x3, 0xaf3d46e9766b08ae # load x3 with value 0xaf3d46e9766b08ae
sw x3, 0(x2) # store 0xaf3d46e9766b08ae in memory
flw f31, 0(x2) # load 0xaf3d46e9766b08ae from memory into f31
la x2, scratch
li x3, 0xd90a42955a0094ce # load x3 with value 0xd90a42955a0094ce
sw x3, 0(x2) # store 0xd90a42955a0094ce in memory
flw f19, 0(x2) # load 0xd90a42955a0094ce from memory into f19
fmsub.s f23, f25, f31, f19 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xb7fb7c1d80052c84 # load x3 with value 0xb7fb7c1d80052c84
sw x3, 0(x2) # store 0xb7fb7c1d80052c84 in memory
flw f3, 0(x2) # load 0xb7fb7c1d80052c84 from memory into f3
la x2, scratch
li x3, 0xc49f8c3ebee07a08 # load x3 with value 0xc49f8c3ebee07a08
sw x3, 0(x2) # store 0xc49f8c3ebee07a08 in memory
flw f21, 0(x2) # load 0xc49f8c3ebee07a08 from memory into f21
la x2, scratch
li x3, 0xee39d5ed9582bf11 # load x3 with value 0xee39d5ed9582bf11
sw x3, 0(x2) # store 0xee39d5ed9582bf11 in memory
flw f15, 0(x2) # load 0xee39d5ed9582bf11 from memory into f15
fmsub.s f24, f3, f21, f15 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x4de9b8083de07f09 # load x3 with value 0x4de9b8083de07f09
sw x3, 0(x2) # store 0x4de9b8083de07f09 in memory
flw f27, 0(x2) # load 0x4de9b8083de07f09 from memory into f27
la x2, scratch
li x3, 0x9d7329bf0eab9f9e # load x3 with value 0x9d7329bf0eab9f9e
sw x3, 0(x2) # store 0x9d7329bf0eab9f9e in memory
flw f24, 0(x2) # load 0x9d7329bf0eab9f9e from memory into f24
la x2, scratch
li x3, 0x5c8495fc650fe8bc # load x3 with value 0x5c8495fc650fe8bc
sw x3, 0(x2) # store 0x5c8495fc650fe8bc in memory
flw f30, 0(x2) # load 0x5c8495fc650fe8bc from memory into f30
fmsub.s f25, f27, f24, f30 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0xe9487a12423a01a1 # load x3 with value 0xe9487a12423a01a1
sw x3, 0(x2) # store 0xe9487a12423a01a1 in memory
flw f20, 0(x2) # load 0xe9487a12423a01a1 from memory into f20
la x2, scratch
li x3, 0x9b92702de2f68ee0 # load x3 with value 0x9b92702de2f68ee0
sw x3, 0(x2) # store 0x9b92702de2f68ee0 in memory
flw f29, 0(x2) # load 0x9b92702de2f68ee0 from memory into f29
la x2, scratch
li x3, 0xde5ca190489b2944 # load x3 with value 0xde5ca190489b2944
sw x3, 0(x2) # store 0xde5ca190489b2944 in memory
flw f22, 0(x2) # load 0xde5ca190489b2944 from memory into f22
fmsub.s f26, f20, f29, f22 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x9c1d19ad7e9da2f4 # load x3 with value 0x9c1d19ad7e9da2f4
sw x3, 0(x2) # store 0x9c1d19ad7e9da2f4 in memory
flw f3, 0(x2) # load 0x9c1d19ad7e9da2f4 from memory into f3
la x2, scratch
li x3, 0x1e42394ac37ffd83 # load x3 with value 0x1e42394ac37ffd83
sw x3, 0(x2) # store 0x1e42394ac37ffd83 in memory
flw f10, 0(x2) # load 0x1e42394ac37ffd83 from memory into f10
la x2, scratch
li x3, 0x5ee7e682ce14de91 # load x3 with value 0x5ee7e682ce14de91
sw x3, 0(x2) # store 0x5ee7e682ce14de91 in memory
flw f13, 0(x2) # load 0x5ee7e682ce14de91 from memory into f13
fmsub.s f27, f3, f10, f13 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x14fdae7487d8263 # load x3 with value 0x14fdae7487d8263
sw x3, 0(x2) # store 0x14fdae7487d8263 in memory
flw f9, 0(x2) # load 0x14fdae7487d8263 from memory into f9
la x2, scratch
li x3, 0x4471c5ed437b2c40 # load x3 with value 0x4471c5ed437b2c40
sw x3, 0(x2) # store 0x4471c5ed437b2c40 in memory
flw f31, 0(x2) # load 0x4471c5ed437b2c40 from memory into f31
la x2, scratch
li x3, 0x8c8d5f1a19f1468 # load x3 with value 0x8c8d5f1a19f1468
sw x3, 0(x2) # store 0x8c8d5f1a19f1468 in memory
flw f15, 0(x2) # load 0x8c8d5f1a19f1468 from memory into f15
fmsub.s f28, f9, f31, f15 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xc9075b817577830 # load x3 with value 0xc9075b817577830
sw x3, 0(x2) # store 0xc9075b817577830 in memory
flw f31, 0(x2) # load 0xc9075b817577830 from memory into f31
la x2, scratch
li x3, 0x7436151607b7c60e # load x3 with value 0x7436151607b7c60e
sw x3, 0(x2) # store 0x7436151607b7c60e in memory
flw f11, 0(x2) # load 0x7436151607b7c60e from memory into f11
la x2, scratch
li x3, 0x7f3e2de908b2842c # load x3 with value 0x7f3e2de908b2842c
sw x3, 0(x2) # store 0x7f3e2de908b2842c in memory
flw f30, 0(x2) # load 0x7f3e2de908b2842c from memory into f30
fmsub.s f29, f31, f11, f30 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0xa7508c5d88a644ed # load x3 with value 0xa7508c5d88a644ed
sw x3, 0(x2) # store 0xa7508c5d88a644ed in memory
flw f17, 0(x2) # load 0xa7508c5d88a644ed from memory into f17
la x2, scratch
li x3, 0x3a38271653553067 # load x3 with value 0x3a38271653553067
sw x3, 0(x2) # store 0x3a38271653553067 in memory
flw f22, 0(x2) # load 0x3a38271653553067 from memory into f22
la x2, scratch
li x3, 0xf31c0cdc2d371260 # load x3 with value 0xf31c0cdc2d371260
sw x3, 0(x2) # store 0xf31c0cdc2d371260 in memory
flw f23, 0(x2) # load 0xf31c0cdc2d371260 from memory into f23
fmsub.s f30, f17, f22, f23 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0xd326df5064add6e7 # load x3 with value 0xd326df5064add6e7
sw x3, 0(x2) # store 0xd326df5064add6e7 in memory
flw f25, 0(x2) # load 0xd326df5064add6e7 from memory into f25
la x2, scratch
li x3, 0xb14b4c98321b763b # load x3 with value 0xb14b4c98321b763b
sw x3, 0(x2) # store 0xb14b4c98321b763b in memory
flw f15, 0(x2) # load 0xb14b4c98321b763b from memory into f15
la x2, scratch
li x3, 0xfc747300744bf72e # load x3 with value 0xfc747300744bf72e
sw x3, 0(x2) # store 0xfc747300744bf72e in memory
flw f28, 0(x2) # load 0xfc747300744bf72e from memory into f28
fmsub.s f31, f25, f15, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x58990237e67975df # load x3 with value 0x58990237e67975df
sw x3, 0(x2) # store 0x58990237e67975df in memory
flw f21, 0(x2) # load 0x58990237e67975df from memory into f21
la x2, scratch
li x3, 0x5e192a6a95a83b81 # load x3 with value 0x5e192a6a95a83b81
sw x3, 0(x2) # store 0x5e192a6a95a83b81 in memory
flw f9, 0(x2) # load 0x5e192a6a95a83b81 from memory into f9
fmsub.s f14, f6, f21, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xcb700fe3ad17205f # load x3 with value 0xcb700fe3ad17205f
sw x3, 0(x2) # store 0xcb700fe3ad17205f in memory
flw f25, 0(x2) # load 0xcb700fe3ad17205f from memory into f25
la x2, scratch
li x3, 0xd2fa7622a7822e8c # load x3 with value 0xd2fa7622a7822e8c
sw x3, 0(x2) # store 0xd2fa7622a7822e8c in memory
flw f29, 0(x2) # load 0xd2fa7622a7822e8c from memory into f29
fmsub.s f3, f11, f25, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xea2762c2fd563430 # load x3 with value 0xea2762c2fd563430
sw x3, 0(x2) # store 0xea2762c2fd563430 in memory
flw f25, 0(x2) # load 0xea2762c2fd563430 from memory into f25
la x2, scratch
li x3, 0xf258831048f25aef # load x3 with value 0xf258831048f25aef
sw x3, 0(x2) # store 0xf258831048f25aef in memory
flw f21, 0(x2) # load 0xf258831048f25aef from memory into f21
fmsub.s f24, f6, f25, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x55e8b4e0766cb43f # load x3 with value 0x55e8b4e0766cb43f
sw x3, 0(x2) # store 0x55e8b4e0766cb43f in memory
flw f14, 0(x2) # load 0x55e8b4e0766cb43f from memory into f14
la x2, scratch
li x3, 0xd05f2ed59dca927f # load x3 with value 0xd05f2ed59dca927f
sw x3, 0(x2) # store 0xd05f2ed59dca927f in memory
flw f21, 0(x2) # load 0xd05f2ed59dca927f from memory into f21
fmsub.s f30, f17, f14, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0xe964fc1f99cac90f # load x3 with value 0xe964fc1f99cac90f
sw x3, 0(x2) # store 0xe964fc1f99cac90f in memory
flw f23, 0(x2) # load 0xe964fc1f99cac90f from memory into f23
la x2, scratch
li x3, 0x9e6ccfd28bbfae2c # load x3 with value 0x9e6ccfd28bbfae2c
sw x3, 0(x2) # store 0x9e6ccfd28bbfae2c in memory
flw f27, 0(x2) # load 0x9e6ccfd28bbfae2c from memory into f27
fmsub.s f8, f10, f23, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xa0cbd785fb4dae5c # load x3 with value 0xa0cbd785fb4dae5c
sw x3, 0(x2) # store 0xa0cbd785fb4dae5c in memory
flw f28, 0(x2) # load 0xa0cbd785fb4dae5c from memory into f28
la x2, scratch
li x3, 0x859356f3c7517b2 # load x3 with value 0x859356f3c7517b2
sw x3, 0(x2) # store 0x859356f3c7517b2 in memory
flw f25, 0(x2) # load 0x859356f3c7517b2 from memory into f25
fmsub.s f29, f12, f28, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x33f5fdd847f50d63 # load x3 with value 0x33f5fdd847f50d63
sw x3, 0(x2) # store 0x33f5fdd847f50d63 in memory
flw f21, 0(x2) # load 0x33f5fdd847f50d63 from memory into f21
la x2, scratch
li x3, 0x5fd0ccb9257282d6 # load x3 with value 0x5fd0ccb9257282d6
sw x3, 0(x2) # store 0x5fd0ccb9257282d6 in memory
flw f7, 0(x2) # load 0x5fd0ccb9257282d6 from memory into f7
fmsub.s f8, f6, f21, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x942bed70a5d94c17 # load x3 with value 0x942bed70a5d94c17
sw x3, 0(x2) # store 0x942bed70a5d94c17 in memory
flw f23, 0(x2) # load 0x942bed70a5d94c17 from memory into f23
la x2, scratch
li x3, 0x15b29d3c4795dcca # load x3 with value 0x15b29d3c4795dcca
sw x3, 0(x2) # store 0x15b29d3c4795dcca in memory
flw f8, 0(x2) # load 0x15b29d3c4795dcca from memory into f8
fmsub.s f11, f3, f23, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xb8138d5298fd5a2c # load x3 with value 0xb8138d5298fd5a2c
sw x3, 0(x2) # store 0xb8138d5298fd5a2c in memory
flw f22, 0(x2) # load 0xb8138d5298fd5a2c from memory into f22
la x2, scratch
li x3, 0x8a989f983f4da8 # load x3 with value 0x8a989f983f4da8
sw x3, 0(x2) # store 0x8a989f983f4da8 in memory
flw f29, 0(x2) # load 0x8a989f983f4da8 from memory into f29
fmsub.s f19, f5, f22, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xbd1a0208a3885a4b # load x3 with value 0xbd1a0208a3885a4b
sw x3, 0(x2) # store 0xbd1a0208a3885a4b in memory
flw f31, 0(x2) # load 0xbd1a0208a3885a4b from memory into f31
la x2, scratch
li x3, 0x9ad06b4f65bbb086 # load x3 with value 0x9ad06b4f65bbb086
sw x3, 0(x2) # store 0x9ad06b4f65bbb086 in memory
flw f17, 0(x2) # load 0x9ad06b4f65bbb086 from memory into f17
fmsub.s f22, f27, f31, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x5151479282bd13b7 # load x3 with value 0x5151479282bd13b7
sw x3, 0(x2) # store 0x5151479282bd13b7 in memory
flw f15, 0(x2) # load 0x5151479282bd13b7 from memory into f15
la x2, scratch
li x3, 0xddc29cd9f3d825e9 # load x3 with value 0xddc29cd9f3d825e9
sw x3, 0(x2) # store 0xddc29cd9f3d825e9 in memory
flw f24, 0(x2) # load 0xddc29cd9f3d825e9 from memory into f24
fmsub.s f29, f21, f15, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xb296a868659cbd2 # load x3 with value 0xb296a868659cbd2
sw x3, 0(x2) # store 0xb296a868659cbd2 in memory
flw f19, 0(x2) # load 0xb296a868659cbd2 from memory into f19
la x2, scratch
li x3, 0x9958b1bddb9beecb # load x3 with value 0x9958b1bddb9beecb
sw x3, 0(x2) # store 0x9958b1bddb9beecb in memory
flw f20, 0(x2) # load 0x9958b1bddb9beecb from memory into f20
fmsub.s f27, f2, f19, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x8085c30b37c27a7d # load x3 with value 0x8085c30b37c27a7d
sw x3, 0(x2) # store 0x8085c30b37c27a7d in memory
flw f23, 0(x2) # load 0x8085c30b37c27a7d from memory into f23
la x2, scratch
li x3, 0x9d6c500fe89ad52c # load x3 with value 0x9d6c500fe89ad52c
sw x3, 0(x2) # store 0x9d6c500fe89ad52c in memory
flw f3, 0(x2) # load 0x9d6c500fe89ad52c from memory into f3
fmsub.s f25, f18, f23, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x72443828243288ee # load x3 with value 0x72443828243288ee
sw x3, 0(x2) # store 0x72443828243288ee in memory
flw f12, 0(x2) # load 0x72443828243288ee from memory into f12
la x2, scratch
li x3, 0x4b74b31df9f303c3 # load x3 with value 0x4b74b31df9f303c3
sw x3, 0(x2) # store 0x4b74b31df9f303c3 in memory
flw f25, 0(x2) # load 0x4b74b31df9f303c3 from memory into f25
fmsub.s f20, f2, f12, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x78b69cf2facd5928 # load x3 with value 0x78b69cf2facd5928
sw x3, 0(x2) # store 0x78b69cf2facd5928 in memory
flw f10, 0(x2) # load 0x78b69cf2facd5928 from memory into f10
la x2, scratch
li x3, 0xe0d9d04371ca753c # load x3 with value 0xe0d9d04371ca753c
sw x3, 0(x2) # store 0xe0d9d04371ca753c in memory
flw f11, 0(x2) # load 0xe0d9d04371ca753c from memory into f11
fmsub.s f30, f1, f10, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x32510b1aa362a74c # load x3 with value 0x32510b1aa362a74c
sw x3, 0(x2) # store 0x32510b1aa362a74c in memory
flw f12, 0(x2) # load 0x32510b1aa362a74c from memory into f12
la x2, scratch
li x3, 0x9023b08cd4be3cd3 # load x3 with value 0x9023b08cd4be3cd3
sw x3, 0(x2) # store 0x9023b08cd4be3cd3 in memory
flw f7, 0(x2) # load 0x9023b08cd4be3cd3 from memory into f7
fmsub.s f22, f6, f12, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xd8994533601f47d7 # load x3 with value 0xd8994533601f47d7
sw x3, 0(x2) # store 0xd8994533601f47d7 in memory
flw f13, 0(x2) # load 0xd8994533601f47d7 from memory into f13
la x2, scratch
li x3, 0xaaa2136e982c4587 # load x3 with value 0xaaa2136e982c4587
sw x3, 0(x2) # store 0xaaa2136e982c4587 in memory
flw f27, 0(x2) # load 0xaaa2136e982c4587 from memory into f27
fmsub.s f9, f23, f13, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x54915d4aea6a0d3 # load x3 with value 0x54915d4aea6a0d3
sw x3, 0(x2) # store 0x54915d4aea6a0d3 in memory
flw f21, 0(x2) # load 0x54915d4aea6a0d3 from memory into f21
la x2, scratch
li x3, 0x1da7770c669da6a4 # load x3 with value 0x1da7770c669da6a4
sw x3, 0(x2) # store 0x1da7770c669da6a4 in memory
flw f7, 0(x2) # load 0x1da7770c669da6a4 from memory into f7
fmsub.s f10, f26, f21, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xb8f0dbde81b71633 # load x3 with value 0xb8f0dbde81b71633
sw x3, 0(x2) # store 0xb8f0dbde81b71633 in memory
flw f14, 0(x2) # load 0xb8f0dbde81b71633 from memory into f14
la x2, scratch
li x3, 0x59d4054a85066c83 # load x3 with value 0x59d4054a85066c83
sw x3, 0(x2) # store 0x59d4054a85066c83 in memory
flw f5, 0(x2) # load 0x59d4054a85066c83 from memory into f5
fmsub.s f18, f6, f14, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xea2a0a5e9a64c981 # load x3 with value 0xea2a0a5e9a64c981
sw x3, 0(x2) # store 0xea2a0a5e9a64c981 in memory
flw f19, 0(x2) # load 0xea2a0a5e9a64c981 from memory into f19
la x2, scratch
li x3, 0x6470127230eec59a # load x3 with value 0x6470127230eec59a
sw x3, 0(x2) # store 0x6470127230eec59a in memory
flw f12, 0(x2) # load 0x6470127230eec59a from memory into f12
fmsub.s f3, f17, f19, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x2a750e25e8614686 # load x3 with value 0x2a750e25e8614686
sw x3, 0(x2) # store 0x2a750e25e8614686 in memory
flw f30, 0(x2) # load 0x2a750e25e8614686 from memory into f30
la x2, scratch
li x3, 0x5dbf3cf6297f3f00 # load x3 with value 0x5dbf3cf6297f3f00
sw x3, 0(x2) # store 0x5dbf3cf6297f3f00 in memory
flw f1, 0(x2) # load 0x5dbf3cf6297f3f00 from memory into f1
fmsub.s f18, f26, f30, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0xe3095c74155550a0 # load x3 with value 0xe3095c74155550a0
sw x3, 0(x2) # store 0xe3095c74155550a0 in memory
flw f31, 0(x2) # load 0xe3095c74155550a0 from memory into f31
la x2, scratch
li x3, 0x3abcc311b7ec5c9f # load x3 with value 0x3abcc311b7ec5c9f
sw x3, 0(x2) # store 0x3abcc311b7ec5c9f in memory
flw f26, 0(x2) # load 0x3abcc311b7ec5c9f from memory into f26
fmsub.s f14, f28, f31, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x192a568a4a5987e4 # load x3 with value 0x192a568a4a5987e4
sw x3, 0(x2) # store 0x192a568a4a5987e4 in memory
flw f26, 0(x2) # load 0x192a568a4a5987e4 from memory into f26
la x2, scratch
li x3, 0x42eac004afe0f999 # load x3 with value 0x42eac004afe0f999
sw x3, 0(x2) # store 0x42eac004afe0f999 in memory
flw f2, 0(x2) # load 0x42eac004afe0f999 from memory into f2
fmsub.s f3, f27, f26, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x314b6e20a3f9d5f5 # load x3 with value 0x314b6e20a3f9d5f5
sw x3, 0(x2) # store 0x314b6e20a3f9d5f5 in memory
flw f7, 0(x2) # load 0x314b6e20a3f9d5f5 from memory into f7
la x2, scratch
li x3, 0x6c4b48910db54a1f # load x3 with value 0x6c4b48910db54a1f
sw x3, 0(x2) # store 0x6c4b48910db54a1f in memory
flw f24, 0(x2) # load 0x6c4b48910db54a1f from memory into f24
fmsub.s f22, f16, f7, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xe0d1e6830aa50261 # load x3 with value 0xe0d1e6830aa50261
sw x3, 0(x2) # store 0xe0d1e6830aa50261 in memory
flw f24, 0(x2) # load 0xe0d1e6830aa50261 from memory into f24
la x2, scratch
li x3, 0x471083d80ce1141e # load x3 with value 0x471083d80ce1141e
sw x3, 0(x2) # store 0x471083d80ce1141e in memory
flw f20, 0(x2) # load 0x471083d80ce1141e from memory into f20
fmsub.s f22, f18, f24, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xc875b329a96197b0 # load x3 with value 0xc875b329a96197b0
sw x3, 0(x2) # store 0xc875b329a96197b0 in memory
flw f18, 0(x2) # load 0xc875b329a96197b0 from memory into f18
la x2, scratch
li x3, 0x989ef10d8062f8a4 # load x3 with value 0x989ef10d8062f8a4
sw x3, 0(x2) # store 0x989ef10d8062f8a4 in memory
flw f30, 0(x2) # load 0x989ef10d8062f8a4 from memory into f30
fmsub.s f8, f16, f18, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x1b3aa7400e504000 # load x3 with value 0x1b3aa7400e504000
sw x3, 0(x2) # store 0x1b3aa7400e504000 in memory
flw f18, 0(x2) # load 0x1b3aa7400e504000 from memory into f18
la x2, scratch
li x3, 0xc6a79edd6a4f051e # load x3 with value 0xc6a79edd6a4f051e
sw x3, 0(x2) # store 0xc6a79edd6a4f051e in memory
flw f19, 0(x2) # load 0xc6a79edd6a4f051e from memory into f19
fmsub.s f22, f15, f18, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x734dbef38290fab5 # load x3 with value 0x734dbef38290fab5
sw x3, 0(x2) # store 0x734dbef38290fab5 in memory
flw f31, 0(x2) # load 0x734dbef38290fab5 from memory into f31
la x2, scratch
li x3, 0xaa43fb8f7443a82 # load x3 with value 0xaa43fb8f7443a82
sw x3, 0(x2) # store 0xaa43fb8f7443a82 in memory
flw f15, 0(x2) # load 0xaa43fb8f7443a82 from memory into f15
fmsub.s f19, f23, f31, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x898641f5549f15bd # load x3 with value 0x898641f5549f15bd
sw x3, 0(x2) # store 0x898641f5549f15bd in memory
flw f27, 0(x2) # load 0x898641f5549f15bd from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x13aa61ac4f1c67f0 # load x3 with value 0x13aa61ac4f1c67f0
sw x3, 0(x2) # store 0x13aa61ac4f1c67f0 in memory
flw f19, 0(x2) # load 0x13aa61ac4f1c67f0 from memory into f19
fmsub.s f16, f27, f10, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0x91d81f4a9599cced # load x3 with value 0x91d81f4a9599cced
sw x3, 0(x2) # store 0x91d81f4a9599cced in memory
flw f31, 0(x2) # load 0x91d81f4a9599cced from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x3ea48020ea822796 # load x3 with value 0x3ea48020ea822796
sw x3, 0(x2) # store 0x3ea48020ea822796 in memory
flw f1, 0(x2) # load 0x3ea48020ea822796 from memory into f1
fmsub.s f26, f31, f14, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0x97cb630df5eb1e03 # load x3 with value 0x97cb630df5eb1e03
sw x3, 0(x2) # store 0x97cb630df5eb1e03 in memory
flw f25, 0(x2) # load 0x97cb630df5eb1e03 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x38f136387e8ad471 # load x3 with value 0x38f136387e8ad471
sw x3, 0(x2) # store 0x38f136387e8ad471 in memory
flw f28, 0(x2) # load 0x38f136387e8ad471 from memory into f28
fmsub.s f13, f25, f10, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0x9953d06981bbf70 # load x3 with value 0x9953d06981bbf70
sw x3, 0(x2) # store 0x9953d06981bbf70 in memory
flw f24, 0(x2) # load 0x9953d06981bbf70 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x23d970a0d13606c6 # load x3 with value 0x23d970a0d13606c6
sw x3, 0(x2) # store 0x23d970a0d13606c6 in memory
flw f17, 0(x2) # load 0x23d970a0d13606c6 from memory into f17
fmsub.s f18, f24, f6, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0x135aaa221c8f2afb # load x3 with value 0x135aaa221c8f2afb
sw x3, 0(x2) # store 0x135aaa221c8f2afb in memory
flw f8, 0(x2) # load 0x135aaa221c8f2afb from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xb3cb8f81a667d936 # load x3 with value 0xb3cb8f81a667d936
sw x3, 0(x2) # store 0xb3cb8f81a667d936 in memory
flw f7, 0(x2) # load 0xb3cb8f81a667d936 from memory into f7
fmsub.s f21, f8, f31, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0xc93d2c1c66e488b4 # load x3 with value 0xc93d2c1c66e488b4
sw x3, 0(x2) # store 0xc93d2c1c66e488b4 in memory
flw f12, 0(x2) # load 0xc93d2c1c66e488b4 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x5a2da26b391ccf28 # load x3 with value 0x5a2da26b391ccf28
sw x3, 0(x2) # store 0x5a2da26b391ccf28 in memory
flw f10, 0(x2) # load 0x5a2da26b391ccf28 from memory into f10
fmsub.s f23, f12, f24, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0xe2d67d102208e9fa # load x3 with value 0xe2d67d102208e9fa
sw x3, 0(x2) # store 0xe2d67d102208e9fa in memory
flw f7, 0(x2) # load 0xe2d67d102208e9fa from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x7ce401968fa8b35c # load x3 with value 0x7ce401968fa8b35c
sw x3, 0(x2) # store 0x7ce401968fa8b35c in memory
flw f18, 0(x2) # load 0x7ce401968fa8b35c from memory into f18
fmsub.s f15, f7, f30, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0xe64a83619abef2cd # load x3 with value 0xe64a83619abef2cd
sw x3, 0(x2) # store 0xe64a83619abef2cd in memory
flw f17, 0(x2) # load 0xe64a83619abef2cd from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x59faccf3e8f56c52 # load x3 with value 0x59faccf3e8f56c52
sw x3, 0(x2) # store 0x59faccf3e8f56c52 in memory
flw f29, 0(x2) # load 0x59faccf3e8f56c52 from memory into f29
fmsub.s f26, f17, f2, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0xf1f43a8aae4d792c # load x3 with value 0xf1f43a8aae4d792c
sw x3, 0(x2) # store 0xf1f43a8aae4d792c in memory
flw f12, 0(x2) # load 0xf1f43a8aae4d792c from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x3424e8f191336951 # load x3 with value 0x3424e8f191336951
sw x3, 0(x2) # store 0x3424e8f191336951 in memory
flw f13, 0(x2) # load 0x3424e8f191336951 from memory into f13
fmsub.s f23, f12, f14, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0x3c4e7fe959cd9a4f # load x3 with value 0x3c4e7fe959cd9a4f
sw x3, 0(x2) # store 0x3c4e7fe959cd9a4f in memory
flw f10, 0(x2) # load 0x3c4e7fe959cd9a4f from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x3fd87d1389ee4767 # load x3 with value 0x3fd87d1389ee4767
sw x3, 0(x2) # store 0x3fd87d1389ee4767 in memory
flw f20, 0(x2) # load 0x3fd87d1389ee4767 from memory into f20
fmsub.s f6, f10, f30, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0xaa068f7110d64db6 # load x3 with value 0xaa068f7110d64db6
sw x3, 0(x2) # store 0xaa068f7110d64db6 in memory
flw f23, 0(x2) # load 0xaa068f7110d64db6 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x21d6799c2573f53d # load x3 with value 0x21d6799c2573f53d
sw x3, 0(x2) # store 0x21d6799c2573f53d in memory
flw f27, 0(x2) # load 0x21d6799c2573f53d from memory into f27
fmsub.s f22, f23, f9, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0x34d27fce063f0714 # load x3 with value 0x34d27fce063f0714
sw x3, 0(x2) # store 0x34d27fce063f0714 in memory
flw f18, 0(x2) # load 0x34d27fce063f0714 from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xc1be80a273ff42bd # load x3 with value 0xc1be80a273ff42bd
sw x3, 0(x2) # store 0xc1be80a273ff42bd in memory
flw f11, 0(x2) # load 0xc1be80a273ff42bd from memory into f11
fmsub.s f7, f18, f26, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0xd1b77fb8fc9543f1 # load x3 with value 0xd1b77fb8fc9543f1
sw x3, 0(x2) # store 0xd1b77fb8fc9543f1 in memory
flw f18, 0(x2) # load 0xd1b77fb8fc9543f1 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xae4c9ccf35b6505c # load x3 with value 0xae4c9ccf35b6505c
sw x3, 0(x2) # store 0xae4c9ccf35b6505c in memory
flw f14, 0(x2) # load 0xae4c9ccf35b6505c from memory into f14
fmsub.s f30, f18, f19, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0xbee4d8d90a5b1c1f # load x3 with value 0xbee4d8d90a5b1c1f
sw x3, 0(x2) # store 0xbee4d8d90a5b1c1f in memory
flw f31, 0(x2) # load 0xbee4d8d90a5b1c1f from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xabe7b4736d5c69e5 # load x3 with value 0xabe7b4736d5c69e5
sw x3, 0(x2) # store 0xabe7b4736d5c69e5 in memory
flw f11, 0(x2) # load 0xabe7b4736d5c69e5 from memory into f11
fmsub.s f5, f31, f22, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0x2ed20cc505b9d7ad # load x3 with value 0x2ed20cc505b9d7ad
sw x3, 0(x2) # store 0x2ed20cc505b9d7ad in memory
flw f9, 0(x2) # load 0x2ed20cc505b9d7ad from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xdb5e999e34631429 # load x3 with value 0xdb5e999e34631429
sw x3, 0(x2) # store 0xdb5e999e34631429 in memory
flw f20, 0(x2) # load 0xdb5e999e34631429 from memory into f20
fmsub.s f5, f9, f31, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0x1d8c2b58887326c6 # load x3 with value 0x1d8c2b58887326c6
sw x3, 0(x2) # store 0x1d8c2b58887326c6 in memory
flw f21, 0(x2) # load 0x1d8c2b58887326c6 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0xd16f55a3ca7186c # load x3 with value 0xd16f55a3ca7186c
sw x3, 0(x2) # store 0xd16f55a3ca7186c in memory
flw f25, 0(x2) # load 0xd16f55a3ca7186c from memory into f25
fmsub.s f5, f21, f10, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0xa44b89caf5000237 # load x3 with value 0xa44b89caf5000237
sw x3, 0(x2) # store 0xa44b89caf5000237 in memory
flw f11, 0(x2) # load 0xa44b89caf5000237 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x720d877ee9f631b9 # load x3 with value 0x720d877ee9f631b9
sw x3, 0(x2) # store 0x720d877ee9f631b9 in memory
flw f20, 0(x2) # load 0x720d877ee9f631b9 from memory into f20
fmsub.s f1, f11, f9, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0x74b20e490ebdbd67 # load x3 with value 0x74b20e490ebdbd67
sw x3, 0(x2) # store 0x74b20e490ebdbd67 in memory
flw f24, 0(x2) # load 0x74b20e490ebdbd67 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xc6ffc804fd20ec0c # load x3 with value 0xc6ffc804fd20ec0c
sw x3, 0(x2) # store 0xc6ffc804fd20ec0c in memory
flw f25, 0(x2) # load 0xc6ffc804fd20ec0c from memory into f25
fmsub.s f30, f24, f1, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0xdb2bc97fae41dba3 # load x3 with value 0xdb2bc97fae41dba3
sw x3, 0(x2) # store 0xdb2bc97fae41dba3 in memory
flw f7, 0(x2) # load 0xdb2bc97fae41dba3 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xb47c334e55d2d0fd # load x3 with value 0xb47c334e55d2d0fd
sw x3, 0(x2) # store 0xb47c334e55d2d0fd in memory
flw f8, 0(x2) # load 0xb47c334e55d2d0fd from memory into f8
fmsub.s f27, f7, f15, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xc8e5b84d8687089 # load x3 with value 0xc8e5b84d8687089
sw x3, 0(x2) # store 0xc8e5b84d8687089 in memory
flw f16, 0(x2) # load 0xc8e5b84d8687089 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xf21edd48426528f7 # load x3 with value 0xf21edd48426528f7
sw x3, 0(x2) # store 0xf21edd48426528f7 in memory
flw f24, 0(x2) # load 0xf21edd48426528f7 from memory into f24
fmsub.s f27, f16, f19, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0x2bb5f53aea6242e5 # load x3 with value 0x2bb5f53aea6242e5
sw x3, 0(x2) # store 0x2bb5f53aea6242e5 in memory
flw f10, 0(x2) # load 0x2bb5f53aea6242e5 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x6f6d008079d168fd # load x3 with value 0x6f6d008079d168fd
sw x3, 0(x2) # store 0x6f6d008079d168fd in memory
flw f30, 0(x2) # load 0x6f6d008079d168fd from memory into f30
fmsub.s f20, f10, f8, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0x4746706b789890c4 # load x3 with value 0x4746706b789890c4
sw x3, 0(x2) # store 0x4746706b789890c4 in memory
flw f18, 0(x2) # load 0x4746706b789890c4 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xa345781e1c125a6d # load x3 with value 0xa345781e1c125a6d
sw x3, 0(x2) # store 0xa345781e1c125a6d in memory
flw f17, 0(x2) # load 0xa345781e1c125a6d from memory into f17
fmsub.s f19, f18, f7, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0x88f18c99aee278f8 # load x3 with value 0x88f18c99aee278f8
sw x3, 0(x2) # store 0x88f18c99aee278f8 in memory
flw f28, 0(x2) # load 0x88f18c99aee278f8 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x778e71cc65e6a9f4 # load x3 with value 0x778e71cc65e6a9f4
sw x3, 0(x2) # store 0x778e71cc65e6a9f4 in memory
flw f21, 0(x2) # load 0x778e71cc65e6a9f4 from memory into f21
fmsub.s f18, f28, f13, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0x703985c44acb4231 # load x3 with value 0x703985c44acb4231
sw x3, 0(x2) # store 0x703985c44acb4231 in memory
flw f8, 0(x2) # load 0x703985c44acb4231 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x672ea26485dff6e8 # load x3 with value 0x672ea26485dff6e8
sw x3, 0(x2) # store 0x672ea26485dff6e8 in memory
flw f9, 0(x2) # load 0x672ea26485dff6e8 from memory into f9
fmsub.s f26, f8, f2, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0x98a41d26e223e0f # load x3 with value 0x98a41d26e223e0f
sw x3, 0(x2) # store 0x98a41d26e223e0f in memory
flw f15, 0(x2) # load 0x98a41d26e223e0f from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x9e03fcb98939b669 # load x3 with value 0x9e03fcb98939b669
sw x3, 0(x2) # store 0x9e03fcb98939b669 in memory
flw f10, 0(x2) # load 0x9e03fcb98939b669 from memory into f10
fmsub.s f22, f15, f28, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0xa9e141dd5242f87a # load x3 with value 0xa9e141dd5242f87a
sw x3, 0(x2) # store 0xa9e141dd5242f87a in memory
flw f15, 0(x2) # load 0xa9e141dd5242f87a from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xaf4f70462853baec # load x3 with value 0xaf4f70462853baec
sw x3, 0(x2) # store 0xaf4f70462853baec in memory
flw f5, 0(x2) # load 0xaf4f70462853baec from memory into f5
fmsub.s f8, f15, f24, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0xecfe6e1cd64d3844 # load x3 with value 0xecfe6e1cd64d3844
sw x3, 0(x2) # store 0xecfe6e1cd64d3844 in memory
flw f15, 0(x2) # load 0xecfe6e1cd64d3844 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xfa6b02555bcbef65 # load x3 with value 0xfa6b02555bcbef65
sw x3, 0(x2) # store 0xfa6b02555bcbef65 in memory
flw f10, 0(x2) # load 0xfa6b02555bcbef65 from memory into f10
fmsub.s f26, f15, f25, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0x61927628f1863173 # load x3 with value 0x61927628f1863173
sw x3, 0(x2) # store 0x61927628f1863173 in memory
flw f30, 0(x2) # load 0x61927628f1863173 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x5e4229babfcbfeeb # load x3 with value 0x5e4229babfcbfeeb
sw x3, 0(x2) # store 0x5e4229babfcbfeeb in memory
flw f12, 0(x2) # load 0x5e4229babfcbfeeb from memory into f12
fmsub.s f20, f30, f3, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0x6d8c16faf22dd6e1 # load x3 with value 0x6d8c16faf22dd6e1
sw x3, 0(x2) # store 0x6d8c16faf22dd6e1 in memory
flw f21, 0(x2) # load 0x6d8c16faf22dd6e1 from memory into f21
la x2, scratch
li x3, 0xfc158734c9ef9195 # load x3 with value 0xfc158734c9ef9195
sw x3, 0(x2) # store 0xfc158734c9ef9195 in memory
flw f6, 0(x2) # load 0xfc158734c9ef9195 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f22, f21, f6, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0xe61e029f847a3e36 # load x3 with value 0xe61e029f847a3e36
sw x3, 0(x2) # store 0xe61e029f847a3e36 in memory
flw f10, 0(x2) # load 0xe61e029f847a3e36 from memory into f10
la x2, scratch
li x3, 0x96f1d08bcd83cd0b # load x3 with value 0x96f1d08bcd83cd0b
sw x3, 0(x2) # store 0x96f1d08bcd83cd0b in memory
flw f12, 0(x2) # load 0x96f1d08bcd83cd0b from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmsub.s f1, f10, f12, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0x8f9aa766ebf77abc # load x3 with value 0x8f9aa766ebf77abc
sw x3, 0(x2) # store 0x8f9aa766ebf77abc in memory
flw f24, 0(x2) # load 0x8f9aa766ebf77abc from memory into f24
la x2, scratch
li x3, 0xeff9f32e33646f65 # load x3 with value 0xeff9f32e33646f65
sw x3, 0(x2) # store 0xeff9f32e33646f65 in memory
flw f11, 0(x2) # load 0xeff9f32e33646f65 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fmsub.s f20, f24, f11, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x4650c3507cd546c3 # load x3 with value 0x4650c3507cd546c3
sw x3, 0(x2) # store 0x4650c3507cd546c3 in memory
flw f5, 0(x2) # load 0x4650c3507cd546c3 from memory into f5
la x2, scratch
li x3, 0xaa7f7a253e722ede # load x3 with value 0xaa7f7a253e722ede
sw x3, 0(x2) # store 0xaa7f7a253e722ede in memory
flw f30, 0(x2) # load 0xaa7f7a253e722ede from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmsub.s f20, f5, f30, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0xc182dfec4cecc2c2 # load x3 with value 0xc182dfec4cecc2c2
sw x3, 0(x2) # store 0xc182dfec4cecc2c2 in memory
flw f6, 0(x2) # load 0xc182dfec4cecc2c2 from memory into f6
la x2, scratch
li x3, 0x78065bb6889925c5 # load x3 with value 0x78065bb6889925c5
sw x3, 0(x2) # store 0x78065bb6889925c5 in memory
flw f26, 0(x2) # load 0x78065bb6889925c5 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f14, f6, f26, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0x721d68c6c5bd46a8 # load x3 with value 0x721d68c6c5bd46a8
sw x3, 0(x2) # store 0x721d68c6c5bd46a8 in memory
flw f30, 0(x2) # load 0x721d68c6c5bd46a8 from memory into f30
la x2, scratch
li x3, 0x5e2780f2d6115a28 # load x3 with value 0x5e2780f2d6115a28
sw x3, 0(x2) # store 0x5e2780f2d6115a28 in memory
flw f14, 0(x2) # load 0x5e2780f2d6115a28 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fmsub.s f12, f30, f14, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0xe493863eb1fb1b65 # load x3 with value 0xe493863eb1fb1b65
sw x3, 0(x2) # store 0xe493863eb1fb1b65 in memory
flw f8, 0(x2) # load 0xe493863eb1fb1b65 from memory into f8
la x2, scratch
li x3, 0x85f0b7da7b213f84 # load x3 with value 0x85f0b7da7b213f84
sw x3, 0(x2) # store 0x85f0b7da7b213f84 in memory
flw f23, 0(x2) # load 0x85f0b7da7b213f84 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmsub.s f6, f8, f23, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0x2deeb224de89dd9a # load x3 with value 0x2deeb224de89dd9a
sw x3, 0(x2) # store 0x2deeb224de89dd9a in memory
flw f23, 0(x2) # load 0x2deeb224de89dd9a from memory into f23
la x2, scratch
li x3, 0x4f96631d8ec7f253 # load x3 with value 0x4f96631d8ec7f253
sw x3, 0(x2) # store 0x4f96631d8ec7f253 in memory
flw f7, 0(x2) # load 0x4f96631d8ec7f253 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmsub.s f24, f23, f7, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0x960a9d82d4efa8ae # load x3 with value 0x960a9d82d4efa8ae
sw x3, 0(x2) # store 0x960a9d82d4efa8ae in memory
flw f5, 0(x2) # load 0x960a9d82d4efa8ae from memory into f5
la x2, scratch
li x3, 0xf56044651f6ea7c4 # load x3 with value 0xf56044651f6ea7c4
sw x3, 0(x2) # store 0xf56044651f6ea7c4 in memory
flw f6, 0(x2) # load 0xf56044651f6ea7c4 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmsub.s f20, f5, f6, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0x19d291c5a17dd7a2 # load x3 with value 0x19d291c5a17dd7a2
sw x3, 0(x2) # store 0x19d291c5a17dd7a2 in memory
flw f27, 0(x2) # load 0x19d291c5a17dd7a2 from memory into f27
la x2, scratch
li x3, 0x81b9093e3be926a6 # load x3 with value 0x81b9093e3be926a6
sw x3, 0(x2) # store 0x81b9093e3be926a6 in memory
flw f24, 0(x2) # load 0x81b9093e3be926a6 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmsub.s f16, f27, f24, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0x6ec495d1358834ab # load x3 with value 0x6ec495d1358834ab
sw x3, 0(x2) # store 0x6ec495d1358834ab in memory
flw f18, 0(x2) # load 0x6ec495d1358834ab from memory into f18
la x2, scratch
li x3, 0xc5c3c09cf47ffca2 # load x3 with value 0xc5c3c09cf47ffca2
sw x3, 0(x2) # store 0xc5c3c09cf47ffca2 in memory
flw f30, 0(x2) # load 0xc5c3c09cf47ffca2 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmsub.s f9, f18, f30, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0xd946192423a11144 # load x3 with value 0xd946192423a11144
sw x3, 0(x2) # store 0xd946192423a11144 in memory
flw f30, 0(x2) # load 0xd946192423a11144 from memory into f30
la x2, scratch
li x3, 0x6786366646ccda6d # load x3 with value 0x6786366646ccda6d
sw x3, 0(x2) # store 0x6786366646ccda6d in memory
flw f16, 0(x2) # load 0x6786366646ccda6d from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f1, f30, f16, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0x7548ca6a8ec3d827 # load x3 with value 0x7548ca6a8ec3d827
sw x3, 0(x2) # store 0x7548ca6a8ec3d827 in memory
flw f22, 0(x2) # load 0x7548ca6a8ec3d827 from memory into f22
la x2, scratch
li x3, 0x2dd13f89295a2865 # load x3 with value 0x2dd13f89295a2865
sw x3, 0(x2) # store 0x2dd13f89295a2865 in memory
flw f14, 0(x2) # load 0x2dd13f89295a2865 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmsub.s f9, f22, f14, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0xed949e831a30b846 # load x3 with value 0xed949e831a30b846
sw x3, 0(x2) # store 0xed949e831a30b846 in memory
flw f26, 0(x2) # load 0xed949e831a30b846 from memory into f26
la x2, scratch
li x3, 0xe24eb72a61ebd0c6 # load x3 with value 0xe24eb72a61ebd0c6
sw x3, 0(x2) # store 0xe24eb72a61ebd0c6 in memory
flw f19, 0(x2) # load 0xe24eb72a61ebd0c6 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmsub.s f14, f26, f19, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0x29acbb23f555a882 # load x3 with value 0x29acbb23f555a882
sw x3, 0(x2) # store 0x29acbb23f555a882 in memory
flw f16, 0(x2) # load 0x29acbb23f555a882 from memory into f16
la x2, scratch
li x3, 0x38b53827a2ecec55 # load x3 with value 0x38b53827a2ecec55
sw x3, 0(x2) # store 0x38b53827a2ecec55 in memory
flw f26, 0(x2) # load 0x38b53827a2ecec55 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmsub.s f5, f16, f26, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0x7c9cbed0c351f367 # load x3 with value 0x7c9cbed0c351f367
sw x3, 0(x2) # store 0x7c9cbed0c351f367 in memory
flw f27, 0(x2) # load 0x7c9cbed0c351f367 from memory into f27
la x2, scratch
li x3, 0x6151f12e4603a7b5 # load x3 with value 0x6151f12e4603a7b5
sw x3, 0(x2) # store 0x6151f12e4603a7b5 in memory
flw f16, 0(x2) # load 0x6151f12e4603a7b5 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fmsub.s f17, f27, f16, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x5e58d1b455defcf3 # load x3 with value 0x5e58d1b455defcf3
sw x3, 0(x2) # store 0x5e58d1b455defcf3 in memory
flw f19, 0(x2) # load 0x5e58d1b455defcf3 from memory into f19
la x2, scratch
li x3, 0xb0032c8aa08af8eb # load x3 with value 0xb0032c8aa08af8eb
sw x3, 0(x2) # store 0xb0032c8aa08af8eb in memory
flw f31, 0(x2) # load 0xb0032c8aa08af8eb from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmsub.s f16, f19, f31, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0x5b512b672f2718e5 # load x3 with value 0x5b512b672f2718e5
sw x3, 0(x2) # store 0x5b512b672f2718e5 in memory
flw f8, 0(x2) # load 0x5b512b672f2718e5 from memory into f8
la x2, scratch
li x3, 0xa85895f966d93214 # load x3 with value 0xa85895f966d93214
sw x3, 0(x2) # store 0xa85895f966d93214 in memory
flw f1, 0(x2) # load 0xa85895f966d93214 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmsub.s f19, f8, f1, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0xec7fb71be9131ab # load x3 with value 0xec7fb71be9131ab
sw x3, 0(x2) # store 0xec7fb71be9131ab in memory
flw f10, 0(x2) # load 0xec7fb71be9131ab from memory into f10
la x2, scratch
li x3, 0x687c467637ee3eb6 # load x3 with value 0x687c467637ee3eb6
sw x3, 0(x2) # store 0x687c467637ee3eb6 in memory
flw f5, 0(x2) # load 0x687c467637ee3eb6 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmsub.s f16, f10, f5, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0xdc38f465c3817f8b # load x3 with value 0xdc38f465c3817f8b
sw x3, 0(x2) # store 0xdc38f465c3817f8b in memory
flw f22, 0(x2) # load 0xdc38f465c3817f8b from memory into f22
la x2, scratch
li x3, 0x4a5d5b31e3d872d2 # load x3 with value 0x4a5d5b31e3d872d2
sw x3, 0(x2) # store 0x4a5d5b31e3d872d2 in memory
flw f6, 0(x2) # load 0x4a5d5b31e3d872d2 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmsub.s f8, f22, f6, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0xd9df895a9c9f5bd8 # load x3 with value 0xd9df895a9c9f5bd8
sw x3, 0(x2) # store 0xd9df895a9c9f5bd8 in memory
flw f12, 0(x2) # load 0xd9df895a9c9f5bd8 from memory into f12
la x2, scratch
li x3, 0xd095b25cd731baca # load x3 with value 0xd095b25cd731baca
sw x3, 0(x2) # store 0xd095b25cd731baca in memory
flw f2, 0(x2) # load 0xd095b25cd731baca from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f28, f12, f2, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0x43f62de347291264 # load x3 with value 0x43f62de347291264
sw x3, 0(x2) # store 0x43f62de347291264 in memory
flw f23, 0(x2) # load 0x43f62de347291264 from memory into f23
la x2, scratch
li x3, 0xcbeac17b498fc9e4 # load x3 with value 0xcbeac17b498fc9e4
sw x3, 0(x2) # store 0xcbeac17b498fc9e4 in memory
flw f26, 0(x2) # load 0xcbeac17b498fc9e4 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmsub.s f15, f23, f26, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0x1a61a642933ce25d # load x3 with value 0x1a61a642933ce25d
sw x3, 0(x2) # store 0x1a61a642933ce25d in memory
flw f27, 0(x2) # load 0x1a61a642933ce25d from memory into f27
la x2, scratch
li x3, 0xadfa20992cd55bed # load x3 with value 0xadfa20992cd55bed
sw x3, 0(x2) # store 0xadfa20992cd55bed in memory
flw f12, 0(x2) # load 0xadfa20992cd55bed from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fmsub.s f11, f27, f12, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0xcff928dd5f81ba07 # load x3 with value 0xcff928dd5f81ba07
sw x3, 0(x2) # store 0xcff928dd5f81ba07 in memory
flw f28, 0(x2) # load 0xcff928dd5f81ba07 from memory into f28
la x2, scratch
li x3, 0x228b27124ef9214a # load x3 with value 0x228b27124ef9214a
sw x3, 0(x2) # store 0x228b27124ef9214a in memory
flw f15, 0(x2) # load 0x228b27124ef9214a from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmsub.s f10, f28, f15, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0xd3530d4597141937 # load x3 with value 0xd3530d4597141937
sw x3, 0(x2) # store 0xd3530d4597141937 in memory
flw f12, 0(x2) # load 0xd3530d4597141937 from memory into f12
la x2, scratch
li x3, 0xea0ed8a56f313a1b # load x3 with value 0xea0ed8a56f313a1b
sw x3, 0(x2) # store 0xea0ed8a56f313a1b in memory
flw f25, 0(x2) # load 0xea0ed8a56f313a1b from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fmsub.s f16, f12, f25, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0xd06acdf147acb086 # load x3 with value 0xd06acdf147acb086
sw x3, 0(x2) # store 0xd06acdf147acb086 in memory
flw f29, 0(x2) # load 0xd06acdf147acb086 from memory into f29
la x2, scratch
li x3, 0x63b1635b833102e1 # load x3 with value 0x63b1635b833102e1
sw x3, 0(x2) # store 0x63b1635b833102e1 in memory
flw f1, 0(x2) # load 0x63b1635b833102e1 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
fmsub.s f16, f29, f1, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0x4904d98414d380dd # load x3 with value 0x4904d98414d380dd
sw x3, 0(x2) # store 0x4904d98414d380dd in memory
flw f30, 0(x2) # load 0x4904d98414d380dd from memory into f30
la x2, scratch
li x3, 0xae8e6c681d84fa6e # load x3 with value 0xae8e6c681d84fa6e
sw x3, 0(x2) # store 0xae8e6c681d84fa6e in memory
flw f28, 0(x2) # load 0xae8e6c681d84fa6e from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fmsub.s f3, f30, f28, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x68ad94a248091ed2 # load x3 with value 0x68ad94a248091ed2
sw x3, 0(x2) # store 0x68ad94a248091ed2 in memory
flw f28, 0(x2) # load 0x68ad94a248091ed2 from memory into f28
la x2, scratch
li x3, 0x573584dee1b8c972 # load x3 with value 0x573584dee1b8c972
sw x3, 0(x2) # store 0x573584dee1b8c972 in memory
flw f23, 0(x2) # load 0x573584dee1b8c972 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmsub.s f18, f28, f23, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x8c703d3485b34835 # load x3 with value 0x8c703d3485b34835
sw x3, 0(x2) # store 0x8c703d3485b34835 in memory
flw f0, 0(x2) # load 0x8c703d3485b34835 from memory into f0
la x2, scratch
li x3, 0xc03e2852b2f83a43 # load x3 with value 0xc03e2852b2f83a43
sw x3, 0(x2) # store 0xc03e2852b2f83a43 in memory
flw f24, 0(x2) # load 0xc03e2852b2f83a43 from memory into f24
la x2, scratch
li x3, 0xf43559f6190fa7c4 # load x3 with value 0xf43559f6190fa7c4
sw x3, 0(x2) # store 0xf43559f6190fa7c4 in memory
flw f17, 0(x2) # load 0xf43559f6190fa7c4 from memory into f17
fmsub.s f0, f0, f24, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x77e9f68781a60f03 # load x3 with value 0x77e9f68781a60f03
sw x3, 0(x2) # store 0x77e9f68781a60f03 in memory
flw f1, 0(x2) # load 0x77e9f68781a60f03 from memory into f1
la x2, scratch
li x3, 0x87f1c6107f480203 # load x3 with value 0x87f1c6107f480203
sw x3, 0(x2) # store 0x87f1c6107f480203 in memory
flw f13, 0(x2) # load 0x87f1c6107f480203 from memory into f13
la x2, scratch
li x3, 0xe0cbe00111eca34b # load x3 with value 0xe0cbe00111eca34b
sw x3, 0(x2) # store 0xe0cbe00111eca34b in memory
flw f12, 0(x2) # load 0xe0cbe00111eca34b from memory into f12
fmsub.s f1, f1, f13, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0x464896dc3867b222 # load x3 with value 0x464896dc3867b222
sw x3, 0(x2) # store 0x464896dc3867b222 in memory
flw f2, 0(x2) # load 0x464896dc3867b222 from memory into f2
la x2, scratch
li x3, 0xcad5d1dadefd12ed # load x3 with value 0xcad5d1dadefd12ed
sw x3, 0(x2) # store 0xcad5d1dadefd12ed in memory
flw f26, 0(x2) # load 0xcad5d1dadefd12ed from memory into f26
la x2, scratch
li x3, 0x28fac6755fff1cbc # load x3 with value 0x28fac6755fff1cbc
sw x3, 0(x2) # store 0x28fac6755fff1cbc in memory
flw f19, 0(x2) # load 0x28fac6755fff1cbc from memory into f19
fmsub.s f2, f2, f26, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x10bee72201daf866 # load x3 with value 0x10bee72201daf866
sw x3, 0(x2) # store 0x10bee72201daf866 in memory
flw f3, 0(x2) # load 0x10bee72201daf866 from memory into f3
la x2, scratch
li x3, 0x9487cd7a02049b11 # load x3 with value 0x9487cd7a02049b11
sw x3, 0(x2) # store 0x9487cd7a02049b11 in memory
flw f5, 0(x2) # load 0x9487cd7a02049b11 from memory into f5
la x2, scratch
li x3, 0x119c2669c1c88e2 # load x3 with value 0x119c2669c1c88e2
sw x3, 0(x2) # store 0x119c2669c1c88e2 in memory
flw f2, 0(x2) # load 0x119c2669c1c88e2 from memory into f2
fmsub.s f3, f3, f5, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa398a7a743aab9c3 # load x3 with value 0xa398a7a743aab9c3
sw x3, 0(x2) # store 0xa398a7a743aab9c3 in memory
flw f4, 0(x2) # load 0xa398a7a743aab9c3 from memory into f4
la x2, scratch
li x3, 0x512446429651c282 # load x3 with value 0x512446429651c282
sw x3, 0(x2) # store 0x512446429651c282 in memory
flw f1, 0(x2) # load 0x512446429651c282 from memory into f1
la x2, scratch
li x3, 0x249252e1fac9a709 # load x3 with value 0x249252e1fac9a709
sw x3, 0(x2) # store 0x249252e1fac9a709 in memory
flw f7, 0(x2) # load 0x249252e1fac9a709 from memory into f7
fmsub.s f4, f4, f1, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2e00d17ee31b26e8 # load x3 with value 0x2e00d17ee31b26e8
sw x3, 0(x2) # store 0x2e00d17ee31b26e8 in memory
flw f5, 0(x2) # load 0x2e00d17ee31b26e8 from memory into f5
la x2, scratch
li x3, 0x29f531a0fe1afb12 # load x3 with value 0x29f531a0fe1afb12
sw x3, 0(x2) # store 0x29f531a0fe1afb12 in memory
flw f23, 0(x2) # load 0x29f531a0fe1afb12 from memory into f23
la x2, scratch
li x3, 0x42fb535320e4a500 # load x3 with value 0x42fb535320e4a500
sw x3, 0(x2) # store 0x42fb535320e4a500 in memory
flw f17, 0(x2) # load 0x42fb535320e4a500 from memory into f17
fmsub.s f5, f5, f23, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x15e7645907aaf989 # load x3 with value 0x15e7645907aaf989
sw x3, 0(x2) # store 0x15e7645907aaf989 in memory
flw f6, 0(x2) # load 0x15e7645907aaf989 from memory into f6
la x2, scratch
li x3, 0x8feec2d24acf8d5a # load x3 with value 0x8feec2d24acf8d5a
sw x3, 0(x2) # store 0x8feec2d24acf8d5a in memory
flw f18, 0(x2) # load 0x8feec2d24acf8d5a from memory into f18
la x2, scratch
li x3, 0xd68cd2e7e3ea9b03 # load x3 with value 0xd68cd2e7e3ea9b03
sw x3, 0(x2) # store 0xd68cd2e7e3ea9b03 in memory
flw f3, 0(x2) # load 0xd68cd2e7e3ea9b03 from memory into f3
fmsub.s f6, f6, f18, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xabb853608ebe622a # load x3 with value 0xabb853608ebe622a
sw x3, 0(x2) # store 0xabb853608ebe622a in memory
flw f7, 0(x2) # load 0xabb853608ebe622a from memory into f7
la x2, scratch
li x3, 0x3407d818c042a1f5 # load x3 with value 0x3407d818c042a1f5
sw x3, 0(x2) # store 0x3407d818c042a1f5 in memory
flw f31, 0(x2) # load 0x3407d818c042a1f5 from memory into f31
la x2, scratch
li x3, 0x90640f27687442d6 # load x3 with value 0x90640f27687442d6
sw x3, 0(x2) # store 0x90640f27687442d6 in memory
flw f15, 0(x2) # load 0x90640f27687442d6 from memory into f15
fmsub.s f7, f7, f31, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0xb5e2143510cd351c # load x3 with value 0xb5e2143510cd351c
sw x3, 0(x2) # store 0xb5e2143510cd351c in memory
flw f8, 0(x2) # load 0xb5e2143510cd351c from memory into f8
la x2, scratch
li x3, 0x14e99eedcca3bd9f # load x3 with value 0x14e99eedcca3bd9f
sw x3, 0(x2) # store 0x14e99eedcca3bd9f in memory
flw f16, 0(x2) # load 0x14e99eedcca3bd9f from memory into f16
la x2, scratch
li x3, 0x4504650c07bf202f # load x3 with value 0x4504650c07bf202f
sw x3, 0(x2) # store 0x4504650c07bf202f in memory
flw f19, 0(x2) # load 0x4504650c07bf202f from memory into f19
fmsub.s f8, f8, f16, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xb6af8d99200fbd18 # load x3 with value 0xb6af8d99200fbd18
sw x3, 0(x2) # store 0xb6af8d99200fbd18 in memory
flw f9, 0(x2) # load 0xb6af8d99200fbd18 from memory into f9
la x2, scratch
li x3, 0x5752fffc98b4bd34 # load x3 with value 0x5752fffc98b4bd34
sw x3, 0(x2) # store 0x5752fffc98b4bd34 in memory
flw f7, 0(x2) # load 0x5752fffc98b4bd34 from memory into f7
la x2, scratch
li x3, 0x813ea997d70dcce5 # load x3 with value 0x813ea997d70dcce5
sw x3, 0(x2) # store 0x813ea997d70dcce5 in memory
flw f21, 0(x2) # load 0x813ea997d70dcce5 from memory into f21
fmsub.s f9, f9, f7, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x937d53c2e8986f91 # load x3 with value 0x937d53c2e8986f91
sw x3, 0(x2) # store 0x937d53c2e8986f91 in memory
flw f10, 0(x2) # load 0x937d53c2e8986f91 from memory into f10
la x2, scratch
li x3, 0xcad5cd07780f1763 # load x3 with value 0xcad5cd07780f1763
sw x3, 0(x2) # store 0xcad5cd07780f1763 in memory
flw f21, 0(x2) # load 0xcad5cd07780f1763 from memory into f21
la x2, scratch
li x3, 0xede755eca04f54af # load x3 with value 0xede755eca04f54af
sw x3, 0(x2) # store 0xede755eca04f54af in memory
flw f6, 0(x2) # load 0xede755eca04f54af from memory into f6
fmsub.s f10, f10, f21, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0xf358c3cfc0a3300f # load x3 with value 0xf358c3cfc0a3300f
sw x3, 0(x2) # store 0xf358c3cfc0a3300f in memory
flw f11, 0(x2) # load 0xf358c3cfc0a3300f from memory into f11
la x2, scratch
li x3, 0xe576cea4d4a37d16 # load x3 with value 0xe576cea4d4a37d16
sw x3, 0(x2) # store 0xe576cea4d4a37d16 in memory
flw f6, 0(x2) # load 0xe576cea4d4a37d16 from memory into f6
la x2, scratch
li x3, 0x51129a4bde48ac26 # load x3 with value 0x51129a4bde48ac26
sw x3, 0(x2) # store 0x51129a4bde48ac26 in memory
flw f5, 0(x2) # load 0x51129a4bde48ac26 from memory into f5
fmsub.s f11, f11, f6, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x711ae416f9f19779 # load x3 with value 0x711ae416f9f19779
sw x3, 0(x2) # store 0x711ae416f9f19779 in memory
flw f12, 0(x2) # load 0x711ae416f9f19779 from memory into f12
la x2, scratch
li x3, 0x9ec15cb8507ab813 # load x3 with value 0x9ec15cb8507ab813
sw x3, 0(x2) # store 0x9ec15cb8507ab813 in memory
flw f5, 0(x2) # load 0x9ec15cb8507ab813 from memory into f5
la x2, scratch
li x3, 0xd18dff556b6f2caa # load x3 with value 0xd18dff556b6f2caa
sw x3, 0(x2) # store 0xd18dff556b6f2caa in memory
flw f2, 0(x2) # load 0xd18dff556b6f2caa from memory into f2
fmsub.s f12, f12, f5, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x4fdbea638b7918a9 # load x3 with value 0x4fdbea638b7918a9
sw x3, 0(x2) # store 0x4fdbea638b7918a9 in memory
flw f13, 0(x2) # load 0x4fdbea638b7918a9 from memory into f13
la x2, scratch
li x3, 0xae57a70432fa45e # load x3 with value 0xae57a70432fa45e
sw x3, 0(x2) # store 0xae57a70432fa45e in memory
flw f1, 0(x2) # load 0xae57a70432fa45e from memory into f1
la x2, scratch
li x3, 0xa0b5a8a7fe3a93bd # load x3 with value 0xa0b5a8a7fe3a93bd
sw x3, 0(x2) # store 0xa0b5a8a7fe3a93bd in memory
flw f8, 0(x2) # load 0xa0b5a8a7fe3a93bd from memory into f8
fmsub.s f13, f13, f1, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x6de9540c999cef92 # load x3 with value 0x6de9540c999cef92
sw x3, 0(x2) # store 0x6de9540c999cef92 in memory
flw f14, 0(x2) # load 0x6de9540c999cef92 from memory into f14
la x2, scratch
li x3, 0x40f68abf8a88d990 # load x3 with value 0x40f68abf8a88d990
sw x3, 0(x2) # store 0x40f68abf8a88d990 in memory
flw f22, 0(x2) # load 0x40f68abf8a88d990 from memory into f22
la x2, scratch
li x3, 0xf81e718fe63192eb # load x3 with value 0xf81e718fe63192eb
sw x3, 0(x2) # store 0xf81e718fe63192eb in memory
flw f7, 0(x2) # load 0xf81e718fe63192eb from memory into f7
fmsub.s f14, f14, f22, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0xe888c49010619415 # load x3 with value 0xe888c49010619415
sw x3, 0(x2) # store 0xe888c49010619415 in memory
flw f15, 0(x2) # load 0xe888c49010619415 from memory into f15
la x2, scratch
li x3, 0x8ad313fe37874cfa # load x3 with value 0x8ad313fe37874cfa
sw x3, 0(x2) # store 0x8ad313fe37874cfa in memory
flw f2, 0(x2) # load 0x8ad313fe37874cfa from memory into f2
la x2, scratch
li x3, 0x24647c986397161e # load x3 with value 0x24647c986397161e
sw x3, 0(x2) # store 0x24647c986397161e in memory
flw f23, 0(x2) # load 0x24647c986397161e from memory into f23
fmsub.s f15, f15, f2, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x3c505384b4451ed5 # load x3 with value 0x3c505384b4451ed5
sw x3, 0(x2) # store 0x3c505384b4451ed5 in memory
flw f16, 0(x2) # load 0x3c505384b4451ed5 from memory into f16
la x2, scratch
li x3, 0xe8a116d402342dd1 # load x3 with value 0xe8a116d402342dd1
sw x3, 0(x2) # store 0xe8a116d402342dd1 in memory
flw f25, 0(x2) # load 0xe8a116d402342dd1 from memory into f25
la x2, scratch
li x3, 0x4f1b4040a7ddcd56 # load x3 with value 0x4f1b4040a7ddcd56
sw x3, 0(x2) # store 0x4f1b4040a7ddcd56 in memory
flw f16, 0(x2) # load 0x4f1b4040a7ddcd56 from memory into f16
fmsub.s f16, f16, f25, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xef5cd7c48726b85e # load x3 with value 0xef5cd7c48726b85e
sw x3, 0(x2) # store 0xef5cd7c48726b85e in memory
flw f17, 0(x2) # load 0xef5cd7c48726b85e from memory into f17
la x2, scratch
li x3, 0x231fee6fe41c21fc # load x3 with value 0x231fee6fe41c21fc
sw x3, 0(x2) # store 0x231fee6fe41c21fc in memory
flw f8, 0(x2) # load 0x231fee6fe41c21fc from memory into f8
la x2, scratch
li x3, 0xc8204711f3e3f620 # load x3 with value 0xc8204711f3e3f620
sw x3, 0(x2) # store 0xc8204711f3e3f620 in memory
flw f10, 0(x2) # load 0xc8204711f3e3f620 from memory into f10
fmsub.s f17, f17, f8, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x9be23f122ab4fa60 # load x3 with value 0x9be23f122ab4fa60
sw x3, 0(x2) # store 0x9be23f122ab4fa60 in memory
flw f18, 0(x2) # load 0x9be23f122ab4fa60 from memory into f18
la x2, scratch
li x3, 0xd9a5150dbb7e712b # load x3 with value 0xd9a5150dbb7e712b
sw x3, 0(x2) # store 0xd9a5150dbb7e712b in memory
flw f1, 0(x2) # load 0xd9a5150dbb7e712b from memory into f1
la x2, scratch
li x3, 0x682cf188f446b554 # load x3 with value 0x682cf188f446b554
sw x3, 0(x2) # store 0x682cf188f446b554 in memory
flw f5, 0(x2) # load 0x682cf188f446b554 from memory into f5
fmsub.s f18, f18, f1, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x5bc58976f07e54d5 # load x3 with value 0x5bc58976f07e54d5
sw x3, 0(x2) # store 0x5bc58976f07e54d5 in memory
flw f19, 0(x2) # load 0x5bc58976f07e54d5 from memory into f19
la x2, scratch
li x3, 0xf8aef23091efd428 # load x3 with value 0xf8aef23091efd428
sw x3, 0(x2) # store 0xf8aef23091efd428 in memory
flw f21, 0(x2) # load 0xf8aef23091efd428 from memory into f21
la x2, scratch
li x3, 0x5c45d4dc73912603 # load x3 with value 0x5c45d4dc73912603
sw x3, 0(x2) # store 0x5c45d4dc73912603 in memory
flw f26, 0(x2) # load 0x5c45d4dc73912603 from memory into f26
fmsub.s f19, f19, f21, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0xe8a35c3b82d4e5ca # load x3 with value 0xe8a35c3b82d4e5ca
sw x3, 0(x2) # store 0xe8a35c3b82d4e5ca in memory
flw f20, 0(x2) # load 0xe8a35c3b82d4e5ca from memory into f20
la x2, scratch
li x3, 0x11c452450b58203e # load x3 with value 0x11c452450b58203e
sw x3, 0(x2) # store 0x11c452450b58203e in memory
flw f17, 0(x2) # load 0x11c452450b58203e from memory into f17
la x2, scratch
li x3, 0x3f512082a2de2d9 # load x3 with value 0x3f512082a2de2d9
sw x3, 0(x2) # store 0x3f512082a2de2d9 in memory
flw f23, 0(x2) # load 0x3f512082a2de2d9 from memory into f23
fmsub.s f20, f20, f17, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x39bac80b2393ccff # load x3 with value 0x39bac80b2393ccff
sw x3, 0(x2) # store 0x39bac80b2393ccff in memory
flw f21, 0(x2) # load 0x39bac80b2393ccff from memory into f21
la x2, scratch
li x3, 0xb62a4777500d5309 # load x3 with value 0xb62a4777500d5309
sw x3, 0(x2) # store 0xb62a4777500d5309 in memory
flw f31, 0(x2) # load 0xb62a4777500d5309 from memory into f31
la x2, scratch
li x3, 0x4da6942a5fff7a60 # load x3 with value 0x4da6942a5fff7a60
sw x3, 0(x2) # store 0x4da6942a5fff7a60 in memory
flw f5, 0(x2) # load 0x4da6942a5fff7a60 from memory into f5
fmsub.s f21, f21, f31, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x91e1f63e76f10c86 # load x3 with value 0x91e1f63e76f10c86
sw x3, 0(x2) # store 0x91e1f63e76f10c86 in memory
flw f22, 0(x2) # load 0x91e1f63e76f10c86 from memory into f22
la x2, scratch
li x3, 0xc7bca5dfdc407058 # load x3 with value 0xc7bca5dfdc407058
sw x3, 0(x2) # store 0xc7bca5dfdc407058 in memory
flw f25, 0(x2) # load 0xc7bca5dfdc407058 from memory into f25
la x2, scratch
li x3, 0x104326aa691edd2b # load x3 with value 0x104326aa691edd2b
sw x3, 0(x2) # store 0x104326aa691edd2b in memory
flw f22, 0(x2) # load 0x104326aa691edd2b from memory into f22
fmsub.s f22, f22, f25, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0xe1c859e50e26b820 # load x3 with value 0xe1c859e50e26b820
sw x3, 0(x2) # store 0xe1c859e50e26b820 in memory
flw f23, 0(x2) # load 0xe1c859e50e26b820 from memory into f23
la x2, scratch
li x3, 0x41358e9d0a7550d2 # load x3 with value 0x41358e9d0a7550d2
sw x3, 0(x2) # store 0x41358e9d0a7550d2 in memory
flw f13, 0(x2) # load 0x41358e9d0a7550d2 from memory into f13
la x2, scratch
li x3, 0x712508bb1f0d3ed0 # load x3 with value 0x712508bb1f0d3ed0
sw x3, 0(x2) # store 0x712508bb1f0d3ed0 in memory
flw f11, 0(x2) # load 0x712508bb1f0d3ed0 from memory into f11
fmsub.s f23, f23, f13, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xc043c6100d958619 # load x3 with value 0xc043c6100d958619
sw x3, 0(x2) # store 0xc043c6100d958619 in memory
flw f24, 0(x2) # load 0xc043c6100d958619 from memory into f24
la x2, scratch
li x3, 0x4ae8c61d094c33e0 # load x3 with value 0x4ae8c61d094c33e0
sw x3, 0(x2) # store 0x4ae8c61d094c33e0 in memory
flw f16, 0(x2) # load 0x4ae8c61d094c33e0 from memory into f16
la x2, scratch
li x3, 0x5ee8f8533996411f # load x3 with value 0x5ee8f8533996411f
sw x3, 0(x2) # store 0x5ee8f8533996411f in memory
flw f22, 0(x2) # load 0x5ee8f8533996411f from memory into f22
fmsub.s f24, f24, f16, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0x67d018f001fbf288 # load x3 with value 0x67d018f001fbf288
sw x3, 0(x2) # store 0x67d018f001fbf288 in memory
flw f25, 0(x2) # load 0x67d018f001fbf288 from memory into f25
la x2, scratch
li x3, 0x41c271a988a4749d # load x3 with value 0x41c271a988a4749d
sw x3, 0(x2) # store 0x41c271a988a4749d in memory
flw f16, 0(x2) # load 0x41c271a988a4749d from memory into f16
la x2, scratch
li x3, 0x1281e2997bacabe9 # load x3 with value 0x1281e2997bacabe9
sw x3, 0(x2) # store 0x1281e2997bacabe9 in memory
flw f20, 0(x2) # load 0x1281e2997bacabe9 from memory into f20
fmsub.s f25, f25, f16, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x1dbf4f3a7129c4b2 # load x3 with value 0x1dbf4f3a7129c4b2
sw x3, 0(x2) # store 0x1dbf4f3a7129c4b2 in memory
flw f26, 0(x2) # load 0x1dbf4f3a7129c4b2 from memory into f26
la x2, scratch
li x3, 0x2de1a45e4eb96e1a # load x3 with value 0x2de1a45e4eb96e1a
sw x3, 0(x2) # store 0x2de1a45e4eb96e1a in memory
flw f12, 0(x2) # load 0x2de1a45e4eb96e1a from memory into f12
la x2, scratch
li x3, 0x94189e07dca7fb5b # load x3 with value 0x94189e07dca7fb5b
sw x3, 0(x2) # store 0x94189e07dca7fb5b in memory
flw f5, 0(x2) # load 0x94189e07dca7fb5b from memory into f5
fmsub.s f26, f26, f12, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x36d612e388b58b13 # load x3 with value 0x36d612e388b58b13
sw x3, 0(x2) # store 0x36d612e388b58b13 in memory
flw f27, 0(x2) # load 0x36d612e388b58b13 from memory into f27
la x2, scratch
li x3, 0xbd91f99163d7b8ef # load x3 with value 0xbd91f99163d7b8ef
sw x3, 0(x2) # store 0xbd91f99163d7b8ef in memory
flw f13, 0(x2) # load 0xbd91f99163d7b8ef from memory into f13
la x2, scratch
li x3, 0xd537a5a2b022db1c # load x3 with value 0xd537a5a2b022db1c
sw x3, 0(x2) # store 0xd537a5a2b022db1c in memory
flw f22, 0(x2) # load 0xd537a5a2b022db1c from memory into f22
fmsub.s f27, f27, f13, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x44795815368864f8 # load x3 with value 0x44795815368864f8
sw x3, 0(x2) # store 0x44795815368864f8 in memory
flw f28, 0(x2) # load 0x44795815368864f8 from memory into f28
la x2, scratch
li x3, 0x5d178eda964d03f2 # load x3 with value 0x5d178eda964d03f2
sw x3, 0(x2) # store 0x5d178eda964d03f2 in memory
flw f6, 0(x2) # load 0x5d178eda964d03f2 from memory into f6
la x2, scratch
li x3, 0xc91b32286377cafd # load x3 with value 0xc91b32286377cafd
sw x3, 0(x2) # store 0xc91b32286377cafd in memory
flw f30, 0(x2) # load 0xc91b32286377cafd from memory into f30
fmsub.s f28, f28, f6, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x86f1cdb117d1473b # load x3 with value 0x86f1cdb117d1473b
sw x3, 0(x2) # store 0x86f1cdb117d1473b in memory
flw f29, 0(x2) # load 0x86f1cdb117d1473b from memory into f29
la x2, scratch
li x3, 0xa0cada5ad2b0708c # load x3 with value 0xa0cada5ad2b0708c
sw x3, 0(x2) # store 0xa0cada5ad2b0708c in memory
flw f24, 0(x2) # load 0xa0cada5ad2b0708c from memory into f24
la x2, scratch
li x3, 0xc9aafd845c2833ef # load x3 with value 0xc9aafd845c2833ef
sw x3, 0(x2) # store 0xc9aafd845c2833ef in memory
flw f25, 0(x2) # load 0xc9aafd845c2833ef from memory into f25
fmsub.s f29, f29, f24, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0xa9b7faaab4382824 # load x3 with value 0xa9b7faaab4382824
sw x3, 0(x2) # store 0xa9b7faaab4382824 in memory
flw f30, 0(x2) # load 0xa9b7faaab4382824 from memory into f30
la x2, scratch
li x3, 0xa8ac7fa87ad1eda4 # load x3 with value 0xa8ac7fa87ad1eda4
sw x3, 0(x2) # store 0xa8ac7fa87ad1eda4 in memory
flw f23, 0(x2) # load 0xa8ac7fa87ad1eda4 from memory into f23
la x2, scratch
li x3, 0xa9cda47d6526314c # load x3 with value 0xa9cda47d6526314c
sw x3, 0(x2) # store 0xa9cda47d6526314c in memory
flw f29, 0(x2) # load 0xa9cda47d6526314c from memory into f29
fmsub.s f30, f30, f23, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x80bd2b4db6df2448 # load x3 with value 0x80bd2b4db6df2448
sw x3, 0(x2) # store 0x80bd2b4db6df2448 in memory
flw f31, 0(x2) # load 0x80bd2b4db6df2448 from memory into f31
la x2, scratch
li x3, 0xa36980b876c76658 # load x3 with value 0xa36980b876c76658
sw x3, 0(x2) # store 0xa36980b876c76658 in memory
flw f21, 0(x2) # load 0xa36980b876c76658 from memory into f21
la x2, scratch
li x3, 0x36dae1bcda8d099f # load x3 with value 0x36dae1bcda8d099f
sw x3, 0(x2) # store 0x36dae1bcda8d099f in memory
flw f19, 0(x2) # load 0x36dae1bcda8d099f from memory into f19
fmsub.s f31, f31, f21, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0xe86e861062930f58 # load x3 with value 0xe86e861062930f58
sw x3, 0(x2) # store 0xe86e861062930f58 in memory
flw f18, 0(x2) # load 0xe86e861062930f58 from memory into f18
la x2, scratch
li x3, 0x489212502b648055 # load x3 with value 0x489212502b648055
sw x3, 0(x2) # store 0x489212502b648055 in memory
flw f0, 0(x2) # load 0x489212502b648055 from memory into f0
la x2, scratch
li x3, 0x49ce7ccb7f75464b # load x3 with value 0x49ce7ccb7f75464b
sw x3, 0(x2) # store 0x49ce7ccb7f75464b in memory
flw f2, 0(x2) # load 0x49ce7ccb7f75464b from memory into f2
fmsub.s f0, f18, f0, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x1c240738b75879d1 # load x3 with value 0x1c240738b75879d1
sw x3, 0(x2) # store 0x1c240738b75879d1 in memory
flw f23, 0(x2) # load 0x1c240738b75879d1 from memory into f23
la x2, scratch
li x3, 0x1ae038836db27fa1 # load x3 with value 0x1ae038836db27fa1
sw x3, 0(x2) # store 0x1ae038836db27fa1 in memory
flw f1, 0(x2) # load 0x1ae038836db27fa1 from memory into f1
la x2, scratch
li x3, 0xe04dd39ce713641a # load x3 with value 0xe04dd39ce713641a
sw x3, 0(x2) # store 0xe04dd39ce713641a in memory
flw f5, 0(x2) # load 0xe04dd39ce713641a from memory into f5
fmsub.s f1, f23, f1, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x95bd346dcc0a9dc0 # load x3 with value 0x95bd346dcc0a9dc0
sw x3, 0(x2) # store 0x95bd346dcc0a9dc0 in memory
flw f2, 0(x2) # load 0x95bd346dcc0a9dc0 from memory into f2
la x2, scratch
li x3, 0xae07a5c9d2d7ff2a # load x3 with value 0xae07a5c9d2d7ff2a
sw x3, 0(x2) # store 0xae07a5c9d2d7ff2a in memory
flw f2, 0(x2) # load 0xae07a5c9d2d7ff2a from memory into f2
la x2, scratch
li x3, 0xd39c51ae16a84f81 # load x3 with value 0xd39c51ae16a84f81
sw x3, 0(x2) # store 0xd39c51ae16a84f81 in memory
flw f8, 0(x2) # load 0xd39c51ae16a84f81 from memory into f8
fmsub.s f2, f2, f2, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x786944b6d7cbe02d # load x3 with value 0x786944b6d7cbe02d
sw x3, 0(x2) # store 0x786944b6d7cbe02d in memory
flw f1, 0(x2) # load 0x786944b6d7cbe02d from memory into f1
la x2, scratch
li x3, 0x513103dcbd286fc7 # load x3 with value 0x513103dcbd286fc7
sw x3, 0(x2) # store 0x513103dcbd286fc7 in memory
flw f3, 0(x2) # load 0x513103dcbd286fc7 from memory into f3
la x2, scratch
li x3, 0xef2a12c3ae8c621e # load x3 with value 0xef2a12c3ae8c621e
sw x3, 0(x2) # store 0xef2a12c3ae8c621e in memory
flw f5, 0(x2) # load 0xef2a12c3ae8c621e from memory into f5
fmsub.s f3, f1, f3, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x69e1b7b076b168bd # load x3 with value 0x69e1b7b076b168bd
sw x3, 0(x2) # store 0x69e1b7b076b168bd in memory
flw f27, 0(x2) # load 0x69e1b7b076b168bd from memory into f27
la x2, scratch
li x3, 0xfea6fa3d38bea9d9 # load x3 with value 0xfea6fa3d38bea9d9
sw x3, 0(x2) # store 0xfea6fa3d38bea9d9 in memory
flw f4, 0(x2) # load 0xfea6fa3d38bea9d9 from memory into f4
la x2, scratch
li x3, 0xa5c5a3bfcd4e1afa # load x3 with value 0xa5c5a3bfcd4e1afa
sw x3, 0(x2) # store 0xa5c5a3bfcd4e1afa in memory
flw f24, 0(x2) # load 0xa5c5a3bfcd4e1afa from memory into f24
fmsub.s f4, f27, f4, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb589d22e065c55cf # load x3 with value 0xb589d22e065c55cf
sw x3, 0(x2) # store 0xb589d22e065c55cf in memory
flw f12, 0(x2) # load 0xb589d22e065c55cf from memory into f12
la x2, scratch
li x3, 0xbd7cb92c285a9145 # load x3 with value 0xbd7cb92c285a9145
sw x3, 0(x2) # store 0xbd7cb92c285a9145 in memory
flw f5, 0(x2) # load 0xbd7cb92c285a9145 from memory into f5
la x2, scratch
li x3, 0x6b98c58fbf1830c3 # load x3 with value 0x6b98c58fbf1830c3
sw x3, 0(x2) # store 0x6b98c58fbf1830c3 in memory
flw f14, 0(x2) # load 0x6b98c58fbf1830c3 from memory into f14
fmsub.s f5, f12, f5, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfaa296a5a0f0c295 # load x3 with value 0xfaa296a5a0f0c295
sw x3, 0(x2) # store 0xfaa296a5a0f0c295 in memory
flw f12, 0(x2) # load 0xfaa296a5a0f0c295 from memory into f12
la x2, scratch
li x3, 0x5cfa411467157b3e # load x3 with value 0x5cfa411467157b3e
sw x3, 0(x2) # store 0x5cfa411467157b3e in memory
flw f6, 0(x2) # load 0x5cfa411467157b3e from memory into f6
la x2, scratch
li x3, 0x70b82decee479d8e # load x3 with value 0x70b82decee479d8e
sw x3, 0(x2) # store 0x70b82decee479d8e in memory
flw f2, 0(x2) # load 0x70b82decee479d8e from memory into f2
fmsub.s f6, f12, f6, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1c5f819cf807df56 # load x3 with value 0x1c5f819cf807df56
sw x3, 0(x2) # store 0x1c5f819cf807df56 in memory
flw f29, 0(x2) # load 0x1c5f819cf807df56 from memory into f29
la x2, scratch
li x3, 0x963090eade4ce6d # load x3 with value 0x963090eade4ce6d
sw x3, 0(x2) # store 0x963090eade4ce6d in memory
flw f7, 0(x2) # load 0x963090eade4ce6d from memory into f7
la x2, scratch
li x3, 0xb096c0b136375797 # load x3 with value 0xb096c0b136375797
sw x3, 0(x2) # store 0xb096c0b136375797 in memory
flw f31, 0(x2) # load 0xb096c0b136375797 from memory into f31
fmsub.s f7, f29, f7, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x84e576250eed225c # load x3 with value 0x84e576250eed225c
sw x3, 0(x2) # store 0x84e576250eed225c in memory
flw f27, 0(x2) # load 0x84e576250eed225c from memory into f27
la x2, scratch
li x3, 0xa9a5d0335c4e3add # load x3 with value 0xa9a5d0335c4e3add
sw x3, 0(x2) # store 0xa9a5d0335c4e3add in memory
flw f8, 0(x2) # load 0xa9a5d0335c4e3add from memory into f8
la x2, scratch
li x3, 0x1e2594b9761b7f59 # load x3 with value 0x1e2594b9761b7f59
sw x3, 0(x2) # store 0x1e2594b9761b7f59 in memory
flw f3, 0(x2) # load 0x1e2594b9761b7f59 from memory into f3
fmsub.s f8, f27, f8, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x1889064c946a9bc # load x3 with value 0x1889064c946a9bc
sw x3, 0(x2) # store 0x1889064c946a9bc in memory
flw f17, 0(x2) # load 0x1889064c946a9bc from memory into f17
la x2, scratch
li x3, 0x944d808c9806cb26 # load x3 with value 0x944d808c9806cb26
sw x3, 0(x2) # store 0x944d808c9806cb26 in memory
flw f9, 0(x2) # load 0x944d808c9806cb26 from memory into f9
la x2, scratch
li x3, 0xc4fe34360ff8c4dc # load x3 with value 0xc4fe34360ff8c4dc
sw x3, 0(x2) # store 0xc4fe34360ff8c4dc in memory
flw f15, 0(x2) # load 0xc4fe34360ff8c4dc from memory into f15
fmsub.s f9, f17, f9, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0xb4568991c7371ce7 # load x3 with value 0xb4568991c7371ce7
sw x3, 0(x2) # store 0xb4568991c7371ce7 in memory
flw f19, 0(x2) # load 0xb4568991c7371ce7 from memory into f19
la x2, scratch
li x3, 0x4c5cc2a6aad63b48 # load x3 with value 0x4c5cc2a6aad63b48
sw x3, 0(x2) # store 0x4c5cc2a6aad63b48 in memory
flw f10, 0(x2) # load 0x4c5cc2a6aad63b48 from memory into f10
la x2, scratch
li x3, 0x78fe0cdd71c69aa9 # load x3 with value 0x78fe0cdd71c69aa9
sw x3, 0(x2) # store 0x78fe0cdd71c69aa9 in memory
flw f20, 0(x2) # load 0x78fe0cdd71c69aa9 from memory into f20
fmsub.s f10, f19, f10, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xac801b05f3902428 # load x3 with value 0xac801b05f3902428
sw x3, 0(x2) # store 0xac801b05f3902428 in memory
flw f3, 0(x2) # load 0xac801b05f3902428 from memory into f3
la x2, scratch
li x3, 0x262d12808d7d9363 # load x3 with value 0x262d12808d7d9363
sw x3, 0(x2) # store 0x262d12808d7d9363 in memory
flw f11, 0(x2) # load 0x262d12808d7d9363 from memory into f11
la x2, scratch
li x3, 0xf68bc635e3386b5c # load x3 with value 0xf68bc635e3386b5c
sw x3, 0(x2) # store 0xf68bc635e3386b5c in memory
flw f22, 0(x2) # load 0xf68bc635e3386b5c from memory into f22
fmsub.s f11, f3, f11, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0xdc869c5d8b5edd01 # load x3 with value 0xdc869c5d8b5edd01
sw x3, 0(x2) # store 0xdc869c5d8b5edd01 in memory
flw f6, 0(x2) # load 0xdc869c5d8b5edd01 from memory into f6
la x2, scratch
li x3, 0x29849760071d359b # load x3 with value 0x29849760071d359b
sw x3, 0(x2) # store 0x29849760071d359b in memory
flw f12, 0(x2) # load 0x29849760071d359b from memory into f12
la x2, scratch
li x3, 0x47dd2d72cc305c64 # load x3 with value 0x47dd2d72cc305c64
sw x3, 0(x2) # store 0x47dd2d72cc305c64 in memory
flw f29, 0(x2) # load 0x47dd2d72cc305c64 from memory into f29
fmsub.s f12, f6, f12, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x4c19354c1b463413 # load x3 with value 0x4c19354c1b463413
sw x3, 0(x2) # store 0x4c19354c1b463413 in memory
flw f25, 0(x2) # load 0x4c19354c1b463413 from memory into f25
la x2, scratch
li x3, 0x53be1a455625804f # load x3 with value 0x53be1a455625804f
sw x3, 0(x2) # store 0x53be1a455625804f in memory
flw f13, 0(x2) # load 0x53be1a455625804f from memory into f13
la x2, scratch
li x3, 0x4cbe4d611bd52347 # load x3 with value 0x4cbe4d611bd52347
sw x3, 0(x2) # store 0x4cbe4d611bd52347 in memory
flw f3, 0(x2) # load 0x4cbe4d611bd52347 from memory into f3
fmsub.s f13, f25, f13, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xa32a143b0581b32f # load x3 with value 0xa32a143b0581b32f
sw x3, 0(x2) # store 0xa32a143b0581b32f in memory
flw f8, 0(x2) # load 0xa32a143b0581b32f from memory into f8
la x2, scratch
li x3, 0xde825c2a424706a2 # load x3 with value 0xde825c2a424706a2
sw x3, 0(x2) # store 0xde825c2a424706a2 in memory
flw f14, 0(x2) # load 0xde825c2a424706a2 from memory into f14
la x2, scratch
li x3, 0x675caa339df0eac9 # load x3 with value 0x675caa339df0eac9
sw x3, 0(x2) # store 0x675caa339df0eac9 in memory
flw f21, 0(x2) # load 0x675caa339df0eac9 from memory into f21
fmsub.s f14, f8, f14, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x7760ab082f63c976 # load x3 with value 0x7760ab082f63c976
sw x3, 0(x2) # store 0x7760ab082f63c976 in memory
flw f13, 0(x2) # load 0x7760ab082f63c976 from memory into f13
la x2, scratch
li x3, 0x34ffe2036be1b0a6 # load x3 with value 0x34ffe2036be1b0a6
sw x3, 0(x2) # store 0x34ffe2036be1b0a6 in memory
flw f15, 0(x2) # load 0x34ffe2036be1b0a6 from memory into f15
la x2, scratch
li x3, 0xf45b4a72d1ab24af # load x3 with value 0xf45b4a72d1ab24af
sw x3, 0(x2) # store 0xf45b4a72d1ab24af in memory
flw f31, 0(x2) # load 0xf45b4a72d1ab24af from memory into f31
fmsub.s f15, f13, f15, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xf87fb84499e1d5f7 # load x3 with value 0xf87fb84499e1d5f7
sw x3, 0(x2) # store 0xf87fb84499e1d5f7 in memory
flw f14, 0(x2) # load 0xf87fb84499e1d5f7 from memory into f14
la x2, scratch
li x3, 0xe85578fe7deb9704 # load x3 with value 0xe85578fe7deb9704
sw x3, 0(x2) # store 0xe85578fe7deb9704 in memory
flw f16, 0(x2) # load 0xe85578fe7deb9704 from memory into f16
la x2, scratch
li x3, 0x74f0664668370375 # load x3 with value 0x74f0664668370375
sw x3, 0(x2) # store 0x74f0664668370375 in memory
flw f31, 0(x2) # load 0x74f0664668370375 from memory into f31
fmsub.s f16, f14, f16, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0x2d8c4f75b746b1e4 # load x3 with value 0x2d8c4f75b746b1e4
sw x3, 0(x2) # store 0x2d8c4f75b746b1e4 in memory
flw f3, 0(x2) # load 0x2d8c4f75b746b1e4 from memory into f3
la x2, scratch
li x3, 0xf0c9833499b746d6 # load x3 with value 0xf0c9833499b746d6
sw x3, 0(x2) # store 0xf0c9833499b746d6 in memory
flw f17, 0(x2) # load 0xf0c9833499b746d6 from memory into f17
la x2, scratch
li x3, 0x9faaa02cece69a22 # load x3 with value 0x9faaa02cece69a22
sw x3, 0(x2) # store 0x9faaa02cece69a22 in memory
flw f26, 0(x2) # load 0x9faaa02cece69a22 from memory into f26
fmsub.s f17, f3, f17, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xe507c140b208872b # load x3 with value 0xe507c140b208872b
sw x3, 0(x2) # store 0xe507c140b208872b in memory
flw f29, 0(x2) # load 0xe507c140b208872b from memory into f29
la x2, scratch
li x3, 0xbbf5c7cb114af280 # load x3 with value 0xbbf5c7cb114af280
sw x3, 0(x2) # store 0xbbf5c7cb114af280 in memory
flw f18, 0(x2) # load 0xbbf5c7cb114af280 from memory into f18
la x2, scratch
li x3, 0x841b0df31c5935ab # load x3 with value 0x841b0df31c5935ab
sw x3, 0(x2) # store 0x841b0df31c5935ab in memory
flw f3, 0(x2) # load 0x841b0df31c5935ab from memory into f3
fmsub.s f18, f29, f18, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x25ff78a7888d22e3 # load x3 with value 0x25ff78a7888d22e3
sw x3, 0(x2) # store 0x25ff78a7888d22e3 in memory
flw f14, 0(x2) # load 0x25ff78a7888d22e3 from memory into f14
la x2, scratch
li x3, 0x71a3038050848340 # load x3 with value 0x71a3038050848340
sw x3, 0(x2) # store 0x71a3038050848340 in memory
flw f19, 0(x2) # load 0x71a3038050848340 from memory into f19
la x2, scratch
li x3, 0xab4d1fab0591ce3 # load x3 with value 0xab4d1fab0591ce3
sw x3, 0(x2) # store 0xab4d1fab0591ce3 in memory
flw f22, 0(x2) # load 0xab4d1fab0591ce3 from memory into f22
fmsub.s f19, f14, f19, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0xf0d2777b0423e7ae # load x3 with value 0xf0d2777b0423e7ae
sw x3, 0(x2) # store 0xf0d2777b0423e7ae in memory
flw f21, 0(x2) # load 0xf0d2777b0423e7ae from memory into f21
la x2, scratch
li x3, 0x7fadd9556a9aa7fd # load x3 with value 0x7fadd9556a9aa7fd
sw x3, 0(x2) # store 0x7fadd9556a9aa7fd in memory
flw f20, 0(x2) # load 0x7fadd9556a9aa7fd from memory into f20
la x2, scratch
li x3, 0x73a91c28ea3250ae # load x3 with value 0x73a91c28ea3250ae
sw x3, 0(x2) # store 0x73a91c28ea3250ae in memory
flw f28, 0(x2) # load 0x73a91c28ea3250ae from memory into f28
fmsub.s f20, f21, f20, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xd791b03d244c85e7 # load x3 with value 0xd791b03d244c85e7
sw x3, 0(x2) # store 0xd791b03d244c85e7 in memory
flw f14, 0(x2) # load 0xd791b03d244c85e7 from memory into f14
la x2, scratch
li x3, 0xa78756ba11e3e651 # load x3 with value 0xa78756ba11e3e651
sw x3, 0(x2) # store 0xa78756ba11e3e651 in memory
flw f21, 0(x2) # load 0xa78756ba11e3e651 from memory into f21
la x2, scratch
li x3, 0x16b61359603f8c0c # load x3 with value 0x16b61359603f8c0c
sw x3, 0(x2) # store 0x16b61359603f8c0c in memory
flw f26, 0(x2) # load 0x16b61359603f8c0c from memory into f26
fmsub.s f21, f14, f21, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x7e83cfb973245eb2 # load x3 with value 0x7e83cfb973245eb2
sw x3, 0(x2) # store 0x7e83cfb973245eb2 in memory
flw f24, 0(x2) # load 0x7e83cfb973245eb2 from memory into f24
la x2, scratch
li x3, 0x91006c27f1d34835 # load x3 with value 0x91006c27f1d34835
sw x3, 0(x2) # store 0x91006c27f1d34835 in memory
flw f22, 0(x2) # load 0x91006c27f1d34835 from memory into f22
la x2, scratch
li x3, 0xa81c6cee79b567ae # load x3 with value 0xa81c6cee79b567ae
sw x3, 0(x2) # store 0xa81c6cee79b567ae in memory
flw f10, 0(x2) # load 0xa81c6cee79b567ae from memory into f10
fmsub.s f22, f24, f22, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0xa0b12f620ba7971b # load x3 with value 0xa0b12f620ba7971b
sw x3, 0(x2) # store 0xa0b12f620ba7971b in memory
flw f11, 0(x2) # load 0xa0b12f620ba7971b from memory into f11
la x2, scratch
li x3, 0x27dabc57bc894ca8 # load x3 with value 0x27dabc57bc894ca8
sw x3, 0(x2) # store 0x27dabc57bc894ca8 in memory
flw f23, 0(x2) # load 0x27dabc57bc894ca8 from memory into f23
la x2, scratch
li x3, 0xc5d14517305932d4 # load x3 with value 0xc5d14517305932d4
sw x3, 0(x2) # store 0xc5d14517305932d4 in memory
flw f5, 0(x2) # load 0xc5d14517305932d4 from memory into f5
fmsub.s f23, f11, f23, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xe056779c9b922710 # load x3 with value 0xe056779c9b922710
sw x3, 0(x2) # store 0xe056779c9b922710 in memory
flw f1, 0(x2) # load 0xe056779c9b922710 from memory into f1
la x2, scratch
li x3, 0x304e5ee1d2ea91b # load x3 with value 0x304e5ee1d2ea91b
sw x3, 0(x2) # store 0x304e5ee1d2ea91b in memory
flw f24, 0(x2) # load 0x304e5ee1d2ea91b from memory into f24
la x2, scratch
li x3, 0x6071a4252dac5ae7 # load x3 with value 0x6071a4252dac5ae7
sw x3, 0(x2) # store 0x6071a4252dac5ae7 in memory
flw f15, 0(x2) # load 0x6071a4252dac5ae7 from memory into f15
fmsub.s f24, f1, f24, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x4717c85dcf931c80 # load x3 with value 0x4717c85dcf931c80
sw x3, 0(x2) # store 0x4717c85dcf931c80 in memory
flw f31, 0(x2) # load 0x4717c85dcf931c80 from memory into f31
la x2, scratch
li x3, 0x4da52ec67074ef15 # load x3 with value 0x4da52ec67074ef15
sw x3, 0(x2) # store 0x4da52ec67074ef15 in memory
flw f25, 0(x2) # load 0x4da52ec67074ef15 from memory into f25
la x2, scratch
li x3, 0xd07bec297d2b1a33 # load x3 with value 0xd07bec297d2b1a33
sw x3, 0(x2) # store 0xd07bec297d2b1a33 in memory
flw f22, 0(x2) # load 0xd07bec297d2b1a33 from memory into f22
fmsub.s f25, f31, f25, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0xc437cdb00fe2ab7c # load x3 with value 0xc437cdb00fe2ab7c
sw x3, 0(x2) # store 0xc437cdb00fe2ab7c in memory
flw f23, 0(x2) # load 0xc437cdb00fe2ab7c from memory into f23
la x2, scratch
li x3, 0x517ceb4a8a9df19 # load x3 with value 0x517ceb4a8a9df19
sw x3, 0(x2) # store 0x517ceb4a8a9df19 in memory
flw f26, 0(x2) # load 0x517ceb4a8a9df19 from memory into f26
la x2, scratch
li x3, 0xfbd13758f2e74080 # load x3 with value 0xfbd13758f2e74080
sw x3, 0(x2) # store 0xfbd13758f2e74080 in memory
flw f2, 0(x2) # load 0xfbd13758f2e74080 from memory into f2
fmsub.s f26, f23, f26, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0xd229cd0a7b19e7fc # load x3 with value 0xd229cd0a7b19e7fc
sw x3, 0(x2) # store 0xd229cd0a7b19e7fc in memory
flw f24, 0(x2) # load 0xd229cd0a7b19e7fc from memory into f24
la x2, scratch
li x3, 0xcfafc3b24671d106 # load x3 with value 0xcfafc3b24671d106
sw x3, 0(x2) # store 0xcfafc3b24671d106 in memory
flw f27, 0(x2) # load 0xcfafc3b24671d106 from memory into f27
la x2, scratch
li x3, 0xc07572bbdb9acaea # load x3 with value 0xc07572bbdb9acaea
sw x3, 0(x2) # store 0xc07572bbdb9acaea in memory
flw f5, 0(x2) # load 0xc07572bbdb9acaea from memory into f5
fmsub.s f27, f24, f27, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x484af24b7f764709 # load x3 with value 0x484af24b7f764709
sw x3, 0(x2) # store 0x484af24b7f764709 in memory
flw f20, 0(x2) # load 0x484af24b7f764709 from memory into f20
la x2, scratch
li x3, 0xf4937c2a6bc54dd3 # load x3 with value 0xf4937c2a6bc54dd3
sw x3, 0(x2) # store 0xf4937c2a6bc54dd3 in memory
flw f28, 0(x2) # load 0xf4937c2a6bc54dd3 from memory into f28
la x2, scratch
li x3, 0x2f61342690a41497 # load x3 with value 0x2f61342690a41497
sw x3, 0(x2) # store 0x2f61342690a41497 in memory
flw f7, 0(x2) # load 0x2f61342690a41497 from memory into f7
fmsub.s f28, f20, f28, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xf623b56d0e5ddd78 # load x3 with value 0xf623b56d0e5ddd78
sw x3, 0(x2) # store 0xf623b56d0e5ddd78 in memory
flw f2, 0(x2) # load 0xf623b56d0e5ddd78 from memory into f2
la x2, scratch
li x3, 0x2c09a1980f93d489 # load x3 with value 0x2c09a1980f93d489
sw x3, 0(x2) # store 0x2c09a1980f93d489 in memory
flw f29, 0(x2) # load 0x2c09a1980f93d489 from memory into f29
la x2, scratch
li x3, 0xa9043f8b9dcc7709 # load x3 with value 0xa9043f8b9dcc7709
sw x3, 0(x2) # store 0xa9043f8b9dcc7709 in memory
flw f21, 0(x2) # load 0xa9043f8b9dcc7709 from memory into f21
fmsub.s f29, f2, f29, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0xe040163b45c74691 # load x3 with value 0xe040163b45c74691
sw x3, 0(x2) # store 0xe040163b45c74691 in memory
flw f28, 0(x2) # load 0xe040163b45c74691 from memory into f28
la x2, scratch
li x3, 0x44081772812b790b # load x3 with value 0x44081772812b790b
sw x3, 0(x2) # store 0x44081772812b790b in memory
flw f30, 0(x2) # load 0x44081772812b790b from memory into f30
la x2, scratch
li x3, 0x16c86152eb3c8b1a # load x3 with value 0x16c86152eb3c8b1a
sw x3, 0(x2) # store 0x16c86152eb3c8b1a in memory
flw f3, 0(x2) # load 0x16c86152eb3c8b1a from memory into f3
fmsub.s f30, f28, f30, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x734b4682d17668e5 # load x3 with value 0x734b4682d17668e5
sw x3, 0(x2) # store 0x734b4682d17668e5 in memory
flw f3, 0(x2) # load 0x734b4682d17668e5 from memory into f3
la x2, scratch
li x3, 0x69f14209c09f5bdd # load x3 with value 0x69f14209c09f5bdd
sw x3, 0(x2) # store 0x69f14209c09f5bdd in memory
flw f31, 0(x2) # load 0x69f14209c09f5bdd from memory into f31
la x2, scratch
li x3, 0x64b4343b6262625 # load x3 with value 0x64b4343b6262625
sw x3, 0(x2) # store 0x64b4343b6262625 in memory
flw f27, 0(x2) # load 0x64b4343b6262625 from memory into f27
fmsub.s f31, f3, f31, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x85d2b843f1fde1b7 # load x3 with value 0x85d2b843f1fde1b7
sw x3, 0(x2) # store 0x85d2b843f1fde1b7 in memory
flw f29, 0(x2) # load 0x85d2b843f1fde1b7 from memory into f29
la x2, scratch
li x3, 0xcce88f3e86e978c2 # load x3 with value 0xcce88f3e86e978c2
sw x3, 0(x2) # store 0xcce88f3e86e978c2 in memory
flw f12, 0(x2) # load 0xcce88f3e86e978c2 from memory into f12
la x2, scratch
li x3, 0x70160d41df3dc3d7 # load x3 with value 0x70160d41df3dc3d7
sw x3, 0(x2) # store 0x70160d41df3dc3d7 in memory
flw f0, 0(x2) # load 0x70160d41df3dc3d7 from memory into f0
fmsub.s f0, f29, f12, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x71dd4d34f86f024f # load x3 with value 0x71dd4d34f86f024f
sw x3, 0(x2) # store 0x71dd4d34f86f024f in memory
flw f27, 0(x2) # load 0x71dd4d34f86f024f from memory into f27
la x2, scratch
li x3, 0xea3b779b2683c012 # load x3 with value 0xea3b779b2683c012
sw x3, 0(x2) # store 0xea3b779b2683c012 in memory
flw f16, 0(x2) # load 0xea3b779b2683c012 from memory into f16
la x2, scratch
li x3, 0xef43e5e5a6cc1ea3 # load x3 with value 0xef43e5e5a6cc1ea3
sw x3, 0(x2) # store 0xef43e5e5a6cc1ea3 in memory
flw f1, 0(x2) # load 0xef43e5e5a6cc1ea3 from memory into f1
fmsub.s f1, f27, f16, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0x8a1d3a6d4c9075f5 # load x3 with value 0x8a1d3a6d4c9075f5
sw x3, 0(x2) # store 0x8a1d3a6d4c9075f5 in memory
flw f5, 0(x2) # load 0x8a1d3a6d4c9075f5 from memory into f5
la x2, scratch
li x3, 0x44fccc7c5c5217d0 # load x3 with value 0x44fccc7c5c5217d0
sw x3, 0(x2) # store 0x44fccc7c5c5217d0 in memory
flw f31, 0(x2) # load 0x44fccc7c5c5217d0 from memory into f31
la x2, scratch
li x3, 0x1622850e492dd1cb # load x3 with value 0x1622850e492dd1cb
sw x3, 0(x2) # store 0x1622850e492dd1cb in memory
flw f2, 0(x2) # load 0x1622850e492dd1cb from memory into f2
fmsub.s f2, f5, f31, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x3aadedc4fde0d4be # load x3 with value 0x3aadedc4fde0d4be
sw x3, 0(x2) # store 0x3aadedc4fde0d4be in memory
flw f22, 0(x2) # load 0x3aadedc4fde0d4be from memory into f22
la x2, scratch
li x3, 0xb15cd2d60d7c9366 # load x3 with value 0xb15cd2d60d7c9366
sw x3, 0(x2) # store 0xb15cd2d60d7c9366 in memory
flw f11, 0(x2) # load 0xb15cd2d60d7c9366 from memory into f11
la x2, scratch
li x3, 0x440b9bdb3ec1715c # load x3 with value 0x440b9bdb3ec1715c
sw x3, 0(x2) # store 0x440b9bdb3ec1715c in memory
flw f3, 0(x2) # load 0x440b9bdb3ec1715c from memory into f3
fmsub.s f3, f22, f11, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xe1168244a5e2cd5f # load x3 with value 0xe1168244a5e2cd5f
sw x3, 0(x2) # store 0xe1168244a5e2cd5f in memory
flw f5, 0(x2) # load 0xe1168244a5e2cd5f from memory into f5
la x2, scratch
li x3, 0x767f1cf16d9a18cf # load x3 with value 0x767f1cf16d9a18cf
sw x3, 0(x2) # store 0x767f1cf16d9a18cf in memory
flw f16, 0(x2) # load 0x767f1cf16d9a18cf from memory into f16
la x2, scratch
li x3, 0xc4084f081765ab25 # load x3 with value 0xc4084f081765ab25
sw x3, 0(x2) # store 0xc4084f081765ab25 in memory
flw f4, 0(x2) # load 0xc4084f081765ab25 from memory into f4
fmsub.s f4, f5, f16, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
la x2, scratch
li x3, 0x3d9a434685ee9cc9 # load x3 with value 0x3d9a434685ee9cc9
sw x3, 0(x2) # store 0x3d9a434685ee9cc9 in memory
flw f12, 0(x2) # load 0x3d9a434685ee9cc9 from memory into f12
la x2, scratch
li x3, 0xfa72f86a5a47938e # load x3 with value 0xfa72f86a5a47938e
sw x3, 0(x2) # store 0xfa72f86a5a47938e in memory
flw f30, 0(x2) # load 0xfa72f86a5a47938e from memory into f30
la x2, scratch
li x3, 0xee4399fb7dc38552 # load x3 with value 0xee4399fb7dc38552
sw x3, 0(x2) # store 0xee4399fb7dc38552 in memory
flw f5, 0(x2) # load 0xee4399fb7dc38552 from memory into f5
fmsub.s f5, f12, f30, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xcdc18f4ab715d2e0 # load x3 with value 0xcdc18f4ab715d2e0
sw x3, 0(x2) # store 0xcdc18f4ab715d2e0 in memory
flw f9, 0(x2) # load 0xcdc18f4ab715d2e0 from memory into f9
la x2, scratch
li x3, 0xc1c6a2bc431314a6 # load x3 with value 0xc1c6a2bc431314a6
sw x3, 0(x2) # store 0xc1c6a2bc431314a6 in memory
flw f27, 0(x2) # load 0xc1c6a2bc431314a6 from memory into f27
la x2, scratch
li x3, 0xc8956a679ceb6e7f # load x3 with value 0xc8956a679ceb6e7f
sw x3, 0(x2) # store 0xc8956a679ceb6e7f in memory
flw f6, 0(x2) # load 0xc8956a679ceb6e7f from memory into f6
fmsub.s f6, f9, f27, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xcc9ec59db219d7de # load x3 with value 0xcc9ec59db219d7de
sw x3, 0(x2) # store 0xcc9ec59db219d7de in memory
flw f18, 0(x2) # load 0xcc9ec59db219d7de from memory into f18
la x2, scratch
li x3, 0x659dcdd699b8147d # load x3 with value 0x659dcdd699b8147d
sw x3, 0(x2) # store 0x659dcdd699b8147d in memory
flw f10, 0(x2) # load 0x659dcdd699b8147d from memory into f10
la x2, scratch
li x3, 0x987d8e4f1bc3e33d # load x3 with value 0x987d8e4f1bc3e33d
sw x3, 0(x2) # store 0x987d8e4f1bc3e33d in memory
flw f7, 0(x2) # load 0x987d8e4f1bc3e33d from memory into f7
fmsub.s f7, f18, f10, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0xadcea82f7b1bb05e # load x3 with value 0xadcea82f7b1bb05e
sw x3, 0(x2) # store 0xadcea82f7b1bb05e in memory
flw f23, 0(x2) # load 0xadcea82f7b1bb05e from memory into f23
la x2, scratch
li x3, 0x12faa596a1affd14 # load x3 with value 0x12faa596a1affd14
sw x3, 0(x2) # store 0x12faa596a1affd14 in memory
flw f22, 0(x2) # load 0x12faa596a1affd14 from memory into f22
la x2, scratch
li x3, 0x7dee7ab876c31850 # load x3 with value 0x7dee7ab876c31850
sw x3, 0(x2) # store 0x7dee7ab876c31850 in memory
flw f8, 0(x2) # load 0x7dee7ab876c31850 from memory into f8
fmsub.s f8, f23, f22, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0xfca0ef3c3a03e19 # load x3 with value 0xfca0ef3c3a03e19
sw x3, 0(x2) # store 0xfca0ef3c3a03e19 in memory
flw f12, 0(x2) # load 0xfca0ef3c3a03e19 from memory into f12
la x2, scratch
li x3, 0x50253d3e41f4da5e # load x3 with value 0x50253d3e41f4da5e
sw x3, 0(x2) # store 0x50253d3e41f4da5e in memory
flw f8, 0(x2) # load 0x50253d3e41f4da5e from memory into f8
la x2, scratch
li x3, 0x2dce362114b6bf9d # load x3 with value 0x2dce362114b6bf9d
sw x3, 0(x2) # store 0x2dce362114b6bf9d in memory
flw f9, 0(x2) # load 0x2dce362114b6bf9d from memory into f9
fmsub.s f9, f12, f8, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0x791a2baff3bc04aa # load x3 with value 0x791a2baff3bc04aa
sw x3, 0(x2) # store 0x791a2baff3bc04aa in memory
flw f21, 0(x2) # load 0x791a2baff3bc04aa from memory into f21
la x2, scratch
li x3, 0x42467bd987fad7c0 # load x3 with value 0x42467bd987fad7c0
sw x3, 0(x2) # store 0x42467bd987fad7c0 in memory
flw f24, 0(x2) # load 0x42467bd987fad7c0 from memory into f24
la x2, scratch
li x3, 0xecdd043d288af0d8 # load x3 with value 0xecdd043d288af0d8
sw x3, 0(x2) # store 0xecdd043d288af0d8 in memory
flw f10, 0(x2) # load 0xecdd043d288af0d8 from memory into f10
fmsub.s f10, f21, f24, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x120a695bce7d3c73 # load x3 with value 0x120a695bce7d3c73
sw x3, 0(x2) # store 0x120a695bce7d3c73 in memory
flw f15, 0(x2) # load 0x120a695bce7d3c73 from memory into f15
la x2, scratch
li x3, 0x583af8c449685424 # load x3 with value 0x583af8c449685424
sw x3, 0(x2) # store 0x583af8c449685424 in memory
flw f17, 0(x2) # load 0x583af8c449685424 from memory into f17
la x2, scratch
li x3, 0x919ab3b557c4eed5 # load x3 with value 0x919ab3b557c4eed5
sw x3, 0(x2) # store 0x919ab3b557c4eed5 in memory
flw f11, 0(x2) # load 0x919ab3b557c4eed5 from memory into f11
fmsub.s f11, f15, f17, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0x861f070c4bf91c3d # load x3 with value 0x861f070c4bf91c3d
sw x3, 0(x2) # store 0x861f070c4bf91c3d in memory
flw f26, 0(x2) # load 0x861f070c4bf91c3d from memory into f26
la x2, scratch
li x3, 0xd50dccd4f7d5df54 # load x3 with value 0xd50dccd4f7d5df54
sw x3, 0(x2) # store 0xd50dccd4f7d5df54 in memory
flw f18, 0(x2) # load 0xd50dccd4f7d5df54 from memory into f18
la x2, scratch
li x3, 0xb2015ec253f2068c # load x3 with value 0xb2015ec253f2068c
sw x3, 0(x2) # store 0xb2015ec253f2068c in memory
flw f12, 0(x2) # load 0xb2015ec253f2068c from memory into f12
fmsub.s f12, f26, f18, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0x29c0f3469811f762 # load x3 with value 0x29c0f3469811f762
sw x3, 0(x2) # store 0x29c0f3469811f762 in memory
flw f30, 0(x2) # load 0x29c0f3469811f762 from memory into f30
la x2, scratch
li x3, 0xc7b150d973da36ea # load x3 with value 0xc7b150d973da36ea
sw x3, 0(x2) # store 0xc7b150d973da36ea in memory
flw f5, 0(x2) # load 0xc7b150d973da36ea from memory into f5
la x2, scratch
li x3, 0x660a8faa90cf19d1 # load x3 with value 0x660a8faa90cf19d1
sw x3, 0(x2) # store 0x660a8faa90cf19d1 in memory
flw f13, 0(x2) # load 0x660a8faa90cf19d1 from memory into f13
fmsub.s f13, f30, f5, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0xb4f2769f36a25af9 # load x3 with value 0xb4f2769f36a25af9
sw x3, 0(x2) # store 0xb4f2769f36a25af9 in memory
flw f16, 0(x2) # load 0xb4f2769f36a25af9 from memory into f16
la x2, scratch
li x3, 0xd849eb5eb82e2e3f # load x3 with value 0xd849eb5eb82e2e3f
sw x3, 0(x2) # store 0xd849eb5eb82e2e3f in memory
flw f3, 0(x2) # load 0xd849eb5eb82e2e3f from memory into f3
la x2, scratch
li x3, 0xe69624dfbc4c07c # load x3 with value 0xe69624dfbc4c07c
sw x3, 0(x2) # store 0xe69624dfbc4c07c in memory
flw f14, 0(x2) # load 0xe69624dfbc4c07c from memory into f14
fmsub.s f14, f16, f3, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x24a9321dd1a0658a # load x3 with value 0x24a9321dd1a0658a
sw x3, 0(x2) # store 0x24a9321dd1a0658a in memory
flw f10, 0(x2) # load 0x24a9321dd1a0658a from memory into f10
la x2, scratch
li x3, 0x9b6e2355a1bbd0d9 # load x3 with value 0x9b6e2355a1bbd0d9
sw x3, 0(x2) # store 0x9b6e2355a1bbd0d9 in memory
flw f6, 0(x2) # load 0x9b6e2355a1bbd0d9 from memory into f6
la x2, scratch
li x3, 0x72ba69776666e53a # load x3 with value 0x72ba69776666e53a
sw x3, 0(x2) # store 0x72ba69776666e53a in memory
flw f15, 0(x2) # load 0x72ba69776666e53a from memory into f15
fmsub.s f15, f10, f6, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0xe3fa16a44b1e1d83 # load x3 with value 0xe3fa16a44b1e1d83
sw x3, 0(x2) # store 0xe3fa16a44b1e1d83 in memory
flw f29, 0(x2) # load 0xe3fa16a44b1e1d83 from memory into f29
la x2, scratch
li x3, 0x66df2e80a9f8aa7f # load x3 with value 0x66df2e80a9f8aa7f
sw x3, 0(x2) # store 0x66df2e80a9f8aa7f in memory
flw f11, 0(x2) # load 0x66df2e80a9f8aa7f from memory into f11
la x2, scratch
li x3, 0x46d5c6405e928d76 # load x3 with value 0x46d5c6405e928d76
sw x3, 0(x2) # store 0x46d5c6405e928d76 in memory
flw f16, 0(x2) # load 0x46d5c6405e928d76 from memory into f16
fmsub.s f16, f29, f11, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0x2298dfed73b6dcb7 # load x3 with value 0x2298dfed73b6dcb7
sw x3, 0(x2) # store 0x2298dfed73b6dcb7 in memory
flw f6, 0(x2) # load 0x2298dfed73b6dcb7 from memory into f6
la x2, scratch
li x3, 0x284c115a44a29038 # load x3 with value 0x284c115a44a29038
sw x3, 0(x2) # store 0x284c115a44a29038 in memory
flw f23, 0(x2) # load 0x284c115a44a29038 from memory into f23
la x2, scratch
li x3, 0x9f4c4945b4e8d2f8 # load x3 with value 0x9f4c4945b4e8d2f8
sw x3, 0(x2) # store 0x9f4c4945b4e8d2f8 in memory
flw f17, 0(x2) # load 0x9f4c4945b4e8d2f8 from memory into f17
fmsub.s f17, f6, f23, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0x6d0635c844be447f # load x3 with value 0x6d0635c844be447f
sw x3, 0(x2) # store 0x6d0635c844be447f in memory
flw f20, 0(x2) # load 0x6d0635c844be447f from memory into f20
la x2, scratch
li x3, 0xf49450a186ae9e68 # load x3 with value 0xf49450a186ae9e68
sw x3, 0(x2) # store 0xf49450a186ae9e68 in memory
flw f15, 0(x2) # load 0xf49450a186ae9e68 from memory into f15
la x2, scratch
li x3, 0x183247076dbc4793 # load x3 with value 0x183247076dbc4793
sw x3, 0(x2) # store 0x183247076dbc4793 in memory
flw f18, 0(x2) # load 0x183247076dbc4793 from memory into f18
fmsub.s f18, f20, f15, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x8e2e6e71283d6d70 # load x3 with value 0x8e2e6e71283d6d70
sw x3, 0(x2) # store 0x8e2e6e71283d6d70 in memory
flw f1, 0(x2) # load 0x8e2e6e71283d6d70 from memory into f1
la x2, scratch
li x3, 0x10c8d3612db7d128 # load x3 with value 0x10c8d3612db7d128
sw x3, 0(x2) # store 0x10c8d3612db7d128 in memory
flw f18, 0(x2) # load 0x10c8d3612db7d128 from memory into f18
la x2, scratch
li x3, 0x1922518ccb9a22bc # load x3 with value 0x1922518ccb9a22bc
sw x3, 0(x2) # store 0x1922518ccb9a22bc in memory
flw f19, 0(x2) # load 0x1922518ccb9a22bc from memory into f19
fmsub.s f19, f1, f18, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0x8edf218eca0a82b4 # load x3 with value 0x8edf218eca0a82b4
sw x3, 0(x2) # store 0x8edf218eca0a82b4 in memory
flw f17, 0(x2) # load 0x8edf218eca0a82b4 from memory into f17
la x2, scratch
li x3, 0x58d8d730eaab41af # load x3 with value 0x58d8d730eaab41af
sw x3, 0(x2) # store 0x58d8d730eaab41af in memory
flw f28, 0(x2) # load 0x58d8d730eaab41af from memory into f28
la x2, scratch
li x3, 0x3d9f89907e2f3de6 # load x3 with value 0x3d9f89907e2f3de6
sw x3, 0(x2) # store 0x3d9f89907e2f3de6 in memory
flw f20, 0(x2) # load 0x3d9f89907e2f3de6 from memory into f20
fmsub.s f20, f17, f28, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x26420a6c53dfdff3 # load x3 with value 0x26420a6c53dfdff3
sw x3, 0(x2) # store 0x26420a6c53dfdff3 in memory
flw f14, 0(x2) # load 0x26420a6c53dfdff3 from memory into f14
la x2, scratch
li x3, 0x7f850af7e64220f9 # load x3 with value 0x7f850af7e64220f9
sw x3, 0(x2) # store 0x7f850af7e64220f9 in memory
flw f3, 0(x2) # load 0x7f850af7e64220f9 from memory into f3
la x2, scratch
li x3, 0x37a7346a6887e35a # load x3 with value 0x37a7346a6887e35a
sw x3, 0(x2) # store 0x37a7346a6887e35a in memory
flw f21, 0(x2) # load 0x37a7346a6887e35a from memory into f21
fmsub.s f21, f14, f3, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x6537a14a2e0e0e8f # load x3 with value 0x6537a14a2e0e0e8f
sw x3, 0(x2) # store 0x6537a14a2e0e0e8f in memory
flw f3, 0(x2) # load 0x6537a14a2e0e0e8f from memory into f3
la x2, scratch
li x3, 0x2956e9ca8b0b89f5 # load x3 with value 0x2956e9ca8b0b89f5
sw x3, 0(x2) # store 0x2956e9ca8b0b89f5 in memory
flw f10, 0(x2) # load 0x2956e9ca8b0b89f5 from memory into f10
la x2, scratch
li x3, 0xe4a265d95071d677 # load x3 with value 0xe4a265d95071d677
sw x3, 0(x2) # store 0xe4a265d95071d677 in memory
flw f22, 0(x2) # load 0xe4a265d95071d677 from memory into f22
fmsub.s f22, f3, f10, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0x4a445284650091b6 # load x3 with value 0x4a445284650091b6
sw x3, 0(x2) # store 0x4a445284650091b6 in memory
flw f8, 0(x2) # load 0x4a445284650091b6 from memory into f8
la x2, scratch
li x3, 0xd1f4f13bd8dfe56a # load x3 with value 0xd1f4f13bd8dfe56a
sw x3, 0(x2) # store 0xd1f4f13bd8dfe56a in memory
flw f28, 0(x2) # load 0xd1f4f13bd8dfe56a from memory into f28
la x2, scratch
li x3, 0x62bbaf1861ce019e # load x3 with value 0x62bbaf1861ce019e
sw x3, 0(x2) # store 0x62bbaf1861ce019e in memory
flw f23, 0(x2) # load 0x62bbaf1861ce019e from memory into f23
fmsub.s f23, f8, f28, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0x1158a2ec78906c82 # load x3 with value 0x1158a2ec78906c82
sw x3, 0(x2) # store 0x1158a2ec78906c82 in memory
flw f12, 0(x2) # load 0x1158a2ec78906c82 from memory into f12
la x2, scratch
li x3, 0xb5532cbbc977fd2c # load x3 with value 0xb5532cbbc977fd2c
sw x3, 0(x2) # store 0xb5532cbbc977fd2c in memory
flw f5, 0(x2) # load 0xb5532cbbc977fd2c from memory into f5
la x2, scratch
li x3, 0x7797cd4d80f55a4e # load x3 with value 0x7797cd4d80f55a4e
sw x3, 0(x2) # store 0x7797cd4d80f55a4e in memory
flw f24, 0(x2) # load 0x7797cd4d80f55a4e from memory into f24
fmsub.s f24, f12, f5, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x992df9f1d0558633 # load x3 with value 0x992df9f1d0558633
sw x3, 0(x2) # store 0x992df9f1d0558633 in memory
flw f22, 0(x2) # load 0x992df9f1d0558633 from memory into f22
la x2, scratch
li x3, 0x294940934ed466c0 # load x3 with value 0x294940934ed466c0
sw x3, 0(x2) # store 0x294940934ed466c0 in memory
flw f11, 0(x2) # load 0x294940934ed466c0 from memory into f11
la x2, scratch
li x3, 0x74f97af331445c6e # load x3 with value 0x74f97af331445c6e
sw x3, 0(x2) # store 0x74f97af331445c6e in memory
flw f25, 0(x2) # load 0x74f97af331445c6e from memory into f25
fmsub.s f25, f22, f11, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x20673762e2309c9 # load x3 with value 0x20673762e2309c9
sw x3, 0(x2) # store 0x20673762e2309c9 in memory
flw f12, 0(x2) # load 0x20673762e2309c9 from memory into f12
la x2, scratch
li x3, 0xed3abc4c8893272b # load x3 with value 0xed3abc4c8893272b
sw x3, 0(x2) # store 0xed3abc4c8893272b in memory
flw f17, 0(x2) # load 0xed3abc4c8893272b from memory into f17
la x2, scratch
li x3, 0x30d9be2be9a01d9c # load x3 with value 0x30d9be2be9a01d9c
sw x3, 0(x2) # store 0x30d9be2be9a01d9c in memory
flw f26, 0(x2) # load 0x30d9be2be9a01d9c from memory into f26
fmsub.s f26, f12, f17, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0x979217bb403d5070 # load x3 with value 0x979217bb403d5070
sw x3, 0(x2) # store 0x979217bb403d5070 in memory
flw f17, 0(x2) # load 0x979217bb403d5070 from memory into f17
la x2, scratch
li x3, 0x17f793d9b9544207 # load x3 with value 0x17f793d9b9544207
sw x3, 0(x2) # store 0x17f793d9b9544207 in memory
flw f14, 0(x2) # load 0x17f793d9b9544207 from memory into f14
la x2, scratch
li x3, 0xeae60db3d8748203 # load x3 with value 0xeae60db3d8748203
sw x3, 0(x2) # store 0xeae60db3d8748203 in memory
flw f27, 0(x2) # load 0xeae60db3d8748203 from memory into f27
fmsub.s f27, f17, f14, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x27fca1741d2755f1 # load x3 with value 0x27fca1741d2755f1
sw x3, 0(x2) # store 0x27fca1741d2755f1 in memory
flw f28, 0(x2) # load 0x27fca1741d2755f1 from memory into f28
la x2, scratch
li x3, 0x7be369493ab1c34 # load x3 with value 0x7be369493ab1c34
sw x3, 0(x2) # store 0x7be369493ab1c34 in memory
flw f29, 0(x2) # load 0x7be369493ab1c34 from memory into f29
la x2, scratch
li x3, 0xdb46c7663ea67acf # load x3 with value 0xdb46c7663ea67acf
sw x3, 0(x2) # store 0xdb46c7663ea67acf in memory
flw f28, 0(x2) # load 0xdb46c7663ea67acf from memory into f28
fmsub.s f28, f28, f29, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0x1c3ec043a8cfe969 # load x3 with value 0x1c3ec043a8cfe969
sw x3, 0(x2) # store 0x1c3ec043a8cfe969 in memory
flw f1, 0(x2) # load 0x1c3ec043a8cfe969 from memory into f1
la x2, scratch
li x3, 0x65d75cc5bd4f0ac1 # load x3 with value 0x65d75cc5bd4f0ac1
sw x3, 0(x2) # store 0x65d75cc5bd4f0ac1 in memory
flw f12, 0(x2) # load 0x65d75cc5bd4f0ac1 from memory into f12
la x2, scratch
li x3, 0xe7a53369e041563a # load x3 with value 0xe7a53369e041563a
sw x3, 0(x2) # store 0xe7a53369e041563a in memory
flw f29, 0(x2) # load 0xe7a53369e041563a from memory into f29
fmsub.s f29, f1, f12, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0x48f93f3709d6aca1 # load x3 with value 0x48f93f3709d6aca1
sw x3, 0(x2) # store 0x48f93f3709d6aca1 in memory
flw f18, 0(x2) # load 0x48f93f3709d6aca1 from memory into f18
la x2, scratch
li x3, 0x37f606b801b6799a # load x3 with value 0x37f606b801b6799a
sw x3, 0(x2) # store 0x37f606b801b6799a in memory
flw f30, 0(x2) # load 0x37f606b801b6799a from memory into f30
la x2, scratch
li x3, 0xf7cd61b36d2aaa37 # load x3 with value 0xf7cd61b36d2aaa37
sw x3, 0(x2) # store 0xf7cd61b36d2aaa37 in memory
flw f30, 0(x2) # load 0xf7cd61b36d2aaa37 from memory into f30
fmsub.s f30, f18, f30, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x7b057f5d297fe2a1 # load x3 with value 0x7b057f5d297fe2a1
sw x3, 0(x2) # store 0x7b057f5d297fe2a1 in memory
flw f29, 0(x2) # load 0x7b057f5d297fe2a1 from memory into f29
la x2, scratch
li x3, 0xa5bc178b0cd639fd # load x3 with value 0xa5bc178b0cd639fd
sw x3, 0(x2) # store 0xa5bc178b0cd639fd in memory
flw f21, 0(x2) # load 0xa5bc178b0cd639fd from memory into f21
la x2, scratch
li x3, 0xc1772abae22cbff4 # load x3 with value 0xc1772abae22cbff4
sw x3, 0(x2) # store 0xc1772abae22cbff4 in memory
flw f31, 0(x2) # load 0xc1772abae22cbff4 from memory into f31
fmsub.s f31, f29, f21, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x37ba8b0e53c9245b # load x3 with value 0x37ba8b0e53c9245b
sw x3, 0(x2) # store 0x37ba8b0e53c9245b in memory
flw f7, 0(x2) # load 0x37ba8b0e53c9245b from memory into f7
la x2, scratch
li x3, 0xa142354b91d127df # load x3 with value 0xa142354b91d127df
sw x3, 0(x2) # store 0xa142354b91d127df in memory
flw f8, 0(x2) # load 0xa142354b91d127df from memory into f8
la x2, scratch
li x3, 0x00000006 # load x3 with value 0x00000006
sw x3, 0(x2) # store 0x00000006 in memory
flw f6, 0(x2) # load 0x00000006 from memory into f6
fmsub.s f19, f7, f8, f6, dyn # perform operation
fmsub.s f19, f7, f8, f6, rdn # perform operation
fmsub.s f19, f7, f8, f6, rmm # perform operation
fmsub.s f19, f7, f8, f6, rne # perform operation
fmsub.s f19, f7, f8, f6, rtz # perform operation
fmsub.s f19, f7, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x2617d44a7936bd # load x3 with value 0x2617d44a7936bd
sw x3, 0(x2) # store 0x2617d44a7936bd in memory
flw f10, 0(x2) # load 0x2617d44a7936bd from memory into f10
fmsub.s f19, f15, f1, f10, dyn # perform operation
fmsub.s f19, f15, f1, f10, rdn # perform operation
fmsub.s f19, f15, f1, f10, rmm # perform operation
fmsub.s f19, f15, f1, f10, rne # perform operation
fmsub.s f19, f15, f1, f10, rtz # perform operation
fmsub.s f19, f15, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x25f0833a4e43d285 # load x3 with value 0x25f0833a4e43d285
sw x3, 0(x2) # store 0x25f0833a4e43d285 in memory
flw f9, 0(x2) # load 0x25f0833a4e43d285 from memory into f9
fmsub.s f26, f22, f8, f9, dyn # perform operation
fmsub.s f26, f22, f8, f9, rdn # perform operation
fmsub.s f26, f22, f8, f9, rmm # perform operation
fmsub.s f26, f22, f8, f9, rne # perform operation
fmsub.s f26, f22, f8, f9, rtz # perform operation
fmsub.s f26, f22, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xcb01a5d2016af9f7 # load x3 with value 0xcb01a5d2016af9f7
sw x3, 0(x2) # store 0xcb01a5d2016af9f7 in memory
flw f2, 0(x2) # load 0xcb01a5d2016af9f7 from memory into f2
fmsub.s f11, f21, f17, f2, dyn # perform operation
fmsub.s f11, f21, f17, f2, rdn # perform operation
fmsub.s f11, f21, f17, f2, rmm # perform operation
fmsub.s f11, f21, f17, f2, rne # perform operation
fmsub.s f11, f21, f17, f2, rtz # perform operation
fmsub.s f11, f21, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xe81daeb11964f46f # load x3 with value 0xe81daeb11964f46f
sw x3, 0(x2) # store 0xe81daeb11964f46f in memory
flw f14, 0(x2) # load 0xe81daeb11964f46f from memory into f14
fmsub.s f27, f13, f24, f14, dyn # perform operation
fmsub.s f27, f13, f24, f14, rdn # perform operation
fmsub.s f27, f13, f24, f14, rmm # perform operation
fmsub.s f27, f13, f24, f14, rne # perform operation
fmsub.s f27, f13, f24, f14, rtz # perform operation
fmsub.s f27, f13, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xe2d918d9fbaea97c # load x3 with value 0xe2d918d9fbaea97c
sw x3, 0(x2) # store 0xe2d918d9fbaea97c in memory
flw f10, 0(x2) # load 0xe2d918d9fbaea97c from memory into f10
fmsub.s f20, f30, f14, f10, dyn # perform operation
fmsub.s f20, f30, f14, f10, rdn # perform operation
fmsub.s f20, f30, f14, f10, rmm # perform operation
fmsub.s f20, f30, f14, f10, rne # perform operation
fmsub.s f20, f30, f14, f10, rtz # perform operation
fmsub.s f20, f30, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x237dfb347adb8142 # load x3 with value 0x237dfb347adb8142
sw x3, 0(x2) # store 0x237dfb347adb8142 in memory
flw f3, 0(x2) # load 0x237dfb347adb8142 from memory into f3
fmsub.s f24, f27, f30, f3, dyn # perform operation
fmsub.s f24, f27, f30, f3, rdn # perform operation
fmsub.s f24, f27, f30, f3, rmm # perform operation
fmsub.s f24, f27, f30, f3, rne # perform operation
fmsub.s f24, f27, f30, f3, rtz # perform operation
fmsub.s f24, f27, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x8f1c770d2bb0fe35 # load x3 with value 0x8f1c770d2bb0fe35
sw x3, 0(x2) # store 0x8f1c770d2bb0fe35 in memory
flw f20, 0(x2) # load 0x8f1c770d2bb0fe35 from memory into f20
fmsub.s f27, f22, f23, f20, dyn # perform operation
fmsub.s f27, f22, f23, f20, rdn # perform operation
fmsub.s f27, f22, f23, f20, rmm # perform operation
fmsub.s f27, f22, f23, f20, rne # perform operation
fmsub.s f27, f22, f23, f20, rtz # perform operation
fmsub.s f27, f22, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xbcb11b151194a7e7 # load x3 with value 0xbcb11b151194a7e7
sw x3, 0(x2) # store 0xbcb11b151194a7e7 in memory
flw f28, 0(x2) # load 0xbcb11b151194a7e7 from memory into f28
fmsub.s f1, f15, f26, f28, dyn # perform operation
fmsub.s f1, f15, f26, f28, rdn # perform operation
fmsub.s f1, f15, f26, f28, rmm # perform operation
fmsub.s f1, f15, f26, f28, rne # perform operation
fmsub.s f1, f15, f26, f28, rtz # perform operation
fmsub.s f1, f15, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xcac057bd4d668c55 # load x3 with value 0xcac057bd4d668c55
sw x3, 0(x2) # store 0xcac057bd4d668c55 in memory
flw f21, 0(x2) # load 0xcac057bd4d668c55 from memory into f21
fmsub.s f2, f12, f28, f21, dyn # perform operation
fmsub.s f2, f12, f28, f21, rdn # perform operation
fmsub.s f2, f12, f28, f21, rmm # perform operation
fmsub.s f2, f12, f28, f21, rne # perform operation
fmsub.s f2, f12, f28, f21, rtz # perform operation
fmsub.s f2, f12, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xdfe149c812f2ed47 # load x3 with value 0xdfe149c812f2ed47
sw x3, 0(x2) # store 0xdfe149c812f2ed47 in memory
flw f6, 0(x2) # load 0xdfe149c812f2ed47 from memory into f6
fmsub.s f20, f24, f25, f6, dyn # perform operation
fmsub.s f20, f24, f25, f6, rdn # perform operation
fmsub.s f20, f24, f25, f6, rmm # perform operation
fmsub.s f20, f24, f25, f6, rne # perform operation
fmsub.s f20, f24, f25, f6, rtz # perform operation
fmsub.s f20, f24, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f24, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f24, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x358b85cf290fc515 # load x3 with value 0x358b85cf290fc515
sw x3, 0(x2) # store 0x358b85cf290fc515 in memory
flw f3, 0(x2) # load 0x358b85cf290fc515 from memory into f3
fmsub.s f18, f24, f11, f3, dyn # perform operation
fmsub.s f18, f24, f11, f3, rdn # perform operation
fmsub.s f18, f24, f11, f3, rmm # perform operation
fmsub.s f18, f24, f11, f3, rne # perform operation
fmsub.s f18, f24, f11, f3, rtz # perform operation
fmsub.s f18, f24, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x50d6d785427f4c00 # load x3 with value 0x50d6d785427f4c00
sw x3, 0(x2) # store 0x50d6d785427f4c00 in memory
flw f20, 0(x2) # load 0x50d6d785427f4c00 from memory into f20
fmsub.s f12, f22, f23, f20, dyn # perform operation
fmsub.s f12, f22, f23, f20, rdn # perform operation
fmsub.s f12, f22, f23, f20, rmm # perform operation
fmsub.s f12, f22, f23, f20, rne # perform operation
fmsub.s f12, f22, f23, f20, rtz # perform operation
fmsub.s f12, f22, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f22, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f22, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x1df26d579145f374 # load x3 with value 0x1df26d579145f374
sw x3, 0(x2) # store 0x1df26d579145f374 in memory
flw f20, 0(x2) # load 0x1df26d579145f374 from memory into f20
fmsub.s f24, f14, f16, f20, dyn # perform operation
fmsub.s f24, f14, f16, f20, rdn # perform operation
fmsub.s f24, f14, f16, f20, rmm # perform operation
fmsub.s f24, f14, f16, f20, rne # perform operation
fmsub.s f24, f14, f16, f20, rtz # perform operation
fmsub.s f24, f14, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f14, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f14, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x33bbf958f59f1006 # load x3 with value 0x33bbf958f59f1006
sw x3, 0(x2) # store 0x33bbf958f59f1006 in memory
flw f23, 0(x2) # load 0x33bbf958f59f1006 from memory into f23
fmsub.s f8, f5, f9, f23, dyn # perform operation
fmsub.s f8, f5, f9, f23, rdn # perform operation
fmsub.s f8, f5, f9, f23, rmm # perform operation
fmsub.s f8, f5, f9, f23, rne # perform operation
fmsub.s f8, f5, f9, f23, rtz # perform operation
fmsub.s f8, f5, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x5b5bd4bc9d83e146 # load x3 with value 0x5b5bd4bc9d83e146
sw x3, 0(x2) # store 0x5b5bd4bc9d83e146 in memory
flw f8, 0(x2) # load 0x5b5bd4bc9d83e146 from memory into f8
fmsub.s f28, f25, f30, f8, dyn # perform operation
fmsub.s f28, f25, f30, f8, rdn # perform operation
fmsub.s f28, f25, f30, f8, rmm # perform operation
fmsub.s f28, f25, f30, f8, rne # perform operation
fmsub.s f28, f25, f30, f8, rtz # perform operation
fmsub.s f28, f25, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x2b5555e37d11c234 # load x3 with value 0x2b5555e37d11c234
sw x3, 0(x2) # store 0x2b5555e37d11c234 in memory
flw f26, 0(x2) # load 0x2b5555e37d11c234 from memory into f26
fmsub.s f10, f28, f7, f26, dyn # perform operation
fmsub.s f10, f28, f7, f26, rdn # perform operation
fmsub.s f10, f28, f7, f26, rmm # perform operation
fmsub.s f10, f28, f7, f26, rne # perform operation
fmsub.s f10, f28, f7, f26, rtz # perform operation
fmsub.s f10, f28, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f7, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xd112ea2421d1cd5a # load x3 with value 0xd112ea2421d1cd5a
sw x3, 0(x2) # store 0xd112ea2421d1cd5a in memory
flw f22, 0(x2) # load 0xd112ea2421d1cd5a from memory into f22
fmsub.s f31, f26, f11, f22, dyn # perform operation
fmsub.s f31, f26, f11, f22, rdn # perform operation
fmsub.s f31, f26, f11, f22, rmm # perform operation
fmsub.s f31, f26, f11, f22, rne # perform operation
fmsub.s f31, f26, f11, f22, rtz # perform operation
fmsub.s f31, f26, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xc1006dec01c9a252 # load x3 with value 0xc1006dec01c9a252
sw x3, 0(x2) # store 0xc1006dec01c9a252 in memory
flw f19, 0(x2) # load 0xc1006dec01c9a252 from memory into f19
fmsub.s f28, f1, f5, f19, dyn # perform operation
fmsub.s f28, f1, f5, f19, rdn # perform operation
fmsub.s f28, f1, f5, f19, rmm # perform operation
fmsub.s f28, f1, f5, f19, rne # perform operation
fmsub.s f28, f1, f5, f19, rtz # perform operation
fmsub.s f28, f1, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xa965273f19e6769a # load x3 with value 0xa965273f19e6769a
sw x3, 0(x2) # store 0xa965273f19e6769a in memory
flw f23, 0(x2) # load 0xa965273f19e6769a from memory into f23
fmsub.s f30, f24, f16, f23, dyn # perform operation
fmsub.s f30, f24, f16, f23, rdn # perform operation
fmsub.s f30, f24, f16, f23, rmm # perform operation
fmsub.s f30, f24, f16, f23, rne # perform operation
fmsub.s f30, f24, f16, f23, rtz # perform operation
fmsub.s f30, f24, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f24, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x460162852fff243 # load x3 with value 0x460162852fff243
sw x3, 0(x2) # store 0x460162852fff243 in memory
flw f6, 0(x2) # load 0x460162852fff243 from memory into f6
fmsub.s f27, f13, f24, f6, dyn # perform operation
fmsub.s f27, f13, f24, f6, rdn # perform operation
fmsub.s f27, f13, f24, f6, rmm # perform operation
fmsub.s f27, f13, f24, f6, rne # perform operation
fmsub.s f27, f13, f24, f6, rtz # perform operation
fmsub.s f27, f13, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xd4b7a39f4976fc48 # load x3 with value 0xd4b7a39f4976fc48
sw x3, 0(x2) # store 0xd4b7a39f4976fc48 in memory
flw f24, 0(x2) # load 0xd4b7a39f4976fc48 from memory into f24
fmsub.s f10, f22, f14, f24, dyn # perform operation
fmsub.s f10, f22, f14, f24, rdn # perform operation
fmsub.s f10, f22, f14, f24, rmm # perform operation
fmsub.s f10, f22, f14, f24, rne # perform operation
fmsub.s f10, f22, f14, f24, rtz # perform operation
fmsub.s f10, f22, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x24382ac1c5e97f00 # load x3 with value 0x24382ac1c5e97f00
sw x3, 0(x2) # store 0x24382ac1c5e97f00 in memory
flw f29, 0(x2) # load 0x24382ac1c5e97f00 from memory into f29
fmsub.s f8, f12, f21, f29, dyn # perform operation
fmsub.s f8, f12, f21, f29, rdn # perform operation
fmsub.s f8, f12, f21, f29, rmm # perform operation
fmsub.s f8, f12, f21, f29, rne # perform operation
fmsub.s f8, f12, f21, f29, rtz # perform operation
fmsub.s f8, f12, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x8000a08afaaa87ab # load x3 with value 0x8000a08afaaa87ab
sw x3, 0(x2) # store 0x8000a08afaaa87ab in memory
flw f11, 0(x2) # load 0x8000a08afaaa87ab from memory into f11
fmsub.s f1, f22, f16, f11, dyn # perform operation
fmsub.s f1, f22, f16, f11, rdn # perform operation
fmsub.s f1, f22, f16, f11, rmm # perform operation
fmsub.s f1, f22, f16, f11, rne # perform operation
fmsub.s f1, f22, f16, f11, rtz # perform operation
fmsub.s f1, f22, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xe444f44e2b4fa6b4 # load x3 with value 0xe444f44e2b4fa6b4
sw x3, 0(x2) # store 0xe444f44e2b4fa6b4 in memory
flw f19, 0(x2) # load 0xe444f44e2b4fa6b4 from memory into f19
fmsub.s f3, f27, f18, f19, dyn # perform operation
fmsub.s f3, f27, f18, f19, rdn # perform operation
fmsub.s f3, f27, f18, f19, rmm # perform operation
fmsub.s f3, f27, f18, f19, rne # perform operation
fmsub.s f3, f27, f18, f19, rtz # perform operation
fmsub.s f3, f27, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f27, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x311875869bca37d # load x3 with value 0x311875869bca37d
sw x3, 0(x2) # store 0x311875869bca37d in memory
flw f13, 0(x2) # load 0x311875869bca37d from memory into f13
fmsub.s f18, f16, f10, f13, dyn # perform operation
fmsub.s f18, f16, f10, f13, rdn # perform operation
fmsub.s f18, f16, f10, f13, rmm # perform operation
fmsub.s f18, f16, f10, f13, rne # perform operation
fmsub.s f18, f16, f10, f13, rtz # perform operation
fmsub.s f18, f16, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x35938578aa044686 # load x3 with value 0x35938578aa044686
sw x3, 0(x2) # store 0x35938578aa044686 in memory
flw f19, 0(x2) # load 0x35938578aa044686 from memory into f19
fmsub.s f3, f12, f31, f19, dyn # perform operation
fmsub.s f3, f12, f31, f19, rdn # perform operation
fmsub.s f3, f12, f31, f19, rmm # perform operation
fmsub.s f3, f12, f31, f19, rne # perform operation
fmsub.s f3, f12, f31, f19, rtz # perform operation
fmsub.s f3, f12, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f12, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f12, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f12, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f12, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f12, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xdacdc2edc98c80fe # load x3 with value 0xdacdc2edc98c80fe
sw x3, 0(x2) # store 0xdacdc2edc98c80fe in memory
flw f7, 0(x2) # load 0xdacdc2edc98c80fe from memory into f7
fmsub.s f13, f29, f11, f7, dyn # perform operation
fmsub.s f13, f29, f11, f7, rdn # perform operation
fmsub.s f13, f29, f11, f7, rmm # perform operation
fmsub.s f13, f29, f11, f7, rne # perform operation
fmsub.s f13, f29, f11, f7, rtz # perform operation
fmsub.s f13, f29, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f29, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f29, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f29, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f29, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f29, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x9183c74e23a843fe # load x3 with value 0x9183c74e23a843fe
sw x3, 0(x2) # store 0x9183c74e23a843fe in memory
flw f10, 0(x2) # load 0x9183c74e23a843fe from memory into f10
fmsub.s f14, f19, f18, f10, dyn # perform operation
fmsub.s f14, f19, f18, f10, rdn # perform operation
fmsub.s f14, f19, f18, f10, rmm # perform operation
fmsub.s f14, f19, f18, f10, rne # perform operation
fmsub.s f14, f19, f18, f10, rtz # perform operation
fmsub.s f14, f19, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f19, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xe885701892978eee # load x3 with value 0xe885701892978eee
sw x3, 0(x2) # store 0xe885701892978eee in memory
flw f21, 0(x2) # load 0xe885701892978eee from memory into f21
fmsub.s f23, f5, f27, f21, dyn # perform operation
fmsub.s f23, f5, f27, f21, rdn # perform operation
fmsub.s f23, f5, f27, f21, rmm # perform operation
fmsub.s f23, f5, f27, f21, rne # perform operation
fmsub.s f23, f5, f27, f21, rtz # perform operation
fmsub.s f23, f5, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0xc6251722dd5697cf # load x3 with value 0xc6251722dd5697cf
sw x3, 0(x2) # store 0xc6251722dd5697cf in memory
flw f18, 0(x2) # load 0xc6251722dd5697cf from memory into f18
fmsub.s f22, f10, f24, f18, dyn # perform operation
fmsub.s f22, f10, f24, f18, rdn # perform operation
fmsub.s f22, f10, f24, f18, rmm # perform operation
fmsub.s f22, f10, f24, f18, rne # perform operation
fmsub.s f22, f10, f24, f18, rtz # perform operation
fmsub.s f22, f10, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x6032ea6bc4569a8c # load x3 with value 0x6032ea6bc4569a8c
sw x3, 0(x2) # store 0x6032ea6bc4569a8c in memory
flw f3, 0(x2) # load 0x6032ea6bc4569a8c from memory into f3
fmsub.s f24, f27, f11, f3, dyn # perform operation
fmsub.s f24, f27, f11, f3, rdn # perform operation
fmsub.s f24, f27, f11, f3, rmm # perform operation
fmsub.s f24, f27, f11, f3, rne # perform operation
fmsub.s f24, f27, f11, f3, rtz # perform operation
fmsub.s f24, f27, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xee14add5fda77bc4 # load x3 with value 0xee14add5fda77bc4
sw x3, 0(x2) # store 0xee14add5fda77bc4 in memory
flw f2, 0(x2) # load 0xee14add5fda77bc4 from memory into f2
fmsub.s f12, f7, f3, f2, dyn # perform operation
fmsub.s f12, f7, f3, f2, rdn # perform operation
fmsub.s f12, f7, f3, f2, rmm # perform operation
fmsub.s f12, f7, f3, f2, rne # perform operation
fmsub.s f12, f7, f3, f2, rtz # perform operation
fmsub.s f12, f7, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f7, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f7, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xecb5443d02f8c795 # load x3 with value 0xecb5443d02f8c795
sw x3, 0(x2) # store 0xecb5443d02f8c795 in memory
flw f3, 0(x2) # load 0xecb5443d02f8c795 from memory into f3
fmsub.s f22, f18, f16, f3, dyn # perform operation
fmsub.s f22, f18, f16, f3, rdn # perform operation
fmsub.s f22, f18, f16, f3, rmm # perform operation
fmsub.s f22, f18, f16, f3, rne # perform operation
fmsub.s f22, f18, f16, f3, rtz # perform operation
fmsub.s f22, f18, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x56cfcf2b7a1a6d49 # load x3 with value 0x56cfcf2b7a1a6d49
sw x3, 0(x2) # store 0x56cfcf2b7a1a6d49 in memory
flw f25, 0(x2) # load 0x56cfcf2b7a1a6d49 from memory into f25
fmsub.s f20, f11, f5, f25, dyn # perform operation
fmsub.s f20, f11, f5, f25, rdn # perform operation
fmsub.s f20, f11, f5, f25, rmm # perform operation
fmsub.s f20, f11, f5, f25, rne # perform operation
fmsub.s f20, f11, f5, f25, rtz # perform operation
fmsub.s f20, f11, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f11, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f11, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x6416edb16cc26b3a # load x3 with value 0x6416edb16cc26b3a
sw x3, 0(x2) # store 0x6416edb16cc26b3a in memory
flw f7, 0(x2) # load 0x6416edb16cc26b3a from memory into f7
fmsub.s f5, f21, f9, f7, dyn # perform operation
fmsub.s f5, f21, f9, f7, rdn # perform operation
fmsub.s f5, f21, f9, f7, rmm # perform operation
fmsub.s f5, f21, f9, f7, rne # perform operation
fmsub.s f5, f21, f9, f7, rtz # perform operation
fmsub.s f5, f21, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f9, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xba614dccb281ff01 # load x3 with value 0xba614dccb281ff01
sw x3, 0(x2) # store 0xba614dccb281ff01 in memory
flw f10, 0(x2) # load 0xba614dccb281ff01 from memory into f10
fmsub.s f27, f9, f15, f10, dyn # perform operation
fmsub.s f27, f9, f15, f10, rdn # perform operation
fmsub.s f27, f9, f15, f10, rmm # perform operation
fmsub.s f27, f9, f15, f10, rne # perform operation
fmsub.s f27, f9, f15, f10, rtz # perform operation
fmsub.s f27, f9, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f9, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x7d5703ccd9a264bb # load x3 with value 0x7d5703ccd9a264bb
sw x3, 0(x2) # store 0x7d5703ccd9a264bb in memory
flw f15, 0(x2) # load 0x7d5703ccd9a264bb from memory into f15
fmsub.s f17, f19, f31, f15, dyn # perform operation
fmsub.s f17, f19, f31, f15, rdn # perform operation
fmsub.s f17, f19, f31, f15, rmm # perform operation
fmsub.s f17, f19, f31, f15, rne # perform operation
fmsub.s f17, f19, f31, f15, rtz # perform operation
fmsub.s f17, f19, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0xcb7208813c1975cc # load x3 with value 0xcb7208813c1975cc
sw x3, 0(x2) # store 0xcb7208813c1975cc in memory
flw f29, 0(x2) # load 0xcb7208813c1975cc from memory into f29
fmsub.s f31, f10, f23, f29, dyn # perform operation
fmsub.s f31, f10, f23, f29, rdn # perform operation
fmsub.s f31, f10, f23, f29, rmm # perform operation
fmsub.s f31, f10, f23, f29, rne # perform operation
fmsub.s f31, f10, f23, f29, rtz # perform operation
fmsub.s f31, f10, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x328971744039c96d # load x3 with value 0x328971744039c96d
sw x3, 0(x2) # store 0x328971744039c96d in memory
flw f24, 0(x2) # load 0x328971744039c96d from memory into f24
fmsub.s f7, f29, f22, f24, dyn # perform operation
fmsub.s f7, f29, f22, f24, rdn # perform operation
fmsub.s f7, f29, f22, f24, rmm # perform operation
fmsub.s f7, f29, f22, f24, rne # perform operation
fmsub.s f7, f29, f22, f24, rtz # perform operation
fmsub.s f7, f29, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x1fe442e737be83eb # load x3 with value 0x1fe442e737be83eb
sw x3, 0(x2) # store 0x1fe442e737be83eb in memory
flw f7, 0(x2) # load 0x1fe442e737be83eb from memory into f7
fmsub.s f11, f19, f17, f7, dyn # perform operation
fmsub.s f11, f19, f17, f7, rdn # perform operation
fmsub.s f11, f19, f17, f7, rmm # perform operation
fmsub.s f11, f19, f17, f7, rne # perform operation
fmsub.s f11, f19, f17, f7, rtz # perform operation
fmsub.s f11, f19, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xbc2472225af1bd52 # load x3 with value 0xbc2472225af1bd52
sw x3, 0(x2) # store 0xbc2472225af1bd52 in memory
flw f12, 0(x2) # load 0xbc2472225af1bd52 from memory into f12
fmsub.s f21, f2, f3, f12, dyn # perform operation
fmsub.s f21, f2, f3, f12, rdn # perform operation
fmsub.s f21, f2, f3, f12, rmm # perform operation
fmsub.s f21, f2, f3, f12, rne # perform operation
fmsub.s f21, f2, f3, f12, rtz # perform operation
fmsub.s f21, f2, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xd0f0a5307215f9e0 # load x3 with value 0xd0f0a5307215f9e0
sw x3, 0(x2) # store 0xd0f0a5307215f9e0 in memory
flw f17, 0(x2) # load 0xd0f0a5307215f9e0 from memory into f17
fmsub.s f9, f14, f31, f17, dyn # perform operation
fmsub.s f9, f14, f31, f17, rdn # perform operation
fmsub.s f9, f14, f31, f17, rmm # perform operation
fmsub.s f9, f14, f31, f17, rne # perform operation
fmsub.s f9, f14, f31, f17, rtz # perform operation
fmsub.s f9, f14, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f14, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f14, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f14, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f14, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f14, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xd87e2ef970e6849e # load x3 with value 0xd87e2ef970e6849e
sw x3, 0(x2) # store 0xd87e2ef970e6849e in memory
flw f29, 0(x2) # load 0xd87e2ef970e6849e from memory into f29
fmsub.s f30, f2, f25, f29, dyn # perform operation
fmsub.s f30, f2, f25, f29, rdn # perform operation
fmsub.s f30, f2, f25, f29, rmm # perform operation
fmsub.s f30, f2, f25, f29, rne # perform operation
fmsub.s f30, f2, f25, f29, rtz # perform operation
fmsub.s f30, f2, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x4c95d5a92fe5b750 # load x3 with value 0x4c95d5a92fe5b750
sw x3, 0(x2) # store 0x4c95d5a92fe5b750 in memory
flw f27, 0(x2) # load 0x4c95d5a92fe5b750 from memory into f27
fmsub.s f10, f6, f29, f27, dyn # perform operation
fmsub.s f10, f6, f29, f27, rdn # perform operation
fmsub.s f10, f6, f29, f27, rmm # perform operation
fmsub.s f10, f6, f29, f27, rne # perform operation
fmsub.s f10, f6, f29, f27, rtz # perform operation
fmsub.s f10, f6, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x172073cc00a56a15 # load x3 with value 0x172073cc00a56a15
sw x3, 0(x2) # store 0x172073cc00a56a15 in memory
flw f24, 0(x2) # load 0x172073cc00a56a15 from memory into f24
fmsub.s f11, f13, f10, f24, dyn # perform operation
fmsub.s f11, f13, f10, f24, rdn # perform operation
fmsub.s f11, f13, f10, f24, rmm # perform operation
fmsub.s f11, f13, f10, f24, rne # perform operation
fmsub.s f11, f13, f10, f24, rtz # perform operation
fmsub.s f11, f13, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x2ec1163eb8b68f1a # load x3 with value 0x2ec1163eb8b68f1a
sw x3, 0(x2) # store 0x2ec1163eb8b68f1a in memory
flw f13, 0(x2) # load 0x2ec1163eb8b68f1a from memory into f13
fmsub.s f18, f12, f14, f13, dyn # perform operation
fmsub.s f18, f12, f14, f13, rdn # perform operation
fmsub.s f18, f12, f14, f13, rmm # perform operation
fmsub.s f18, f12, f14, f13, rne # perform operation
fmsub.s f18, f12, f14, f13, rtz # perform operation
fmsub.s f18, f12, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f12, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f12, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xecb0a098c4d25e23 # load x3 with value 0xecb0a098c4d25e23
sw x3, 0(x2) # store 0xecb0a098c4d25e23 in memory
flw f3, 0(x2) # load 0xecb0a098c4d25e23 from memory into f3
fmsub.s f10, f21, f14, f3, dyn # perform operation
fmsub.s f10, f21, f14, f3, rdn # perform operation
fmsub.s f10, f21, f14, f3, rmm # perform operation
fmsub.s f10, f21, f14, f3, rne # perform operation
fmsub.s f10, f21, f14, f3, rtz # perform operation
fmsub.s f10, f21, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x60d4316d35cb85c7 # load x3 with value 0x60d4316d35cb85c7
sw x3, 0(x2) # store 0x60d4316d35cb85c7 in memory
flw f25, 0(x2) # load 0x60d4316d35cb85c7 from memory into f25
fmsub.s f28, f20, f5, f25, dyn # perform operation
fmsub.s f28, f20, f5, f25, rdn # perform operation
fmsub.s f28, f20, f5, f25, rmm # perform operation
fmsub.s f28, f20, f5, f25, rne # perform operation
fmsub.s f28, f20, f5, f25, rtz # perform operation
fmsub.s f28, f20, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x59c746ace2b340f # load x3 with value 0x59c746ace2b340f
sw x3, 0(x2) # store 0x59c746ace2b340f in memory
flw f20, 0(x2) # load 0x59c746ace2b340f from memory into f20
fmsub.s f1, f11, f27, f20, dyn # perform operation
fmsub.s f1, f11, f27, f20, rdn # perform operation
fmsub.s f1, f11, f27, f20, rmm # perform operation
fmsub.s f1, f11, f27, f20, rne # perform operation
fmsub.s f1, f11, f27, f20, rtz # perform operation
fmsub.s f1, f11, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xbed3413444b325fa # load x3 with value 0xbed3413444b325fa
sw x3, 0(x2) # store 0xbed3413444b325fa in memory
flw f30, 0(x2) # load 0xbed3413444b325fa from memory into f30
fmsub.s f26, f3, f25, f30, dyn # perform operation
fmsub.s f26, f3, f25, f30, rdn # perform operation
fmsub.s f26, f3, f25, f30, rmm # perform operation
fmsub.s f26, f3, f25, f30, rne # perform operation
fmsub.s f26, f3, f25, f30, rtz # perform operation
fmsub.s f26, f3, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0xafa59a486d7065c1 # load x3 with value 0xafa59a486d7065c1
sw x3, 0(x2) # store 0xafa59a486d7065c1 in memory
flw f19, 0(x2) # load 0xafa59a486d7065c1 from memory into f19
fmsub.s f8, f27, f18, f19, dyn # perform operation
fmsub.s f8, f27, f18, f19, rdn # perform operation
fmsub.s f8, f27, f18, f19, rmm # perform operation
fmsub.s f8, f27, f18, f19, rne # perform operation
fmsub.s f8, f27, f18, f19, rtz # perform operation
fmsub.s f8, f27, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x5a96f753db619216 # load x3 with value 0x5a96f753db619216
sw x3, 0(x2) # store 0x5a96f753db619216 in memory
flw f19, 0(x2) # load 0x5a96f753db619216 from memory into f19
fmsub.s f15, f17, f25, f19, dyn # perform operation
fmsub.s f15, f17, f25, f19, rdn # perform operation
fmsub.s f15, f17, f25, f19, rmm # perform operation
fmsub.s f15, f17, f25, f19, rne # perform operation
fmsub.s f15, f17, f25, f19, rtz # perform operation
fmsub.s f15, f17, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x8a4e6017ce9b0eb3 # load x3 with value 0x8a4e6017ce9b0eb3
sw x3, 0(x2) # store 0x8a4e6017ce9b0eb3 in memory
flw f7, 0(x2) # load 0x8a4e6017ce9b0eb3 from memory into f7
fmsub.s f30, f24, f17, f7, dyn # perform operation
fmsub.s f30, f24, f17, f7, rdn # perform operation
fmsub.s f30, f24, f17, f7, rmm # perform operation
fmsub.s f30, f24, f17, f7, rne # perform operation
fmsub.s f30, f24, f17, f7, rtz # perform operation
fmsub.s f30, f24, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f24, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f24, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x1bfdec4f36ff0bb # load x3 with value 0x1bfdec4f36ff0bb
sw x3, 0(x2) # store 0x1bfdec4f36ff0bb in memory
flw f11, 0(x2) # load 0x1bfdec4f36ff0bb from memory into f11
fmsub.s f16, f29, f19, f11, dyn # perform operation
fmsub.s f16, f29, f19, f11, rdn # perform operation
fmsub.s f16, f29, f19, f11, rmm # perform operation
fmsub.s f16, f29, f19, f11, rne # perform operation
fmsub.s f16, f29, f19, f11, rtz # perform operation
fmsub.s f16, f29, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x6a90c286ef77eb9a # load x3 with value 0x6a90c286ef77eb9a
sw x3, 0(x2) # store 0x6a90c286ef77eb9a in memory
flw f23, 0(x2) # load 0x6a90c286ef77eb9a from memory into f23
fmsub.s f11, f6, f25, f23, dyn # perform operation
fmsub.s f11, f6, f25, f23, rdn # perform operation
fmsub.s f11, f6, f25, f23, rmm # perform operation
fmsub.s f11, f6, f25, f23, rne # perform operation
fmsub.s f11, f6, f25, f23, rtz # perform operation
fmsub.s f11, f6, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x1b4ebc150ad82bd6 # load x3 with value 0x1b4ebc150ad82bd6
sw x3, 0(x2) # store 0x1b4ebc150ad82bd6 in memory
flw f5, 0(x2) # load 0x1b4ebc150ad82bd6 from memory into f5
fmsub.s f13, f31, f25, f5, dyn # perform operation
fmsub.s f13, f31, f25, f5, rdn # perform operation
fmsub.s f13, f31, f25, f5, rmm # perform operation
fmsub.s f13, f31, f25, f5, rne # perform operation
fmsub.s f13, f31, f25, f5, rtz # perform operation
fmsub.s f13, f31, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x4cb0f8be9bcc9760 # load x3 with value 0x4cb0f8be9bcc9760
sw x3, 0(x2) # store 0x4cb0f8be9bcc9760 in memory
flw f29, 0(x2) # load 0x4cb0f8be9bcc9760 from memory into f29
fmsub.s f5, f13, f12, f29, dyn # perform operation
fmsub.s f5, f13, f12, f29, rdn # perform operation
fmsub.s f5, f13, f12, f29, rmm # perform operation
fmsub.s f5, f13, f12, f29, rne # perform operation
fmsub.s f5, f13, f12, f29, rtz # perform operation
fmsub.s f5, f13, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f13, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f13, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f13, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f13, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f13, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xadb355148c27e515 # load x3 with value 0xadb355148c27e515
sw x3, 0(x2) # store 0xadb355148c27e515 in memory
flw f12, 0(x2) # load 0xadb355148c27e515 from memory into f12
fmsub.s f11, f7, f6, f12, dyn # perform operation
fmsub.s f11, f7, f6, f12, rdn # perform operation
fmsub.s f11, f7, f6, f12, rmm # perform operation
fmsub.s f11, f7, f6, f12, rne # perform operation
fmsub.s f11, f7, f6, f12, rtz # perform operation
fmsub.s f11, f7, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f7, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x879b2e32cc808f96 # load x3 with value 0x879b2e32cc808f96
sw x3, 0(x2) # store 0x879b2e32cc808f96 in memory
flw f19, 0(x2) # load 0x879b2e32cc808f96 from memory into f19
fmsub.s f24, f8, f1, f19, dyn # perform operation
fmsub.s f24, f8, f1, f19, rdn # perform operation
fmsub.s f24, f8, f1, f19, rmm # perform operation
fmsub.s f24, f8, f1, f19, rne # perform operation
fmsub.s f24, f8, f1, f19, rtz # perform operation
fmsub.s f24, f8, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x6c009dd1b090b21b # load x3 with value 0x6c009dd1b090b21b
sw x3, 0(x2) # store 0x6c009dd1b090b21b in memory
flw f28, 0(x2) # load 0x6c009dd1b090b21b from memory into f28
fmsub.s f3, f18, f6, f28, dyn # perform operation
fmsub.s f3, f18, f6, f28, rdn # perform operation
fmsub.s f3, f18, f6, f28, rmm # perform operation
fmsub.s f3, f18, f6, f28, rne # perform operation
fmsub.s f3, f18, f6, f28, rtz # perform operation
fmsub.s f3, f18, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f18, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f18, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x1b75ad41d81b0ac3 # load x3 with value 0x1b75ad41d81b0ac3
sw x3, 0(x2) # store 0x1b75ad41d81b0ac3 in memory
flw f24, 0(x2) # load 0x1b75ad41d81b0ac3 from memory into f24
fmsub.s f17, f28, f12, f24, dyn # perform operation
fmsub.s f17, f28, f12, f24, rdn # perform operation
fmsub.s f17, f28, f12, f24, rmm # perform operation
fmsub.s f17, f28, f12, f24, rne # perform operation
fmsub.s f17, f28, f12, f24, rtz # perform operation
fmsub.s f17, f28, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0xec5cdefc5c7252c3 # load x3 with value 0xec5cdefc5c7252c3
sw x3, 0(x2) # store 0xec5cdefc5c7252c3 in memory
flw f12, 0(x2) # load 0xec5cdefc5c7252c3 from memory into f12
fmsub.s f24, f31, f21, f12, dyn # perform operation
fmsub.s f24, f31, f21, f12, rdn # perform operation
fmsub.s f24, f31, f21, f12, rmm # perform operation
fmsub.s f24, f31, f21, f12, rne # perform operation
fmsub.s f24, f31, f21, f12, rtz # perform operation
fmsub.s f24, f31, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f31, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f31, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xb372ccacbda47048 # load x3 with value 0xb372ccacbda47048
sw x3, 0(x2) # store 0xb372ccacbda47048 in memory
flw f22, 0(x2) # load 0xb372ccacbda47048 from memory into f22
fmsub.s f20, f12, f25, f22, dyn # perform operation
fmsub.s f20, f12, f25, f22, rdn # perform operation
fmsub.s f20, f12, f25, f22, rmm # perform operation
fmsub.s f20, f12, f25, f22, rne # perform operation
fmsub.s f20, f12, f25, f22, rtz # perform operation
fmsub.s f20, f12, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f12, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f12, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xe250b3ff4e976926 # load x3 with value 0xe250b3ff4e976926
sw x3, 0(x2) # store 0xe250b3ff4e976926 in memory
flw f16, 0(x2) # load 0xe250b3ff4e976926 from memory into f16
fmsub.s f30, f7, f1, f16, dyn # perform operation
fmsub.s f30, f7, f1, f16, rdn # perform operation
fmsub.s f30, f7, f1, f16, rmm # perform operation
fmsub.s f30, f7, f1, f16, rne # perform operation
fmsub.s f30, f7, f1, f16, rtz # perform operation
fmsub.s f30, f7, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x263c25755e147d02 # load x3 with value 0x263c25755e147d02
sw x3, 0(x2) # store 0x263c25755e147d02 in memory
flw f28, 0(x2) # load 0x263c25755e147d02 from memory into f28
fmsub.s f2, f19, f6, f28, dyn # perform operation
fmsub.s f2, f19, f6, f28, rdn # perform operation
fmsub.s f2, f19, f6, f28, rmm # perform operation
fmsub.s f2, f19, f6, f28, rne # perform operation
fmsub.s f2, f19, f6, f28, rtz # perform operation
fmsub.s f2, f19, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f19, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0xacd5492db39c4b9e # load x3 with value 0xacd5492db39c4b9e
sw x3, 0(x2) # store 0xacd5492db39c4b9e in memory
flw f27, 0(x2) # load 0xacd5492db39c4b9e from memory into f27
fmsub.s f9, f18, f3, f27, dyn # perform operation
fmsub.s f9, f18, f3, f27, rdn # perform operation
fmsub.s f9, f18, f3, f27, rmm # perform operation
fmsub.s f9, f18, f3, f27, rne # perform operation
fmsub.s f9, f18, f3, f27, rtz # perform operation
fmsub.s f9, f18, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x54d8fac14aff407f # load x3 with value 0x54d8fac14aff407f
sw x3, 0(x2) # store 0x54d8fac14aff407f in memory
flw f26, 0(x2) # load 0x54d8fac14aff407f from memory into f26
fmsub.s f19, f24, f5, f26, dyn # perform operation
fmsub.s f19, f24, f5, f26, rdn # perform operation
fmsub.s f19, f24, f5, f26, rmm # perform operation
fmsub.s f19, f24, f5, f26, rne # perform operation
fmsub.s f19, f24, f5, f26, rtz # perform operation
fmsub.s f19, f24, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f24, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f24, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xd3c92d4bf1fa82d2 # load x3 with value 0xd3c92d4bf1fa82d2
sw x3, 0(x2) # store 0xd3c92d4bf1fa82d2 in memory
flw f5, 0(x2) # load 0xd3c92d4bf1fa82d2 from memory into f5
fmsub.s f7, f27, f6, f5, dyn # perform operation
fmsub.s f7, f27, f6, f5, rdn # perform operation
fmsub.s f7, f27, f6, f5, rmm # perform operation
fmsub.s f7, f27, f6, f5, rne # perform operation
fmsub.s f7, f27, f6, f5, rtz # perform operation
fmsub.s f7, f27, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f27, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f27, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f27, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f27, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f27, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x62f52a385f9b1471 # load x3 with value 0x62f52a385f9b1471
sw x3, 0(x2) # store 0x62f52a385f9b1471 in memory
flw f28, 0(x2) # load 0x62f52a385f9b1471 from memory into f28
fmsub.s f5, f8, f17, f28, dyn # perform operation
fmsub.s f5, f8, f17, f28, rdn # perform operation
fmsub.s f5, f8, f17, f28, rmm # perform operation
fmsub.s f5, f8, f17, f28, rne # perform operation
fmsub.s f5, f8, f17, f28, rtz # perform operation
fmsub.s f5, f8, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f8, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f8, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xa83beb1e8fc8c851 # load x3 with value 0xa83beb1e8fc8c851
sw x3, 0(x2) # store 0xa83beb1e8fc8c851 in memory
flw f18, 0(x2) # load 0xa83beb1e8fc8c851 from memory into f18
fmsub.s f8, f11, f16, f18, dyn # perform operation
fmsub.s f8, f11, f16, f18, rdn # perform operation
fmsub.s f8, f11, f16, f18, rmm # perform operation
fmsub.s f8, f11, f16, f18, rne # perform operation
fmsub.s f8, f11, f16, f18, rtz # perform operation
fmsub.s f8, f11, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x916368db1e68ec5c # load x3 with value 0x916368db1e68ec5c
sw x3, 0(x2) # store 0x916368db1e68ec5c in memory
flw f30, 0(x2) # load 0x916368db1e68ec5c from memory into f30
fmsub.s f31, f15, f14, f30, dyn # perform operation
fmsub.s f31, f15, f14, f30, rdn # perform operation
fmsub.s f31, f15, f14, f30, rmm # perform operation
fmsub.s f31, f15, f14, f30, rne # perform operation
fmsub.s f31, f15, f14, f30, rtz # perform operation
fmsub.s f31, f15, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x4e8995051818a6da # load x3 with value 0x4e8995051818a6da
sw x3, 0(x2) # store 0x4e8995051818a6da in memory
flw f11, 0(x2) # load 0x4e8995051818a6da from memory into f11
fmsub.s f28, f27, f18, f11, dyn # perform operation
fmsub.s f28, f27, f18, f11, rdn # perform operation
fmsub.s f28, f27, f18, f11, rmm # perform operation
fmsub.s f28, f27, f18, f11, rne # perform operation
fmsub.s f28, f27, f18, f11, rtz # perform operation
fmsub.s f28, f27, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f27, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f27, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x4697f9e23c9cf645 # load x3 with value 0x4697f9e23c9cf645
sw x3, 0(x2) # store 0x4697f9e23c9cf645 in memory
flw f23, 0(x2) # load 0x4697f9e23c9cf645 from memory into f23
fmsub.s f22, f11, f8, f23, dyn # perform operation
fmsub.s f22, f11, f8, f23, rdn # perform operation
fmsub.s f22, f11, f8, f23, rmm # perform operation
fmsub.s f22, f11, f8, f23, rne # perform operation
fmsub.s f22, f11, f8, f23, rtz # perform operation
fmsub.s f22, f11, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x3ab7e480cf751816 # load x3 with value 0x3ab7e480cf751816
sw x3, 0(x2) # store 0x3ab7e480cf751816 in memory
flw f13, 0(x2) # load 0x3ab7e480cf751816 from memory into f13
fmsub.s f22, f11, f25, f13, dyn # perform operation
fmsub.s f22, f11, f25, f13, rdn # perform operation
fmsub.s f22, f11, f25, f13, rmm # perform operation
fmsub.s f22, f11, f25, f13, rne # perform operation
fmsub.s f22, f11, f25, f13, rtz # perform operation
fmsub.s f22, f11, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xea1a5e7ba7199a6c # load x3 with value 0xea1a5e7ba7199a6c
sw x3, 0(x2) # store 0xea1a5e7ba7199a6c in memory
flw f17, 0(x2) # load 0xea1a5e7ba7199a6c from memory into f17
fmsub.s f18, f21, f23, f17, dyn # perform operation
fmsub.s f18, f21, f23, f17, rdn # perform operation
fmsub.s f18, f21, f23, f17, rmm # perform operation
fmsub.s f18, f21, f23, f17, rne # perform operation
fmsub.s f18, f21, f23, f17, rtz # perform operation
fmsub.s f18, f21, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0xd50e5fa1e843c6d3 # load x3 with value 0xd50e5fa1e843c6d3
sw x3, 0(x2) # store 0xd50e5fa1e843c6d3 in memory
flw f22, 0(x2) # load 0xd50e5fa1e843c6d3 from memory into f22
fmsub.s f6, f17, f20, f22, dyn # perform operation
fmsub.s f6, f17, f20, f22, rdn # perform operation
fmsub.s f6, f17, f20, f22, rmm # perform operation
fmsub.s f6, f17, f20, f22, rne # perform operation
fmsub.s f6, f17, f20, f22, rtz # perform operation
fmsub.s f6, f17, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xcbcb5cd3c9d78896 # load x3 with value 0xcbcb5cd3c9d78896
sw x3, 0(x2) # store 0xcbcb5cd3c9d78896 in memory
flw f1, 0(x2) # load 0xcbcb5cd3c9d78896 from memory into f1
fmsub.s f18, f27, f7, f1, dyn # perform operation
fmsub.s f18, f27, f7, f1, rdn # perform operation
fmsub.s f18, f27, f7, f1, rmm # perform operation
fmsub.s f18, f27, f7, f1, rne # perform operation
fmsub.s f18, f27, f7, f1, rtz # perform operation
fmsub.s f18, f27, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x1d62f6a06a9106f5 # load x3 with value 0x1d62f6a06a9106f5
sw x3, 0(x2) # store 0x1d62f6a06a9106f5 in memory
flw f20, 0(x2) # load 0x1d62f6a06a9106f5 from memory into f20
fmsub.s f24, f19, f13, f20, dyn # perform operation
fmsub.s f24, f19, f13, f20, rdn # perform operation
fmsub.s f24, f19, f13, f20, rmm # perform operation
fmsub.s f24, f19, f13, f20, rne # perform operation
fmsub.s f24, f19, f13, f20, rtz # perform operation
fmsub.s f24, f19, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f19, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f19, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xbab2c0516db2f3a8 # load x3 with value 0xbab2c0516db2f3a8
sw x3, 0(x2) # store 0xbab2c0516db2f3a8 in memory
flw f9, 0(x2) # load 0xbab2c0516db2f3a8 from memory into f9
fmsub.s f12, f23, f1, f9, dyn # perform operation
fmsub.s f12, f23, f1, f9, rdn # perform operation
fmsub.s f12, f23, f1, f9, rmm # perform operation
fmsub.s f12, f23, f1, f9, rne # perform operation
fmsub.s f12, f23, f1, f9, rtz # perform operation
fmsub.s f12, f23, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f23, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f23, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xbd0517d330c51e54 # load x3 with value 0xbd0517d330c51e54
sw x3, 0(x2) # store 0xbd0517d330c51e54 in memory
flw f16, 0(x2) # load 0xbd0517d330c51e54 from memory into f16
fmsub.s f23, f17, f7, f16, dyn # perform operation
fmsub.s f23, f17, f7, f16, rdn # perform operation
fmsub.s f23, f17, f7, f16, rmm # perform operation
fmsub.s f23, f17, f7, f16, rne # perform operation
fmsub.s f23, f17, f7, f16, rtz # perform operation
fmsub.s f23, f17, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x324b284513c8fde4 # load x3 with value 0x324b284513c8fde4
sw x3, 0(x2) # store 0x324b284513c8fde4 in memory
flw f27, 0(x2) # load 0x324b284513c8fde4 from memory into f27
fmsub.s f21, f11, f12, f27, dyn # perform operation
fmsub.s f21, f11, f12, f27, rdn # perform operation
fmsub.s f21, f11, f12, f27, rmm # perform operation
fmsub.s f21, f11, f12, f27, rne # perform operation
fmsub.s f21, f11, f12, f27, rtz # perform operation
fmsub.s f21, f11, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f11, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f11, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f11, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f11, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f11, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x166fb1b6d8f2f8ce # load x3 with value 0x166fb1b6d8f2f8ce
sw x3, 0(x2) # store 0x166fb1b6d8f2f8ce in memory
flw f29, 0(x2) # load 0x166fb1b6d8f2f8ce from memory into f29
fmsub.s f24, f8, f27, f29, dyn # perform operation
fmsub.s f24, f8, f27, f29, rdn # perform operation
fmsub.s f24, f8, f27, f29, rmm # perform operation
fmsub.s f24, f8, f27, f29, rne # perform operation
fmsub.s f24, f8, f27, f29, rtz # perform operation
fmsub.s f24, f8, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xa09026a0c91da2ac # load x3 with value 0xa09026a0c91da2ac
sw x3, 0(x2) # store 0xa09026a0c91da2ac in memory
flw f27, 0(x2) # load 0xa09026a0c91da2ac from memory into f27
fmsub.s f21, f6, f11, f27, dyn # perform operation
fmsub.s f21, f6, f11, f27, rdn # perform operation
fmsub.s f21, f6, f11, f27, rmm # perform operation
fmsub.s f21, f6, f11, f27, rne # perform operation
fmsub.s f21, f6, f11, f27, rtz # perform operation
fmsub.s f21, f6, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f6, f11, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x568bbdf83dfaba4d # load x3 with value 0x568bbdf83dfaba4d
sw x3, 0(x2) # store 0x568bbdf83dfaba4d in memory
flw f14, 0(x2) # load 0x568bbdf83dfaba4d from memory into f14
fmsub.s f15, f22, f20, f14, dyn # perform operation
fmsub.s f15, f22, f20, f14, rdn # perform operation
fmsub.s f15, f22, f20, f14, rmm # perform operation
fmsub.s f15, f22, f20, f14, rne # perform operation
fmsub.s f15, f22, f20, f14, rtz # perform operation
fmsub.s f15, f22, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f22, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xaf37dda788653cea # load x3 with value 0xaf37dda788653cea
sw x3, 0(x2) # store 0xaf37dda788653cea in memory
flw f1, 0(x2) # load 0xaf37dda788653cea from memory into f1
fmsub.s f30, f10, f13, f1, dyn # perform operation
fmsub.s f30, f10, f13, f1, rdn # perform operation
fmsub.s f30, f10, f13, f1, rmm # perform operation
fmsub.s f30, f10, f13, f1, rne # perform operation
fmsub.s f30, f10, f13, f1, rtz # perform operation
fmsub.s f30, f10, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xde752c8cbe1b85de # load x3 with value 0xde752c8cbe1b85de
sw x3, 0(x2) # store 0xde752c8cbe1b85de in memory
flw f18, 0(x2) # load 0xde752c8cbe1b85de from memory into f18
fmsub.s f17, f28, f22, f18, dyn # perform operation
fmsub.s f17, f28, f22, f18, rdn # perform operation
fmsub.s f17, f28, f22, f18, rmm # perform operation
fmsub.s f17, f28, f22, f18, rne # perform operation
fmsub.s f17, f28, f22, f18, rtz # perform operation
fmsub.s f17, f28, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xa82f121fe1b52479 # load x3 with value 0xa82f121fe1b52479
sw x3, 0(x2) # store 0xa82f121fe1b52479 in memory
flw f16, 0(x2) # load 0xa82f121fe1b52479 from memory into f16
fmsub.s f19, f30, f17, f16, dyn # perform operation
fmsub.s f19, f30, f17, f16, rdn # perform operation
fmsub.s f19, f30, f17, f16, rmm # perform operation
fmsub.s f19, f30, f17, f16, rne # perform operation
fmsub.s f19, f30, f17, f16, rtz # perform operation
fmsub.s f19, f30, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f30, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f30, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x9c368d99dea81caf # load x3 with value 0x9c368d99dea81caf
sw x3, 0(x2) # store 0x9c368d99dea81caf in memory
flw f6, 0(x2) # load 0x9c368d99dea81caf from memory into f6
fmsub.s f30, f1, f3, f6, dyn # perform operation
fmsub.s f30, f1, f3, f6, rdn # perform operation
fmsub.s f30, f1, f3, f6, rmm # perform operation
fmsub.s f30, f1, f3, f6, rne # perform operation
fmsub.s f30, f1, f3, f6, rtz # perform operation
fmsub.s f30, f1, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0xf8ace9bbff4534c0 # load x3 with value 0xf8ace9bbff4534c0
sw x3, 0(x2) # store 0xf8ace9bbff4534c0 in memory
flw f26, 0(x2) # load 0xf8ace9bbff4534c0 from memory into f26
fmsub.s f23, f12, f29, f26, dyn # perform operation
fmsub.s f23, f12, f29, f26, rdn # perform operation
fmsub.s f23, f12, f29, f26, rmm # perform operation
fmsub.s f23, f12, f29, f26, rne # perform operation
fmsub.s f23, f12, f29, f26, rtz # perform operation
fmsub.s f23, f12, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x4a804cf83c09ef44 # load x3 with value 0x4a804cf83c09ef44
sw x3, 0(x2) # store 0x4a804cf83c09ef44 in memory
flw f28, 0(x2) # load 0x4a804cf83c09ef44 from memory into f28
fmsub.s f15, f5, f7, f28, dyn # perform operation
fmsub.s f15, f5, f7, f28, rdn # perform operation
fmsub.s f15, f5, f7, f28, rmm # perform operation
fmsub.s f15, f5, f7, f28, rne # perform operation
fmsub.s f15, f5, f7, f28, rtz # perform operation
fmsub.s f15, f5, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x65cac93ae799a74d # load x3 with value 0x65cac93ae799a74d
sw x3, 0(x2) # store 0x65cac93ae799a74d in memory
flw f19, 0(x2) # load 0x65cac93ae799a74d from memory into f19
fmsub.s f1, f23, f20, f19, dyn # perform operation
fmsub.s f1, f23, f20, f19, rdn # perform operation
fmsub.s f1, f23, f20, f19, rmm # perform operation
fmsub.s f1, f23, f20, f19, rne # perform operation
fmsub.s f1, f23, f20, f19, rtz # perform operation
fmsub.s f1, f23, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f23, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0xf2f2dc45988ab232 # load x3 with value 0xf2f2dc45988ab232
sw x3, 0(x2) # store 0xf2f2dc45988ab232 in memory
flw f20, 0(x2) # load 0xf2f2dc45988ab232 from memory into f20
fmsub.s f16, f11, f25, f20, dyn # perform operation
fmsub.s f16, f11, f25, f20, rdn # perform operation
fmsub.s f16, f11, f25, f20, rmm # perform operation
fmsub.s f16, f11, f25, f20, rne # perform operation
fmsub.s f16, f11, f25, f20, rtz # perform operation
fmsub.s f16, f11, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f11, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f11, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x439e0903f4e53e7 # load x3 with value 0x439e0903f4e53e7
sw x3, 0(x2) # store 0x439e0903f4e53e7 in memory
flw f30, 0(x2) # load 0x439e0903f4e53e7 from memory into f30
fmsub.s f23, f11, f5, f30, dyn # perform operation
fmsub.s f23, f11, f5, f30, rdn # perform operation
fmsub.s f23, f11, f5, f30, rmm # perform operation
fmsub.s f23, f11, f5, f30, rne # perform operation
fmsub.s f23, f11, f5, f30, rtz # perform operation
fmsub.s f23, f11, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f11, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f11, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x24f22df5315d9695 # load x3 with value 0x24f22df5315d9695
sw x3, 0(x2) # store 0x24f22df5315d9695 in memory
flw f7, 0(x2) # load 0x24f22df5315d9695 from memory into f7
fmsub.s f5, f14, f3, f7, dyn # perform operation
fmsub.s f5, f14, f3, f7, rdn # perform operation
fmsub.s f5, f14, f3, f7, rmm # perform operation
fmsub.s f5, f14, f3, f7, rne # perform operation
fmsub.s f5, f14, f3, f7, rtz # perform operation
fmsub.s f5, f14, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x721f1ae10797e524 # load x3 with value 0x721f1ae10797e524
sw x3, 0(x2) # store 0x721f1ae10797e524 in memory
flw f8, 0(x2) # load 0x721f1ae10797e524 from memory into f8
fmsub.s f7, f17, f19, f8, dyn # perform operation
fmsub.s f7, f17, f19, f8, rdn # perform operation
fmsub.s f7, f17, f19, f8, rmm # perform operation
fmsub.s f7, f17, f19, f8, rne # perform operation
fmsub.s f7, f17, f19, f8, rtz # perform operation
fmsub.s f7, f17, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f17, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xf5b26d5843608e9f # load x3 with value 0xf5b26d5843608e9f
sw x3, 0(x2) # store 0xf5b26d5843608e9f in memory
flw f29, 0(x2) # load 0xf5b26d5843608e9f from memory into f29
fmsub.s f21, f7, f31, f29, dyn # perform operation
fmsub.s f21, f7, f31, f29, rdn # perform operation
fmsub.s f21, f7, f31, f29, rmm # perform operation
fmsub.s f21, f7, f31, f29, rne # perform operation
fmsub.s f21, f7, f31, f29, rtz # perform operation
fmsub.s f21, f7, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f7, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f7, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xa75ddd12d05423ad # load x3 with value 0xa75ddd12d05423ad
sw x3, 0(x2) # store 0xa75ddd12d05423ad in memory
flw f30, 0(x2) # load 0xa75ddd12d05423ad from memory into f30
fmsub.s f21, f14, f5, f30, dyn # perform operation
fmsub.s f21, f14, f5, f30, rdn # perform operation
fmsub.s f21, f14, f5, f30, rmm # perform operation
fmsub.s f21, f14, f5, f30, rne # perform operation
fmsub.s f21, f14, f5, f30, rtz # perform operation
fmsub.s f21, f14, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xf9684783801ce41 # load x3 with value 0xf9684783801ce41
sw x3, 0(x2) # store 0xf9684783801ce41 in memory
flw f9, 0(x2) # load 0xf9684783801ce41 from memory into f9
fmsub.s f19, f31, f12, f9, dyn # perform operation
fmsub.s f19, f31, f12, f9, rdn # perform operation
fmsub.s f19, f31, f12, f9, rmm # perform operation
fmsub.s f19, f31, f12, f9, rne # perform operation
fmsub.s f19, f31, f12, f9, rtz # perform operation
fmsub.s f19, f31, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f31, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f31, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xe5dd8bed22622b5d # load x3 with value 0xe5dd8bed22622b5d
sw x3, 0(x2) # store 0xe5dd8bed22622b5d in memory
flw f3, 0(x2) # load 0xe5dd8bed22622b5d from memory into f3
fmsub.s f29, f13, f2, f3, dyn # perform operation
fmsub.s f29, f13, f2, f3, rdn # perform operation
fmsub.s f29, f13, f2, f3, rmm # perform operation
fmsub.s f29, f13, f2, f3, rne # perform operation
fmsub.s f29, f13, f2, f3, rtz # perform operation
fmsub.s f29, f13, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x1eac5357bee9ca4b # load x3 with value 0x1eac5357bee9ca4b
sw x3, 0(x2) # store 0x1eac5357bee9ca4b in memory
flw f12, 0(x2) # load 0x1eac5357bee9ca4b from memory into f12
fmsub.s f18, f1, f3, f12, dyn # perform operation
fmsub.s f18, f1, f3, f12, rdn # perform operation
fmsub.s f18, f1, f3, f12, rmm # perform operation
fmsub.s f18, f1, f3, f12, rne # perform operation
fmsub.s f18, f1, f3, f12, rtz # perform operation
fmsub.s f18, f1, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f1, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x1cb1148627b33bdf # load x3 with value 0x1cb1148627b33bdf
sw x3, 0(x2) # store 0x1cb1148627b33bdf in memory
flw f24, 0(x2) # load 0x1cb1148627b33bdf from memory into f24
fmsub.s f11, f18, f8, f24, dyn # perform operation
fmsub.s f11, f18, f8, f24, rdn # perform operation
fmsub.s f11, f18, f8, f24, rmm # perform operation
fmsub.s f11, f18, f8, f24, rne # perform operation
fmsub.s f11, f18, f8, f24, rtz # perform operation
fmsub.s f11, f18, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f18, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f18, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x3fc4c338334278c5 # load x3 with value 0x3fc4c338334278c5
sw x3, 0(x2) # store 0x3fc4c338334278c5 in memory
flw f14, 0(x2) # load 0x3fc4c338334278c5 from memory into f14
fmsub.s f26, f8, f16, f14, dyn # perform operation
fmsub.s f26, f8, f16, f14, rdn # perform operation
fmsub.s f26, f8, f16, f14, rmm # perform operation
fmsub.s f26, f8, f16, f14, rne # perform operation
fmsub.s f26, f8, f16, f14, rtz # perform operation
fmsub.s f26, f8, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f8, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x3f625c48b2d457ee # load x3 with value 0x3f625c48b2d457ee
sw x3, 0(x2) # store 0x3f625c48b2d457ee in memory
flw f30, 0(x2) # load 0x3f625c48b2d457ee from memory into f30
fmsub.s f12, f20, f7, f30, dyn # perform operation
fmsub.s f12, f20, f7, f30, rdn # perform operation
fmsub.s f12, f20, f7, f30, rmm # perform operation
fmsub.s f12, f20, f7, f30, rne # perform operation
fmsub.s f12, f20, f7, f30, rtz # perform operation
fmsub.s f12, f20, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x63a31f23968ce7a5 # load x3 with value 0x63a31f23968ce7a5
sw x3, 0(x2) # store 0x63a31f23968ce7a5 in memory
flw f15, 0(x2) # load 0x63a31f23968ce7a5 from memory into f15
fmsub.s f10, f12, f25, f15, dyn # perform operation
fmsub.s f10, f12, f25, f15, rdn # perform operation
fmsub.s f10, f12, f25, f15, rmm # perform operation
fmsub.s f10, f12, f25, f15, rne # perform operation
fmsub.s f10, f12, f25, f15, rtz # perform operation
fmsub.s f10, f12, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x8b3ae34532c7355 # load x3 with value 0x8b3ae34532c7355
sw x3, 0(x2) # store 0x8b3ae34532c7355 in memory
flw f27, 0(x2) # load 0x8b3ae34532c7355 from memory into f27
fmsub.s f13, f5, f22, f27, dyn # perform operation
fmsub.s f13, f5, f22, f27, rdn # perform operation
fmsub.s f13, f5, f22, f27, rmm # perform operation
fmsub.s f13, f5, f22, f27, rne # perform operation
fmsub.s f13, f5, f22, f27, rtz # perform operation
fmsub.s f13, f5, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f5, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f5, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x8b56fdbeefbe3eeb # load x3 with value 0x8b56fdbeefbe3eeb
sw x3, 0(x2) # store 0x8b56fdbeefbe3eeb in memory
flw f15, 0(x2) # load 0x8b56fdbeefbe3eeb from memory into f15
fmsub.s f13, f2, f20, f15, dyn # perform operation
fmsub.s f13, f2, f20, f15, rdn # perform operation
fmsub.s f13, f2, f20, f15, rmm # perform operation
fmsub.s f13, f2, f20, f15, rne # perform operation
fmsub.s f13, f2, f20, f15, rtz # perform operation
fmsub.s f13, f2, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xc9da95ba3983dd1b # load x3 with value 0xc9da95ba3983dd1b
sw x3, 0(x2) # store 0xc9da95ba3983dd1b in memory
flw f9, 0(x2) # load 0xc9da95ba3983dd1b from memory into f9
fmsub.s f2, f19, f14, f9, dyn # perform operation
fmsub.s f2, f19, f14, f9, rdn # perform operation
fmsub.s f2, f19, f14, f9, rmm # perform operation
fmsub.s f2, f19, f14, f9, rne # perform operation
fmsub.s f2, f19, f14, f9, rtz # perform operation
fmsub.s f2, f19, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f19, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f19, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f19, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f19, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f19, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x47b58fd326007687 # load x3 with value 0x47b58fd326007687
sw x3, 0(x2) # store 0x47b58fd326007687 in memory
flw f5, 0(x2) # load 0x47b58fd326007687 from memory into f5
fmsub.s f26, f28, f6, f5, dyn # perform operation
fmsub.s f26, f28, f6, f5, rdn # perform operation
fmsub.s f26, f28, f6, f5, rmm # perform operation
fmsub.s f26, f28, f6, f5, rne # perform operation
fmsub.s f26, f28, f6, f5, rtz # perform operation
fmsub.s f26, f28, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f28, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x1763b0b6a2da6272 # load x3 with value 0x1763b0b6a2da6272
sw x3, 0(x2) # store 0x1763b0b6a2da6272 in memory
flw f13, 0(x2) # load 0x1763b0b6a2da6272 from memory into f13
fmsub.s f14, f21, f22, f13, dyn # perform operation
fmsub.s f14, f21, f22, f13, rdn # perform operation
fmsub.s f14, f21, f22, f13, rmm # perform operation
fmsub.s f14, f21, f22, f13, rne # perform operation
fmsub.s f14, f21, f22, f13, rtz # perform operation
fmsub.s f14, f21, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x99e59b0c656a957a # load x3 with value 0x99e59b0c656a957a
sw x3, 0(x2) # store 0x99e59b0c656a957a in memory
flw f11, 0(x2) # load 0x99e59b0c656a957a from memory into f11
fmsub.s f13, f28, f21, f11, dyn # perform operation
fmsub.s f13, f28, f21, f11, rdn # perform operation
fmsub.s f13, f28, f21, f11, rmm # perform operation
fmsub.s f13, f28, f21, f11, rne # perform operation
fmsub.s f13, f28, f21, f11, rtz # perform operation
fmsub.s f13, f28, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x696192be54abfcb6 # load x3 with value 0x696192be54abfcb6
sw x3, 0(x2) # store 0x696192be54abfcb6 in memory
flw f28, 0(x2) # load 0x696192be54abfcb6 from memory into f28
fmsub.s f6, f26, f9, f28, dyn # perform operation
fmsub.s f6, f26, f9, f28, rdn # perform operation
fmsub.s f6, f26, f9, f28, rmm # perform operation
fmsub.s f6, f26, f9, f28, rne # perform operation
fmsub.s f6, f26, f9, f28, rtz # perform operation
fmsub.s f6, f26, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x45375d48c14ccbd5 # load x3 with value 0x45375d48c14ccbd5
sw x3, 0(x2) # store 0x45375d48c14ccbd5 in memory
flw f5, 0(x2) # load 0x45375d48c14ccbd5 from memory into f5
fmsub.s f12, f15, f2, f5, dyn # perform operation
fmsub.s f12, f15, f2, f5, rdn # perform operation
fmsub.s f12, f15, f2, f5, rmm # perform operation
fmsub.s f12, f15, f2, f5, rne # perform operation
fmsub.s f12, f15, f2, f5, rtz # perform operation
fmsub.s f12, f15, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f15, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f15, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x24a9a8ad4083073d # load x3 with value 0x24a9a8ad4083073d
sw x3, 0(x2) # store 0x24a9a8ad4083073d in memory
flw f21, 0(x2) # load 0x24a9a8ad4083073d from memory into f21
fmsub.s f1, f3, f30, f21, dyn # perform operation
fmsub.s f1, f3, f30, f21, rdn # perform operation
fmsub.s f1, f3, f30, f21, rmm # perform operation
fmsub.s f1, f3, f30, f21, rne # perform operation
fmsub.s f1, f3, f30, f21, rtz # perform operation
fmsub.s f1, f3, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f3, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f3, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xe3d7ac6f50301bab # load x3 with value 0xe3d7ac6f50301bab
sw x3, 0(x2) # store 0xe3d7ac6f50301bab in memory
flw f3, 0(x2) # load 0xe3d7ac6f50301bab from memory into f3
fmsub.s f5, f21, f9, f3, dyn # perform operation
fmsub.s f5, f21, f9, f3, rdn # perform operation
fmsub.s f5, f21, f9, f3, rmm # perform operation
fmsub.s f5, f21, f9, f3, rne # perform operation
fmsub.s f5, f21, f9, f3, rtz # perform operation
fmsub.s f5, f21, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x769e7aaedcc09247 # load x3 with value 0x769e7aaedcc09247
sw x3, 0(x2) # store 0x769e7aaedcc09247 in memory
flw f28, 0(x2) # load 0x769e7aaedcc09247 from memory into f28
fmsub.s f26, f16, f25, f28, dyn # perform operation
fmsub.s f26, f16, f25, f28, rdn # perform operation
fmsub.s f26, f16, f25, f28, rmm # perform operation
fmsub.s f26, f16, f25, f28, rne # perform operation
fmsub.s f26, f16, f25, f28, rtz # perform operation
fmsub.s f26, f16, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f16, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f16, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x2dfc5122943bf349 # load x3 with value 0x2dfc5122943bf349
sw x3, 0(x2) # store 0x2dfc5122943bf349 in memory
flw f29, 0(x2) # load 0x2dfc5122943bf349 from memory into f29
fmsub.s f13, f18, f7, f29, dyn # perform operation
fmsub.s f13, f18, f7, f29, rdn # perform operation
fmsub.s f13, f18, f7, f29, rmm # perform operation
fmsub.s f13, f18, f7, f29, rne # perform operation
fmsub.s f13, f18, f7, f29, rtz # perform operation
fmsub.s f13, f18, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f18, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x3fed857d223bb211 # load x3 with value 0x3fed857d223bb211
sw x3, 0(x2) # store 0x3fed857d223bb211 in memory
flw f28, 0(x2) # load 0x3fed857d223bb211 from memory into f28
fmsub.s f17, f22, f7, f28, dyn # perform operation
fmsub.s f17, f22, f7, f28, rdn # perform operation
fmsub.s f17, f22, f7, f28, rmm # perform operation
fmsub.s f17, f22, f7, f28, rne # perform operation
fmsub.s f17, f22, f7, f28, rtz # perform operation
fmsub.s f17, f22, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x6c6cb7dfe0dec579 # load x3 with value 0x6c6cb7dfe0dec579
sw x3, 0(x2) # store 0x6c6cb7dfe0dec579 in memory
flw f14, 0(x2) # load 0x6c6cb7dfe0dec579 from memory into f14
fmsub.s f8, f5, f28, f14, dyn # perform operation
fmsub.s f8, f5, f28, f14, rdn # perform operation
fmsub.s f8, f5, f28, f14, rmm # perform operation
fmsub.s f8, f5, f28, f14, rne # perform operation
fmsub.s f8, f5, f28, f14, rtz # perform operation
fmsub.s f8, f5, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f28, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xe9be1a0d953263ba # load x3 with value 0xe9be1a0d953263ba
sw x3, 0(x2) # store 0xe9be1a0d953263ba in memory
flw f14, 0(x2) # load 0xe9be1a0d953263ba from memory into f14
fmsub.s f11, f13, f18, f14, dyn # perform operation
fmsub.s f11, f13, f18, f14, rdn # perform operation
fmsub.s f11, f13, f18, f14, rmm # perform operation
fmsub.s f11, f13, f18, f14, rne # perform operation
fmsub.s f11, f13, f18, f14, rtz # perform operation
fmsub.s f11, f13, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xba6b373c81f11e51 # load x3 with value 0xba6b373c81f11e51
sw x3, 0(x2) # store 0xba6b373c81f11e51 in memory
flw f26, 0(x2) # load 0xba6b373c81f11e51 from memory into f26
fmsub.s f19, f16, f27, f26, dyn # perform operation
fmsub.s f19, f16, f27, f26, rdn # perform operation
fmsub.s f19, f16, f27, f26, rmm # perform operation
fmsub.s f19, f16, f27, f26, rne # perform operation
fmsub.s f19, f16, f27, f26, rtz # perform operation
fmsub.s f19, f16, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xa82cb9793ff66d8 # load x3 with value 0xa82cb9793ff66d8
sw x3, 0(x2) # store 0xa82cb9793ff66d8 in memory
flw f11, 0(x2) # load 0xa82cb9793ff66d8 from memory into f11
fmsub.s f21, f28, f6, f11, dyn # perform operation
fmsub.s f21, f28, f6, f11, rdn # perform operation
fmsub.s f21, f28, f6, f11, rmm # perform operation
fmsub.s f21, f28, f6, f11, rne # perform operation
fmsub.s f21, f28, f6, f11, rtz # perform operation
fmsub.s f21, f28, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f28, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f28, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x6346a6b8dc1e8d1 # load x3 with value 0x6346a6b8dc1e8d1
sw x3, 0(x2) # store 0x6346a6b8dc1e8d1 in memory
flw f13, 0(x2) # load 0x6346a6b8dc1e8d1 from memory into f13
fmsub.s f3, f15, f2, f13, dyn # perform operation
fmsub.s f3, f15, f2, f13, rdn # perform operation
fmsub.s f3, f15, f2, f13, rmm # perform operation
fmsub.s f3, f15, f2, f13, rne # perform operation
fmsub.s f3, f15, f2, f13, rtz # perform operation
fmsub.s f3, f15, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x49f8c76582185369 # load x3 with value 0x49f8c76582185369
sw x3, 0(x2) # store 0x49f8c76582185369 in memory
flw f24, 0(x2) # load 0x49f8c76582185369 from memory into f24
fmsub.s f20, f7, f10, f24, dyn # perform operation
fmsub.s f20, f7, f10, f24, rdn # perform operation
fmsub.s f20, f7, f10, f24, rmm # perform operation
fmsub.s f20, f7, f10, f24, rne # perform operation
fmsub.s f20, f7, f10, f24, rtz # perform operation
fmsub.s f20, f7, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xf26ba166bdcfc482 # load x3 with value 0xf26ba166bdcfc482
sw x3, 0(x2) # store 0xf26ba166bdcfc482 in memory
flw f3, 0(x2) # load 0xf26ba166bdcfc482 from memory into f3
fmsub.s f16, f6, f28, f3, dyn # perform operation
fmsub.s f16, f6, f28, f3, rdn # perform operation
fmsub.s f16, f6, f28, f3, rmm # perform operation
fmsub.s f16, f6, f28, f3, rne # perform operation
fmsub.s f16, f6, f28, f3, rtz # perform operation
fmsub.s f16, f6, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f6, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f6, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f6, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f6, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f6, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x87336fa7d25ba05a # load x3 with value 0x87336fa7d25ba05a
sw x3, 0(x2) # store 0x87336fa7d25ba05a in memory
flw f12, 0(x2) # load 0x87336fa7d25ba05a from memory into f12
fmsub.s f26, f1, f16, f12, dyn # perform operation
fmsub.s f26, f1, f16, f12, rdn # perform operation
fmsub.s f26, f1, f16, f12, rmm # perform operation
fmsub.s f26, f1, f16, f12, rne # perform operation
fmsub.s f26, f1, f16, f12, rtz # perform operation
fmsub.s f26, f1, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f1, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f1, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f1, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f1, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f1, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0xee79d033db85b7ae # load x3 with value 0xee79d033db85b7ae
sw x3, 0(x2) # store 0xee79d033db85b7ae in memory
flw f31, 0(x2) # load 0xee79d033db85b7ae from memory into f31
fmsub.s f27, f26, f14, f31, dyn # perform operation
fmsub.s f27, f26, f14, f31, rdn # perform operation
fmsub.s f27, f26, f14, f31, rmm # perform operation
fmsub.s f27, f26, f14, f31, rne # perform operation
fmsub.s f27, f26, f14, f31, rtz # perform operation
fmsub.s f27, f26, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x28cd5a1973397518 # load x3 with value 0x28cd5a1973397518
sw x3, 0(x2) # store 0x28cd5a1973397518 in memory
flw f20, 0(x2) # load 0x28cd5a1973397518 from memory into f20
fmsub.s f9, f10, f28, f20, dyn # perform operation
fmsub.s f9, f10, f28, f20, rdn # perform operation
fmsub.s f9, f10, f28, f20, rmm # perform operation
fmsub.s f9, f10, f28, f20, rne # perform operation
fmsub.s f9, f10, f28, f20, rtz # perform operation
fmsub.s f9, f10, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x15b0deb25386a8b6 # load x3 with value 0x15b0deb25386a8b6
sw x3, 0(x2) # store 0x15b0deb25386a8b6 in memory
flw f6, 0(x2) # load 0x15b0deb25386a8b6 from memory into f6
fmsub.s f18, f13, f26, f6, dyn # perform operation
fmsub.s f18, f13, f26, f6, rdn # perform operation
fmsub.s f18, f13, f26, f6, rmm # perform operation
fmsub.s f18, f13, f26, f6, rne # perform operation
fmsub.s f18, f13, f26, f6, rtz # perform operation
fmsub.s f18, f13, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f13, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f13, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xb42c3a02496cc8a9 # load x3 with value 0xb42c3a02496cc8a9
sw x3, 0(x2) # store 0xb42c3a02496cc8a9 in memory
flw f22, 0(x2) # load 0xb42c3a02496cc8a9 from memory into f22
fmsub.s f24, f14, f30, f22, dyn # perform operation
fmsub.s f24, f14, f30, f22, rdn # perform operation
fmsub.s f24, f14, f30, f22, rmm # perform operation
fmsub.s f24, f14, f30, f22, rne # perform operation
fmsub.s f24, f14, f30, f22, rtz # perform operation
fmsub.s f24, f14, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f14, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f14, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f14, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f14, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f14, f30, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0xec59676eda636108 # load x3 with value 0xec59676eda636108
sw x3, 0(x2) # store 0xec59676eda636108 in memory
flw f23, 0(x2) # load 0xec59676eda636108 from memory into f23
fmsub.s f15, f24, f10, f23, dyn # perform operation
fmsub.s f15, f24, f10, f23, rdn # perform operation
fmsub.s f15, f24, f10, f23, rmm # perform operation
fmsub.s f15, f24, f10, f23, rne # perform operation
fmsub.s f15, f24, f10, f23, rtz # perform operation
fmsub.s f15, f24, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x849e30c3713fb516 # load x3 with value 0x849e30c3713fb516
sw x3, 0(x2) # store 0x849e30c3713fb516 in memory
flw f10, 0(x2) # load 0x849e30c3713fb516 from memory into f10
fmsub.s f14, f27, f20, f10, dyn # perform operation
fmsub.s f14, f27, f20, f10, rdn # perform operation
fmsub.s f14, f27, f20, f10, rmm # perform operation
fmsub.s f14, f27, f20, f10, rne # perform operation
fmsub.s f14, f27, f20, f10, rtz # perform operation
fmsub.s f14, f27, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x98a8143ed69ca378 # load x3 with value 0x98a8143ed69ca378
sw x3, 0(x2) # store 0x98a8143ed69ca378 in memory
flw f29, 0(x2) # load 0x98a8143ed69ca378 from memory into f29
fmsub.s f13, f24, f31, f29, dyn # perform operation
fmsub.s f13, f24, f31, f29, rdn # perform operation
fmsub.s f13, f24, f31, f29, rmm # perform operation
fmsub.s f13, f24, f31, f29, rne # perform operation
fmsub.s f13, f24, f31, f29, rtz # perform operation
fmsub.s f13, f24, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f31, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x5ac332f4e2b03757 # load x3 with value 0x5ac332f4e2b03757
sw x3, 0(x2) # store 0x5ac332f4e2b03757 in memory
flw f3, 0(x2) # load 0x5ac332f4e2b03757 from memory into f3
fmsub.s f31, f16, f25, f3, dyn # perform operation
fmsub.s f31, f16, f25, f3, rdn # perform operation
fmsub.s f31, f16, f25, f3, rmm # perform operation
fmsub.s f31, f16, f25, f3, rne # perform operation
fmsub.s f31, f16, f25, f3, rtz # perform operation
fmsub.s f31, f16, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f16, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xdf48e97ab34aa215 # load x3 with value 0xdf48e97ab34aa215
sw x3, 0(x2) # store 0xdf48e97ab34aa215 in memory
flw f11, 0(x2) # load 0xdf48e97ab34aa215 from memory into f11
fmsub.s f21, f20, f19, f11, dyn # perform operation
fmsub.s f21, f20, f19, f11, rdn # perform operation
fmsub.s f21, f20, f19, f11, rmm # perform operation
fmsub.s f21, f20, f19, f11, rne # perform operation
fmsub.s f21, f20, f19, f11, rtz # perform operation
fmsub.s f21, f20, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f20, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f20, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x27b3cfb5b6a3b708 # load x3 with value 0x27b3cfb5b6a3b708
sw x3, 0(x2) # store 0x27b3cfb5b6a3b708 in memory
flw f16, 0(x2) # load 0x27b3cfb5b6a3b708 from memory into f16
fmsub.s f22, f30, f27, f16, dyn # perform operation
fmsub.s f22, f30, f27, f16, rdn # perform operation
fmsub.s f22, f30, f27, f16, rmm # perform operation
fmsub.s f22, f30, f27, f16, rne # perform operation
fmsub.s f22, f30, f27, f16, rtz # perform operation
fmsub.s f22, f30, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x5bd05f923bd04fc1 # load x3 with value 0x5bd05f923bd04fc1
sw x3, 0(x2) # store 0x5bd05f923bd04fc1 in memory
flw f15, 0(x2) # load 0x5bd05f923bd04fc1 from memory into f15
fmsub.s f7, f17, f26, f15, dyn # perform operation
fmsub.s f7, f17, f26, f15, rdn # perform operation
fmsub.s f7, f17, f26, f15, rmm # perform operation
fmsub.s f7, f17, f26, f15, rne # perform operation
fmsub.s f7, f17, f26, f15, rtz # perform operation
fmsub.s f7, f17, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f17, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xcb25bcc98ecf2839 # load x3 with value 0xcb25bcc98ecf2839
sw x3, 0(x2) # store 0xcb25bcc98ecf2839 in memory
flw f22, 0(x2) # load 0xcb25bcc98ecf2839 from memory into f22
fmsub.s f20, f31, f15, f22, dyn # perform operation
fmsub.s f20, f31, f15, f22, rdn # perform operation
fmsub.s f20, f31, f15, f22, rmm # perform operation
fmsub.s f20, f31, f15, f22, rne # perform operation
fmsub.s f20, f31, f15, f22, rtz # perform operation
fmsub.s f20, f31, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xd0ade6b6836aafcb # load x3 with value 0xd0ade6b6836aafcb
sw x3, 0(x2) # store 0xd0ade6b6836aafcb in memory
flw f1, 0(x2) # load 0xd0ade6b6836aafcb from memory into f1
fmsub.s f9, f17, f21, f1, dyn # perform operation
fmsub.s f9, f17, f21, f1, rdn # perform operation
fmsub.s f9, f17, f21, f1, rmm # perform operation
fmsub.s f9, f17, f21, f1, rne # perform operation
fmsub.s f9, f17, f21, f1, rtz # perform operation
fmsub.s f9, f17, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f17, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f17, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x9e3361657c8945d6 # load x3 with value 0x9e3361657c8945d6
sw x3, 0(x2) # store 0x9e3361657c8945d6 in memory
flw f13, 0(x2) # load 0x9e3361657c8945d6 from memory into f13
fmsub.s f5, f31, f24, f13, dyn # perform operation
fmsub.s f5, f31, f24, f13, rdn # perform operation
fmsub.s f5, f31, f24, f13, rmm # perform operation
fmsub.s f5, f31, f24, f13, rne # perform operation
fmsub.s f5, f31, f24, f13, rtz # perform operation
fmsub.s f5, f31, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x57cb5058250326c1 # load x3 with value 0x57cb5058250326c1
sw x3, 0(x2) # store 0x57cb5058250326c1 in memory
flw f18, 0(x2) # load 0x57cb5058250326c1 from memory into f18
fmsub.s f7, f13, f22, f18, dyn # perform operation
fmsub.s f7, f13, f22, f18, rdn # perform operation
fmsub.s f7, f13, f22, f18, rmm # perform operation
fmsub.s f7, f13, f22, f18, rne # perform operation
fmsub.s f7, f13, f22, f18, rtz # perform operation
fmsub.s f7, f13, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f13, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f13, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x18cecd145d976e86 # load x3 with value 0x18cecd145d976e86
sw x3, 0(x2) # store 0x18cecd145d976e86 in memory
flw f30, 0(x2) # load 0x18cecd145d976e86 from memory into f30
fmsub.s f29, f12, f1, f30, dyn # perform operation
fmsub.s f29, f12, f1, f30, rdn # perform operation
fmsub.s f29, f12, f1, f30, rmm # perform operation
fmsub.s f29, f12, f1, f30, rne # perform operation
fmsub.s f29, f12, f1, f30, rtz # perform operation
fmsub.s f29, f12, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f12, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xc2cc1a32fbc313fc # load x3 with value 0xc2cc1a32fbc313fc
sw x3, 0(x2) # store 0xc2cc1a32fbc313fc in memory
flw f1, 0(x2) # load 0xc2cc1a32fbc313fc from memory into f1
fmsub.s f22, f26, f2, f1, dyn # perform operation
fmsub.s f22, f26, f2, f1, rdn # perform operation
fmsub.s f22, f26, f2, f1, rmm # perform operation
fmsub.s f22, f26, f2, f1, rne # perform operation
fmsub.s f22, f26, f2, f1, rtz # perform operation
fmsub.s f22, f26, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f2, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0xa571a2c41f117fd # load x3 with value 0xa571a2c41f117fd
sw x3, 0(x2) # store 0xa571a2c41f117fd in memory
flw f21, 0(x2) # load 0xa571a2c41f117fd from memory into f21
fmsub.s f11, f3, f14, f21, dyn # perform operation
fmsub.s f11, f3, f14, f21, rdn # perform operation
fmsub.s f11, f3, f14, f21, rmm # perform operation
fmsub.s f11, f3, f14, f21, rne # perform operation
fmsub.s f11, f3, f14, f21, rtz # perform operation
fmsub.s f11, f3, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f3, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f3, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x7f894967c533f62a # load x3 with value 0x7f894967c533f62a
sw x3, 0(x2) # store 0x7f894967c533f62a in memory
flw f15, 0(x2) # load 0x7f894967c533f62a from memory into f15
fmsub.s f31, f29, f18, f15, dyn # perform operation
fmsub.s f31, f29, f18, f15, rdn # perform operation
fmsub.s f31, f29, f18, f15, rmm # perform operation
fmsub.s f31, f29, f18, f15, rne # perform operation
fmsub.s f31, f29, f18, f15, rtz # perform operation
fmsub.s f31, f29, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f29, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f29, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f29, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f29, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f29, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x96ff5f16b2ea1f30 # load x3 with value 0x96ff5f16b2ea1f30
sw x3, 0(x2) # store 0x96ff5f16b2ea1f30 in memory
flw f19, 0(x2) # load 0x96ff5f16b2ea1f30 from memory into f19
fmsub.s f28, f22, f21, f19, dyn # perform operation
fmsub.s f28, f22, f21, f19, rdn # perform operation
fmsub.s f28, f22, f21, f19, rmm # perform operation
fmsub.s f28, f22, f21, f19, rne # perform operation
fmsub.s f28, f22, f21, f19, rtz # perform operation
fmsub.s f28, f22, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x95dedf512ffcf55e # load x3 with value 0x95dedf512ffcf55e
sw x3, 0(x2) # store 0x95dedf512ffcf55e in memory
flw f16, 0(x2) # load 0x95dedf512ffcf55e from memory into f16
fmsub.s f6, f3, f24, f16, dyn # perform operation
fmsub.s f6, f3, f24, f16, rdn # perform operation
fmsub.s f6, f3, f24, f16, rmm # perform operation
fmsub.s f6, f3, f24, f16, rne # perform operation
fmsub.s f6, f3, f24, f16, rtz # perform operation
fmsub.s f6, f3, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xfdccb1b73f3e9e77 # load x3 with value 0xfdccb1b73f3e9e77
sw x3, 0(x2) # store 0xfdccb1b73f3e9e77 in memory
flw f23, 0(x2) # load 0xfdccb1b73f3e9e77 from memory into f23
fmsub.s f12, f11, f25, f23, dyn # perform operation
fmsub.s f12, f11, f25, f23, rdn # perform operation
fmsub.s f12, f11, f25, f23, rmm # perform operation
fmsub.s f12, f11, f25, f23, rne # perform operation
fmsub.s f12, f11, f25, f23, rtz # perform operation
fmsub.s f12, f11, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xc7073cc96112c72c # load x3 with value 0xc7073cc96112c72c
sw x3, 0(x2) # store 0xc7073cc96112c72c in memory
flw f17, 0(x2) # load 0xc7073cc96112c72c from memory into f17
fmsub.s f22, f27, f31, f17, dyn # perform operation
fmsub.s f22, f27, f31, f17, rdn # perform operation
fmsub.s f22, f27, f31, f17, rmm # perform operation
fmsub.s f22, f27, f31, f17, rne # perform operation
fmsub.s f22, f27, f31, f17, rtz # perform operation
fmsub.s f22, f27, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f27, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xf0d4f9a37d292f17 # load x3 with value 0xf0d4f9a37d292f17
sw x3, 0(x2) # store 0xf0d4f9a37d292f17 in memory
flw f8, 0(x2) # load 0xf0d4f9a37d292f17 from memory into f8
fmsub.s f19, f30, f2, f8, dyn # perform operation
fmsub.s f19, f30, f2, f8, rdn # perform operation
fmsub.s f19, f30, f2, f8, rmm # perform operation
fmsub.s f19, f30, f2, f8, rne # perform operation
fmsub.s f19, f30, f2, f8, rtz # perform operation
fmsub.s f19, f30, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f30, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f30, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xefb664f3f297e163 # load x3 with value 0xefb664f3f297e163
sw x3, 0(x2) # store 0xefb664f3f297e163 in memory
flw f6, 0(x2) # load 0xefb664f3f297e163 from memory into f6
fmsub.s f10, f28, f26, f6, dyn # perform operation
fmsub.s f10, f28, f26, f6, rdn # perform operation
fmsub.s f10, f28, f26, f6, rmm # perform operation
fmsub.s f10, f28, f26, f6, rne # perform operation
fmsub.s f10, f28, f26, f6, rtz # perform operation
fmsub.s f10, f28, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x62b6cb1940f65b87 # load x3 with value 0x62b6cb1940f65b87
sw x3, 0(x2) # store 0x62b6cb1940f65b87 in memory
flw f30, 0(x2) # load 0x62b6cb1940f65b87 from memory into f30
fmsub.s f17, f14, f21, f30, dyn # perform operation
fmsub.s f17, f14, f21, f30, rdn # perform operation
fmsub.s f17, f14, f21, f30, rmm # perform operation
fmsub.s f17, f14, f21, f30, rne # perform operation
fmsub.s f17, f14, f21, f30, rtz # perform operation
fmsub.s f17, f14, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xbbf0211602a5824d # load x3 with value 0xbbf0211602a5824d
sw x3, 0(x2) # store 0xbbf0211602a5824d in memory
flw f11, 0(x2) # load 0xbbf0211602a5824d from memory into f11
fmsub.s f10, f27, f23, f11, dyn # perform operation
fmsub.s f10, f27, f23, f11, rdn # perform operation
fmsub.s f10, f27, f23, f11, rmm # perform operation
fmsub.s f10, f27, f23, f11, rne # perform operation
fmsub.s f10, f27, f23, f11, rtz # perform operation
fmsub.s f10, f27, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x444bcd25c81edbac # load x3 with value 0x444bcd25c81edbac
sw x3, 0(x2) # store 0x444bcd25c81edbac in memory
flw f22, 0(x2) # load 0x444bcd25c81edbac from memory into f22
fmsub.s f13, f17, f18, f22, dyn # perform operation
fmsub.s f13, f17, f18, f22, rdn # perform operation
fmsub.s f13, f17, f18, f22, rmm # perform operation
fmsub.s f13, f17, f18, f22, rne # perform operation
fmsub.s f13, f17, f18, f22, rtz # perform operation
fmsub.s f13, f17, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x901ba4ef3c97447c # load x3 with value 0x901ba4ef3c97447c
sw x3, 0(x2) # store 0x901ba4ef3c97447c in memory
flw f13, 0(x2) # load 0x901ba4ef3c97447c from memory into f13
fmsub.s f24, f21, f6, f13, dyn # perform operation
fmsub.s f24, f21, f6, f13, rdn # perform operation
fmsub.s f24, f21, f6, f13, rmm # perform operation
fmsub.s f24, f21, f6, f13, rne # perform operation
fmsub.s f24, f21, f6, f13, rtz # perform operation
fmsub.s f24, f21, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f21, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x9e52050d439a41e2 # load x3 with value 0x9e52050d439a41e2
sw x3, 0(x2) # store 0x9e52050d439a41e2 in memory
flw f1, 0(x2) # load 0x9e52050d439a41e2 from memory into f1
fmsub.s f17, f31, f29, f1, dyn # perform operation
fmsub.s f17, f31, f29, f1, rdn # perform operation
fmsub.s f17, f31, f29, f1, rmm # perform operation
fmsub.s f17, f31, f29, f1, rne # perform operation
fmsub.s f17, f31, f29, f1, rtz # perform operation
fmsub.s f17, f31, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f31, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f31, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f31, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f31, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f31, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x173303ccb89cbbaa # load x3 with value 0x173303ccb89cbbaa
sw x3, 0(x2) # store 0x173303ccb89cbbaa in memory
flw f15, 0(x2) # load 0x173303ccb89cbbaa from memory into f15
fmsub.s f7, f23, f20, f15, dyn # perform operation
fmsub.s f7, f23, f20, f15, rdn # perform operation
fmsub.s f7, f23, f20, f15, rmm # perform operation
fmsub.s f7, f23, f20, f15, rne # perform operation
fmsub.s f7, f23, f20, f15, rtz # perform operation
fmsub.s f7, f23, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f23, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f23, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x71329fb393fc9495 # load x3 with value 0x71329fb393fc9495
sw x3, 0(x2) # store 0x71329fb393fc9495 in memory
flw f3, 0(x2) # load 0x71329fb393fc9495 from memory into f3
fmsub.s f9, f31, f13, f3, dyn # perform operation
fmsub.s f9, f31, f13, f3, rdn # perform operation
fmsub.s f9, f31, f13, f3, rmm # perform operation
fmsub.s f9, f31, f13, f3, rne # perform operation
fmsub.s f9, f31, f13, f3, rtz # perform operation
fmsub.s f9, f31, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xefaf5f6cebffff77 # load x3 with value 0xefaf5f6cebffff77
sw x3, 0(x2) # store 0xefaf5f6cebffff77 in memory
flw f9, 0(x2) # load 0xefaf5f6cebffff77 from memory into f9
fmsub.s f17, f11, f18, f9, dyn # perform operation
fmsub.s f17, f11, f18, f9, rdn # perform operation
fmsub.s f17, f11, f18, f9, rmm # perform operation
fmsub.s f17, f11, f18, f9, rne # perform operation
fmsub.s f17, f11, f18, f9, rtz # perform operation
fmsub.s f17, f11, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f11, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f11, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x3f204307cc9d9d76 # load x3 with value 0x3f204307cc9d9d76
sw x3, 0(x2) # store 0x3f204307cc9d9d76 in memory
flw f16, 0(x2) # load 0x3f204307cc9d9d76 from memory into f16
fmsub.s f14, f19, f10, f16, dyn # perform operation
fmsub.s f14, f19, f10, f16, rdn # perform operation
fmsub.s f14, f19, f10, f16, rmm # perform operation
fmsub.s f14, f19, f10, f16, rne # perform operation
fmsub.s f14, f19, f10, f16, rtz # perform operation
fmsub.s f14, f19, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f19, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f19, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xfed4a7bf020dc078 # load x3 with value 0xfed4a7bf020dc078
sw x3, 0(x2) # store 0xfed4a7bf020dc078 in memory
flw f2, 0(x2) # load 0xfed4a7bf020dc078 from memory into f2
fmsub.s f11, f9, f16, f2, dyn # perform operation
fmsub.s f11, f9, f16, f2, rdn # perform operation
fmsub.s f11, f9, f16, f2, rmm # perform operation
fmsub.s f11, f9, f16, f2, rne # perform operation
fmsub.s f11, f9, f16, f2, rtz # perform operation
fmsub.s f11, f9, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xb0cfec28adf133d4 # load x3 with value 0xb0cfec28adf133d4
sw x3, 0(x2) # store 0xb0cfec28adf133d4 in memory
flw f16, 0(x2) # load 0xb0cfec28adf133d4 from memory into f16
fmsub.s f21, f7, f29, f16, dyn # perform operation
fmsub.s f21, f7, f29, f16, rdn # perform operation
fmsub.s f21, f7, f29, f16, rmm # perform operation
fmsub.s f21, f7, f29, f16, rne # perform operation
fmsub.s f21, f7, f29, f16, rtz # perform operation
fmsub.s f21, f7, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f7, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xfef94bf2f7aaa457 # load x3 with value 0xfef94bf2f7aaa457
sw x3, 0(x2) # store 0xfef94bf2f7aaa457 in memory
flw f9, 0(x2) # load 0xfef94bf2f7aaa457 from memory into f9
fmsub.s f21, f16, f24, f9, dyn # perform operation
fmsub.s f21, f16, f24, f9, rdn # perform operation
fmsub.s f21, f16, f24, f9, rmm # perform operation
fmsub.s f21, f16, f24, f9, rne # perform operation
fmsub.s f21, f16, f24, f9, rtz # perform operation
fmsub.s f21, f16, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x6f734581de762db6 # load x3 with value 0x6f734581de762db6
sw x3, 0(x2) # store 0x6f734581de762db6 in memory
flw f20, 0(x2) # load 0x6f734581de762db6 from memory into f20
fmsub.s f22, f11, f19, f20, dyn # perform operation
fmsub.s f22, f11, f19, f20, rdn # perform operation
fmsub.s f22, f11, f19, f20, rmm # perform operation
fmsub.s f22, f11, f19, f20, rne # perform operation
fmsub.s f22, f11, f19, f20, rtz # perform operation
fmsub.s f22, f11, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x98d2edc029fd04dd # load x3 with value 0x98d2edc029fd04dd
sw x3, 0(x2) # store 0x98d2edc029fd04dd in memory
flw f14, 0(x2) # load 0x98d2edc029fd04dd from memory into f14
fmsub.s f20, f26, f22, f14, dyn # perform operation
fmsub.s f20, f26, f22, f14, rdn # perform operation
fmsub.s f20, f26, f22, f14, rmm # perform operation
fmsub.s f20, f26, f22, f14, rne # perform operation
fmsub.s f20, f26, f22, f14, rtz # perform operation
fmsub.s f20, f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f26, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x83e2deecd8ddb32d # load x3 with value 0x83e2deecd8ddb32d
sw x3, 0(x2) # store 0x83e2deecd8ddb32d in memory
flw f18, 0(x2) # load 0x83e2deecd8ddb32d from memory into f18
fmsub.s f29, f16, f30, f18, dyn # perform operation
fmsub.s f29, f16, f30, f18, rdn # perform operation
fmsub.s f29, f16, f30, f18, rmm # perform operation
fmsub.s f29, f16, f30, f18, rne # perform operation
fmsub.s f29, f16, f30, f18, rtz # perform operation
fmsub.s f29, f16, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x8ec0551de355c5d8 # load x3 with value 0x8ec0551de355c5d8
sw x3, 0(x2) # store 0x8ec0551de355c5d8 in memory
flw f25, 0(x2) # load 0x8ec0551de355c5d8 from memory into f25
fmsub.s f2, f21, f31, f25, dyn # perform operation
fmsub.s f2, f21, f31, f25, rdn # perform operation
fmsub.s f2, f21, f31, f25, rmm # perform operation
fmsub.s f2, f21, f31, f25, rne # perform operation
fmsub.s f2, f21, f31, f25, rtz # perform operation
fmsub.s f2, f21, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xd276a7b14d87eedb # load x3 with value 0xd276a7b14d87eedb
sw x3, 0(x2) # store 0xd276a7b14d87eedb in memory
flw f8, 0(x2) # load 0xd276a7b14d87eedb from memory into f8
fmsub.s f20, f14, f29, f8, dyn # perform operation
fmsub.s f20, f14, f29, f8, rdn # perform operation
fmsub.s f20, f14, f29, f8, rmm # perform operation
fmsub.s f20, f14, f29, f8, rne # perform operation
fmsub.s f20, f14, f29, f8, rtz # perform operation
fmsub.s f20, f14, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f14, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f14, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xde36e02626c8d5f2 # load x3 with value 0xde36e02626c8d5f2
sw x3, 0(x2) # store 0xde36e02626c8d5f2 in memory
flw f28, 0(x2) # load 0xde36e02626c8d5f2 from memory into f28
fmsub.s f2, f7, f29, f28, dyn # perform operation
fmsub.s f2, f7, f29, f28, rdn # perform operation
fmsub.s f2, f7, f29, f28, rmm # perform operation
fmsub.s f2, f7, f29, f28, rne # perform operation
fmsub.s f2, f7, f29, f28, rtz # perform operation
fmsub.s f2, f7, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x9a92a921d1788c3b # load x3 with value 0x9a92a921d1788c3b
sw x3, 0(x2) # store 0x9a92a921d1788c3b in memory
flw f23, 0(x2) # load 0x9a92a921d1788c3b from memory into f23
fmsub.s f17, f5, f27, f23, dyn # perform operation
fmsub.s f17, f5, f27, f23, rdn # perform operation
fmsub.s f17, f5, f27, f23, rmm # perform operation
fmsub.s f17, f5, f27, f23, rne # perform operation
fmsub.s f17, f5, f27, f23, rtz # perform operation
fmsub.s f17, f5, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xe7e12dbace867341 # load x3 with value 0xe7e12dbace867341
sw x3, 0(x2) # store 0xe7e12dbace867341 in memory
flw f21, 0(x2) # load 0xe7e12dbace867341 from memory into f21
fmsub.s f10, f23, f7, f21, dyn # perform operation
fmsub.s f10, f23, f7, f21, rdn # perform operation
fmsub.s f10, f23, f7, f21, rmm # perform operation
fmsub.s f10, f23, f7, f21, rne # perform operation
fmsub.s f10, f23, f7, f21, rtz # perform operation
fmsub.s f10, f23, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xc15aeb3c13cb6818 # load x3 with value 0xc15aeb3c13cb6818
sw x3, 0(x2) # store 0xc15aeb3c13cb6818 in memory
flw f22, 0(x2) # load 0xc15aeb3c13cb6818 from memory into f22
fmsub.s f27, f16, f12, f22, dyn # perform operation
fmsub.s f27, f16, f12, f22, rdn # perform operation
fmsub.s f27, f16, f12, f22, rmm # perform operation
fmsub.s f27, f16, f12, f22, rne # perform operation
fmsub.s f27, f16, f12, f22, rtz # perform operation
fmsub.s f27, f16, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xdeb027ffb3ab9fd9 # load x3 with value 0xdeb027ffb3ab9fd9
sw x3, 0(x2) # store 0xdeb027ffb3ab9fd9 in memory
flw f29, 0(x2) # load 0xdeb027ffb3ab9fd9 from memory into f29
fmsub.s f21, f10, f7, f29, dyn # perform operation
fmsub.s f21, f10, f7, f29, rdn # perform operation
fmsub.s f21, f10, f7, f29, rmm # perform operation
fmsub.s f21, f10, f7, f29, rne # perform operation
fmsub.s f21, f10, f7, f29, rtz # perform operation
fmsub.s f21, f10, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xbe10aa610222c9d1 # load x3 with value 0xbe10aa610222c9d1
sw x3, 0(x2) # store 0xbe10aa610222c9d1 in memory
flw f16, 0(x2) # load 0xbe10aa610222c9d1 from memory into f16
fmsub.s f5, f25, f15, f16, dyn # perform operation
fmsub.s f5, f25, f15, f16, rdn # perform operation
fmsub.s f5, f25, f15, f16, rmm # perform operation
fmsub.s f5, f25, f15, f16, rne # perform operation
fmsub.s f5, f25, f15, f16, rtz # perform operation
fmsub.s f5, f25, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f25, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f25, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f25, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f25, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f25, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x47d6dace0c7f808e # load x3 with value 0x47d6dace0c7f808e
sw x3, 0(x2) # store 0x47d6dace0c7f808e in memory
flw f12, 0(x2) # load 0x47d6dace0c7f808e from memory into f12
fmsub.s f29, f19, f16, f12, dyn # perform operation
fmsub.s f29, f19, f16, f12, rdn # perform operation
fmsub.s f29, f19, f16, f12, rmm # perform operation
fmsub.s f29, f19, f16, f12, rne # perform operation
fmsub.s f29, f19, f16, f12, rtz # perform operation
fmsub.s f29, f19, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x9ed772b1ba14e2fe # load x3 with value 0x9ed772b1ba14e2fe
sw x3, 0(x2) # store 0x9ed772b1ba14e2fe in memory
flw f15, 0(x2) # load 0x9ed772b1ba14e2fe from memory into f15
fmsub.s f13, f31, f24, f15, dyn # perform operation
fmsub.s f13, f31, f24, f15, rdn # perform operation
fmsub.s f13, f31, f24, f15, rmm # perform operation
fmsub.s f13, f31, f24, f15, rne # perform operation
fmsub.s f13, f31, f24, f15, rtz # perform operation
fmsub.s f13, f31, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x17d82854f4f8c5c1 # load x3 with value 0x17d82854f4f8c5c1
sw x3, 0(x2) # store 0x17d82854f4f8c5c1 in memory
flw f12, 0(x2) # load 0x17d82854f4f8c5c1 from memory into f12
fmsub.s f23, f28, f22, f12, dyn # perform operation
fmsub.s f23, f28, f22, f12, rdn # perform operation
fmsub.s f23, f28, f22, f12, rmm # perform operation
fmsub.s f23, f28, f22, f12, rne # perform operation
fmsub.s f23, f28, f22, f12, rtz # perform operation
fmsub.s f23, f28, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f28, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f28, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f28, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f28, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f28, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x88ffe2e69ee8447f # load x3 with value 0x88ffe2e69ee8447f
sw x3, 0(x2) # store 0x88ffe2e69ee8447f in memory
flw f30, 0(x2) # load 0x88ffe2e69ee8447f from memory into f30
fmsub.s f17, f29, f8, f30, dyn # perform operation
fmsub.s f17, f29, f8, f30, rdn # perform operation
fmsub.s f17, f29, f8, f30, rmm # perform operation
fmsub.s f17, f29, f8, f30, rne # perform operation
fmsub.s f17, f29, f8, f30, rtz # perform operation
fmsub.s f17, f29, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f29, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f29, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0xfcb7cb735187e58d # load x3 with value 0xfcb7cb735187e58d
sw x3, 0(x2) # store 0xfcb7cb735187e58d in memory
flw f2, 0(x2) # load 0xfcb7cb735187e58d from memory into f2
fmsub.s f15, f26, f6, f2, dyn # perform operation
fmsub.s f15, f26, f6, f2, rdn # perform operation
fmsub.s f15, f26, f6, f2, rmm # perform operation
fmsub.s f15, f26, f6, f2, rne # perform operation
fmsub.s f15, f26, f6, f2, rtz # perform operation
fmsub.s f15, f26, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f26, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f26, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f26, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f26, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f26, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x5f08367f57fd0782 # load x3 with value 0x5f08367f57fd0782
sw x3, 0(x2) # store 0x5f08367f57fd0782 in memory
flw f21, 0(x2) # load 0x5f08367f57fd0782 from memory into f21
fmsub.s f22, f23, f17, f21, dyn # perform operation
fmsub.s f22, f23, f17, f21, rdn # perform operation
fmsub.s f22, f23, f17, f21, rmm # perform operation
fmsub.s f22, f23, f17, f21, rne # perform operation
fmsub.s f22, f23, f17, f21, rtz # perform operation
fmsub.s f22, f23, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x26550d0a66fa0298 # load x3 with value 0x26550d0a66fa0298
sw x3, 0(x2) # store 0x26550d0a66fa0298 in memory
flw f3, 0(x2) # load 0x26550d0a66fa0298 from memory into f3
fmsub.s f12, f31, f16, f3, dyn # perform operation
fmsub.s f12, f31, f16, f3, rdn # perform operation
fmsub.s f12, f31, f16, f3, rmm # perform operation
fmsub.s f12, f31, f16, f3, rne # perform operation
fmsub.s f12, f31, f16, f3, rtz # perform operation
fmsub.s f12, f31, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f31, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f31, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f31, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f31, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f31, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0xf3aefe899bfbc4f4 # load x3 with value 0xf3aefe899bfbc4f4
sw x3, 0(x2) # store 0xf3aefe899bfbc4f4 in memory
flw f15, 0(x2) # load 0xf3aefe899bfbc4f4 from memory into f15
fmsub.s f7, f20, f16, f15, dyn # perform operation
fmsub.s f7, f20, f16, f15, rdn # perform operation
fmsub.s f7, f20, f16, f15, rmm # perform operation
fmsub.s f7, f20, f16, f15, rne # perform operation
fmsub.s f7, f20, f16, f15, rtz # perform operation
fmsub.s f7, f20, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xab4e713fff2742c6 # load x3 with value 0xab4e713fff2742c6
sw x3, 0(x2) # store 0xab4e713fff2742c6 in memory
flw f27, 0(x2) # load 0xab4e713fff2742c6 from memory into f27
fmsub.s f10, f5, f18, f27, dyn # perform operation
fmsub.s f10, f5, f18, f27, rdn # perform operation
fmsub.s f10, f5, f18, f27, rmm # perform operation
fmsub.s f10, f5, f18, f27, rne # perform operation
fmsub.s f10, f5, f18, f27, rtz # perform operation
fmsub.s f10, f5, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x5c5d379920d19687 # load x3 with value 0x5c5d379920d19687
sw x3, 0(x2) # store 0x5c5d379920d19687 in memory
flw f15, 0(x2) # load 0x5c5d379920d19687 from memory into f15
fmsub.s f12, f5, f30, f15, dyn # perform operation
fmsub.s f12, f5, f30, f15, rdn # perform operation
fmsub.s f12, f5, f30, f15, rmm # perform operation
fmsub.s f12, f5, f30, f15, rne # perform operation
fmsub.s f12, f5, f30, f15, rtz # perform operation
fmsub.s f12, f5, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f5, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f5, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x4f915f0991815c22 # load x3 with value 0x4f915f0991815c22
sw x3, 0(x2) # store 0x4f915f0991815c22 in memory
flw f20, 0(x2) # load 0x4f915f0991815c22 from memory into f20
fmsub.s f11, f29, f18, f20, dyn # perform operation
fmsub.s f11, f29, f18, f20, rdn # perform operation
fmsub.s f11, f29, f18, f20, rmm # perform operation
fmsub.s f11, f29, f18, f20, rne # perform operation
fmsub.s f11, f29, f18, f20, rtz # perform operation
fmsub.s f11, f29, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f29, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x3ce7876da33238c8 # load x3 with value 0x3ce7876da33238c8
sw x3, 0(x2) # store 0x3ce7876da33238c8 in memory
flw f5, 0(x2) # load 0x3ce7876da33238c8 from memory into f5
fmsub.s f1, f19, f15, f5, dyn # perform operation
fmsub.s f1, f19, f15, f5, rdn # perform operation
fmsub.s f1, f19, f15, f5, rmm # perform operation
fmsub.s f1, f19, f15, f5, rne # perform operation
fmsub.s f1, f19, f15, f5, rtz # perform operation
fmsub.s f1, f19, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0xcd3f4564d902dcbd # load x3 with value 0xcd3f4564d902dcbd
sw x3, 0(x2) # store 0xcd3f4564d902dcbd in memory
flw f5, 0(x2) # load 0xcd3f4564d902dcbd from memory into f5
fmsub.s f27, f18, f19, f5, dyn # perform operation
fmsub.s f27, f18, f19, f5, rdn # perform operation
fmsub.s f27, f18, f19, f5, rmm # perform operation
fmsub.s f27, f18, f19, f5, rne # perform operation
fmsub.s f27, f18, f19, f5, rtz # perform operation
fmsub.s f27, f18, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xb2376f1650faebb0 # load x3 with value 0xb2376f1650faebb0
sw x3, 0(x2) # store 0xb2376f1650faebb0 in memory
flw f22, 0(x2) # load 0xb2376f1650faebb0 from memory into f22
fmsub.s f11, f7, f29, f22, dyn # perform operation
fmsub.s f11, f7, f29, f22, rdn # perform operation
fmsub.s f11, f7, f29, f22, rmm # perform operation
fmsub.s f11, f7, f29, f22, rne # perform operation
fmsub.s f11, f7, f29, f22, rtz # perform operation
fmsub.s f11, f7, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f7, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x165a60fa3434530c # load x3 with value 0x165a60fa3434530c
sw x3, 0(x2) # store 0x165a60fa3434530c in memory
flw f27, 0(x2) # load 0x165a60fa3434530c from memory into f27
fmsub.s f11, f13, f10, f27, dyn # perform operation
fmsub.s f11, f13, f10, f27, rdn # perform operation
fmsub.s f11, f13, f10, f27, rmm # perform operation
fmsub.s f11, f13, f10, f27, rne # perform operation
fmsub.s f11, f13, f10, f27, rtz # perform operation
fmsub.s f11, f13, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xe1cb52de238f56db # load x3 with value 0xe1cb52de238f56db
sw x3, 0(x2) # store 0xe1cb52de238f56db in memory
flw f17, 0(x2) # load 0xe1cb52de238f56db from memory into f17
fmsub.s f1, f13, f8, f17, dyn # perform operation
fmsub.s f1, f13, f8, f17, rdn # perform operation
fmsub.s f1, f13, f8, f17, rmm # perform operation
fmsub.s f1, f13, f8, f17, rne # perform operation
fmsub.s f1, f13, f8, f17, rtz # perform operation
fmsub.s f1, f13, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f13, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xb92a89bdbf2bfdd5 # load x3 with value 0xb92a89bdbf2bfdd5
sw x3, 0(x2) # store 0xb92a89bdbf2bfdd5 in memory
flw f13, 0(x2) # load 0xb92a89bdbf2bfdd5 from memory into f13
fmsub.s f29, f19, f25, f13, dyn # perform operation
fmsub.s f29, f19, f25, f13, rdn # perform operation
fmsub.s f29, f19, f25, f13, rmm # perform operation
fmsub.s f29, f19, f25, f13, rne # perform operation
fmsub.s f29, f19, f25, f13, rtz # perform operation
fmsub.s f29, f19, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xa1f8fa7178358c68 # load x3 with value 0xa1f8fa7178358c68
sw x3, 0(x2) # store 0xa1f8fa7178358c68 in memory
flw f31, 0(x2) # load 0xa1f8fa7178358c68 from memory into f31
fmsub.s f24, f17, f11, f31, dyn # perform operation
fmsub.s f24, f17, f11, f31, rdn # perform operation
fmsub.s f24, f17, f11, f31, rmm # perform operation
fmsub.s f24, f17, f11, f31, rne # perform operation
fmsub.s f24, f17, f11, f31, rtz # perform operation
fmsub.s f24, f17, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x7bb41cac812ef945 # load x3 with value 0x7bb41cac812ef945
sw x3, 0(x2) # store 0x7bb41cac812ef945 in memory
flw f20, 0(x2) # load 0x7bb41cac812ef945 from memory into f20
fmsub.s f23, f5, f31, f20, dyn # perform operation
fmsub.s f23, f5, f31, f20, rdn # perform operation
fmsub.s f23, f5, f31, f20, rmm # perform operation
fmsub.s f23, f5, f31, f20, rne # perform operation
fmsub.s f23, f5, f31, f20, rtz # perform operation
fmsub.s f23, f5, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xaf862b088b5d56d7 # load x3 with value 0xaf862b088b5d56d7
sw x3, 0(x2) # store 0xaf862b088b5d56d7 in memory
flw f14, 0(x2) # load 0xaf862b088b5d56d7 from memory into f14
fmsub.s f23, f24, f15, f14, dyn # perform operation
fmsub.s f23, f24, f15, f14, rdn # perform operation
fmsub.s f23, f24, f15, f14, rmm # perform operation
fmsub.s f23, f24, f15, f14, rne # perform operation
fmsub.s f23, f24, f15, f14, rtz # perform operation
fmsub.s f23, f24, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f15, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xef2e42ce4b095bab # load x3 with value 0xef2e42ce4b095bab
sw x3, 0(x2) # store 0xef2e42ce4b095bab in memory
flw f7, 0(x2) # load 0xef2e42ce4b095bab from memory into f7
fmsub.s f6, f8, f22, f7, dyn # perform operation
fmsub.s f6, f8, f22, f7, rdn # perform operation
fmsub.s f6, f8, f22, f7, rmm # perform operation
fmsub.s f6, f8, f22, f7, rne # perform operation
fmsub.s f6, f8, f22, f7, rtz # perform operation
fmsub.s f6, f8, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x7366dc7b552e5008 # load x3 with value 0x7366dc7b552e5008
sw x3, 0(x2) # store 0x7366dc7b552e5008 in memory
flw f20, 0(x2) # load 0x7366dc7b552e5008 from memory into f20
fmsub.s f24, f29, f31, f20, dyn # perform operation
fmsub.s f24, f29, f31, f20, rdn # perform operation
fmsub.s f24, f29, f31, f20, rmm # perform operation
fmsub.s f24, f29, f31, f20, rne # perform operation
fmsub.s f24, f29, f31, f20, rtz # perform operation
fmsub.s f24, f29, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0xc20d8cdc2454d425 # load x3 with value 0xc20d8cdc2454d425
sw x3, 0(x2) # store 0xc20d8cdc2454d425 in memory
flw f6, 0(x2) # load 0xc20d8cdc2454d425 from memory into f6
fmsub.s f26, f1, f7, f6, dyn # perform operation
fmsub.s f26, f1, f7, f6, rdn # perform operation
fmsub.s f26, f1, f7, f6, rmm # perform operation
fmsub.s f26, f1, f7, f6, rne # perform operation
fmsub.s f26, f1, f7, f6, rtz # perform operation
fmsub.s f26, f1, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f1, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x3f59f500706d8543 # load x3 with value 0x3f59f500706d8543
sw x3, 0(x2) # store 0x3f59f500706d8543 in memory
flw f26, 0(x2) # load 0x3f59f500706d8543 from memory into f26
fmsub.s f18, f6, f2, f26, dyn # perform operation
fmsub.s f18, f6, f2, f26, rdn # perform operation
fmsub.s f18, f6, f2, f26, rmm # perform operation
fmsub.s f18, f6, f2, f26, rne # perform operation
fmsub.s f18, f6, f2, f26, rtz # perform operation
fmsub.s f18, f6, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x319b7cec736e9100 # load x3 with value 0x319b7cec736e9100
sw x3, 0(x2) # store 0x319b7cec736e9100 in memory
flw f24, 0(x2) # load 0x319b7cec736e9100 from memory into f24
fmsub.s f1, f22, f31, f24, dyn # perform operation
fmsub.s f1, f22, f31, f24, rdn # perform operation
fmsub.s f1, f22, f31, f24, rmm # perform operation
fmsub.s f1, f22, f31, f24, rne # perform operation
fmsub.s f1, f22, f31, f24, rtz # perform operation
fmsub.s f1, f22, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x167aa9bee47e39f4 # load x3 with value 0x167aa9bee47e39f4
sw x3, 0(x2) # store 0x167aa9bee47e39f4 in memory
flw f21, 0(x2) # load 0x167aa9bee47e39f4 from memory into f21
fmsub.s f17, f28, f10, f21, dyn # perform operation
fmsub.s f17, f28, f10, f21, rdn # perform operation
fmsub.s f17, f28, f10, f21, rmm # perform operation
fmsub.s f17, f28, f10, f21, rne # perform operation
fmsub.s f17, f28, f10, f21, rtz # perform operation
fmsub.s f17, f28, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x1fb9479d7a119cdd # load x3 with value 0x1fb9479d7a119cdd
sw x3, 0(x2) # store 0x1fb9479d7a119cdd in memory
flw f11, 0(x2) # load 0x1fb9479d7a119cdd from memory into f11
fmsub.s f16, f13, f17, f11, dyn # perform operation
fmsub.s f16, f13, f17, f11, rdn # perform operation
fmsub.s f16, f13, f17, f11, rmm # perform operation
fmsub.s f16, f13, f17, f11, rne # perform operation
fmsub.s f16, f13, f17, f11, rtz # perform operation
fmsub.s f16, f13, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f13, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f13, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x246f242b07db157 # load x3 with value 0x246f242b07db157
sw x3, 0(x2) # store 0x246f242b07db157 in memory
flw f26, 0(x2) # load 0x246f242b07db157 from memory into f26
fmsub.s f25, f11, f9, f26, dyn # perform operation
fmsub.s f25, f11, f9, f26, rdn # perform operation
fmsub.s f25, f11, f9, f26, rmm # perform operation
fmsub.s f25, f11, f9, f26, rne # perform operation
fmsub.s f25, f11, f9, f26, rtz # perform operation
fmsub.s f25, f11, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xdca9080c63dd5e1f # load x3 with value 0xdca9080c63dd5e1f
sw x3, 0(x2) # store 0xdca9080c63dd5e1f in memory
flw f12, 0(x2) # load 0xdca9080c63dd5e1f from memory into f12
fmsub.s f31, f9, f3, f12, dyn # perform operation
fmsub.s f31, f9, f3, f12, rdn # perform operation
fmsub.s f31, f9, f3, f12, rmm # perform operation
fmsub.s f31, f9, f3, f12, rne # perform operation
fmsub.s f31, f9, f3, f12, rtz # perform operation
fmsub.s f31, f9, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xa4e002090a6f0c0c # load x3 with value 0xa4e002090a6f0c0c
sw x3, 0(x2) # store 0xa4e002090a6f0c0c in memory
flw f19, 0(x2) # load 0xa4e002090a6f0c0c from memory into f19
fmsub.s f28, f26, f17, f19, dyn # perform operation
fmsub.s f28, f26, f17, f19, rdn # perform operation
fmsub.s f28, f26, f17, f19, rmm # perform operation
fmsub.s f28, f26, f17, f19, rne # perform operation
fmsub.s f28, f26, f17, f19, rtz # perform operation
fmsub.s f28, f26, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x182cd392ae34acd4 # load x3 with value 0x182cd392ae34acd4
sw x3, 0(x2) # store 0x182cd392ae34acd4 in memory
flw f8, 0(x2) # load 0x182cd392ae34acd4 from memory into f8
fmsub.s f28, f20, f31, f8, dyn # perform operation
fmsub.s f28, f20, f31, f8, rdn # perform operation
fmsub.s f28, f20, f31, f8, rmm # perform operation
fmsub.s f28, f20, f31, f8, rne # perform operation
fmsub.s f28, f20, f31, f8, rtz # perform operation
fmsub.s f28, f20, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x8b475087eadd3fa5 # load x3 with value 0x8b475087eadd3fa5
sw x3, 0(x2) # store 0x8b475087eadd3fa5 in memory
flw f27, 0(x2) # load 0x8b475087eadd3fa5 from memory into f27
fmsub.s f18, f15, f24, f27, dyn # perform operation
fmsub.s f18, f15, f24, f27, rdn # perform operation
fmsub.s f18, f15, f24, f27, rmm # perform operation
fmsub.s f18, f15, f24, f27, rne # perform operation
fmsub.s f18, f15, f24, f27, rtz # perform operation
fmsub.s f18, f15, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f15, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xcf90492c5173e7e1 # load x3 with value 0xcf90492c5173e7e1
sw x3, 0(x2) # store 0xcf90492c5173e7e1 in memory
flw f16, 0(x2) # load 0xcf90492c5173e7e1 from memory into f16
fmsub.s f24, f9, f22, f16, dyn # perform operation
fmsub.s f24, f9, f22, f16, rdn # perform operation
fmsub.s f24, f9, f22, f16, rmm # perform operation
fmsub.s f24, f9, f22, f16, rne # perform operation
fmsub.s f24, f9, f22, f16, rtz # perform operation
fmsub.s f24, f9, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f9, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x954751bd32127960 # load x3 with value 0x954751bd32127960
sw x3, 0(x2) # store 0x954751bd32127960 in memory
flw f10, 0(x2) # load 0x954751bd32127960 from memory into f10
fmsub.s f25, f9, f15, f10, dyn # perform operation
fmsub.s f25, f9, f15, f10, rdn # perform operation
fmsub.s f25, f9, f15, f10, rmm # perform operation
fmsub.s f25, f9, f15, f10, rne # perform operation
fmsub.s f25, f9, f15, f10, rtz # perform operation
fmsub.s f25, f9, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x3d2d93848c9b9faf # load x3 with value 0x3d2d93848c9b9faf
sw x3, 0(x2) # store 0x3d2d93848c9b9faf in memory
flw f23, 0(x2) # load 0x3d2d93848c9b9faf from memory into f23
fmsub.s f18, f7, f1, f23, dyn # perform operation
fmsub.s f18, f7, f1, f23, rdn # perform operation
fmsub.s f18, f7, f1, f23, rmm # perform operation
fmsub.s f18, f7, f1, f23, rne # perform operation
fmsub.s f18, f7, f1, f23, rtz # perform operation
fmsub.s f18, f7, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xb1881ce41b6992b6 # load x3 with value 0xb1881ce41b6992b6
sw x3, 0(x2) # store 0xb1881ce41b6992b6 in memory
flw f13, 0(x2) # load 0xb1881ce41b6992b6 from memory into f13
fmsub.s f14, f28, f6, f13, dyn # perform operation
fmsub.s f14, f28, f6, f13, rdn # perform operation
fmsub.s f14, f28, f6, f13, rmm # perform operation
fmsub.s f14, f28, f6, f13, rne # perform operation
fmsub.s f14, f28, f6, f13, rtz # perform operation
fmsub.s f14, f28, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xc85be4e86087f03e # load x3 with value 0xc85be4e86087f03e
sw x3, 0(x2) # store 0xc85be4e86087f03e in memory
flw f18, 0(x2) # load 0xc85be4e86087f03e from memory into f18
fmsub.s f12, f6, f17, f18, dyn # perform operation
fmsub.s f12, f6, f17, f18, rdn # perform operation
fmsub.s f12, f6, f17, f18, rmm # perform operation
fmsub.s f12, f6, f17, f18, rne # perform operation
fmsub.s f12, f6, f17, f18, rtz # perform operation
fmsub.s f12, f6, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x18a53e83105d1a2d # load x3 with value 0x18a53e83105d1a2d
sw x3, 0(x2) # store 0x18a53e83105d1a2d in memory
flw f5, 0(x2) # load 0x18a53e83105d1a2d from memory into f5
fmsub.s f27, f6, f8, f5, dyn # perform operation
fmsub.s f27, f6, f8, f5, rdn # perform operation
fmsub.s f27, f6, f8, f5, rmm # perform operation
fmsub.s f27, f6, f8, f5, rne # perform operation
fmsub.s f27, f6, f8, f5, rtz # perform operation
fmsub.s f27, f6, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f6, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f6, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xe6b617d6943cee45 # load x3 with value 0xe6b617d6943cee45
sw x3, 0(x2) # store 0xe6b617d6943cee45 in memory
flw f8, 0(x2) # load 0xe6b617d6943cee45 from memory into f8
fmsub.s f26, f28, f11, f8, dyn # perform operation
fmsub.s f26, f28, f11, f8, rdn # perform operation
fmsub.s f26, f28, f11, f8, rmm # perform operation
fmsub.s f26, f28, f11, f8, rne # perform operation
fmsub.s f26, f28, f11, f8, rtz # perform operation
fmsub.s f26, f28, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f28, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f28, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f28, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f28, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f28, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x88f589f847631021 # load x3 with value 0x88f589f847631021
sw x3, 0(x2) # store 0x88f589f847631021 in memory
flw f12, 0(x2) # load 0x88f589f847631021 from memory into f12
fmsub.s f25, f11, f19, f12, dyn # perform operation
fmsub.s f25, f11, f19, f12, rdn # perform operation
fmsub.s f25, f11, f19, f12, rmm # perform operation
fmsub.s f25, f11, f19, f12, rne # perform operation
fmsub.s f25, f11, f19, f12, rtz # perform operation
fmsub.s f25, f11, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x65b7575039faa2cb # load x3 with value 0x65b7575039faa2cb
sw x3, 0(x2) # store 0x65b7575039faa2cb in memory
flw f13, 0(x2) # load 0x65b7575039faa2cb from memory into f13
fmsub.s f31, f7, f9, f13, dyn # perform operation
fmsub.s f31, f7, f9, f13, rdn # perform operation
fmsub.s f31, f7, f9, f13, rmm # perform operation
fmsub.s f31, f7, f9, f13, rne # perform operation
fmsub.s f31, f7, f9, f13, rtz # perform operation
fmsub.s f31, f7, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x79039386cd37d58e # load x3 with value 0x79039386cd37d58e
sw x3, 0(x2) # store 0x79039386cd37d58e in memory
flw f18, 0(x2) # load 0x79039386cd37d58e from memory into f18
fmsub.s f24, f13, f28, f18, dyn # perform operation
fmsub.s f24, f13, f28, f18, rdn # perform operation
fmsub.s f24, f13, f28, f18, rmm # perform operation
fmsub.s f24, f13, f28, f18, rne # perform operation
fmsub.s f24, f13, f28, f18, rtz # perform operation
fmsub.s f24, f13, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f13, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f13, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x261cf1d44585a420 # load x3 with value 0x261cf1d44585a420
sw x3, 0(x2) # store 0x261cf1d44585a420 in memory
flw f18, 0(x2) # load 0x261cf1d44585a420 from memory into f18
fmsub.s f24, f27, f26, f18, dyn # perform operation
fmsub.s f24, f27, f26, f18, rdn # perform operation
fmsub.s f24, f27, f26, f18, rmm # perform operation
fmsub.s f24, f27, f26, f18, rne # perform operation
fmsub.s f24, f27, f26, f18, rtz # perform operation
fmsub.s f24, f27, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0xc4ecc569fe359957 # load x3 with value 0xc4ecc569fe359957
sw x3, 0(x2) # store 0xc4ecc569fe359957 in memory
flw f30, 0(x2) # load 0xc4ecc569fe359957 from memory into f30
fmsub.s f18, f11, f12, f30, dyn # perform operation
fmsub.s f18, f11, f12, f30, rdn # perform operation
fmsub.s f18, f11, f12, f30, rmm # perform operation
fmsub.s f18, f11, f12, f30, rne # perform operation
fmsub.s f18, f11, f12, f30, rtz # perform operation
fmsub.s f18, f11, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f11, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f11, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x6a4ca80d46f8d1f2 # load x3 with value 0x6a4ca80d46f8d1f2
sw x3, 0(x2) # store 0x6a4ca80d46f8d1f2 in memory
flw f26, 0(x2) # load 0x6a4ca80d46f8d1f2 from memory into f26
fmsub.s f31, f22, f20, f26, dyn # perform operation
fmsub.s f31, f22, f20, f26, rdn # perform operation
fmsub.s f31, f22, f20, f26, rmm # perform operation
fmsub.s f31, f22, f20, f26, rne # perform operation
fmsub.s f31, f22, f20, f26, rtz # perform operation
fmsub.s f31, f22, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xec5e224cdff0deb1 # load x3 with value 0xec5e224cdff0deb1
sw x3, 0(x2) # store 0xec5e224cdff0deb1 in memory
flw f23, 0(x2) # load 0xec5e224cdff0deb1 from memory into f23
fmsub.s f25, f17, f14, f23, dyn # perform operation
fmsub.s f25, f17, f14, f23, rdn # perform operation
fmsub.s f25, f17, f14, f23, rmm # perform operation
fmsub.s f25, f17, f14, f23, rne # perform operation
fmsub.s f25, f17, f14, f23, rtz # perform operation
fmsub.s f25, f17, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x7fd565679f0fc9ef # load x3 with value 0x7fd565679f0fc9ef
sw x3, 0(x2) # store 0x7fd565679f0fc9ef in memory
flw f27, 0(x2) # load 0x7fd565679f0fc9ef from memory into f27
fmsub.s f30, f15, f5, f27, dyn # perform operation
fmsub.s f30, f15, f5, f27, rdn # perform operation
fmsub.s f30, f15, f5, f27, rmm # perform operation
fmsub.s f30, f15, f5, f27, rne # perform operation
fmsub.s f30, f15, f5, f27, rtz # perform operation
fmsub.s f30, f15, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f15, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f15, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f15, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f15, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f15, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x6f99e954ece7f543 # load x3 with value 0x6f99e954ece7f543
sw x3, 0(x2) # store 0x6f99e954ece7f543 in memory
flw f6, 0(x2) # load 0x6f99e954ece7f543 from memory into f6
fmsub.s f16, f14, f1, f6, dyn # perform operation
fmsub.s f16, f14, f1, f6, rdn # perform operation
fmsub.s f16, f14, f1, f6, rmm # perform operation
fmsub.s f16, f14, f1, f6, rne # perform operation
fmsub.s f16, f14, f1, f6, rtz # perform operation
fmsub.s f16, f14, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f14, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f14, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x56094decec750970 # load x3 with value 0x56094decec750970
sw x3, 0(x2) # store 0x56094decec750970 in memory
flw f6, 0(x2) # load 0x56094decec750970 from memory into f6
fmsub.s f24, f21, f19, f6, dyn # perform operation
fmsub.s f24, f21, f19, f6, rdn # perform operation
fmsub.s f24, f21, f19, f6, rmm # perform operation
fmsub.s f24, f21, f19, f6, rne # perform operation
fmsub.s f24, f21, f19, f6, rtz # perform operation
fmsub.s f24, f21, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f21, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f21, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x229a09fdcb68cf4a # load x3 with value 0x229a09fdcb68cf4a
sw x3, 0(x2) # store 0x229a09fdcb68cf4a in memory
flw f31, 0(x2) # load 0x229a09fdcb68cf4a from memory into f31
fmsub.s f18, f20, f1, f31, dyn # perform operation
fmsub.s f18, f20, f1, f31, rdn # perform operation
fmsub.s f18, f20, f1, f31, rmm # perform operation
fmsub.s f18, f20, f1, f31, rne # perform operation
fmsub.s f18, f20, f1, f31, rtz # perform operation
fmsub.s f18, f20, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f20, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x459d6c1b55755162 # load x3 with value 0x459d6c1b55755162
sw x3, 0(x2) # store 0x459d6c1b55755162 in memory
flw f31, 0(x2) # load 0x459d6c1b55755162 from memory into f31
fmsub.s f12, f11, f27, f31, dyn # perform operation
fmsub.s f12, f11, f27, f31, rdn # perform operation
fmsub.s f12, f11, f27, f31, rmm # perform operation
fmsub.s f12, f11, f27, f31, rne # perform operation
fmsub.s f12, f11, f27, f31, rtz # perform operation
fmsub.s f12, f11, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x6530f8bfaffe44e8 # load x3 with value 0x6530f8bfaffe44e8
sw x3, 0(x2) # store 0x6530f8bfaffe44e8 in memory
flw f17, 0(x2) # load 0x6530f8bfaffe44e8 from memory into f17
fmsub.s f27, f5, f19, f17, dyn # perform operation
fmsub.s f27, f5, f19, f17, rdn # perform operation
fmsub.s f27, f5, f19, f17, rmm # perform operation
fmsub.s f27, f5, f19, f17, rne # perform operation
fmsub.s f27, f5, f19, f17, rtz # perform operation
fmsub.s f27, f5, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xe3930f8dd5799bb8 # load x3 with value 0xe3930f8dd5799bb8
sw x3, 0(x2) # store 0xe3930f8dd5799bb8 in memory
flw f23, 0(x2) # load 0xe3930f8dd5799bb8 from memory into f23
fmsub.s f24, f31, f21, f23, dyn # perform operation
fmsub.s f24, f31, f21, f23, rdn # perform operation
fmsub.s f24, f31, f21, f23, rmm # perform operation
fmsub.s f24, f31, f21, f23, rne # perform operation
fmsub.s f24, f31, f21, f23, rtz # perform operation
fmsub.s f24, f31, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f31, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f31, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x63022fd929101939 # load x3 with value 0x63022fd929101939
sw x3, 0(x2) # store 0x63022fd929101939 in memory
flw f22, 0(x2) # load 0x63022fd929101939 from memory into f22
fmsub.s f3, f31, f6, f22, dyn # perform operation
fmsub.s f3, f31, f6, f22, rdn # perform operation
fmsub.s f3, f31, f6, f22, rmm # perform operation
fmsub.s f3, f31, f6, f22, rne # perform operation
fmsub.s f3, f31, f6, f22, rtz # perform operation
fmsub.s f3, f31, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xb62289659d690b9e # load x3 with value 0xb62289659d690b9e
sw x3, 0(x2) # store 0xb62289659d690b9e in memory
flw f28, 0(x2) # load 0xb62289659d690b9e from memory into f28
fmsub.s f26, f14, f22, f28, dyn # perform operation
fmsub.s f26, f14, f22, f28, rdn # perform operation
fmsub.s f26, f14, f22, f28, rmm # perform operation
fmsub.s f26, f14, f22, f28, rne # perform operation
fmsub.s f26, f14, f22, f28, rtz # perform operation
fmsub.s f26, f14, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xc52d87a330a54601 # load x3 with value 0xc52d87a330a54601
sw x3, 0(x2) # store 0xc52d87a330a54601 in memory
flw f12, 0(x2) # load 0xc52d87a330a54601 from memory into f12
fmsub.s f23, f8, f15, f12, dyn # perform operation
fmsub.s f23, f8, f15, f12, rdn # perform operation
fmsub.s f23, f8, f15, f12, rmm # perform operation
fmsub.s f23, f8, f15, f12, rne # perform operation
fmsub.s f23, f8, f15, f12, rtz # perform operation
fmsub.s f23, f8, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x8d85b2235436479d # load x3 with value 0x8d85b2235436479d
sw x3, 0(x2) # store 0x8d85b2235436479d in memory
flw f8, 0(x2) # load 0x8d85b2235436479d from memory into f8
fmsub.s f1, f25, f30, f8, dyn # perform operation
fmsub.s f1, f25, f30, f8, rdn # perform operation
fmsub.s f1, f25, f30, f8, rmm # perform operation
fmsub.s f1, f25, f30, f8, rne # perform operation
fmsub.s f1, f25, f30, f8, rtz # perform operation
fmsub.s f1, f25, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x209de8ed19dc9c4 # load x3 with value 0x209de8ed19dc9c4
sw x3, 0(x2) # store 0x209de8ed19dc9c4 in memory
flw f21, 0(x2) # load 0x209de8ed19dc9c4 from memory into f21
fmsub.s f25, f5, f30, f21, dyn # perform operation
fmsub.s f25, f5, f30, f21, rdn # perform operation
fmsub.s f25, f5, f30, f21, rmm # perform operation
fmsub.s f25, f5, f30, f21, rne # perform operation
fmsub.s f25, f5, f30, f21, rtz # perform operation
fmsub.s f25, f5, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f5, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xe000baef5943614d # load x3 with value 0xe000baef5943614d
sw x3, 0(x2) # store 0xe000baef5943614d in memory
flw f11, 0(x2) # load 0xe000baef5943614d from memory into f11
fmsub.s f25, f21, f27, f11, dyn # perform operation
fmsub.s f25, f21, f27, f11, rdn # perform operation
fmsub.s f25, f21, f27, f11, rmm # perform operation
fmsub.s f25, f21, f27, f11, rne # perform operation
fmsub.s f25, f21, f27, f11, rtz # perform operation
fmsub.s f25, f21, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f21, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f21, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x6c67d844385bf993 # load x3 with value 0x6c67d844385bf993
sw x3, 0(x2) # store 0x6c67d844385bf993 in memory
flw f24, 0(x2) # load 0x6c67d844385bf993 from memory into f24
fmsub.s f3, f9, f29, f24, dyn # perform operation
fmsub.s f3, f9, f29, f24, rdn # perform operation
fmsub.s f3, f9, f29, f24, rmm # perform operation
fmsub.s f3, f9, f29, f24, rne # perform operation
fmsub.s f3, f9, f29, f24, rtz # perform operation
fmsub.s f3, f9, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0xf36af6b226d666bd # load x3 with value 0xf36af6b226d666bd
sw x3, 0(x2) # store 0xf36af6b226d666bd in memory
flw f13, 0(x2) # load 0xf36af6b226d666bd from memory into f13
fmsub.s f15, f23, f28, f13, dyn # perform operation
fmsub.s f15, f23, f28, f13, rdn # perform operation
fmsub.s f15, f23, f28, f13, rmm # perform operation
fmsub.s f15, f23, f28, f13, rne # perform operation
fmsub.s f15, f23, f28, f13, rtz # perform operation
fmsub.s f15, f23, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xc3cf1467b8334c73 # load x3 with value 0xc3cf1467b8334c73
sw x3, 0(x2) # store 0xc3cf1467b8334c73 in memory
flw f25, 0(x2) # load 0xc3cf1467b8334c73 from memory into f25
fmsub.s f9, f3, f8, f25, dyn # perform operation
fmsub.s f9, f3, f8, f25, rdn # perform operation
fmsub.s f9, f3, f8, f25, rmm # perform operation
fmsub.s f9, f3, f8, f25, rne # perform operation
fmsub.s f9, f3, f8, f25, rtz # perform operation
fmsub.s f9, f3, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x299c28fc06de9ebc # load x3 with value 0x299c28fc06de9ebc
sw x3, 0(x2) # store 0x299c28fc06de9ebc in memory
flw f30, 0(x2) # load 0x299c28fc06de9ebc from memory into f30
fmsub.s f5, f17, f24, f30, dyn # perform operation
fmsub.s f5, f17, f24, f30, rdn # perform operation
fmsub.s f5, f17, f24, f30, rmm # perform operation
fmsub.s f5, f17, f24, f30, rne # perform operation
fmsub.s f5, f17, f24, f30, rtz # perform operation
fmsub.s f5, f17, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f17, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x10fb0fbad6d55007 # load x3 with value 0x10fb0fbad6d55007
sw x3, 0(x2) # store 0x10fb0fbad6d55007 in memory
flw f16, 0(x2) # load 0x10fb0fbad6d55007 from memory into f16
fmsub.s f6, f7, f17, f16, dyn # perform operation
fmsub.s f6, f7, f17, f16, rdn # perform operation
fmsub.s f6, f7, f17, f16, rmm # perform operation
fmsub.s f6, f7, f17, f16, rne # perform operation
fmsub.s f6, f7, f17, f16, rtz # perform operation
fmsub.s f6, f7, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f7, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f7, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f7, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f7, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f7, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xcf7abaad6d9e5c6a # load x3 with value 0xcf7abaad6d9e5c6a
sw x3, 0(x2) # store 0xcf7abaad6d9e5c6a in memory
flw f1, 0(x2) # load 0xcf7abaad6d9e5c6a from memory into f1
fmsub.s f14, f7, f10, f1, dyn # perform operation
fmsub.s f14, f7, f10, f1, rdn # perform operation
fmsub.s f14, f7, f10, f1, rmm # perform operation
fmsub.s f14, f7, f10, f1, rne # perform operation
fmsub.s f14, f7, f10, f1, rtz # perform operation
fmsub.s f14, f7, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0xa389f200f3b43a78 # load x3 with value 0xa389f200f3b43a78
sw x3, 0(x2) # store 0xa389f200f3b43a78 in memory
flw f7, 0(x2) # load 0xa389f200f3b43a78 from memory into f7
fmsub.s f18, f21, f17, f7, dyn # perform operation
fmsub.s f18, f21, f17, f7, rdn # perform operation
fmsub.s f18, f21, f17, f7, rmm # perform operation
fmsub.s f18, f21, f17, f7, rne # perform operation
fmsub.s f18, f21, f17, f7, rtz # perform operation
fmsub.s f18, f21, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x7f377e485cd1b7c3 # load x3 with value 0x7f377e485cd1b7c3
sw x3, 0(x2) # store 0x7f377e485cd1b7c3 in memory
flw f10, 0(x2) # load 0x7f377e485cd1b7c3 from memory into f10
fmsub.s f12, f21, f29, f10, dyn # perform operation
fmsub.s f12, f21, f29, f10, rdn # perform operation
fmsub.s f12, f21, f29, f10, rmm # perform operation
fmsub.s f12, f21, f29, f10, rne # perform operation
fmsub.s f12, f21, f29, f10, rtz # perform operation
fmsub.s f12, f21, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f21, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x521c56ee2a0e49af # load x3 with value 0x521c56ee2a0e49af
sw x3, 0(x2) # store 0x521c56ee2a0e49af in memory
flw f21, 0(x2) # load 0x521c56ee2a0e49af from memory into f21
fmsub.s f17, f28, f27, f21, dyn # perform operation
fmsub.s f17, f28, f27, f21, rdn # perform operation
fmsub.s f17, f28, f27, f21, rmm # perform operation
fmsub.s f17, f28, f27, f21, rne # perform operation
fmsub.s f17, f28, f27, f21, rtz # perform operation
fmsub.s f17, f28, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x73114f0c57cd5581 # load x3 with value 0x73114f0c57cd5581
sw x3, 0(x2) # store 0x73114f0c57cd5581 in memory
flw f1, 0(x2) # load 0x73114f0c57cd5581 from memory into f1
fmsub.s f13, f5, f20, f1, dyn # perform operation
fmsub.s f13, f5, f20, f1, rdn # perform operation
fmsub.s f13, f5, f20, f1, rmm # perform operation
fmsub.s f13, f5, f20, f1, rne # perform operation
fmsub.s f13, f5, f20, f1, rtz # perform operation
fmsub.s f13, f5, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f5, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x93342358fb7e60cb # load x3 with value 0x93342358fb7e60cb
sw x3, 0(x2) # store 0x93342358fb7e60cb in memory
flw f21, 0(x2) # load 0x93342358fb7e60cb from memory into f21
fmsub.s f17, f30, f22, f21, dyn # perform operation
fmsub.s f17, f30, f22, f21, rdn # perform operation
fmsub.s f17, f30, f22, f21, rmm # perform operation
fmsub.s f17, f30, f22, f21, rne # perform operation
fmsub.s f17, f30, f22, f21, rtz # perform operation
fmsub.s f17, f30, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f30, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f30, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x353e617e4a2fd81b # load x3 with value 0x353e617e4a2fd81b
sw x3, 0(x2) # store 0x353e617e4a2fd81b in memory
flw f12, 0(x2) # load 0x353e617e4a2fd81b from memory into f12
fmsub.s f14, f2, f5, f12, dyn # perform operation
fmsub.s f14, f2, f5, f12, rdn # perform operation
fmsub.s f14, f2, f5, f12, rmm # perform operation
fmsub.s f14, f2, f5, f12, rne # perform operation
fmsub.s f14, f2, f5, f12, rtz # perform operation
fmsub.s f14, f2, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x880c410588e2491 # load x3 with value 0x880c410588e2491
sw x3, 0(x2) # store 0x880c410588e2491 in memory
flw f22, 0(x2) # load 0x880c410588e2491 from memory into f22
fmsub.s f19, f15, f18, f22, dyn # perform operation
fmsub.s f19, f15, f18, f22, rdn # perform operation
fmsub.s f19, f15, f18, f22, rmm # perform operation
fmsub.s f19, f15, f18, f22, rne # perform operation
fmsub.s f19, f15, f18, f22, rtz # perform operation
fmsub.s f19, f15, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0xa0a39d8df88272b8 # load x3 with value 0xa0a39d8df88272b8
sw x3, 0(x2) # store 0xa0a39d8df88272b8 in memory
flw f11, 0(x2) # load 0xa0a39d8df88272b8 from memory into f11
fmsub.s f21, f9, f31, f11, dyn # perform operation
fmsub.s f21, f9, f31, f11, rdn # perform operation
fmsub.s f21, f9, f31, f11, rmm # perform operation
fmsub.s f21, f9, f31, f11, rne # perform operation
fmsub.s f21, f9, f31, f11, rtz # perform operation
fmsub.s f21, f9, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f9, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xb2bf9220b907589e # load x3 with value 0xb2bf9220b907589e
sw x3, 0(x2) # store 0xb2bf9220b907589e in memory
flw f30, 0(x2) # load 0xb2bf9220b907589e from memory into f30
fmsub.s f19, f21, f12, f30, dyn # perform operation
fmsub.s f19, f21, f12, f30, rdn # perform operation
fmsub.s f19, f21, f12, f30, rmm # perform operation
fmsub.s f19, f21, f12, f30, rne # perform operation
fmsub.s f19, f21, f12, f30, rtz # perform operation
fmsub.s f19, f21, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x590bfb8d9a275890 # load x3 with value 0x590bfb8d9a275890
sw x3, 0(x2) # store 0x590bfb8d9a275890 in memory
flw f22, 0(x2) # load 0x590bfb8d9a275890 from memory into f22
fmsub.s f19, f23, f14, f22, dyn # perform operation
fmsub.s f19, f23, f14, f22, rdn # perform operation
fmsub.s f19, f23, f14, f22, rmm # perform operation
fmsub.s f19, f23, f14, f22, rne # perform operation
fmsub.s f19, f23, f14, f22, rtz # perform operation
fmsub.s f19, f23, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f23, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f23, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x54d0b7262e5a07ca # load x3 with value 0x54d0b7262e5a07ca
sw x3, 0(x2) # store 0x54d0b7262e5a07ca in memory
flw f3, 0(x2) # load 0x54d0b7262e5a07ca from memory into f3
fmsub.s f23, f10, f28, f3, dyn # perform operation
fmsub.s f23, f10, f28, f3, rdn # perform operation
fmsub.s f23, f10, f28, f3, rmm # perform operation
fmsub.s f23, f10, f28, f3, rne # perform operation
fmsub.s f23, f10, f28, f3, rtz # perform operation
fmsub.s f23, f10, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x654779472ec28cec # load x3 with value 0x654779472ec28cec
sw x3, 0(x2) # store 0x654779472ec28cec in memory
flw f25, 0(x2) # load 0x654779472ec28cec from memory into f25
fmsub.s f12, f8, f6, f25, dyn # perform operation
fmsub.s f12, f8, f6, f25, rdn # perform operation
fmsub.s f12, f8, f6, f25, rmm # perform operation
fmsub.s f12, f8, f6, f25, rne # perform operation
fmsub.s f12, f8, f6, f25, rtz # perform operation
fmsub.s f12, f8, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x22c5319ea56fb825 # load x3 with value 0x22c5319ea56fb825
sw x3, 0(x2) # store 0x22c5319ea56fb825 in memory
flw f22, 0(x2) # load 0x22c5319ea56fb825 from memory into f22
fmsub.s f29, f8, f21, f22, dyn # perform operation
fmsub.s f29, f8, f21, f22, rdn # perform operation
fmsub.s f29, f8, f21, f22, rmm # perform operation
fmsub.s f29, f8, f21, f22, rne # perform operation
fmsub.s f29, f8, f21, f22, rtz # perform operation
fmsub.s f29, f8, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0xa3383acdb2f40e52 # load x3 with value 0xa3383acdb2f40e52
sw x3, 0(x2) # store 0xa3383acdb2f40e52 in memory
flw f23, 0(x2) # load 0xa3383acdb2f40e52 from memory into f23
fmsub.s f14, f30, f21, f23, dyn # perform operation
fmsub.s f14, f30, f21, f23, rdn # perform operation
fmsub.s f14, f30, f21, f23, rmm # perform operation
fmsub.s f14, f30, f21, f23, rne # perform operation
fmsub.s f14, f30, f21, f23, rtz # perform operation
fmsub.s f14, f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f30, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x1adba24074f8b7e9 # load x3 with value 0x1adba24074f8b7e9
sw x3, 0(x2) # store 0x1adba24074f8b7e9 in memory
flw f13, 0(x2) # load 0x1adba24074f8b7e9 from memory into f13
fmsub.s f3, f2, f9, f13, dyn # perform operation
fmsub.s f3, f2, f9, f13, rdn # perform operation
fmsub.s f3, f2, f9, f13, rmm # perform operation
fmsub.s f3, f2, f9, f13, rne # perform operation
fmsub.s f3, f2, f9, f13, rtz # perform operation
fmsub.s f3, f2, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f2, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f2, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x3bf2263b5161faf0 # load x3 with value 0x3bf2263b5161faf0
sw x3, 0(x2) # store 0x3bf2263b5161faf0 in memory
flw f16, 0(x2) # load 0x3bf2263b5161faf0 from memory into f16
fmsub.s f1, f25, f21, f16, dyn # perform operation
fmsub.s f1, f25, f21, f16, rdn # perform operation
fmsub.s f1, f25, f21, f16, rmm # perform operation
fmsub.s f1, f25, f21, f16, rne # perform operation
fmsub.s f1, f25, f21, f16, rtz # perform operation
fmsub.s f1, f25, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xb2be0e0da2086311 # load x3 with value 0xb2be0e0da2086311
sw x3, 0(x2) # store 0xb2be0e0da2086311 in memory
flw f20, 0(x2) # load 0xb2be0e0da2086311 from memory into f20
fmsub.s f13, f8, f17, f20, dyn # perform operation
fmsub.s f13, f8, f17, f20, rdn # perform operation
fmsub.s f13, f8, f17, f20, rmm # perform operation
fmsub.s f13, f8, f17, f20, rne # perform operation
fmsub.s f13, f8, f17, f20, rtz # perform operation
fmsub.s f13, f8, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f8, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f8, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x9ac40f359453a97f # load x3 with value 0x9ac40f359453a97f
sw x3, 0(x2) # store 0x9ac40f359453a97f in memory
flw f30, 0(x2) # load 0x9ac40f359453a97f from memory into f30
fmsub.s f25, f5, f20, f30, dyn # perform operation
fmsub.s f25, f5, f20, f30, rdn # perform operation
fmsub.s f25, f5, f20, f30, rmm # perform operation
fmsub.s f25, f5, f20, f30, rne # perform operation
fmsub.s f25, f5, f20, f30, rtz # perform operation
fmsub.s f25, f5, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f5, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x12ddc33fcb7730b7 # load x3 with value 0x12ddc33fcb7730b7
sw x3, 0(x2) # store 0x12ddc33fcb7730b7 in memory
flw f23, 0(x2) # load 0x12ddc33fcb7730b7 from memory into f23
fmsub.s f22, f30, f5, f23, dyn # perform operation
fmsub.s f22, f30, f5, f23, rdn # perform operation
fmsub.s f22, f30, f5, f23, rmm # perform operation
fmsub.s f22, f30, f5, f23, rne # perform operation
fmsub.s f22, f30, f5, f23, rtz # perform operation
fmsub.s f22, f30, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xa340a2aea7d353e4 # load x3 with value 0xa340a2aea7d353e4
sw x3, 0(x2) # store 0xa340a2aea7d353e4 in memory
flw f18, 0(x2) # load 0xa340a2aea7d353e4 from memory into f18
fmsub.s f10, f21, f27, f18, dyn # perform operation
fmsub.s f10, f21, f27, f18, rdn # perform operation
fmsub.s f10, f21, f27, f18, rmm # perform operation
fmsub.s f10, f21, f27, f18, rne # perform operation
fmsub.s f10, f21, f27, f18, rtz # perform operation
fmsub.s f10, f21, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f21, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f21, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f21, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f21, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f21, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x1e694d2f0923ec8c # load x3 with value 0x1e694d2f0923ec8c
sw x3, 0(x2) # store 0x1e694d2f0923ec8c in memory
flw f16, 0(x2) # load 0x1e694d2f0923ec8c from memory into f16
fmsub.s f10, f2, f29, f16, dyn # perform operation
fmsub.s f10, f2, f29, f16, rdn # perform operation
fmsub.s f10, f2, f29, f16, rmm # perform operation
fmsub.s f10, f2, f29, f16, rne # perform operation
fmsub.s f10, f2, f29, f16, rtz # perform operation
fmsub.s f10, f2, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f2, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f2, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x212d8e222fa0f9fe # load x3 with value 0x212d8e222fa0f9fe
sw x3, 0(x2) # store 0x212d8e222fa0f9fe in memory
flw f7, 0(x2) # load 0x212d8e222fa0f9fe from memory into f7
fmsub.s f31, f20, f27, f7, dyn # perform operation
fmsub.s f31, f20, f27, f7, rdn # perform operation
fmsub.s f31, f20, f27, f7, rmm # perform operation
fmsub.s f31, f20, f27, f7, rne # perform operation
fmsub.s f31, f20, f27, f7, rtz # perform operation
fmsub.s f31, f20, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x84cf015415f0ba83 # load x3 with value 0x84cf015415f0ba83
sw x3, 0(x2) # store 0x84cf015415f0ba83 in memory
flw f31, 0(x2) # load 0x84cf015415f0ba83 from memory into f31
fmsub.s f29, f2, f12, f31, dyn # perform operation
fmsub.s f29, f2, f12, f31, rdn # perform operation
fmsub.s f29, f2, f12, f31, rmm # perform operation
fmsub.s f29, f2, f12, f31, rne # perform operation
fmsub.s f29, f2, f12, f31, rtz # perform operation
fmsub.s f29, f2, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x81bf3c13328ab893 # load x3 with value 0x81bf3c13328ab893
sw x3, 0(x2) # store 0x81bf3c13328ab893 in memory
flw f12, 0(x2) # load 0x81bf3c13328ab893 from memory into f12
fmsub.s f24, f27, f6, f12, dyn # perform operation
fmsub.s f24, f27, f6, f12, rdn # perform operation
fmsub.s f24, f27, f6, f12, rmm # perform operation
fmsub.s f24, f27, f6, f12, rne # perform operation
fmsub.s f24, f27, f6, f12, rtz # perform operation
fmsub.s f24, f27, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x6ffd73b99116315d # load x3 with value 0x6ffd73b99116315d
sw x3, 0(x2) # store 0x6ffd73b99116315d in memory
flw f26, 0(x2) # load 0x6ffd73b99116315d from memory into f26
fmsub.s f24, f6, f25, f26, dyn # perform operation
fmsub.s f24, f6, f25, f26, rdn # perform operation
fmsub.s f24, f6, f25, f26, rmm # perform operation
fmsub.s f24, f6, f25, f26, rne # perform operation
fmsub.s f24, f6, f25, f26, rtz # perform operation
fmsub.s f24, f6, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x36e0e137d4abf197 # load x3 with value 0x36e0e137d4abf197
sw x3, 0(x2) # store 0x36e0e137d4abf197 in memory
flw f5, 0(x2) # load 0x36e0e137d4abf197 from memory into f5
fmsub.s f30, f14, f1, f5, dyn # perform operation
fmsub.s f30, f14, f1, f5, rdn # perform operation
fmsub.s f30, f14, f1, f5, rmm # perform operation
fmsub.s f30, f14, f1, f5, rne # perform operation
fmsub.s f30, f14, f1, f5, rtz # perform operation
fmsub.s f30, f14, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f14, f1, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xc82e5c453d2bb33c # load x3 with value 0xc82e5c453d2bb33c
sw x3, 0(x2) # store 0xc82e5c453d2bb33c in memory
flw f5, 0(x2) # load 0xc82e5c453d2bb33c from memory into f5
fmsub.s f8, f20, f23, f5, dyn # perform operation
fmsub.s f8, f20, f23, f5, rdn # perform operation
fmsub.s f8, f20, f23, f5, rmm # perform operation
fmsub.s f8, f20, f23, f5, rne # perform operation
fmsub.s f8, f20, f23, f5, rtz # perform operation
fmsub.s f8, f20, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f20, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x24e093768d4924d4 # load x3 with value 0x24e093768d4924d4
sw x3, 0(x2) # store 0x24e093768d4924d4 in memory
flw f26, 0(x2) # load 0x24e093768d4924d4 from memory into f26
fmsub.s f18, f28, f21, f26, dyn # perform operation
fmsub.s f18, f28, f21, f26, rdn # perform operation
fmsub.s f18, f28, f21, f26, rmm # perform operation
fmsub.s f18, f28, f21, f26, rne # perform operation
fmsub.s f18, f28, f21, f26, rtz # perform operation
fmsub.s f18, f28, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x799639001f4302aa # load x3 with value 0x799639001f4302aa
sw x3, 0(x2) # store 0x799639001f4302aa in memory
flw f21, 0(x2) # load 0x799639001f4302aa from memory into f21
fmsub.s f20, f9, f17, f21, dyn # perform operation
fmsub.s f20, f9, f17, f21, rdn # perform operation
fmsub.s f20, f9, f17, f21, rmm # perform operation
fmsub.s f20, f9, f17, f21, rne # perform operation
fmsub.s f20, f9, f17, f21, rtz # perform operation
fmsub.s f20, f9, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x63ca2676bfa1d516 # load x3 with value 0x63ca2676bfa1d516
sw x3, 0(x2) # store 0x63ca2676bfa1d516 in memory
flw f27, 0(x2) # load 0x63ca2676bfa1d516 from memory into f27
fmsub.s f6, f17, f3, f27, dyn # perform operation
fmsub.s f6, f17, f3, f27, rdn # perform operation
fmsub.s f6, f17, f3, f27, rmm # perform operation
fmsub.s f6, f17, f3, f27, rne # perform operation
fmsub.s f6, f17, f3, f27, rtz # perform operation
fmsub.s f6, f17, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x228d2a5bda433cf3 # load x3 with value 0x228d2a5bda433cf3
sw x3, 0(x2) # store 0x228d2a5bda433cf3 in memory
flw f10, 0(x2) # load 0x228d2a5bda433cf3 from memory into f10
fmsub.s f24, f5, f28, f10, dyn # perform operation
fmsub.s f24, f5, f28, f10, rdn # perform operation
fmsub.s f24, f5, f28, f10, rmm # perform operation
fmsub.s f24, f5, f28, f10, rne # perform operation
fmsub.s f24, f5, f28, f10, rtz # perform operation
fmsub.s f24, f5, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f5, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x3c1dd134acf4e468 # load x3 with value 0x3c1dd134acf4e468
sw x3, 0(x2) # store 0x3c1dd134acf4e468 in memory
flw f27, 0(x2) # load 0x3c1dd134acf4e468 from memory into f27
fmsub.s f28, f16, f7, f27, dyn # perform operation
fmsub.s f28, f16, f7, f27, rdn # perform operation
fmsub.s f28, f16, f7, f27, rmm # perform operation
fmsub.s f28, f16, f7, f27, rne # perform operation
fmsub.s f28, f16, f7, f27, rtz # perform operation
fmsub.s f28, f16, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f16, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f16, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x4a58b28631a069b4 # load x3 with value 0x4a58b28631a069b4
sw x3, 0(x2) # store 0x4a58b28631a069b4 in memory
flw f21, 0(x2) # load 0x4a58b28631a069b4 from memory into f21
fmsub.s f25, f31, f10, f21, dyn # perform operation
fmsub.s f25, f31, f10, f21, rdn # perform operation
fmsub.s f25, f31, f10, f21, rmm # perform operation
fmsub.s f25, f31, f10, f21, rne # perform operation
fmsub.s f25, f31, f10, f21, rtz # perform operation
fmsub.s f25, f31, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f31, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x9ca8765bc3f07616 # load x3 with value 0x9ca8765bc3f07616
sw x3, 0(x2) # store 0x9ca8765bc3f07616 in memory
flw f29, 0(x2) # load 0x9ca8765bc3f07616 from memory into f29
fmsub.s f10, f9, f20, f29, dyn # perform operation
fmsub.s f10, f9, f20, f29, rdn # perform operation
fmsub.s f10, f9, f20, f29, rmm # perform operation
fmsub.s f10, f9, f20, f29, rne # perform operation
fmsub.s f10, f9, f20, f29, rtz # perform operation
fmsub.s f10, f9, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xb7b54a3e97ed37bc # load x3 with value 0xb7b54a3e97ed37bc
sw x3, 0(x2) # store 0xb7b54a3e97ed37bc in memory
flw f3, 0(x2) # load 0xb7b54a3e97ed37bc from memory into f3
fmsub.s f24, f13, f19, f3, dyn # perform operation
fmsub.s f24, f13, f19, f3, rdn # perform operation
fmsub.s f24, f13, f19, f3, rmm # perform operation
fmsub.s f24, f13, f19, f3, rne # perform operation
fmsub.s f24, f13, f19, f3, rtz # perform operation
fmsub.s f24, f13, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f13, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f13, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x3b5b4c64fa9379ac # load x3 with value 0x3b5b4c64fa9379ac
sw x3, 0(x2) # store 0x3b5b4c64fa9379ac in memory
flw f5, 0(x2) # load 0x3b5b4c64fa9379ac from memory into f5
fmsub.s f2, f12, f22, f5, dyn # perform operation
fmsub.s f2, f12, f22, f5, rdn # perform operation
fmsub.s f2, f12, f22, f5, rmm # perform operation
fmsub.s f2, f12, f22, f5, rne # perform operation
fmsub.s f2, f12, f22, f5, rtz # perform operation
fmsub.s f2, f12, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f22, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xebad3a844f25ca55 # load x3 with value 0xebad3a844f25ca55
sw x3, 0(x2) # store 0xebad3a844f25ca55 in memory
flw f24, 0(x2) # load 0xebad3a844f25ca55 from memory into f24
fmsub.s f12, f30, f23, f24, dyn # perform operation
fmsub.s f12, f30, f23, f24, rdn # perform operation
fmsub.s f12, f30, f23, f24, rmm # perform operation
fmsub.s f12, f30, f23, f24, rne # perform operation
fmsub.s f12, f30, f23, f24, rtz # perform operation
fmsub.s f12, f30, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f30, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f30, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x34dd76507e8c49f # load x3 with value 0x34dd76507e8c49f
sw x3, 0(x2) # store 0x34dd76507e8c49f in memory
flw f25, 0(x2) # load 0x34dd76507e8c49f from memory into f25
fmsub.s f5, f13, f31, f25, dyn # perform operation
fmsub.s f5, f13, f31, f25, rdn # perform operation
fmsub.s f5, f13, f31, f25, rmm # perform operation
fmsub.s f5, f13, f31, f25, rne # perform operation
fmsub.s f5, f13, f31, f25, rtz # perform operation
fmsub.s f5, f13, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f13, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f13, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f13, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f13, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f13, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x11c55143cf6ac753 # load x3 with value 0x11c55143cf6ac753
sw x3, 0(x2) # store 0x11c55143cf6ac753 in memory
flw f11, 0(x2) # load 0x11c55143cf6ac753 from memory into f11
fmsub.s f2, f23, f15, f11, dyn # perform operation
fmsub.s f2, f23, f15, f11, rdn # perform operation
fmsub.s f2, f23, f15, f11, rmm # perform operation
fmsub.s f2, f23, f15, f11, rne # perform operation
fmsub.s f2, f23, f15, f11, rtz # perform operation
fmsub.s f2, f23, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f23, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x28624b55f3af54a6 # load x3 with value 0x28624b55f3af54a6
sw x3, 0(x2) # store 0x28624b55f3af54a6 in memory
flw f23, 0(x2) # load 0x28624b55f3af54a6 from memory into f23
fmsub.s f18, f25, f28, f23, dyn # perform operation
fmsub.s f18, f25, f28, f23, rdn # perform operation
fmsub.s f18, f25, f28, f23, rmm # perform operation
fmsub.s f18, f25, f28, f23, rne # perform operation
fmsub.s f18, f25, f28, f23, rtz # perform operation
fmsub.s f18, f25, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xccac4b33726cd666 # load x3 with value 0xccac4b33726cd666
sw x3, 0(x2) # store 0xccac4b33726cd666 in memory
flw f19, 0(x2) # load 0xccac4b33726cd666 from memory into f19
fmsub.s f23, f22, f7, f19, dyn # perform operation
fmsub.s f23, f22, f7, f19, rdn # perform operation
fmsub.s f23, f22, f7, f19, rmm # perform operation
fmsub.s f23, f22, f7, f19, rne # perform operation
fmsub.s f23, f22, f7, f19, rtz # perform operation
fmsub.s f23, f22, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f22, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x7eb9d4c26f300403 # load x3 with value 0x7eb9d4c26f300403
sw x3, 0(x2) # store 0x7eb9d4c26f300403 in memory
flw f18, 0(x2) # load 0x7eb9d4c26f300403 from memory into f18
fmsub.s f8, f6, f7, f18, dyn # perform operation
fmsub.s f8, f6, f7, f18, rdn # perform operation
fmsub.s f8, f6, f7, f18, rmm # perform operation
fmsub.s f8, f6, f7, f18, rne # perform operation
fmsub.s f8, f6, f7, f18, rtz # perform operation
fmsub.s f8, f6, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f6, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f6, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x951d58743fe0093f # load x3 with value 0x951d58743fe0093f
sw x3, 0(x2) # store 0x951d58743fe0093f in memory
flw f9, 0(x2) # load 0x951d58743fe0093f from memory into f9
fmsub.s f16, f5, f31, f9, dyn # perform operation
fmsub.s f16, f5, f31, f9, rdn # perform operation
fmsub.s f16, f5, f31, f9, rmm # perform operation
fmsub.s f16, f5, f31, f9, rne # perform operation
fmsub.s f16, f5, f31, f9, rtz # perform operation
fmsub.s f16, f5, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f5, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f5, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f5, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f5, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f5, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x9e1cdf1b473de59d # load x3 with value 0x9e1cdf1b473de59d
sw x3, 0(x2) # store 0x9e1cdf1b473de59d in memory
flw f23, 0(x2) # load 0x9e1cdf1b473de59d from memory into f23
fmsub.s f6, f24, f2, f23, dyn # perform operation
fmsub.s f6, f24, f2, f23, rdn # perform operation
fmsub.s f6, f24, f2, f23, rmm # perform operation
fmsub.s f6, f24, f2, f23, rne # perform operation
fmsub.s f6, f24, f2, f23, rtz # perform operation
fmsub.s f6, f24, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0xf437cfee76603322 # load x3 with value 0xf437cfee76603322
sw x3, 0(x2) # store 0xf437cfee76603322 in memory
flw f25, 0(x2) # load 0xf437cfee76603322 from memory into f25
fmsub.s f1, f19, f10, f25, dyn # perform operation
fmsub.s f1, f19, f10, f25, rdn # perform operation
fmsub.s f1, f19, f10, f25, rmm # perform operation
fmsub.s f1, f19, f10, f25, rne # perform operation
fmsub.s f1, f19, f10, f25, rtz # perform operation
fmsub.s f1, f19, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x8f049edcb2406177 # load x3 with value 0x8f049edcb2406177
sw x3, 0(x2) # store 0x8f049edcb2406177 in memory
flw f24, 0(x2) # load 0x8f049edcb2406177 from memory into f24
fmsub.s f21, f5, f3, f24, dyn # perform operation
fmsub.s f21, f5, f3, f24, rdn # perform operation
fmsub.s f21, f5, f3, f24, rmm # perform operation
fmsub.s f21, f5, f3, f24, rne # perform operation
fmsub.s f21, f5, f3, f24, rtz # perform operation
fmsub.s f21, f5, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f5, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f5, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xca600822cbf4cde0 # load x3 with value 0xca600822cbf4cde0
sw x3, 0(x2) # store 0xca600822cbf4cde0 in memory
flw f2, 0(x2) # load 0xca600822cbf4cde0 from memory into f2
fmsub.s f16, f20, f22, f2, dyn # perform operation
fmsub.s f16, f20, f22, f2, rdn # perform operation
fmsub.s f16, f20, f22, f2, rmm # perform operation
fmsub.s f16, f20, f22, f2, rne # perform operation
fmsub.s f16, f20, f22, f2, rtz # perform operation
fmsub.s f16, f20, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f20, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f20, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f20, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f20, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f20, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x509b6e6190dd4ba3 # load x3 with value 0x509b6e6190dd4ba3
sw x3, 0(x2) # store 0x509b6e6190dd4ba3 in memory
flw f2, 0(x2) # load 0x509b6e6190dd4ba3 from memory into f2
fmsub.s f16, f3, f19, f2, dyn # perform operation
fmsub.s f16, f3, f19, f2, rdn # perform operation
fmsub.s f16, f3, f19, f2, rmm # perform operation
fmsub.s f16, f3, f19, f2, rne # perform operation
fmsub.s f16, f3, f19, f2, rtz # perform operation
fmsub.s f16, f3, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x74366352dd0a6783 # load x3 with value 0x74366352dd0a6783
sw x3, 0(x2) # store 0x74366352dd0a6783 in memory
flw f2, 0(x2) # load 0x74366352dd0a6783 from memory into f2
fmsub.s f30, f11, f31, f2, dyn # perform operation
fmsub.s f30, f11, f31, f2, rdn # perform operation
fmsub.s f30, f11, f31, f2, rmm # perform operation
fmsub.s f30, f11, f31, f2, rne # perform operation
fmsub.s f30, f11, f31, f2, rtz # perform operation
fmsub.s f30, f11, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f11, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f11, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f11, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f11, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f11, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xbdae8087ccda14b2 # load x3 with value 0xbdae8087ccda14b2
sw x3, 0(x2) # store 0xbdae8087ccda14b2 in memory
flw f22, 0(x2) # load 0xbdae8087ccda14b2 from memory into f22
fmsub.s f13, f16, f12, f22, dyn # perform operation
fmsub.s f13, f16, f12, f22, rdn # perform operation
fmsub.s f13, f16, f12, f22, rmm # perform operation
fmsub.s f13, f16, f12, f22, rne # perform operation
fmsub.s f13, f16, f12, f22, rtz # perform operation
fmsub.s f13, f16, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xe451b52c3886861c # load x3 with value 0xe451b52c3886861c
sw x3, 0(x2) # store 0xe451b52c3886861c in memory
flw f28, 0(x2) # load 0xe451b52c3886861c from memory into f28
fmsub.s f20, f2, f10, f28, dyn # perform operation
fmsub.s f20, f2, f10, f28, rdn # perform operation
fmsub.s f20, f2, f10, f28, rmm # perform operation
fmsub.s f20, f2, f10, f28, rne # perform operation
fmsub.s f20, f2, f10, f28, rtz # perform operation
fmsub.s f20, f2, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f2, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x584a1511bda7265 # load x3 with value 0x584a1511bda7265
sw x3, 0(x2) # store 0x584a1511bda7265 in memory
flw f2, 0(x2) # load 0x584a1511bda7265 from memory into f2
fmsub.s f24, f1, f14, f2, dyn # perform operation
fmsub.s f24, f1, f14, f2, rdn # perform operation
fmsub.s f24, f1, f14, f2, rmm # perform operation
fmsub.s f24, f1, f14, f2, rne # perform operation
fmsub.s f24, f1, f14, f2, rtz # perform operation
fmsub.s f24, f1, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xa542aab10681216c # load x3 with value 0xa542aab10681216c
sw x3, 0(x2) # store 0xa542aab10681216c in memory
flw f29, 0(x2) # load 0xa542aab10681216c from memory into f29
fmsub.s f16, f1, f15, f29, dyn # perform operation
fmsub.s f16, f1, f15, f29, rdn # perform operation
fmsub.s f16, f1, f15, f29, rmm # perform operation
fmsub.s f16, f1, f15, f29, rne # perform operation
fmsub.s f16, f1, f15, f29, rtz # perform operation
fmsub.s f16, f1, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f1, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xac7ffed74a81796 # load x3 with value 0xac7ffed74a81796
sw x3, 0(x2) # store 0xac7ffed74a81796 in memory
flw f31, 0(x2) # load 0xac7ffed74a81796 from memory into f31
fmsub.s f17, f9, f22, f31, dyn # perform operation
fmsub.s f17, f9, f22, f31, rdn # perform operation
fmsub.s f17, f9, f22, f31, rmm # perform operation
fmsub.s f17, f9, f22, f31, rne # perform operation
fmsub.s f17, f9, f22, f31, rtz # perform operation
fmsub.s f17, f9, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xf062d20610b073d5 # load x3 with value 0xf062d20610b073d5
sw x3, 0(x2) # store 0xf062d20610b073d5 in memory
flw f29, 0(x2) # load 0xf062d20610b073d5 from memory into f29
fmsub.s f24, f25, f14, f29, dyn # perform operation
fmsub.s f24, f25, f14, f29, rdn # perform operation
fmsub.s f24, f25, f14, f29, rmm # perform operation
fmsub.s f24, f25, f14, f29, rne # perform operation
fmsub.s f24, f25, f14, f29, rtz # perform operation
fmsub.s f24, f25, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x1fba59113e617846 # load x3 with value 0x1fba59113e617846
sw x3, 0(x2) # store 0x1fba59113e617846 in memory
flw f22, 0(x2) # load 0x1fba59113e617846 from memory into f22
fmsub.s f11, f15, f30, f22, dyn # perform operation
fmsub.s f11, f15, f30, f22, rdn # perform operation
fmsub.s f11, f15, f30, f22, rmm # perform operation
fmsub.s f11, f15, f30, f22, rne # perform operation
fmsub.s f11, f15, f30, f22, rtz # perform operation
fmsub.s f11, f15, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f15, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f15, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f15, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f15, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f15, f30, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xc8397caec9bc1ffa # load x3 with value 0xc8397caec9bc1ffa
sw x3, 0(x2) # store 0xc8397caec9bc1ffa in memory
flw f14, 0(x2) # load 0xc8397caec9bc1ffa from memory into f14
fmsub.s f5, f20, f27, f14, dyn # perform operation
fmsub.s f5, f20, f27, f14, rdn # perform operation
fmsub.s f5, f20, f27, f14, rmm # perform operation
fmsub.s f5, f20, f27, f14, rne # perform operation
fmsub.s f5, f20, f27, f14, rtz # perform operation
fmsub.s f5, f20, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f20, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f20, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x12a167792e0ba3a4 # load x3 with value 0x12a167792e0ba3a4
sw x3, 0(x2) # store 0x12a167792e0ba3a4 in memory
flw f23, 0(x2) # load 0x12a167792e0ba3a4 from memory into f23
fmsub.s f26, f22, f27, f23, dyn # perform operation
fmsub.s f26, f22, f27, f23, rdn # perform operation
fmsub.s f26, f22, f27, f23, rmm # perform operation
fmsub.s f26, f22, f27, f23, rne # perform operation
fmsub.s f26, f22, f27, f23, rtz # perform operation
fmsub.s f26, f22, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x85b00162419a784d # load x3 with value 0x85b00162419a784d
sw x3, 0(x2) # store 0x85b00162419a784d in memory
flw f11, 0(x2) # load 0x85b00162419a784d from memory into f11
fmsub.s f22, f29, f19, f11, dyn # perform operation
fmsub.s f22, f29, f19, f11, rdn # perform operation
fmsub.s f22, f29, f19, f11, rmm # perform operation
fmsub.s f22, f29, f19, f11, rne # perform operation
fmsub.s f22, f29, f19, f11, rtz # perform operation
fmsub.s f22, f29, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f29, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f29, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xdc3eb281392745a9 # load x3 with value 0xdc3eb281392745a9
sw x3, 0(x2) # store 0xdc3eb281392745a9 in memory
flw f17, 0(x2) # load 0xdc3eb281392745a9 from memory into f17
fmsub.s f1, f15, f21, f17, dyn # perform operation
fmsub.s f1, f15, f21, f17, rdn # perform operation
fmsub.s f1, f15, f21, f17, rmm # perform operation
fmsub.s f1, f15, f21, f17, rne # perform operation
fmsub.s f1, f15, f21, f17, rtz # perform operation
fmsub.s f1, f15, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x5edc2e523379f7b8 # load x3 with value 0x5edc2e523379f7b8
sw x3, 0(x2) # store 0x5edc2e523379f7b8 in memory
flw f14, 0(x2) # load 0x5edc2e523379f7b8 from memory into f14
fmsub.s f28, f5, f31, f14, dyn # perform operation
fmsub.s f28, f5, f31, f14, rdn # perform operation
fmsub.s f28, f5, f31, f14, rmm # perform operation
fmsub.s f28, f5, f31, f14, rne # perform operation
fmsub.s f28, f5, f31, f14, rtz # perform operation
fmsub.s f28, f5, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x804e05578ce7d5db # load x3 with value 0x804e05578ce7d5db
sw x3, 0(x2) # store 0x804e05578ce7d5db in memory
flw f26, 0(x2) # load 0x804e05578ce7d5db from memory into f26
fmsub.s f23, f15, f28, f26, dyn # perform operation
fmsub.s f23, f15, f28, f26, rdn # perform operation
fmsub.s f23, f15, f28, f26, rmm # perform operation
fmsub.s f23, f15, f28, f26, rne # perform operation
fmsub.s f23, f15, f28, f26, rtz # perform operation
fmsub.s f23, f15, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f15, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f15, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f15, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f15, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f15, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x94632d7c66e7319c # load x3 with value 0x94632d7c66e7319c
sw x3, 0(x2) # store 0x94632d7c66e7319c in memory
flw f12, 0(x2) # load 0x94632d7c66e7319c from memory into f12
fmsub.s f22, f24, f20, f12, dyn # perform operation
fmsub.s f22, f24, f20, f12, rdn # perform operation
fmsub.s f22, f24, f20, f12, rmm # perform operation
fmsub.s f22, f24, f20, f12, rne # perform operation
fmsub.s f22, f24, f20, f12, rtz # perform operation
fmsub.s f22, f24, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f24, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f24, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x58ff604d913b7be4 # load x3 with value 0x58ff604d913b7be4
sw x3, 0(x2) # store 0x58ff604d913b7be4 in memory
flw f2, 0(x2) # load 0x58ff604d913b7be4 from memory into f2
fmsub.s f18, f5, f26, f2, dyn # perform operation
fmsub.s f18, f5, f26, f2, rdn # perform operation
fmsub.s f18, f5, f26, f2, rmm # perform operation
fmsub.s f18, f5, f26, f2, rne # perform operation
fmsub.s f18, f5, f26, f2, rtz # perform operation
fmsub.s f18, f5, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f5, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f5, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f5, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f5, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f5, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xc188f66b4c487799 # load x3 with value 0xc188f66b4c487799
sw x3, 0(x2) # store 0xc188f66b4c487799 in memory
flw f25, 0(x2) # load 0xc188f66b4c487799 from memory into f25
fmsub.s f11, f12, f6, f25, dyn # perform operation
fmsub.s f11, f12, f6, f25, rdn # perform operation
fmsub.s f11, f12, f6, f25, rmm # perform operation
fmsub.s f11, f12, f6, f25, rne # perform operation
fmsub.s f11, f12, f6, f25, rtz # perform operation
fmsub.s f11, f12, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x1405fb275f9922c2 # load x3 with value 0x1405fb275f9922c2
sw x3, 0(x2) # store 0x1405fb275f9922c2 in memory
flw f27, 0(x2) # load 0x1405fb275f9922c2 from memory into f27
fmsub.s f9, f25, f22, f27, dyn # perform operation
fmsub.s f9, f25, f22, f27, rdn # perform operation
fmsub.s f9, f25, f22, f27, rmm # perform operation
fmsub.s f9, f25, f22, f27, rne # perform operation
fmsub.s f9, f25, f22, f27, rtz # perform operation
fmsub.s f9, f25, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f25, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f25, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f25, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f25, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f25, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x3771698f9223d6e5 # load x3 with value 0x3771698f9223d6e5
sw x3, 0(x2) # store 0x3771698f9223d6e5 in memory
flw f14, 0(x2) # load 0x3771698f9223d6e5 from memory into f14
fmsub.s f8, f9, f11, f14, dyn # perform operation
fmsub.s f8, f9, f11, f14, rdn # perform operation
fmsub.s f8, f9, f11, f14, rmm # perform operation
fmsub.s f8, f9, f11, f14, rne # perform operation
fmsub.s f8, f9, f11, f14, rtz # perform operation
fmsub.s f8, f9, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f9, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x9a2a34d87286a1e7 # load x3 with value 0x9a2a34d87286a1e7
sw x3, 0(x2) # store 0x9a2a34d87286a1e7 in memory
flw f23, 0(x2) # load 0x9a2a34d87286a1e7 from memory into f23
fmsub.s f3, f14, f22, f23, dyn # perform operation
fmsub.s f3, f14, f22, f23, rdn # perform operation
fmsub.s f3, f14, f22, f23, rmm # perform operation
fmsub.s f3, f14, f22, f23, rne # perform operation
fmsub.s f3, f14, f22, f23, rtz # perform operation
fmsub.s f3, f14, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x6a4898c669b6cbcb # load x3 with value 0x6a4898c669b6cbcb
sw x3, 0(x2) # store 0x6a4898c669b6cbcb in memory
flw f24, 0(x2) # load 0x6a4898c669b6cbcb from memory into f24
fmsub.s f18, f8, f30, f24, dyn # perform operation
fmsub.s f18, f8, f30, f24, rdn # perform operation
fmsub.s f18, f8, f30, f24, rmm # perform operation
fmsub.s f18, f8, f30, f24, rne # perform operation
fmsub.s f18, f8, f30, f24, rtz # perform operation
fmsub.s f18, f8, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f8, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f8, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xb56ddcb6a0c4367e # load x3 with value 0xb56ddcb6a0c4367e
sw x3, 0(x2) # store 0xb56ddcb6a0c4367e in memory
flw f27, 0(x2) # load 0xb56ddcb6a0c4367e from memory into f27
fmsub.s f5, f28, f14, f27, dyn # perform operation
fmsub.s f5, f28, f14, f27, rdn # perform operation
fmsub.s f5, f28, f14, f27, rmm # perform operation
fmsub.s f5, f28, f14, f27, rne # perform operation
fmsub.s f5, f28, f14, f27, rtz # perform operation
fmsub.s f5, f28, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x5fe655ebcabf339a # load x3 with value 0x5fe655ebcabf339a
sw x3, 0(x2) # store 0x5fe655ebcabf339a in memory
flw f1, 0(x2) # load 0x5fe655ebcabf339a from memory into f1
fmsub.s f28, f19, f7, f1, dyn # perform operation
fmsub.s f28, f19, f7, f1, rdn # perform operation
fmsub.s f28, f19, f7, f1, rmm # perform operation
fmsub.s f28, f19, f7, f1, rne # perform operation
fmsub.s f28, f19, f7, f1, rtz # perform operation
fmsub.s f28, f19, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x40b2b8b14e5972ea # load x3 with value 0x40b2b8b14e5972ea
sw x3, 0(x2) # store 0x40b2b8b14e5972ea in memory
flw f12, 0(x2) # load 0x40b2b8b14e5972ea from memory into f12
fmsub.s f23, f8, f29, f12, dyn # perform operation
fmsub.s f23, f8, f29, f12, rdn # perform operation
fmsub.s f23, f8, f29, f12, rmm # perform operation
fmsub.s f23, f8, f29, f12, rne # perform operation
fmsub.s f23, f8, f29, f12, rtz # perform operation
fmsub.s f23, f8, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x4e9c2b36e1168139 # load x3 with value 0x4e9c2b36e1168139
sw x3, 0(x2) # store 0x4e9c2b36e1168139 in memory
flw f12, 0(x2) # load 0x4e9c2b36e1168139 from memory into f12
fmsub.s f20, f17, f22, f12, dyn # perform operation
fmsub.s f20, f17, f22, f12, rdn # perform operation
fmsub.s f20, f17, f22, f12, rmm # perform operation
fmsub.s f20, f17, f22, f12, rne # perform operation
fmsub.s f20, f17, f22, f12, rtz # perform operation
fmsub.s f20, f17, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x744f8df1cd5cce4 # load x3 with value 0x744f8df1cd5cce4
sw x3, 0(x2) # store 0x744f8df1cd5cce4 in memory
flw f11, 0(x2) # load 0x744f8df1cd5cce4 from memory into f11
fmsub.s f30, f2, f28, f11, dyn # perform operation
fmsub.s f30, f2, f28, f11, rdn # perform operation
fmsub.s f30, f2, f28, f11, rmm # perform operation
fmsub.s f30, f2, f28, f11, rne # perform operation
fmsub.s f30, f2, f28, f11, rtz # perform operation
fmsub.s f30, f2, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x3ac6b9106de2402c # load x3 with value 0x3ac6b9106de2402c
sw x3, 0(x2) # store 0x3ac6b9106de2402c in memory
flw f27, 0(x2) # load 0x3ac6b9106de2402c from memory into f27
fmsub.s f15, f16, f6, f27, dyn # perform operation
fmsub.s f15, f16, f6, f27, rdn # perform operation
fmsub.s f15, f16, f6, f27, rmm # perform operation
fmsub.s f15, f16, f6, f27, rne # perform operation
fmsub.s f15, f16, f6, f27, rtz # perform operation
fmsub.s f15, f16, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f16, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f16, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f16, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f16, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f16, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0xa23ad0cbb624eccb # load x3 with value 0xa23ad0cbb624eccb
sw x3, 0(x2) # store 0xa23ad0cbb624eccb in memory
flw f1, 0(x2) # load 0xa23ad0cbb624eccb from memory into f1
fmsub.s f15, f2, f21, f1, dyn # perform operation
fmsub.s f15, f2, f21, f1, rdn # perform operation
fmsub.s f15, f2, f21, f1, rmm # perform operation
fmsub.s f15, f2, f21, f1, rne # perform operation
fmsub.s f15, f2, f21, f1, rtz # perform operation
fmsub.s f15, f2, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x63a07afd071a011b # load x3 with value 0x63a07afd071a011b
sw x3, 0(x2) # store 0x63a07afd071a011b in memory
flw f29, 0(x2) # load 0x63a07afd071a011b from memory into f29
fmsub.s f7, f3, f12, f29, dyn # perform operation
fmsub.s f7, f3, f12, f29, rdn # perform operation
fmsub.s f7, f3, f12, f29, rmm # perform operation
fmsub.s f7, f3, f12, f29, rne # perform operation
fmsub.s f7, f3, f12, f29, rtz # perform operation
fmsub.s f7, f3, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x830d4b8c36f2f9b0 # load x3 with value 0x830d4b8c36f2f9b0
sw x3, 0(x2) # store 0x830d4b8c36f2f9b0 in memory
flw f30, 0(x2) # load 0x830d4b8c36f2f9b0 from memory into f30
fmsub.s f31, f28, f8, f30, dyn # perform operation
fmsub.s f31, f28, f8, f30, rdn # perform operation
fmsub.s f31, f28, f8, f30, rmm # perform operation
fmsub.s f31, f28, f8, f30, rne # perform operation
fmsub.s f31, f28, f8, f30, rtz # perform operation
fmsub.s f31, f28, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f28, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f28, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x227ffd35c2ffc38e # load x3 with value 0x227ffd35c2ffc38e
sw x3, 0(x2) # store 0x227ffd35c2ffc38e in memory
flw f17, 0(x2) # load 0x227ffd35c2ffc38e from memory into f17
fmsub.s f12, f8, f22, f17, dyn # perform operation
fmsub.s f12, f8, f22, f17, rdn # perform operation
fmsub.s f12, f8, f22, f17, rmm # perform operation
fmsub.s f12, f8, f22, f17, rne # perform operation
fmsub.s f12, f8, f22, f17, rtz # perform operation
fmsub.s f12, f8, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f22, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x4b0c29e7f7ca39dc # load x3 with value 0x4b0c29e7f7ca39dc
sw x3, 0(x2) # store 0x4b0c29e7f7ca39dc in memory
flw f5, 0(x2) # load 0x4b0c29e7f7ca39dc from memory into f5
fmsub.s f11, f2, f13, f5, dyn # perform operation
fmsub.s f11, f2, f13, f5, rdn # perform operation
fmsub.s f11, f2, f13, f5, rmm # perform operation
fmsub.s f11, f2, f13, f5, rne # perform operation
fmsub.s f11, f2, f13, f5, rtz # perform operation
fmsub.s f11, f2, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f2, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f2, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f2, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f2, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f2, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xaf0ecdaf5dd5b4e3 # load x3 with value 0xaf0ecdaf5dd5b4e3
sw x3, 0(x2) # store 0xaf0ecdaf5dd5b4e3 in memory
flw f24, 0(x2) # load 0xaf0ecdaf5dd5b4e3 from memory into f24
fmsub.s f14, f9, f8, f24, dyn # perform operation
fmsub.s f14, f9, f8, f24, rdn # perform operation
fmsub.s f14, f9, f8, f24, rmm # perform operation
fmsub.s f14, f9, f8, f24, rne # perform operation
fmsub.s f14, f9, f8, f24, rtz # perform operation
fmsub.s f14, f9, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x29ff2086114f7e69 # load x3 with value 0x29ff2086114f7e69
sw x3, 0(x2) # store 0x29ff2086114f7e69 in memory
flw f31, 0(x2) # load 0x29ff2086114f7e69 from memory into f31
fmsub.s f21, f28, f24, f31, dyn # perform operation
fmsub.s f21, f28, f24, f31, rdn # perform operation
fmsub.s f21, f28, f24, f31, rmm # perform operation
fmsub.s f21, f28, f24, f31, rne # perform operation
fmsub.s f21, f28, f24, f31, rtz # perform operation
fmsub.s f21, f28, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f28, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f28, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xb0866e2d879ac18b # load x3 with value 0xb0866e2d879ac18b
sw x3, 0(x2) # store 0xb0866e2d879ac18b in memory
flw f7, 0(x2) # load 0xb0866e2d879ac18b from memory into f7
fmsub.s f31, f24, f10, f7, dyn # perform operation
fmsub.s f31, f24, f10, f7, rdn # perform operation
fmsub.s f31, f24, f10, f7, rmm # perform operation
fmsub.s f31, f24, f10, f7, rne # perform operation
fmsub.s f31, f24, f10, f7, rtz # perform operation
fmsub.s f31, f24, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f24, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f24, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xee9b52e995acceef # load x3 with value 0xee9b52e995acceef
sw x3, 0(x2) # store 0xee9b52e995acceef in memory
flw f17, 0(x2) # load 0xee9b52e995acceef from memory into f17
fmsub.s f2, f18, f5, f17, dyn # perform operation
fmsub.s f2, f18, f5, f17, rdn # perform operation
fmsub.s f2, f18, f5, f17, rmm # perform operation
fmsub.s f2, f18, f5, f17, rne # perform operation
fmsub.s f2, f18, f5, f17, rtz # perform operation
fmsub.s f2, f18, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x4a427bb82b05946d # load x3 with value 0x4a427bb82b05946d
sw x3, 0(x2) # store 0x4a427bb82b05946d in memory
flw f14, 0(x2) # load 0x4a427bb82b05946d from memory into f14
fmsub.s f7, f20, f19, f14, dyn # perform operation
fmsub.s f7, f20, f19, f14, rdn # perform operation
fmsub.s f7, f20, f19, f14, rmm # perform operation
fmsub.s f7, f20, f19, f14, rne # perform operation
fmsub.s f7, f20, f19, f14, rtz # perform operation
fmsub.s f7, f20, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xa2b0457ad9a9ae55 # load x3 with value 0xa2b0457ad9a9ae55
sw x3, 0(x2) # store 0xa2b0457ad9a9ae55 in memory
flw f7, 0(x2) # load 0xa2b0457ad9a9ae55 from memory into f7
fmsub.s f10, f5, f3, f7, dyn # perform operation
fmsub.s f10, f5, f3, f7, rdn # perform operation
fmsub.s f10, f5, f3, f7, rmm # perform operation
fmsub.s f10, f5, f3, f7, rne # perform operation
fmsub.s f10, f5, f3, f7, rtz # perform operation
fmsub.s f10, f5, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f5, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f5, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x2b4bae7360fb6a3 # load x3 with value 0x2b4bae7360fb6a3
sw x3, 0(x2) # store 0x2b4bae7360fb6a3 in memory
flw f3, 0(x2) # load 0x2b4bae7360fb6a3 from memory into f3
fmsub.s f5, f23, f6, f3, dyn # perform operation
fmsub.s f5, f23, f6, f3, rdn # perform operation
fmsub.s f5, f23, f6, f3, rmm # perform operation
fmsub.s f5, f23, f6, f3, rne # perform operation
fmsub.s f5, f23, f6, f3, rtz # perform operation
fmsub.s f5, f23, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f23, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f23, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f23, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f23, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f23, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x4744bc46584fb903 # load x3 with value 0x4744bc46584fb903
sw x3, 0(x2) # store 0x4744bc46584fb903 in memory
flw f11, 0(x2) # load 0x4744bc46584fb903 from memory into f11
fmsub.s f14, f7, f28, f11, dyn # perform operation
fmsub.s f14, f7, f28, f11, rdn # perform operation
fmsub.s f14, f7, f28, f11, rmm # perform operation
fmsub.s f14, f7, f28, f11, rne # perform operation
fmsub.s f14, f7, f28, f11, rtz # perform operation
fmsub.s f14, f7, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0xb9353e670a91748a # load x3 with value 0xb9353e670a91748a
sw x3, 0(x2) # store 0xb9353e670a91748a in memory
flw f28, 0(x2) # load 0xb9353e670a91748a from memory into f28
fmsub.s f25, f5, f22, f28, dyn # perform operation
fmsub.s f25, f5, f22, f28, rdn # perform operation
fmsub.s f25, f5, f22, f28, rmm # perform operation
fmsub.s f25, f5, f22, f28, rne # perform operation
fmsub.s f25, f5, f22, f28, rtz # perform operation
fmsub.s f25, f5, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f5, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f5, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f5, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f5, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f5, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x999d67f20fa1799d # load x3 with value 0x999d67f20fa1799d
sw x3, 0(x2) # store 0x999d67f20fa1799d in memory
flw f17, 0(x2) # load 0x999d67f20fa1799d from memory into f17
fmsub.s f19, f6, f21, f17, dyn # perform operation
fmsub.s f19, f6, f21, f17, rdn # perform operation
fmsub.s f19, f6, f21, f17, rmm # perform operation
fmsub.s f19, f6, f21, f17, rne # perform operation
fmsub.s f19, f6, f21, f17, rtz # perform operation
fmsub.s f19, f6, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f6, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f6, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f6, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f6, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f6, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0xc72c71461d73d6f9 # load x3 with value 0xc72c71461d73d6f9
sw x3, 0(x2) # store 0xc72c71461d73d6f9 in memory
flw f15, 0(x2) # load 0xc72c71461d73d6f9 from memory into f15
fmsub.s f13, f24, f5, f15, dyn # perform operation
fmsub.s f13, f24, f5, f15, rdn # perform operation
fmsub.s f13, f24, f5, f15, rmm # perform operation
fmsub.s f13, f24, f5, f15, rne # perform operation
fmsub.s f13, f24, f5, f15, rtz # perform operation
fmsub.s f13, f24, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x317fbc00fdb6f341 # load x3 with value 0x317fbc00fdb6f341
sw x3, 0(x2) # store 0x317fbc00fdb6f341 in memory
flw f13, 0(x2) # load 0x317fbc00fdb6f341 from memory into f13
fmsub.s f24, f2, f23, f13, dyn # perform operation
fmsub.s f24, f2, f23, f13, rdn # perform operation
fmsub.s f24, f2, f23, f13, rmm # perform operation
fmsub.s f24, f2, f23, f13, rne # perform operation
fmsub.s f24, f2, f23, f13, rtz # perform operation
fmsub.s f24, f2, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f2, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x6e31af95c3248a14 # load x3 with value 0x6e31af95c3248a14
sw x3, 0(x2) # store 0x6e31af95c3248a14 in memory
flw f8, 0(x2) # load 0x6e31af95c3248a14 from memory into f8
fmsub.s f23, f11, f20, f8, dyn # perform operation
fmsub.s f23, f11, f20, f8, rdn # perform operation
fmsub.s f23, f11, f20, f8, rmm # perform operation
fmsub.s f23, f11, f20, f8, rne # perform operation
fmsub.s f23, f11, f20, f8, rtz # perform operation
fmsub.s f23, f11, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f11, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x6be33f2e1a677dcd # load x3 with value 0x6be33f2e1a677dcd
sw x3, 0(x2) # store 0x6be33f2e1a677dcd in memory
flw f2, 0(x2) # load 0x6be33f2e1a677dcd from memory into f2
fmsub.s f26, f21, f29, f2, dyn # perform operation
fmsub.s f26, f21, f29, f2, rdn # perform operation
fmsub.s f26, f21, f29, f2, rmm # perform operation
fmsub.s f26, f21, f29, f2, rne # perform operation
fmsub.s f26, f21, f29, f2, rtz # perform operation
fmsub.s f26, f21, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xd87d25930366f021 # load x3 with value 0xd87d25930366f021
sw x3, 0(x2) # store 0xd87d25930366f021 in memory
flw f24, 0(x2) # load 0xd87d25930366f021 from memory into f24
fmsub.s f1, f28, f25, f24, dyn # perform operation
fmsub.s f1, f28, f25, f24, rdn # perform operation
fmsub.s f1, f28, f25, f24, rmm # perform operation
fmsub.s f1, f28, f25, f24, rne # perform operation
fmsub.s f1, f28, f25, f24, rtz # perform operation
fmsub.s f1, f28, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x94c23a37e871e4c9 # load x3 with value 0x94c23a37e871e4c9
sw x3, 0(x2) # store 0x94c23a37e871e4c9 in memory
flw f10, 0(x2) # load 0x94c23a37e871e4c9 from memory into f10
fmsub.s f12, f16, f21, f10, dyn # perform operation
fmsub.s f12, f16, f21, f10, rdn # perform operation
fmsub.s f12, f16, f21, f10, rmm # perform operation
fmsub.s f12, f16, f21, f10, rne # perform operation
fmsub.s f12, f16, f21, f10, rtz # perform operation
fmsub.s f12, f16, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f16, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f16, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xb05a04104130082e # load x3 with value 0xb05a04104130082e
sw x3, 0(x2) # store 0xb05a04104130082e in memory
flw f12, 0(x2) # load 0xb05a04104130082e from memory into f12
fmsub.s f10, f8, f21, f12, dyn # perform operation
fmsub.s f10, f8, f21, f12, rdn # perform operation
fmsub.s f10, f8, f21, f12, rmm # perform operation
fmsub.s f10, f8, f21, f12, rne # perform operation
fmsub.s f10, f8, f21, f12, rtz # perform operation
fmsub.s f10, f8, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x9fc6b4c0461c8578 # load x3 with value 0x9fc6b4c0461c8578
sw x3, 0(x2) # store 0x9fc6b4c0461c8578 in memory
flw f8, 0(x2) # load 0x9fc6b4c0461c8578 from memory into f8
fmsub.s f5, f3, f28, f8, dyn # perform operation
fmsub.s f5, f3, f28, f8, rdn # perform operation
fmsub.s f5, f3, f28, f8, rmm # perform operation
fmsub.s f5, f3, f28, f8, rne # perform operation
fmsub.s f5, f3, f28, f8, rtz # perform operation
fmsub.s f5, f3, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xb2eb605ebdbdd654 # load x3 with value 0xb2eb605ebdbdd654
sw x3, 0(x2) # store 0xb2eb605ebdbdd654 in memory
flw f3, 0(x2) # load 0xb2eb605ebdbdd654 from memory into f3
fmsub.s f8, f15, f23, f3, dyn # perform operation
fmsub.s f8, f15, f23, f3, rdn # perform operation
fmsub.s f8, f15, f23, f3, rmm # perform operation
fmsub.s f8, f15, f23, f3, rne # perform operation
fmsub.s f8, f15, f23, f3, rtz # perform operation
fmsub.s f8, f15, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x5a4babd879196e9e # load x3 with value 0x5a4babd879196e9e
sw x3, 0(x2) # store 0x5a4babd879196e9e in memory
flw f20, 0(x2) # load 0x5a4babd879196e9e from memory into f20
fmsub.s f28, f29, f19, f20, dyn # perform operation
fmsub.s f28, f29, f19, f20, rdn # perform operation
fmsub.s f28, f29, f19, f20, rmm # perform operation
fmsub.s f28, f29, f19, f20, rne # perform operation
fmsub.s f28, f29, f19, f20, rtz # perform operation
fmsub.s f28, f29, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x2f6fe303cbdcefb # load x3 with value 0x2f6fe303cbdcefb
sw x3, 0(x2) # store 0x2f6fe303cbdcefb in memory
flw f15, 0(x2) # load 0x2f6fe303cbdcefb from memory into f15
fmsub.s f7, f18, f11, f15, dyn # perform operation
fmsub.s f7, f18, f11, f15, rdn # perform operation
fmsub.s f7, f18, f11, f15, rmm # perform operation
fmsub.s f7, f18, f11, f15, rne # perform operation
fmsub.s f7, f18, f11, f15, rtz # perform operation
fmsub.s f7, f18, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f18, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x99d1923c1e08a32c # load x3 with value 0x99d1923c1e08a32c
sw x3, 0(x2) # store 0x99d1923c1e08a32c in memory
flw f7, 0(x2) # load 0x99d1923c1e08a32c from memory into f7
fmsub.s f10, f31, f14, f7, dyn # perform operation
fmsub.s f10, f31, f14, f7, rdn # perform operation
fmsub.s f10, f31, f14, f7, rmm # perform operation
fmsub.s f10, f31, f14, f7, rne # perform operation
fmsub.s f10, f31, f14, f7, rtz # perform operation
fmsub.s f10, f31, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f31, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xc42f9d3544f04b18 # load x3 with value 0xc42f9d3544f04b18
sw x3, 0(x2) # store 0xc42f9d3544f04b18 in memory
flw f28, 0(x2) # load 0xc42f9d3544f04b18 from memory into f28
fmsub.s f26, f22, f5, f28, dyn # perform operation
fmsub.s f26, f22, f5, f28, rdn # perform operation
fmsub.s f26, f22, f5, f28, rmm # perform operation
fmsub.s f26, f22, f5, f28, rne # perform operation
fmsub.s f26, f22, f5, f28, rtz # perform operation
fmsub.s f26, f22, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x88aba8c4b88ac464 # load x3 with value 0x88aba8c4b88ac464
sw x3, 0(x2) # store 0x88aba8c4b88ac464 in memory
flw f27, 0(x2) # load 0x88aba8c4b88ac464 from memory into f27
fmsub.s f19, f7, f14, f27, dyn # perform operation
fmsub.s f19, f7, f14, f27, rdn # perform operation
fmsub.s f19, f7, f14, f27, rmm # perform operation
fmsub.s f19, f7, f14, f27, rne # perform operation
fmsub.s f19, f7, f14, f27, rtz # perform operation
fmsub.s f19, f7, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xe1a96a1fe1f4cec5 # load x3 with value 0xe1a96a1fe1f4cec5
sw x3, 0(x2) # store 0xe1a96a1fe1f4cec5 in memory
flw f31, 0(x2) # load 0xe1a96a1fe1f4cec5 from memory into f31
fmsub.s f21, f28, f2, f31, dyn # perform operation
fmsub.s f21, f28, f2, f31, rdn # perform operation
fmsub.s f21, f28, f2, f31, rmm # perform operation
fmsub.s f21, f28, f2, f31, rne # perform operation
fmsub.s f21, f28, f2, f31, rtz # perform operation
fmsub.s f21, f28, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f28, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f28, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f28, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f28, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f28, f2, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x9fda5ec319c37de3 # load x3 with value 0x9fda5ec319c37de3
sw x3, 0(x2) # store 0x9fda5ec319c37de3 in memory
flw f24, 0(x2) # load 0x9fda5ec319c37de3 from memory into f24
fmsub.s f18, f25, f8, f24, dyn # perform operation
fmsub.s f18, f25, f8, f24, rdn # perform operation
fmsub.s f18, f25, f8, f24, rmm # perform operation
fmsub.s f18, f25, f8, f24, rne # perform operation
fmsub.s f18, f25, f8, f24, rtz # perform operation
fmsub.s f18, f25, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x840c7aceed116742 # load x3 with value 0x840c7aceed116742
sw x3, 0(x2) # store 0x840c7aceed116742 in memory
flw f5, 0(x2) # load 0x840c7aceed116742 from memory into f5
fmsub.s f29, f26, f18, f5, dyn # perform operation
fmsub.s f29, f26, f18, f5, rdn # perform operation
fmsub.s f29, f26, f18, f5, rmm # perform operation
fmsub.s f29, f26, f18, f5, rne # perform operation
fmsub.s f29, f26, f18, f5, rtz # perform operation
fmsub.s f29, f26, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x9cc1ca10bc763114 # load x3 with value 0x9cc1ca10bc763114
sw x3, 0(x2) # store 0x9cc1ca10bc763114 in memory
flw f22, 0(x2) # load 0x9cc1ca10bc763114 from memory into f22
fmsub.s f23, f30, f5, f22, dyn # perform operation
fmsub.s f23, f30, f5, f22, rdn # perform operation
fmsub.s f23, f30, f5, f22, rmm # perform operation
fmsub.s f23, f30, f5, f22, rne # perform operation
fmsub.s f23, f30, f5, f22, rtz # perform operation
fmsub.s f23, f30, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x6b522216b72e3545 # load x3 with value 0x6b522216b72e3545
sw x3, 0(x2) # store 0x6b522216b72e3545 in memory
flw f3, 0(x2) # load 0x6b522216b72e3545 from memory into f3
fmsub.s f30, f22, f11, f3, dyn # perform operation
fmsub.s f30, f22, f11, f3, rdn # perform operation
fmsub.s f30, f22, f11, f3, rmm # perform operation
fmsub.s f30, f22, f11, f3, rne # perform operation
fmsub.s f30, f22, f11, f3, rtz # perform operation
fmsub.s f30, f22, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f22, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f22, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f22, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f22, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f22, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x24b93fd3d32632a # load x3 with value 0x24b93fd3d32632a
sw x3, 0(x2) # store 0x24b93fd3d32632a in memory
flw f5, 0(x2) # load 0x24b93fd3d32632a from memory into f5
fmsub.s f14, f7, f2, f5, dyn # perform operation
fmsub.s f14, f7, f2, f5, rdn # perform operation
fmsub.s f14, f7, f2, f5, rmm # perform operation
fmsub.s f14, f7, f2, f5, rne # perform operation
fmsub.s f14, f7, f2, f5, rtz # perform operation
fmsub.s f14, f7, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x6427ff9aad4c1c12 # load x3 with value 0x6427ff9aad4c1c12
sw x3, 0(x2) # store 0x6427ff9aad4c1c12 in memory
flw f6, 0(x2) # load 0x6427ff9aad4c1c12 from memory into f6
fmsub.s f21, f9, f22, f6, dyn # perform operation
fmsub.s f21, f9, f22, f6, rdn # perform operation
fmsub.s f21, f9, f22, f6, rmm # perform operation
fmsub.s f21, f9, f22, f6, rne # perform operation
fmsub.s f21, f9, f22, f6, rtz # perform operation
fmsub.s f21, f9, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f9, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f9, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f9, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f9, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f9, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x1aedcac311d7a8fe # load x3 with value 0x1aedcac311d7a8fe
sw x3, 0(x2) # store 0x1aedcac311d7a8fe in memory
flw f3, 0(x2) # load 0x1aedcac311d7a8fe from memory into f3
fmsub.s f25, f11, f1, f3, dyn # perform operation
fmsub.s f25, f11, f1, f3, rdn # perform operation
fmsub.s f25, f11, f1, f3, rmm # perform operation
fmsub.s f25, f11, f1, f3, rne # perform operation
fmsub.s f25, f11, f1, f3, rtz # perform operation
fmsub.s f25, f11, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xb512e120f0bd8db4 # load x3 with value 0xb512e120f0bd8db4
sw x3, 0(x2) # store 0xb512e120f0bd8db4 in memory
flw f29, 0(x2) # load 0xb512e120f0bd8db4 from memory into f29
fmsub.s f21, f10, f9, f29, dyn # perform operation
fmsub.s f21, f10, f9, f29, rdn # perform operation
fmsub.s f21, f10, f9, f29, rmm # perform operation
fmsub.s f21, f10, f9, f29, rne # perform operation
fmsub.s f21, f10, f9, f29, rtz # perform operation
fmsub.s f21, f10, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x6f7150818358667c # load x3 with value 0x6f7150818358667c
sw x3, 0(x2) # store 0x6f7150818358667c in memory
flw f12, 0(x2) # load 0x6f7150818358667c from memory into f12
fmsub.s f2, f7, f3, f12, dyn # perform operation
fmsub.s f2, f7, f3, f12, rdn # perform operation
fmsub.s f2, f7, f3, f12, rmm # perform operation
fmsub.s f2, f7, f3, f12, rne # perform operation
fmsub.s f2, f7, f3, f12, rtz # perform operation
fmsub.s f2, f7, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xad2b8aad8a4e182a # load x3 with value 0xad2b8aad8a4e182a
sw x3, 0(x2) # store 0xad2b8aad8a4e182a in memory
flw f21, 0(x2) # load 0xad2b8aad8a4e182a from memory into f21
fmsub.s f16, f23, f8, f21, dyn # perform operation
fmsub.s f16, f23, f8, f21, rdn # perform operation
fmsub.s f16, f23, f8, f21, rmm # perform operation
fmsub.s f16, f23, f8, f21, rne # perform operation
fmsub.s f16, f23, f8, f21, rtz # perform operation
fmsub.s f16, f23, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f23, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f23, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f23, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f23, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f23, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x3a108afb91659418 # load x3 with value 0x3a108afb91659418
sw x3, 0(x2) # store 0x3a108afb91659418 in memory
flw f6, 0(x2) # load 0x3a108afb91659418 from memory into f6
fmsub.s f23, f8, f31, f6, dyn # perform operation
fmsub.s f23, f8, f31, f6, rdn # perform operation
fmsub.s f23, f8, f31, f6, rmm # perform operation
fmsub.s f23, f8, f31, f6, rne # perform operation
fmsub.s f23, f8, f31, f6, rtz # perform operation
fmsub.s f23, f8, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xaa3be67c8a3029a2 # load x3 with value 0xaa3be67c8a3029a2
sw x3, 0(x2) # store 0xaa3be67c8a3029a2 in memory
flw f1, 0(x2) # load 0xaa3be67c8a3029a2 from memory into f1
fmsub.s f27, f23, f26, f1, dyn # perform operation
fmsub.s f27, f23, f26, f1, rdn # perform operation
fmsub.s f27, f23, f26, f1, rmm # perform operation
fmsub.s f27, f23, f26, f1, rne # perform operation
fmsub.s f27, f23, f26, f1, rtz # perform operation
fmsub.s f27, f23, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f23, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xda04303525b903a9 # load x3 with value 0xda04303525b903a9
sw x3, 0(x2) # store 0xda04303525b903a9 in memory
flw f6, 0(x2) # load 0xda04303525b903a9 from memory into f6
fmsub.s f12, f27, f7, f6, dyn # perform operation
fmsub.s f12, f27, f7, f6, rdn # perform operation
fmsub.s f12, f27, f7, f6, rmm # perform operation
fmsub.s f12, f27, f7, f6, rne # perform operation
fmsub.s f12, f27, f7, f6, rtz # perform operation
fmsub.s f12, f27, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f27, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0x9176847ab1bc2d71 # load x3 with value 0x9176847ab1bc2d71
sw x3, 0(x2) # store 0x9176847ab1bc2d71 in memory
flw f6, 0(x2) # load 0x9176847ab1bc2d71 from memory into f6
fmsub.s f12, f5, f9, f6, dyn # perform operation
fmsub.s f12, f5, f9, f6, rdn # perform operation
fmsub.s f12, f5, f9, f6, rmm # perform operation
fmsub.s f12, f5, f9, f6, rne # perform operation
fmsub.s f12, f5, f9, f6, rtz # perform operation
fmsub.s f12, f5, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f5, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f5, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x9ddaa0399c752a80 # load x3 with value 0x9ddaa0399c752a80
sw x3, 0(x2) # store 0x9ddaa0399c752a80 in memory
flw f17, 0(x2) # load 0x9ddaa0399c752a80 from memory into f17
fmsub.s f16, f21, f23, f17, dyn # perform operation
fmsub.s f16, f21, f23, f17, rdn # perform operation
fmsub.s f16, f21, f23, f17, rmm # perform operation
fmsub.s f16, f21, f23, f17, rne # perform operation
fmsub.s f16, f21, f23, f17, rtz # perform operation
fmsub.s f16, f21, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x7f7ff67d55aa0904 # load x3 with value 0x7f7ff67d55aa0904
sw x3, 0(x2) # store 0x7f7ff67d55aa0904 in memory
flw f29, 0(x2) # load 0x7f7ff67d55aa0904 from memory into f29
fmsub.s f12, f28, f27, f29, dyn # perform operation
fmsub.s f12, f28, f27, f29, rdn # perform operation
fmsub.s f12, f28, f27, f29, rmm # perform operation
fmsub.s f12, f28, f27, f29, rne # perform operation
fmsub.s f12, f28, f27, f29, rtz # perform operation
fmsub.s f12, f28, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x6acffee1fb2e7d94 # load x3 with value 0x6acffee1fb2e7d94
sw x3, 0(x2) # store 0x6acffee1fb2e7d94 in memory
flw f22, 0(x2) # load 0x6acffee1fb2e7d94 from memory into f22
fmsub.s f26, f2, f23, f22, dyn # perform operation
fmsub.s f26, f2, f23, f22, rdn # perform operation
fmsub.s f26, f2, f23, f22, rmm # perform operation
fmsub.s f26, f2, f23, f22, rne # perform operation
fmsub.s f26, f2, f23, f22, rtz # perform operation
fmsub.s f26, f2, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xc9d3b5122afc27b3 # load x3 with value 0xc9d3b5122afc27b3
sw x3, 0(x2) # store 0xc9d3b5122afc27b3 in memory
flw f2, 0(x2) # load 0xc9d3b5122afc27b3 from memory into f2
fmsub.s f14, f9, f19, f2, dyn # perform operation
fmsub.s f14, f9, f19, f2, rdn # perform operation
fmsub.s f14, f9, f19, f2, rmm # perform operation
fmsub.s f14, f9, f19, f2, rne # perform operation
fmsub.s f14, f9, f19, f2, rtz # perform operation
fmsub.s f14, f9, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0xda5b48d39b463e44 # load x3 with value 0xda5b48d39b463e44
sw x3, 0(x2) # store 0xda5b48d39b463e44 in memory
flw f3, 0(x2) # load 0xda5b48d39b463e44 from memory into f3
fmsub.s f8, f27, f30, f3, dyn # perform operation
fmsub.s f8, f27, f30, f3, rdn # perform operation
fmsub.s f8, f27, f30, f3, rmm # perform operation
fmsub.s f8, f27, f30, f3, rne # perform operation
fmsub.s f8, f27, f30, f3, rtz # perform operation
fmsub.s f8, f27, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x8a6c4eac3932bbea # load x3 with value 0x8a6c4eac3932bbea
sw x3, 0(x2) # store 0x8a6c4eac3932bbea in memory
flw f24, 0(x2) # load 0x8a6c4eac3932bbea from memory into f24
fmsub.s f8, f13, f19, f24, dyn # perform operation
fmsub.s f8, f13, f19, f24, rdn # perform operation
fmsub.s f8, f13, f19, f24, rmm # perform operation
fmsub.s f8, f13, f19, f24, rne # perform operation
fmsub.s f8, f13, f19, f24, rtz # perform operation
fmsub.s f8, f13, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xdd1aae0e77db1929 # load x3 with value 0xdd1aae0e77db1929
sw x3, 0(x2) # store 0xdd1aae0e77db1929 in memory
flw f1, 0(x2) # load 0xdd1aae0e77db1929 from memory into f1
fmsub.s f26, f23, f18, f1, dyn # perform operation
fmsub.s f26, f23, f18, f1, rdn # perform operation
fmsub.s f26, f23, f18, f1, rmm # perform operation
fmsub.s f26, f23, f18, f1, rne # perform operation
fmsub.s f26, f23, f18, f1, rtz # perform operation
fmsub.s f26, f23, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0xb98bb4686641ff1a # load x3 with value 0xb98bb4686641ff1a
sw x3, 0(x2) # store 0xb98bb4686641ff1a in memory
flw f22, 0(x2) # load 0xb98bb4686641ff1a from memory into f22
fmsub.s f26, f14, f28, f22, dyn # perform operation
fmsub.s f26, f14, f28, f22, rdn # perform operation
fmsub.s f26, f14, f28, f22, rmm # perform operation
fmsub.s f26, f14, f28, f22, rne # perform operation
fmsub.s f26, f14, f28, f22, rtz # perform operation
fmsub.s f26, f14, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x8bf9f0c96d7d108a # load x3 with value 0x8bf9f0c96d7d108a
sw x3, 0(x2) # store 0x8bf9f0c96d7d108a in memory
flw f26, 0(x2) # load 0x8bf9f0c96d7d108a from memory into f26
fmsub.s f31, f24, f8, f26, dyn # perform operation
fmsub.s f31, f24, f8, f26, rdn # perform operation
fmsub.s f31, f24, f8, f26, rmm # perform operation
fmsub.s f31, f24, f8, f26, rne # perform operation
fmsub.s f31, f24, f8, f26, rtz # perform operation
fmsub.s f31, f24, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f24, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f24, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f24, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f24, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f24, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0xc0e3d3fc4a3d95c # load x3 with value 0xc0e3d3fc4a3d95c
sw x3, 0(x2) # store 0xc0e3d3fc4a3d95c in memory
flw f10, 0(x2) # load 0xc0e3d3fc4a3d95c from memory into f10
fmsub.s f30, f3, f31, f10, dyn # perform operation
fmsub.s f30, f3, f31, f10, rdn # perform operation
fmsub.s f30, f3, f31, f10, rmm # perform operation
fmsub.s f30, f3, f31, f10, rne # perform operation
fmsub.s f30, f3, f31, f10, rtz # perform operation
fmsub.s f30, f3, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f3, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f3, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x5def7abc5e650c45 # load x3 with value 0x5def7abc5e650c45
sw x3, 0(x2) # store 0x5def7abc5e650c45 in memory
flw f10, 0(x2) # load 0x5def7abc5e650c45 from memory into f10
fmsub.s f19, f26, f31, f10, dyn # perform operation
fmsub.s f19, f26, f31, f10, rdn # perform operation
fmsub.s f19, f26, f31, f10, rmm # perform operation
fmsub.s f19, f26, f31, f10, rne # perform operation
fmsub.s f19, f26, f31, f10, rtz # perform operation
fmsub.s f19, f26, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x82d1c67fc19c6a06 # load x3 with value 0x82d1c67fc19c6a06
sw x3, 0(x2) # store 0x82d1c67fc19c6a06 in memory
flw f2, 0(x2) # load 0x82d1c67fc19c6a06 from memory into f2
fmsub.s f19, f28, f18, f2, dyn # perform operation
fmsub.s f19, f28, f18, f2, rdn # perform operation
fmsub.s f19, f28, f18, f2, rmm # perform operation
fmsub.s f19, f28, f18, f2, rne # perform operation
fmsub.s f19, f28, f18, f2, rtz # perform operation
fmsub.s f19, f28, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xe4782607d816608e # load x3 with value 0xe4782607d816608e
sw x3, 0(x2) # store 0xe4782607d816608e in memory
flw f3, 0(x2) # load 0xe4782607d816608e from memory into f3
fmsub.s f2, f31, f8, f3, dyn # perform operation
fmsub.s f2, f31, f8, f3, rdn # perform operation
fmsub.s f2, f31, f8, f3, rmm # perform operation
fmsub.s f2, f31, f8, f3, rne # perform operation
fmsub.s f2, f31, f8, f3, rtz # perform operation
fmsub.s f2, f31, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x39a3e663b9010ea1 # load x3 with value 0x39a3e663b9010ea1
sw x3, 0(x2) # store 0x39a3e663b9010ea1 in memory
flw f3, 0(x2) # load 0x39a3e663b9010ea1 from memory into f3
fmsub.s f26, f22, f13, f3, dyn # perform operation
fmsub.s f26, f22, f13, f3, rdn # perform operation
fmsub.s f26, f22, f13, f3, rmm # perform operation
fmsub.s f26, f22, f13, f3, rne # perform operation
fmsub.s f26, f22, f13, f3, rtz # perform operation
fmsub.s f26, f22, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x4426dae19ebfd261 # load x3 with value 0x4426dae19ebfd261
sw x3, 0(x2) # store 0x4426dae19ebfd261 in memory
flw f19, 0(x2) # load 0x4426dae19ebfd261 from memory into f19
fmsub.s f21, f13, f14, f19, dyn # perform operation
fmsub.s f21, f13, f14, f19, rdn # perform operation
fmsub.s f21, f13, f14, f19, rmm # perform operation
fmsub.s f21, f13, f14, f19, rne # perform operation
fmsub.s f21, f13, f14, f19, rtz # perform operation
fmsub.s f21, f13, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f13, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x7599bacb0104d1e7 # load x3 with value 0x7599bacb0104d1e7
sw x3, 0(x2) # store 0x7599bacb0104d1e7 in memory
flw f30, 0(x2) # load 0x7599bacb0104d1e7 from memory into f30
fmsub.s f18, f23, f14, f30, dyn # perform operation
fmsub.s f18, f23, f14, f30, rdn # perform operation
fmsub.s f18, f23, f14, f30, rmm # perform operation
fmsub.s f18, f23, f14, f30, rne # perform operation
fmsub.s f18, f23, f14, f30, rtz # perform operation
fmsub.s f18, f23, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x217af63b8ae6dfe2 # load x3 with value 0x217af63b8ae6dfe2
sw x3, 0(x2) # store 0x217af63b8ae6dfe2 in memory
flw f22, 0(x2) # load 0x217af63b8ae6dfe2 from memory into f22
fmsub.s f16, f21, f29, f22, dyn # perform operation
fmsub.s f16, f21, f29, f22, rdn # perform operation
fmsub.s f16, f21, f29, f22, rmm # perform operation
fmsub.s f16, f21, f29, f22, rne # perform operation
fmsub.s f16, f21, f29, f22, rtz # perform operation
fmsub.s f16, f21, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x8904b664a2fda53 # load x3 with value 0x8904b664a2fda53
sw x3, 0(x2) # store 0x8904b664a2fda53 in memory
flw f19, 0(x2) # load 0x8904b664a2fda53 from memory into f19
fmsub.s f6, f25, f21, f19, dyn # perform operation
fmsub.s f6, f25, f21, f19, rdn # perform operation
fmsub.s f6, f25, f21, f19, rmm # perform operation
fmsub.s f6, f25, f21, f19, rne # perform operation
fmsub.s f6, f25, f21, f19, rtz # perform operation
fmsub.s f6, f25, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f25, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f25, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x36b9a37f20fef274 # load x3 with value 0x36b9a37f20fef274
sw x3, 0(x2) # store 0x36b9a37f20fef274 in memory
flw f20, 0(x2) # load 0x36b9a37f20fef274 from memory into f20
fmsub.s f13, f23, f7, f20, dyn # perform operation
fmsub.s f13, f23, f7, f20, rdn # perform operation
fmsub.s f13, f23, f7, f20, rmm # perform operation
fmsub.s f13, f23, f7, f20, rne # perform operation
fmsub.s f13, f23, f7, f20, rtz # perform operation
fmsub.s f13, f23, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x7d7f216dce9efdbf # load x3 with value 0x7d7f216dce9efdbf
sw x3, 0(x2) # store 0x7d7f216dce9efdbf in memory
flw f10, 0(x2) # load 0x7d7f216dce9efdbf from memory into f10
fmsub.s f29, f21, f11, f10, dyn # perform operation
fmsub.s f29, f21, f11, f10, rdn # perform operation
fmsub.s f29, f21, f11, f10, rmm # perform operation
fmsub.s f29, f21, f11, f10, rne # perform operation
fmsub.s f29, f21, f11, f10, rtz # perform operation
fmsub.s f29, f21, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xf46008d3824febfc # load x3 with value 0xf46008d3824febfc
sw x3, 0(x2) # store 0xf46008d3824febfc in memory
flw f10, 0(x2) # load 0xf46008d3824febfc from memory into f10
fmsub.s f11, f16, f2, f10, dyn # perform operation
fmsub.s f11, f16, f2, f10, rdn # perform operation
fmsub.s f11, f16, f2, f10, rmm # perform operation
fmsub.s f11, f16, f2, f10, rne # perform operation
fmsub.s f11, f16, f2, f10, rtz # perform operation
fmsub.s f11, f16, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x7d0ce9ef3d9e0de2 # load x3 with value 0x7d0ce9ef3d9e0de2
sw x3, 0(x2) # store 0x7d0ce9ef3d9e0de2 in memory
flw f8, 0(x2) # load 0x7d0ce9ef3d9e0de2 from memory into f8
fmsub.s f2, f14, f11, f8, dyn # perform operation
fmsub.s f2, f14, f11, f8, rdn # perform operation
fmsub.s f2, f14, f11, f8, rmm # perform operation
fmsub.s f2, f14, f11, f8, rne # perform operation
fmsub.s f2, f14, f11, f8, rtz # perform operation
fmsub.s f2, f14, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xe46b6407fe63656d # load x3 with value 0xe46b6407fe63656d
sw x3, 0(x2) # store 0xe46b6407fe63656d in memory
flw f2, 0(x2) # load 0xe46b6407fe63656d from memory into f2
fmsub.s f14, f28, f7, f2, dyn # perform operation
fmsub.s f14, f28, f7, f2, rdn # perform operation
fmsub.s f14, f28, f7, f2, rmm # perform operation
fmsub.s f14, f28, f7, f2, rne # perform operation
fmsub.s f14, f28, f7, f2, rtz # perform operation
fmsub.s f14, f28, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x4b29e166069670ad # load x3 with value 0x4b29e166069670ad
sw x3, 0(x2) # store 0x4b29e166069670ad in memory
flw f31, 0(x2) # load 0x4b29e166069670ad from memory into f31
fmsub.s f30, f19, f9, f31, dyn # perform operation
fmsub.s f30, f19, f9, f31, rdn # perform operation
fmsub.s f30, f19, f9, f31, rmm # perform operation
fmsub.s f30, f19, f9, f31, rne # perform operation
fmsub.s f30, f19, f9, f31, rtz # perform operation
fmsub.s f30, f19, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xb85f5490810705d9 # load x3 with value 0xb85f5490810705d9
sw x3, 0(x2) # store 0xb85f5490810705d9 in memory
flw f18, 0(x2) # load 0xb85f5490810705d9 from memory into f18
fmsub.s f8, f25, f3, f18, dyn # perform operation
fmsub.s f8, f25, f3, f18, rdn # perform operation
fmsub.s f8, f25, f3, f18, rmm # perform operation
fmsub.s f8, f25, f3, f18, rne # perform operation
fmsub.s f8, f25, f3, f18, rtz # perform operation
fmsub.s f8, f25, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0xd7cb67ac841f899e # load x3 with value 0xd7cb67ac841f899e
sw x3, 0(x2) # store 0xd7cb67ac841f899e in memory
flw f12, 0(x2) # load 0xd7cb67ac841f899e from memory into f12
fmsub.s f23, f2, f19, f12, dyn # perform operation
fmsub.s f23, f2, f19, f12, rdn # perform operation
fmsub.s f23, f2, f19, f12, rmm # perform operation
fmsub.s f23, f2, f19, f12, rne # perform operation
fmsub.s f23, f2, f19, f12, rtz # perform operation
fmsub.s f23, f2, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f2, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xdbc4e33444d656af # load x3 with value 0xdbc4e33444d656af
sw x3, 0(x2) # store 0xdbc4e33444d656af in memory
flw f24, 0(x2) # load 0xdbc4e33444d656af from memory into f24
fmsub.s f10, f1, f15, f24, dyn # perform operation
fmsub.s f10, f1, f15, f24, rdn # perform operation
fmsub.s f10, f1, f15, f24, rmm # perform operation
fmsub.s f10, f1, f15, f24, rne # perform operation
fmsub.s f10, f1, f15, f24, rtz # perform operation
fmsub.s f10, f1, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xca70913ce60c1685 # load x3 with value 0xca70913ce60c1685
sw x3, 0(x2) # store 0xca70913ce60c1685 in memory
flw f26, 0(x2) # load 0xca70913ce60c1685 from memory into f26
fmsub.s f15, f5, f14, f26, dyn # perform operation
fmsub.s f15, f5, f14, f26, rdn # perform operation
fmsub.s f15, f5, f14, f26, rmm # perform operation
fmsub.s f15, f5, f14, f26, rne # perform operation
fmsub.s f15, f5, f14, f26, rtz # perform operation
fmsub.s f15, f5, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f14, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x981d5edc9ead0c5a # load x3 with value 0x981d5edc9ead0c5a
sw x3, 0(x2) # store 0x981d5edc9ead0c5a in memory
flw f22, 0(x2) # load 0x981d5edc9ead0c5a from memory into f22
fmsub.s f29, f17, f11, f22, dyn # perform operation
fmsub.s f29, f17, f11, f22, rdn # perform operation
fmsub.s f29, f17, f11, f22, rmm # perform operation
fmsub.s f29, f17, f11, f22, rne # perform operation
fmsub.s f29, f17, f11, f22, rtz # perform operation
fmsub.s f29, f17, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f17, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x76af9663df8d8a4 # load x3 with value 0x76af9663df8d8a4
sw x3, 0(x2) # store 0x76af9663df8d8a4 in memory
flw f3, 0(x2) # load 0x76af9663df8d8a4 from memory into f3
fmsub.s f9, f10, f21, f3, dyn # perform operation
fmsub.s f9, f10, f21, f3, rdn # perform operation
fmsub.s f9, f10, f21, f3, rmm # perform operation
fmsub.s f9, f10, f21, f3, rne # perform operation
fmsub.s f9, f10, f21, f3, rtz # perform operation
fmsub.s f9, f10, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x639e45ce2424aa39 # load x3 with value 0x639e45ce2424aa39
sw x3, 0(x2) # store 0x639e45ce2424aa39 in memory
flw f20, 0(x2) # load 0x639e45ce2424aa39 from memory into f20
fmsub.s f26, f2, f16, f20, dyn # perform operation
fmsub.s f26, f2, f16, f20, rdn # perform operation
fmsub.s f26, f2, f16, f20, rmm # perform operation
fmsub.s f26, f2, f16, f20, rne # perform operation
fmsub.s f26, f2, f16, f20, rtz # perform operation
fmsub.s f26, f2, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xf4a6f5174dbeae9a # load x3 with value 0xf4a6f5174dbeae9a
sw x3, 0(x2) # store 0xf4a6f5174dbeae9a in memory
flw f3, 0(x2) # load 0xf4a6f5174dbeae9a from memory into f3
fmsub.s f19, f26, f1, f3, dyn # perform operation
fmsub.s f19, f26, f1, f3, rdn # perform operation
fmsub.s f19, f26, f1, f3, rmm # perform operation
fmsub.s f19, f26, f1, f3, rne # perform operation
fmsub.s f19, f26, f1, f3, rtz # perform operation
fmsub.s f19, f26, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x14424b6ba3c08ba4 # load x3 with value 0x14424b6ba3c08ba4
sw x3, 0(x2) # store 0x14424b6ba3c08ba4 in memory
flw f21, 0(x2) # load 0x14424b6ba3c08ba4 from memory into f21
fmsub.s f1, f15, f29, f21, dyn # perform operation
fmsub.s f1, f15, f29, f21, rdn # perform operation
fmsub.s f1, f15, f29, f21, rmm # perform operation
fmsub.s f1, f15, f29, f21, rne # perform operation
fmsub.s f1, f15, f29, f21, rtz # perform operation
fmsub.s f1, f15, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0xf971bcd5f4612cb6 # load x3 with value 0xf971bcd5f4612cb6
sw x3, 0(x2) # store 0xf971bcd5f4612cb6 in memory
flw f3, 0(x2) # load 0xf971bcd5f4612cb6 from memory into f3
fmsub.s f17, f1, f19, f3, dyn # perform operation
fmsub.s f17, f1, f19, f3, rdn # perform operation
fmsub.s f17, f1, f19, f3, rmm # perform operation
fmsub.s f17, f1, f19, f3, rne # perform operation
fmsub.s f17, f1, f19, f3, rtz # perform operation
fmsub.s f17, f1, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x3d41b585d59c85e # load x3 with value 0x3d41b585d59c85e
sw x3, 0(x2) # store 0x3d41b585d59c85e in memory
flw f3, 0(x2) # load 0x3d41b585d59c85e from memory into f3
fmsub.s f26, f12, f18, f3, dyn # perform operation
fmsub.s f26, f12, f18, f3, rdn # perform operation
fmsub.s f26, f12, f18, f3, rmm # perform operation
fmsub.s f26, f12, f18, f3, rne # perform operation
fmsub.s f26, f12, f18, f3, rtz # perform operation
fmsub.s f26, f12, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x2a01918fde42c3ef # load x3 with value 0x2a01918fde42c3ef
sw x3, 0(x2) # store 0x2a01918fde42c3ef in memory
flw f11, 0(x2) # load 0x2a01918fde42c3ef from memory into f11
fmsub.s f27, f22, f28, f11, dyn # perform operation
fmsub.s f27, f22, f28, f11, rdn # perform operation
fmsub.s f27, f22, f28, f11, rmm # perform operation
fmsub.s f27, f22, f28, f11, rne # perform operation
fmsub.s f27, f22, f28, f11, rtz # perform operation
fmsub.s f27, f22, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f22, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f22, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f22, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f22, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f22, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xdd939f3456241c7f # load x3 with value 0xdd939f3456241c7f
sw x3, 0(x2) # store 0xdd939f3456241c7f in memory
flw f19, 0(x2) # load 0xdd939f3456241c7f from memory into f19
fmsub.s f30, f14, f31, f19, dyn # perform operation
fmsub.s f30, f14, f31, f19, rdn # perform operation
fmsub.s f30, f14, f31, f19, rmm # perform operation
fmsub.s f30, f14, f31, f19, rne # perform operation
fmsub.s f30, f14, f31, f19, rtz # perform operation
fmsub.s f30, f14, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f14, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f14, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x2d6279ca27e89e99 # load x3 with value 0x2d6279ca27e89e99
sw x3, 0(x2) # store 0x2d6279ca27e89e99 in memory
flw f11, 0(x2) # load 0x2d6279ca27e89e99 from memory into f11
fmsub.s f9, f10, f29, f11, dyn # perform operation
fmsub.s f9, f10, f29, f11, rdn # perform operation
fmsub.s f9, f10, f29, f11, rmm # perform operation
fmsub.s f9, f10, f29, f11, rne # perform operation
fmsub.s f9, f10, f29, f11, rtz # perform operation
fmsub.s f9, f10, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x1108aa421ca8634f # load x3 with value 0x1108aa421ca8634f
sw x3, 0(x2) # store 0x1108aa421ca8634f in memory
flw f11, 0(x2) # load 0x1108aa421ca8634f from memory into f11
fmsub.s f19, f5, f3, f11, dyn # perform operation
fmsub.s f19, f5, f3, f11, rdn # perform operation
fmsub.s f19, f5, f3, f11, rmm # perform operation
fmsub.s f19, f5, f3, f11, rne # perform operation
fmsub.s f19, f5, f3, f11, rtz # perform operation
fmsub.s f19, f5, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f5, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f5, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x828b327af0f3e768 # load x3 with value 0x828b327af0f3e768
sw x3, 0(x2) # store 0x828b327af0f3e768 in memory
flw f22, 0(x2) # load 0x828b327af0f3e768 from memory into f22
fmsub.s f21, f30, f28, f22, dyn # perform operation
fmsub.s f21, f30, f28, f22, rdn # perform operation
fmsub.s f21, f30, f28, f22, rmm # perform operation
fmsub.s f21, f30, f28, f22, rne # perform operation
fmsub.s f21, f30, f28, f22, rtz # perform operation
fmsub.s f21, f30, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x8a70fa3582d5a926 # load x3 with value 0x8a70fa3582d5a926
sw x3, 0(x2) # store 0x8a70fa3582d5a926 in memory
flw f11, 0(x2) # load 0x8a70fa3582d5a926 from memory into f11
fmsub.s f22, f31, f5, f11, dyn # perform operation
fmsub.s f22, f31, f5, f11, rdn # perform operation
fmsub.s f22, f31, f5, f11, rmm # perform operation
fmsub.s f22, f31, f5, f11, rne # perform operation
fmsub.s f22, f31, f5, f11, rtz # perform operation
fmsub.s f22, f31, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0xf4ef9fe71ab5e5f0 # load x3 with value 0xf4ef9fe71ab5e5f0
sw x3, 0(x2) # store 0xf4ef9fe71ab5e5f0 in memory
flw f23, 0(x2) # load 0xf4ef9fe71ab5e5f0 from memory into f23
fmsub.s f26, f5, f6, f23, dyn # perform operation
fmsub.s f26, f5, f6, f23, rdn # perform operation
fmsub.s f26, f5, f6, f23, rmm # perform operation
fmsub.s f26, f5, f6, f23, rne # perform operation
fmsub.s f26, f5, f6, f23, rtz # perform operation
fmsub.s f26, f5, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f5, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x1736122b36f27e6 # load x3 with value 0x1736122b36f27e6
sw x3, 0(x2) # store 0x1736122b36f27e6 in memory
flw f24, 0(x2) # load 0x1736122b36f27e6 from memory into f24
fmsub.s f11, f18, f31, f24, dyn # perform operation
fmsub.s f11, f18, f31, f24, rdn # perform operation
fmsub.s f11, f18, f31, f24, rmm # perform operation
fmsub.s f11, f18, f31, f24, rne # perform operation
fmsub.s f11, f18, f31, f24, rtz # perform operation
fmsub.s f11, f18, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f18, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x163003c6ff54707 # load x3 with value 0x163003c6ff54707
sw x3, 0(x2) # store 0x163003c6ff54707 in memory
flw f25, 0(x2) # load 0x163003c6ff54707 from memory into f25
fmsub.s f31, f17, f11, f25, dyn # perform operation
fmsub.s f31, f17, f11, f25, rdn # perform operation
fmsub.s f31, f17, f11, f25, rmm # perform operation
fmsub.s f31, f17, f11, f25, rne # perform operation
fmsub.s f31, f17, f11, f25, rtz # perform operation
fmsub.s f31, f17, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f17, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0xd4a472e63f21cc3f # load x3 with value 0xd4a472e63f21cc3f
sw x3, 0(x2) # store 0xd4a472e63f21cc3f in memory
flw f22, 0(x2) # load 0xd4a472e63f21cc3f from memory into f22
fmsub.s f31, f3, f10, f22, dyn # perform operation
fmsub.s f31, f3, f10, f22, rdn # perform operation
fmsub.s f31, f3, f10, f22, rmm # perform operation
fmsub.s f31, f3, f10, f22, rne # perform operation
fmsub.s f31, f3, f10, f22, rtz # perform operation
fmsub.s f31, f3, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x3523e31f14e113c1 # load x3 with value 0x3523e31f14e113c1
sw x3, 0(x2) # store 0x3523e31f14e113c1 in memory
flw f28, 0(x2) # load 0x3523e31f14e113c1 from memory into f28
fmsub.s f21, f7, f29, f28, dyn # perform operation
fmsub.s f21, f7, f29, f28, rdn # perform operation
fmsub.s f21, f7, f29, f28, rmm # perform operation
fmsub.s f21, f7, f29, f28, rne # perform operation
fmsub.s f21, f7, f29, f28, rtz # perform operation
fmsub.s f21, f7, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f7, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x707dfd8284687a6 # load x3 with value 0x707dfd8284687a6
sw x3, 0(x2) # store 0x707dfd8284687a6 in memory
flw f28, 0(x2) # load 0x707dfd8284687a6 from memory into f28
fmsub.s f31, f11, f14, f28, dyn # perform operation
fmsub.s f31, f11, f14, f28, rdn # perform operation
fmsub.s f31, f11, f14, f28, rmm # perform operation
fmsub.s f31, f11, f14, f28, rne # perform operation
fmsub.s f31, f11, f14, f28, rtz # perform operation
fmsub.s f31, f11, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xa4160babfa093d6d # load x3 with value 0xa4160babfa093d6d
sw x3, 0(x2) # store 0xa4160babfa093d6d in memory
flw f9, 0(x2) # load 0xa4160babfa093d6d from memory into f9
fmsub.s f10, f15, f27, f9, dyn # perform operation
fmsub.s f10, f15, f27, f9, rdn # perform operation
fmsub.s f10, f15, f27, f9, rmm # perform operation
fmsub.s f10, f15, f27, f9, rne # perform operation
fmsub.s f10, f15, f27, f9, rtz # perform operation
fmsub.s f10, f15, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f15, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x3c60b86bd97422f2 # load x3 with value 0x3c60b86bd97422f2
sw x3, 0(x2) # store 0x3c60b86bd97422f2 in memory
flw f14, 0(x2) # load 0x3c60b86bd97422f2 from memory into f14
fmsub.s f3, f7, f24, f14, dyn # perform operation
fmsub.s f3, f7, f24, f14, rdn # perform operation
fmsub.s f3, f7, f24, f14, rmm # perform operation
fmsub.s f3, f7, f24, f14, rne # perform operation
fmsub.s f3, f7, f24, f14, rtz # perform operation
fmsub.s f3, f7, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x6853d8e38696f563 # load x3 with value 0x6853d8e38696f563
sw x3, 0(x2) # store 0x6853d8e38696f563 in memory
flw f12, 0(x2) # load 0x6853d8e38696f563 from memory into f12
fmsub.s f26, f13, f27, f12, dyn # perform operation
fmsub.s f26, f13, f27, f12, rdn # perform operation
fmsub.s f26, f13, f27, f12, rmm # perform operation
fmsub.s f26, f13, f27, f12, rne # perform operation
fmsub.s f26, f13, f27, f12, rtz # perform operation
fmsub.s f26, f13, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f13, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f13, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x1dcc7d7bd0aa3e7b # load x3 with value 0x1dcc7d7bd0aa3e7b
sw x3, 0(x2) # store 0x1dcc7d7bd0aa3e7b in memory
flw f23, 0(x2) # load 0x1dcc7d7bd0aa3e7b from memory into f23
fmsub.s f10, f25, f21, f23, dyn # perform operation
fmsub.s f10, f25, f21, f23, rdn # perform operation
fmsub.s f10, f25, f21, f23, rmm # perform operation
fmsub.s f10, f25, f21, f23, rne # perform operation
fmsub.s f10, f25, f21, f23, rtz # perform operation
fmsub.s f10, f25, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x9f1228eba99d36ca # load x3 with value 0x9f1228eba99d36ca
sw x3, 0(x2) # store 0x9f1228eba99d36ca in memory
flw f10, 0(x2) # load 0x9f1228eba99d36ca from memory into f10
fmsub.s f23, f8, f11, f10, dyn # perform operation
fmsub.s f23, f8, f11, f10, rdn # perform operation
fmsub.s f23, f8, f11, f10, rmm # perform operation
fmsub.s f23, f8, f11, f10, rne # perform operation
fmsub.s f23, f8, f11, f10, rtz # perform operation
fmsub.s f23, f8, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x6b4a88d0fb1beafa # load x3 with value 0x6b4a88d0fb1beafa
sw x3, 0(x2) # store 0x6b4a88d0fb1beafa in memory
flw f21, 0(x2) # load 0x6b4a88d0fb1beafa from memory into f21
fmsub.s f26, f25, f17, f21, dyn # perform operation
fmsub.s f26, f25, f17, f21, rdn # perform operation
fmsub.s f26, f25, f17, f21, rmm # perform operation
fmsub.s f26, f25, f17, f21, rne # perform operation
fmsub.s f26, f25, f17, f21, rtz # perform operation
fmsub.s f26, f25, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f25, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f25, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x681cb65ace8aaa23 # load x3 with value 0x681cb65ace8aaa23
sw x3, 0(x2) # store 0x681cb65ace8aaa23 in memory
flw f24, 0(x2) # load 0x681cb65ace8aaa23 from memory into f24
fmsub.s f28, f15, f31, f24, dyn # perform operation
fmsub.s f28, f15, f31, f24, rdn # perform operation
fmsub.s f28, f15, f31, f24, rmm # perform operation
fmsub.s f28, f15, f31, f24, rne # perform operation
fmsub.s f28, f15, f31, f24, rtz # perform operation
fmsub.s f28, f15, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x6ec72ae0e32ccf86 # load x3 with value 0x6ec72ae0e32ccf86
sw x3, 0(x2) # store 0x6ec72ae0e32ccf86 in memory
flw f3, 0(x2) # load 0x6ec72ae0e32ccf86 from memory into f3
fmsub.s f13, f20, f22, f3, dyn # perform operation
fmsub.s f13, f20, f22, f3, rdn # perform operation
fmsub.s f13, f20, f22, f3, rmm # perform operation
fmsub.s f13, f20, f22, f3, rne # perform operation
fmsub.s f13, f20, f22, f3, rtz # perform operation
fmsub.s f13, f20, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xd03a380da9bcb504 # load x3 with value 0xd03a380da9bcb504
sw x3, 0(x2) # store 0xd03a380da9bcb504 in memory
flw f31, 0(x2) # load 0xd03a380da9bcb504 from memory into f31
fmsub.s f25, f10, f11, f31, dyn # perform operation
fmsub.s f25, f10, f11, f31, rdn # perform operation
fmsub.s f25, f10, f11, f31, rmm # perform operation
fmsub.s f25, f10, f11, f31, rne # perform operation
fmsub.s f25, f10, f11, f31, rtz # perform operation
fmsub.s f25, f10, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xbf3e752a5140f3fe # load x3 with value 0xbf3e752a5140f3fe
sw x3, 0(x2) # store 0xbf3e752a5140f3fe in memory
flw f31, 0(x2) # load 0xbf3e752a5140f3fe from memory into f31
fmsub.s f19, f25, f10, f31, dyn # perform operation
fmsub.s f19, f25, f10, f31, rdn # perform operation
fmsub.s f19, f25, f10, f31, rmm # perform operation
fmsub.s f19, f25, f10, f31, rne # perform operation
fmsub.s f19, f25, f10, f31, rtz # perform operation
fmsub.s f19, f25, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xbcab4e109d310186 # load x3 with value 0xbcab4e109d310186
sw x3, 0(x2) # store 0xbcab4e109d310186 in memory
flw f10, 0(x2) # load 0xbcab4e109d310186 from memory into f10
fmsub.s f29, f23, f6, f10, dyn # perform operation
fmsub.s f29, f23, f6, f10, rdn # perform operation
fmsub.s f29, f23, f6, f10, rmm # perform operation
fmsub.s f29, f23, f6, f10, rne # perform operation
fmsub.s f29, f23, f6, f10, rtz # perform operation
fmsub.s f29, f23, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x712841d503aabb0a # load x3 with value 0x712841d503aabb0a
sw x3, 0(x2) # store 0x712841d503aabb0a in memory
flw f2, 0(x2) # load 0x712841d503aabb0a from memory into f2
fmsub.s f9, f15, f7, f2, dyn # perform operation
fmsub.s f9, f15, f7, f2, rdn # perform operation
fmsub.s f9, f15, f7, f2, rmm # perform operation
fmsub.s f9, f15, f7, f2, rne # perform operation
fmsub.s f9, f15, f7, f2, rtz # perform operation
fmsub.s f9, f15, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x7e53e3c4f7418d21 # load x3 with value 0x7e53e3c4f7418d21
sw x3, 0(x2) # store 0x7e53e3c4f7418d21 in memory
flw f22, 0(x2) # load 0x7e53e3c4f7418d21 from memory into f22
fmsub.s f12, f9, f10, f22, dyn # perform operation
fmsub.s f12, f9, f10, f22, rdn # perform operation
fmsub.s f12, f9, f10, f22, rmm # perform operation
fmsub.s f12, f9, f10, f22, rne # perform operation
fmsub.s f12, f9, f10, f22, rtz # perform operation
fmsub.s f12, f9, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x60f8cfc1665aa891 # load x3 with value 0x60f8cfc1665aa891
sw x3, 0(x2) # store 0x60f8cfc1665aa891 in memory
flw f31, 0(x2) # load 0x60f8cfc1665aa891 from memory into f31
fmsub.s f11, f9, f28, f31, dyn # perform operation
fmsub.s f11, f9, f28, f31, rdn # perform operation
fmsub.s f11, f9, f28, f31, rmm # perform operation
fmsub.s f11, f9, f28, f31, rne # perform operation
fmsub.s f11, f9, f28, f31, rtz # perform operation
fmsub.s f11, f9, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xb0b2981b7814e48e # load x3 with value 0xb0b2981b7814e48e
sw x3, 0(x2) # store 0xb0b2981b7814e48e in memory
flw f25, 0(x2) # load 0xb0b2981b7814e48e from memory into f25
fmsub.s f11, f21, f23, f25, dyn # perform operation
fmsub.s f11, f21, f23, f25, rdn # perform operation
fmsub.s f11, f21, f23, f25, rmm # perform operation
fmsub.s f11, f21, f23, f25, rne # perform operation
fmsub.s f11, f21, f23, f25, rtz # perform operation
fmsub.s f11, f21, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x6f07800867207a4b # load x3 with value 0x6f07800867207a4b
sw x3, 0(x2) # store 0x6f07800867207a4b in memory
flw f25, 0(x2) # load 0x6f07800867207a4b from memory into f25
fmsub.s f17, f3, f29, f25, dyn # perform operation
fmsub.s f17, f3, f29, f25, rdn # perform operation
fmsub.s f17, f3, f29, f25, rmm # perform operation
fmsub.s f17, f3, f29, f25, rne # perform operation
fmsub.s f17, f3, f29, f25, rtz # perform operation
fmsub.s f17, f3, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f29, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xb0423a76f2c5b978 # load x3 with value 0xb0423a76f2c5b978
sw x3, 0(x2) # store 0xb0423a76f2c5b978 in memory
flw f19, 0(x2) # load 0xb0423a76f2c5b978 from memory into f19
fmsub.s f24, f30, f5, f19, dyn # perform operation
fmsub.s f24, f30, f5, f19, rdn # perform operation
fmsub.s f24, f30, f5, f19, rmm # perform operation
fmsub.s f24, f30, f5, f19, rne # perform operation
fmsub.s f24, f30, f5, f19, rtz # perform operation
fmsub.s f24, f30, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xc70c505faad817de # load x3 with value 0xc70c505faad817de
sw x3, 0(x2) # store 0xc70c505faad817de in memory
flw f9, 0(x2) # load 0xc70c505faad817de from memory into f9
fmsub.s f12, f6, f14, f9, dyn # perform operation
fmsub.s f12, f6, f14, f9, rdn # perform operation
fmsub.s f12, f6, f14, f9, rmm # perform operation
fmsub.s f12, f6, f14, f9, rne # perform operation
fmsub.s f12, f6, f14, f9, rtz # perform operation
fmsub.s f12, f6, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x4b83470729abbf3e # load x3 with value 0x4b83470729abbf3e
sw x3, 0(x2) # store 0x4b83470729abbf3e in memory
flw f29, 0(x2) # load 0x4b83470729abbf3e from memory into f29
fmsub.s f6, f25, f26, f29, dyn # perform operation
fmsub.s f6, f25, f26, f29, rdn # perform operation
fmsub.s f6, f25, f26, f29, rmm # perform operation
fmsub.s f6, f25, f26, f29, rne # perform operation
fmsub.s f6, f25, f26, f29, rtz # perform operation
fmsub.s f6, f25, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f25, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0xb5e0891cafce2ba4 # load x3 with value 0xb5e0891cafce2ba4
sw x3, 0(x2) # store 0xb5e0891cafce2ba4 in memory
flw f12, 0(x2) # load 0xb5e0891cafce2ba4 from memory into f12
fmsub.s f25, f8, f5, f12, dyn # perform operation
fmsub.s f25, f8, f5, f12, rdn # perform operation
fmsub.s f25, f8, f5, f12, rmm # perform operation
fmsub.s f25, f8, f5, f12, rne # perform operation
fmsub.s f25, f8, f5, f12, rtz # perform operation
fmsub.s f25, f8, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f8, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f8, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x64300d8351f5d99e # load x3 with value 0x64300d8351f5d99e
sw x3, 0(x2) # store 0x64300d8351f5d99e in memory
flw f31, 0(x2) # load 0x64300d8351f5d99e from memory into f31
fmsub.s f3, f28, f16, f31, dyn # perform operation
fmsub.s f3, f28, f16, f31, rdn # perform operation
fmsub.s f3, f28, f16, f31, rmm # perform operation
fmsub.s f3, f28, f16, f31, rne # perform operation
fmsub.s f3, f28, f16, f31, rtz # perform operation
fmsub.s f3, f28, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xc22f7ecde09e03df # load x3 with value 0xc22f7ecde09e03df
sw x3, 0(x2) # store 0xc22f7ecde09e03df in memory
flw f3, 0(x2) # load 0xc22f7ecde09e03df from memory into f3
fmsub.s f26, f17, f12, f3, dyn # perform operation
fmsub.s f26, f17, f12, f3, rdn # perform operation
fmsub.s f26, f17, f12, f3, rmm # perform operation
fmsub.s f26, f17, f12, f3, rne # perform operation
fmsub.s f26, f17, f12, f3, rtz # perform operation
fmsub.s f26, f17, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xe7a2cf3672694e6 # load x3 with value 0xe7a2cf3672694e6
sw x3, 0(x2) # store 0xe7a2cf3672694e6 in memory
flw f31, 0(x2) # load 0xe7a2cf3672694e6 from memory into f31
fmsub.s f10, f28, f27, f31, dyn # perform operation
fmsub.s f10, f28, f27, f31, rdn # perform operation
fmsub.s f10, f28, f27, f31, rmm # perform operation
fmsub.s f10, f28, f27, f31, rne # perform operation
fmsub.s f10, f28, f27, f31, rtz # perform operation
fmsub.s f10, f28, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x7e34c114fde93519 # load x3 with value 0x7e34c114fde93519
sw x3, 0(x2) # store 0x7e34c114fde93519 in memory
flw f19, 0(x2) # load 0x7e34c114fde93519 from memory into f19
fmsub.s f21, f23, f27, f19, dyn # perform operation
fmsub.s f21, f23, f27, f19, rdn # perform operation
fmsub.s f21, f23, f27, f19, rmm # perform operation
fmsub.s f21, f23, f27, f19, rne # perform operation
fmsub.s f21, f23, f27, f19, rtz # perform operation
fmsub.s f21, f23, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f23, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f23, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xe76767f10d7c09c5 # load x3 with value 0xe76767f10d7c09c5
sw x3, 0(x2) # store 0xe76767f10d7c09c5 in memory
flw f18, 0(x2) # load 0xe76767f10d7c09c5 from memory into f18
fmsub.s f22, f23, f11, f18, dyn # perform operation
fmsub.s f22, f23, f11, f18, rdn # perform operation
fmsub.s f22, f23, f11, f18, rmm # perform operation
fmsub.s f22, f23, f11, f18, rne # perform operation
fmsub.s f22, f23, f11, f18, rtz # perform operation
fmsub.s f22, f23, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x96049bcf89659ee0 # load x3 with value 0x96049bcf89659ee0
sw x3, 0(x2) # store 0x96049bcf89659ee0 in memory
flw f25, 0(x2) # load 0x96049bcf89659ee0 from memory into f25
fmsub.s f21, f22, f27, f25, dyn # perform operation
fmsub.s f21, f22, f27, f25, rdn # perform operation
fmsub.s f21, f22, f27, f25, rmm # perform operation
fmsub.s f21, f22, f27, f25, rne # perform operation
fmsub.s f21, f22, f27, f25, rtz # perform operation
fmsub.s f21, f22, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x9f1d2b9a2a452ca6 # load x3 with value 0x9f1d2b9a2a452ca6
sw x3, 0(x2) # store 0x9f1d2b9a2a452ca6 in memory
flw f23, 0(x2) # load 0x9f1d2b9a2a452ca6 from memory into f23
fmsub.s f13, f6, f18, f23, dyn # perform operation
fmsub.s f13, f6, f18, f23, rdn # perform operation
fmsub.s f13, f6, f18, f23, rmm # perform operation
fmsub.s f13, f6, f18, f23, rne # perform operation
fmsub.s f13, f6, f18, f23, rtz # perform operation
fmsub.s f13, f6, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f6, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xe3f1407a2feeab18 # load x3 with value 0xe3f1407a2feeab18
sw x3, 0(x2) # store 0xe3f1407a2feeab18 in memory
flw f6, 0(x2) # load 0xe3f1407a2feeab18 from memory into f6
fmsub.s f23, f26, f13, f6, dyn # perform operation
fmsub.s f23, f26, f13, f6, rdn # perform operation
fmsub.s f23, f26, f13, f6, rmm # perform operation
fmsub.s f23, f26, f13, f6, rne # perform operation
fmsub.s f23, f26, f13, f6, rtz # perform operation
fmsub.s f23, f26, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f26, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f26, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f26, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f26, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f26, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xf2fa46d67c96905e # load x3 with value 0xf2fa46d67c96905e
sw x3, 0(x2) # store 0xf2fa46d67c96905e in memory
flw f8, 0(x2) # load 0xf2fa46d67c96905e from memory into f8
fmsub.s f31, f9, f24, f8, dyn # perform operation
fmsub.s f31, f9, f24, f8, rdn # perform operation
fmsub.s f31, f9, f24, f8, rmm # perform operation
fmsub.s f31, f9, f24, f8, rne # perform operation
fmsub.s f31, f9, f24, f8, rtz # perform operation
fmsub.s f31, f9, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xc35ca9d5fb8ce896 # load x3 with value 0xc35ca9d5fb8ce896
sw x3, 0(x2) # store 0xc35ca9d5fb8ce896 in memory
flw f23, 0(x2) # load 0xc35ca9d5fb8ce896 from memory into f23
fmsub.s f17, f27, f20, f23, dyn # perform operation
fmsub.s f17, f27, f20, f23, rdn # perform operation
fmsub.s f17, f27, f20, f23, rmm # perform operation
fmsub.s f17, f27, f20, f23, rne # perform operation
fmsub.s f17, f27, f20, f23, rtz # perform operation
fmsub.s f17, f27, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f27, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x81e007a6a516fad5 # load x3 with value 0x81e007a6a516fad5
sw x3, 0(x2) # store 0x81e007a6a516fad5 in memory
flw f19, 0(x2) # load 0x81e007a6a516fad5 from memory into f19
fmsub.s f5, f1, f8, f19, dyn # perform operation
fmsub.s f5, f1, f8, f19, rdn # perform operation
fmsub.s f5, f1, f8, f19, rmm # perform operation
fmsub.s f5, f1, f8, f19, rne # perform operation
fmsub.s f5, f1, f8, f19, rtz # perform operation
fmsub.s f5, f1, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xdd59b1835dbaef29 # load x3 with value 0xdd59b1835dbaef29
sw x3, 0(x2) # store 0xdd59b1835dbaef29 in memory
flw f7, 0(x2) # load 0xdd59b1835dbaef29 from memory into f7
fmsub.s f14, f1, f23, f7, dyn # perform operation
fmsub.s f14, f1, f23, f7, rdn # perform operation
fmsub.s f14, f1, f23, f7, rmm # perform operation
fmsub.s f14, f1, f23, f7, rne # perform operation
fmsub.s f14, f1, f23, f7, rtz # perform operation
fmsub.s f14, f1, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x4d0fa605a7234907 # load x3 with value 0x4d0fa605a7234907
sw x3, 0(x2) # store 0x4d0fa605a7234907 in memory
flw f30, 0(x2) # load 0x4d0fa605a7234907 from memory into f30
fmsub.s f9, f23, f24, f30, dyn # perform operation
fmsub.s f9, f23, f24, f30, rdn # perform operation
fmsub.s f9, f23, f24, f30, rmm # perform operation
fmsub.s f9, f23, f24, f30, rne # perform operation
fmsub.s f9, f23, f24, f30, rtz # perform operation
fmsub.s f9, f23, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f23, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f23, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f23, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f23, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f23, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xb3366264c7d2f97 # load x3 with value 0xb3366264c7d2f97
sw x3, 0(x2) # store 0xb3366264c7d2f97 in memory
flw f15, 0(x2) # load 0xb3366264c7d2f97 from memory into f15
fmsub.s f21, f26, f25, f15, dyn # perform operation
fmsub.s f21, f26, f25, f15, rdn # perform operation
fmsub.s f21, f26, f25, f15, rmm # perform operation
fmsub.s f21, f26, f25, f15, rne # perform operation
fmsub.s f21, f26, f25, f15, rtz # perform operation
fmsub.s f21, f26, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xf358049bab56a148 # load x3 with value 0xf358049bab56a148
sw x3, 0(x2) # store 0xf358049bab56a148 in memory
flw f28, 0(x2) # load 0xf358049bab56a148 from memory into f28
fmsub.s f18, f1, f7, f28, dyn # perform operation
fmsub.s f18, f1, f7, f28, rdn # perform operation
fmsub.s f18, f1, f7, f28, rmm # perform operation
fmsub.s f18, f1, f7, f28, rne # perform operation
fmsub.s f18, f1, f7, f28, rtz # perform operation
fmsub.s f18, f1, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f1, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x5a7a35d1b9ffd16d # load x3 with value 0x5a7a35d1b9ffd16d
sw x3, 0(x2) # store 0x5a7a35d1b9ffd16d in memory
flw f14, 0(x2) # load 0x5a7a35d1b9ffd16d from memory into f14
fmsub.s f22, f30, f31, f14, dyn # perform operation
fmsub.s f22, f30, f31, f14, rdn # perform operation
fmsub.s f22, f30, f31, f14, rmm # perform operation
fmsub.s f22, f30, f31, f14, rne # perform operation
fmsub.s f22, f30, f31, f14, rtz # perform operation
fmsub.s f22, f30, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x6f7c889b63497e24 # load x3 with value 0x6f7c889b63497e24
sw x3, 0(x2) # store 0x6f7c889b63497e24 in memory
flw f31, 0(x2) # load 0x6f7c889b63497e24 from memory into f31
fmsub.s f2, f15, f7, f31, dyn # perform operation
fmsub.s f2, f15, f7, f31, rdn # perform operation
fmsub.s f2, f15, f7, f31, rmm # perform operation
fmsub.s f2, f15, f7, f31, rne # perform operation
fmsub.s f2, f15, f7, f31, rtz # perform operation
fmsub.s f2, f15, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x51b01f6de2579d37 # load x3 with value 0x51b01f6de2579d37
sw x3, 0(x2) # store 0x51b01f6de2579d37 in memory
flw f17, 0(x2) # load 0x51b01f6de2579d37 from memory into f17
fmsub.s f21, f7, f20, f17, dyn # perform operation
fmsub.s f21, f7, f20, f17, rdn # perform operation
fmsub.s f21, f7, f20, f17, rmm # perform operation
fmsub.s f21, f7, f20, f17, rne # perform operation
fmsub.s f21, f7, f20, f17, rtz # perform operation
fmsub.s f21, f7, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f7, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f7, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f7, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f7, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f7, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x34bab4aa916027fd # load x3 with value 0x34bab4aa916027fd
sw x3, 0(x2) # store 0x34bab4aa916027fd in memory
flw f26, 0(x2) # load 0x34bab4aa916027fd from memory into f26
fmsub.s f12, f22, f8, f26, dyn # perform operation
fmsub.s f12, f22, f8, f26, rdn # perform operation
fmsub.s f12, f22, f8, f26, rmm # perform operation
fmsub.s f12, f22, f8, f26, rne # perform operation
fmsub.s f12, f22, f8, f26, rtz # perform operation
fmsub.s f12, f22, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f22, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f22, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0xec58efc4da499259 # load x3 with value 0xec58efc4da499259
sw x3, 0(x2) # store 0xec58efc4da499259 in memory
flw f6, 0(x2) # load 0xec58efc4da499259 from memory into f6
fmsub.s f20, f15, f24, f6, dyn # perform operation
fmsub.s f20, f15, f24, f6, rdn # perform operation
fmsub.s f20, f15, f24, f6, rmm # perform operation
fmsub.s f20, f15, f24, f6, rne # perform operation
fmsub.s f20, f15, f24, f6, rtz # perform operation
fmsub.s f20, f15, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x73988d364963ca0f # load x3 with value 0x73988d364963ca0f
sw x3, 0(x2) # store 0x73988d364963ca0f in memory
flw f1, 0(x2) # load 0x73988d364963ca0f from memory into f1
fmsub.s f31, f12, f30, f1, dyn # perform operation
fmsub.s f31, f12, f30, f1, rdn # perform operation
fmsub.s f31, f12, f30, f1, rmm # perform operation
fmsub.s f31, f12, f30, f1, rne # perform operation
fmsub.s f31, f12, f30, f1, rtz # perform operation
fmsub.s f31, f12, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x4abc64f71ef65f79 # load x3 with value 0x4abc64f71ef65f79
sw x3, 0(x2) # store 0x4abc64f71ef65f79 in memory
flw f3, 0(x2) # load 0x4abc64f71ef65f79 from memory into f3
fmsub.s f26, f29, f11, f3, dyn # perform operation
fmsub.s f26, f29, f11, f3, rdn # perform operation
fmsub.s f26, f29, f11, f3, rmm # perform operation
fmsub.s f26, f29, f11, f3, rne # perform operation
fmsub.s f26, f29, f11, f3, rtz # perform operation
fmsub.s f26, f29, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f29, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f29, f11, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0xe14e2985ea6eb084 # load x3 with value 0xe14e2985ea6eb084
sw x3, 0(x2) # store 0xe14e2985ea6eb084 in memory
flw f21, 0(x2) # load 0xe14e2985ea6eb084 from memory into f21
fmsub.s f5, f3, f10, f21, dyn # perform operation
fmsub.s f5, f3, f10, f21, rdn # perform operation
fmsub.s f5, f3, f10, f21, rmm # perform operation
fmsub.s f5, f3, f10, f21, rne # perform operation
fmsub.s f5, f3, f10, f21, rtz # perform operation
fmsub.s f5, f3, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x2ec885e65e23becd # load x3 with value 0x2ec885e65e23becd
sw x3, 0(x2) # store 0x2ec885e65e23becd in memory
flw f12, 0(x2) # load 0x2ec885e65e23becd from memory into f12
fmsub.s f10, f28, f2, f12, dyn # perform operation
fmsub.s f10, f28, f2, f12, rdn # perform operation
fmsub.s f10, f28, f2, f12, rmm # perform operation
fmsub.s f10, f28, f2, f12, rne # perform operation
fmsub.s f10, f28, f2, f12, rtz # perform operation
fmsub.s f10, f28, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xc9b252f1ac56d011 # load x3 with value 0xc9b252f1ac56d011
sw x3, 0(x2) # store 0xc9b252f1ac56d011 in memory
flw f26, 0(x2) # load 0xc9b252f1ac56d011 from memory into f26
fmsub.s f16, f21, f15, f26, dyn # perform operation
fmsub.s f16, f21, f15, f26, rdn # perform operation
fmsub.s f16, f21, f15, f26, rmm # perform operation
fmsub.s f16, f21, f15, f26, rne # perform operation
fmsub.s f16, f21, f15, f26, rtz # perform operation
fmsub.s f16, f21, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x91774f8b7e5f22a1 # load x3 with value 0x91774f8b7e5f22a1
sw x3, 0(x2) # store 0x91774f8b7e5f22a1 in memory
flw f26, 0(x2) # load 0x91774f8b7e5f22a1 from memory into f26
fmsub.s f6, f20, f24, f26, dyn # perform operation
fmsub.s f6, f20, f24, f26, rdn # perform operation
fmsub.s f6, f20, f24, f26, rmm # perform operation
fmsub.s f6, f20, f24, f26, rne # perform operation
fmsub.s f6, f20, f24, f26, rtz # perform operation
fmsub.s f6, f20, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xc4b76312f325833f # load x3 with value 0xc4b76312f325833f
sw x3, 0(x2) # store 0xc4b76312f325833f in memory
flw f12, 0(x2) # load 0xc4b76312f325833f from memory into f12
fmsub.s f18, f24, f7, f12, dyn # perform operation
fmsub.s f18, f24, f7, f12, rdn # perform operation
fmsub.s f18, f24, f7, f12, rmm # perform operation
fmsub.s f18, f24, f7, f12, rne # perform operation
fmsub.s f18, f24, f7, f12, rtz # perform operation
fmsub.s f18, f24, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x199a184bf3a02487 # load x3 with value 0x199a184bf3a02487
sw x3, 0(x2) # store 0x199a184bf3a02487 in memory
flw f1, 0(x2) # load 0x199a184bf3a02487 from memory into f1
fmsub.s f9, f7, f18, f1, dyn # perform operation
fmsub.s f9, f7, f18, f1, rdn # perform operation
fmsub.s f9, f7, f18, f1, rmm # perform operation
fmsub.s f9, f7, f18, f1, rne # perform operation
fmsub.s f9, f7, f18, f1, rtz # perform operation
fmsub.s f9, f7, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f7, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x93ef9f5afb550cd # load x3 with value 0x93ef9f5afb550cd
sw x3, 0(x2) # store 0x93ef9f5afb550cd in memory
flw f1, 0(x2) # load 0x93ef9f5afb550cd from memory into f1
fmsub.s f30, f16, f14, f1, dyn # perform operation
fmsub.s f30, f16, f14, f1, rdn # perform operation
fmsub.s f30, f16, f14, f1, rmm # perform operation
fmsub.s f30, f16, f14, f1, rne # perform operation
fmsub.s f30, f16, f14, f1, rtz # perform operation
fmsub.s f30, f16, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x9c909759507a4100 # load x3 with value 0x9c909759507a4100
sw x3, 0(x2) # store 0x9c909759507a4100 in memory
flw f12, 0(x2) # load 0x9c909759507a4100 from memory into f12
fmsub.s f28, f20, f8, f12, dyn # perform operation
fmsub.s f28, f20, f8, f12, rdn # perform operation
fmsub.s f28, f20, f8, f12, rmm # perform operation
fmsub.s f28, f20, f8, f12, rne # perform operation
fmsub.s f28, f20, f8, f12, rtz # perform operation
fmsub.s f28, f20, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x40497f92976b60f5 # load x3 with value 0x40497f92976b60f5
sw x3, 0(x2) # store 0x40497f92976b60f5 in memory
flw f18, 0(x2) # load 0x40497f92976b60f5 from memory into f18
fmsub.s f23, f5, f10, f18, dyn # perform operation
fmsub.s f23, f5, f10, f18, rdn # perform operation
fmsub.s f23, f5, f10, f18, rmm # perform operation
fmsub.s f23, f5, f10, f18, rne # perform operation
fmsub.s f23, f5, f10, f18, rtz # perform operation
fmsub.s f23, f5, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x6d60cd2e67c9fb31 # load x3 with value 0x6d60cd2e67c9fb31
sw x3, 0(x2) # store 0x6d60cd2e67c9fb31 in memory
flw f7, 0(x2) # load 0x6d60cd2e67c9fb31 from memory into f7
fmsub.s f15, f24, f12, f7, dyn # perform operation
fmsub.s f15, f24, f12, f7, rdn # perform operation
fmsub.s f15, f24, f12, f7, rmm # perform operation
fmsub.s f15, f24, f12, f7, rne # perform operation
fmsub.s f15, f24, f12, f7, rtz # perform operation
fmsub.s f15, f24, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x56d08f9a54f713f1 # load x3 with value 0x56d08f9a54f713f1
sw x3, 0(x2) # store 0x56d08f9a54f713f1 in memory
flw f16, 0(x2) # load 0x56d08f9a54f713f1 from memory into f16
fmsub.s f1, f6, f29, f16, dyn # perform operation
fmsub.s f1, f6, f29, f16, rdn # perform operation
fmsub.s f1, f6, f29, f16, rmm # perform operation
fmsub.s f1, f6, f29, f16, rne # perform operation
fmsub.s f1, f6, f29, f16, rtz # perform operation
fmsub.s f1, f6, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f6, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f6, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x56e41bc1b6a80013 # load x3 with value 0x56e41bc1b6a80013
sw x3, 0(x2) # store 0x56e41bc1b6a80013 in memory
flw f30, 0(x2) # load 0x56e41bc1b6a80013 from memory into f30
fmsub.s f24, f18, f14, f30, dyn # perform operation
fmsub.s f24, f18, f14, f30, rdn # perform operation
fmsub.s f24, f18, f14, f30, rmm # perform operation
fmsub.s f24, f18, f14, f30, rne # perform operation
fmsub.s f24, f18, f14, f30, rtz # perform operation
fmsub.s f24, f18, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0xf4356cf42474fb15 # load x3 with value 0xf4356cf42474fb15
sw x3, 0(x2) # store 0xf4356cf42474fb15 in memory
flw f20, 0(x2) # load 0xf4356cf42474fb15 from memory into f20
fmsub.s f1, f7, f28, f20, dyn # perform operation
fmsub.s f1, f7, f28, f20, rdn # perform operation
fmsub.s f1, f7, f28, f20, rmm # perform operation
fmsub.s f1, f7, f28, f20, rne # perform operation
fmsub.s f1, f7, f28, f20, rtz # perform operation
fmsub.s f1, f7, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f7, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f7, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x5dc3bf731be2d86c # load x3 with value 0x5dc3bf731be2d86c
sw x3, 0(x2) # store 0x5dc3bf731be2d86c in memory
flw f16, 0(x2) # load 0x5dc3bf731be2d86c from memory into f16
fmsub.s f22, f30, f9, f16, dyn # perform operation
fmsub.s f22, f30, f9, f16, rdn # perform operation
fmsub.s f22, f30, f9, f16, rmm # perform operation
fmsub.s f22, f30, f9, f16, rne # perform operation
fmsub.s f22, f30, f9, f16, rtz # perform operation
fmsub.s f22, f30, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xae4c4d7599e600cf # load x3 with value 0xae4c4d7599e600cf
sw x3, 0(x2) # store 0xae4c4d7599e600cf in memory
flw f25, 0(x2) # load 0xae4c4d7599e600cf from memory into f25
fmsub.s f23, f27, f15, f25, dyn # perform operation
fmsub.s f23, f27, f15, f25, rdn # perform operation
fmsub.s f23, f27, f15, f25, rmm # perform operation
fmsub.s f23, f27, f15, f25, rne # perform operation
fmsub.s f23, f27, f15, f25, rtz # perform operation
fmsub.s f23, f27, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x9d37041179c7eda0 # load x3 with value 0x9d37041179c7eda0
sw x3, 0(x2) # store 0x9d37041179c7eda0 in memory
flw f24, 0(x2) # load 0x9d37041179c7eda0 from memory into f24
fmsub.s f17, f13, f27, f24, dyn # perform operation
fmsub.s f17, f13, f27, f24, rdn # perform operation
fmsub.s f17, f13, f27, f24, rmm # perform operation
fmsub.s f17, f13, f27, f24, rne # perform operation
fmsub.s f17, f13, f27, f24, rtz # perform operation
fmsub.s f17, f13, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x41f035b095833ac7 # load x3 with value 0x41f035b095833ac7
sw x3, 0(x2) # store 0x41f035b095833ac7 in memory
flw f23, 0(x2) # load 0x41f035b095833ac7 from memory into f23
fmsub.s f13, f14, f5, f23, dyn # perform operation
fmsub.s f13, f14, f5, f23, rdn # perform operation
fmsub.s f13, f14, f5, f23, rmm # perform operation
fmsub.s f13, f14, f5, f23, rne # perform operation
fmsub.s f13, f14, f5, f23, rtz # perform operation
fmsub.s f13, f14, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f14, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x2b8e4454eaa01998 # load x3 with value 0x2b8e4454eaa01998
sw x3, 0(x2) # store 0x2b8e4454eaa01998 in memory
flw f13, 0(x2) # load 0x2b8e4454eaa01998 from memory into f13
fmsub.s f22, f9, f17, f13, dyn # perform operation
fmsub.s f22, f9, f17, f13, rdn # perform operation
fmsub.s f22, f9, f17, f13, rmm # perform operation
fmsub.s f22, f9, f17, f13, rne # perform operation
fmsub.s f22, f9, f17, f13, rtz # perform operation
fmsub.s f22, f9, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xd46415a821c65658 # load x3 with value 0xd46415a821c65658
sw x3, 0(x2) # store 0xd46415a821c65658 in memory
flw f15, 0(x2) # load 0xd46415a821c65658 from memory into f15
fmsub.s f28, f22, f11, f15, dyn # perform operation
fmsub.s f28, f22, f11, f15, rdn # perform operation
fmsub.s f28, f22, f11, f15, rmm # perform operation
fmsub.s f28, f22, f11, f15, rne # perform operation
fmsub.s f28, f22, f11, f15, rtz # perform operation
fmsub.s f28, f22, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x71025ea3fc3582ee # load x3 with value 0x71025ea3fc3582ee
sw x3, 0(x2) # store 0x71025ea3fc3582ee in memory
flw f24, 0(x2) # load 0x71025ea3fc3582ee from memory into f24
fmsub.s f29, f9, f6, f24, dyn # perform operation
fmsub.s f29, f9, f6, f24, rdn # perform operation
fmsub.s f29, f9, f6, f24, rmm # perform operation
fmsub.s f29, f9, f6, f24, rne # perform operation
fmsub.s f29, f9, f6, f24, rtz # perform operation
fmsub.s f29, f9, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xf2e8d6edf8c7397e # load x3 with value 0xf2e8d6edf8c7397e
sw x3, 0(x2) # store 0xf2e8d6edf8c7397e in memory
flw f13, 0(x2) # load 0xf2e8d6edf8c7397e from memory into f13
fmsub.s f22, f17, f16, f13, dyn # perform operation
fmsub.s f22, f17, f16, f13, rdn # perform operation
fmsub.s f22, f17, f16, f13, rmm # perform operation
fmsub.s f22, f17, f16, f13, rne # perform operation
fmsub.s f22, f17, f16, f13, rtz # perform operation
fmsub.s f22, f17, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f17, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xbc5ffa210d6a4f92 # load x3 with value 0xbc5ffa210d6a4f92
sw x3, 0(x2) # store 0xbc5ffa210d6a4f92 in memory
flw f23, 0(x2) # load 0xbc5ffa210d6a4f92 from memory into f23
fmsub.s f21, f18, f26, f23, dyn # perform operation
fmsub.s f21, f18, f26, f23, rdn # perform operation
fmsub.s f21, f18, f26, f23, rmm # perform operation
fmsub.s f21, f18, f26, f23, rne # perform operation
fmsub.s f21, f18, f26, f23, rtz # perform operation
fmsub.s f21, f18, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x350ab7cc82bb692b # load x3 with value 0x350ab7cc82bb692b
sw x3, 0(x2) # store 0x350ab7cc82bb692b in memory
flw f2, 0(x2) # load 0x350ab7cc82bb692b from memory into f2
fmsub.s f19, f31, f11, f2, dyn # perform operation
fmsub.s f19, f31, f11, f2, rdn # perform operation
fmsub.s f19, f31, f11, f2, rmm # perform operation
fmsub.s f19, f31, f11, f2, rne # perform operation
fmsub.s f19, f31, f11, f2, rtz # perform operation
fmsub.s f19, f31, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f31, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x6208f9fc4662d1a8 # load x3 with value 0x6208f9fc4662d1a8
sw x3, 0(x2) # store 0x6208f9fc4662d1a8 in memory
flw f6, 0(x2) # load 0x6208f9fc4662d1a8 from memory into f6
fmsub.s f19, f14, f15, f6, dyn # perform operation
fmsub.s f19, f14, f15, f6, rdn # perform operation
fmsub.s f19, f14, f15, f6, rmm # perform operation
fmsub.s f19, f14, f15, f6, rne # perform operation
fmsub.s f19, f14, f15, f6, rtz # perform operation
fmsub.s f19, f14, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f14, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x2f6137b6533ed782 # load x3 with value 0x2f6137b6533ed782
sw x3, 0(x2) # store 0x2f6137b6533ed782 in memory
flw f29, 0(x2) # load 0x2f6137b6533ed782 from memory into f29
fmsub.s f3, f31, f5, f29, dyn # perform operation
fmsub.s f3, f31, f5, f29, rdn # perform operation
fmsub.s f3, f31, f5, f29, rmm # perform operation
fmsub.s f3, f31, f5, f29, rne # perform operation
fmsub.s f3, f31, f5, f29, rtz # perform operation
fmsub.s f3, f31, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xfabb43772654eab3 # load x3 with value 0xfabb43772654eab3
sw x3, 0(x2) # store 0xfabb43772654eab3 in memory
flw f26, 0(x2) # load 0xfabb43772654eab3 from memory into f26
fmsub.s f12, f3, f23, f26, dyn # perform operation
fmsub.s f12, f3, f23, f26, rdn # perform operation
fmsub.s f12, f3, f23, f26, rmm # perform operation
fmsub.s f12, f3, f23, f26, rne # perform operation
fmsub.s f12, f3, f23, f26, rtz # perform operation
fmsub.s f12, f3, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xea3cf1b35adffb10 # load x3 with value 0xea3cf1b35adffb10
sw x3, 0(x2) # store 0xea3cf1b35adffb10 in memory
flw f1, 0(x2) # load 0xea3cf1b35adffb10 from memory into f1
fmsub.s f27, f19, f3, f1, dyn # perform operation
fmsub.s f27, f19, f3, f1, rdn # perform operation
fmsub.s f27, f19, f3, f1, rmm # perform operation
fmsub.s f27, f19, f3, f1, rne # perform operation
fmsub.s f27, f19, f3, f1, rtz # perform operation
fmsub.s f27, f19, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f19, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x150c88e120b856bf # load x3 with value 0x150c88e120b856bf
sw x3, 0(x2) # store 0x150c88e120b856bf in memory
flw f22, 0(x2) # load 0x150c88e120b856bf from memory into f22
fmsub.s f5, f27, f16, f22, dyn # perform operation
fmsub.s f5, f27, f16, f22, rdn # perform operation
fmsub.s f5, f27, f16, f22, rmm # perform operation
fmsub.s f5, f27, f16, f22, rne # perform operation
fmsub.s f5, f27, f16, f22, rtz # perform operation
fmsub.s f5, f27, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x33c488a3b1c3e3d1 # load x3 with value 0x33c488a3b1c3e3d1
sw x3, 0(x2) # store 0x33c488a3b1c3e3d1 in memory
flw f1, 0(x2) # load 0x33c488a3b1c3e3d1 from memory into f1
fmsub.s f7, f18, f14, f1, dyn # perform operation
fmsub.s f7, f18, f14, f1, rdn # perform operation
fmsub.s f7, f18, f14, f1, rmm # perform operation
fmsub.s f7, f18, f14, f1, rne # perform operation
fmsub.s f7, f18, f14, f1, rtz # perform operation
fmsub.s f7, f18, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f18, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f18, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f18, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f18, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f18, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x8366b72f70adf3e0 # load x3 with value 0x8366b72f70adf3e0
sw x3, 0(x2) # store 0x8366b72f70adf3e0 in memory
flw f10, 0(x2) # load 0x8366b72f70adf3e0 from memory into f10
fmsub.s f5, f9, f31, f10, dyn # perform operation
fmsub.s f5, f9, f31, f10, rdn # perform operation
fmsub.s f5, f9, f31, f10, rmm # perform operation
fmsub.s f5, f9, f31, f10, rne # perform operation
fmsub.s f5, f9, f31, f10, rtz # perform operation
fmsub.s f5, f9, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f9, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f9, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x14e797b1f4be8afa # load x3 with value 0x14e797b1f4be8afa
sw x3, 0(x2) # store 0x14e797b1f4be8afa in memory
flw f28, 0(x2) # load 0x14e797b1f4be8afa from memory into f28
fmsub.s f19, f17, f1, f28, dyn # perform operation
fmsub.s f19, f17, f1, f28, rdn # perform operation
fmsub.s f19, f17, f1, f28, rmm # perform operation
fmsub.s f19, f17, f1, f28, rne # perform operation
fmsub.s f19, f17, f1, f28, rtz # perform operation
fmsub.s f19, f17, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x83e3923ee58120e0 # load x3 with value 0x83e3923ee58120e0
sw x3, 0(x2) # store 0x83e3923ee58120e0 in memory
flw f2, 0(x2) # load 0x83e3923ee58120e0 from memory into f2
fmsub.s f29, f10, f5, f2, dyn # perform operation
fmsub.s f29, f10, f5, f2, rdn # perform operation
fmsub.s f29, f10, f5, f2, rmm # perform operation
fmsub.s f29, f10, f5, f2, rne # perform operation
fmsub.s f29, f10, f5, f2, rtz # perform operation
fmsub.s f29, f10, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x437e5e3fad940463 # load x3 with value 0x437e5e3fad940463
sw x3, 0(x2) # store 0x437e5e3fad940463 in memory
flw f11, 0(x2) # load 0x437e5e3fad940463 from memory into f11
fmsub.s f23, f16, f17, f11, dyn # perform operation
fmsub.s f23, f16, f17, f11, rdn # perform operation
fmsub.s f23, f16, f17, f11, rmm # perform operation
fmsub.s f23, f16, f17, f11, rne # perform operation
fmsub.s f23, f16, f17, f11, rtz # perform operation
fmsub.s f23, f16, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f16, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f16, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xb38d2c663b826895 # load x3 with value 0xb38d2c663b826895
sw x3, 0(x2) # store 0xb38d2c663b826895 in memory
flw f19, 0(x2) # load 0xb38d2c663b826895 from memory into f19
fmsub.s f29, f1, f11, f19, dyn # perform operation
fmsub.s f29, f1, f11, f19, rdn # perform operation
fmsub.s f29, f1, f11, f19, rmm # perform operation
fmsub.s f29, f1, f11, f19, rne # perform operation
fmsub.s f29, f1, f11, f19, rtz # perform operation
fmsub.s f29, f1, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xc704760944a8afca # load x3 with value 0xc704760944a8afca
sw x3, 0(x2) # store 0xc704760944a8afca in memory
flw f3, 0(x2) # load 0xc704760944a8afca from memory into f3
fmsub.s f16, f28, f27, f3, dyn # perform operation
fmsub.s f16, f28, f27, f3, rdn # perform operation
fmsub.s f16, f28, f27, f3, rmm # perform operation
fmsub.s f16, f28, f27, f3, rne # perform operation
fmsub.s f16, f28, f27, f3, rtz # perform operation
fmsub.s f16, f28, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xc2aaf1bc73055dff # load x3 with value 0xc2aaf1bc73055dff
sw x3, 0(x2) # store 0xc2aaf1bc73055dff in memory
flw f25, 0(x2) # load 0xc2aaf1bc73055dff from memory into f25
fmsub.s f16, f18, f3, f25, dyn # perform operation
fmsub.s f16, f18, f3, f25, rdn # perform operation
fmsub.s f16, f18, f3, f25, rmm # perform operation
fmsub.s f16, f18, f3, f25, rne # perform operation
fmsub.s f16, f18, f3, f25, rtz # perform operation
fmsub.s f16, f18, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x4e41cd7606cf3762 # load x3 with value 0x4e41cd7606cf3762
sw x3, 0(x2) # store 0x4e41cd7606cf3762 in memory
flw f3, 0(x2) # load 0x4e41cd7606cf3762 from memory into f3
fmsub.s f11, f24, f12, f3, dyn # perform operation
fmsub.s f11, f24, f12, f3, rdn # perform operation
fmsub.s f11, f24, f12, f3, rmm # perform operation
fmsub.s f11, f24, f12, f3, rne # perform operation
fmsub.s f11, f24, f12, f3, rtz # perform operation
fmsub.s f11, f24, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f24, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f24, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f24, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f24, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f24, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x717310ffca28c850 # load x3 with value 0x717310ffca28c850
sw x3, 0(x2) # store 0x717310ffca28c850 in memory
flw f12, 0(x2) # load 0x717310ffca28c850 from memory into f12
fmsub.s f19, f18, f10, f12, dyn # perform operation
fmsub.s f19, f18, f10, f12, rdn # perform operation
fmsub.s f19, f18, f10, f12, rmm # perform operation
fmsub.s f19, f18, f10, f12, rne # perform operation
fmsub.s f19, f18, f10, f12, rtz # perform operation
fmsub.s f19, f18, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x788748512fec9792 # load x3 with value 0x788748512fec9792
sw x3, 0(x2) # store 0x788748512fec9792 in memory
flw f19, 0(x2) # load 0x788748512fec9792 from memory into f19
fmsub.s f5, f15, f29, f19, dyn # perform operation
fmsub.s f5, f15, f29, f19, rdn # perform operation
fmsub.s f5, f15, f29, f19, rmm # perform operation
fmsub.s f5, f15, f29, f19, rne # perform operation
fmsub.s f5, f15, f29, f19, rtz # perform operation
fmsub.s f5, f15, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xceaff5360dfbbd63 # load x3 with value 0xceaff5360dfbbd63
sw x3, 0(x2) # store 0xceaff5360dfbbd63 in memory
flw f20, 0(x2) # load 0xceaff5360dfbbd63 from memory into f20
fmsub.s f14, f22, f8, f20, dyn # perform operation
fmsub.s f14, f22, f8, f20, rdn # perform operation
fmsub.s f14, f22, f8, f20, rmm # perform operation
fmsub.s f14, f22, f8, f20, rne # perform operation
fmsub.s f14, f22, f8, f20, rtz # perform operation
fmsub.s f14, f22, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f22, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f22, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f22, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f22, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f22, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x638a29f1dc1b95a9 # load x3 with value 0x638a29f1dc1b95a9
sw x3, 0(x2) # store 0x638a29f1dc1b95a9 in memory
flw f14, 0(x2) # load 0x638a29f1dc1b95a9 from memory into f14
fmsub.s f26, f3, f31, f14, dyn # perform operation
fmsub.s f26, f3, f31, f14, rdn # perform operation
fmsub.s f26, f3, f31, f14, rmm # perform operation
fmsub.s f26, f3, f31, f14, rne # perform operation
fmsub.s f26, f3, f31, f14, rtz # perform operation
fmsub.s f26, f3, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x85a37c2df519c0c5 # load x3 with value 0x85a37c2df519c0c5
sw x3, 0(x2) # store 0x85a37c2df519c0c5 in memory
flw f17, 0(x2) # load 0x85a37c2df519c0c5 from memory into f17
fmsub.s f7, f9, f26, f17, dyn # perform operation
fmsub.s f7, f9, f26, f17, rdn # perform operation
fmsub.s f7, f9, f26, f17, rmm # perform operation
fmsub.s f7, f9, f26, f17, rne # perform operation
fmsub.s f7, f9, f26, f17, rtz # perform operation
fmsub.s f7, f9, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x47b8ec5aa3148ed1 # load x3 with value 0x47b8ec5aa3148ed1
sw x3, 0(x2) # store 0x47b8ec5aa3148ed1 in memory
flw f25, 0(x2) # load 0x47b8ec5aa3148ed1 from memory into f25
fmsub.s f5, f16, f24, f25, dyn # perform operation
fmsub.s f5, f16, f24, f25, rdn # perform operation
fmsub.s f5, f16, f24, f25, rmm # perform operation
fmsub.s f5, f16, f24, f25, rne # perform operation
fmsub.s f5, f16, f24, f25, rtz # perform operation
fmsub.s f5, f16, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x5e7006a04fef074a # load x3 with value 0x5e7006a04fef074a
sw x3, 0(x2) # store 0x5e7006a04fef074a in memory
flw f11, 0(x2) # load 0x5e7006a04fef074a from memory into f11
fmsub.s f5, f18, f7, f11, dyn # perform operation
fmsub.s f5, f18, f7, f11, rdn # perform operation
fmsub.s f5, f18, f7, f11, rmm # perform operation
fmsub.s f5, f18, f7, f11, rne # perform operation
fmsub.s f5, f18, f7, f11, rtz # perform operation
fmsub.s f5, f18, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xbf1729241ceda7bc # load x3 with value 0xbf1729241ceda7bc
sw x3, 0(x2) # store 0xbf1729241ceda7bc in memory
flw f28, 0(x2) # load 0xbf1729241ceda7bc from memory into f28
fmsub.s f18, f23, f5, f28, dyn # perform operation
fmsub.s f18, f23, f5, f28, rdn # perform operation
fmsub.s f18, f23, f5, f28, rmm # perform operation
fmsub.s f18, f23, f5, f28, rne # perform operation
fmsub.s f18, f23, f5, f28, rtz # perform operation
fmsub.s f18, f23, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x6e9b50fe2b7ffa6f # load x3 with value 0x6e9b50fe2b7ffa6f
sw x3, 0(x2) # store 0x6e9b50fe2b7ffa6f in memory
flw f29, 0(x2) # load 0x6e9b50fe2b7ffa6f from memory into f29
fmsub.s f17, f12, f16, f29, dyn # perform operation
fmsub.s f17, f12, f16, f29, rdn # perform operation
fmsub.s f17, f12, f16, f29, rmm # perform operation
fmsub.s f17, f12, f16, f29, rne # perform operation
fmsub.s f17, f12, f16, f29, rtz # perform operation
fmsub.s f17, f12, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f12, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x6c2e640dc4587d9f # load x3 with value 0x6c2e640dc4587d9f
sw x3, 0(x2) # store 0x6c2e640dc4587d9f in memory
flw f6, 0(x2) # load 0x6c2e640dc4587d9f from memory into f6
fmsub.s f19, f28, f1, f6, dyn # perform operation
fmsub.s f19, f28, f1, f6, rdn # perform operation
fmsub.s f19, f28, f1, f6, rmm # perform operation
fmsub.s f19, f28, f1, f6, rne # perform operation
fmsub.s f19, f28, f1, f6, rtz # perform operation
fmsub.s f19, f28, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x4bb203c49c7c34c7 # load x3 with value 0x4bb203c49c7c34c7
sw x3, 0(x2) # store 0x4bb203c49c7c34c7 in memory
flw f16, 0(x2) # load 0x4bb203c49c7c34c7 from memory into f16
fmsub.s f14, f10, f11, f16, dyn # perform operation
fmsub.s f14, f10, f11, f16, rdn # perform operation
fmsub.s f14, f10, f11, f16, rmm # perform operation
fmsub.s f14, f10, f11, f16, rne # perform operation
fmsub.s f14, f10, f11, f16, rtz # perform operation
fmsub.s f14, f10, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f10, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xb898bf57f8a3d87c # load x3 with value 0xb898bf57f8a3d87c
sw x3, 0(x2) # store 0xb898bf57f8a3d87c in memory
flw f31, 0(x2) # load 0xb898bf57f8a3d87c from memory into f31
fmsub.s f8, f14, f20, f31, dyn # perform operation
fmsub.s f8, f14, f20, f31, rdn # perform operation
fmsub.s f8, f14, f20, f31, rmm # perform operation
fmsub.s f8, f14, f20, f31, rne # perform operation
fmsub.s f8, f14, f20, f31, rtz # perform operation
fmsub.s f8, f14, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x52ff06cddf1fcc09 # load x3 with value 0x52ff06cddf1fcc09
sw x3, 0(x2) # store 0x52ff06cddf1fcc09 in memory
flw f1, 0(x2) # load 0x52ff06cddf1fcc09 from memory into f1
fmsub.s f10, f6, f22, f1, dyn # perform operation
fmsub.s f10, f6, f22, f1, rdn # perform operation
fmsub.s f10, f6, f22, f1, rmm # perform operation
fmsub.s f10, f6, f22, f1, rne # perform operation
fmsub.s f10, f6, f22, f1, rtz # perform operation
fmsub.s f10, f6, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x1351a7a7a04d0066 # load x3 with value 0x1351a7a7a04d0066
sw x3, 0(x2) # store 0x1351a7a7a04d0066 in memory
flw f16, 0(x2) # load 0x1351a7a7a04d0066 from memory into f16
fmsub.s f14, f31, f30, f16, dyn # perform operation
fmsub.s f14, f31, f30, f16, rdn # perform operation
fmsub.s f14, f31, f30, f16, rmm # perform operation
fmsub.s f14, f31, f30, f16, rne # perform operation
fmsub.s f14, f31, f30, f16, rtz # perform operation
fmsub.s f14, f31, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f31, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x46e26af0f83b5e99 # load x3 with value 0x46e26af0f83b5e99
sw x3, 0(x2) # store 0x46e26af0f83b5e99 in memory
flw f17, 0(x2) # load 0x46e26af0f83b5e99 from memory into f17
fmsub.s f16, f12, f27, f17, dyn # perform operation
fmsub.s f16, f12, f27, f17, rdn # perform operation
fmsub.s f16, f12, f27, f17, rmm # perform operation
fmsub.s f16, f12, f27, f17, rne # perform operation
fmsub.s f16, f12, f27, f17, rtz # perform operation
fmsub.s f16, f12, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xf1509e68be8cab5f # load x3 with value 0xf1509e68be8cab5f
sw x3, 0(x2) # store 0xf1509e68be8cab5f in memory
flw f7, 0(x2) # load 0xf1509e68be8cab5f from memory into f7
fmsub.s f22, f3, f17, f7, dyn # perform operation
fmsub.s f22, f3, f17, f7, rdn # perform operation
fmsub.s f22, f3, f17, f7, rmm # perform operation
fmsub.s f22, f3, f17, f7, rne # perform operation
fmsub.s f22, f3, f17, f7, rtz # perform operation
fmsub.s f22, f3, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xdef6b667accb73db # load x3 with value 0xdef6b667accb73db
sw x3, 0(x2) # store 0xdef6b667accb73db in memory
flw f13, 0(x2) # load 0xdef6b667accb73db from memory into f13
fmsub.s f2, f17, f9, f13, dyn # perform operation
fmsub.s f2, f17, f9, f13, rdn # perform operation
fmsub.s f2, f17, f9, f13, rmm # perform operation
fmsub.s f2, f17, f9, f13, rne # perform operation
fmsub.s f2, f17, f9, f13, rtz # perform operation
fmsub.s f2, f17, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x4ecaf04ab8fa7ed9 # load x3 with value 0x4ecaf04ab8fa7ed9
sw x3, 0(x2) # store 0x4ecaf04ab8fa7ed9 in memory
flw f13, 0(x2) # load 0x4ecaf04ab8fa7ed9 from memory into f13
fmsub.s f11, f6, f16, f13, dyn # perform operation
fmsub.s f11, f6, f16, f13, rdn # perform operation
fmsub.s f11, f6, f16, f13, rmm # perform operation
fmsub.s f11, f6, f16, f13, rne # perform operation
fmsub.s f11, f6, f16, f13, rtz # perform operation
fmsub.s f11, f6, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x23d6c89a79807207 # load x3 with value 0x23d6c89a79807207
sw x3, 0(x2) # store 0x23d6c89a79807207 in memory
flw f26, 0(x2) # load 0x23d6c89a79807207 from memory into f26
fmsub.s f23, f17, f22, f26, dyn # perform operation
fmsub.s f23, f17, f22, f26, rdn # perform operation
fmsub.s f23, f17, f22, f26, rmm # perform operation
fmsub.s f23, f17, f22, f26, rne # perform operation
fmsub.s f23, f17, f22, f26, rtz # perform operation
fmsub.s f23, f17, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x8db30cfaf3b5bcd4 # load x3 with value 0x8db30cfaf3b5bcd4
sw x3, 0(x2) # store 0x8db30cfaf3b5bcd4 in memory
flw f14, 0(x2) # load 0x8db30cfaf3b5bcd4 from memory into f14
fmsub.s f23, f29, f7, f14, dyn # perform operation
fmsub.s f23, f29, f7, f14, rdn # perform operation
fmsub.s f23, f29, f7, f14, rmm # perform operation
fmsub.s f23, f29, f7, f14, rne # perform operation
fmsub.s f23, f29, f7, f14, rtz # perform operation
fmsub.s f23, f29, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xcd8afa7f3b476a2a # load x3 with value 0xcd8afa7f3b476a2a
sw x3, 0(x2) # store 0xcd8afa7f3b476a2a in memory
flw f24, 0(x2) # load 0xcd8afa7f3b476a2a from memory into f24
fmsub.s f11, f18, f14, f24, dyn # perform operation
fmsub.s f11, f18, f14, f24, rdn # perform operation
fmsub.s f11, f18, f14, f24, rmm # perform operation
fmsub.s f11, f18, f14, f24, rne # perform operation
fmsub.s f11, f18, f14, f24, rtz # perform operation
fmsub.s f11, f18, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f18, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xc461b962e3528b17 # load x3 with value 0xc461b962e3528b17
sw x3, 0(x2) # store 0xc461b962e3528b17 in memory
flw f8, 0(x2) # load 0xc461b962e3528b17 from memory into f8
fmsub.s f11, f2, f21, f8, dyn # perform operation
fmsub.s f11, f2, f21, f8, rdn # perform operation
fmsub.s f11, f2, f21, f8, rmm # perform operation
fmsub.s f11, f2, f21, f8, rne # perform operation
fmsub.s f11, f2, f21, f8, rtz # perform operation
fmsub.s f11, f2, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f2, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f2, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x9d9b119368a6bd89 # load x3 with value 0x9d9b119368a6bd89
sw x3, 0(x2) # store 0x9d9b119368a6bd89 in memory
flw f24, 0(x2) # load 0x9d9b119368a6bd89 from memory into f24
fmsub.s f11, f9, f30, f24, dyn # perform operation
fmsub.s f11, f9, f30, f24, rdn # perform operation
fmsub.s f11, f9, f30, f24, rmm # perform operation
fmsub.s f11, f9, f30, f24, rne # perform operation
fmsub.s f11, f9, f30, f24, rtz # perform operation
fmsub.s f11, f9, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xab7912905603a1a0 # load x3 with value 0xab7912905603a1a0
sw x3, 0(x2) # store 0xab7912905603a1a0 in memory
flw f25, 0(x2) # load 0xab7912905603a1a0 from memory into f25
fmsub.s f31, f14, f19, f25, dyn # perform operation
fmsub.s f31, f14, f19, f25, rdn # perform operation
fmsub.s f31, f14, f19, f25, rmm # perform operation
fmsub.s f31, f14, f19, f25, rne # perform operation
fmsub.s f31, f14, f19, f25, rtz # perform operation
fmsub.s f31, f14, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x9590bb797966f919 # load x3 with value 0x9590bb797966f919
sw x3, 0(x2) # store 0x9590bb797966f919 in memory
flw f28, 0(x2) # load 0x9590bb797966f919 from memory into f28
fmsub.s f1, f6, f16, f28, dyn # perform operation
fmsub.s f1, f6, f16, f28, rdn # perform operation
fmsub.s f1, f6, f16, f28, rmm # perform operation
fmsub.s f1, f6, f16, f28, rne # perform operation
fmsub.s f1, f6, f16, f28, rtz # perform operation
fmsub.s f1, f6, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f6, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f6, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f6, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f6, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f6, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x1fc46d231c615b7a # load x3 with value 0x1fc46d231c615b7a
sw x3, 0(x2) # store 0x1fc46d231c615b7a in memory
flw f24, 0(x2) # load 0x1fc46d231c615b7a from memory into f24
fmsub.s f7, f29, f9, f24, dyn # perform operation
fmsub.s f7, f29, f9, f24, rdn # perform operation
fmsub.s f7, f29, f9, f24, rmm # perform operation
fmsub.s f7, f29, f9, f24, rne # perform operation
fmsub.s f7, f29, f9, f24, rtz # perform operation
fmsub.s f7, f29, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x852a11bae853d59b # load x3 with value 0x852a11bae853d59b
sw x3, 0(x2) # store 0x852a11bae853d59b in memory
flw f5, 0(x2) # load 0x852a11bae853d59b from memory into f5
fmsub.s f6, f8, f28, f5, dyn # perform operation
fmsub.s f6, f8, f28, f5, rdn # perform operation
fmsub.s f6, f8, f28, f5, rmm # perform operation
fmsub.s f6, f8, f28, f5, rne # perform operation
fmsub.s f6, f8, f28, f5, rtz # perform operation
fmsub.s f6, f8, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xe73c7671100684c6 # load x3 with value 0xe73c7671100684c6
sw x3, 0(x2) # store 0xe73c7671100684c6 in memory
flw f15, 0(x2) # load 0xe73c7671100684c6 from memory into f15
fmsub.s f23, f30, f2, f15, dyn # perform operation
fmsub.s f23, f30, f2, f15, rdn # perform operation
fmsub.s f23, f30, f2, f15, rmm # perform operation
fmsub.s f23, f30, f2, f15, rne # perform operation
fmsub.s f23, f30, f2, f15, rtz # perform operation
fmsub.s f23, f30, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x6498e0bb54684e87 # load x3 with value 0x6498e0bb54684e87
sw x3, 0(x2) # store 0x6498e0bb54684e87 in memory
flw f11, 0(x2) # load 0x6498e0bb54684e87 from memory into f11
fmsub.s f22, f3, f1, f11, dyn # perform operation
fmsub.s f22, f3, f1, f11, rdn # perform operation
fmsub.s f22, f3, f1, f11, rmm # perform operation
fmsub.s f22, f3, f1, f11, rne # perform operation
fmsub.s f22, f3, f1, f11, rtz # perform operation
fmsub.s f22, f3, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x6fcc658a389e8e9e # load x3 with value 0x6fcc658a389e8e9e
sw x3, 0(x2) # store 0x6fcc658a389e8e9e in memory
flw f7, 0(x2) # load 0x6fcc658a389e8e9e from memory into f7
fmsub.s f5, f21, f23, f7, dyn # perform operation
fmsub.s f5, f21, f23, f7, rdn # perform operation
fmsub.s f5, f21, f23, f7, rmm # perform operation
fmsub.s f5, f21, f23, f7, rne # perform operation
fmsub.s f5, f21, f23, f7, rtz # perform operation
fmsub.s f5, f21, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x34dc3bb120dccf94 # load x3 with value 0x34dc3bb120dccf94
sw x3, 0(x2) # store 0x34dc3bb120dccf94 in memory
flw f22, 0(x2) # load 0x34dc3bb120dccf94 from memory into f22
fmsub.s f8, f16, f2, f22, dyn # perform operation
fmsub.s f8, f16, f2, f22, rdn # perform operation
fmsub.s f8, f16, f2, f22, rmm # perform operation
fmsub.s f8, f16, f2, f22, rne # perform operation
fmsub.s f8, f16, f2, f22, rtz # perform operation
fmsub.s f8, f16, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x36736ebff26c2c95 # load x3 with value 0x36736ebff26c2c95
sw x3, 0(x2) # store 0x36736ebff26c2c95 in memory
flw f27, 0(x2) # load 0x36736ebff26c2c95 from memory into f27
fmsub.s f1, f17, f25, f27, dyn # perform operation
fmsub.s f1, f17, f25, f27, rdn # perform operation
fmsub.s f1, f17, f25, f27, rmm # perform operation
fmsub.s f1, f17, f25, f27, rne # perform operation
fmsub.s f1, f17, f25, f27, rtz # perform operation
fmsub.s f1, f17, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x7e9486cb2f2cd492 # load x3 with value 0x7e9486cb2f2cd492
sw x3, 0(x2) # store 0x7e9486cb2f2cd492 in memory
flw f6, 0(x2) # load 0x7e9486cb2f2cd492 from memory into f6
fmsub.s f27, f16, f26, f6, dyn # perform operation
fmsub.s f27, f16, f26, f6, rdn # perform operation
fmsub.s f27, f16, f26, f6, rmm # perform operation
fmsub.s f27, f16, f26, f6, rne # perform operation
fmsub.s f27, f16, f26, f6, rtz # perform operation
fmsub.s f27, f16, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x93a289bb72b8a66a # load x3 with value 0x93a289bb72b8a66a
sw x3, 0(x2) # store 0x93a289bb72b8a66a in memory
flw f21, 0(x2) # load 0x93a289bb72b8a66a from memory into f21
fmsub.s f16, f19, f25, f21, dyn # perform operation
fmsub.s f16, f19, f25, f21, rdn # perform operation
fmsub.s f16, f19, f25, f21, rmm # perform operation
fmsub.s f16, f19, f25, f21, rne # perform operation
fmsub.s f16, f19, f25, f21, rtz # perform operation
fmsub.s f16, f19, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f19, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f19, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x22e799d97d7a47be # load x3 with value 0x22e799d97d7a47be
sw x3, 0(x2) # store 0x22e799d97d7a47be in memory
flw f9, 0(x2) # load 0x22e799d97d7a47be from memory into f9
fmsub.s f2, f10, f3, f9, dyn # perform operation
fmsub.s f2, f10, f3, f9, rdn # perform operation
fmsub.s f2, f10, f3, f9, rmm # perform operation
fmsub.s f2, f10, f3, f9, rne # perform operation
fmsub.s f2, f10, f3, f9, rtz # perform operation
fmsub.s f2, f10, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f10, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f10, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f10, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f10, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f10, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xcfdc466fff063eca # load x3 with value 0xcfdc466fff063eca
sw x3, 0(x2) # store 0xcfdc466fff063eca in memory
flw f7, 0(x2) # load 0xcfdc466fff063eca from memory into f7
fmsub.s f17, f27, f18, f7, dyn # perform operation
fmsub.s f17, f27, f18, f7, rdn # perform operation
fmsub.s f17, f27, f18, f7, rmm # perform operation
fmsub.s f17, f27, f18, f7, rne # perform operation
fmsub.s f17, f27, f18, f7, rtz # perform operation
fmsub.s f17, f27, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f27, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f27, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xcc7c6fd899b01ba9 # load x3 with value 0xcc7c6fd899b01ba9
sw x3, 0(x2) # store 0xcc7c6fd899b01ba9 in memory
flw f28, 0(x2) # load 0xcc7c6fd899b01ba9 from memory into f28
fmsub.s f22, f6, f26, f28, dyn # perform operation
fmsub.s f22, f6, f26, f28, rdn # perform operation
fmsub.s f22, f6, f26, f28, rmm # perform operation
fmsub.s f22, f6, f26, f28, rne # perform operation
fmsub.s f22, f6, f26, f28, rtz # perform operation
fmsub.s f22, f6, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xe26bfc7f61f71298 # load x3 with value 0xe26bfc7f61f71298
sw x3, 0(x2) # store 0xe26bfc7f61f71298 in memory
flw f14, 0(x2) # load 0xe26bfc7f61f71298 from memory into f14
fmsub.s f22, f15, f10, f14, dyn # perform operation
fmsub.s f22, f15, f10, f14, rdn # perform operation
fmsub.s f22, f15, f10, f14, rmm # perform operation
fmsub.s f22, f15, f10, f14, rne # perform operation
fmsub.s f22, f15, f10, f14, rtz # perform operation
fmsub.s f22, f15, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0xc7c74c761125f015 # load x3 with value 0xc7c74c761125f015
sw x3, 0(x2) # store 0xc7c74c761125f015 in memory
flw f7, 0(x2) # load 0xc7c74c761125f015 from memory into f7
fmsub.s f5, f18, f26, f7, dyn # perform operation
fmsub.s f5, f18, f26, f7, rdn # perform operation
fmsub.s f5, f18, f26, f7, rmm # perform operation
fmsub.s f5, f18, f26, f7, rne # perform operation
fmsub.s f5, f18, f26, f7, rtz # perform operation
fmsub.s f5, f18, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0xb8eb75b70de1cb7d # load x3 with value 0xb8eb75b70de1cb7d
sw x3, 0(x2) # store 0xb8eb75b70de1cb7d in memory
flw f5, 0(x2) # load 0xb8eb75b70de1cb7d from memory into f5
fmsub.s f12, f19, f9, f5, dyn # perform operation
fmsub.s f12, f19, f9, f5, rdn # perform operation
fmsub.s f12, f19, f9, f5, rmm # perform operation
fmsub.s f12, f19, f9, f5, rne # perform operation
fmsub.s f12, f19, f9, f5, rtz # perform operation
fmsub.s f12, f19, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f19, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0xff2171a3839206ca # load x3 with value 0xff2171a3839206ca
sw x3, 0(x2) # store 0xff2171a3839206ca in memory
flw f22, 0(x2) # load 0xff2171a3839206ca from memory into f22
fmsub.s f15, f2, f6, f22, dyn # perform operation
fmsub.s f15, f2, f6, f22, rdn # perform operation
fmsub.s f15, f2, f6, f22, rmm # perform operation
fmsub.s f15, f2, f6, f22, rne # perform operation
fmsub.s f15, f2, f6, f22, rtz # perform operation
fmsub.s f15, f2, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0xa44418d2c1c746d5 # load x3 with value 0xa44418d2c1c746d5
sw x3, 0(x2) # store 0xa44418d2c1c746d5 in memory
flw f10, 0(x2) # load 0xa44418d2c1c746d5 from memory into f10
fmsub.s f7, f16, f6, f10, dyn # perform operation
fmsub.s f7, f16, f6, f10, rdn # perform operation
fmsub.s f7, f16, f6, f10, rmm # perform operation
fmsub.s f7, f16, f6, f10, rne # perform operation
fmsub.s f7, f16, f6, f10, rtz # perform operation
fmsub.s f7, f16, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f16, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7e4b961f011d8852 # load x3 with value 0x7e4b961f011d8852
sw x3, 0(x2) # store 0x7e4b961f011d8852 in memory
flw f28, 0(x2) # load 0x7e4b961f011d8852 from memory into f28
fmsub.s f21, f2, f27, f28, dyn # perform operation
fmsub.s f21, f2, f27, f28, rdn # perform operation
fmsub.s f21, f2, f27, f28, rmm # perform operation
fmsub.s f21, f2, f27, f28, rne # perform operation
fmsub.s f21, f2, f27, f28, rtz # perform operation
fmsub.s f21, f2, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f27, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x7a8e4fdab288a905 # load x3 with value 0x7a8e4fdab288a905
sw x3, 0(x2) # store 0x7a8e4fdab288a905 in memory
flw f2, 0(x2) # load 0x7a8e4fdab288a905 from memory into f2
fmsub.s f28, f14, f15, f2, dyn # perform operation
fmsub.s f28, f14, f15, f2, rdn # perform operation
fmsub.s f28, f14, f15, f2, rmm # perform operation
fmsub.s f28, f14, f15, f2, rne # perform operation
fmsub.s f28, f14, f15, f2, rtz # perform operation
fmsub.s f28, f14, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x12eb20679a5bfc5b # load x3 with value 0x12eb20679a5bfc5b
sw x3, 0(x2) # store 0x12eb20679a5bfc5b in memory
flw f31, 0(x2) # load 0x12eb20679a5bfc5b from memory into f31
fmsub.s f22, f30, f18, f31, dyn # perform operation
fmsub.s f22, f30, f18, f31, rdn # perform operation
fmsub.s f22, f30, f18, f31, rmm # perform operation
fmsub.s f22, f30, f18, f31, rne # perform operation
fmsub.s f22, f30, f18, f31, rtz # perform operation
fmsub.s f22, f30, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x6dc7b663752fa802 # load x3 with value 0x6dc7b663752fa802
sw x3, 0(x2) # store 0x6dc7b663752fa802 in memory
flw f26, 0(x2) # load 0x6dc7b663752fa802 from memory into f26
fmsub.s f23, f12, f19, f26, dyn # perform operation
fmsub.s f23, f12, f19, f26, rdn # perform operation
fmsub.s f23, f12, f19, f26, rmm # perform operation
fmsub.s f23, f12, f19, f26, rne # perform operation
fmsub.s f23, f12, f19, f26, rtz # perform operation
fmsub.s f23, f12, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x1e0a562f8e6b8e73 # load x3 with value 0x1e0a562f8e6b8e73
sw x3, 0(x2) # store 0x1e0a562f8e6b8e73 in memory
flw f6, 0(x2) # load 0x1e0a562f8e6b8e73 from memory into f6
fmsub.s f20, f1, f31, f6, dyn # perform operation
fmsub.s f20, f1, f31, f6, rdn # perform operation
fmsub.s f20, f1, f31, f6, rmm # perform operation
fmsub.s f20, f1, f31, f6, rne # perform operation
fmsub.s f20, f1, f31, f6, rtz # perform operation
fmsub.s f20, f1, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f1, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x6b5aa21589dd2b79 # load x3 with value 0x6b5aa21589dd2b79
sw x3, 0(x2) # store 0x6b5aa21589dd2b79 in memory
flw f29, 0(x2) # load 0x6b5aa21589dd2b79 from memory into f29
fmsub.s f5, f10, f20, f29, dyn # perform operation
fmsub.s f5, f10, f20, f29, rdn # perform operation
fmsub.s f5, f10, f20, f29, rmm # perform operation
fmsub.s f5, f10, f20, f29, rne # perform operation
fmsub.s f5, f10, f20, f29, rtz # perform operation
fmsub.s f5, f10, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f10, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xa6d64ca7217a996f # load x3 with value 0xa6d64ca7217a996f
sw x3, 0(x2) # store 0xa6d64ca7217a996f in memory
flw f2, 0(x2) # load 0xa6d64ca7217a996f from memory into f2
fmsub.s f28, f20, f6, f2, dyn # perform operation
fmsub.s f28, f20, f6, f2, rdn # perform operation
fmsub.s f28, f20, f6, f2, rmm # perform operation
fmsub.s f28, f20, f6, f2, rne # perform operation
fmsub.s f28, f20, f6, f2, rtz # perform operation
fmsub.s f28, f20, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x98c9386dd4fdd81d # load x3 with value 0x98c9386dd4fdd81d
sw x3, 0(x2) # store 0x98c9386dd4fdd81d in memory
flw f1, 0(x2) # load 0x98c9386dd4fdd81d from memory into f1
fmsub.s f8, f3, f31, f1, dyn # perform operation
fmsub.s f8, f3, f31, f1, rdn # perform operation
fmsub.s f8, f3, f31, f1, rmm # perform operation
fmsub.s f8, f3, f31, f1, rne # perform operation
fmsub.s f8, f3, f31, f1, rtz # perform operation
fmsub.s f8, f3, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f3, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x66b391f770067d88 # load x3 with value 0x66b391f770067d88
sw x3, 0(x2) # store 0x66b391f770067d88 in memory
flw f13, 0(x2) # load 0x66b391f770067d88 from memory into f13
fmsub.s f7, f19, f20, f13, dyn # perform operation
fmsub.s f7, f19, f20, f13, rdn # perform operation
fmsub.s f7, f19, f20, f13, rmm # perform operation
fmsub.s f7, f19, f20, f13, rne # perform operation
fmsub.s f7, f19, f20, f13, rtz # perform operation
fmsub.s f7, f19, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f19, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f19, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f19, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f19, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f19, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xfc0370730e038af6 # load x3 with value 0xfc0370730e038af6
sw x3, 0(x2) # store 0xfc0370730e038af6 in memory
flw f21, 0(x2) # load 0xfc0370730e038af6 from memory into f21
fmsub.s f29, f19, f7, f21, dyn # perform operation
fmsub.s f29, f19, f7, f21, rdn # perform operation
fmsub.s f29, f19, f7, f21, rmm # perform operation
fmsub.s f29, f19, f7, f21, rne # perform operation
fmsub.s f29, f19, f7, f21, rtz # perform operation
fmsub.s f29, f19, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0xc7d5060e1275769 # load x3 with value 0xc7d5060e1275769
sw x3, 0(x2) # store 0xc7d5060e1275769 in memory
flw f11, 0(x2) # load 0xc7d5060e1275769 from memory into f11
fmsub.s f5, f28, f26, f11, dyn # perform operation
fmsub.s f5, f28, f26, f11, rdn # perform operation
fmsub.s f5, f28, f26, f11, rmm # perform operation
fmsub.s f5, f28, f26, f11, rne # perform operation
fmsub.s f5, f28, f26, f11, rtz # perform operation
fmsub.s f5, f28, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xf8415457a8bf28d6 # load x3 with value 0xf8415457a8bf28d6
sw x3, 0(x2) # store 0xf8415457a8bf28d6 in memory
flw f26, 0(x2) # load 0xf8415457a8bf28d6 from memory into f26
fmsub.s f18, f6, f24, f26, dyn # perform operation
fmsub.s f18, f6, f24, f26, rdn # perform operation
fmsub.s f18, f6, f24, f26, rmm # perform operation
fmsub.s f18, f6, f24, f26, rne # perform operation
fmsub.s f18, f6, f24, f26, rtz # perform operation
fmsub.s f18, f6, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0xb2c421ac61ddd61a # load x3 with value 0xb2c421ac61ddd61a
sw x3, 0(x2) # store 0xb2c421ac61ddd61a in memory
flw f7, 0(x2) # load 0xb2c421ac61ddd61a from memory into f7
fmsub.s f27, f13, f29, f7, dyn # perform operation
fmsub.s f27, f13, f29, f7, rdn # perform operation
fmsub.s f27, f13, f29, f7, rmm # perform operation
fmsub.s f27, f13, f29, f7, rne # perform operation
fmsub.s f27, f13, f29, f7, rtz # perform operation
fmsub.s f27, f13, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x6a60f37852220eb # load x3 with value 0x6a60f37852220eb
sw x3, 0(x2) # store 0x6a60f37852220eb in memory
flw f15, 0(x2) # load 0x6a60f37852220eb from memory into f15
fmsub.s f5, f1, f16, f15, dyn # perform operation
fmsub.s f5, f1, f16, f15, rdn # perform operation
fmsub.s f5, f1, f16, f15, rmm # perform operation
fmsub.s f5, f1, f16, f15, rne # perform operation
fmsub.s f5, f1, f16, f15, rtz # perform operation
fmsub.s f5, f1, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xc783210f7e77ecab # load x3 with value 0xc783210f7e77ecab
sw x3, 0(x2) # store 0xc783210f7e77ecab in memory
flw f1, 0(x2) # load 0xc783210f7e77ecab from memory into f1
fmsub.s f6, f25, f28, f1, dyn # perform operation
fmsub.s f6, f25, f28, f1, rdn # perform operation
fmsub.s f6, f25, f28, f1, rmm # perform operation
fmsub.s f6, f25, f28, f1, rne # perform operation
fmsub.s f6, f25, f28, f1, rtz # perform operation
fmsub.s f6, f25, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f25, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0xb0f61cc42c05b7bb # load x3 with value 0xb0f61cc42c05b7bb
sw x3, 0(x2) # store 0xb0f61cc42c05b7bb in memory
flw f10, 0(x2) # load 0xb0f61cc42c05b7bb from memory into f10
fmsub.s f14, f12, f29, f10, dyn # perform operation
fmsub.s f14, f12, f29, f10, rdn # perform operation
fmsub.s f14, f12, f29, f10, rmm # perform operation
fmsub.s f14, f12, f29, f10, rne # perform operation
fmsub.s f14, f12, f29, f10, rtz # perform operation
fmsub.s f14, f12, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x752a8260e365b7ff # load x3 with value 0x752a8260e365b7ff
sw x3, 0(x2) # store 0x752a8260e365b7ff in memory
flw f16, 0(x2) # load 0x752a8260e365b7ff from memory into f16
fmsub.s f31, f29, f26, f16, dyn # perform operation
fmsub.s f31, f29, f26, f16, rdn # perform operation
fmsub.s f31, f29, f26, f16, rmm # perform operation
fmsub.s f31, f29, f26, f16, rne # perform operation
fmsub.s f31, f29, f26, f16, rtz # perform operation
fmsub.s f31, f29, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f29, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f29, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x2a762cc355c996b4 # load x3 with value 0x2a762cc355c996b4
sw x3, 0(x2) # store 0x2a762cc355c996b4 in memory
flw f21, 0(x2) # load 0x2a762cc355c996b4 from memory into f21
fmsub.s f8, f25, f30, f21, dyn # perform operation
fmsub.s f8, f25, f30, f21, rdn # perform operation
fmsub.s f8, f25, f30, f21, rmm # perform operation
fmsub.s f8, f25, f30, f21, rne # perform operation
fmsub.s f8, f25, f30, f21, rtz # perform operation
fmsub.s f8, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x3a0a4b86f7157318 # load x3 with value 0x3a0a4b86f7157318
sw x3, 0(x2) # store 0x3a0a4b86f7157318 in memory
flw f15, 0(x2) # load 0x3a0a4b86f7157318 from memory into f15
fmsub.s f19, f23, f7, f15, dyn # perform operation
fmsub.s f19, f23, f7, f15, rdn # perform operation
fmsub.s f19, f23, f7, f15, rmm # perform operation
fmsub.s f19, f23, f7, f15, rne # perform operation
fmsub.s f19, f23, f7, f15, rtz # perform operation
fmsub.s f19, f23, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f23, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f23, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xde972b12f2dcbcc4 # load x3 with value 0xde972b12f2dcbcc4
sw x3, 0(x2) # store 0xde972b12f2dcbcc4 in memory
flw f11, 0(x2) # load 0xde972b12f2dcbcc4 from memory into f11
fmsub.s f14, f13, f26, f11, dyn # perform operation
fmsub.s f14, f13, f26, f11, rdn # perform operation
fmsub.s f14, f13, f26, f11, rmm # perform operation
fmsub.s f14, f13, f26, f11, rne # perform operation
fmsub.s f14, f13, f26, f11, rtz # perform operation
fmsub.s f14, f13, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f13, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f13, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f13, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f13, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f13, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x582a6a84ddb9a032 # load x3 with value 0x582a6a84ddb9a032
sw x3, 0(x2) # store 0x582a6a84ddb9a032 in memory
flw f14, 0(x2) # load 0x582a6a84ddb9a032 from memory into f14
fmsub.s f22, f9, f2, f14, dyn # perform operation
fmsub.s f22, f9, f2, f14, rdn # perform operation
fmsub.s f22, f9, f2, f14, rmm # perform operation
fmsub.s f22, f9, f2, f14, rne # perform operation
fmsub.s f22, f9, f2, f14, rtz # perform operation
fmsub.s f22, f9, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x8fed8ae9106e48ec # load x3 with value 0x8fed8ae9106e48ec
sw x3, 0(x2) # store 0x8fed8ae9106e48ec in memory
flw f16, 0(x2) # load 0x8fed8ae9106e48ec from memory into f16
fmsub.s f29, f23, f30, f16, dyn # perform operation
fmsub.s f29, f23, f30, f16, rdn # perform operation
fmsub.s f29, f23, f30, f16, rmm # perform operation
fmsub.s f29, f23, f30, f16, rne # perform operation
fmsub.s f29, f23, f30, f16, rtz # perform operation
fmsub.s f29, f23, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x53111ececbe3278e # load x3 with value 0x53111ececbe3278e
sw x3, 0(x2) # store 0x53111ececbe3278e in memory
flw f25, 0(x2) # load 0x53111ececbe3278e from memory into f25
fmsub.s f20, f10, f30, f25, dyn # perform operation
fmsub.s f20, f10, f30, f25, rdn # perform operation
fmsub.s f20, f10, f30, f25, rmm # perform operation
fmsub.s f20, f10, f30, f25, rne # perform operation
fmsub.s f20, f10, f30, f25, rtz # perform operation
fmsub.s f20, f10, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f10, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f10, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xdef5c8ec518bf00f # load x3 with value 0xdef5c8ec518bf00f
sw x3, 0(x2) # store 0xdef5c8ec518bf00f in memory
flw f7, 0(x2) # load 0xdef5c8ec518bf00f from memory into f7
fmsub.s f22, f25, f28, f7, dyn # perform operation
fmsub.s f22, f25, f28, f7, rdn # perform operation
fmsub.s f22, f25, f28, f7, rmm # perform operation
fmsub.s f22, f25, f28, f7, rne # perform operation
fmsub.s f22, f25, f28, f7, rtz # perform operation
fmsub.s f22, f25, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x30eafae0fc7ce5d6 # load x3 with value 0x30eafae0fc7ce5d6
sw x3, 0(x2) # store 0x30eafae0fc7ce5d6 in memory
flw f3, 0(x2) # load 0x30eafae0fc7ce5d6 from memory into f3
fmsub.s f12, f10, f6, f3, dyn # perform operation
fmsub.s f12, f10, f6, f3, rdn # perform operation
fmsub.s f12, f10, f6, f3, rmm # perform operation
fmsub.s f12, f10, f6, f3, rne # perform operation
fmsub.s f12, f10, f6, f3, rtz # perform operation
fmsub.s f12, f10, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x8e50e127201dae59 # load x3 with value 0x8e50e127201dae59
sw x3, 0(x2) # store 0x8e50e127201dae59 in memory
flw f17, 0(x2) # load 0x8e50e127201dae59 from memory into f17
fmsub.s f15, f31, f25, f17, dyn # perform operation
fmsub.s f15, f31, f25, f17, rdn # perform operation
fmsub.s f15, f31, f25, f17, rmm # perform operation
fmsub.s f15, f31, f25, f17, rne # perform operation
fmsub.s f15, f31, f25, f17, rtz # perform operation
fmsub.s f15, f31, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x64de4def8d00850a # load x3 with value 0x64de4def8d00850a
sw x3, 0(x2) # store 0x64de4def8d00850a in memory
flw f7, 0(x2) # load 0x64de4def8d00850a from memory into f7
fmsub.s f29, f5, f18, f7, dyn # perform operation
fmsub.s f29, f5, f18, f7, rdn # perform operation
fmsub.s f29, f5, f18, f7, rmm # perform operation
fmsub.s f29, f5, f18, f7, rne # perform operation
fmsub.s f29, f5, f18, f7, rtz # perform operation
fmsub.s f29, f5, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f5, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f5, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xa9bdb89625e7cc4b # load x3 with value 0xa9bdb89625e7cc4b
sw x3, 0(x2) # store 0xa9bdb89625e7cc4b in memory
flw f26, 0(x2) # load 0xa9bdb89625e7cc4b from memory into f26
fmsub.s f5, f27, f30, f26, dyn # perform operation
fmsub.s f5, f27, f30, f26, rdn # perform operation
fmsub.s f5, f27, f30, f26, rmm # perform operation
fmsub.s f5, f27, f30, f26, rne # perform operation
fmsub.s f5, f27, f30, f26, rtz # perform operation
fmsub.s f5, f27, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x9f927ee09a19e829 # load x3 with value 0x9f927ee09a19e829
sw x3, 0(x2) # store 0x9f927ee09a19e829 in memory
flw f22, 0(x2) # load 0x9f927ee09a19e829 from memory into f22
fmsub.s f12, f26, f13, f22, dyn # perform operation
fmsub.s f12, f26, f13, f22, rdn # perform operation
fmsub.s f12, f26, f13, f22, rmm # perform operation
fmsub.s f12, f26, f13, f22, rne # perform operation
fmsub.s f12, f26, f13, f22, rtz # perform operation
fmsub.s f12, f26, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f26, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f26, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x6dfc9bd2c8016ea7 # load x3 with value 0x6dfc9bd2c8016ea7
sw x3, 0(x2) # store 0x6dfc9bd2c8016ea7 in memory
flw f14, 0(x2) # load 0x6dfc9bd2c8016ea7 from memory into f14
fmsub.s f26, f29, f15, f14, dyn # perform operation
fmsub.s f26, f29, f15, f14, rdn # perform operation
fmsub.s f26, f29, f15, f14, rmm # perform operation
fmsub.s f26, f29, f15, f14, rne # perform operation
fmsub.s f26, f29, f15, f14, rtz # perform operation
fmsub.s f26, f29, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f29, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f29, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f29, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f29, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f29, f15, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x10c11ed6b7b3e713 # load x3 with value 0x10c11ed6b7b3e713
sw x3, 0(x2) # store 0x10c11ed6b7b3e713 in memory
flw f28, 0(x2) # load 0x10c11ed6b7b3e713 from memory into f28
fmsub.s f25, f19, f12, f28, dyn # perform operation
fmsub.s f25, f19, f12, f28, rdn # perform operation
fmsub.s f25, f19, f12, f28, rmm # perform operation
fmsub.s f25, f19, f12, f28, rne # perform operation
fmsub.s f25, f19, f12, f28, rtz # perform operation
fmsub.s f25, f19, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x74ec26b942f8930e # load x3 with value 0x74ec26b942f8930e
sw x3, 0(x2) # store 0x74ec26b942f8930e in memory
flw f3, 0(x2) # load 0x74ec26b942f8930e from memory into f3
fmsub.s f13, f23, f25, f3, dyn # perform operation
fmsub.s f13, f23, f25, f3, rdn # perform operation
fmsub.s f13, f23, f25, f3, rmm # perform operation
fmsub.s f13, f23, f25, f3, rne # perform operation
fmsub.s f13, f23, f25, f3, rtz # perform operation
fmsub.s f13, f23, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x65b143102048de64 # load x3 with value 0x65b143102048de64
sw x3, 0(x2) # store 0x65b143102048de64 in memory
flw f12, 0(x2) # load 0x65b143102048de64 from memory into f12
fmsub.s f15, f8, f26, f12, dyn # perform operation
fmsub.s f15, f8, f26, f12, rdn # perform operation
fmsub.s f15, f8, f26, f12, rmm # perform operation
fmsub.s f15, f8, f26, f12, rne # perform operation
fmsub.s f15, f8, f26, f12, rtz # perform operation
fmsub.s f15, f8, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xf9f3fbeb8b3bee84 # load x3 with value 0xf9f3fbeb8b3bee84
sw x3, 0(x2) # store 0xf9f3fbeb8b3bee84 in memory
flw f16, 0(x2) # load 0xf9f3fbeb8b3bee84 from memory into f16
fmsub.s f7, f26, f12, f16, dyn # perform operation
fmsub.s f7, f26, f12, f16, rdn # perform operation
fmsub.s f7, f26, f12, f16, rmm # perform operation
fmsub.s f7, f26, f12, f16, rne # perform operation
fmsub.s f7, f26, f12, f16, rtz # perform operation
fmsub.s f7, f26, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x529e2c83cf2568ca # load x3 with value 0x529e2c83cf2568ca
sw x3, 0(x2) # store 0x529e2c83cf2568ca in memory
flw f12, 0(x2) # load 0x529e2c83cf2568ca from memory into f12
fmsub.s f22, f7, f28, f12, dyn # perform operation
fmsub.s f22, f7, f28, f12, rdn # perform operation
fmsub.s f22, f7, f28, f12, rmm # perform operation
fmsub.s f22, f7, f28, f12, rne # perform operation
fmsub.s f22, f7, f28, f12, rtz # perform operation
fmsub.s f22, f7, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x24dd05cd4d5922b2 # load x3 with value 0x24dd05cd4d5922b2
sw x3, 0(x2) # store 0x24dd05cd4d5922b2 in memory
flw f30, 0(x2) # load 0x24dd05cd4d5922b2 from memory into f30
fmsub.s f29, f10, f28, f30, dyn # perform operation
fmsub.s f29, f10, f28, f30, rdn # perform operation
fmsub.s f29, f10, f28, f30, rmm # perform operation
fmsub.s f29, f10, f28, f30, rne # perform operation
fmsub.s f29, f10, f28, f30, rtz # perform operation
fmsub.s f29, f10, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x9941b794c7b107fd # load x3 with value 0x9941b794c7b107fd
sw x3, 0(x2) # store 0x9941b794c7b107fd in memory
flw f30, 0(x2) # load 0x9941b794c7b107fd from memory into f30
fmsub.s f9, f11, f15, f30, dyn # perform operation
fmsub.s f9, f11, f15, f30, rdn # perform operation
fmsub.s f9, f11, f15, f30, rmm # perform operation
fmsub.s f9, f11, f15, f30, rne # perform operation
fmsub.s f9, f11, f15, f30, rtz # perform operation
fmsub.s f9, f11, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x146723c64b899dcb # load x3 with value 0x146723c64b899dcb
sw x3, 0(x2) # store 0x146723c64b899dcb in memory
flw f20, 0(x2) # load 0x146723c64b899dcb from memory into f20
fmsub.s f1, f11, f5, f20, dyn # perform operation
fmsub.s f1, f11, f5, f20, rdn # perform operation
fmsub.s f1, f11, f5, f20, rmm # perform operation
fmsub.s f1, f11, f5, f20, rne # perform operation
fmsub.s f1, f11, f5, f20, rtz # perform operation
fmsub.s f1, f11, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x7f3cee406f72bd8d # load x3 with value 0x7f3cee406f72bd8d
sw x3, 0(x2) # store 0x7f3cee406f72bd8d in memory
flw f2, 0(x2) # load 0x7f3cee406f72bd8d from memory into f2
fmsub.s f21, f25, f31, f2, dyn # perform operation
fmsub.s f21, f25, f31, f2, rdn # perform operation
fmsub.s f21, f25, f31, f2, rmm # perform operation
fmsub.s f21, f25, f31, f2, rne # perform operation
fmsub.s f21, f25, f31, f2, rtz # perform operation
fmsub.s f21, f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x1c33ea486a5061a4 # load x3 with value 0x1c33ea486a5061a4
sw x3, 0(x2) # store 0x1c33ea486a5061a4 in memory
flw f8, 0(x2) # load 0x1c33ea486a5061a4 from memory into f8
fmsub.s f23, f6, f11, f8, dyn # perform operation
fmsub.s f23, f6, f11, f8, rdn # perform operation
fmsub.s f23, f6, f11, f8, rmm # perform operation
fmsub.s f23, f6, f11, f8, rne # perform operation
fmsub.s f23, f6, f11, f8, rtz # perform operation
fmsub.s f23, f6, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xf4106340eb57dd5 # load x3 with value 0xf4106340eb57dd5
sw x3, 0(x2) # store 0xf4106340eb57dd5 in memory
flw f13, 0(x2) # load 0xf4106340eb57dd5 from memory into f13
fmsub.s f27, f5, f28, f13, dyn # perform operation
fmsub.s f27, f5, f28, f13, rdn # perform operation
fmsub.s f27, f5, f28, f13, rmm # perform operation
fmsub.s f27, f5, f28, f13, rne # perform operation
fmsub.s f27, f5, f28, f13, rtz # perform operation
fmsub.s f27, f5, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x82607d771b1824cb # load x3 with value 0x82607d771b1824cb
sw x3, 0(x2) # store 0x82607d771b1824cb in memory
flw f2, 0(x2) # load 0x82607d771b1824cb from memory into f2
fmsub.s f14, f7, f9, f2, dyn # perform operation
fmsub.s f14, f7, f9, f2, rdn # perform operation
fmsub.s f14, f7, f9, f2, rmm # perform operation
fmsub.s f14, f7, f9, f2, rne # perform operation
fmsub.s f14, f7, f9, f2, rtz # perform operation
fmsub.s f14, f7, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x36e0ed2b9beb6b29 # load x3 with value 0x36e0ed2b9beb6b29
sw x3, 0(x2) # store 0x36e0ed2b9beb6b29 in memory
flw f2, 0(x2) # load 0x36e0ed2b9beb6b29 from memory into f2
fmsub.s f19, f16, f10, f2, dyn # perform operation
fmsub.s f19, f16, f10, f2, rdn # perform operation
fmsub.s f19, f16, f10, f2, rmm # perform operation
fmsub.s f19, f16, f10, f2, rne # perform operation
fmsub.s f19, f16, f10, f2, rtz # perform operation
fmsub.s f19, f16, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x5b494f61db95d702 # load x3 with value 0x5b494f61db95d702
sw x3, 0(x2) # store 0x5b494f61db95d702 in memory
flw f5, 0(x2) # load 0x5b494f61db95d702 from memory into f5
fmsub.s f29, f3, f15, f5, dyn # perform operation
fmsub.s f29, f3, f15, f5, rdn # perform operation
fmsub.s f29, f3, f15, f5, rmm # perform operation
fmsub.s f29, f3, f15, f5, rne # perform operation
fmsub.s f29, f3, f15, f5, rtz # perform operation
fmsub.s f29, f3, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f3, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x74b86293f3d0e838 # load x3 with value 0x74b86293f3d0e838
sw x3, 0(x2) # store 0x74b86293f3d0e838 in memory
flw f20, 0(x2) # load 0x74b86293f3d0e838 from memory into f20
fmsub.s f17, f26, f14, f20, dyn # perform operation
fmsub.s f17, f26, f14, f20, rdn # perform operation
fmsub.s f17, f26, f14, f20, rmm # perform operation
fmsub.s f17, f26, f14, f20, rne # perform operation
fmsub.s f17, f26, f14, f20, rtz # perform operation
fmsub.s f17, f26, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x198166515df25f4f # load x3 with value 0x198166515df25f4f
sw x3, 0(x2) # store 0x198166515df25f4f in memory
flw f12, 0(x2) # load 0x198166515df25f4f from memory into f12
fmsub.s f9, f22, f5, f12, dyn # perform operation
fmsub.s f9, f22, f5, f12, rdn # perform operation
fmsub.s f9, f22, f5, f12, rmm # perform operation
fmsub.s f9, f22, f5, f12, rne # perform operation
fmsub.s f9, f22, f5, f12, rtz # perform operation
fmsub.s f9, f22, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xa1a475cb8624ad4 # load x3 with value 0xa1a475cb8624ad4
sw x3, 0(x2) # store 0xa1a475cb8624ad4 in memory
flw f10, 0(x2) # load 0xa1a475cb8624ad4 from memory into f10
fmsub.s f26, f9, f2, f10, dyn # perform operation
fmsub.s f26, f9, f2, f10, rdn # perform operation
fmsub.s f26, f9, f2, f10, rmm # perform operation
fmsub.s f26, f9, f2, f10, rne # perform operation
fmsub.s f26, f9, f2, f10, rtz # perform operation
fmsub.s f26, f9, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f9, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f9, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xbb63a9a5c1e7beb2 # load x3 with value 0xbb63a9a5c1e7beb2
sw x3, 0(x2) # store 0xbb63a9a5c1e7beb2 in memory
flw f24, 0(x2) # load 0xbb63a9a5c1e7beb2 from memory into f24
fmsub.s f16, f28, f3, f24, dyn # perform operation
fmsub.s f16, f28, f3, f24, rdn # perform operation
fmsub.s f16, f28, f3, f24, rmm # perform operation
fmsub.s f16, f28, f3, f24, rne # perform operation
fmsub.s f16, f28, f3, f24, rtz # perform operation
fmsub.s f16, f28, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x55b8de3336f6e4b8 # load x3 with value 0x55b8de3336f6e4b8
sw x3, 0(x2) # store 0x55b8de3336f6e4b8 in memory
flw f6, 0(x2) # load 0x55b8de3336f6e4b8 from memory into f6
fmsub.s f25, f8, f24, f6, dyn # perform operation
fmsub.s f25, f8, f24, f6, rdn # perform operation
fmsub.s f25, f8, f24, f6, rmm # perform operation
fmsub.s f25, f8, f24, f6, rne # perform operation
fmsub.s f25, f8, f24, f6, rtz # perform operation
fmsub.s f25, f8, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f8, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f8, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f8, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f8, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f8, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x150a670f73f934bd # load x3 with value 0x150a670f73f934bd
sw x3, 0(x2) # store 0x150a670f73f934bd in memory
flw f11, 0(x2) # load 0x150a670f73f934bd from memory into f11
fmsub.s f10, f25, f27, f11, dyn # perform operation
fmsub.s f10, f25, f27, f11, rdn # perform operation
fmsub.s f10, f25, f27, f11, rmm # perform operation
fmsub.s f10, f25, f27, f11, rne # perform operation
fmsub.s f10, f25, f27, f11, rtz # perform operation
fmsub.s f10, f25, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0xfb780a4df69d18c8 # load x3 with value 0xfb780a4df69d18c8
sw x3, 0(x2) # store 0xfb780a4df69d18c8 in memory
flw f17, 0(x2) # load 0xfb780a4df69d18c8 from memory into f17
fmsub.s f24, f22, f12, f17, dyn # perform operation
fmsub.s f24, f22, f12, f17, rdn # perform operation
fmsub.s f24, f22, f12, f17, rmm # perform operation
fmsub.s f24, f22, f12, f17, rne # perform operation
fmsub.s f24, f22, f12, f17, rtz # perform operation
fmsub.s f24, f22, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xbb05f41813c5f3e3 # load x3 with value 0xbb05f41813c5f3e3
sw x3, 0(x2) # store 0xbb05f41813c5f3e3 in memory
flw f18, 0(x2) # load 0xbb05f41813c5f3e3 from memory into f18
fmsub.s f21, f25, f30, f18, dyn # perform operation
fmsub.s f21, f25, f30, f18, rdn # perform operation
fmsub.s f21, f25, f30, f18, rmm # perform operation
fmsub.s f21, f25, f30, f18, rne # perform operation
fmsub.s f21, f25, f30, f18, rtz # perform operation
fmsub.s f21, f25, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x916ab7a690bb6cd4 # load x3 with value 0x916ab7a690bb6cd4
sw x3, 0(x2) # store 0x916ab7a690bb6cd4 in memory
flw f13, 0(x2) # load 0x916ab7a690bb6cd4 from memory into f13
fmsub.s f15, f12, f3, f13, dyn # perform operation
fmsub.s f15, f12, f3, f13, rdn # perform operation
fmsub.s f15, f12, f3, f13, rmm # perform operation
fmsub.s f15, f12, f3, f13, rne # perform operation
fmsub.s f15, f12, f3, f13, rtz # perform operation
fmsub.s f15, f12, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f12, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x96f71f3224b90751 # load x3 with value 0x96f71f3224b90751
sw x3, 0(x2) # store 0x96f71f3224b90751 in memory
flw f22, 0(x2) # load 0x96f71f3224b90751 from memory into f22
fmsub.s f25, f1, f27, f22, dyn # perform operation
fmsub.s f25, f1, f27, f22, rdn # perform operation
fmsub.s f25, f1, f27, f22, rmm # perform operation
fmsub.s f25, f1, f27, f22, rne # perform operation
fmsub.s f25, f1, f27, f22, rtz # perform operation
fmsub.s f25, f1, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x2eb12e4d4ecd71a7 # load x3 with value 0x2eb12e4d4ecd71a7
sw x3, 0(x2) # store 0x2eb12e4d4ecd71a7 in memory
flw f11, 0(x2) # load 0x2eb12e4d4ecd71a7 from memory into f11
fmsub.s f22, f25, f16, f11, dyn # perform operation
fmsub.s f22, f25, f16, f11, rdn # perform operation
fmsub.s f22, f25, f16, f11, rmm # perform operation
fmsub.s f22, f25, f16, f11, rne # perform operation
fmsub.s f22, f25, f16, f11, rtz # perform operation
fmsub.s f22, f25, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x9da8da5c12eba5bf # load x3 with value 0x9da8da5c12eba5bf
sw x3, 0(x2) # store 0x9da8da5c12eba5bf in memory
flw f7, 0(x2) # load 0x9da8da5c12eba5bf from memory into f7
fmsub.s f22, f20, f12, f7, dyn # perform operation
fmsub.s f22, f20, f12, f7, rdn # perform operation
fmsub.s f22, f20, f12, f7, rmm # perform operation
fmsub.s f22, f20, f12, f7, rne # perform operation
fmsub.s f22, f20, f12, f7, rtz # perform operation
fmsub.s f22, f20, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x9eacdd1edf9b9392 # load x3 with value 0x9eacdd1edf9b9392
sw x3, 0(x2) # store 0x9eacdd1edf9b9392 in memory
flw f11, 0(x2) # load 0x9eacdd1edf9b9392 from memory into f11
fmsub.s f8, f20, f15, f11, dyn # perform operation
fmsub.s f8, f20, f15, f11, rdn # perform operation
fmsub.s f8, f20, f15, f11, rmm # perform operation
fmsub.s f8, f20, f15, f11, rne # perform operation
fmsub.s f8, f20, f15, f11, rtz # perform operation
fmsub.s f8, f20, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f20, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f20, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0xf07115670e10fb97 # load x3 with value 0xf07115670e10fb97
sw x3, 0(x2) # store 0xf07115670e10fb97 in memory
flw f20, 0(x2) # load 0xf07115670e10fb97 from memory into f20
fmsub.s f16, f29, f21, f20, dyn # perform operation
fmsub.s f16, f29, f21, f20, rdn # perform operation
fmsub.s f16, f29, f21, f20, rmm # perform operation
fmsub.s f16, f29, f21, f20, rne # perform operation
fmsub.s f16, f29, f21, f20, rtz # perform operation
fmsub.s f16, f29, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x2a870e7c3ed9419e # load x3 with value 0x2a870e7c3ed9419e
sw x3, 0(x2) # store 0x2a870e7c3ed9419e in memory
flw f23, 0(x2) # load 0x2a870e7c3ed9419e from memory into f23
fmsub.s f7, f15, f1, f23, dyn # perform operation
fmsub.s f7, f15, f1, f23, rdn # perform operation
fmsub.s f7, f15, f1, f23, rmm # perform operation
fmsub.s f7, f15, f1, f23, rne # perform operation
fmsub.s f7, f15, f1, f23, rtz # perform operation
fmsub.s f7, f15, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f15, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f15, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xf7182a4361bf5af5 # load x3 with value 0xf7182a4361bf5af5
sw x3, 0(x2) # store 0xf7182a4361bf5af5 in memory
flw f31, 0(x2) # load 0xf7182a4361bf5af5 from memory into f31
fmsub.s f5, f16, f7, f31, dyn # perform operation
fmsub.s f5, f16, f7, f31, rdn # perform operation
fmsub.s f5, f16, f7, f31, rmm # perform operation
fmsub.s f5, f16, f7, f31, rne # perform operation
fmsub.s f5, f16, f7, f31, rtz # perform operation
fmsub.s f5, f16, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x6188418022cf0e8e # load x3 with value 0x6188418022cf0e8e
sw x3, 0(x2) # store 0x6188418022cf0e8e in memory
flw f7, 0(x2) # load 0x6188418022cf0e8e from memory into f7
fmsub.s f10, f8, f20, f7, dyn # perform operation
fmsub.s f10, f8, f20, f7, rdn # perform operation
fmsub.s f10, f8, f20, f7, rmm # perform operation
fmsub.s f10, f8, f20, f7, rne # perform operation
fmsub.s f10, f8, f20, f7, rtz # perform operation
fmsub.s f10, f8, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xdbbe81326f12daee # load x3 with value 0xdbbe81326f12daee
sw x3, 0(x2) # store 0xdbbe81326f12daee in memory
flw f26, 0(x2) # load 0xdbbe81326f12daee from memory into f26
fmsub.s f23, f27, f9, f26, dyn # perform operation
fmsub.s f23, f27, f9, f26, rdn # perform operation
fmsub.s f23, f27, f9, f26, rmm # perform operation
fmsub.s f23, f27, f9, f26, rne # perform operation
fmsub.s f23, f27, f9, f26, rtz # perform operation
fmsub.s f23, f27, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xe392d7da13105bb # load x3 with value 0xe392d7da13105bb
sw x3, 0(x2) # store 0xe392d7da13105bb in memory
flw f21, 0(x2) # load 0xe392d7da13105bb from memory into f21
fmsub.s f29, f19, f31, f21, dyn # perform operation
fmsub.s f29, f19, f31, f21, rdn # perform operation
fmsub.s f29, f19, f31, f21, rmm # perform operation
fmsub.s f29, f19, f31, f21, rne # perform operation
fmsub.s f29, f19, f31, f21, rtz # perform operation
fmsub.s f29, f19, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xbd05a9dd422cd1a3 # load x3 with value 0xbd05a9dd422cd1a3
sw x3, 0(x2) # store 0xbd05a9dd422cd1a3 in memory
flw f2, 0(x2) # load 0xbd05a9dd422cd1a3 from memory into f2
fmsub.s f27, f1, f11, f2, dyn # perform operation
fmsub.s f27, f1, f11, f2, rdn # perform operation
fmsub.s f27, f1, f11, f2, rmm # perform operation
fmsub.s f27, f1, f11, f2, rne # perform operation
fmsub.s f27, f1, f11, f2, rtz # perform operation
fmsub.s f27, f1, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x70d5790daf9100cc # load x3 with value 0x70d5790daf9100cc
sw x3, 0(x2) # store 0x70d5790daf9100cc in memory
flw f7, 0(x2) # load 0x70d5790daf9100cc from memory into f7
fmsub.s f1, f31, f3, f7, dyn # perform operation
fmsub.s f1, f31, f3, f7, rdn # perform operation
fmsub.s f1, f31, f3, f7, rmm # perform operation
fmsub.s f1, f31, f3, f7, rne # perform operation
fmsub.s f1, f31, f3, f7, rtz # perform operation
fmsub.s f1, f31, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f31, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f31, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xd39c2bad0bb85870 # load x3 with value 0xd39c2bad0bb85870
sw x3, 0(x2) # store 0xd39c2bad0bb85870 in memory
flw f16, 0(x2) # load 0xd39c2bad0bb85870 from memory into f16
fmsub.s f2, f13, f12, f16, dyn # perform operation
fmsub.s f2, f13, f12, f16, rdn # perform operation
fmsub.s f2, f13, f12, f16, rmm # perform operation
fmsub.s f2, f13, f12, f16, rne # perform operation
fmsub.s f2, f13, f12, f16, rtz # perform operation
fmsub.s f2, f13, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f13, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f13, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f13, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f13, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f13, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x8d5191d16e0be02e # load x3 with value 0x8d5191d16e0be02e
sw x3, 0(x2) # store 0x8d5191d16e0be02e in memory
flw f25, 0(x2) # load 0x8d5191d16e0be02e from memory into f25
fmsub.s f3, f21, f9, f25, dyn # perform operation
fmsub.s f3, f21, f9, f25, rdn # perform operation
fmsub.s f3, f21, f9, f25, rmm # perform operation
fmsub.s f3, f21, f9, f25, rne # perform operation
fmsub.s f3, f21, f9, f25, rtz # perform operation
fmsub.s f3, f21, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f9, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x50f2537515037632 # load x3 with value 0x50f2537515037632
sw x3, 0(x2) # store 0x50f2537515037632 in memory
flw f22, 0(x2) # load 0x50f2537515037632 from memory into f22
fmsub.s f7, f2, f19, f22, dyn # perform operation
fmsub.s f7, f2, f19, f22, rdn # perform operation
fmsub.s f7, f2, f19, f22, rmm # perform operation
fmsub.s f7, f2, f19, f22, rne # perform operation
fmsub.s f7, f2, f19, f22, rtz # perform operation
fmsub.s f7, f2, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f2, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f2, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x45da6ebd87ac7f3b # load x3 with value 0x45da6ebd87ac7f3b
sw x3, 0(x2) # store 0x45da6ebd87ac7f3b in memory
flw f28, 0(x2) # load 0x45da6ebd87ac7f3b from memory into f28
fmsub.s f16, f24, f29, f28, dyn # perform operation
fmsub.s f16, f24, f29, f28, rdn # perform operation
fmsub.s f16, f24, f29, f28, rmm # perform operation
fmsub.s f16, f24, f29, f28, rne # perform operation
fmsub.s f16, f24, f29, f28, rtz # perform operation
fmsub.s f16, f24, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xb5fbcb063b3a52a7 # load x3 with value 0xb5fbcb063b3a52a7
sw x3, 0(x2) # store 0xb5fbcb063b3a52a7 in memory
flw f11, 0(x2) # load 0xb5fbcb063b3a52a7 from memory into f11
fmsub.s f17, f8, f22, f11, dyn # perform operation
fmsub.s f17, f8, f22, f11, rdn # perform operation
fmsub.s f17, f8, f22, f11, rmm # perform operation
fmsub.s f17, f8, f22, f11, rne # perform operation
fmsub.s f17, f8, f22, f11, rtz # perform operation
fmsub.s f17, f8, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x1102c978faa53da7 # load x3 with value 0x1102c978faa53da7
sw x3, 0(x2) # store 0x1102c978faa53da7 in memory
flw f3, 0(x2) # load 0x1102c978faa53da7 from memory into f3
fmsub.s f8, f18, f20, f3, dyn # perform operation
fmsub.s f8, f18, f20, f3, rdn # perform operation
fmsub.s f8, f18, f20, f3, rmm # perform operation
fmsub.s f8, f18, f20, f3, rne # perform operation
fmsub.s f8, f18, f20, f3, rtz # perform operation
fmsub.s f8, f18, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f18, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f18, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x91feea5f7fdfb # load x3 with value 0x91feea5f7fdfb
sw x3, 0(x2) # store 0x91feea5f7fdfb in memory
flw f3, 0(x2) # load 0x91feea5f7fdfb from memory into f3
fmsub.s f21, f6, f29, f3, dyn # perform operation
fmsub.s f21, f6, f29, f3, rdn # perform operation
fmsub.s f21, f6, f29, f3, rmm # perform operation
fmsub.s f21, f6, f29, f3, rne # perform operation
fmsub.s f21, f6, f29, f3, rtz # perform operation
fmsub.s f21, f6, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f6, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xcca87f78d6ad0a36 # load x3 with value 0xcca87f78d6ad0a36
sw x3, 0(x2) # store 0xcca87f78d6ad0a36 in memory
flw f20, 0(x2) # load 0xcca87f78d6ad0a36 from memory into f20
fmsub.s f24, f23, f19, f20, dyn # perform operation
fmsub.s f24, f23, f19, f20, rdn # perform operation
fmsub.s f24, f23, f19, f20, rmm # perform operation
fmsub.s f24, f23, f19, f20, rne # perform operation
fmsub.s f24, f23, f19, f20, rtz # perform operation
fmsub.s f24, f23, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xdb463f6713d802b4 # load x3 with value 0xdb463f6713d802b4
sw x3, 0(x2) # store 0xdb463f6713d802b4 in memory
flw f7, 0(x2) # load 0xdb463f6713d802b4 from memory into f7
fmsub.s f31, f2, f15, f7, dyn # perform operation
fmsub.s f31, f2, f15, f7, rdn # perform operation
fmsub.s f31, f2, f15, f7, rmm # perform operation
fmsub.s f31, f2, f15, f7, rne # perform operation
fmsub.s f31, f2, f15, f7, rtz # perform operation
fmsub.s f31, f2, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xc1d6af8c257740c7 # load x3 with value 0xc1d6af8c257740c7
sw x3, 0(x2) # store 0xc1d6af8c257740c7 in memory
flw f2, 0(x2) # load 0xc1d6af8c257740c7 from memory into f2
fmsub.s f10, f17, f21, f2, dyn # perform operation
fmsub.s f10, f17, f21, f2, rdn # perform operation
fmsub.s f10, f17, f21, f2, rmm # perform operation
fmsub.s f10, f17, f21, f2, rne # perform operation
fmsub.s f10, f17, f21, f2, rtz # perform operation
fmsub.s f10, f17, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xdbf3c1e54a1bf12e # load x3 with value 0xdbf3c1e54a1bf12e
sw x3, 0(x2) # store 0xdbf3c1e54a1bf12e in memory
flw f3, 0(x2) # load 0xdbf3c1e54a1bf12e from memory into f3
fmsub.s f10, f24, f31, f3, dyn # perform operation
fmsub.s f10, f24, f31, f3, rdn # perform operation
fmsub.s f10, f24, f31, f3, rmm # perform operation
fmsub.s f10, f24, f31, f3, rne # perform operation
fmsub.s f10, f24, f31, f3, rtz # perform operation
fmsub.s f10, f24, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x3bbcb646c3b71068 # load x3 with value 0x3bbcb646c3b71068
sw x3, 0(x2) # store 0x3bbcb646c3b71068 in memory
flw f9, 0(x2) # load 0x3bbcb646c3b71068 from memory into f9
fmsub.s f30, f8, f11, f9, dyn # perform operation
fmsub.s f30, f8, f11, f9, rdn # perform operation
fmsub.s f30, f8, f11, f9, rmm # perform operation
fmsub.s f30, f8, f11, f9, rne # perform operation
fmsub.s f30, f8, f11, f9, rtz # perform operation
fmsub.s f30, f8, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x5e9f7722124a8ed # load x3 with value 0x5e9f7722124a8ed
sw x3, 0(x2) # store 0x5e9f7722124a8ed in memory
flw f18, 0(x2) # load 0x5e9f7722124a8ed from memory into f18
fmsub.s f21, f8, f28, f18, dyn # perform operation
fmsub.s f21, f8, f28, f18, rdn # perform operation
fmsub.s f21, f8, f28, f18, rmm # perform operation
fmsub.s f21, f8, f28, f18, rne # perform operation
fmsub.s f21, f8, f28, f18, rtz # perform operation
fmsub.s f21, f8, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xbea2d4321b090695 # load x3 with value 0xbea2d4321b090695
sw x3, 0(x2) # store 0xbea2d4321b090695 in memory
flw f31, 0(x2) # load 0xbea2d4321b090695 from memory into f31
fmsub.s f7, f2, f27, f31, dyn # perform operation
fmsub.s f7, f2, f27, f31, rdn # perform operation
fmsub.s f7, f2, f27, f31, rmm # perform operation
fmsub.s f7, f2, f27, f31, rne # perform operation
fmsub.s f7, f2, f27, f31, rtz # perform operation
fmsub.s f7, f2, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f2, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f2, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xa122408f543ce040 # load x3 with value 0xa122408f543ce040
sw x3, 0(x2) # store 0xa122408f543ce040 in memory
flw f24, 0(x2) # load 0xa122408f543ce040 from memory into f24
fmsub.s f28, f23, f31, f24, dyn # perform operation
fmsub.s f28, f23, f31, f24, rdn # perform operation
fmsub.s f28, f23, f31, f24, rmm # perform operation
fmsub.s f28, f23, f31, f24, rne # perform operation
fmsub.s f28, f23, f31, f24, rtz # perform operation
fmsub.s f28, f23, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f23, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f23, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xb52f1e74390a005d # load x3 with value 0xb52f1e74390a005d
sw x3, 0(x2) # store 0xb52f1e74390a005d in memory
flw f18, 0(x2) # load 0xb52f1e74390a005d from memory into f18
fmsub.s f11, f25, f21, f18, dyn # perform operation
fmsub.s f11, f25, f21, f18, rdn # perform operation
fmsub.s f11, f25, f21, f18, rmm # perform operation
fmsub.s f11, f25, f21, f18, rne # perform operation
fmsub.s f11, f25, f21, f18, rtz # perform operation
fmsub.s f11, f25, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x62bd69604025eca2 # load x3 with value 0x62bd69604025eca2
sw x3, 0(x2) # store 0x62bd69604025eca2 in memory
flw f28, 0(x2) # load 0x62bd69604025eca2 from memory into f28
fmsub.s f14, f27, f13, f28, dyn # perform operation
fmsub.s f14, f27, f13, f28, rdn # perform operation
fmsub.s f14, f27, f13, f28, rmm # perform operation
fmsub.s f14, f27, f13, f28, rne # perform operation
fmsub.s f14, f27, f13, f28, rtz # perform operation
fmsub.s f14, f27, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x40f20bf31a0920a0 # load x3 with value 0x40f20bf31a0920a0
sw x3, 0(x2) # store 0x40f20bf31a0920a0 in memory
flw f18, 0(x2) # load 0x40f20bf31a0920a0 from memory into f18
fmsub.s f15, f9, f20, f18, dyn # perform operation
fmsub.s f15, f9, f20, f18, rdn # perform operation
fmsub.s f15, f9, f20, f18, rmm # perform operation
fmsub.s f15, f9, f20, f18, rne # perform operation
fmsub.s f15, f9, f20, f18, rtz # perform operation
fmsub.s f15, f9, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x7ffb419280d36480 # load x3 with value 0x7ffb419280d36480
sw x3, 0(x2) # store 0x7ffb419280d36480 in memory
flw f9, 0(x2) # load 0x7ffb419280d36480 from memory into f9
fmsub.s f1, f14, f23, f9, dyn # perform operation
fmsub.s f1, f14, f23, f9, rdn # perform operation
fmsub.s f1, f14, f23, f9, rmm # perform operation
fmsub.s f1, f14, f23, f9, rne # perform operation
fmsub.s f1, f14, f23, f9, rtz # perform operation
fmsub.s f1, f14, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f14, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f14, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x5b1650fe6c04e16f # load x3 with value 0x5b1650fe6c04e16f
sw x3, 0(x2) # store 0x5b1650fe6c04e16f in memory
flw f28, 0(x2) # load 0x5b1650fe6c04e16f from memory into f28
fmsub.s f12, f13, f16, f28, dyn # perform operation
fmsub.s f12, f13, f16, f28, rdn # perform operation
fmsub.s f12, f13, f16, f28, rmm # perform operation
fmsub.s f12, f13, f16, f28, rne # perform operation
fmsub.s f12, f13, f16, f28, rtz # perform operation
fmsub.s f12, f13, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f13, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f13, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f13, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f13, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f13, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x70eff81ebd4bb651 # load x3 with value 0x70eff81ebd4bb651
sw x3, 0(x2) # store 0x70eff81ebd4bb651 in memory
flw f19, 0(x2) # load 0x70eff81ebd4bb651 from memory into f19
fmsub.s f17, f26, f3, f19, dyn # perform operation
fmsub.s f17, f26, f3, f19, rdn # perform operation
fmsub.s f17, f26, f3, f19, rmm # perform operation
fmsub.s f17, f26, f3, f19, rne # perform operation
fmsub.s f17, f26, f3, f19, rtz # perform operation
fmsub.s f17, f26, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x60ca721bd92c3755 # load x3 with value 0x60ca721bd92c3755
sw x3, 0(x2) # store 0x60ca721bd92c3755 in memory
flw f22, 0(x2) # load 0x60ca721bd92c3755 from memory into f22
fmsub.s f5, f27, f23, f22, dyn # perform operation
fmsub.s f5, f27, f23, f22, rdn # perform operation
fmsub.s f5, f27, f23, f22, rmm # perform operation
fmsub.s f5, f27, f23, f22, rne # perform operation
fmsub.s f5, f27, f23, f22, rtz # perform operation
fmsub.s f5, f27, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0xb0ff62b4d3ff79dc # load x3 with value 0xb0ff62b4d3ff79dc
sw x3, 0(x2) # store 0xb0ff62b4d3ff79dc in memory
flw f1, 0(x2) # load 0xb0ff62b4d3ff79dc from memory into f1
fmsub.s f31, f19, f22, f1, dyn # perform operation
fmsub.s f31, f19, f22, f1, rdn # perform operation
fmsub.s f31, f19, f22, f1, rmm # perform operation
fmsub.s f31, f19, f22, f1, rne # perform operation
fmsub.s f31, f19, f22, f1, rtz # perform operation
fmsub.s f31, f19, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f19, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xde60be56c9b48aaf # load x3 with value 0xde60be56c9b48aaf
sw x3, 0(x2) # store 0xde60be56c9b48aaf in memory
flw f22, 0(x2) # load 0xde60be56c9b48aaf from memory into f22
fmsub.s f28, f8, f19, f22, dyn # perform operation
fmsub.s f28, f8, f19, f22, rdn # perform operation
fmsub.s f28, f8, f19, f22, rmm # perform operation
fmsub.s f28, f8, f19, f22, rne # perform operation
fmsub.s f28, f8, f19, f22, rtz # perform operation
fmsub.s f28, f8, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x2924466b19efc818 # load x3 with value 0x2924466b19efc818
sw x3, 0(x2) # store 0x2924466b19efc818 in memory
flw f31, 0(x2) # load 0x2924466b19efc818 from memory into f31
fmsub.s f22, f8, f10, f31, dyn # perform operation
fmsub.s f22, f8, f10, f31, rdn # perform operation
fmsub.s f22, f8, f10, f31, rmm # perform operation
fmsub.s f22, f8, f10, f31, rne # perform operation
fmsub.s f22, f8, f10, f31, rtz # perform operation
fmsub.s f22, f8, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x734aa85fe2a09ef2 # load x3 with value 0x734aa85fe2a09ef2
sw x3, 0(x2) # store 0x734aa85fe2a09ef2 in memory
flw f5, 0(x2) # load 0x734aa85fe2a09ef2 from memory into f5
fmsub.s f9, f30, f11, f5, dyn # perform operation
fmsub.s f9, f30, f11, f5, rdn # perform operation
fmsub.s f9, f30, f11, f5, rmm # perform operation
fmsub.s f9, f30, f11, f5, rne # perform operation
fmsub.s f9, f30, f11, f5, rtz # perform operation
fmsub.s f9, f30, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f30, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f30, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x409c55abae881a3b # load x3 with value 0x409c55abae881a3b
sw x3, 0(x2) # store 0x409c55abae881a3b in memory
flw f12, 0(x2) # load 0x409c55abae881a3b from memory into f12
fmsub.s f19, f13, f18, f12, dyn # perform operation
fmsub.s f19, f13, f18, f12, rdn # perform operation
fmsub.s f19, f13, f18, f12, rmm # perform operation
fmsub.s f19, f13, f18, f12, rne # perform operation
fmsub.s f19, f13, f18, f12, rtz # perform operation
fmsub.s f19, f13, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xea92af24015b9e37 # load x3 with value 0xea92af24015b9e37
sw x3, 0(x2) # store 0xea92af24015b9e37 in memory
flw f5, 0(x2) # load 0xea92af24015b9e37 from memory into f5
fmsub.s f16, f6, f11, f5, dyn # perform operation
fmsub.s f16, f6, f11, f5, rdn # perform operation
fmsub.s f16, f6, f11, f5, rmm # perform operation
fmsub.s f16, f6, f11, f5, rne # perform operation
fmsub.s f16, f6, f11, f5, rtz # perform operation
fmsub.s f16, f6, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f6, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f6, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f6, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f6, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f6, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x6aea1027055a026b # load x3 with value 0x6aea1027055a026b
sw x3, 0(x2) # store 0x6aea1027055a026b in memory
flw f7, 0(x2) # load 0x6aea1027055a026b from memory into f7
fmsub.s f19, f18, f16, f7, dyn # perform operation
fmsub.s f19, f18, f16, f7, rdn # perform operation
fmsub.s f19, f18, f16, f7, rmm # perform operation
fmsub.s f19, f18, f16, f7, rne # perform operation
fmsub.s f19, f18, f16, f7, rtz # perform operation
fmsub.s f19, f18, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f18, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x7adcb6949e78af54 # load x3 with value 0x7adcb6949e78af54
sw x3, 0(x2) # store 0x7adcb6949e78af54 in memory
flw f12, 0(x2) # load 0x7adcb6949e78af54 from memory into f12
fmsub.s f22, f18, f24, f12, dyn # perform operation
fmsub.s f22, f18, f24, f12, rdn # perform operation
fmsub.s f22, f18, f24, f12, rmm # perform operation
fmsub.s f22, f18, f24, f12, rne # perform operation
fmsub.s f22, f18, f24, f12, rtz # perform operation
fmsub.s f22, f18, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x8985f75ebaeac3eb # load x3 with value 0x8985f75ebaeac3eb
sw x3, 0(x2) # store 0x8985f75ebaeac3eb in memory
flw f17, 0(x2) # load 0x8985f75ebaeac3eb from memory into f17
fmsub.s f22, f31, f18, f17, dyn # perform operation
fmsub.s f22, f31, f18, f17, rdn # perform operation
fmsub.s f22, f31, f18, f17, rmm # perform operation
fmsub.s f22, f31, f18, f17, rne # perform operation
fmsub.s f22, f31, f18, f17, rtz # perform operation
fmsub.s f22, f31, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0xaf013b3f18082f5 # load x3 with value 0xaf013b3f18082f5
sw x3, 0(x2) # store 0xaf013b3f18082f5 in memory
flw f10, 0(x2) # load 0xaf013b3f18082f5 from memory into f10
fmsub.s f12, f14, f2, f10, dyn # perform operation
fmsub.s f12, f14, f2, f10, rdn # perform operation
fmsub.s f12, f14, f2, f10, rmm # perform operation
fmsub.s f12, f14, f2, f10, rne # perform operation
fmsub.s f12, f14, f2, f10, rtz # perform operation
fmsub.s f12, f14, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xc50fe9829f29c3ff # load x3 with value 0xc50fe9829f29c3ff
sw x3, 0(x2) # store 0xc50fe9829f29c3ff in memory
flw f8, 0(x2) # load 0xc50fe9829f29c3ff from memory into f8
fmsub.s f1, f19, f31, f8, dyn # perform operation
fmsub.s f1, f19, f31, f8, rdn # perform operation
fmsub.s f1, f19, f31, f8, rmm # perform operation
fmsub.s f1, f19, f31, f8, rne # perform operation
fmsub.s f1, f19, f31, f8, rtz # perform operation
fmsub.s f1, f19, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x639bffe7c8e15945 # load x3 with value 0x639bffe7c8e15945
sw x3, 0(x2) # store 0x639bffe7c8e15945 in memory
flw f26, 0(x2) # load 0x639bffe7c8e15945 from memory into f26
fmsub.s f18, f9, f10, f26, dyn # perform operation
fmsub.s f18, f9, f10, f26, rdn # perform operation
fmsub.s f18, f9, f10, f26, rmm # perform operation
fmsub.s f18, f9, f10, f26, rne # perform operation
fmsub.s f18, f9, f10, f26, rtz # perform operation
fmsub.s f18, f9, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xb898bc23d2ae44ea # load x3 with value 0xb898bc23d2ae44ea
sw x3, 0(x2) # store 0xb898bc23d2ae44ea in memory
flw f23, 0(x2) # load 0xb898bc23d2ae44ea from memory into f23
fmsub.s f26, f15, f25, f23, dyn # perform operation
fmsub.s f26, f15, f25, f23, rdn # perform operation
fmsub.s f26, f15, f25, f23, rmm # perform operation
fmsub.s f26, f15, f25, f23, rne # perform operation
fmsub.s f26, f15, f25, f23, rtz # perform operation
fmsub.s f26, f15, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x2a161d67cc037608 # load x3 with value 0x2a161d67cc037608
sw x3, 0(x2) # store 0x2a161d67cc037608 in memory
flw f18, 0(x2) # load 0x2a161d67cc037608 from memory into f18
fmsub.s f28, f10, f8, f18, dyn # perform operation
fmsub.s f28, f10, f8, f18, rdn # perform operation
fmsub.s f28, f10, f8, f18, rmm # perform operation
fmsub.s f28, f10, f8, f18, rne # perform operation
fmsub.s f28, f10, f8, f18, rtz # perform operation
fmsub.s f28, f10, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x99778b7df6eff671 # load x3 with value 0x99778b7df6eff671
sw x3, 0(x2) # store 0x99778b7df6eff671 in memory
flw f7, 0(x2) # load 0x99778b7df6eff671 from memory into f7
fmsub.s f15, f30, f13, f7, dyn # perform operation
fmsub.s f15, f30, f13, f7, rdn # perform operation
fmsub.s f15, f30, f13, f7, rmm # perform operation
fmsub.s f15, f30, f13, f7, rne # perform operation
fmsub.s f15, f30, f13, f7, rtz # perform operation
fmsub.s f15, f30, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f30, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x8825882bde0ce139 # load x3 with value 0x8825882bde0ce139
sw x3, 0(x2) # store 0x8825882bde0ce139 in memory
flw f31, 0(x2) # load 0x8825882bde0ce139 from memory into f31
fmsub.s f29, f28, f22, f31, dyn # perform operation
fmsub.s f29, f28, f22, f31, rdn # perform operation
fmsub.s f29, f28, f22, f31, rmm # perform operation
fmsub.s f29, f28, f22, f31, rne # perform operation
fmsub.s f29, f28, f22, f31, rtz # perform operation
fmsub.s f29, f28, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xfba2aa2d4502be27 # load x3 with value 0xfba2aa2d4502be27
sw x3, 0(x2) # store 0xfba2aa2d4502be27 in memory
flw f8, 0(x2) # load 0xfba2aa2d4502be27 from memory into f8
fmsub.s f30, f16, f19, f8, dyn # perform operation
fmsub.s f30, f16, f19, f8, rdn # perform operation
fmsub.s f30, f16, f19, f8, rmm # perform operation
fmsub.s f30, f16, f19, f8, rne # perform operation
fmsub.s f30, f16, f19, f8, rtz # perform operation
fmsub.s f30, f16, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x26dfdafe57917bc3 # load x3 with value 0x26dfdafe57917bc3
sw x3, 0(x2) # store 0x26dfdafe57917bc3 in memory
flw f31, 0(x2) # load 0x26dfdafe57917bc3 from memory into f31
fmsub.s f2, f28, f1, f31, dyn # perform operation
fmsub.s f2, f28, f1, f31, rdn # perform operation
fmsub.s f2, f28, f1, f31, rmm # perform operation
fmsub.s f2, f28, f1, f31, rne # perform operation
fmsub.s f2, f28, f1, f31, rtz # perform operation
fmsub.s f2, f28, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xdd2c263d8e6a42b9 # load x3 with value 0xdd2c263d8e6a42b9
sw x3, 0(x2) # store 0xdd2c263d8e6a42b9 in memory
flw f15, 0(x2) # load 0xdd2c263d8e6a42b9 from memory into f15
fmsub.s f24, f6, f2, f15, dyn # perform operation
fmsub.s f24, f6, f2, f15, rdn # perform operation
fmsub.s f24, f6, f2, f15, rmm # perform operation
fmsub.s f24, f6, f2, f15, rne # perform operation
fmsub.s f24, f6, f2, f15, rtz # perform operation
fmsub.s f24, f6, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x1fd349b9d3892c68 # load x3 with value 0x1fd349b9d3892c68
sw x3, 0(x2) # store 0x1fd349b9d3892c68 in memory
flw f17, 0(x2) # load 0x1fd349b9d3892c68 from memory into f17
fmsub.s f31, f20, f10, f17, dyn # perform operation
fmsub.s f31, f20, f10, f17, rdn # perform operation
fmsub.s f31, f20, f10, f17, rmm # perform operation
fmsub.s f31, f20, f10, f17, rne # perform operation
fmsub.s f31, f20, f10, f17, rtz # perform operation
fmsub.s f31, f20, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xebfdda7cf03dfa7d # load x3 with value 0xebfdda7cf03dfa7d
sw x3, 0(x2) # store 0xebfdda7cf03dfa7d in memory
flw f25, 0(x2) # load 0xebfdda7cf03dfa7d from memory into f25
fmsub.s f3, f20, f6, f25, dyn # perform operation
fmsub.s f3, f20, f6, f25, rdn # perform operation
fmsub.s f3, f20, f6, f25, rmm # perform operation
fmsub.s f3, f20, f6, f25, rne # perform operation
fmsub.s f3, f20, f6, f25, rtz # perform operation
fmsub.s f3, f20, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f20, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f20, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xe9c27e2f612435bc # load x3 with value 0xe9c27e2f612435bc
sw x3, 0(x2) # store 0xe9c27e2f612435bc in memory
flw f7, 0(x2) # load 0xe9c27e2f612435bc from memory into f7
fmsub.s f18, f3, f13, f7, dyn # perform operation
fmsub.s f18, f3, f13, f7, rdn # perform operation
fmsub.s f18, f3, f13, f7, rmm # perform operation
fmsub.s f18, f3, f13, f7, rne # perform operation
fmsub.s f18, f3, f13, f7, rtz # perform operation
fmsub.s f18, f3, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f3, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f3, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0xafca02202f7a85ab # load x3 with value 0xafca02202f7a85ab
sw x3, 0(x2) # store 0xafca02202f7a85ab in memory
flw f29, 0(x2) # load 0xafca02202f7a85ab from memory into f29
fmsub.s f6, f10, f2, f29, dyn # perform operation
fmsub.s f6, f10, f2, f29, rdn # perform operation
fmsub.s f6, f10, f2, f29, rmm # perform operation
fmsub.s f6, f10, f2, f29, rne # perform operation
fmsub.s f6, f10, f2, f29, rtz # perform operation
fmsub.s f6, f10, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xbc615cffff8c3936 # load x3 with value 0xbc615cffff8c3936
sw x3, 0(x2) # store 0xbc615cffff8c3936 in memory
flw f10, 0(x2) # load 0xbc615cffff8c3936 from memory into f10
fmsub.s f30, f7, f25, f10, dyn # perform operation
fmsub.s f30, f7, f25, f10, rdn # perform operation
fmsub.s f30, f7, f25, f10, rmm # perform operation
fmsub.s f30, f7, f25, f10, rne # perform operation
fmsub.s f30, f7, f25, f10, rtz # perform operation
fmsub.s f30, f7, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x37653a644b5a722b # load x3 with value 0x37653a644b5a722b
sw x3, 0(x2) # store 0x37653a644b5a722b in memory
flw f10, 0(x2) # load 0x37653a644b5a722b from memory into f10
fmsub.s f12, f2, f25, f10, dyn # perform operation
fmsub.s f12, f2, f25, f10, rdn # perform operation
fmsub.s f12, f2, f25, f10, rmm # perform operation
fmsub.s f12, f2, f25, f10, rne # perform operation
fmsub.s f12, f2, f25, f10, rtz # perform operation
fmsub.s f12, f2, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x74bfa1f610fb925f # load x3 with value 0x74bfa1f610fb925f
sw x3, 0(x2) # store 0x74bfa1f610fb925f in memory
flw f28, 0(x2) # load 0x74bfa1f610fb925f from memory into f28
fmsub.s f11, f22, f14, f28, dyn # perform operation
fmsub.s f11, f22, f14, f28, rdn # perform operation
fmsub.s f11, f22, f14, f28, rmm # perform operation
fmsub.s f11, f22, f14, f28, rne # perform operation
fmsub.s f11, f22, f14, f28, rtz # perform operation
fmsub.s f11, f22, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xbfcf7c76fe670c0b # load x3 with value 0xbfcf7c76fe670c0b
sw x3, 0(x2) # store 0xbfcf7c76fe670c0b in memory
flw f22, 0(x2) # load 0xbfcf7c76fe670c0b from memory into f22
fmsub.s f7, f10, f29, f22, dyn # perform operation
fmsub.s f7, f10, f29, f22, rdn # perform operation
fmsub.s f7, f10, f29, f22, rmm # perform operation
fmsub.s f7, f10, f29, f22, rne # perform operation
fmsub.s f7, f10, f29, f22, rtz # perform operation
fmsub.s f7, f10, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x9a203e72c084ba9d # load x3 with value 0x9a203e72c084ba9d
sw x3, 0(x2) # store 0x9a203e72c084ba9d in memory
flw f2, 0(x2) # load 0x9a203e72c084ba9d from memory into f2
fmsub.s f22, f28, f5, f2, dyn # perform operation
fmsub.s f22, f28, f5, f2, rdn # perform operation
fmsub.s f22, f28, f5, f2, rmm # perform operation
fmsub.s f22, f28, f5, f2, rne # perform operation
fmsub.s f22, f28, f5, f2, rtz # perform operation
fmsub.s f22, f28, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f28, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x3c8c7ac23aabcb3d # load x3 with value 0x3c8c7ac23aabcb3d
sw x3, 0(x2) # store 0x3c8c7ac23aabcb3d in memory
flw f26, 0(x2) # load 0x3c8c7ac23aabcb3d from memory into f26
fmsub.s f22, f16, f17, f26, dyn # perform operation
fmsub.s f22, f16, f17, f26, rdn # perform operation
fmsub.s f22, f16, f17, f26, rmm # perform operation
fmsub.s f22, f16, f17, f26, rne # perform operation
fmsub.s f22, f16, f17, f26, rtz # perform operation
fmsub.s f22, f16, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f17, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xd1c75eb930c1730e # load x3 with value 0xd1c75eb930c1730e
sw x3, 0(x2) # store 0xd1c75eb930c1730e in memory
flw f15, 0(x2) # load 0xd1c75eb930c1730e from memory into f15
fmsub.s f3, f29, f22, f15, dyn # perform operation
fmsub.s f3, f29, f22, f15, rdn # perform operation
fmsub.s f3, f29, f22, f15, rmm # perform operation
fmsub.s f3, f29, f22, f15, rne # perform operation
fmsub.s f3, f29, f22, f15, rtz # perform operation
fmsub.s f3, f29, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xbcad51b4a3baa051 # load x3 with value 0xbcad51b4a3baa051
sw x3, 0(x2) # store 0xbcad51b4a3baa051 in memory
flw f1, 0(x2) # load 0xbcad51b4a3baa051 from memory into f1
fmsub.s f2, f17, f30, f1, dyn # perform operation
fmsub.s f2, f17, f30, f1, rdn # perform operation
fmsub.s f2, f17, f30, f1, rmm # perform operation
fmsub.s f2, f17, f30, f1, rne # perform operation
fmsub.s f2, f17, f30, f1, rtz # perform operation
fmsub.s f2, f17, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xcdfe52d71abe390d # load x3 with value 0xcdfe52d71abe390d
sw x3, 0(x2) # store 0xcdfe52d71abe390d in memory
flw f14, 0(x2) # load 0xcdfe52d71abe390d from memory into f14
fmsub.s f22, f21, f17, f14, dyn # perform operation
fmsub.s f22, f21, f17, f14, rdn # perform operation
fmsub.s f22, f21, f17, f14, rmm # perform operation
fmsub.s f22, f21, f17, f14, rne # perform operation
fmsub.s f22, f21, f17, f14, rtz # perform operation
fmsub.s f22, f21, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f21, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f21, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0xaaa6366f9470d454 # load x3 with value 0xaaa6366f9470d454
sw x3, 0(x2) # store 0xaaa6366f9470d454 in memory
flw f1, 0(x2) # load 0xaaa6366f9470d454 from memory into f1
fmsub.s f8, f27, f6, f1, dyn # perform operation
fmsub.s f8, f27, f6, f1, rdn # perform operation
fmsub.s f8, f27, f6, f1, rmm # perform operation
fmsub.s f8, f27, f6, f1, rne # perform operation
fmsub.s f8, f27, f6, f1, rtz # perform operation
fmsub.s f8, f27, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x115d674919665488 # load x3 with value 0x115d674919665488
sw x3, 0(x2) # store 0x115d674919665488 in memory
flw f27, 0(x2) # load 0x115d674919665488 from memory into f27
fmsub.s f30, f21, f18, f27, dyn # perform operation
fmsub.s f30, f21, f18, f27, rdn # perform operation
fmsub.s f30, f21, f18, f27, rmm # perform operation
fmsub.s f30, f21, f18, f27, rne # perform operation
fmsub.s f30, f21, f18, f27, rtz # perform operation
fmsub.s f30, f21, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xd9894bb21d6325c4 # load x3 with value 0xd9894bb21d6325c4
sw x3, 0(x2) # store 0xd9894bb21d6325c4 in memory
flw f18, 0(x2) # load 0xd9894bb21d6325c4 from memory into f18
fmsub.s f13, f31, f3, f18, dyn # perform operation
fmsub.s f13, f31, f3, f18, rdn # perform operation
fmsub.s f13, f31, f3, f18, rmm # perform operation
fmsub.s f13, f31, f3, f18, rne # perform operation
fmsub.s f13, f31, f3, f18, rtz # perform operation
fmsub.s f13, f31, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x6b091b195ccf3ff8 # load x3 with value 0x6b091b195ccf3ff8
sw x3, 0(x2) # store 0x6b091b195ccf3ff8 in memory
flw f26, 0(x2) # load 0x6b091b195ccf3ff8 from memory into f26
fmsub.s f23, f20, f18, f26, dyn # perform operation
fmsub.s f23, f20, f18, f26, rdn # perform operation
fmsub.s f23, f20, f18, f26, rmm # perform operation
fmsub.s f23, f20, f18, f26, rne # perform operation
fmsub.s f23, f20, f18, f26, rtz # perform operation
fmsub.s f23, f20, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f20, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f20, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x6e54ba6d61801f1a # load x3 with value 0x6e54ba6d61801f1a
sw x3, 0(x2) # store 0x6e54ba6d61801f1a in memory
flw f12, 0(x2) # load 0x6e54ba6d61801f1a from memory into f12
fmsub.s f26, f11, f15, f12, dyn # perform operation
fmsub.s f26, f11, f15, f12, rdn # perform operation
fmsub.s f26, f11, f15, f12, rmm # perform operation
fmsub.s f26, f11, f15, f12, rne # perform operation
fmsub.s f26, f11, f15, f12, rtz # perform operation
fmsub.s f26, f11, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xc4abcdd7406b7615 # load x3 with value 0xc4abcdd7406b7615
sw x3, 0(x2) # store 0xc4abcdd7406b7615 in memory
flw f8, 0(x2) # load 0xc4abcdd7406b7615 from memory into f8
fmsub.s f21, f11, f20, f8, dyn # perform operation
fmsub.s f21, f11, f20, f8, rdn # perform operation
fmsub.s f21, f11, f20, f8, rmm # perform operation
fmsub.s f21, f11, f20, f8, rne # perform operation
fmsub.s f21, f11, f20, f8, rtz # perform operation
fmsub.s f21, f11, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f11, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f11, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xcfb1242d083e2cf8 # load x3 with value 0xcfb1242d083e2cf8
sw x3, 0(x2) # store 0xcfb1242d083e2cf8 in memory
flw f3, 0(x2) # load 0xcfb1242d083e2cf8 from memory into f3
fmsub.s f7, f19, f2, f3, dyn # perform operation
fmsub.s f7, f19, f2, f3, rdn # perform operation
fmsub.s f7, f19, f2, f3, rmm # perform operation
fmsub.s f7, f19, f2, f3, rne # perform operation
fmsub.s f7, f19, f2, f3, rtz # perform operation
fmsub.s f7, f19, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f19, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f19, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f19, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f19, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f19, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x525e50e325354a4d # load x3 with value 0x525e50e325354a4d
sw x3, 0(x2) # store 0x525e50e325354a4d in memory
flw f3, 0(x2) # load 0x525e50e325354a4d from memory into f3
fmsub.s f2, f15, f1, f3, dyn # perform operation
fmsub.s f2, f15, f1, f3, rdn # perform operation
fmsub.s f2, f15, f1, f3, rmm # perform operation
fmsub.s f2, f15, f1, f3, rne # perform operation
fmsub.s f2, f15, f1, f3, rtz # perform operation
fmsub.s f2, f15, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x922900acffa21182 # load x3 with value 0x922900acffa21182
sw x3, 0(x2) # store 0x922900acffa21182 in memory
flw f18, 0(x2) # load 0x922900acffa21182 from memory into f18
fmsub.s f3, f10, f12, f18, dyn # perform operation
fmsub.s f3, f10, f12, f18, rdn # perform operation
fmsub.s f3, f10, f12, f18, rmm # perform operation
fmsub.s f3, f10, f12, f18, rne # perform operation
fmsub.s f3, f10, f12, f18, rtz # perform operation
fmsub.s f3, f10, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x89e23589c72390af # load x3 with value 0x89e23589c72390af
sw x3, 0(x2) # store 0x89e23589c72390af in memory
flw f25, 0(x2) # load 0x89e23589c72390af from memory into f25
fmsub.s f9, f16, f1, f25, dyn # perform operation
fmsub.s f9, f16, f1, f25, rdn # perform operation
fmsub.s f9, f16, f1, f25, rmm # perform operation
fmsub.s f9, f16, f1, f25, rne # perform operation
fmsub.s f9, f16, f1, f25, rtz # perform operation
fmsub.s f9, f16, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xc3abd254699e9f5c # load x3 with value 0xc3abd254699e9f5c
sw x3, 0(x2) # store 0xc3abd254699e9f5c in memory
flw f5, 0(x2) # load 0xc3abd254699e9f5c from memory into f5
fmsub.s f29, f2, f7, f5, dyn # perform operation
fmsub.s f29, f2, f7, f5, rdn # perform operation
fmsub.s f29, f2, f7, f5, rmm # perform operation
fmsub.s f29, f2, f7, f5, rne # perform operation
fmsub.s f29, f2, f7, f5, rtz # perform operation
fmsub.s f29, f2, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xba2dd0c0ca58b6e3 # load x3 with value 0xba2dd0c0ca58b6e3
sw x3, 0(x2) # store 0xba2dd0c0ca58b6e3 in memory
flw f24, 0(x2) # load 0xba2dd0c0ca58b6e3 from memory into f24
fmsub.s f12, f2, f10, f24, dyn # perform operation
fmsub.s f12, f2, f10, f24, rdn # perform operation
fmsub.s f12, f2, f10, f24, rmm # perform operation
fmsub.s f12, f2, f10, f24, rne # perform operation
fmsub.s f12, f2, f10, f24, rtz # perform operation
fmsub.s f12, f2, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xfd927f9edfa208f5 # load x3 with value 0xfd927f9edfa208f5
sw x3, 0(x2) # store 0xfd927f9edfa208f5 in memory
flw f26, 0(x2) # load 0xfd927f9edfa208f5 from memory into f26
fmsub.s f30, f17, f3, f26, dyn # perform operation
fmsub.s f30, f17, f3, f26, rdn # perform operation
fmsub.s f30, f17, f3, f26, rmm # perform operation
fmsub.s f30, f17, f3, f26, rne # perform operation
fmsub.s f30, f17, f3, f26, rtz # perform operation
fmsub.s f30, f17, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x3dd33ef4866aaacd # load x3 with value 0x3dd33ef4866aaacd
sw x3, 0(x2) # store 0x3dd33ef4866aaacd in memory
flw f20, 0(x2) # load 0x3dd33ef4866aaacd from memory into f20
fmsub.s f31, f26, f27, f20, dyn # perform operation
fmsub.s f31, f26, f27, f20, rdn # perform operation
fmsub.s f31, f26, f27, f20, rmm # perform operation
fmsub.s f31, f26, f27, f20, rne # perform operation
fmsub.s f31, f26, f27, f20, rtz # perform operation
fmsub.s f31, f26, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x8053e247d8b7e683 # load x3 with value 0x8053e247d8b7e683
sw x3, 0(x2) # store 0x8053e247d8b7e683 in memory
flw f27, 0(x2) # load 0x8053e247d8b7e683 from memory into f27
fmsub.s f29, f25, f24, f27, dyn # perform operation
fmsub.s f29, f25, f24, f27, rdn # perform operation
fmsub.s f29, f25, f24, f27, rmm # perform operation
fmsub.s f29, f25, f24, f27, rne # perform operation
fmsub.s f29, f25, f24, f27, rtz # perform operation
fmsub.s f29, f25, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f25, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f25, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f25, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f25, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f25, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xafb128cd3a0be792 # load x3 with value 0xafb128cd3a0be792
sw x3, 0(x2) # store 0xafb128cd3a0be792 in memory
flw f8, 0(x2) # load 0xafb128cd3a0be792 from memory into f8
fmsub.s f2, f28, f26, f8, dyn # perform operation
fmsub.s f2, f28, f26, f8, rdn # perform operation
fmsub.s f2, f28, f26, f8, rmm # perform operation
fmsub.s f2, f28, f26, f8, rne # perform operation
fmsub.s f2, f28, f26, f8, rtz # perform operation
fmsub.s f2, f28, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x8eb4c634864ada0 # load x3 with value 0x8eb4c634864ada0
sw x3, 0(x2) # store 0x8eb4c634864ada0 in memory
flw f30, 0(x2) # load 0x8eb4c634864ada0 from memory into f30
fmsub.s f16, f28, f15, f30, dyn # perform operation
fmsub.s f16, f28, f15, f30, rdn # perform operation
fmsub.s f16, f28, f15, f30, rmm # perform operation
fmsub.s f16, f28, f15, f30, rne # perform operation
fmsub.s f16, f28, f15, f30, rtz # perform operation
fmsub.s f16, f28, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xa89675ef20d7ce89 # load x3 with value 0xa89675ef20d7ce89
sw x3, 0(x2) # store 0xa89675ef20d7ce89 in memory
flw f1, 0(x2) # load 0xa89675ef20d7ce89 from memory into f1
fmsub.s f25, f15, f16, f1, dyn # perform operation
fmsub.s f25, f15, f16, f1, rdn # perform operation
fmsub.s f25, f15, f16, f1, rmm # perform operation
fmsub.s f25, f15, f16, f1, rne # perform operation
fmsub.s f25, f15, f16, f1, rtz # perform operation
fmsub.s f25, f15, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f15, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f15, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f15, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f15, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f15, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0xdd9884a228fae172 # load x3 with value 0xdd9884a228fae172
sw x3, 0(x2) # store 0xdd9884a228fae172 in memory
flw f14, 0(x2) # load 0xdd9884a228fae172 from memory into f14
fmsub.s f7, f23, f24, f14, dyn # perform operation
fmsub.s f7, f23, f24, f14, rdn # perform operation
fmsub.s f7, f23, f24, f14, rmm # perform operation
fmsub.s f7, f23, f24, f14, rne # perform operation
fmsub.s f7, f23, f24, f14, rtz # perform operation
fmsub.s f7, f23, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f23, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f23, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f23, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f23, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f23, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x77d9d0401b702849 # load x3 with value 0x77d9d0401b702849
sw x3, 0(x2) # store 0x77d9d0401b702849 in memory
flw f11, 0(x2) # load 0x77d9d0401b702849 from memory into f11
fmsub.s f6, f31, f26, f11, dyn # perform operation
fmsub.s f6, f31, f26, f11, rdn # perform operation
fmsub.s f6, f31, f26, f11, rmm # perform operation
fmsub.s f6, f31, f26, f11, rne # perform operation
fmsub.s f6, f31, f26, f11, rtz # perform operation
fmsub.s f6, f31, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x34389fd67b67f457 # load x3 with value 0x34389fd67b67f457
sw x3, 0(x2) # store 0x34389fd67b67f457 in memory
flw f11, 0(x2) # load 0x34389fd67b67f457 from memory into f11
fmsub.s f21, f12, f5, f11, dyn # perform operation
fmsub.s f21, f12, f5, f11, rdn # perform operation
fmsub.s f21, f12, f5, f11, rmm # perform operation
fmsub.s f21, f12, f5, f11, rne # perform operation
fmsub.s f21, f12, f5, f11, rtz # perform operation
fmsub.s f21, f12, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x9f003cb05d726787 # load x3 with value 0x9f003cb05d726787
sw x3, 0(x2) # store 0x9f003cb05d726787 in memory
flw f7, 0(x2) # load 0x9f003cb05d726787 from memory into f7
fmsub.s f2, f13, f8, f7, dyn # perform operation
fmsub.s f2, f13, f8, f7, rdn # perform operation
fmsub.s f2, f13, f8, f7, rmm # perform operation
fmsub.s f2, f13, f8, f7, rne # perform operation
fmsub.s f2, f13, f8, f7, rtz # perform operation
fmsub.s f2, f13, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f13, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x28d693c0ea2bff9b # load x3 with value 0x28d693c0ea2bff9b
sw x3, 0(x2) # store 0x28d693c0ea2bff9b in memory
flw f8, 0(x2) # load 0x28d693c0ea2bff9b from memory into f8
fmsub.s f22, f30, f12, f8, dyn # perform operation
fmsub.s f22, f30, f12, f8, rdn # perform operation
fmsub.s f22, f30, f12, f8, rmm # perform operation
fmsub.s f22, f30, f12, f8, rne # perform operation
fmsub.s f22, f30, f12, f8, rtz # perform operation
fmsub.s f22, f30, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xd46230aca2123bc2 # load x3 with value 0xd46230aca2123bc2
sw x3, 0(x2) # store 0xd46230aca2123bc2 in memory
flw f9, 0(x2) # load 0xd46230aca2123bc2 from memory into f9
fmsub.s f1, f7, f29, f9, dyn # perform operation
fmsub.s f1, f7, f29, f9, rdn # perform operation
fmsub.s f1, f7, f29, f9, rmm # perform operation
fmsub.s f1, f7, f29, f9, rne # perform operation
fmsub.s f1, f7, f29, f9, rtz # perform operation
fmsub.s f1, f7, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f7, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x449a0c0cce88e4f5 # load x3 with value 0x449a0c0cce88e4f5
sw x3, 0(x2) # store 0x449a0c0cce88e4f5 in memory
flw f7, 0(x2) # load 0x449a0c0cce88e4f5 from memory into f7
fmsub.s f9, f6, f11, f7, dyn # perform operation
fmsub.s f9, f6, f11, f7, rdn # perform operation
fmsub.s f9, f6, f11, f7, rmm # perform operation
fmsub.s f9, f6, f11, f7, rne # perform operation
fmsub.s f9, f6, f11, f7, rtz # perform operation
fmsub.s f9, f6, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xdb9d134dcaaa1263 # load x3 with value 0xdb9d134dcaaa1263
sw x3, 0(x2) # store 0xdb9d134dcaaa1263 in memory
flw f13, 0(x2) # load 0xdb9d134dcaaa1263 from memory into f13
fmsub.s f5, f26, f11, f13, dyn # perform operation
fmsub.s f5, f26, f11, f13, rdn # perform operation
fmsub.s f5, f26, f11, f13, rmm # perform operation
fmsub.s f5, f26, f11, f13, rne # perform operation
fmsub.s f5, f26, f11, f13, rtz # perform operation
fmsub.s f5, f26, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x5063e02f455addd2 # load x3 with value 0x5063e02f455addd2
sw x3, 0(x2) # store 0x5063e02f455addd2 in memory
flw f3, 0(x2) # load 0x5063e02f455addd2 from memory into f3
fmsub.s f12, f8, f31, f3, dyn # perform operation
fmsub.s f12, f8, f31, f3, rdn # perform operation
fmsub.s f12, f8, f31, f3, rmm # perform operation
fmsub.s f12, f8, f31, f3, rne # perform operation
fmsub.s f12, f8, f31, f3, rtz # perform operation
fmsub.s f12, f8, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f31, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xf174c7f13b5b4df5 # load x3 with value 0xf174c7f13b5b4df5
sw x3, 0(x2) # store 0xf174c7f13b5b4df5 in memory
flw f24, 0(x2) # load 0xf174c7f13b5b4df5 from memory into f24
fmsub.s f8, f22, f13, f24, dyn # perform operation
fmsub.s f8, f22, f13, f24, rdn # perform operation
fmsub.s f8, f22, f13, f24, rmm # perform operation
fmsub.s f8, f22, f13, f24, rne # perform operation
fmsub.s f8, f22, f13, f24, rtz # perform operation
fmsub.s f8, f22, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f22, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x47fe0329872eb1c9 # load x3 with value 0x47fe0329872eb1c9
sw x3, 0(x2) # store 0x47fe0329872eb1c9 in memory
flw f6, 0(x2) # load 0x47fe0329872eb1c9 from memory into f6
fmsub.s f1, f11, f20, f6, dyn # perform operation
fmsub.s f1, f11, f20, f6, rdn # perform operation
fmsub.s f1, f11, f20, f6, rmm # perform operation
fmsub.s f1, f11, f20, f6, rne # perform operation
fmsub.s f1, f11, f20, f6, rtz # perform operation
fmsub.s f1, f11, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xa434aa54a4965ee9 # load x3 with value 0xa434aa54a4965ee9
sw x3, 0(x2) # store 0xa434aa54a4965ee9 in memory
flw f5, 0(x2) # load 0xa434aa54a4965ee9 from memory into f5
fmsub.s f7, f28, f2, f5, dyn # perform operation
fmsub.s f7, f28, f2, f5, rdn # perform operation
fmsub.s f7, f28, f2, f5, rmm # perform operation
fmsub.s f7, f28, f2, f5, rne # perform operation
fmsub.s f7, f28, f2, f5, rtz # perform operation
fmsub.s f7, f28, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f28, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f28, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xbe3e89928a6c84a # load x3 with value 0xbe3e89928a6c84a
sw x3, 0(x2) # store 0xbe3e89928a6c84a in memory
flw f12, 0(x2) # load 0xbe3e89928a6c84a from memory into f12
fmsub.s f18, f9, f7, f12, dyn # perform operation
fmsub.s f18, f9, f7, f12, rdn # perform operation
fmsub.s f18, f9, f7, f12, rmm # perform operation
fmsub.s f18, f9, f7, f12, rne # perform operation
fmsub.s f18, f9, f7, f12, rtz # perform operation
fmsub.s f18, f9, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xe56aee28bb6e6e1a # load x3 with value 0xe56aee28bb6e6e1a
sw x3, 0(x2) # store 0xe56aee28bb6e6e1a in memory
flw f12, 0(x2) # load 0xe56aee28bb6e6e1a from memory into f12
fmsub.s f23, f7, f10, f12, dyn # perform operation
fmsub.s f23, f7, f10, f12, rdn # perform operation
fmsub.s f23, f7, f10, f12, rmm # perform operation
fmsub.s f23, f7, f10, f12, rne # perform operation
fmsub.s f23, f7, f10, f12, rtz # perform operation
fmsub.s f23, f7, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f7, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f7, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f7, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f7, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f7, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x9668f19ec74f0a8b # load x3 with value 0x9668f19ec74f0a8b
sw x3, 0(x2) # store 0x9668f19ec74f0a8b in memory
flw f23, 0(x2) # load 0x9668f19ec74f0a8b from memory into f23
fmsub.s f3, f6, f18, f23, dyn # perform operation
fmsub.s f3, f6, f18, f23, rdn # perform operation
fmsub.s f3, f6, f18, f23, rmm # perform operation
fmsub.s f3, f6, f18, f23, rne # perform operation
fmsub.s f3, f6, f18, f23, rtz # perform operation
fmsub.s f3, f6, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xd790471f6357461 # load x3 with value 0xd790471f6357461
sw x3, 0(x2) # store 0xd790471f6357461 in memory
flw f22, 0(x2) # load 0xd790471f6357461 from memory into f22
fmsub.s f19, f26, f16, f22, dyn # perform operation
fmsub.s f19, f26, f16, f22, rdn # perform operation
fmsub.s f19, f26, f16, f22, rmm # perform operation
fmsub.s f19, f26, f16, f22, rne # perform operation
fmsub.s f19, f26, f16, f22, rtz # perform operation
fmsub.s f19, f26, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f26, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x848eb82441ad64ad # load x3 with value 0x848eb82441ad64ad
sw x3, 0(x2) # store 0x848eb82441ad64ad in memory
flw f23, 0(x2) # load 0x848eb82441ad64ad from memory into f23
fmsub.s f1, f20, f26, f23, dyn # perform operation
fmsub.s f1, f20, f26, f23, rdn # perform operation
fmsub.s f1, f20, f26, f23, rmm # perform operation
fmsub.s f1, f20, f26, f23, rne # perform operation
fmsub.s f1, f20, f26, f23, rtz # perform operation
fmsub.s f1, f20, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f20, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x57fd3323732a897b # load x3 with value 0x57fd3323732a897b
sw x3, 0(x2) # store 0x57fd3323732a897b in memory
flw f8, 0(x2) # load 0x57fd3323732a897b from memory into f8
fmsub.s f15, f21, f27, f8, dyn # perform operation
fmsub.s f15, f21, f27, f8, rdn # perform operation
fmsub.s f15, f21, f27, f8, rmm # perform operation
fmsub.s f15, f21, f27, f8, rne # perform operation
fmsub.s f15, f21, f27, f8, rtz # perform operation
fmsub.s f15, f21, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f21, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xb66fc3816c7943de # load x3 with value 0xb66fc3816c7943de
sw x3, 0(x2) # store 0xb66fc3816c7943de in memory
flw f17, 0(x2) # load 0xb66fc3816c7943de from memory into f17
fmsub.s f22, f20, f10, f17, dyn # perform operation
fmsub.s f22, f20, f10, f17, rdn # perform operation
fmsub.s f22, f20, f10, f17, rmm # perform operation
fmsub.s f22, f20, f10, f17, rne # perform operation
fmsub.s f22, f20, f10, f17, rtz # perform operation
fmsub.s f22, f20, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x768d28814397915d # load x3 with value 0x768d28814397915d
sw x3, 0(x2) # store 0x768d28814397915d in memory
flw f9, 0(x2) # load 0x768d28814397915d from memory into f9
fmsub.s f18, f2, f6, f9, dyn # perform operation
fmsub.s f18, f2, f6, f9, rdn # perform operation
fmsub.s f18, f2, f6, f9, rmm # perform operation
fmsub.s f18, f2, f6, f9, rne # perform operation
fmsub.s f18, f2, f6, f9, rtz # perform operation
fmsub.s f18, f2, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f2, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f2, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xea5c970271f6a97f # load x3 with value 0xea5c970271f6a97f
sw x3, 0(x2) # store 0xea5c970271f6a97f in memory
flw f28, 0(x2) # load 0xea5c970271f6a97f from memory into f28
fmsub.s f5, f18, f10, f28, dyn # perform operation
fmsub.s f5, f18, f10, f28, rdn # perform operation
fmsub.s f5, f18, f10, f28, rmm # perform operation
fmsub.s f5, f18, f10, f28, rne # perform operation
fmsub.s f5, f18, f10, f28, rtz # perform operation
fmsub.s f5, f18, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x24b97a7c88b871f3 # load x3 with value 0x24b97a7c88b871f3
sw x3, 0(x2) # store 0x24b97a7c88b871f3 in memory
flw f12, 0(x2) # load 0x24b97a7c88b871f3 from memory into f12
fmsub.s f7, f5, f11, f12, dyn # perform operation
fmsub.s f7, f5, f11, f12, rdn # perform operation
fmsub.s f7, f5, f11, f12, rmm # perform operation
fmsub.s f7, f5, f11, f12, rne # perform operation
fmsub.s f7, f5, f11, f12, rtz # perform operation
fmsub.s f7, f5, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xbc114dc457e9542f # load x3 with value 0xbc114dc457e9542f
sw x3, 0(x2) # store 0xbc114dc457e9542f in memory
flw f7, 0(x2) # load 0xbc114dc457e9542f from memory into f7
fmsub.s f16, f14, f15, f7, dyn # perform operation
fmsub.s f16, f14, f15, f7, rdn # perform operation
fmsub.s f16, f14, f15, f7, rmm # perform operation
fmsub.s f16, f14, f15, f7, rne # perform operation
fmsub.s f16, f14, f15, f7, rtz # perform operation
fmsub.s f16, f14, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f14, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0xb0719e6b6a50edad # load x3 with value 0xb0719e6b6a50edad
sw x3, 0(x2) # store 0xb0719e6b6a50edad in memory
flw f12, 0(x2) # load 0xb0719e6b6a50edad from memory into f12
fmsub.s f22, f5, f11, f12, dyn # perform operation
fmsub.s f22, f5, f11, f12, rdn # perform operation
fmsub.s f22, f5, f11, f12, rmm # perform operation
fmsub.s f22, f5, f11, f12, rne # perform operation
fmsub.s f22, f5, f11, f12, rtz # perform operation
fmsub.s f22, f5, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x144062bcf8458105 # load x3 with value 0x144062bcf8458105
sw x3, 0(x2) # store 0x144062bcf8458105 in memory
flw f20, 0(x2) # load 0x144062bcf8458105 from memory into f20
fmsub.s f17, f2, f14, f20, dyn # perform operation
fmsub.s f17, f2, f14, f20, rdn # perform operation
fmsub.s f17, f2, f14, f20, rmm # perform operation
fmsub.s f17, f2, f14, f20, rne # perform operation
fmsub.s f17, f2, f14, f20, rtz # perform operation
fmsub.s f17, f2, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0xb2abc3bc983037bf # load x3 with value 0xb2abc3bc983037bf
sw x3, 0(x2) # store 0xb2abc3bc983037bf in memory
flw f23, 0(x2) # load 0xb2abc3bc983037bf from memory into f23
fmsub.s f27, f30, f15, f23, dyn # perform operation
fmsub.s f27, f30, f15, f23, rdn # perform operation
fmsub.s f27, f30, f15, f23, rmm # perform operation
fmsub.s f27, f30, f15, f23, rne # perform operation
fmsub.s f27, f30, f15, f23, rtz # perform operation
fmsub.s f27, f30, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f30, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f30, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f30, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f30, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f30, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x42b72d14eedb3697 # load x3 with value 0x42b72d14eedb3697
sw x3, 0(x2) # store 0x42b72d14eedb3697 in memory
flw f20, 0(x2) # load 0x42b72d14eedb3697 from memory into f20
fmsub.s f23, f24, f13, f20, dyn # perform operation
fmsub.s f23, f24, f13, f20, rdn # perform operation
fmsub.s f23, f24, f13, f20, rmm # perform operation
fmsub.s f23, f24, f13, f20, rne # perform operation
fmsub.s f23, f24, f13, f20, rtz # perform operation
fmsub.s f23, f24, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xc8f34403eea40032 # load x3 with value 0xc8f34403eea40032
sw x3, 0(x2) # store 0xc8f34403eea40032 in memory
flw f12, 0(x2) # load 0xc8f34403eea40032 from memory into f12
fmsub.s f26, f31, f27, f12, dyn # perform operation
fmsub.s f26, f31, f27, f12, rdn # perform operation
fmsub.s f26, f31, f27, f12, rmm # perform operation
fmsub.s f26, f31, f27, f12, rne # perform operation
fmsub.s f26, f31, f27, f12, rtz # perform operation
fmsub.s f26, f31, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f31, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f31, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x4f0ba0d434708e20 # load x3 with value 0x4f0ba0d434708e20
sw x3, 0(x2) # store 0x4f0ba0d434708e20 in memory
flw f29, 0(x2) # load 0x4f0ba0d434708e20 from memory into f29
fmsub.s f2, f26, f27, f29, dyn # perform operation
fmsub.s f2, f26, f27, f29, rdn # perform operation
fmsub.s f2, f26, f27, f29, rmm # perform operation
fmsub.s f2, f26, f27, f29, rne # perform operation
fmsub.s f2, f26, f27, f29, rtz # perform operation
fmsub.s f2, f26, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f26, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f26, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x313a5d7dd7024ba1 # load x3 with value 0x313a5d7dd7024ba1
sw x3, 0(x2) # store 0x313a5d7dd7024ba1 in memory
flw f2, 0(x2) # load 0x313a5d7dd7024ba1 from memory into f2
fmsub.s f26, f17, f20, f2, dyn # perform operation
fmsub.s f26, f17, f20, f2, rdn # perform operation
fmsub.s f26, f17, f20, f2, rmm # perform operation
fmsub.s f26, f17, f20, f2, rne # perform operation
fmsub.s f26, f17, f20, f2, rtz # perform operation
fmsub.s f26, f17, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x4bad01f2790f1ba7 # load x3 with value 0x4bad01f2790f1ba7
sw x3, 0(x2) # store 0x4bad01f2790f1ba7 in memory
flw f21, 0(x2) # load 0x4bad01f2790f1ba7 from memory into f21
fmsub.s f16, f29, f3, f21, dyn # perform operation
fmsub.s f16, f29, f3, f21, rdn # perform operation
fmsub.s f16, f29, f3, f21, rmm # perform operation
fmsub.s f16, f29, f3, f21, rne # perform operation
fmsub.s f16, f29, f3, f21, rtz # perform operation
fmsub.s f16, f29, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x3ac61f456528879b # load x3 with value 0x3ac61f456528879b
sw x3, 0(x2) # store 0x3ac61f456528879b in memory
flw f5, 0(x2) # load 0x3ac61f456528879b from memory into f5
fmsub.s f26, f2, f29, f5, dyn # perform operation
fmsub.s f26, f2, f29, f5, rdn # perform operation
fmsub.s f26, f2, f29, f5, rmm # perform operation
fmsub.s f26, f2, f29, f5, rne # perform operation
fmsub.s f26, f2, f29, f5, rtz # perform operation
fmsub.s f26, f2, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x36e884907bcc9dc0 # load x3 with value 0x36e884907bcc9dc0
sw x3, 0(x2) # store 0x36e884907bcc9dc0 in memory
flw f15, 0(x2) # load 0x36e884907bcc9dc0 from memory into f15
fmsub.s f29, f28, f24, f15, dyn # perform operation
fmsub.s f29, f28, f24, f15, rdn # perform operation
fmsub.s f29, f28, f24, f15, rmm # perform operation
fmsub.s f29, f28, f24, f15, rne # perform operation
fmsub.s f29, f28, f24, f15, rtz # perform operation
fmsub.s f29, f28, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x25fcb69914b3b0f1 # load x3 with value 0x25fcb69914b3b0f1
sw x3, 0(x2) # store 0x25fcb69914b3b0f1 in memory
flw f29, 0(x2) # load 0x25fcb69914b3b0f1 from memory into f29
fmsub.s f7, f11, f19, f29, dyn # perform operation
fmsub.s f7, f11, f19, f29, rdn # perform operation
fmsub.s f7, f11, f19, f29, rmm # perform operation
fmsub.s f7, f11, f19, f29, rne # perform operation
fmsub.s f7, f11, f19, f29, rtz # perform operation
fmsub.s f7, f11, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xc4d5387c3f27e963 # load x3 with value 0xc4d5387c3f27e963
sw x3, 0(x2) # store 0xc4d5387c3f27e963 in memory
flw f12, 0(x2) # load 0xc4d5387c3f27e963 from memory into f12
fmsub.s f13, f30, f17, f12, dyn # perform operation
fmsub.s f13, f30, f17, f12, rdn # perform operation
fmsub.s f13, f30, f17, f12, rmm # perform operation
fmsub.s f13, f30, f17, f12, rne # perform operation
fmsub.s f13, f30, f17, f12, rtz # perform operation
fmsub.s f13, f30, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f17, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x89179de8c78553e2 # load x3 with value 0x89179de8c78553e2
sw x3, 0(x2) # store 0x89179de8c78553e2 in memory
flw f31, 0(x2) # load 0x89179de8c78553e2 from memory into f31
fmsub.s f6, f9, f24, f31, dyn # perform operation
fmsub.s f6, f9, f24, f31, rdn # perform operation
fmsub.s f6, f9, f24, f31, rmm # perform operation
fmsub.s f6, f9, f24, f31, rne # perform operation
fmsub.s f6, f9, f24, f31, rtz # perform operation
fmsub.s f6, f9, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x2f0ee5bbe78481ec # load x3 with value 0x2f0ee5bbe78481ec
sw x3, 0(x2) # store 0x2f0ee5bbe78481ec in memory
flw f7, 0(x2) # load 0x2f0ee5bbe78481ec from memory into f7
fmsub.s f20, f24, f6, f7, dyn # perform operation
fmsub.s f20, f24, f6, f7, rdn # perform operation
fmsub.s f20, f24, f6, f7, rmm # perform operation
fmsub.s f20, f24, f6, f7, rne # perform operation
fmsub.s f20, f24, f6, f7, rtz # perform operation
fmsub.s f20, f24, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f24, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f24, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f24, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f24, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f24, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xe3760fb64a1099a9 # load x3 with value 0xe3760fb64a1099a9
sw x3, 0(x2) # store 0xe3760fb64a1099a9 in memory
flw f2, 0(x2) # load 0xe3760fb64a1099a9 from memory into f2
fmsub.s f29, f9, f24, f2, dyn # perform operation
fmsub.s f29, f9, f24, f2, rdn # perform operation
fmsub.s f29, f9, f24, f2, rmm # perform operation
fmsub.s f29, f9, f24, f2, rne # perform operation
fmsub.s f29, f9, f24, f2, rtz # perform operation
fmsub.s f29, f9, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0xb72474dcb22d02ce # load x3 with value 0xb72474dcb22d02ce
sw x3, 0(x2) # store 0xb72474dcb22d02ce in memory
flw f18, 0(x2) # load 0xb72474dcb22d02ce from memory into f18
fmsub.s f9, f3, f14, f18, dyn # perform operation
fmsub.s f9, f3, f14, f18, rdn # perform operation
fmsub.s f9, f3, f14, f18, rmm # perform operation
fmsub.s f9, f3, f14, f18, rne # perform operation
fmsub.s f9, f3, f14, f18, rtz # perform operation
fmsub.s f9, f3, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x927edd5b771aeb3a # load x3 with value 0x927edd5b771aeb3a
sw x3, 0(x2) # store 0x927edd5b771aeb3a in memory
flw f29, 0(x2) # load 0x927edd5b771aeb3a from memory into f29
fmsub.s f24, f8, f25, f29, dyn # perform operation
fmsub.s f24, f8, f25, f29, rdn # perform operation
fmsub.s f24, f8, f25, f29, rmm # perform operation
fmsub.s f24, f8, f25, f29, rne # perform operation
fmsub.s f24, f8, f25, f29, rtz # perform operation
fmsub.s f24, f8, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xe449ea18103d146f # load x3 with value 0xe449ea18103d146f
sw x3, 0(x2) # store 0xe449ea18103d146f in memory
flw f1, 0(x2) # load 0xe449ea18103d146f from memory into f1
fmsub.s f26, f6, f25, f1, dyn # perform operation
fmsub.s f26, f6, f25, f1, rdn # perform operation
fmsub.s f26, f6, f25, f1, rmm # perform operation
fmsub.s f26, f6, f25, f1, rne # perform operation
fmsub.s f26, f6, f25, f1, rtz # perform operation
fmsub.s f26, f6, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x710f3d0084f3155b # load x3 with value 0x710f3d0084f3155b
sw x3, 0(x2) # store 0x710f3d0084f3155b in memory
flw f25, 0(x2) # load 0x710f3d0084f3155b from memory into f25
fmsub.s f1, f2, f10, f25, dyn # perform operation
fmsub.s f1, f2, f10, f25, rdn # perform operation
fmsub.s f1, f2, f10, f25, rmm # perform operation
fmsub.s f1, f2, f10, f25, rne # perform operation
fmsub.s f1, f2, f10, f25, rtz # perform operation
fmsub.s f1, f2, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x12b3293928c6cf6a # load x3 with value 0x12b3293928c6cf6a
sw x3, 0(x2) # store 0x12b3293928c6cf6a in memory
flw f31, 0(x2) # load 0x12b3293928c6cf6a from memory into f31
fmsub.s f28, f8, f7, f31, dyn # perform operation
fmsub.s f28, f8, f7, f31, rdn # perform operation
fmsub.s f28, f8, f7, f31, rmm # perform operation
fmsub.s f28, f8, f7, f31, rne # perform operation
fmsub.s f28, f8, f7, f31, rtz # perform operation
fmsub.s f28, f8, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xdc25b1fae8ad3e17 # load x3 with value 0xdc25b1fae8ad3e17
sw x3, 0(x2) # store 0xdc25b1fae8ad3e17 in memory
flw f5, 0(x2) # load 0xdc25b1fae8ad3e17 from memory into f5
fmsub.s f3, f18, f8, f5, dyn # perform operation
fmsub.s f3, f18, f8, f5, rdn # perform operation
fmsub.s f3, f18, f8, f5, rmm # perform operation
fmsub.s f3, f18, f8, f5, rne # perform operation
fmsub.s f3, f18, f8, f5, rtz # perform operation
fmsub.s f3, f18, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f18, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f18, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xede1f398d2aba614 # load x3 with value 0xede1f398d2aba614
sw x3, 0(x2) # store 0xede1f398d2aba614 in memory
flw f19, 0(x2) # load 0xede1f398d2aba614 from memory into f19
fmsub.s f6, f27, f11, f19, dyn # perform operation
fmsub.s f6, f27, f11, f19, rdn # perform operation
fmsub.s f6, f27, f11, f19, rmm # perform operation
fmsub.s f6, f27, f11, f19, rne # perform operation
fmsub.s f6, f27, f11, f19, rtz # perform operation
fmsub.s f6, f27, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f27, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x677a41316e6c4149 # load x3 with value 0x677a41316e6c4149
sw x3, 0(x2) # store 0x677a41316e6c4149 in memory
flw f29, 0(x2) # load 0x677a41316e6c4149 from memory into f29
fmsub.s f24, f31, f3, f29, dyn # perform operation
fmsub.s f24, f31, f3, f29, rdn # perform operation
fmsub.s f24, f31, f3, f29, rmm # perform operation
fmsub.s f24, f31, f3, f29, rne # perform operation
fmsub.s f24, f31, f3, f29, rtz # perform operation
fmsub.s f24, f31, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f31, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f31, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f31, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f31, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f31, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x298e9ecfc8e0dfd2 # load x3 with value 0x298e9ecfc8e0dfd2
sw x3, 0(x2) # store 0x298e9ecfc8e0dfd2 in memory
flw f30, 0(x2) # load 0x298e9ecfc8e0dfd2 from memory into f30
fmsub.s f17, f6, f13, f30, dyn # perform operation
fmsub.s f17, f6, f13, f30, rdn # perform operation
fmsub.s f17, f6, f13, f30, rmm # perform operation
fmsub.s f17, f6, f13, f30, rne # perform operation
fmsub.s f17, f6, f13, f30, rtz # perform operation
fmsub.s f17, f6, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f6, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xf7e0970757ef3d6d # load x3 with value 0xf7e0970757ef3d6d
sw x3, 0(x2) # store 0xf7e0970757ef3d6d in memory
flw f7, 0(x2) # load 0xf7e0970757ef3d6d from memory into f7
fmsub.s f14, f16, f25, f7, dyn # perform operation
fmsub.s f14, f16, f25, f7, rdn # perform operation
fmsub.s f14, f16, f25, f7, rmm # perform operation
fmsub.s f14, f16, f25, f7, rne # perform operation
fmsub.s f14, f16, f25, f7, rtz # perform operation
fmsub.s f14, f16, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xa6dbeaece563fcb5 # load x3 with value 0xa6dbeaece563fcb5
sw x3, 0(x2) # store 0xa6dbeaece563fcb5 in memory
flw f7, 0(x2) # load 0xa6dbeaece563fcb5 from memory into f7
fmsub.s f25, f19, f22, f7, dyn # perform operation
fmsub.s f25, f19, f22, f7, rdn # perform operation
fmsub.s f25, f19, f22, f7, rmm # perform operation
fmsub.s f25, f19, f22, f7, rne # perform operation
fmsub.s f25, f19, f22, f7, rtz # perform operation
fmsub.s f25, f19, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x1c0ca5a425bb313a # load x3 with value 0x1c0ca5a425bb313a
sw x3, 0(x2) # store 0x1c0ca5a425bb313a in memory
flw f1, 0(x2) # load 0x1c0ca5a425bb313a from memory into f1
fmsub.s f10, f25, f18, f1, dyn # perform operation
fmsub.s f10, f25, f18, f1, rdn # perform operation
fmsub.s f10, f25, f18, f1, rmm # perform operation
fmsub.s f10, f25, f18, f1, rne # perform operation
fmsub.s f10, f25, f18, f1, rtz # perform operation
fmsub.s f10, f25, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x6061ca0134623ce2 # load x3 with value 0x6061ca0134623ce2
sw x3, 0(x2) # store 0x6061ca0134623ce2 in memory
flw f24, 0(x2) # load 0x6061ca0134623ce2 from memory into f24
fmsub.s f15, f26, f29, f24, dyn # perform operation
fmsub.s f15, f26, f29, f24, rdn # perform operation
fmsub.s f15, f26, f29, f24, rmm # perform operation
fmsub.s f15, f26, f29, f24, rne # perform operation
fmsub.s f15, f26, f29, f24, rtz # perform operation
fmsub.s f15, f26, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f26, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xf417e662f682f92e # load x3 with value 0xf417e662f682f92e
sw x3, 0(x2) # store 0xf417e662f682f92e in memory
flw f24, 0(x2) # load 0xf417e662f682f92e from memory into f24
fmsub.s f30, f15, f2, f24, dyn # perform operation
fmsub.s f30, f15, f2, f24, rdn # perform operation
fmsub.s f30, f15, f2, f24, rmm # perform operation
fmsub.s f30, f15, f2, f24, rne # perform operation
fmsub.s f30, f15, f2, f24, rtz # perform operation
fmsub.s f30, f15, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f15, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f15, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x7f338873b4949c9c # load x3 with value 0x7f338873b4949c9c
sw x3, 0(x2) # store 0x7f338873b4949c9c in memory
flw f17, 0(x2) # load 0x7f338873b4949c9c from memory into f17
fmsub.s f15, f14, f12, f17, dyn # perform operation
fmsub.s f15, f14, f12, f17, rdn # perform operation
fmsub.s f15, f14, f12, f17, rmm # perform operation
fmsub.s f15, f14, f12, f17, rne # perform operation
fmsub.s f15, f14, f12, f17, rtz # perform operation
fmsub.s f15, f14, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xe49cc577e3edc75d # load x3 with value 0xe49cc577e3edc75d
sw x3, 0(x2) # store 0xe49cc577e3edc75d in memory
flw f28, 0(x2) # load 0xe49cc577e3edc75d from memory into f28
fmsub.s f22, f9, f2, f28, dyn # perform operation
fmsub.s f22, f9, f2, f28, rdn # perform operation
fmsub.s f22, f9, f2, f28, rmm # perform operation
fmsub.s f22, f9, f2, f28, rne # perform operation
fmsub.s f22, f9, f2, f28, rtz # perform operation
fmsub.s f22, f9, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x605949bd87caa1ed # load x3 with value 0x605949bd87caa1ed
sw x3, 0(x2) # store 0x605949bd87caa1ed in memory
flw f5, 0(x2) # load 0x605949bd87caa1ed from memory into f5
fmsub.s f18, f15, f31, f5, dyn # perform operation
fmsub.s f18, f15, f31, f5, rdn # perform operation
fmsub.s f18, f15, f31, f5, rmm # perform operation
fmsub.s f18, f15, f31, f5, rne # perform operation
fmsub.s f18, f15, f31, f5, rtz # perform operation
fmsub.s f18, f15, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f15, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xb3fe49fd6a04e955 # load x3 with value 0xb3fe49fd6a04e955
sw x3, 0(x2) # store 0xb3fe49fd6a04e955 in memory
flw f29, 0(x2) # load 0xb3fe49fd6a04e955 from memory into f29
fmsub.s f26, f18, f7, f29, dyn # perform operation
fmsub.s f26, f18, f7, f29, rdn # perform operation
fmsub.s f26, f18, f7, f29, rmm # perform operation
fmsub.s f26, f18, f7, f29, rne # perform operation
fmsub.s f26, f18, f7, f29, rtz # perform operation
fmsub.s f26, f18, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x89b1597cc8ede2e7 # load x3 with value 0x89b1597cc8ede2e7
sw x3, 0(x2) # store 0x89b1597cc8ede2e7 in memory
flw f2, 0(x2) # load 0x89b1597cc8ede2e7 from memory into f2
fmsub.s f16, f12, f8, f2, dyn # perform operation
fmsub.s f16, f12, f8, f2, rdn # perform operation
fmsub.s f16, f12, f8, f2, rmm # perform operation
fmsub.s f16, f12, f8, f2, rne # perform operation
fmsub.s f16, f12, f8, f2, rtz # perform operation
fmsub.s f16, f12, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xd17126def0c56251 # load x3 with value 0xd17126def0c56251
sw x3, 0(x2) # store 0xd17126def0c56251 in memory
flw f22, 0(x2) # load 0xd17126def0c56251 from memory into f22
fmsub.s f31, f25, f11, f22, dyn # perform operation
fmsub.s f31, f25, f11, f22, rdn # perform operation
fmsub.s f31, f25, f11, f22, rmm # perform operation
fmsub.s f31, f25, f11, f22, rne # perform operation
fmsub.s f31, f25, f11, f22, rtz # perform operation
fmsub.s f31, f25, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xbdb652682ca65373 # load x3 with value 0xbdb652682ca65373
sw x3, 0(x2) # store 0xbdb652682ca65373 in memory
flw f13, 0(x2) # load 0xbdb652682ca65373 from memory into f13
fmsub.s f3, f7, f16, f13, dyn # perform operation
fmsub.s f3, f7, f16, f13, rdn # perform operation
fmsub.s f3, f7, f16, f13, rmm # perform operation
fmsub.s f3, f7, f16, f13, rne # perform operation
fmsub.s f3, f7, f16, f13, rtz # perform operation
fmsub.s f3, f7, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f7, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f7, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x6999533b4f009b90 # load x3 with value 0x6999533b4f009b90
sw x3, 0(x2) # store 0x6999533b4f009b90 in memory
flw f6, 0(x2) # load 0x6999533b4f009b90 from memory into f6
fmsub.s f24, f3, f20, f6, dyn # perform operation
fmsub.s f24, f3, f20, f6, rdn # perform operation
fmsub.s f24, f3, f20, f6, rmm # perform operation
fmsub.s f24, f3, f20, f6, rne # perform operation
fmsub.s f24, f3, f20, f6, rtz # perform operation
fmsub.s f24, f3, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f3, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f3, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f3, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f3, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f3, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xc75fbe8122a5feff # load x3 with value 0xc75fbe8122a5feff
sw x3, 0(x2) # store 0xc75fbe8122a5feff in memory
flw f1, 0(x2) # load 0xc75fbe8122a5feff from memory into f1
fmsub.s f18, f25, f17, f1, dyn # perform operation
fmsub.s f18, f25, f17, f1, rdn # perform operation
fmsub.s f18, f25, f17, f1, rmm # perform operation
fmsub.s f18, f25, f17, f1, rne # perform operation
fmsub.s f18, f25, f17, f1, rtz # perform operation
fmsub.s f18, f25, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x1da4d08b8b5641ba # load x3 with value 0x1da4d08b8b5641ba
sw x3, 0(x2) # store 0x1da4d08b8b5641ba in memory
flw f29, 0(x2) # load 0x1da4d08b8b5641ba from memory into f29
fmsub.s f23, f20, f10, f29, dyn # perform operation
fmsub.s f23, f20, f10, f29, rdn # perform operation
fmsub.s f23, f20, f10, f29, rmm # perform operation
fmsub.s f23, f20, f10, f29, rne # perform operation
fmsub.s f23, f20, f10, f29, rtz # perform operation
fmsub.s f23, f20, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f20, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x34d7cb31e0d593e2 # load x3 with value 0x34d7cb31e0d593e2
sw x3, 0(x2) # store 0x34d7cb31e0d593e2 in memory
flw f26, 0(x2) # load 0x34d7cb31e0d593e2 from memory into f26
fmsub.s f1, f25, f15, f26, dyn # perform operation
fmsub.s f1, f25, f15, f26, rdn # perform operation
fmsub.s f1, f25, f15, f26, rmm # perform operation
fmsub.s f1, f25, f15, f26, rne # perform operation
fmsub.s f1, f25, f15, f26, rtz # perform operation
fmsub.s f1, f25, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xcd1d52b1373f76d2 # load x3 with value 0xcd1d52b1373f76d2
sw x3, 0(x2) # store 0xcd1d52b1373f76d2 in memory
flw f30, 0(x2) # load 0xcd1d52b1373f76d2 from memory into f30
fmsub.s f28, f13, f2, f30, dyn # perform operation
fmsub.s f28, f13, f2, f30, rdn # perform operation
fmsub.s f28, f13, f2, f30, rmm # perform operation
fmsub.s f28, f13, f2, f30, rne # perform operation
fmsub.s f28, f13, f2, f30, rtz # perform operation
fmsub.s f28, f13, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x678f10e00d9a3463 # load x3 with value 0x678f10e00d9a3463
sw x3, 0(x2) # store 0x678f10e00d9a3463 in memory
flw f5, 0(x2) # load 0x678f10e00d9a3463 from memory into f5
fmsub.s f24, f11, f30, f5, dyn # perform operation
fmsub.s f24, f11, f30, f5, rdn # perform operation
fmsub.s f24, f11, f30, f5, rmm # perform operation
fmsub.s f24, f11, f30, f5, rne # perform operation
fmsub.s f24, f11, f30, f5, rtz # perform operation
fmsub.s f24, f11, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x2de880c778230bf7 # load x3 with value 0x2de880c778230bf7
sw x3, 0(x2) # store 0x2de880c778230bf7 in memory
flw f17, 0(x2) # load 0x2de880c778230bf7 from memory into f17
fmsub.s f28, f18, f16, f17, dyn # perform operation
fmsub.s f28, f18, f16, f17, rdn # perform operation
fmsub.s f28, f18, f16, f17, rmm # perform operation
fmsub.s f28, f18, f16, f17, rne # perform operation
fmsub.s f28, f18, f16, f17, rtz # perform operation
fmsub.s f28, f18, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x4c0fa8ad3853ccac # load x3 with value 0x4c0fa8ad3853ccac
sw x3, 0(x2) # store 0x4c0fa8ad3853ccac in memory
flw f20, 0(x2) # load 0x4c0fa8ad3853ccac from memory into f20
fmsub.s f3, f27, f30, f20, dyn # perform operation
fmsub.s f3, f27, f30, f20, rdn # perform operation
fmsub.s f3, f27, f30, f20, rmm # perform operation
fmsub.s f3, f27, f30, f20, rne # perform operation
fmsub.s f3, f27, f30, f20, rtz # perform operation
fmsub.s f3, f27, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f27, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f27, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x31b858012a5c06d # load x3 with value 0x31b858012a5c06d
sw x3, 0(x2) # store 0x31b858012a5c06d in memory
flw f22, 0(x2) # load 0x31b858012a5c06d from memory into f22
fmsub.s f11, f2, f21, f22, dyn # perform operation
fmsub.s f11, f2, f21, f22, rdn # perform operation
fmsub.s f11, f2, f21, f22, rmm # perform operation
fmsub.s f11, f2, f21, f22, rne # perform operation
fmsub.s f11, f2, f21, f22, rtz # perform operation
fmsub.s f11, f2, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f2, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x590db2fd9393579e # load x3 with value 0x590db2fd9393579e
sw x3, 0(x2) # store 0x590db2fd9393579e in memory
flw f16, 0(x2) # load 0x590db2fd9393579e from memory into f16
fmsub.s f23, f13, f10, f16, dyn # perform operation
fmsub.s f23, f13, f10, f16, rdn # perform operation
fmsub.s f23, f13, f10, f16, rmm # perform operation
fmsub.s f23, f13, f10, f16, rne # perform operation
fmsub.s f23, f13, f10, f16, rtz # perform operation
fmsub.s f23, f13, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x1279ce3355016a49 # load x3 with value 0x1279ce3355016a49
sw x3, 0(x2) # store 0x1279ce3355016a49 in memory
flw f26, 0(x2) # load 0x1279ce3355016a49 from memory into f26
fmsub.s f25, f12, f5, f26, dyn # perform operation
fmsub.s f25, f12, f5, f26, rdn # perform operation
fmsub.s f25, f12, f5, f26, rmm # perform operation
fmsub.s f25, f12, f5, f26, rne # perform operation
fmsub.s f25, f12, f5, f26, rtz # perform operation
fmsub.s f25, f12, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x481f964a57e28cf5 # load x3 with value 0x481f964a57e28cf5
sw x3, 0(x2) # store 0x481f964a57e28cf5 in memory
flw f24, 0(x2) # load 0x481f964a57e28cf5 from memory into f24
fmsub.s f28, f1, f14, f24, dyn # perform operation
fmsub.s f28, f1, f14, f24, rdn # perform operation
fmsub.s f28, f1, f14, f24, rmm # perform operation
fmsub.s f28, f1, f14, f24, rne # perform operation
fmsub.s f28, f1, f14, f24, rtz # perform operation
fmsub.s f28, f1, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x67da4bfe218a7670 # load x3 with value 0x67da4bfe218a7670
sw x3, 0(x2) # store 0x67da4bfe218a7670 in memory
flw f30, 0(x2) # load 0x67da4bfe218a7670 from memory into f30
fmsub.s f7, f10, f1, f30, dyn # perform operation
fmsub.s f7, f10, f1, f30, rdn # perform operation
fmsub.s f7, f10, f1, f30, rmm # perform operation
fmsub.s f7, f10, f1, f30, rne # perform operation
fmsub.s f7, f10, f1, f30, rtz # perform operation
fmsub.s f7, f10, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xe1893857916fb9fa # load x3 with value 0xe1893857916fb9fa
sw x3, 0(x2) # store 0xe1893857916fb9fa in memory
flw f2, 0(x2) # load 0xe1893857916fb9fa from memory into f2
fmsub.s f27, f3, f23, f2, dyn # perform operation
fmsub.s f27, f3, f23, f2, rdn # perform operation
fmsub.s f27, f3, f23, f2, rmm # perform operation
fmsub.s f27, f3, f23, f2, rne # perform operation
fmsub.s f27, f3, f23, f2, rtz # perform operation
fmsub.s f27, f3, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x7b4e395d4f2d968a # load x3 with value 0x7b4e395d4f2d968a
sw x3, 0(x2) # store 0x7b4e395d4f2d968a in memory
flw f3, 0(x2) # load 0x7b4e395d4f2d968a from memory into f3
fmsub.s f14, f20, f5, f3, dyn # perform operation
fmsub.s f14, f20, f5, f3, rdn # perform operation
fmsub.s f14, f20, f5, f3, rmm # perform operation
fmsub.s f14, f20, f5, f3, rne # perform operation
fmsub.s f14, f20, f5, f3, rtz # perform operation
fmsub.s f14, f20, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f20, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f20, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f20, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f20, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f20, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x1c29405ffa12f638 # load x3 with value 0x1c29405ffa12f638
sw x3, 0(x2) # store 0x1c29405ffa12f638 in memory
flw f25, 0(x2) # load 0x1c29405ffa12f638 from memory into f25
fmsub.s f6, f15, f29, f25, dyn # perform operation
fmsub.s f6, f15, f29, f25, rdn # perform operation
fmsub.s f6, f15, f29, f25, rmm # perform operation
fmsub.s f6, f15, f29, f25, rne # perform operation
fmsub.s f6, f15, f29, f25, rtz # perform operation
fmsub.s f6, f15, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f29, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xb7d2f35e9f95a47e # load x3 with value 0xb7d2f35e9f95a47e
sw x3, 0(x2) # store 0xb7d2f35e9f95a47e in memory
flw f22, 0(x2) # load 0xb7d2f35e9f95a47e from memory into f22
fmsub.s f6, f26, f27, f22, dyn # perform operation
fmsub.s f6, f26, f27, f22, rdn # perform operation
fmsub.s f6, f26, f27, f22, rmm # perform operation
fmsub.s f6, f26, f27, f22, rne # perform operation
fmsub.s f6, f26, f27, f22, rtz # perform operation
fmsub.s f6, f26, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xe326e7896fcf8e22 # load x3 with value 0xe326e7896fcf8e22
sw x3, 0(x2) # store 0xe326e7896fcf8e22 in memory
flw f18, 0(x2) # load 0xe326e7896fcf8e22 from memory into f18
fmsub.s f17, f19, f3, f18, dyn # perform operation
fmsub.s f17, f19, f3, f18, rdn # perform operation
fmsub.s f17, f19, f3, f18, rmm # perform operation
fmsub.s f17, f19, f3, f18, rne # perform operation
fmsub.s f17, f19, f3, f18, rtz # perform operation
fmsub.s f17, f19, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xf3a903b67eb73f85 # load x3 with value 0xf3a903b67eb73f85
sw x3, 0(x2) # store 0xf3a903b67eb73f85 in memory
flw f31, 0(x2) # load 0xf3a903b67eb73f85 from memory into f31
fmsub.s f23, f8, f12, f31, dyn # perform operation
fmsub.s f23, f8, f12, f31, rdn # perform operation
fmsub.s f23, f8, f12, f31, rmm # perform operation
fmsub.s f23, f8, f12, f31, rne # perform operation
fmsub.s f23, f8, f12, f31, rtz # perform operation
fmsub.s f23, f8, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x6984f4e1d2b60310 # load x3 with value 0x6984f4e1d2b60310
sw x3, 0(x2) # store 0x6984f4e1d2b60310 in memory
flw f28, 0(x2) # load 0x6984f4e1d2b60310 from memory into f28
fmsub.s f22, f5, f24, f28, dyn # perform operation
fmsub.s f22, f5, f24, f28, rdn # perform operation
fmsub.s f22, f5, f24, f28, rmm # perform operation
fmsub.s f22, f5, f24, f28, rne # perform operation
fmsub.s f22, f5, f24, f28, rtz # perform operation
fmsub.s f22, f5, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x86b2639bb98f8c8e # load x3 with value 0x86b2639bb98f8c8e
sw x3, 0(x2) # store 0x86b2639bb98f8c8e in memory
flw f15, 0(x2) # load 0x86b2639bb98f8c8e from memory into f15
fmsub.s f20, f25, f3, f15, dyn # perform operation
fmsub.s f20, f25, f3, f15, rdn # perform operation
fmsub.s f20, f25, f3, f15, rmm # perform operation
fmsub.s f20, f25, f3, f15, rne # perform operation
fmsub.s f20, f25, f3, f15, rtz # perform operation
fmsub.s f20, f25, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f25, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f25, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xeb91e9665721d78e # load x3 with value 0xeb91e9665721d78e
sw x3, 0(x2) # store 0xeb91e9665721d78e in memory
flw f6, 0(x2) # load 0xeb91e9665721d78e from memory into f6
fmsub.s f25, f30, f20, f6, dyn # perform operation
fmsub.s f25, f30, f20, f6, rdn # perform operation
fmsub.s f25, f30, f20, f6, rmm # perform operation
fmsub.s f25, f30, f20, f6, rne # perform operation
fmsub.s f25, f30, f20, f6, rtz # perform operation
fmsub.s f25, f30, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f30, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f30, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f30, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f30, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f30, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xcb8d7026330dee1a # load x3 with value 0xcb8d7026330dee1a
sw x3, 0(x2) # store 0xcb8d7026330dee1a in memory
flw f7, 0(x2) # load 0xcb8d7026330dee1a from memory into f7
fmsub.s f16, f11, f31, f7, dyn # perform operation
fmsub.s f16, f11, f31, f7, rdn # perform operation
fmsub.s f16, f11, f31, f7, rmm # perform operation
fmsub.s f16, f11, f31, f7, rne # perform operation
fmsub.s f16, f11, f31, f7, rtz # perform operation
fmsub.s f16, f11, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f11, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x950f9b44b7d54175 # load x3 with value 0x950f9b44b7d54175
sw x3, 0(x2) # store 0x950f9b44b7d54175 in memory
flw f31, 0(x2) # load 0x950f9b44b7d54175 from memory into f31
fmsub.s f5, f26, f10, f31, dyn # perform operation
fmsub.s f5, f26, f10, f31, rdn # perform operation
fmsub.s f5, f26, f10, f31, rmm # perform operation
fmsub.s f5, f26, f10, f31, rne # perform operation
fmsub.s f5, f26, f10, f31, rtz # perform operation
fmsub.s f5, f26, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x88392d150c523ebc # load x3 with value 0x88392d150c523ebc
sw x3, 0(x2) # store 0x88392d150c523ebc in memory
flw f7, 0(x2) # load 0x88392d150c523ebc from memory into f7
fmsub.s f9, f19, f16, f7, dyn # perform operation
fmsub.s f9, f19, f16, f7, rdn # perform operation
fmsub.s f9, f19, f16, f7, rmm # perform operation
fmsub.s f9, f19, f16, f7, rne # perform operation
fmsub.s f9, f19, f16, f7, rtz # perform operation
fmsub.s f9, f19, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x86dba72d82e3b46e # load x3 with value 0x86dba72d82e3b46e
sw x3, 0(x2) # store 0x86dba72d82e3b46e in memory
flw f13, 0(x2) # load 0x86dba72d82e3b46e from memory into f13
fmsub.s f15, f2, f7, f13, dyn # perform operation
fmsub.s f15, f2, f7, f13, rdn # perform operation
fmsub.s f15, f2, f7, f13, rmm # perform operation
fmsub.s f15, f2, f7, f13, rne # perform operation
fmsub.s f15, f2, f7, f13, rtz # perform operation
fmsub.s f15, f2, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x2fe3310109b67ae2 # load x3 with value 0x2fe3310109b67ae2
sw x3, 0(x2) # store 0x2fe3310109b67ae2 in memory
flw f25, 0(x2) # load 0x2fe3310109b67ae2 from memory into f25
fmsub.s f26, f23, f27, f25, dyn # perform operation
fmsub.s f26, f23, f27, f25, rdn # perform operation
fmsub.s f26, f23, f27, f25, rmm # perform operation
fmsub.s f26, f23, f27, f25, rne # perform operation
fmsub.s f26, f23, f27, f25, rtz # perform operation
fmsub.s f26, f23, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0xd14a12a0cd3f5be0 # load x3 with value 0xd14a12a0cd3f5be0
sw x3, 0(x2) # store 0xd14a12a0cd3f5be0 in memory
flw f30, 0(x2) # load 0xd14a12a0cd3f5be0 from memory into f30
fmsub.s f2, f8, f3, f30, dyn # perform operation
fmsub.s f2, f8, f3, f30, rdn # perform operation
fmsub.s f2, f8, f3, f30, rmm # perform operation
fmsub.s f2, f8, f3, f30, rne # perform operation
fmsub.s f2, f8, f3, f30, rtz # perform operation
fmsub.s f2, f8, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xc401bdf07e2315d3 # load x3 with value 0xc401bdf07e2315d3
sw x3, 0(x2) # store 0xc401bdf07e2315d3 in memory
flw f27, 0(x2) # load 0xc401bdf07e2315d3 from memory into f27
fmsub.s f10, f25, f5, f27, dyn # perform operation
fmsub.s f10, f25, f5, f27, rdn # perform operation
fmsub.s f10, f25, f5, f27, rmm # perform operation
fmsub.s f10, f25, f5, f27, rne # perform operation
fmsub.s f10, f25, f5, f27, rtz # perform operation
fmsub.s f10, f25, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x41ea8b9bb0a3f76f # load x3 with value 0x41ea8b9bb0a3f76f
sw x3, 0(x2) # store 0x41ea8b9bb0a3f76f in memory
flw f26, 0(x2) # load 0x41ea8b9bb0a3f76f from memory into f26
fmsub.s f5, f27, f24, f26, dyn # perform operation
fmsub.s f5, f27, f24, f26, rdn # perform operation
fmsub.s f5, f27, f24, f26, rmm # perform operation
fmsub.s f5, f27, f24, f26, rne # perform operation
fmsub.s f5, f27, f24, f26, rtz # perform operation
fmsub.s f5, f27, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x235b3b982a3920a6 # load x3 with value 0x235b3b982a3920a6
sw x3, 0(x2) # store 0x235b3b982a3920a6 in memory
flw f5, 0(x2) # load 0x235b3b982a3920a6 from memory into f5
fmsub.s f30, f29, f10, f5, dyn # perform operation
fmsub.s f30, f29, f10, f5, rdn # perform operation
fmsub.s f30, f29, f10, f5, rmm # perform operation
fmsub.s f30, f29, f10, f5, rne # perform operation
fmsub.s f30, f29, f10, f5, rtz # perform operation
fmsub.s f30, f29, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f29, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x70e05263f3cd73ec # load x3 with value 0x70e05263f3cd73ec
sw x3, 0(x2) # store 0x70e05263f3cd73ec in memory
flw f25, 0(x2) # load 0x70e05263f3cd73ec from memory into f25
fmsub.s f29, f28, f26, f25, dyn # perform operation
fmsub.s f29, f28, f26, f25, rdn # perform operation
fmsub.s f29, f28, f26, f25, rmm # perform operation
fmsub.s f29, f28, f26, f25, rne # perform operation
fmsub.s f29, f28, f26, f25, rtz # perform operation
fmsub.s f29, f28, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x18bc8556b4d0a7de # load x3 with value 0x18bc8556b4d0a7de
sw x3, 0(x2) # store 0x18bc8556b4d0a7de in memory
flw f8, 0(x2) # load 0x18bc8556b4d0a7de from memory into f8
fmsub.s f10, f27, f3, f8, dyn # perform operation
fmsub.s f10, f27, f3, f8, rdn # perform operation
fmsub.s f10, f27, f3, f8, rmm # perform operation
fmsub.s f10, f27, f3, f8, rne # perform operation
fmsub.s f10, f27, f3, f8, rtz # perform operation
fmsub.s f10, f27, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f27, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f27, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x77f54ecfd07f4875 # load x3 with value 0x77f54ecfd07f4875
sw x3, 0(x2) # store 0x77f54ecfd07f4875 in memory
flw f11, 0(x2) # load 0x77f54ecfd07f4875 from memory into f11
fmsub.s f26, f27, f2, f11, dyn # perform operation
fmsub.s f26, f27, f2, f11, rdn # perform operation
fmsub.s f26, f27, f2, f11, rmm # perform operation
fmsub.s f26, f27, f2, f11, rne # perform operation
fmsub.s f26, f27, f2, f11, rtz # perform operation
fmsub.s f26, f27, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x9e8b1f586beb41a0 # load x3 with value 0x9e8b1f586beb41a0
sw x3, 0(x2) # store 0x9e8b1f586beb41a0 in memory
flw f10, 0(x2) # load 0x9e8b1f586beb41a0 from memory into f10
fmsub.s f24, f7, f6, f10, dyn # perform operation
fmsub.s f24, f7, f6, f10, rdn # perform operation
fmsub.s f24, f7, f6, f10, rmm # perform operation
fmsub.s f24, f7, f6, f10, rne # perform operation
fmsub.s f24, f7, f6, f10, rtz # perform operation
fmsub.s f24, f7, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f7, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f7, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x3de1d9a03dbb5582 # load x3 with value 0x3de1d9a03dbb5582
sw x3, 0(x2) # store 0x3de1d9a03dbb5582 in memory
flw f27, 0(x2) # load 0x3de1d9a03dbb5582 from memory into f27
fmsub.s f25, f6, f18, f27, dyn # perform operation
fmsub.s f25, f6, f18, f27, rdn # perform operation
fmsub.s f25, f6, f18, f27, rmm # perform operation
fmsub.s f25, f6, f18, f27, rne # perform operation
fmsub.s f25, f6, f18, f27, rtz # perform operation
fmsub.s f25, f6, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0xe01f926916c5a737 # load x3 with value 0xe01f926916c5a737
sw x3, 0(x2) # store 0xe01f926916c5a737 in memory
flw f6, 0(x2) # load 0xe01f926916c5a737 from memory into f6
fmsub.s f30, f13, f28, f6, dyn # perform operation
fmsub.s f30, f13, f28, f6, rdn # perform operation
fmsub.s f30, f13, f28, f6, rmm # perform operation
fmsub.s f30, f13, f28, f6, rne # perform operation
fmsub.s f30, f13, f28, f6, rtz # perform operation
fmsub.s f30, f13, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f13, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f13, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f13, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f13, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f13, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x97a63b09b643fd22 # load x3 with value 0x97a63b09b643fd22
sw x3, 0(x2) # store 0x97a63b09b643fd22 in memory
flw f18, 0(x2) # load 0x97a63b09b643fd22 from memory into f18
fmsub.s f20, f15, f13, f18, dyn # perform operation
fmsub.s f20, f15, f13, f18, rdn # perform operation
fmsub.s f20, f15, f13, f18, rmm # perform operation
fmsub.s f20, f15, f13, f18, rne # perform operation
fmsub.s f20, f15, f13, f18, rtz # perform operation
fmsub.s f20, f15, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x887945f28d574cfa # load x3 with value 0x887945f28d574cfa
sw x3, 0(x2) # store 0x887945f28d574cfa in memory
flw f5, 0(x2) # load 0x887945f28d574cfa from memory into f5
fmsub.s f7, f8, f31, f5, dyn # perform operation
fmsub.s f7, f8, f31, f5, rdn # perform operation
fmsub.s f7, f8, f31, f5, rmm # perform operation
fmsub.s f7, f8, f31, f5, rne # perform operation
fmsub.s f7, f8, f31, f5, rtz # perform operation
fmsub.s f7, f8, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f8, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x5f57cd27b0cbd38a # load x3 with value 0x5f57cd27b0cbd38a
sw x3, 0(x2) # store 0x5f57cd27b0cbd38a in memory
flw f3, 0(x2) # load 0x5f57cd27b0cbd38a from memory into f3
fmsub.s f1, f22, f9, f3, dyn # perform operation
fmsub.s f1, f22, f9, f3, rdn # perform operation
fmsub.s f1, f22, f9, f3, rmm # perform operation
fmsub.s f1, f22, f9, f3, rne # perform operation
fmsub.s f1, f22, f9, f3, rtz # perform operation
fmsub.s f1, f22, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xb5b1d0479c31a08d # load x3 with value 0xb5b1d0479c31a08d
sw x3, 0(x2) # store 0xb5b1d0479c31a08d in memory
flw f2, 0(x2) # load 0xb5b1d0479c31a08d from memory into f2
fmsub.s f5, f22, f17, f2, dyn # perform operation
fmsub.s f5, f22, f17, f2, rdn # perform operation
fmsub.s f5, f22, f17, f2, rmm # perform operation
fmsub.s f5, f22, f17, f2, rne # perform operation
fmsub.s f5, f22, f17, f2, rtz # perform operation
fmsub.s f5, f22, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f22, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f22, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x267e82496a348b65 # load x3 with value 0x267e82496a348b65
sw x3, 0(x2) # store 0x267e82496a348b65 in memory
flw f8, 0(x2) # load 0x267e82496a348b65 from memory into f8
fmsub.s f27, f12, f18, f8, dyn # perform operation
fmsub.s f27, f12, f18, f8, rdn # perform operation
fmsub.s f27, f12, f18, f8, rmm # perform operation
fmsub.s f27, f12, f18, f8, rne # perform operation
fmsub.s f27, f12, f18, f8, rtz # perform operation
fmsub.s f27, f12, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f12, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f12, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0xdba0d05c2e92cc4a # load x3 with value 0xdba0d05c2e92cc4a
sw x3, 0(x2) # store 0xdba0d05c2e92cc4a in memory
flw f6, 0(x2) # load 0xdba0d05c2e92cc4a from memory into f6
fmsub.s f2, f17, f11, f6, dyn # perform operation
fmsub.s f2, f17, f11, f6, rdn # perform operation
fmsub.s f2, f17, f11, f6, rmm # perform operation
fmsub.s f2, f17, f11, f6, rne # perform operation
fmsub.s f2, f17, f11, f6, rtz # perform operation
fmsub.s f2, f17, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xbc99dbd78b49f9ce # load x3 with value 0xbc99dbd78b49f9ce
sw x3, 0(x2) # store 0xbc99dbd78b49f9ce in memory
flw f3, 0(x2) # load 0xbc99dbd78b49f9ce from memory into f3
fmsub.s f28, f24, f20, f3, dyn # perform operation
fmsub.s f28, f24, f20, f3, rdn # perform operation
fmsub.s f28, f24, f20, f3, rmm # perform operation
fmsub.s f28, f24, f20, f3, rne # perform operation
fmsub.s f28, f24, f20, f3, rtz # perform operation
fmsub.s f28, f24, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x9152a10f64e5c9bf # load x3 with value 0x9152a10f64e5c9bf
sw x3, 0(x2) # store 0x9152a10f64e5c9bf in memory
flw f20, 0(x2) # load 0x9152a10f64e5c9bf from memory into f20
fmsub.s f14, f17, f27, f20, dyn # perform operation
fmsub.s f14, f17, f27, f20, rdn # perform operation
fmsub.s f14, f17, f27, f20, rmm # perform operation
fmsub.s f14, f17, f27, f20, rne # perform operation
fmsub.s f14, f17, f27, f20, rtz # perform operation
fmsub.s f14, f17, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f17, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f17, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xb87c8e06250fcaac # load x3 with value 0xb87c8e06250fcaac
sw x3, 0(x2) # store 0xb87c8e06250fcaac in memory
flw f5, 0(x2) # load 0xb87c8e06250fcaac from memory into f5
fmsub.s f15, f24, f7, f5, dyn # perform operation
fmsub.s f15, f24, f7, f5, rdn # perform operation
fmsub.s f15, f24, f7, f5, rmm # perform operation
fmsub.s f15, f24, f7, f5, rne # perform operation
fmsub.s f15, f24, f7, f5, rtz # perform operation
fmsub.s f15, f24, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0xcdf54d90d8e11457 # load x3 with value 0xcdf54d90d8e11457
sw x3, 0(x2) # store 0xcdf54d90d8e11457 in memory
flw f7, 0(x2) # load 0xcdf54d90d8e11457 from memory into f7
fmsub.s f27, f31, f25, f7, dyn # perform operation
fmsub.s f27, f31, f25, f7, rdn # perform operation
fmsub.s f27, f31, f25, f7, rmm # perform operation
fmsub.s f27, f31, f25, f7, rne # perform operation
fmsub.s f27, f31, f25, f7, rtz # perform operation
fmsub.s f27, f31, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0xe38499e5a34d2d2 # load x3 with value 0xe38499e5a34d2d2
sw x3, 0(x2) # store 0xe38499e5a34d2d2 in memory
flw f25, 0(x2) # load 0xe38499e5a34d2d2 from memory into f25
fmsub.s f23, f10, f11, f25, dyn # perform operation
fmsub.s f23, f10, f11, f25, rdn # perform operation
fmsub.s f23, f10, f11, f25, rmm # perform operation
fmsub.s f23, f10, f11, f25, rne # perform operation
fmsub.s f23, f10, f11, f25, rtz # perform operation
fmsub.s f23, f10, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x3419f645e9e2daa # load x3 with value 0x3419f645e9e2daa
sw x3, 0(x2) # store 0x3419f645e9e2daa in memory
flw f23, 0(x2) # load 0x3419f645e9e2daa from memory into f23
fmsub.s f2, f16, f29, f23, dyn # perform operation
fmsub.s f2, f16, f29, f23, rdn # perform operation
fmsub.s f2, f16, f29, f23, rmm # perform operation
fmsub.s f2, f16, f29, f23, rne # perform operation
fmsub.s f2, f16, f29, f23, rtz # perform operation
fmsub.s f2, f16, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f16, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f16, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f16, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f16, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f16, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x7d89fdf00f6afa54 # load x3 with value 0x7d89fdf00f6afa54
sw x3, 0(x2) # store 0x7d89fdf00f6afa54 in memory
flw f30, 0(x2) # load 0x7d89fdf00f6afa54 from memory into f30
fmsub.s f31, f18, f10, f30, dyn # perform operation
fmsub.s f31, f18, f10, f30, rdn # perform operation
fmsub.s f31, f18, f10, f30, rmm # perform operation
fmsub.s f31, f18, f10, f30, rne # perform operation
fmsub.s f31, f18, f10, f30, rtz # perform operation
fmsub.s f31, f18, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x1dec0b7b56f62bb2 # load x3 with value 0x1dec0b7b56f62bb2
sw x3, 0(x2) # store 0x1dec0b7b56f62bb2 in memory
flw f29, 0(x2) # load 0x1dec0b7b56f62bb2 from memory into f29
fmsub.s f16, f2, f25, f29, dyn # perform operation
fmsub.s f16, f2, f25, f29, rdn # perform operation
fmsub.s f16, f2, f25, f29, rmm # perform operation
fmsub.s f16, f2, f25, f29, rne # perform operation
fmsub.s f16, f2, f25, f29, rtz # perform operation
fmsub.s f16, f2, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xbe18e2de9553640 # load x3 with value 0xbe18e2de9553640
sw x3, 0(x2) # store 0xbe18e2de9553640 in memory
flw f19, 0(x2) # load 0xbe18e2de9553640 from memory into f19
fmsub.s f5, f10, f28, f19, dyn # perform operation
fmsub.s f5, f10, f28, f19, rdn # perform operation
fmsub.s f5, f10, f28, f19, rmm # perform operation
fmsub.s f5, f10, f28, f19, rne # perform operation
fmsub.s f5, f10, f28, f19, rtz # perform operation
fmsub.s f5, f10, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f10, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0xf51aaa22631351b4 # load x3 with value 0xf51aaa22631351b4
sw x3, 0(x2) # store 0xf51aaa22631351b4 in memory
flw f16, 0(x2) # load 0xf51aaa22631351b4 from memory into f16
fmsub.s f13, f23, f12, f16, dyn # perform operation
fmsub.s f13, f23, f12, f16, rdn # perform operation
fmsub.s f13, f23, f12, f16, rmm # perform operation
fmsub.s f13, f23, f12, f16, rne # perform operation
fmsub.s f13, f23, f12, f16, rtz # perform operation
fmsub.s f13, f23, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x63ec167807ce8c44 # load x3 with value 0x63ec167807ce8c44
sw x3, 0(x2) # store 0x63ec167807ce8c44 in memory
flw f17, 0(x2) # load 0x63ec167807ce8c44 from memory into f17
fmsub.s f8, f5, f13, f17, dyn # perform operation
fmsub.s f8, f5, f13, f17, rdn # perform operation
fmsub.s f8, f5, f13, f17, rmm # perform operation
fmsub.s f8, f5, f13, f17, rne # perform operation
fmsub.s f8, f5, f13, f17, rtz # perform operation
fmsub.s f8, f5, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x81c3b2d249bdb990 # load x3 with value 0x81c3b2d249bdb990
sw x3, 0(x2) # store 0x81c3b2d249bdb990 in memory
flw f3, 0(x2) # load 0x81c3b2d249bdb990 from memory into f3
fmsub.s f9, f14, f29, f3, dyn # perform operation
fmsub.s f9, f14, f29, f3, rdn # perform operation
fmsub.s f9, f14, f29, f3, rmm # perform operation
fmsub.s f9, f14, f29, f3, rne # perform operation
fmsub.s f9, f14, f29, f3, rtz # perform operation
fmsub.s f9, f14, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f14, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f14, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xb20131cfdd0eb4c5 # load x3 with value 0xb20131cfdd0eb4c5
sw x3, 0(x2) # store 0xb20131cfdd0eb4c5 in memory
flw f11, 0(x2) # load 0xb20131cfdd0eb4c5 from memory into f11
fmsub.s f22, f2, f1, f11, dyn # perform operation
fmsub.s f22, f2, f1, f11, rdn # perform operation
fmsub.s f22, f2, f1, f11, rmm # perform operation
fmsub.s f22, f2, f1, f11, rne # perform operation
fmsub.s f22, f2, f1, f11, rtz # perform operation
fmsub.s f22, f2, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f2, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f2, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f2, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f2, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f2, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x24159a44eeeff7ed # load x3 with value 0x24159a44eeeff7ed
sw x3, 0(x2) # store 0x24159a44eeeff7ed in memory
flw f13, 0(x2) # load 0x24159a44eeeff7ed from memory into f13
fmsub.s f28, f29, f17, f13, dyn # perform operation
fmsub.s f28, f29, f17, f13, rdn # perform operation
fmsub.s f28, f29, f17, f13, rmm # perform operation
fmsub.s f28, f29, f17, f13, rne # perform operation
fmsub.s f28, f29, f17, f13, rtz # perform operation
fmsub.s f28, f29, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x323c800c9c174643 # load x3 with value 0x323c800c9c174643
sw x3, 0(x2) # store 0x323c800c9c174643 in memory
flw f20, 0(x2) # load 0x323c800c9c174643 from memory into f20
fmsub.s f2, f6, f5, f20, dyn # perform operation
fmsub.s f2, f6, f5, f20, rdn # perform operation
fmsub.s f2, f6, f5, f20, rmm # perform operation
fmsub.s f2, f6, f5, f20, rne # perform operation
fmsub.s f2, f6, f5, f20, rtz # perform operation
fmsub.s f2, f6, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f6, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x19351fc069436023 # load x3 with value 0x19351fc069436023
sw x3, 0(x2) # store 0x19351fc069436023 in memory
flw f30, 0(x2) # load 0x19351fc069436023 from memory into f30
fmsub.s f23, f27, f21, f30, dyn # perform operation
fmsub.s f23, f27, f21, f30, rdn # perform operation
fmsub.s f23, f27, f21, f30, rmm # perform operation
fmsub.s f23, f27, f21, f30, rne # perform operation
fmsub.s f23, f27, f21, f30, rtz # perform operation
fmsub.s f23, f27, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xe5ebc613a434ba54 # load x3 with value 0xe5ebc613a434ba54
sw x3, 0(x2) # store 0xe5ebc613a434ba54 in memory
flw f23, 0(x2) # load 0xe5ebc613a434ba54 from memory into f23
fmsub.s f27, f8, f14, f23, dyn # perform operation
fmsub.s f27, f8, f14, f23, rdn # perform operation
fmsub.s f27, f8, f14, f23, rmm # perform operation
fmsub.s f27, f8, f14, f23, rne # perform operation
fmsub.s f27, f8, f14, f23, rtz # perform operation
fmsub.s f27, f8, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f8, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x9a5bc7cc6538e5f8 # load x3 with value 0x9a5bc7cc6538e5f8
sw x3, 0(x2) # store 0x9a5bc7cc6538e5f8 in memory
flw f11, 0(x2) # load 0x9a5bc7cc6538e5f8 from memory into f11
fmsub.s f9, f20, f25, f11, dyn # perform operation
fmsub.s f9, f20, f25, f11, rdn # perform operation
fmsub.s f9, f20, f25, f11, rmm # perform operation
fmsub.s f9, f20, f25, f11, rne # perform operation
fmsub.s f9, f20, f25, f11, rtz # perform operation
fmsub.s f9, f20, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f20, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xeeff669bf696626b # load x3 with value 0xeeff669bf696626b
sw x3, 0(x2) # store 0xeeff669bf696626b in memory
flw f31, 0(x2) # load 0xeeff669bf696626b from memory into f31
fmsub.s f16, f10, f11, f31, dyn # perform operation
fmsub.s f16, f10, f11, f31, rdn # perform operation
fmsub.s f16, f10, f11, f31, rmm # perform operation
fmsub.s f16, f10, f11, f31, rne # perform operation
fmsub.s f16, f10, f11, f31, rtz # perform operation
fmsub.s f16, f10, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f10, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f10, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xda8e2ab6a24a07c8 # load x3 with value 0xda8e2ab6a24a07c8
sw x3, 0(x2) # store 0xda8e2ab6a24a07c8 in memory
flw f6, 0(x2) # load 0xda8e2ab6a24a07c8 from memory into f6
fmsub.s f22, f7, f1, f6, dyn # perform operation
fmsub.s f22, f7, f1, f6, rdn # perform operation
fmsub.s f22, f7, f1, f6, rmm # perform operation
fmsub.s f22, f7, f1, f6, rne # perform operation
fmsub.s f22, f7, f1, f6, rtz # perform operation
fmsub.s f22, f7, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xe9c359c22ea43292 # load x3 with value 0xe9c359c22ea43292
sw x3, 0(x2) # store 0xe9c359c22ea43292 in memory
flw f10, 0(x2) # load 0xe9c359c22ea43292 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmsub.s f27, f26, f10, f13, dyn # perform operation
fmsub.s f27, f26, f10, f13, rdn # perform operation
fmsub.s f27, f26, f10, f13, rmm # perform operation
fmsub.s f27, f26, f10, f13, rne # perform operation
fmsub.s f27, f26, f10, f13, rtz # perform operation
fmsub.s f27, f26, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7d5e8d9b4c81f595 # load x3 with value 0x7d5e8d9b4c81f595
sw x3, 0(x2) # store 0x7d5e8d9b4c81f595 in memory
flw f15, 0(x2) # load 0x7d5e8d9b4c81f595 from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmsub.s f14, f27, f15, f18, dyn # perform operation
fmsub.s f14, f27, f15, f18, rdn # perform operation
fmsub.s f14, f27, f15, f18, rmm # perform operation
fmsub.s f14, f27, f15, f18, rne # perform operation
fmsub.s f14, f27, f15, f18, rtz # perform operation
fmsub.s f14, f27, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xe3e67b4e0b0fda4a # load x3 with value 0xe3e67b4e0b0fda4a
sw x3, 0(x2) # store 0xe3e67b4e0b0fda4a in memory
flw f20, 0(x2) # load 0xe3e67b4e0b0fda4a from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fmsub.s f18, f1, f20, f13, dyn # perform operation
fmsub.s f18, f1, f20, f13, rdn # perform operation
fmsub.s f18, f1, f20, f13, rmm # perform operation
fmsub.s f18, f1, f20, f13, rne # perform operation
fmsub.s f18, f1, f20, f13, rtz # perform operation
fmsub.s f18, f1, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f1, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f1, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xe2d05a8ad2b8971c # load x3 with value 0xe2d05a8ad2b8971c
sw x3, 0(x2) # store 0xe2d05a8ad2b8971c in memory
flw f26, 0(x2) # load 0xe2d05a8ad2b8971c from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fmsub.s f8, f23, f26, f7, dyn # perform operation
fmsub.s f8, f23, f26, f7, rdn # perform operation
fmsub.s f8, f23, f26, f7, rmm # perform operation
fmsub.s f8, f23, f26, f7, rne # perform operation
fmsub.s f8, f23, f26, f7, rtz # perform operation
fmsub.s f8, f23, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x2783b38ff9a67256 # load x3 with value 0x2783b38ff9a67256
sw x3, 0(x2) # store 0x2783b38ff9a67256 in memory
flw f17, 0(x2) # load 0x2783b38ff9a67256 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f7, f12, f17, f23, dyn # perform operation
fmsub.s f7, f12, f17, f23, rdn # perform operation
fmsub.s f7, f12, f17, f23, rmm # perform operation
fmsub.s f7, f12, f17, f23, rne # perform operation
fmsub.s f7, f12, f17, f23, rtz # perform operation
fmsub.s f7, f12, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x688864fa19357e9c # load x3 with value 0x688864fa19357e9c
sw x3, 0(x2) # store 0x688864fa19357e9c in memory
flw f29, 0(x2) # load 0x688864fa19357e9c from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmsub.s f20, f23, f29, f11, dyn # perform operation
fmsub.s f20, f23, f29, f11, rdn # perform operation
fmsub.s f20, f23, f29, f11, rmm # perform operation
fmsub.s f20, f23, f29, f11, rne # perform operation
fmsub.s f20, f23, f29, f11, rtz # perform operation
fmsub.s f20, f23, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f23, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0x7ad7eafadd4979cd # load x3 with value 0x7ad7eafadd4979cd
sw x3, 0(x2) # store 0x7ad7eafadd4979cd in memory
flw f22, 0(x2) # load 0x7ad7eafadd4979cd from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmsub.s f29, f15, f22, f30, dyn # perform operation
fmsub.s f29, f15, f22, f30, rdn # perform operation
fmsub.s f29, f15, f22, f30, rmm # perform operation
fmsub.s f29, f15, f22, f30, rne # perform operation
fmsub.s f29, f15, f22, f30, rtz # perform operation
fmsub.s f29, f15, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xd49a37ebfcda9d9d # load x3 with value 0xd49a37ebfcda9d9d
sw x3, 0(x2) # store 0xd49a37ebfcda9d9d in memory
flw f26, 0(x2) # load 0xd49a37ebfcda9d9d from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmsub.s f18, f12, f26, f6, dyn # perform operation
fmsub.s f18, f12, f26, f6, rdn # perform operation
fmsub.s f18, f12, f26, f6, rmm # perform operation
fmsub.s f18, f12, f26, f6, rne # perform operation
fmsub.s f18, f12, f26, f6, rtz # perform operation
fmsub.s f18, f12, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f12, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f12, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f12, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f12, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f12, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xe910fb820631a2a2 # load x3 with value 0xe910fb820631a2a2
sw x3, 0(x2) # store 0xe910fb820631a2a2 in memory
flw f16, 0(x2) # load 0xe910fb820631a2a2 from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmsub.s f5, f24, f16, f21, dyn # perform operation
fmsub.s f5, f24, f16, f21, rdn # perform operation
fmsub.s f5, f24, f16, f21, rmm # perform operation
fmsub.s f5, f24, f16, f21, rne # perform operation
fmsub.s f5, f24, f16, f21, rtz # perform operation
fmsub.s f5, f24, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f24, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xfb031c094ab93359 # load x3 with value 0xfb031c094ab93359
sw x3, 0(x2) # store 0xfb031c094ab93359 in memory
flw f24, 0(x2) # load 0xfb031c094ab93359 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmsub.s f15, f30, f24, f21, dyn # perform operation
fmsub.s f15, f30, f24, f21, rdn # perform operation
fmsub.s f15, f30, f24, f21, rmm # perform operation
fmsub.s f15, f30, f24, f21, rne # perform operation
fmsub.s f15, f30, f24, f21, rtz # perform operation
fmsub.s f15, f30, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f30, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x7ad8a98d0c492457 # load x3 with value 0x7ad8a98d0c492457
sw x3, 0(x2) # store 0x7ad8a98d0c492457 in memory
flw f9, 0(x2) # load 0x7ad8a98d0c492457 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmsub.s f16, f24, f9, f17, dyn # perform operation
fmsub.s f16, f24, f9, f17, rdn # perform operation
fmsub.s f16, f24, f9, f17, rmm # perform operation
fmsub.s f16, f24, f9, f17, rne # perform operation
fmsub.s f16, f24, f9, f17, rtz # perform operation
fmsub.s f16, f24, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f9, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x398de4854dc1d132 # load x3 with value 0x398de4854dc1d132
sw x3, 0(x2) # store 0x398de4854dc1d132 in memory
flw f2, 0(x2) # load 0x398de4854dc1d132 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f8, f25, f2, f6, dyn # perform operation
fmsub.s f8, f25, f2, f6, rdn # perform operation
fmsub.s f8, f25, f2, f6, rmm # perform operation
fmsub.s f8, f25, f2, f6, rne # perform operation
fmsub.s f8, f25, f2, f6, rtz # perform operation
fmsub.s f8, f25, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x627bf5ae60e82cfc # load x3 with value 0x627bf5ae60e82cfc
sw x3, 0(x2) # store 0x627bf5ae60e82cfc in memory
flw f3, 0(x2) # load 0x627bf5ae60e82cfc from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmsub.s f16, f2, f3, f8, dyn # perform operation
fmsub.s f16, f2, f3, f8, rdn # perform operation
fmsub.s f16, f2, f3, f8, rmm # perform operation
fmsub.s f16, f2, f3, f8, rne # perform operation
fmsub.s f16, f2, f3, f8, rtz # perform operation
fmsub.s f16, f2, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x43068527adc6c482 # load x3 with value 0x43068527adc6c482
sw x3, 0(x2) # store 0x43068527adc6c482 in memory
flw f7, 0(x2) # load 0x43068527adc6c482 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fmsub.s f5, f1, f7, f12, dyn # perform operation
fmsub.s f5, f1, f7, f12, rdn # perform operation
fmsub.s f5, f1, f7, f12, rmm # perform operation
fmsub.s f5, f1, f7, f12, rne # perform operation
fmsub.s f5, f1, f7, f12, rtz # perform operation
fmsub.s f5, f1, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xbbb57d8aa4d89ffd # load x3 with value 0xbbb57d8aa4d89ffd
sw x3, 0(x2) # store 0xbbb57d8aa4d89ffd in memory
flw f29, 0(x2) # load 0xbbb57d8aa4d89ffd from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmsub.s f31, f27, f29, f3, dyn # perform operation
fmsub.s f31, f27, f29, f3, rdn # perform operation
fmsub.s f31, f27, f29, f3, rmm # perform operation
fmsub.s f31, f27, f29, f3, rne # perform operation
fmsub.s f31, f27, f29, f3, rtz # perform operation
fmsub.s f31, f27, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f27, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x3042aeed6db3b732 # load x3 with value 0x3042aeed6db3b732
sw x3, 0(x2) # store 0x3042aeed6db3b732 in memory
flw f10, 0(x2) # load 0x3042aeed6db3b732 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fmsub.s f14, f7, f10, f8, dyn # perform operation
fmsub.s f14, f7, f10, f8, rdn # perform operation
fmsub.s f14, f7, f10, f8, rmm # perform operation
fmsub.s f14, f7, f10, f8, rne # perform operation
fmsub.s f14, f7, f10, f8, rtz # perform operation
fmsub.s f14, f7, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xeaf8013f25187ea2 # load x3 with value 0xeaf8013f25187ea2
sw x3, 0(x2) # store 0xeaf8013f25187ea2 in memory
flw f28, 0(x2) # load 0xeaf8013f25187ea2 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f19, f22, f28, f10, dyn # perform operation
fmsub.s f19, f22, f28, f10, rdn # perform operation
fmsub.s f19, f22, f28, f10, rmm # perform operation
fmsub.s f19, f22, f28, f10, rne # perform operation
fmsub.s f19, f22, f28, f10, rtz # perform operation
fmsub.s f19, f22, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f22, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f22, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xa6c5c3b829cc533a # load x3 with value 0xa6c5c3b829cc533a
sw x3, 0(x2) # store 0xa6c5c3b829cc533a in memory
flw f19, 0(x2) # load 0xa6c5c3b829cc533a from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmsub.s f6, f16, f19, f13, dyn # perform operation
fmsub.s f6, f16, f19, f13, rdn # perform operation
fmsub.s f6, f16, f19, f13, rmm # perform operation
fmsub.s f6, f16, f19, f13, rne # perform operation
fmsub.s f6, f16, f19, f13, rtz # perform operation
fmsub.s f6, f16, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f16, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x356facdf93fa57d2 # load x3 with value 0x356facdf93fa57d2
sw x3, 0(x2) # store 0x356facdf93fa57d2 in memory
flw f3, 0(x2) # load 0x356facdf93fa57d2 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fmsub.s f17, f29, f3, f19, dyn # perform operation
fmsub.s f17, f29, f3, f19, rdn # perform operation
fmsub.s f17, f29, f3, f19, rmm # perform operation
fmsub.s f17, f29, f3, f19, rne # perform operation
fmsub.s f17, f29, f3, f19, rtz # perform operation
fmsub.s f17, f29, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f29, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f29, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f29, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f29, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f29, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xd8f7752d7947fd8f # load x3 with value 0xd8f7752d7947fd8f
sw x3, 0(x2) # store 0xd8f7752d7947fd8f in memory
flw f10, 0(x2) # load 0xd8f7752d7947fd8f from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmsub.s f8, f12, f10, f3, dyn # perform operation
fmsub.s f8, f12, f10, f3, rdn # perform operation
fmsub.s f8, f12, f10, f3, rmm # perform operation
fmsub.s f8, f12, f10, f3, rne # perform operation
fmsub.s f8, f12, f10, f3, rtz # perform operation
fmsub.s f8, f12, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x6c1381bf3931743c # load x3 with value 0x6c1381bf3931743c
sw x3, 0(x2) # store 0x6c1381bf3931743c in memory
flw f1, 0(x2) # load 0x6c1381bf3931743c from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f19, f12, f1, f18, dyn # perform operation
fmsub.s f19, f12, f1, f18, rdn # perform operation
fmsub.s f19, f12, f1, f18, rmm # perform operation
fmsub.s f19, f12, f1, f18, rne # perform operation
fmsub.s f19, f12, f1, f18, rtz # perform operation
fmsub.s f19, f12, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f12, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f12, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f12, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f12, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f12, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xf43066b0b8840075 # load x3 with value 0xf43066b0b8840075
sw x3, 0(x2) # store 0xf43066b0b8840075 in memory
flw f14, 0(x2) # load 0xf43066b0b8840075 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmsub.s f5, f16, f14, f1, dyn # perform operation
fmsub.s f5, f16, f14, f1, rdn # perform operation
fmsub.s f5, f16, f14, f1, rmm # perform operation
fmsub.s f5, f16, f14, f1, rne # perform operation
fmsub.s f5, f16, f14, f1, rtz # perform operation
fmsub.s f5, f16, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x2ef9fe33c106a10a # load x3 with value 0x2ef9fe33c106a10a
sw x3, 0(x2) # store 0x2ef9fe33c106a10a in memory
flw f23, 0(x2) # load 0x2ef9fe33c106a10a from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fmsub.s f20, f22, f23, f15, dyn # perform operation
fmsub.s f20, f22, f23, f15, rdn # perform operation
fmsub.s f20, f22, f23, f15, rmm # perform operation
fmsub.s f20, f22, f23, f15, rne # perform operation
fmsub.s f20, f22, f23, f15, rtz # perform operation
fmsub.s f20, f22, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f22, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f22, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f22, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f22, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f22, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xfbde1452d5c86848 # load x3 with value 0xfbde1452d5c86848
sw x3, 0(x2) # store 0xfbde1452d5c86848 in memory
flw f23, 0(x2) # load 0xfbde1452d5c86848 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fmsub.s f27, f3, f23, f1, dyn # perform operation
fmsub.s f27, f3, f23, f1, rdn # perform operation
fmsub.s f27, f3, f23, f1, rmm # perform operation
fmsub.s f27, f3, f23, f1, rne # perform operation
fmsub.s f27, f3, f23, f1, rtz # perform operation
fmsub.s f27, f3, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x6f859b95f372d69d # load x3 with value 0x6f859b95f372d69d
sw x3, 0(x2) # store 0x6f859b95f372d69d in memory
flw f3, 0(x2) # load 0x6f859b95f372d69d from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmsub.s f1, f12, f3, f5, dyn # perform operation
fmsub.s f1, f12, f3, f5, rdn # perform operation
fmsub.s f1, f12, f3, f5, rmm # perform operation
fmsub.s f1, f12, f3, f5, rne # perform operation
fmsub.s f1, f12, f3, f5, rtz # perform operation
fmsub.s f1, f12, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f12, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xec56bf35be435f43 # load x3 with value 0xec56bf35be435f43
sw x3, 0(x2) # store 0xec56bf35be435f43 in memory
flw f19, 0(x2) # load 0xec56bf35be435f43 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
fmsub.s f12, f7, f19, f28, dyn # perform operation
fmsub.s f12, f7, f19, f28, rdn # perform operation
fmsub.s f12, f7, f19, f28, rmm # perform operation
fmsub.s f12, f7, f19, f28, rne # perform operation
fmsub.s f12, f7, f19, f28, rtz # perform operation
fmsub.s f12, f7, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f7, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f7, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xc8a0598b26f9aa90 # load x3 with value 0xc8a0598b26f9aa90
sw x3, 0(x2) # store 0xc8a0598b26f9aa90 in memory
flw f23, 0(x2) # load 0xc8a0598b26f9aa90 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmsub.s f6, f3, f23, f30, dyn # perform operation
fmsub.s f6, f3, f23, f30, rdn # perform operation
fmsub.s f6, f3, f23, f30, rmm # perform operation
fmsub.s f6, f3, f23, f30, rne # perform operation
fmsub.s f6, f3, f23, f30, rtz # perform operation
fmsub.s f6, f3, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x3c81e94a3a2f4c63 # load x3 with value 0x3c81e94a3a2f4c63
sw x3, 0(x2) # store 0x3c81e94a3a2f4c63 in memory
flw f14, 0(x2) # load 0x3c81e94a3a2f4c63 from memory into f14
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fmsub.s f8, f16, f14, f28, dyn # perform operation
fmsub.s f8, f16, f14, f28, rdn # perform operation
fmsub.s f8, f16, f14, f28, rmm # perform operation
fmsub.s f8, f16, f14, f28, rne # perform operation
fmsub.s f8, f16, f14, f28, rtz # perform operation
fmsub.s f8, f16, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x5b6a106667f9df7b # load x3 with value 0x5b6a106667f9df7b
sw x3, 0(x2) # store 0x5b6a106667f9df7b in memory
flw f23, 0(x2) # load 0x5b6a106667f9df7b from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fmsub.s f26, f19, f23, f27, dyn # perform operation
fmsub.s f26, f19, f23, f27, rdn # perform operation
fmsub.s f26, f19, f23, f27, rmm # perform operation
fmsub.s f26, f19, f23, f27, rne # perform operation
fmsub.s f26, f19, f23, f27, rtz # perform operation
fmsub.s f26, f19, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f19, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f19, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f19, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f19, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f19, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x6f0c024d744ba5cb # load x3 with value 0x6f0c024d744ba5cb
sw x3, 0(x2) # store 0x6f0c024d744ba5cb in memory
flw f16, 0(x2) # load 0x6f0c024d744ba5cb from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmsub.s f15, f10, f16, f5, dyn # perform operation
fmsub.s f15, f10, f16, f5, rdn # perform operation
fmsub.s f15, f10, f16, f5, rmm # perform operation
fmsub.s f15, f10, f16, f5, rne # perform operation
fmsub.s f15, f10, f16, f5, rtz # perform operation
fmsub.s f15, f10, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f10, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f10, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f10, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f10, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f10, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x675b375705832b5b # load x3 with value 0x675b375705832b5b
sw x3, 0(x2) # store 0x675b375705832b5b in memory
flw f25, 0(x2) # load 0x675b375705832b5b from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fmsub.s f1, f21, f25, f6, dyn # perform operation
fmsub.s f1, f21, f25, f6, rdn # perform operation
fmsub.s f1, f21, f25, f6, rmm # perform operation
fmsub.s f1, f21, f25, f6, rne # perform operation
fmsub.s f1, f21, f25, f6, rtz # perform operation
fmsub.s f1, f21, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f21, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f21, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f21, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f21, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f21, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x62bf0765198ebc7d # load x3 with value 0x62bf0765198ebc7d
sw x3, 0(x2) # store 0x62bf0765198ebc7d in memory
flw f20, 0(x2) # load 0x62bf0765198ebc7d from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmsub.s f11, f19, f20, f9, dyn # perform operation
fmsub.s f11, f19, f20, f9, rdn # perform operation
fmsub.s f11, f19, f20, f9, rmm # perform operation
fmsub.s f11, f19, f20, f9, rne # perform operation
fmsub.s f11, f19, f20, f9, rtz # perform operation
fmsub.s f11, f19, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x305549d625a50553 # load x3 with value 0x305549d625a50553
sw x3, 0(x2) # store 0x305549d625a50553 in memory
flw f22, 0(x2) # load 0x305549d625a50553 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f28, f25, f22, f23, dyn # perform operation
fmsub.s f28, f25, f22, f23, rdn # perform operation
fmsub.s f28, f25, f22, f23, rmm # perform operation
fmsub.s f28, f25, f22, f23, rne # perform operation
fmsub.s f28, f25, f22, f23, rtz # perform operation
fmsub.s f28, f25, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xa516bb0ded34f51c # load x3 with value 0xa516bb0ded34f51c
sw x3, 0(x2) # store 0xa516bb0ded34f51c in memory
flw f7, 0(x2) # load 0xa516bb0ded34f51c from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmsub.s f20, f22, f7, f13, dyn # perform operation
fmsub.s f20, f22, f7, f13, rdn # perform operation
fmsub.s f20, f22, f7, f13, rmm # perform operation
fmsub.s f20, f22, f7, f13, rne # perform operation
fmsub.s f20, f22, f7, f13, rtz # perform operation
fmsub.s f20, f22, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f22, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f22, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f22, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f22, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f22, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x79dc7e4096bb0244 # load x3 with value 0x79dc7e4096bb0244
sw x3, 0(x2) # store 0x79dc7e4096bb0244 in memory
flw f17, 0(x2) # load 0x79dc7e4096bb0244 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmsub.s f22, f28, f17, f31, dyn # perform operation
fmsub.s f22, f28, f17, f31, rdn # perform operation
fmsub.s f22, f28, f17, f31, rmm # perform operation
fmsub.s f22, f28, f17, f31, rne # perform operation
fmsub.s f22, f28, f17, f31, rtz # perform operation
fmsub.s f22, f28, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f28, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f28, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x3894cc17447557af # load x3 with value 0x3894cc17447557af
sw x3, 0(x2) # store 0x3894cc17447557af in memory
flw f2, 0(x2) # load 0x3894cc17447557af from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmsub.s f18, f28, f2, f21, dyn # perform operation
fmsub.s f18, f28, f2, f21, rdn # perform operation
fmsub.s f18, f28, f2, f21, rmm # perform operation
fmsub.s f18, f28, f2, f21, rne # perform operation
fmsub.s f18, f28, f2, f21, rtz # perform operation
fmsub.s f18, f28, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xe343b7d71ce8d81d # load x3 with value 0xe343b7d71ce8d81d
sw x3, 0(x2) # store 0xe343b7d71ce8d81d in memory
flw f10, 0(x2) # load 0xe343b7d71ce8d81d from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmsub.s f11, f25, f10, f12, dyn # perform operation
fmsub.s f11, f25, f10, f12, rdn # perform operation
fmsub.s f11, f25, f10, f12, rmm # perform operation
fmsub.s f11, f25, f10, f12, rne # perform operation
fmsub.s f11, f25, f10, f12, rtz # perform operation
fmsub.s f11, f25, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xa97a1d6ff018da06 # load x3 with value 0xa97a1d6ff018da06
sw x3, 0(x2) # store 0xa97a1d6ff018da06 in memory
flw f21, 0(x2) # load 0xa97a1d6ff018da06 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f22, f18, f21, f23, dyn # perform operation
fmsub.s f22, f18, f21, f23, rdn # perform operation
fmsub.s f22, f18, f21, f23, rmm # perform operation
fmsub.s f22, f18, f21, f23, rne # perform operation
fmsub.s f22, f18, f21, f23, rtz # perform operation
fmsub.s f22, f18, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x603404b956cd4aa0 # load x3 with value 0x603404b956cd4aa0
sw x3, 0(x2) # store 0x603404b956cd4aa0 in memory
flw f19, 0(x2) # load 0x603404b956cd4aa0 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fmsub.s f5, f27, f19, f21, dyn # perform operation
fmsub.s f5, f27, f19, f21, rdn # perform operation
fmsub.s f5, f27, f19, f21, rmm # perform operation
fmsub.s f5, f27, f19, f21, rne # perform operation
fmsub.s f5, f27, f19, f21, rtz # perform operation
fmsub.s f5, f27, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xd05b1ca1c2e36b3f # load x3 with value 0xd05b1ca1c2e36b3f
sw x3, 0(x2) # store 0xd05b1ca1c2e36b3f in memory
flw f16, 0(x2) # load 0xd05b1ca1c2e36b3f from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fmsub.s f21, f5, f16, f22, dyn # perform operation
fmsub.s f21, f5, f16, f22, rdn # perform operation
fmsub.s f21, f5, f16, f22, rmm # perform operation
fmsub.s f21, f5, f16, f22, rne # perform operation
fmsub.s f21, f5, f16, f22, rtz # perform operation
fmsub.s f21, f5, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f5, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f5, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f5, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f5, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f5, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xe3f90a4421005c23 # load x3 with value 0xe3f90a4421005c23
sw x3, 0(x2) # store 0xe3f90a4421005c23 in memory
flw f17, 0(x2) # load 0xe3f90a4421005c23 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f29, f13, f17, f6, dyn # perform operation
fmsub.s f29, f13, f17, f6, rdn # perform operation
fmsub.s f29, f13, f17, f6, rmm # perform operation
fmsub.s f29, f13, f17, f6, rne # perform operation
fmsub.s f29, f13, f17, f6, rtz # perform operation
fmsub.s f29, f13, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f17, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x793860ec63c037d1 # load x3 with value 0x793860ec63c037d1
sw x3, 0(x2) # store 0x793860ec63c037d1 in memory
flw f1, 0(x2) # load 0x793860ec63c037d1 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmsub.s f6, f17, f1, f13, dyn # perform operation
fmsub.s f6, f17, f1, f13, rdn # perform operation
fmsub.s f6, f17, f1, f13, rmm # perform operation
fmsub.s f6, f17, f1, f13, rne # perform operation
fmsub.s f6, f17, f1, f13, rtz # perform operation
fmsub.s f6, f17, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f1, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x7ff388f1ebf30f3a # load x3 with value 0x7ff388f1ebf30f3a
sw x3, 0(x2) # store 0x7ff388f1ebf30f3a in memory
flw f17, 0(x2) # load 0x7ff388f1ebf30f3a from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fmsub.s f13, f23, f17, f19, dyn # perform operation
fmsub.s f13, f23, f17, f19, rdn # perform operation
fmsub.s f13, f23, f17, f19, rmm # perform operation
fmsub.s f13, f23, f17, f19, rne # perform operation
fmsub.s f13, f23, f17, f19, rtz # perform operation
fmsub.s f13, f23, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0xd6d5d4a0483f46d # load x3 with value 0xd6d5d4a0483f46d
sw x3, 0(x2) # store 0xd6d5d4a0483f46d in memory
flw f10, 0(x2) # load 0xd6d5d4a0483f46d from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f13, f15, f10, f27, dyn # perform operation
fmsub.s f13, f15, f10, f27, rdn # perform operation
fmsub.s f13, f15, f10, f27, rmm # perform operation
fmsub.s f13, f15, f10, f27, rne # perform operation
fmsub.s f13, f15, f10, f27, rtz # perform operation
fmsub.s f13, f15, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x71258561955d3b89 # load x3 with value 0x71258561955d3b89
sw x3, 0(x2) # store 0x71258561955d3b89 in memory
flw f27, 0(x2) # load 0x71258561955d3b89 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmsub.s f5, f3, f27, f13, dyn # perform operation
fmsub.s f5, f3, f27, f13, rdn # perform operation
fmsub.s f5, f3, f27, f13, rmm # perform operation
fmsub.s f5, f3, f27, f13, rne # perform operation
fmsub.s f5, f3, f27, f13, rtz # perform operation
fmsub.s f5, f3, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x9324cebd357070ac # load x3 with value 0x9324cebd357070ac
sw x3, 0(x2) # store 0x9324cebd357070ac in memory
flw f29, 0(x2) # load 0x9324cebd357070ac from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fmsub.s f31, f15, f29, f30, dyn # perform operation
fmsub.s f31, f15, f29, f30, rdn # perform operation
fmsub.s f31, f15, f29, f30, rmm # perform operation
fmsub.s f31, f15, f29, f30, rne # perform operation
fmsub.s f31, f15, f29, f30, rtz # perform operation
fmsub.s f31, f15, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0xe5dce974e1b1ed22 # load x3 with value 0xe5dce974e1b1ed22
sw x3, 0(x2) # store 0xe5dce974e1b1ed22 in memory
flw f26, 0(x2) # load 0xe5dce974e1b1ed22 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmsub.s f7, f12, f26, f3, dyn # perform operation
fmsub.s f7, f12, f26, f3, rdn # perform operation
fmsub.s f7, f12, f26, f3, rmm # perform operation
fmsub.s f7, f12, f26, f3, rne # perform operation
fmsub.s f7, f12, f26, f3, rtz # perform operation
fmsub.s f7, f12, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x14ef53f436fd5902 # load x3 with value 0x14ef53f436fd5902
sw x3, 0(x2) # store 0x14ef53f436fd5902 in memory
flw f1, 0(x2) # load 0x14ef53f436fd5902 from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fmsub.s f8, f9, f1, f23, dyn # perform operation
fmsub.s f8, f9, f1, f23, rdn # perform operation
fmsub.s f8, f9, f1, f23, rmm # perform operation
fmsub.s f8, f9, f1, f23, rne # perform operation
fmsub.s f8, f9, f1, f23, rtz # perform operation
fmsub.s f8, f9, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f9, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f9, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f9, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f9, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f9, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xd02e6fd562a21dbc # load x3 with value 0xd02e6fd562a21dbc
sw x3, 0(x2) # store 0xd02e6fd562a21dbc in memory
flw f14, 0(x2) # load 0xd02e6fd562a21dbc from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fmsub.s f1, f18, f14, f21, dyn # perform operation
fmsub.s f1, f18, f14, f21, rdn # perform operation
fmsub.s f1, f18, f14, f21, rmm # perform operation
fmsub.s f1, f18, f14, f21, rne # perform operation
fmsub.s f1, f18, f14, f21, rtz # perform operation
fmsub.s f1, f18, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f18, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xab5a8d3c0816a566 # load x3 with value 0xab5a8d3c0816a566
sw x3, 0(x2) # store 0xab5a8d3c0816a566 in memory
flw f13, 0(x2) # load 0xab5a8d3c0816a566 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmsub.s f22, f10, f13, f2, dyn # perform operation
fmsub.s f22, f10, f13, f2, rdn # perform operation
fmsub.s f22, f10, f13, f2, rmm # perform operation
fmsub.s f22, f10, f13, f2, rne # perform operation
fmsub.s f22, f10, f13, f2, rtz # perform operation
fmsub.s f22, f10, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x7dc9df1a2007ccf5 # load x3 with value 0x7dc9df1a2007ccf5
sw x3, 0(x2) # store 0x7dc9df1a2007ccf5 in memory
flw f24, 0(x2) # load 0x7dc9df1a2007ccf5 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmsub.s f20, f31, f24, f12, dyn # perform operation
fmsub.s f20, f31, f24, f12, rdn # perform operation
fmsub.s f20, f31, f24, f12, rmm # perform operation
fmsub.s f20, f31, f24, f12, rne # perform operation
fmsub.s f20, f31, f24, f12, rtz # perform operation
fmsub.s f20, f31, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xe8c94c16a5e20f4c # load x3 with value 0xe8c94c16a5e20f4c
sw x3, 0(x2) # store 0xe8c94c16a5e20f4c in memory
flw f29, 0(x2) # load 0xe8c94c16a5e20f4c from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmsub.s f22, f6, f29, f30, dyn # perform operation
fmsub.s f22, f6, f29, f30, rdn # perform operation
fmsub.s f22, f6, f29, f30, rmm # perform operation
fmsub.s f22, f6, f29, f30, rne # perform operation
fmsub.s f22, f6, f29, f30, rtz # perform operation
fmsub.s f22, f6, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x5205b5098d7e5b09 # load x3 with value 0x5205b5098d7e5b09
sw x3, 0(x2) # store 0x5205b5098d7e5b09 in memory
flw f2, 0(x2) # load 0x5205b5098d7e5b09 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
fmsub.s f24, f25, f2, f15, dyn # perform operation
fmsub.s f24, f25, f2, f15, rdn # perform operation
fmsub.s f24, f25, f2, f15, rmm # perform operation
fmsub.s f24, f25, f2, f15, rne # perform operation
fmsub.s f24, f25, f2, f15, rtz # perform operation
fmsub.s f24, f25, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xd9ede45b65c82bcf # load x3 with value 0xd9ede45b65c82bcf
sw x3, 0(x2) # store 0xd9ede45b65c82bcf in memory
flw f7, 0(x2) # load 0xd9ede45b65c82bcf from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fmsub.s f15, f21, f7, f22, dyn # perform operation
fmsub.s f15, f21, f7, f22, rdn # perform operation
fmsub.s f15, f21, f7, f22, rmm # perform operation
fmsub.s f15, f21, f7, f22, rne # perform operation
fmsub.s f15, f21, f7, f22, rtz # perform operation
fmsub.s f15, f21, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f21, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x57bc226b4145b14a # load x3 with value 0x57bc226b4145b14a
sw x3, 0(x2) # store 0x57bc226b4145b14a in memory
flw f25, 0(x2) # load 0x57bc226b4145b14a from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmsub.s f3, f21, f25, f22, dyn # perform operation
fmsub.s f3, f21, f25, f22, rdn # perform operation
fmsub.s f3, f21, f25, f22, rmm # perform operation
fmsub.s f3, f21, f25, f22, rne # perform operation
fmsub.s f3, f21, f25, f22, rtz # perform operation
fmsub.s f3, f21, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x73d3005eae5099fc # load x3 with value 0x73d3005eae5099fc
sw x3, 0(x2) # store 0x73d3005eae5099fc in memory
flw f16, 0(x2) # load 0x73d3005eae5099fc from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fmsub.s f10, f11, f16, f21, dyn # perform operation
fmsub.s f10, f11, f16, f21, rdn # perform operation
fmsub.s f10, f11, f16, f21, rmm # perform operation
fmsub.s f10, f11, f16, f21, rne # perform operation
fmsub.s f10, f11, f16, f21, rtz # perform operation
fmsub.s f10, f11, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x7c61868dbcc6be86 # load x3 with value 0x7c61868dbcc6be86
sw x3, 0(x2) # store 0x7c61868dbcc6be86 in memory
flw f24, 0(x2) # load 0x7c61868dbcc6be86 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmsub.s f2, f7, f24, f9, dyn # perform operation
fmsub.s f2, f7, f24, f9, rdn # perform operation
fmsub.s f2, f7, f24, f9, rmm # perform operation
fmsub.s f2, f7, f24, f9, rne # perform operation
fmsub.s f2, f7, f24, f9, rtz # perform operation
fmsub.s f2, f7, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x891b44e5d4c54ef # load x3 with value 0x891b44e5d4c54ef
sw x3, 0(x2) # store 0x891b44e5d4c54ef in memory
flw f23, 0(x2) # load 0x891b44e5d4c54ef from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmsub.s f6, f29, f23, f12, dyn # perform operation
fmsub.s f6, f29, f23, f12, rdn # perform operation
fmsub.s f6, f29, f23, f12, rmm # perform operation
fmsub.s f6, f29, f23, f12, rne # perform operation
fmsub.s f6, f29, f23, f12, rtz # perform operation
fmsub.s f6, f29, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f29, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f29, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0xa49b36600b665f61 # load x3 with value 0xa49b36600b665f61
sw x3, 0(x2) # store 0xa49b36600b665f61 in memory
flw f11, 0(x2) # load 0xa49b36600b665f61 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fmsub.s f31, f5, f11, f30, dyn # perform operation
fmsub.s f31, f5, f11, f30, rdn # perform operation
fmsub.s f31, f5, f11, f30, rmm # perform operation
fmsub.s f31, f5, f11, f30, rne # perform operation
fmsub.s f31, f5, f11, f30, rtz # perform operation
fmsub.s f31, f5, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f5, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f5, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x2893b423a5895f01 # load x3 with value 0x2893b423a5895f01
sw x3, 0(x2) # store 0x2893b423a5895f01 in memory
flw f10, 0(x2) # load 0x2893b423a5895f01 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fmsub.s f20, f3, f10, f6, dyn # perform operation
fmsub.s f20, f3, f10, f6, rdn # perform operation
fmsub.s f20, f3, f10, f6, rmm # perform operation
fmsub.s f20, f3, f10, f6, rne # perform operation
fmsub.s f20, f3, f10, f6, rtz # perform operation
fmsub.s f20, f3, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f3, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f3, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f3, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f3, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f3, f10, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x8053f791c37c1bc6 # load x3 with value 0x8053f791c37c1bc6
sw x3, 0(x2) # store 0x8053f791c37c1bc6 in memory
flw f1, 0(x2) # load 0x8053f791c37c1bc6 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fmsub.s f23, f18, f1, f9, dyn # perform operation
fmsub.s f23, f18, f1, f9, rdn # perform operation
fmsub.s f23, f18, f1, f9, rmm # perform operation
fmsub.s f23, f18, f1, f9, rne # perform operation
fmsub.s f23, f18, f1, f9, rtz # perform operation
fmsub.s f23, f18, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x414872c71c09230d # load x3 with value 0x414872c71c09230d
sw x3, 0(x2) # store 0x414872c71c09230d in memory
flw f26, 0(x2) # load 0x414872c71c09230d from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmsub.s f30, f7, f26, f13, dyn # perform operation
fmsub.s f30, f7, f26, f13, rdn # perform operation
fmsub.s f30, f7, f26, f13, rmm # perform operation
fmsub.s f30, f7, f26, f13, rne # perform operation
fmsub.s f30, f7, f26, f13, rtz # perform operation
fmsub.s f30, f7, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x7d121022c79f46bb # load x3 with value 0x7d121022c79f46bb
sw x3, 0(x2) # store 0x7d121022c79f46bb in memory
flw f11, 0(x2) # load 0x7d121022c79f46bb from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmsub.s f28, f26, f11, f25, dyn # perform operation
fmsub.s f28, f26, f11, f25, rdn # perform operation
fmsub.s f28, f26, f11, f25, rmm # perform operation
fmsub.s f28, f26, f11, f25, rne # perform operation
fmsub.s f28, f26, f11, f25, rtz # perform operation
fmsub.s f28, f26, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x4c8cf7b1a8eb59dc # load x3 with value 0x4c8cf7b1a8eb59dc
sw x3, 0(x2) # store 0x4c8cf7b1a8eb59dc in memory
flw f22, 0(x2) # load 0x4c8cf7b1a8eb59dc from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmsub.s f18, f3, f22, f10, dyn # perform operation
fmsub.s f18, f3, f22, f10, rdn # perform operation
fmsub.s f18, f3, f22, f10, rmm # perform operation
fmsub.s f18, f3, f22, f10, rne # perform operation
fmsub.s f18, f3, f22, f10, rtz # perform operation
fmsub.s f18, f3, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f3, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f3, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f3, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f3, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f3, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x484e09ada327f809 # load x3 with value 0x484e09ada327f809
sw x3, 0(x2) # store 0x484e09ada327f809 in memory
flw f15, 0(x2) # load 0x484e09ada327f809 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f31, f2, f15, f29, dyn # perform operation
fmsub.s f31, f2, f15, f29, rdn # perform operation
fmsub.s f31, f2, f15, f29, rmm # perform operation
fmsub.s f31, f2, f15, f29, rne # perform operation
fmsub.s f31, f2, f15, f29, rtz # perform operation
fmsub.s f31, f2, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xe9a787cfaaff45dc # load x3 with value 0xe9a787cfaaff45dc
sw x3, 0(x2) # store 0xe9a787cfaaff45dc in memory
flw f3, 0(x2) # load 0xe9a787cfaaff45dc from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fmsub.s f26, f27, f3, f9, dyn # perform operation
fmsub.s f26, f27, f3, f9, rdn # perform operation
fmsub.s f26, f27, f3, f9, rmm # perform operation
fmsub.s f26, f27, f3, f9, rne # perform operation
fmsub.s f26, f27, f3, f9, rtz # perform operation
fmsub.s f26, f27, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x2fcbce523509d18e # load x3 with value 0x2fcbce523509d18e
sw x3, 0(x2) # store 0x2fcbce523509d18e in memory
flw f21, 0(x2) # load 0x2fcbce523509d18e from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmsub.s f31, f20, f21, f2, dyn # perform operation
fmsub.s f31, f20, f21, f2, rdn # perform operation
fmsub.s f31, f20, f21, f2, rmm # perform operation
fmsub.s f31, f20, f21, f2, rne # perform operation
fmsub.s f31, f20, f21, f2, rtz # perform operation
fmsub.s f31, f20, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0xad16b3525b8cf302 # load x3 with value 0xad16b3525b8cf302
sw x3, 0(x2) # store 0xad16b3525b8cf302 in memory
flw f28, 0(x2) # load 0xad16b3525b8cf302 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fmsub.s f11, f9, f28, f31, dyn # perform operation
fmsub.s f11, f9, f28, f31, rdn # perform operation
fmsub.s f11, f9, f28, f31, rmm # perform operation
fmsub.s f11, f9, f28, f31, rne # perform operation
fmsub.s f11, f9, f28, f31, rtz # perform operation
fmsub.s f11, f9, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x26271ced719410d9 # load x3 with value 0x26271ced719410d9
sw x3, 0(x2) # store 0x26271ced719410d9 in memory
flw f9, 0(x2) # load 0x26271ced719410d9 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmsub.s f5, f28, f9, f14, dyn # perform operation
fmsub.s f5, f28, f9, f14, rdn # perform operation
fmsub.s f5, f28, f9, f14, rmm # perform operation
fmsub.s f5, f28, f9, f14, rne # perform operation
fmsub.s f5, f28, f9, f14, rtz # perform operation
fmsub.s f5, f28, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xa64dd7e8e62a5dd2 # load x3 with value 0xa64dd7e8e62a5dd2
sw x3, 0(x2) # store 0xa64dd7e8e62a5dd2 in memory
flw f26, 0(x2) # load 0xa64dd7e8e62a5dd2 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmsub.s f31, f7, f26, f3, dyn # perform operation
fmsub.s f31, f7, f26, f3, rdn # perform operation
fmsub.s f31, f7, f26, f3, rmm # perform operation
fmsub.s f31, f7, f26, f3, rne # perform operation
fmsub.s f31, f7, f26, f3, rtz # perform operation
fmsub.s f31, f7, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x2e0a4f71e418eb74 # load x3 with value 0x2e0a4f71e418eb74
sw x3, 0(x2) # store 0x2e0a4f71e418eb74 in memory
flw f28, 0(x2) # load 0x2e0a4f71e418eb74 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f16, f26, f28, f25, dyn # perform operation
fmsub.s f16, f26, f28, f25, rdn # perform operation
fmsub.s f16, f26, f28, f25, rmm # perform operation
fmsub.s f16, f26, f28, f25, rne # perform operation
fmsub.s f16, f26, f28, f25, rtz # perform operation
fmsub.s f16, f26, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x600faec3cbbe38e # load x3 with value 0x600faec3cbbe38e
sw x3, 0(x2) # store 0x600faec3cbbe38e in memory
flw f12, 0(x2) # load 0x600faec3cbbe38e from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fmsub.s f25, f1, f12, f22, dyn # perform operation
fmsub.s f25, f1, f12, f22, rdn # perform operation
fmsub.s f25, f1, f12, f22, rmm # perform operation
fmsub.s f25, f1, f12, f22, rne # perform operation
fmsub.s f25, f1, f12, f22, rtz # perform operation
fmsub.s f25, f1, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x36b4a79c040f9799 # load x3 with value 0x36b4a79c040f9799
sw x3, 0(x2) # store 0x36b4a79c040f9799 in memory
flw f21, 0(x2) # load 0x36b4a79c040f9799 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fmsub.s f7, f1, f21, f6, dyn # perform operation
fmsub.s f7, f1, f21, f6, rdn # perform operation
fmsub.s f7, f1, f21, f6, rmm # perform operation
fmsub.s f7, f1, f21, f6, rne # perform operation
fmsub.s f7, f1, f21, f6, rtz # perform operation
fmsub.s f7, f1, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xcaea1ea03f559c7b # load x3 with value 0xcaea1ea03f559c7b
sw x3, 0(x2) # store 0xcaea1ea03f559c7b in memory
flw f16, 0(x2) # load 0xcaea1ea03f559c7b from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f27, f17, f16, f11, dyn # perform operation
fmsub.s f27, f17, f16, f11, rdn # perform operation
fmsub.s f27, f17, f16, f11, rmm # perform operation
fmsub.s f27, f17, f16, f11, rne # perform operation
fmsub.s f27, f17, f16, f11, rtz # perform operation
fmsub.s f27, f17, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xd3ccad88901264fc # load x3 with value 0xd3ccad88901264fc
sw x3, 0(x2) # store 0xd3ccad88901264fc in memory
flw f1, 0(x2) # load 0xd3ccad88901264fc from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmsub.s f22, f20, f1, f31, dyn # perform operation
fmsub.s f22, f20, f1, f31, rdn # perform operation
fmsub.s f22, f20, f1, f31, rmm # perform operation
fmsub.s f22, f20, f1, f31, rne # perform operation
fmsub.s f22, f20, f1, f31, rtz # perform operation
fmsub.s f22, f20, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xfae4c6b8e6955083 # load x3 with value 0xfae4c6b8e6955083
sw x3, 0(x2) # store 0xfae4c6b8e6955083 in memory
flw f17, 0(x2) # load 0xfae4c6b8e6955083 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmsub.s f7, f20, f17, f1, dyn # perform operation
fmsub.s f7, f20, f17, f1, rdn # perform operation
fmsub.s f7, f20, f17, f1, rmm # perform operation
fmsub.s f7, f20, f17, f1, rne # perform operation
fmsub.s f7, f20, f17, f1, rtz # perform operation
fmsub.s f7, f20, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0xb1d68057fa96f105 # load x3 with value 0xb1d68057fa96f105
sw x3, 0(x2) # store 0xb1d68057fa96f105 in memory
flw f29, 0(x2) # load 0xb1d68057fa96f105 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmsub.s f27, f26, f29, f14, dyn # perform operation
fmsub.s f27, f26, f29, f14, rdn # perform operation
fmsub.s f27, f26, f29, f14, rmm # perform operation
fmsub.s f27, f26, f29, f14, rne # perform operation
fmsub.s f27, f26, f29, f14, rtz # perform operation
fmsub.s f27, f26, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x540c634e3813570a # load x3 with value 0x540c634e3813570a
sw x3, 0(x2) # store 0x540c634e3813570a in memory
flw f1, 0(x2) # load 0x540c634e3813570a from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmsub.s f9, f14, f1, f28, dyn # perform operation
fmsub.s f9, f14, f1, f28, rdn # perform operation
fmsub.s f9, f14, f1, f28, rmm # perform operation
fmsub.s f9, f14, f1, f28, rne # perform operation
fmsub.s f9, f14, f1, f28, rtz # perform operation
fmsub.s f9, f14, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f14, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f14, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x3507206a4261d025 # load x3 with value 0x3507206a4261d025
sw x3, 0(x2) # store 0x3507206a4261d025 in memory
flw f21, 0(x2) # load 0x3507206a4261d025 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
fmsub.s f2, f29, f21, f28, dyn # perform operation
fmsub.s f2, f29, f21, f28, rdn # perform operation
fmsub.s f2, f29, f21, f28, rmm # perform operation
fmsub.s f2, f29, f21, f28, rne # perform operation
fmsub.s f2, f29, f21, f28, rtz # perform operation
fmsub.s f2, f29, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f29, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f29, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xb2c1148a786c6d12 # load x3 with value 0xb2c1148a786c6d12
sw x3, 0(x2) # store 0xb2c1148a786c6d12 in memory
flw f26, 0(x2) # load 0xb2c1148a786c6d12 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmsub.s f8, f30, f26, f24, dyn # perform operation
fmsub.s f8, f30, f26, f24, rdn # perform operation
fmsub.s f8, f30, f26, f24, rmm # perform operation
fmsub.s f8, f30, f26, f24, rne # perform operation
fmsub.s f8, f30, f26, f24, rtz # perform operation
fmsub.s f8, f30, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x6353e5cf6fc735f3 # load x3 with value 0x6353e5cf6fc735f3
sw x3, 0(x2) # store 0x6353e5cf6fc735f3 in memory
flw f24, 0(x2) # load 0x6353e5cf6fc735f3 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fmsub.s f26, f2, f24, f16, dyn # perform operation
fmsub.s f26, f2, f24, f16, rdn # perform operation
fmsub.s f26, f2, f24, f16, rmm # perform operation
fmsub.s f26, f2, f24, f16, rne # perform operation
fmsub.s f26, f2, f24, f16, rtz # perform operation
fmsub.s f26, f2, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xc511f247f10f3064 # load x3 with value 0xc511f247f10f3064
sw x3, 0(x2) # store 0xc511f247f10f3064 in memory
flw f18, 0(x2) # load 0xc511f247f10f3064 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fmsub.s f21, f3, f18, f15, dyn # perform operation
fmsub.s f21, f3, f18, f15, rdn # perform operation
fmsub.s f21, f3, f18, f15, rmm # perform operation
fmsub.s f21, f3, f18, f15, rne # perform operation
fmsub.s f21, f3, f18, f15, rtz # perform operation
fmsub.s f21, f3, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f3, f18, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x9b9f53802ef647f4 # load x3 with value 0x9b9f53802ef647f4
sw x3, 0(x2) # store 0x9b9f53802ef647f4 in memory
flw f10, 0(x2) # load 0x9b9f53802ef647f4 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fmsub.s f7, f9, f10, f1, dyn # perform operation
fmsub.s f7, f9, f10, f1, rdn # perform operation
fmsub.s f7, f9, f10, f1, rmm # perform operation
fmsub.s f7, f9, f10, f1, rne # perform operation
fmsub.s f7, f9, f10, f1, rtz # perform operation
fmsub.s f7, f9, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xe0fdfdc7ebb07968 # load x3 with value 0xe0fdfdc7ebb07968
sw x3, 0(x2) # store 0xe0fdfdc7ebb07968 in memory
flw f13, 0(x2) # load 0xe0fdfdc7ebb07968 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmsub.s f6, f27, f13, f30, dyn # perform operation
fmsub.s f6, f27, f13, f30, rdn # perform operation
fmsub.s f6, f27, f13, f30, rmm # perform operation
fmsub.s f6, f27, f13, f30, rne # perform operation
fmsub.s f6, f27, f13, f30, rtz # perform operation
fmsub.s f6, f27, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f27, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f27, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0xf374df2793571347 # load x3 with value 0xf374df2793571347
sw x3, 0(x2) # store 0xf374df2793571347 in memory
flw f3, 0(x2) # load 0xf374df2793571347 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmsub.s f7, f16, f3, f1, dyn # perform operation
fmsub.s f7, f16, f3, f1, rdn # perform operation
fmsub.s f7, f16, f3, f1, rmm # perform operation
fmsub.s f7, f16, f3, f1, rne # perform operation
fmsub.s f7, f16, f3, f1, rtz # perform operation
fmsub.s f7, f16, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f16, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f16, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x45b92f669d7842d8 # load x3 with value 0x45b92f669d7842d8
sw x3, 0(x2) # store 0x45b92f669d7842d8 in memory
flw f18, 0(x2) # load 0x45b92f669d7842d8 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmsub.s f12, f1, f18, f24, dyn # perform operation
fmsub.s f12, f1, f18, f24, rdn # perform operation
fmsub.s f12, f1, f18, f24, rmm # perform operation
fmsub.s f12, f1, f18, f24, rne # perform operation
fmsub.s f12, f1, f18, f24, rtz # perform operation
fmsub.s f12, f1, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f18, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xbca72f6290523a9c # load x3 with value 0xbca72f6290523a9c
sw x3, 0(x2) # store 0xbca72f6290523a9c in memory
flw f5, 0(x2) # load 0xbca72f6290523a9c from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f21, f3, f5, f9, dyn # perform operation
fmsub.s f21, f3, f5, f9, rdn # perform operation
fmsub.s f21, f3, f5, f9, rmm # perform operation
fmsub.s f21, f3, f5, f9, rne # perform operation
fmsub.s f21, f3, f5, f9, rtz # perform operation
fmsub.s f21, f3, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f3, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f3, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x253857e451b2bb68 # load x3 with value 0x253857e451b2bb68
sw x3, 0(x2) # store 0x253857e451b2bb68 in memory
flw f12, 0(x2) # load 0x253857e451b2bb68 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmsub.s f24, f30, f12, f15, dyn # perform operation
fmsub.s f24, f30, f12, f15, rdn # perform operation
fmsub.s f24, f30, f12, f15, rmm # perform operation
fmsub.s f24, f30, f12, f15, rne # perform operation
fmsub.s f24, f30, f12, f15, rtz # perform operation
fmsub.s f24, f30, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x4065bdc0c5b7abc7 # load x3 with value 0x4065bdc0c5b7abc7
sw x3, 0(x2) # store 0x4065bdc0c5b7abc7 in memory
flw f1, 0(x2) # load 0x4065bdc0c5b7abc7 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmsub.s f28, f13, f1, f30, dyn # perform operation
fmsub.s f28, f13, f1, f30, rdn # perform operation
fmsub.s f28, f13, f1, f30, rmm # perform operation
fmsub.s f28, f13, f1, f30, rne # perform operation
fmsub.s f28, f13, f1, f30, rtz # perform operation
fmsub.s f28, f13, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x8a57bac0167b4d84 # load x3 with value 0x8a57bac0167b4d84
sw x3, 0(x2) # store 0x8a57bac0167b4d84 in memory
flw f30, 0(x2) # load 0x8a57bac0167b4d84 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmsub.s f10, f15, f30, f5, dyn # perform operation
fmsub.s f10, f15, f30, f5, rdn # perform operation
fmsub.s f10, f15, f30, f5, rmm # perform operation
fmsub.s f10, f15, f30, f5, rne # perform operation
fmsub.s f10, f15, f30, f5, rtz # perform operation
fmsub.s f10, f15, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f15, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f15, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0xb051ab7f4b18f56d # load x3 with value 0xb051ab7f4b18f56d
sw x3, 0(x2) # store 0xb051ab7f4b18f56d in memory
flw f26, 0(x2) # load 0xb051ab7f4b18f56d from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmsub.s f14, f27, f26, f23, dyn # perform operation
fmsub.s f14, f27, f26, f23, rdn # perform operation
fmsub.s f14, f27, f26, f23, rmm # perform operation
fmsub.s f14, f27, f26, f23, rne # perform operation
fmsub.s f14, f27, f26, f23, rtz # perform operation
fmsub.s f14, f27, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x2f7a3fb9d4d2d1b0 # load x3 with value 0x2f7a3fb9d4d2d1b0
sw x3, 0(x2) # store 0x2f7a3fb9d4d2d1b0 in memory
flw f10, 0(x2) # load 0x2f7a3fb9d4d2d1b0 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmsub.s f28, f2, f10, f31, dyn # perform operation
fmsub.s f28, f2, f10, f31, rdn # perform operation
fmsub.s f28, f2, f10, f31, rmm # perform operation
fmsub.s f28, f2, f10, f31, rne # perform operation
fmsub.s f28, f2, f10, f31, rtz # perform operation
fmsub.s f28, f2, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xb2ad66df54189a40 # load x3 with value 0xb2ad66df54189a40
sw x3, 0(x2) # store 0xb2ad66df54189a40 in memory
flw f25, 0(x2) # load 0xb2ad66df54189a40 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fmsub.s f2, f31, f25, f17, dyn # perform operation
fmsub.s f2, f31, f25, f17, rdn # perform operation
fmsub.s f2, f31, f25, f17, rmm # perform operation
fmsub.s f2, f31, f25, f17, rne # perform operation
fmsub.s f2, f31, f25, f17, rtz # perform operation
fmsub.s f2, f31, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x385fff63954ec2c3 # load x3 with value 0x385fff63954ec2c3
sw x3, 0(x2) # store 0x385fff63954ec2c3 in memory
flw f30, 0(x2) # load 0x385fff63954ec2c3 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fmsub.s f7, f31, f30, f10, dyn # perform operation
fmsub.s f7, f31, f30, f10, rdn # perform operation
fmsub.s f7, f31, f30, f10, rmm # perform operation
fmsub.s f7, f31, f30, f10, rne # perform operation
fmsub.s f7, f31, f30, f10, rtz # perform operation
fmsub.s f7, f31, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f31, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f31, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x83f6a500a339b38 # load x3 with value 0x83f6a500a339b38
sw x3, 0(x2) # store 0x83f6a500a339b38 in memory
flw f28, 0(x2) # load 0x83f6a500a339b38 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmsub.s f8, f30, f28, f26, dyn # perform operation
fmsub.s f8, f30, f28, f26, rdn # perform operation
fmsub.s f8, f30, f28, f26, rmm # perform operation
fmsub.s f8, f30, f28, f26, rne # perform operation
fmsub.s f8, f30, f28, f26, rtz # perform operation
fmsub.s f8, f30, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xd05d89439fc2abdc # load x3 with value 0xd05d89439fc2abdc
sw x3, 0(x2) # store 0xd05d89439fc2abdc in memory
flw f18, 0(x2) # load 0xd05d89439fc2abdc from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmsub.s f16, f1, f18, f26, dyn # perform operation
fmsub.s f16, f1, f18, f26, rdn # perform operation
fmsub.s f16, f1, f18, f26, rmm # perform operation
fmsub.s f16, f1, f18, f26, rne # perform operation
fmsub.s f16, f1, f18, f26, rtz # perform operation
fmsub.s f16, f1, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f1, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x2e66b40158945b17 # load x3 with value 0x2e66b40158945b17
sw x3, 0(x2) # store 0x2e66b40158945b17 in memory
flw f1, 0(x2) # load 0x2e66b40158945b17 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f26, f23, f1, f25, dyn # perform operation
fmsub.s f26, f23, f1, f25, rdn # perform operation
fmsub.s f26, f23, f1, f25, rmm # perform operation
fmsub.s f26, f23, f1, f25, rne # perform operation
fmsub.s f26, f23, f1, f25, rtz # perform operation
fmsub.s f26, f23, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f1, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x12e013ded078b404 # load x3 with value 0x12e013ded078b404
sw x3, 0(x2) # store 0x12e013ded078b404 in memory
flw f25, 0(x2) # load 0x12e013ded078b404 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmsub.s f15, f31, f25, f7, dyn # perform operation
fmsub.s f15, f31, f25, f7, rdn # perform operation
fmsub.s f15, f31, f25, f7, rmm # perform operation
fmsub.s f15, f31, f25, f7, rne # perform operation
fmsub.s f15, f31, f25, f7, rtz # perform operation
fmsub.s f15, f31, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x14942c25358c03e0 # load x3 with value 0x14942c25358c03e0
sw x3, 0(x2) # store 0x14942c25358c03e0 in memory
flw f7, 0(x2) # load 0x14942c25358c03e0 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmsub.s f23, f29, f7, f12, dyn # perform operation
fmsub.s f23, f29, f7, f12, rdn # perform operation
fmsub.s f23, f29, f7, f12, rmm # perform operation
fmsub.s f23, f29, f7, f12, rne # perform operation
fmsub.s f23, f29, f7, f12, rtz # perform operation
fmsub.s f23, f29, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xe2394c9b7060c147 # load x3 with value 0xe2394c9b7060c147
sw x3, 0(x2) # store 0xe2394c9b7060c147 in memory
flw f19, 0(x2) # load 0xe2394c9b7060c147 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmsub.s f17, f7, f19, f18, dyn # perform operation
fmsub.s f17, f7, f19, f18, rdn # perform operation
fmsub.s f17, f7, f19, f18, rmm # perform operation
fmsub.s f17, f7, f19, f18, rne # perform operation
fmsub.s f17, f7, f19, f18, rtz # perform operation
fmsub.s f17, f7, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0xcb8acb229d14303c # load x3 with value 0xcb8acb229d14303c
sw x3, 0(x2) # store 0xcb8acb229d14303c in memory
flw f8, 0(x2) # load 0xcb8acb229d14303c from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fmsub.s f16, f15, f8, f27, dyn # perform operation
fmsub.s f16, f15, f8, f27, rdn # perform operation
fmsub.s f16, f15, f8, f27, rmm # perform operation
fmsub.s f16, f15, f8, f27, rne # perform operation
fmsub.s f16, f15, f8, f27, rtz # perform operation
fmsub.s f16, f15, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xa5ceff3259906817 # load x3 with value 0xa5ceff3259906817
sw x3, 0(x2) # store 0xa5ceff3259906817 in memory
flw f16, 0(x2) # load 0xa5ceff3259906817 from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmsub.s f28, f11, f16, f24, dyn # perform operation
fmsub.s f28, f11, f16, f24, rdn # perform operation
fmsub.s f28, f11, f16, f24, rmm # perform operation
fmsub.s f28, f11, f16, f24, rne # perform operation
fmsub.s f28, f11, f16, f24, rtz # perform operation
fmsub.s f28, f11, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xe481a8cac5d47318 # load x3 with value 0xe481a8cac5d47318
sw x3, 0(x2) # store 0xe481a8cac5d47318 in memory
flw f26, 0(x2) # load 0xe481a8cac5d47318 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmsub.s f7, f19, f26, f24, dyn # perform operation
fmsub.s f7, f19, f26, f24, rdn # perform operation
fmsub.s f7, f19, f26, f24, rmm # perform operation
fmsub.s f7, f19, f26, f24, rne # perform operation
fmsub.s f7, f19, f26, f24, rtz # perform operation
fmsub.s f7, f19, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f19, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xf0dd5894bd3faa96 # load x3 with value 0xf0dd5894bd3faa96
sw x3, 0(x2) # store 0xf0dd5894bd3faa96 in memory
flw f28, 0(x2) # load 0xf0dd5894bd3faa96 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmsub.s f3, f24, f28, f11, dyn # perform operation
fmsub.s f3, f24, f28, f11, rdn # perform operation
fmsub.s f3, f24, f28, f11, rmm # perform operation
fmsub.s f3, f24, f28, f11, rne # perform operation
fmsub.s f3, f24, f28, f11, rtz # perform operation
fmsub.s f3, f24, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f24, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f24, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x3026f377657c04de # load x3 with value 0x3026f377657c04de
sw x3, 0(x2) # store 0x3026f377657c04de in memory
flw f22, 0(x2) # load 0x3026f377657c04de from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f8, f31, f22, f18, dyn # perform operation
fmsub.s f8, f31, f22, f18, rdn # perform operation
fmsub.s f8, f31, f22, f18, rmm # perform operation
fmsub.s f8, f31, f22, f18, rne # perform operation
fmsub.s f8, f31, f22, f18, rtz # perform operation
fmsub.s f8, f31, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f31, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x868814b838b0d494 # load x3 with value 0x868814b838b0d494
sw x3, 0(x2) # store 0x868814b838b0d494 in memory
flw f2, 0(x2) # load 0x868814b838b0d494 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f12, f29, f2, f24, dyn # perform operation
fmsub.s f12, f29, f2, f24, rdn # perform operation
fmsub.s f12, f29, f2, f24, rmm # perform operation
fmsub.s f12, f29, f2, f24, rne # perform operation
fmsub.s f12, f29, f2, f24, rtz # perform operation
fmsub.s f12, f29, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f29, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f29, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f29, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f29, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f29, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x9b8dee50534e356a # load x3 with value 0x9b8dee50534e356a
sw x3, 0(x2) # store 0x9b8dee50534e356a in memory
flw f29, 0(x2) # load 0x9b8dee50534e356a from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fmsub.s f15, f9, f29, f22, dyn # perform operation
fmsub.s f15, f9, f29, f22, rdn # perform operation
fmsub.s f15, f9, f29, f22, rmm # perform operation
fmsub.s f15, f9, f29, f22, rne # perform operation
fmsub.s f15, f9, f29, f22, rtz # perform operation
fmsub.s f15, f9, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xf21ffa1434523915 # load x3 with value 0xf21ffa1434523915
sw x3, 0(x2) # store 0xf21ffa1434523915 in memory
flw f30, 0(x2) # load 0xf21ffa1434523915 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmsub.s f7, f29, f30, f9, dyn # perform operation
fmsub.s f7, f29, f30, f9, rdn # perform operation
fmsub.s f7, f29, f30, f9, rmm # perform operation
fmsub.s f7, f29, f30, f9, rne # perform operation
fmsub.s f7, f29, f30, f9, rtz # perform operation
fmsub.s f7, f29, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xcf8e2c9aa4f8410d # load x3 with value 0xcf8e2c9aa4f8410d
sw x3, 0(x2) # store 0xcf8e2c9aa4f8410d in memory
flw f7, 0(x2) # load 0xcf8e2c9aa4f8410d from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmsub.s f6, f1, f7, f3, dyn # perform operation
fmsub.s f6, f1, f7, f3, rdn # perform operation
fmsub.s f6, f1, f7, f3, rmm # perform operation
fmsub.s f6, f1, f7, f3, rne # perform operation
fmsub.s f6, f1, f7, f3, rtz # perform operation
fmsub.s f6, f1, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xb3e3ad1333924381 # load x3 with value 0xb3e3ad1333924381
sw x3, 0(x2) # store 0xb3e3ad1333924381 in memory
flw f28, 0(x2) # load 0xb3e3ad1333924381 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fmsub.s f1, f22, f28, f25, dyn # perform operation
fmsub.s f1, f22, f28, f25, rdn # perform operation
fmsub.s f1, f22, f28, f25, rmm # perform operation
fmsub.s f1, f22, f28, f25, rne # perform operation
fmsub.s f1, f22, f28, f25, rtz # perform operation
fmsub.s f1, f22, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x60e9f5504d5f6666 # load x3 with value 0x60e9f5504d5f6666
sw x3, 0(x2) # store 0x60e9f5504d5f6666 in memory
flw f26, 0(x2) # load 0x60e9f5504d5f6666 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fmsub.s f25, f3, f26, f15, dyn # perform operation
fmsub.s f25, f3, f26, f15, rdn # perform operation
fmsub.s f25, f3, f26, f15, rmm # perform operation
fmsub.s f25, f3, f26, f15, rne # perform operation
fmsub.s f25, f3, f26, f15, rtz # perform operation
fmsub.s f25, f3, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f3, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f3, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x5d4c7685a63abcdd # load x3 with value 0x5d4c7685a63abcdd
sw x3, 0(x2) # store 0x5d4c7685a63abcdd in memory
flw f28, 0(x2) # load 0x5d4c7685a63abcdd from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmsub.s f1, f30, f28, f11, dyn # perform operation
fmsub.s f1, f30, f28, f11, rdn # perform operation
fmsub.s f1, f30, f28, f11, rmm # perform operation
fmsub.s f1, f30, f28, f11, rne # perform operation
fmsub.s f1, f30, f28, f11, rtz # perform operation
fmsub.s f1, f30, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0xa9fb281cefdeed35 # load x3 with value 0xa9fb281cefdeed35
sw x3, 0(x2) # store 0xa9fb281cefdeed35 in memory
flw f31, 0(x2) # load 0xa9fb281cefdeed35 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmsub.s f19, f12, f31, f1, dyn # perform operation
fmsub.s f19, f12, f31, f1, rdn # perform operation
fmsub.s f19, f12, f31, f1, rmm # perform operation
fmsub.s f19, f12, f31, f1, rne # perform operation
fmsub.s f19, f12, f31, f1, rtz # perform operation
fmsub.s f19, f12, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f12, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f12, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f12, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f12, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f12, f31, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x22cc182af3d29d03 # load x3 with value 0x22cc182af3d29d03
sw x3, 0(x2) # store 0x22cc182af3d29d03 in memory
flw f23, 0(x2) # load 0x22cc182af3d29d03 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmsub.s f19, f9, f23, f2, dyn # perform operation
fmsub.s f19, f9, f23, f2, rdn # perform operation
fmsub.s f19, f9, f23, f2, rmm # perform operation
fmsub.s f19, f9, f23, f2, rne # perform operation
fmsub.s f19, f9, f23, f2, rtz # perform operation
fmsub.s f19, f9, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f9, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f9, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xd06d812c59bcfef8 # load x3 with value 0xd06d812c59bcfef8
sw x3, 0(x2) # store 0xd06d812c59bcfef8 in memory
flw f5, 0(x2) # load 0xd06d812c59bcfef8 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmsub.s f23, f19, f5, f1, dyn # perform operation
fmsub.s f23, f19, f5, f1, rdn # perform operation
fmsub.s f23, f19, f5, f1, rmm # perform operation
fmsub.s f23, f19, f5, f1, rne # perform operation
fmsub.s f23, f19, f5, f1, rtz # perform operation
fmsub.s f23, f19, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f19, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x7da694dc33d53a3a # load x3 with value 0x7da694dc33d53a3a
sw x3, 0(x2) # store 0x7da694dc33d53a3a in memory
flw f2, 0(x2) # load 0x7da694dc33d53a3a from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmsub.s f15, f25, f2, f17, dyn # perform operation
fmsub.s f15, f25, f2, f17, rdn # perform operation
fmsub.s f15, f25, f2, f17, rmm # perform operation
fmsub.s f15, f25, f2, f17, rne # perform operation
fmsub.s f15, f25, f2, f17, rtz # perform operation
fmsub.s f15, f25, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xe5f823170d5dd35f # load x3 with value 0xe5f823170d5dd35f
sw x3, 0(x2) # store 0xe5f823170d5dd35f in memory
flw f12, 0(x2) # load 0xe5f823170d5dd35f from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fmsub.s f7, f5, f12, f14, dyn # perform operation
fmsub.s f7, f5, f12, f14, rdn # perform operation
fmsub.s f7, f5, f12, f14, rmm # perform operation
fmsub.s f7, f5, f12, f14, rne # perform operation
fmsub.s f7, f5, f12, f14, rtz # perform operation
fmsub.s f7, f5, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x867375c62859554e # load x3 with value 0x867375c62859554e
sw x3, 0(x2) # store 0x867375c62859554e in memory
flw f16, 0(x2) # load 0x867375c62859554e from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fmsub.s f8, f6, f16, f7, dyn # perform operation
fmsub.s f8, f6, f16, f7, rdn # perform operation
fmsub.s f8, f6, f16, f7, rmm # perform operation
fmsub.s f8, f6, f16, f7, rne # perform operation
fmsub.s f8, f6, f16, f7, rtz # perform operation
fmsub.s f8, f6, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f6, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f6, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xea947e350c22dd8e # load x3 with value 0xea947e350c22dd8e
sw x3, 0(x2) # store 0xea947e350c22dd8e in memory
flw f6, 0(x2) # load 0xea947e350c22dd8e from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmsub.s f24, f22, f6, f19, dyn # perform operation
fmsub.s f24, f22, f6, f19, rdn # perform operation
fmsub.s f24, f22, f6, f19, rmm # perform operation
fmsub.s f24, f22, f6, f19, rne # perform operation
fmsub.s f24, f22, f6, f19, rtz # perform operation
fmsub.s f24, f22, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x73aa81847af9d403 # load x3 with value 0x73aa81847af9d403
sw x3, 0(x2) # store 0x73aa81847af9d403 in memory
flw f21, 0(x2) # load 0x73aa81847af9d403 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f22, f20, f21, f7, dyn # perform operation
fmsub.s f22, f20, f21, f7, rdn # perform operation
fmsub.s f22, f20, f21, f7, rmm # perform operation
fmsub.s f22, f20, f21, f7, rne # perform operation
fmsub.s f22, f20, f21, f7, rtz # perform operation
fmsub.s f22, f20, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x92a146d8d5799abd # load x3 with value 0x92a146d8d5799abd
sw x3, 0(x2) # store 0x92a146d8d5799abd in memory
flw f30, 0(x2) # load 0x92a146d8d5799abd from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmsub.s f14, f3, f30, f6, dyn # perform operation
fmsub.s f14, f3, f30, f6, rdn # perform operation
fmsub.s f14, f3, f30, f6, rmm # perform operation
fmsub.s f14, f3, f30, f6, rne # perform operation
fmsub.s f14, f3, f30, f6, rtz # perform operation
fmsub.s f14, f3, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x77a557c15ab3acc9 # load x3 with value 0x77a557c15ab3acc9
sw x3, 0(x2) # store 0x77a557c15ab3acc9 in memory
flw f28, 0(x2) # load 0x77a557c15ab3acc9 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmsub.s f27, f1, f28, f30, dyn # perform operation
fmsub.s f27, f1, f28, f30, rdn # perform operation
fmsub.s f27, f1, f28, f30, rmm # perform operation
fmsub.s f27, f1, f28, f30, rne # perform operation
fmsub.s f27, f1, f28, f30, rtz # perform operation
fmsub.s f27, f1, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x8a8d581c5cee0f7 # load x3 with value 0x8a8d581c5cee0f7
sw x3, 0(x2) # store 0x8a8d581c5cee0f7 in memory
flw f22, 0(x2) # load 0x8a8d581c5cee0f7 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmsub.s f29, f10, f22, f27, dyn # perform operation
fmsub.s f29, f10, f22, f27, rdn # perform operation
fmsub.s f29, f10, f22, f27, rmm # perform operation
fmsub.s f29, f10, f22, f27, rne # perform operation
fmsub.s f29, f10, f22, f27, rtz # perform operation
fmsub.s f29, f10, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x82a8f6236d9f7bff # load x3 with value 0x82a8f6236d9f7bff
sw x3, 0(x2) # store 0x82a8f6236d9f7bff in memory
flw f10, 0(x2) # load 0x82a8f6236d9f7bff from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmsub.s f21, f28, f10, f15, dyn # perform operation
fmsub.s f21, f28, f10, f15, rdn # perform operation
fmsub.s f21, f28, f10, f15, rmm # perform operation
fmsub.s f21, f28, f10, f15, rne # perform operation
fmsub.s f21, f28, f10, f15, rtz # perform operation
fmsub.s f21, f28, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f28, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x2861c631b7c16534 # load x3 with value 0x2861c631b7c16534
sw x3, 0(x2) # store 0x2861c631b7c16534 in memory
flw f8, 0(x2) # load 0x2861c631b7c16534 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmsub.s f15, f10, f8, f19, dyn # perform operation
fmsub.s f15, f10, f8, f19, rdn # perform operation
fmsub.s f15, f10, f8, f19, rmm # perform operation
fmsub.s f15, f10, f8, f19, rne # perform operation
fmsub.s f15, f10, f8, f19, rtz # perform operation
fmsub.s f15, f10, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f10, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f10, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f10, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f10, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f10, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xcc223f58912dbfee # load x3 with value 0xcc223f58912dbfee
sw x3, 0(x2) # store 0xcc223f58912dbfee in memory
flw f16, 0(x2) # load 0xcc223f58912dbfee from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmsub.s f18, f6, f16, f10, dyn # perform operation
fmsub.s f18, f6, f16, f10, rdn # perform operation
fmsub.s f18, f6, f16, f10, rmm # perform operation
fmsub.s f18, f6, f16, f10, rne # perform operation
fmsub.s f18, f6, f16, f10, rtz # perform operation
fmsub.s f18, f6, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f16, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x3abcf1cadd55a210 # load x3 with value 0x3abcf1cadd55a210
sw x3, 0(x2) # store 0x3abcf1cadd55a210 in memory
flw f10, 0(x2) # load 0x3abcf1cadd55a210 from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmsub.s f22, f18, f10, f9, dyn # perform operation
fmsub.s f22, f18, f10, f9, rdn # perform operation
fmsub.s f22, f18, f10, f9, rmm # perform operation
fmsub.s f22, f18, f10, f9, rne # perform operation
fmsub.s f22, f18, f10, f9, rtz # perform operation
fmsub.s f22, f18, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x56ac8e74802aa067 # load x3 with value 0x56ac8e74802aa067
sw x3, 0(x2) # store 0x56ac8e74802aa067 in memory
flw f9, 0(x2) # load 0x56ac8e74802aa067 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmsub.s f5, f31, f9, f3, dyn # perform operation
fmsub.s f5, f31, f9, f3, rdn # perform operation
fmsub.s f5, f31, f9, f3, rmm # perform operation
fmsub.s f5, f31, f9, f3, rne # perform operation
fmsub.s f5, f31, f9, f3, rtz # perform operation
fmsub.s f5, f31, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x2f002fdecbc22d45 # load x3 with value 0x2f002fdecbc22d45
sw x3, 0(x2) # store 0x2f002fdecbc22d45 in memory
flw f6, 0(x2) # load 0x2f002fdecbc22d45 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fmsub.s f9, f29, f6, f16, dyn # perform operation
fmsub.s f9, f29, f6, f16, rdn # perform operation
fmsub.s f9, f29, f6, f16, rmm # perform operation
fmsub.s f9, f29, f6, f16, rne # perform operation
fmsub.s f9, f29, f6, f16, rtz # perform operation
fmsub.s f9, f29, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f29, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f29, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f29, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f29, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f29, f6, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xa8a70127babe0be8 # load x3 with value 0xa8a70127babe0be8
sw x3, 0(x2) # store 0xa8a70127babe0be8 in memory
flw f29, 0(x2) # load 0xa8a70127babe0be8 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmsub.s f18, f23, f29, f6, dyn # perform operation
fmsub.s f18, f23, f29, f6, rdn # perform operation
fmsub.s f18, f23, f29, f6, rmm # perform operation
fmsub.s f18, f23, f29, f6, rne # perform operation
fmsub.s f18, f23, f29, f6, rtz # perform operation
fmsub.s f18, f23, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x1052b4fa6a1e2b7f # load x3 with value 0x1052b4fa6a1e2b7f
sw x3, 0(x2) # store 0x1052b4fa6a1e2b7f in memory
flw f15, 0(x2) # load 0x1052b4fa6a1e2b7f from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmsub.s f28, f17, f15, f13, dyn # perform operation
fmsub.s f28, f17, f15, f13, rdn # perform operation
fmsub.s f28, f17, f15, f13, rmm # perform operation
fmsub.s f28, f17, f15, f13, rne # perform operation
fmsub.s f28, f17, f15, f13, rtz # perform operation
fmsub.s f28, f17, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f17, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f17, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f17, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f17, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f17, f15, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xd915ea70b1d47e20 # load x3 with value 0xd915ea70b1d47e20
sw x3, 0(x2) # store 0xd915ea70b1d47e20 in memory
flw f31, 0(x2) # load 0xd915ea70b1d47e20 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fmsub.s f26, f22, f31, f12, dyn # perform operation
fmsub.s f26, f22, f31, f12, rdn # perform operation
fmsub.s f26, f22, f31, f12, rmm # perform operation
fmsub.s f26, f22, f31, f12, rne # perform operation
fmsub.s f26, f22, f31, f12, rtz # perform operation
fmsub.s f26, f22, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0xe4c371c34e1f81a1 # load x3 with value 0xe4c371c34e1f81a1
sw x3, 0(x2) # store 0xe4c371c34e1f81a1 in memory
flw f13, 0(x2) # load 0xe4c371c34e1f81a1 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmsub.s f21, f12, f13, f26, dyn # perform operation
fmsub.s f21, f12, f13, f26, rdn # perform operation
fmsub.s f21, f12, f13, f26, rmm # perform operation
fmsub.s f21, f12, f13, f26, rne # perform operation
fmsub.s f21, f12, f13, f26, rtz # perform operation
fmsub.s f21, f12, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f13, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x8076163828e36112 # load x3 with value 0x8076163828e36112
sw x3, 0(x2) # store 0x8076163828e36112 in memory
flw f18, 0(x2) # load 0x8076163828e36112 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmsub.s f3, f28, f18, f14, dyn # perform operation
fmsub.s f3, f28, f18, f14, rdn # perform operation
fmsub.s f3, f28, f18, f14, rmm # perform operation
fmsub.s f3, f28, f18, f14, rne # perform operation
fmsub.s f3, f28, f18, f14, rtz # perform operation
fmsub.s f3, f28, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x6678c5485d84e3a1 # load x3 with value 0x6678c5485d84e3a1
sw x3, 0(x2) # store 0x6678c5485d84e3a1 in memory
flw f9, 0(x2) # load 0x6678c5485d84e3a1 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
fmsub.s f12, f2, f9, f29, dyn # perform operation
fmsub.s f12, f2, f9, f29, rdn # perform operation
fmsub.s f12, f2, f9, f29, rmm # perform operation
fmsub.s f12, f2, f9, f29, rne # perform operation
fmsub.s f12, f2, f9, f29, rtz # perform operation
fmsub.s f12, f2, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xafed0518bcfc535a # load x3 with value 0xafed0518bcfc535a
sw x3, 0(x2) # store 0xafed0518bcfc535a in memory
flw f24, 0(x2) # load 0xafed0518bcfc535a from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fmsub.s f18, f6, f24, f7, dyn # perform operation
fmsub.s f18, f6, f24, f7, rdn # perform operation
fmsub.s f18, f6, f24, f7, rmm # perform operation
fmsub.s f18, f6, f24, f7, rne # perform operation
fmsub.s f18, f6, f24, f7, rtz # perform operation
fmsub.s f18, f6, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f6, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x3cc703c36f50f3f4 # load x3 with value 0x3cc703c36f50f3f4
sw x3, 0(x2) # store 0x3cc703c36f50f3f4 in memory
flw f1, 0(x2) # load 0x3cc703c36f50f3f4 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmsub.s f20, f19, f1, f22, dyn # perform operation
fmsub.s f20, f19, f1, f22, rdn # perform operation
fmsub.s f20, f19, f1, f22, rmm # perform operation
fmsub.s f20, f19, f1, f22, rne # perform operation
fmsub.s f20, f19, f1, f22, rtz # perform operation
fmsub.s f20, f19, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f19, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f19, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x8f938dd33e143002 # load x3 with value 0x8f938dd33e143002
sw x3, 0(x2) # store 0x8f938dd33e143002 in memory
flw f31, 0(x2) # load 0x8f938dd33e143002 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fmsub.s f20, f25, f31, f2, dyn # perform operation
fmsub.s f20, f25, f31, f2, rdn # perform operation
fmsub.s f20, f25, f31, f2, rmm # perform operation
fmsub.s f20, f25, f31, f2, rne # perform operation
fmsub.s f20, f25, f31, f2, rtz # perform operation
fmsub.s f20, f25, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f25, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f25, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0xe8ce809ebdc0bb0a # load x3 with value 0xe8ce809ebdc0bb0a
sw x3, 0(x2) # store 0xe8ce809ebdc0bb0a in memory
flw f11, 0(x2) # load 0xe8ce809ebdc0bb0a from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fmsub.s f26, f20, f11, f16, dyn # perform operation
fmsub.s f26, f20, f11, f16, rdn # perform operation
fmsub.s f26, f20, f11, f16, rmm # perform operation
fmsub.s f26, f20, f11, f16, rne # perform operation
fmsub.s f26, f20, f11, f16, rtz # perform operation
fmsub.s f26, f20, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xe13896d906b78a70 # load x3 with value 0xe13896d906b78a70
sw x3, 0(x2) # store 0xe13896d906b78a70 in memory
flw f16, 0(x2) # load 0xe13896d906b78a70 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmsub.s f31, f15, f16, f22, dyn # perform operation
fmsub.s f31, f15, f16, f22, rdn # perform operation
fmsub.s f31, f15, f16, f22, rmm # perform operation
fmsub.s f31, f15, f16, f22, rne # perform operation
fmsub.s f31, f15, f16, f22, rtz # perform operation
fmsub.s f31, f15, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xaa145d18a76c33ae # load x3 with value 0xaa145d18a76c33ae
sw x3, 0(x2) # store 0xaa145d18a76c33ae in memory
flw f3, 0(x2) # load 0xaa145d18a76c33ae from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmsub.s f17, f7, f3, f28, dyn # perform operation
fmsub.s f17, f7, f3, f28, rdn # perform operation
fmsub.s f17, f7, f3, f28, rmm # perform operation
fmsub.s f17, f7, f3, f28, rne # perform operation
fmsub.s f17, f7, f3, f28, rtz # perform operation
fmsub.s f17, f7, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xa4a631dc1c55756c # load x3 with value 0xa4a631dc1c55756c
sw x3, 0(x2) # store 0xa4a631dc1c55756c in memory
flw f25, 0(x2) # load 0xa4a631dc1c55756c from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmsub.s f7, f26, f25, f2, dyn # perform operation
fmsub.s f7, f26, f25, f2, rdn # perform operation
fmsub.s f7, f26, f25, f2, rmm # perform operation
fmsub.s f7, f26, f25, f2, rne # perform operation
fmsub.s f7, f26, f25, f2, rtz # perform operation
fmsub.s f7, f26, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x9bcc6ff43f319881 # load x3 with value 0x9bcc6ff43f319881
sw x3, 0(x2) # store 0x9bcc6ff43f319881 in memory
flw f12, 0(x2) # load 0x9bcc6ff43f319881 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f28, f29, f12, f9, dyn # perform operation
fmsub.s f28, f29, f12, f9, rdn # perform operation
fmsub.s f28, f29, f12, f9, rmm # perform operation
fmsub.s f28, f29, f12, f9, rne # perform operation
fmsub.s f28, f29, f12, f9, rtz # perform operation
fmsub.s f28, f29, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0xc3d6ead416e4c492 # load x3 with value 0xc3d6ead416e4c492
sw x3, 0(x2) # store 0xc3d6ead416e4c492 in memory
flw f25, 0(x2) # load 0xc3d6ead416e4c492 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmsub.s f3, f22, f25, f15, dyn # perform operation
fmsub.s f3, f22, f25, f15, rdn # perform operation
fmsub.s f3, f22, f25, f15, rmm # perform operation
fmsub.s f3, f22, f25, f15, rne # perform operation
fmsub.s f3, f22, f25, f15, rtz # perform operation
fmsub.s f3, f22, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f22, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f22, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xa9acd32e7bb8b692 # load x3 with value 0xa9acd32e7bb8b692
sw x3, 0(x2) # store 0xa9acd32e7bb8b692 in memory
flw f11, 0(x2) # load 0xa9acd32e7bb8b692 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmsub.s f10, f7, f11, f16, dyn # perform operation
fmsub.s f10, f7, f11, f16, rdn # perform operation
fmsub.s f10, f7, f11, f16, rmm # perform operation
fmsub.s f10, f7, f11, f16, rne # perform operation
fmsub.s f10, f7, f11, f16, rtz # perform operation
fmsub.s f10, f7, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f7, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f7, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f7, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f7, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f7, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x32034d9b45134835 # load x3 with value 0x32034d9b45134835
sw x3, 0(x2) # store 0x32034d9b45134835 in memory
flw f20, 0(x2) # load 0x32034d9b45134835 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmsub.s f30, f2, f20, f21, dyn # perform operation
fmsub.s f30, f2, f20, f21, rdn # perform operation
fmsub.s f30, f2, f20, f21, rmm # perform operation
fmsub.s f30, f2, f20, f21, rne # perform operation
fmsub.s f30, f2, f20, f21, rtz # perform operation
fmsub.s f30, f2, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xf7e6a718ab8ab16e # load x3 with value 0xf7e6a718ab8ab16e
sw x3, 0(x2) # store 0xf7e6a718ab8ab16e in memory
flw f16, 0(x2) # load 0xf7e6a718ab8ab16e from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fmsub.s f25, f17, f16, f15, dyn # perform operation
fmsub.s f25, f17, f16, f15, rdn # perform operation
fmsub.s f25, f17, f16, f15, rmm # perform operation
fmsub.s f25, f17, f16, f15, rne # perform operation
fmsub.s f25, f17, f16, f15, rtz # perform operation
fmsub.s f25, f17, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x7413b5717b1d2753 # load x3 with value 0x7413b5717b1d2753
sw x3, 0(x2) # store 0x7413b5717b1d2753 in memory
flw f20, 0(x2) # load 0x7413b5717b1d2753 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmsub.s f21, f30, f20, f31, dyn # perform operation
fmsub.s f21, f30, f20, f31, rdn # perform operation
fmsub.s f21, f30, f20, f31, rmm # perform operation
fmsub.s f21, f30, f20, f31, rne # perform operation
fmsub.s f21, f30, f20, f31, rtz # perform operation
fmsub.s f21, f30, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xdf5d48cb66cec3d2 # load x3 with value 0xdf5d48cb66cec3d2
sw x3, 0(x2) # store 0xdf5d48cb66cec3d2 in memory
flw f11, 0(x2) # load 0xdf5d48cb66cec3d2 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f2, f28, f11, f16, dyn # perform operation
fmsub.s f2, f28, f11, f16, rdn # perform operation
fmsub.s f2, f28, f11, f16, rmm # perform operation
fmsub.s f2, f28, f11, f16, rne # perform operation
fmsub.s f2, f28, f11, f16, rtz # perform operation
fmsub.s f2, f28, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x587936396e7134bd # load x3 with value 0x587936396e7134bd
sw x3, 0(x2) # store 0x587936396e7134bd in memory
flw f12, 0(x2) # load 0x587936396e7134bd from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmsub.s f8, f27, f12, f21, dyn # perform operation
fmsub.s f8, f27, f12, f21, rdn # perform operation
fmsub.s f8, f27, f12, f21, rmm # perform operation
fmsub.s f8, f27, f12, f21, rne # perform operation
fmsub.s f8, f27, f12, f21, rtz # perform operation
fmsub.s f8, f27, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x390169428e154189 # load x3 with value 0x390169428e154189
sw x3, 0(x2) # store 0x390169428e154189 in memory
flw f24, 0(x2) # load 0x390169428e154189 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmsub.s f2, f20, f24, f28, dyn # perform operation
fmsub.s f2, f20, f24, f28, rdn # perform operation
fmsub.s f2, f20, f24, f28, rmm # perform operation
fmsub.s f2, f20, f24, f28, rne # perform operation
fmsub.s f2, f20, f24, f28, rtz # perform operation
fmsub.s f2, f20, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f20, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f20, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x7ecaeb4651b037a9 # load x3 with value 0x7ecaeb4651b037a9
sw x3, 0(x2) # store 0x7ecaeb4651b037a9 in memory
flw f21, 0(x2) # load 0x7ecaeb4651b037a9 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmsub.s f18, f9, f21, f3, dyn # perform operation
fmsub.s f18, f9, f21, f3, rdn # perform operation
fmsub.s f18, f9, f21, f3, rmm # perform operation
fmsub.s f18, f9, f21, f3, rne # perform operation
fmsub.s f18, f9, f21, f3, rtz # perform operation
fmsub.s f18, f9, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0xff965ef92bdb69a8 # load x3 with value 0xff965ef92bdb69a8
sw x3, 0(x2) # store 0xff965ef92bdb69a8 in memory
flw f26, 0(x2) # load 0xff965ef92bdb69a8 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f5, f19, f26, f25, dyn # perform operation
fmsub.s f5, f19, f26, f25, rdn # perform operation
fmsub.s f5, f19, f26, f25, rmm # perform operation
fmsub.s f5, f19, f26, f25, rne # perform operation
fmsub.s f5, f19, f26, f25, rtz # perform operation
fmsub.s f5, f19, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xbc293131f9e3658 # load x3 with value 0xbc293131f9e3658
sw x3, 0(x2) # store 0xbc293131f9e3658 in memory
flw f14, 0(x2) # load 0xbc293131f9e3658 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmsub.s f29, f24, f14, f18, dyn # perform operation
fmsub.s f29, f24, f14, f18, rdn # perform operation
fmsub.s f29, f24, f14, f18, rmm # perform operation
fmsub.s f29, f24, f14, f18, rne # perform operation
fmsub.s f29, f24, f14, f18, rtz # perform operation
fmsub.s f29, f24, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xf9efc9d131ffdd1 # load x3 with value 0xf9efc9d131ffdd1
sw x3, 0(x2) # store 0xf9efc9d131ffdd1 in memory
flw f24, 0(x2) # load 0xf9efc9d131ffdd1 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmsub.s f10, f20, f24, f6, dyn # perform operation
fmsub.s f10, f20, f24, f6, rdn # perform operation
fmsub.s f10, f20, f24, f6, rmm # perform operation
fmsub.s f10, f20, f24, f6, rne # perform operation
fmsub.s f10, f20, f24, f6, rtz # perform operation
fmsub.s f10, f20, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x3fb293e17a6e4e91 # load x3 with value 0x3fb293e17a6e4e91
sw x3, 0(x2) # store 0x3fb293e17a6e4e91 in memory
flw f30, 0(x2) # load 0x3fb293e17a6e4e91 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmsub.s f25, f26, f30, f1, dyn # perform operation
fmsub.s f25, f26, f30, f1, rdn # perform operation
fmsub.s f25, f26, f30, f1, rmm # perform operation
fmsub.s f25, f26, f30, f1, rne # perform operation
fmsub.s f25, f26, f30, f1, rtz # perform operation
fmsub.s f25, f26, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xb3e5b45b3243627c # load x3 with value 0xb3e5b45b3243627c
sw x3, 0(x2) # store 0xb3e5b45b3243627c in memory
flw f20, 0(x2) # load 0xb3e5b45b3243627c from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f15, f17, f20, f26, dyn # perform operation
fmsub.s f15, f17, f20, f26, rdn # perform operation
fmsub.s f15, f17, f20, f26, rmm # perform operation
fmsub.s f15, f17, f20, f26, rne # perform operation
fmsub.s f15, f17, f20, f26, rtz # perform operation
fmsub.s f15, f17, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xe817379867f57f7b # load x3 with value 0xe817379867f57f7b
sw x3, 0(x2) # store 0xe817379867f57f7b in memory
flw f31, 0(x2) # load 0xe817379867f57f7b from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmsub.s f9, f28, f31, f22, dyn # perform operation
fmsub.s f9, f28, f31, f22, rdn # perform operation
fmsub.s f9, f28, f31, f22, rmm # perform operation
fmsub.s f9, f28, f31, f22, rne # perform operation
fmsub.s f9, f28, f31, f22, rtz # perform operation
fmsub.s f9, f28, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x3e92047257f80c92 # load x3 with value 0x3e92047257f80c92
sw x3, 0(x2) # store 0x3e92047257f80c92 in memory
flw f13, 0(x2) # load 0x3e92047257f80c92 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fmsub.s f16, f18, f13, f14, dyn # perform operation
fmsub.s f16, f18, f13, f14, rdn # perform operation
fmsub.s f16, f18, f13, f14, rmm # perform operation
fmsub.s f16, f18, f13, f14, rne # perform operation
fmsub.s f16, f18, f13, f14, rtz # perform operation
fmsub.s f16, f18, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x7de41a5dae020b8e # load x3 with value 0x7de41a5dae020b8e
sw x3, 0(x2) # store 0x7de41a5dae020b8e in memory
flw f17, 0(x2) # load 0x7de41a5dae020b8e from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmsub.s f7, f23, f17, f25, dyn # perform operation
fmsub.s f7, f23, f17, f25, rdn # perform operation
fmsub.s f7, f23, f17, f25, rmm # perform operation
fmsub.s f7, f23, f17, f25, rne # perform operation
fmsub.s f7, f23, f17, f25, rtz # perform operation
fmsub.s f7, f23, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f23, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f23, f17, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x34b0dfb77905a77c # load x3 with value 0x34b0dfb77905a77c
sw x3, 0(x2) # store 0x34b0dfb77905a77c in memory
flw f3, 0(x2) # load 0x34b0dfb77905a77c from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmsub.s f24, f15, f3, f9, dyn # perform operation
fmsub.s f24, f15, f3, f9, rdn # perform operation
fmsub.s f24, f15, f3, f9, rmm # perform operation
fmsub.s f24, f15, f3, f9, rne # perform operation
fmsub.s f24, f15, f3, f9, rtz # perform operation
fmsub.s f24, f15, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f15, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f15, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xe2c283dbeb93781b # load x3 with value 0xe2c283dbeb93781b
sw x3, 0(x2) # store 0xe2c283dbeb93781b in memory
flw f23, 0(x2) # load 0xe2c283dbeb93781b from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmsub.s f30, f1, f23, f16, dyn # perform operation
fmsub.s f30, f1, f23, f16, rdn # perform operation
fmsub.s f30, f1, f23, f16, rmm # perform operation
fmsub.s f30, f1, f23, f16, rne # perform operation
fmsub.s f30, f1, f23, f16, rtz # perform operation
fmsub.s f30, f1, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xab01f73d4cf98df2 # load x3 with value 0xab01f73d4cf98df2
sw x3, 0(x2) # store 0xab01f73d4cf98df2 in memory
flw f6, 0(x2) # load 0xab01f73d4cf98df2 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fmsub.s f13, f3, f6, f15, dyn # perform operation
fmsub.s f13, f3, f6, f15, rdn # perform operation
fmsub.s f13, f3, f6, f15, rmm # perform operation
fmsub.s f13, f3, f6, f15, rne # perform operation
fmsub.s f13, f3, f6, f15, rtz # perform operation
fmsub.s f13, f3, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xc03f427dcfbf3d4a # load x3 with value 0xc03f427dcfbf3d4a
sw x3, 0(x2) # store 0xc03f427dcfbf3d4a in memory
flw f28, 0(x2) # load 0xc03f427dcfbf3d4a from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmsub.s f13, f20, f28, f11, dyn # perform operation
fmsub.s f13, f20, f28, f11, rdn # perform operation
fmsub.s f13, f20, f28, f11, rmm # perform operation
fmsub.s f13, f20, f28, f11, rne # perform operation
fmsub.s f13, f20, f28, f11, rtz # perform operation
fmsub.s f13, f20, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x865d2b520cd3509 # load x3 with value 0x865d2b520cd3509
sw x3, 0(x2) # store 0x865d2b520cd3509 in memory
flw f28, 0(x2) # load 0x865d2b520cd3509 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmsub.s f17, f26, f28, f20, dyn # perform operation
fmsub.s f17, f26, f28, f20, rdn # perform operation
fmsub.s f17, f26, f28, f20, rmm # perform operation
fmsub.s f17, f26, f28, f20, rne # perform operation
fmsub.s f17, f26, f28, f20, rtz # perform operation
fmsub.s f17, f26, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x290781830ccbc5d5 # load x3 with value 0x290781830ccbc5d5
sw x3, 0(x2) # store 0x290781830ccbc5d5 in memory
flw f12, 0(x2) # load 0x290781830ccbc5d5 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
fmsub.s f7, f20, f12, f8, dyn # perform operation
fmsub.s f7, f20, f12, f8, rdn # perform operation
fmsub.s f7, f20, f12, f8, rmm # perform operation
fmsub.s f7, f20, f12, f8, rne # perform operation
fmsub.s f7, f20, f12, f8, rtz # perform operation
fmsub.s f7, f20, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xbf35cfd3517e5b95 # load x3 with value 0xbf35cfd3517e5b95
sw x3, 0(x2) # store 0xbf35cfd3517e5b95 in memory
flw f14, 0(x2) # load 0xbf35cfd3517e5b95 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmsub.s f23, f18, f14, f21, dyn # perform operation
fmsub.s f23, f18, f14, f21, rdn # perform operation
fmsub.s f23, f18, f14, f21, rmm # perform operation
fmsub.s f23, f18, f14, f21, rne # perform operation
fmsub.s f23, f18, f14, f21, rtz # perform operation
fmsub.s f23, f18, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0x825bd79410c5a52e # load x3 with value 0x825bd79410c5a52e
sw x3, 0(x2) # store 0x825bd79410c5a52e in memory
flw f8, 0(x2) # load 0x825bd79410c5a52e from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fmsub.s f5, f25, f8, f2, dyn # perform operation
fmsub.s f5, f25, f8, f2, rdn # perform operation
fmsub.s f5, f25, f8, f2, rmm # perform operation
fmsub.s f5, f25, f8, f2, rne # perform operation
fmsub.s f5, f25, f8, f2, rtz # perform operation
fmsub.s f5, f25, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f25, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f25, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0xf74a182b02274913 # load x3 with value 0xf74a182b02274913
sw x3, 0(x2) # store 0xf74a182b02274913 in memory
flw f31, 0(x2) # load 0xf74a182b02274913 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmsub.s f20, f26, f31, f5, dyn # perform operation
fmsub.s f20, f26, f31, f5, rdn # perform operation
fmsub.s f20, f26, f31, f5, rmm # perform operation
fmsub.s f20, f26, f31, f5, rne # perform operation
fmsub.s f20, f26, f31, f5, rtz # perform operation
fmsub.s f20, f26, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f26, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f26, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x66fa724f36efd20 # load x3 with value 0x66fa724f36efd20
sw x3, 0(x2) # store 0x66fa724f36efd20 in memory
flw f14, 0(x2) # load 0x66fa724f36efd20 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmsub.s f6, f20, f14, f1, dyn # perform operation
fmsub.s f6, f20, f14, f1, rdn # perform operation
fmsub.s f6, f20, f14, f1, rmm # perform operation
fmsub.s f6, f20, f14, f1, rne # perform operation
fmsub.s f6, f20, f14, f1, rtz # perform operation
fmsub.s f6, f20, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xb41e2618be20ec07 # load x3 with value 0xb41e2618be20ec07
sw x3, 0(x2) # store 0xb41e2618be20ec07 in memory
flw f14, 0(x2) # load 0xb41e2618be20ec07 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmsub.s f26, f11, f14, f5, dyn # perform operation
fmsub.s f26, f11, f14, f5, rdn # perform operation
fmsub.s f26, f11, f14, f5, rmm # perform operation
fmsub.s f26, f11, f14, f5, rne # perform operation
fmsub.s f26, f11, f14, f5, rtz # perform operation
fmsub.s f26, f11, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x90e55cc55793a058 # load x3 with value 0x90e55cc55793a058
sw x3, 0(x2) # store 0x90e55cc55793a058 in memory
flw f25, 0(x2) # load 0x90e55cc55793a058 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmsub.s f3, f16, f25, f30, dyn # perform operation
fmsub.s f3, f16, f25, f30, rdn # perform operation
fmsub.s f3, f16, f25, f30, rmm # perform operation
fmsub.s f3, f16, f25, f30, rne # perform operation
fmsub.s f3, f16, f25, f30, rtz # perform operation
fmsub.s f3, f16, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f16, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f16, f25, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x87578ba1d83508f4 # load x3 with value 0x87578ba1d83508f4
sw x3, 0(x2) # store 0x87578ba1d83508f4 in memory
flw f17, 0(x2) # load 0x87578ba1d83508f4 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fmsub.s f21, f20, f17, f9, dyn # perform operation
fmsub.s f21, f20, f17, f9, rdn # perform operation
fmsub.s f21, f20, f17, f9, rmm # perform operation
fmsub.s f21, f20, f17, f9, rne # perform operation
fmsub.s f21, f20, f17, f9, rtz # perform operation
fmsub.s f21, f20, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f20, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f20, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xbcbe98a5d68378fb # load x3 with value 0xbcbe98a5d68378fb
sw x3, 0(x2) # store 0xbcbe98a5d68378fb in memory
flw f25, 0(x2) # load 0xbcbe98a5d68378fb from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fmsub.s f28, f2, f25, f20, dyn # perform operation
fmsub.s f28, f2, f25, f20, rdn # perform operation
fmsub.s f28, f2, f25, f20, rmm # perform operation
fmsub.s f28, f2, f25, f20, rne # perform operation
fmsub.s f28, f2, f25, f20, rtz # perform operation
fmsub.s f28, f2, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x4484c074d1a8118a # load x3 with value 0x4484c074d1a8118a
sw x3, 0(x2) # store 0x4484c074d1a8118a in memory
flw f20, 0(x2) # load 0x4484c074d1a8118a from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmsub.s f1, f2, f20, f9, dyn # perform operation
fmsub.s f1, f2, f20, f9, rdn # perform operation
fmsub.s f1, f2, f20, f9, rmm # perform operation
fmsub.s f1, f2, f20, f9, rne # perform operation
fmsub.s f1, f2, f20, f9, rtz # perform operation
fmsub.s f1, f2, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xd444fe190a706067 # load x3 with value 0xd444fe190a706067
sw x3, 0(x2) # store 0xd444fe190a706067 in memory
flw f14, 0(x2) # load 0xd444fe190a706067 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f2, f9, f14, f7, dyn # perform operation
fmsub.s f2, f9, f14, f7, rdn # perform operation
fmsub.s f2, f9, f14, f7, rmm # perform operation
fmsub.s f2, f9, f14, f7, rne # perform operation
fmsub.s f2, f9, f14, f7, rtz # perform operation
fmsub.s f2, f9, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f14, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xedaa1e24bbdb5159 # load x3 with value 0xedaa1e24bbdb5159
sw x3, 0(x2) # store 0xedaa1e24bbdb5159 in memory
flw f27, 0(x2) # load 0xedaa1e24bbdb5159 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fmsub.s f29, f25, f27, f26, dyn # perform operation
fmsub.s f29, f25, f27, f26, rdn # perform operation
fmsub.s f29, f25, f27, f26, rmm # perform operation
fmsub.s f29, f25, f27, f26, rne # perform operation
fmsub.s f29, f25, f27, f26, rtz # perform operation
fmsub.s f29, f25, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f25, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x39718cfa68a0fdf0 # load x3 with value 0x39718cfa68a0fdf0
sw x3, 0(x2) # store 0x39718cfa68a0fdf0 in memory
flw f15, 0(x2) # load 0x39718cfa68a0fdf0 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fmsub.s f19, f8, f15, f31, dyn # perform operation
fmsub.s f19, f8, f15, f31, rdn # perform operation
fmsub.s f19, f8, f15, f31, rmm # perform operation
fmsub.s f19, f8, f15, f31, rne # perform operation
fmsub.s f19, f8, f15, f31, rtz # perform operation
fmsub.s f19, f8, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f8, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f8, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f8, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f8, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f8, f15, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x8e34b5a86f39d157 # load x3 with value 0x8e34b5a86f39d157
sw x3, 0(x2) # store 0x8e34b5a86f39d157 in memory
flw f22, 0(x2) # load 0x8e34b5a86f39d157 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f29, f16, f22, f6, dyn # perform operation
fmsub.s f29, f16, f22, f6, rdn # perform operation
fmsub.s f29, f16, f22, f6, rmm # perform operation
fmsub.s f29, f16, f22, f6, rne # perform operation
fmsub.s f29, f16, f22, f6, rtz # perform operation
fmsub.s f29, f16, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f22, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x284e96b6640b7921 # load x3 with value 0x284e96b6640b7921
sw x3, 0(x2) # store 0x284e96b6640b7921 in memory
flw f21, 0(x2) # load 0x284e96b6640b7921 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmsub.s f22, f18, f21, f11, dyn # perform operation
fmsub.s f22, f18, f21, f11, rdn # perform operation
fmsub.s f22, f18, f21, f11, rmm # perform operation
fmsub.s f22, f18, f21, f11, rne # perform operation
fmsub.s f22, f18, f21, f11, rtz # perform operation
fmsub.s f22, f18, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xf35a33d398cc118c # load x3 with value 0xf35a33d398cc118c
sw x3, 0(x2) # store 0xf35a33d398cc118c in memory
flw f17, 0(x2) # load 0xf35a33d398cc118c from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fmsub.s f10, f22, f17, f23, dyn # perform operation
fmsub.s f10, f22, f17, f23, rdn # perform operation
fmsub.s f10, f22, f17, f23, rmm # perform operation
fmsub.s f10, f22, f17, f23, rne # perform operation
fmsub.s f10, f22, f17, f23, rtz # perform operation
fmsub.s f10, f22, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x60e62a0d30a1ab78 # load x3 with value 0x60e62a0d30a1ab78
sw x3, 0(x2) # store 0x60e62a0d30a1ab78 in memory
flw f5, 0(x2) # load 0x60e62a0d30a1ab78 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmsub.s f23, f10, f5, f7, dyn # perform operation
fmsub.s f23, f10, f5, f7, rdn # perform operation
fmsub.s f23, f10, f5, f7, rmm # perform operation
fmsub.s f23, f10, f5, f7, rne # perform operation
fmsub.s f23, f10, f5, f7, rtz # perform operation
fmsub.s f23, f10, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0xa001ee261d9938b # load x3 with value 0xa001ee261d9938b
sw x3, 0(x2) # store 0xa001ee261d9938b in memory
flw f6, 0(x2) # load 0xa001ee261d9938b from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmsub.s f14, f21, f6, f10, dyn # perform operation
fmsub.s f14, f21, f6, f10, rdn # perform operation
fmsub.s f14, f21, f6, f10, rmm # perform operation
fmsub.s f14, f21, f6, f10, rne # perform operation
fmsub.s f14, f21, f6, f10, rtz # perform operation
fmsub.s f14, f21, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x2f3dc7120ef06c9d # load x3 with value 0x2f3dc7120ef06c9d
sw x3, 0(x2) # store 0x2f3dc7120ef06c9d in memory
flw f10, 0(x2) # load 0x2f3dc7120ef06c9d from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fmsub.s f26, f6, f10, f15, dyn # perform operation
fmsub.s f26, f6, f10, f15, rdn # perform operation
fmsub.s f26, f6, f10, f15, rmm # perform operation
fmsub.s f26, f6, f10, f15, rne # perform operation
fmsub.s f26, f6, f10, f15, rtz # perform operation
fmsub.s f26, f6, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x23112858fc1da9e5 # load x3 with value 0x23112858fc1da9e5
sw x3, 0(x2) # store 0x23112858fc1da9e5 in memory
flw f31, 0(x2) # load 0x23112858fc1da9e5 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmsub.s f1, f6, f31, f8, dyn # perform operation
fmsub.s f1, f6, f31, f8, rdn # perform operation
fmsub.s f1, f6, f31, f8, rmm # perform operation
fmsub.s f1, f6, f31, f8, rne # perform operation
fmsub.s f1, f6, f31, f8, rtz # perform operation
fmsub.s f1, f6, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f6, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f6, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x31e63f644611e6b8 # load x3 with value 0x31e63f644611e6b8
sw x3, 0(x2) # store 0x31e63f644611e6b8 in memory
flw f11, 0(x2) # load 0x31e63f644611e6b8 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmsub.s f29, f23, f11, f25, dyn # perform operation
fmsub.s f29, f23, f11, f25, rdn # perform operation
fmsub.s f29, f23, f11, f25, rmm # perform operation
fmsub.s f29, f23, f11, f25, rne # perform operation
fmsub.s f29, f23, f11, f25, rtz # perform operation
fmsub.s f29, f23, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x2730bc08081c5438 # load x3 with value 0x2730bc08081c5438
sw x3, 0(x2) # store 0x2730bc08081c5438 in memory
flw f22, 0(x2) # load 0x2730bc08081c5438 from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f27, f21, f22, f11, dyn # perform operation
fmsub.s f27, f21, f22, f11, rdn # perform operation
fmsub.s f27, f21, f22, f11, rmm # perform operation
fmsub.s f27, f21, f22, f11, rne # perform operation
fmsub.s f27, f21, f22, f11, rtz # perform operation
fmsub.s f27, f21, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f21, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f21, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x9fe8b92b81c10909 # load x3 with value 0x9fe8b92b81c10909
sw x3, 0(x2) # store 0x9fe8b92b81c10909 in memory
flw f24, 0(x2) # load 0x9fe8b92b81c10909 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmsub.s f1, f11, f24, f27, dyn # perform operation
fmsub.s f1, f11, f24, f27, rdn # perform operation
fmsub.s f1, f11, f24, f27, rmm # perform operation
fmsub.s f1, f11, f24, f27, rne # perform operation
fmsub.s f1, f11, f24, f27, rtz # perform operation
fmsub.s f1, f11, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f24, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x2227f1083aa3a23a # load x3 with value 0x2227f1083aa3a23a
sw x3, 0(x2) # store 0x2227f1083aa3a23a in memory
flw f14, 0(x2) # load 0x2227f1083aa3a23a from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmsub.s f9, f8, f14, f19, dyn # perform operation
fmsub.s f9, f8, f14, f19, rdn # perform operation
fmsub.s f9, f8, f14, f19, rmm # perform operation
fmsub.s f9, f8, f14, f19, rne # perform operation
fmsub.s f9, f8, f14, f19, rtz # perform operation
fmsub.s f9, f8, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f8, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f8, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xe42ca19f8e8950c1 # load x3 with value 0xe42ca19f8e8950c1
sw x3, 0(x2) # store 0xe42ca19f8e8950c1 in memory
flw f7, 0(x2) # load 0xe42ca19f8e8950c1 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmsub.s f25, f18, f7, f21, dyn # perform operation
fmsub.s f25, f18, f7, f21, rdn # perform operation
fmsub.s f25, f18, f7, f21, rmm # perform operation
fmsub.s f25, f18, f7, f21, rne # perform operation
fmsub.s f25, f18, f7, f21, rtz # perform operation
fmsub.s f25, f18, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x5b8de92735e11975 # load x3 with value 0x5b8de92735e11975
sw x3, 0(x2) # store 0x5b8de92735e11975 in memory
flw f31, 0(x2) # load 0x5b8de92735e11975 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
fmsub.s f5, f16, f31, f6, dyn # perform operation
fmsub.s f5, f16, f31, f6, rdn # perform operation
fmsub.s f5, f16, f31, f6, rmm # perform operation
fmsub.s f5, f16, f31, f6, rne # perform operation
fmsub.s f5, f16, f31, f6, rtz # perform operation
fmsub.s f5, f16, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x9126abda7aaab436 # load x3 with value 0x9126abda7aaab436
sw x3, 0(x2) # store 0x9126abda7aaab436 in memory
flw f20, 0(x2) # load 0x9126abda7aaab436 from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f10, f11, f20, f16, dyn # perform operation
fmsub.s f10, f11, f20, f16, rdn # perform operation
fmsub.s f10, f11, f20, f16, rmm # perform operation
fmsub.s f10, f11, f20, f16, rne # perform operation
fmsub.s f10, f11, f20, f16, rtz # perform operation
fmsub.s f10, f11, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x607494ad78f814d9 # load x3 with value 0x607494ad78f814d9
sw x3, 0(x2) # store 0x607494ad78f814d9 in memory
flw f30, 0(x2) # load 0x607494ad78f814d9 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmsub.s f19, f29, f30, f12, dyn # perform operation
fmsub.s f19, f29, f30, f12, rdn # perform operation
fmsub.s f19, f29, f30, f12, rmm # perform operation
fmsub.s f19, f29, f30, f12, rne # perform operation
fmsub.s f19, f29, f30, f12, rtz # perform operation
fmsub.s f19, f29, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f29, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x8d30dbadc74072f0 # load x3 with value 0x8d30dbadc74072f0
sw x3, 0(x2) # store 0x8d30dbadc74072f0 in memory
flw f30, 0(x2) # load 0x8d30dbadc74072f0 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmsub.s f19, f25, f30, f23, dyn # perform operation
fmsub.s f19, f25, f30, f23, rdn # perform operation
fmsub.s f19, f25, f30, f23, rmm # perform operation
fmsub.s f19, f25, f30, f23, rne # perform operation
fmsub.s f19, f25, f30, f23, rtz # perform operation
fmsub.s f19, f25, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x595d3d5ffe0e31c0 # load x3 with value 0x595d3d5ffe0e31c0
sw x3, 0(x2) # store 0x595d3d5ffe0e31c0 in memory
flw f23, 0(x2) # load 0x595d3d5ffe0e31c0 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmsub.s f12, f16, f23, f30, dyn # perform operation
fmsub.s f12, f16, f23, f30, rdn # perform operation
fmsub.s f12, f16, f23, f30, rmm # perform operation
fmsub.s f12, f16, f23, f30, rne # perform operation
fmsub.s f12, f16, f23, f30, rtz # perform operation
fmsub.s f12, f16, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f16, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x8a032e5a70e055d1 # load x3 with value 0x8a032e5a70e055d1
sw x3, 0(x2) # store 0x8a032e5a70e055d1 in memory
flw f24, 0(x2) # load 0x8a032e5a70e055d1 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f5, f29, f24, f25, dyn # perform operation
fmsub.s f5, f29, f24, f25, rdn # perform operation
fmsub.s f5, f29, f24, f25, rmm # perform operation
fmsub.s f5, f29, f24, f25, rne # perform operation
fmsub.s f5, f29, f24, f25, rtz # perform operation
fmsub.s f5, f29, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x237cf90de02d4252 # load x3 with value 0x237cf90de02d4252
sw x3, 0(x2) # store 0x237cf90de02d4252 in memory
flw f9, 0(x2) # load 0x237cf90de02d4252 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fmsub.s f30, f10, f9, f18, dyn # perform operation
fmsub.s f30, f10, f9, f18, rdn # perform operation
fmsub.s f30, f10, f9, f18, rmm # perform operation
fmsub.s f30, f10, f9, f18, rne # perform operation
fmsub.s f30, f10, f9, f18, rtz # perform operation
fmsub.s f30, f10, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x726b73116d0bbbea # load x3 with value 0x726b73116d0bbbea
sw x3, 0(x2) # store 0x726b73116d0bbbea in memory
flw f13, 0(x2) # load 0x726b73116d0bbbea from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmsub.s f21, f17, f13, f12, dyn # perform operation
fmsub.s f21, f17, f13, f12, rdn # perform operation
fmsub.s f21, f17, f13, f12, rmm # perform operation
fmsub.s f21, f17, f13, f12, rne # perform operation
fmsub.s f21, f17, f13, f12, rtz # perform operation
fmsub.s f21, f17, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f17, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f17, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xebc855e89209a4aa # load x3 with value 0xebc855e89209a4aa
sw x3, 0(x2) # store 0xebc855e89209a4aa in memory
flw f19, 0(x2) # load 0xebc855e89209a4aa from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fmsub.s f1, f10, f19, f7, dyn # perform operation
fmsub.s f1, f10, f19, f7, rdn # perform operation
fmsub.s f1, f10, f19, f7, rmm # perform operation
fmsub.s f1, f10, f19, f7, rne # perform operation
fmsub.s f1, f10, f19, f7, rtz # perform operation
fmsub.s f1, f10, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f10, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x8210df0fdada8b43 # load x3 with value 0x8210df0fdada8b43
sw x3, 0(x2) # store 0x8210df0fdada8b43 in memory
flw f31, 0(x2) # load 0x8210df0fdada8b43 from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmsub.s f11, f9, f31, f12, dyn # perform operation
fmsub.s f11, f9, f31, f12, rdn # perform operation
fmsub.s f11, f9, f31, f12, rmm # perform operation
fmsub.s f11, f9, f31, f12, rne # perform operation
fmsub.s f11, f9, f31, f12, rtz # perform operation
fmsub.s f11, f9, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xa0f66380a33c1e7 # load x3 with value 0xa0f66380a33c1e7
sw x3, 0(x2) # store 0xa0f66380a33c1e7 in memory
flw f11, 0(x2) # load 0xa0f66380a33c1e7 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fmsub.s f29, f21, f11, f18, dyn # perform operation
fmsub.s f29, f21, f11, f18, rdn # perform operation
fmsub.s f29, f21, f11, f18, rmm # perform operation
fmsub.s f29, f21, f11, f18, rne # perform operation
fmsub.s f29, f21, f11, f18, rtz # perform operation
fmsub.s f29, f21, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xe1e64cce90ad694a # load x3 with value 0xe1e64cce90ad694a
sw x3, 0(x2) # store 0xe1e64cce90ad694a in memory
flw f23, 0(x2) # load 0xe1e64cce90ad694a from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fmsub.s f9, f2, f23, f18, dyn # perform operation
fmsub.s f9, f2, f23, f18, rdn # perform operation
fmsub.s f9, f2, f23, f18, rmm # perform operation
fmsub.s f9, f2, f23, f18, rne # perform operation
fmsub.s f9, f2, f23, f18, rtz # perform operation
fmsub.s f9, f2, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f2, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x8a59ecda237f7bb5 # load x3 with value 0x8a59ecda237f7bb5
sw x3, 0(x2) # store 0x8a59ecda237f7bb5 in memory
flw f22, 0(x2) # load 0x8a59ecda237f7bb5 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fmsub.s f11, f6, f22, f5, dyn # perform operation
fmsub.s f11, f6, f22, f5, rdn # perform operation
fmsub.s f11, f6, f22, f5, rmm # perform operation
fmsub.s f11, f6, f22, f5, rne # perform operation
fmsub.s f11, f6, f22, f5, rtz # perform operation
fmsub.s f11, f6, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xe5f209c8dd1aee0b # load x3 with value 0xe5f209c8dd1aee0b
sw x3, 0(x2) # store 0xe5f209c8dd1aee0b in memory
flw f8, 0(x2) # load 0xe5f209c8dd1aee0b from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmsub.s f26, f10, f8, f15, dyn # perform operation
fmsub.s f26, f10, f8, f15, rdn # perform operation
fmsub.s f26, f10, f8, f15, rmm # perform operation
fmsub.s f26, f10, f8, f15, rne # perform operation
fmsub.s f26, f10, f8, f15, rtz # perform operation
fmsub.s f26, f10, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x3500bd0c8c717de9 # load x3 with value 0x3500bd0c8c717de9
sw x3, 0(x2) # store 0x3500bd0c8c717de9 in memory
flw f6, 0(x2) # load 0x3500bd0c8c717de9 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fmsub.s f21, f5, f6, f17, dyn # perform operation
fmsub.s f21, f5, f6, f17, rdn # perform operation
fmsub.s f21, f5, f6, f17, rmm # perform operation
fmsub.s f21, f5, f6, f17, rne # perform operation
fmsub.s f21, f5, f6, f17, rtz # perform operation
fmsub.s f21, f5, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f5, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x16e6e516cea207ac # load x3 with value 0x16e6e516cea207ac
sw x3, 0(x2) # store 0x16e6e516cea207ac in memory
flw f15, 0(x2) # load 0x16e6e516cea207ac from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fmsub.s f1, f19, f15, f2, dyn # perform operation
fmsub.s f1, f19, f15, f2, rdn # perform operation
fmsub.s f1, f19, f15, f2, rmm # perform operation
fmsub.s f1, f19, f15, f2, rne # perform operation
fmsub.s f1, f19, f15, f2, rtz # perform operation
fmsub.s f1, f19, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x9511b8fa1a6dc01d # load x3 with value 0x9511b8fa1a6dc01d
sw x3, 0(x2) # store 0x9511b8fa1a6dc01d in memory
flw f30, 0(x2) # load 0x9511b8fa1a6dc01d from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fmsub.s f15, f6, f30, f5, dyn # perform operation
fmsub.s f15, f6, f30, f5, rdn # perform operation
fmsub.s f15, f6, f30, f5, rmm # perform operation
fmsub.s f15, f6, f30, f5, rne # perform operation
fmsub.s f15, f6, f30, f5, rtz # perform operation
fmsub.s f15, f6, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x5ded2e72946f7b99 # load x3 with value 0x5ded2e72946f7b99
sw x3, 0(x2) # store 0x5ded2e72946f7b99 in memory
flw f7, 0(x2) # load 0x5ded2e72946f7b99 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f18, f21, f7, f5, dyn # perform operation
fmsub.s f18, f21, f7, f5, rdn # perform operation
fmsub.s f18, f21, f7, f5, rmm # perform operation
fmsub.s f18, f21, f7, f5, rne # perform operation
fmsub.s f18, f21, f7, f5, rtz # perform operation
fmsub.s f18, f21, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f7, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xbb8cec6255a275c0 # load x3 with value 0xbb8cec6255a275c0
sw x3, 0(x2) # store 0xbb8cec6255a275c0 in memory
flw f8, 0(x2) # load 0xbb8cec6255a275c0 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f29, f21, f8, f25, dyn # perform operation
fmsub.s f29, f21, f8, f25, rdn # perform operation
fmsub.s f29, f21, f8, f25, rmm # perform operation
fmsub.s f29, f21, f8, f25, rne # perform operation
fmsub.s f29, f21, f8, f25, rtz # perform operation
fmsub.s f29, f21, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xefcedc45a9846233 # load x3 with value 0xefcedc45a9846233
sw x3, 0(x2) # store 0xefcedc45a9846233 in memory
flw f25, 0(x2) # load 0xefcedc45a9846233 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmsub.s f6, f9, f25, f22, dyn # perform operation
fmsub.s f6, f9, f25, f22, rdn # perform operation
fmsub.s f6, f9, f25, f22, rmm # perform operation
fmsub.s f6, f9, f25, f22, rne # perform operation
fmsub.s f6, f9, f25, f22, rtz # perform operation
fmsub.s f6, f9, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xc7f331013dd72e2 # load x3 with value 0xc7f331013dd72e2
sw x3, 0(x2) # store 0xc7f331013dd72e2 in memory
flw f14, 0(x2) # load 0xc7f331013dd72e2 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmsub.s f3, f9, f14, f15, dyn # perform operation
fmsub.s f3, f9, f14, f15, rdn # perform operation
fmsub.s f3, f9, f14, f15, rmm # perform operation
fmsub.s f3, f9, f14, f15, rne # perform operation
fmsub.s f3, f9, f14, f15, rtz # perform operation
fmsub.s f3, f9, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x9d4922f8bc2d1520 # load x3 with value 0x9d4922f8bc2d1520
sw x3, 0(x2) # store 0x9d4922f8bc2d1520 in memory
flw f1, 0(x2) # load 0x9d4922f8bc2d1520 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmsub.s f9, f17, f1, f31, dyn # perform operation
fmsub.s f9, f17, f1, f31, rdn # perform operation
fmsub.s f9, f17, f1, f31, rmm # perform operation
fmsub.s f9, f17, f1, f31, rne # perform operation
fmsub.s f9, f17, f1, f31, rtz # perform operation
fmsub.s f9, f17, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f17, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f17, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x54f54143834e95d0 # load x3 with value 0x54f54143834e95d0
sw x3, 0(x2) # store 0x54f54143834e95d0 in memory
flw f20, 0(x2) # load 0x54f54143834e95d0 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fmsub.s f15, f23, f20, f16, dyn # perform operation
fmsub.s f15, f23, f20, f16, rdn # perform operation
fmsub.s f15, f23, f20, f16, rmm # perform operation
fmsub.s f15, f23, f20, f16, rne # perform operation
fmsub.s f15, f23, f20, f16, rtz # perform operation
fmsub.s f15, f23, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x608122786a8a93d6 # load x3 with value 0x608122786a8a93d6
sw x3, 0(x2) # store 0x608122786a8a93d6 in memory
flw f2, 0(x2) # load 0x608122786a8a93d6 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f19, f17, f2, f11, dyn # perform operation
fmsub.s f19, f17, f2, f11, rdn # perform operation
fmsub.s f19, f17, f2, f11, rmm # perform operation
fmsub.s f19, f17, f2, f11, rne # perform operation
fmsub.s f19, f17, f2, f11, rtz # perform operation
fmsub.s f19, f17, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x727db562d5027bf5 # load x3 with value 0x727db562d5027bf5
sw x3, 0(x2) # store 0x727db562d5027bf5 in memory
flw f9, 0(x2) # load 0x727db562d5027bf5 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmsub.s f18, f26, f9, f31, dyn # perform operation
fmsub.s f18, f26, f9, f31, rdn # perform operation
fmsub.s f18, f26, f9, f31, rmm # perform operation
fmsub.s f18, f26, f9, f31, rne # perform operation
fmsub.s f18, f26, f9, f31, rtz # perform operation
fmsub.s f18, f26, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xbe10b81406bca546 # load x3 with value 0xbe10b81406bca546
sw x3, 0(x2) # store 0xbe10b81406bca546 in memory
flw f18, 0(x2) # load 0xbe10b81406bca546 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmsub.s f24, f29, f18, f7, dyn # perform operation
fmsub.s f24, f29, f18, f7, rdn # perform operation
fmsub.s f24, f29, f18, f7, rmm # perform operation
fmsub.s f24, f29, f18, f7, rne # perform operation
fmsub.s f24, f29, f18, f7, rtz # perform operation
fmsub.s f24, f29, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xe1cab99510a09a96 # load x3 with value 0xe1cab99510a09a96
sw x3, 0(x2) # store 0xe1cab99510a09a96 in memory
flw f31, 0(x2) # load 0xe1cab99510a09a96 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmsub.s f29, f30, f31, f25, dyn # perform operation
fmsub.s f29, f30, f31, f25, rdn # perform operation
fmsub.s f29, f30, f31, f25, rmm # perform operation
fmsub.s f29, f30, f31, f25, rne # perform operation
fmsub.s f29, f30, f31, f25, rtz # perform operation
fmsub.s f29, f30, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f31, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xb3d45474170705bc # load x3 with value 0xb3d45474170705bc
sw x3, 0(x2) # store 0xb3d45474170705bc in memory
flw f16, 0(x2) # load 0xb3d45474170705bc from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmsub.s f20, f29, f16, f2, dyn # perform operation
fmsub.s f20, f29, f16, f2, rdn # perform operation
fmsub.s f20, f29, f16, f2, rmm # perform operation
fmsub.s f20, f29, f16, f2, rne # perform operation
fmsub.s f20, f29, f16, f2, rtz # perform operation
fmsub.s f20, f29, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xb0d90cb1a303e115 # load x3 with value 0xb0d90cb1a303e115
sw x3, 0(x2) # store 0xb0d90cb1a303e115 in memory
flw f26, 0(x2) # load 0xb0d90cb1a303e115 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fmsub.s f14, f21, f26, f13, dyn # perform operation
fmsub.s f14, f21, f26, f13, rdn # perform operation
fmsub.s f14, f21, f26, f13, rmm # perform operation
fmsub.s f14, f21, f26, f13, rne # perform operation
fmsub.s f14, f21, f26, f13, rtz # perform operation
fmsub.s f14, f21, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xbe11fd4afd3e6605 # load x3 with value 0xbe11fd4afd3e6605
sw x3, 0(x2) # store 0xbe11fd4afd3e6605 in memory
flw f9, 0(x2) # load 0xbe11fd4afd3e6605 from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fmsub.s f21, f8, f9, f27, dyn # perform operation
fmsub.s f21, f8, f9, f27, rdn # perform operation
fmsub.s f21, f8, f9, f27, rmm # perform operation
fmsub.s f21, f8, f9, f27, rne # perform operation
fmsub.s f21, f8, f9, f27, rtz # perform operation
fmsub.s f21, f8, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x76afb4cf958095c4 # load x3 with value 0x76afb4cf958095c4
sw x3, 0(x2) # store 0x76afb4cf958095c4 in memory
flw f14, 0(x2) # load 0x76afb4cf958095c4 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmsub.s f26, f21, f14, f12, dyn # perform operation
fmsub.s f26, f21, f14, f12, rdn # perform operation
fmsub.s f26, f21, f14, f12, rmm # perform operation
fmsub.s f26, f21, f14, f12, rne # perform operation
fmsub.s f26, f21, f14, f12, rtz # perform operation
fmsub.s f26, f21, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xee0991b5ca2c6708 # load x3 with value 0xee0991b5ca2c6708
sw x3, 0(x2) # store 0xee0991b5ca2c6708 in memory
flw f13, 0(x2) # load 0xee0991b5ca2c6708 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
fmsub.s f11, f16, f13, f5, dyn # perform operation
fmsub.s f11, f16, f13, f5, rdn # perform operation
fmsub.s f11, f16, f13, f5, rmm # perform operation
fmsub.s f11, f16, f13, f5, rne # perform operation
fmsub.s f11, f16, f13, f5, rtz # perform operation
fmsub.s f11, f16, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f13, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x37dd15d1d2067412 # load x3 with value 0x37dd15d1d2067412
sw x3, 0(x2) # store 0x37dd15d1d2067412 in memory
flw f16, 0(x2) # load 0x37dd15d1d2067412 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmsub.s f2, f12, f16, f17, dyn # perform operation
fmsub.s f2, f12, f16, f17, rdn # perform operation
fmsub.s f2, f12, f16, f17, rmm # perform operation
fmsub.s f2, f12, f16, f17, rne # perform operation
fmsub.s f2, f12, f16, f17, rtz # perform operation
fmsub.s f2, f12, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f12, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f12, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xf7ff55e3defd91c6 # load x3 with value 0xf7ff55e3defd91c6
sw x3, 0(x2) # store 0xf7ff55e3defd91c6 in memory
flw f27, 0(x2) # load 0xf7ff55e3defd91c6 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f19, f24, f27, f1, dyn # perform operation
fmsub.s f19, f24, f27, f1, rdn # perform operation
fmsub.s f19, f24, f27, f1, rmm # perform operation
fmsub.s f19, f24, f27, f1, rne # perform operation
fmsub.s f19, f24, f27, f1, rtz # perform operation
fmsub.s f19, f24, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f24, f27, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x166ed10ffef63368 # load x3 with value 0x166ed10ffef63368
sw x3, 0(x2) # store 0x166ed10ffef63368 in memory
flw f1, 0(x2) # load 0x166ed10ffef63368 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmsub.s f17, f7, f1, f28, dyn # perform operation
fmsub.s f17, f7, f1, f28, rdn # perform operation
fmsub.s f17, f7, f1, f28, rmm # perform operation
fmsub.s f17, f7, f1, f28, rne # perform operation
fmsub.s f17, f7, f1, f28, rtz # perform operation
fmsub.s f17, f7, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x782358e136615d40 # load x3 with value 0x782358e136615d40
sw x3, 0(x2) # store 0x782358e136615d40 in memory
flw f31, 0(x2) # load 0x782358e136615d40 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fmsub.s f17, f16, f31, f8, dyn # perform operation
fmsub.s f17, f16, f31, f8, rdn # perform operation
fmsub.s f17, f16, f31, f8, rmm # perform operation
fmsub.s f17, f16, f31, f8, rne # perform operation
fmsub.s f17, f16, f31, f8, rtz # perform operation
fmsub.s f17, f16, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x7429b2bd212fed49 # load x3 with value 0x7429b2bd212fed49
sw x3, 0(x2) # store 0x7429b2bd212fed49 in memory
flw f13, 0(x2) # load 0x7429b2bd212fed49 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmsub.s f1, f17, f13, f27, dyn # perform operation
fmsub.s f1, f17, f13, f27, rdn # perform operation
fmsub.s f1, f17, f13, f27, rmm # perform operation
fmsub.s f1, f17, f13, f27, rne # perform operation
fmsub.s f1, f17, f13, f27, rtz # perform operation
fmsub.s f1, f17, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xb9990f844aec0b9c # load x3 with value 0xb9990f844aec0b9c
sw x3, 0(x2) # store 0xb9990f844aec0b9c in memory
flw f29, 0(x2) # load 0xb9990f844aec0b9c from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmsub.s f12, f1, f29, f30, dyn # perform operation
fmsub.s f12, f1, f29, f30, rdn # perform operation
fmsub.s f12, f1, f29, f30, rmm # perform operation
fmsub.s f12, f1, f29, f30, rne # perform operation
fmsub.s f12, f1, f29, f30, rtz # perform operation
fmsub.s f12, f1, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x3ddd8ec9e4e2c3bc # load x3 with value 0x3ddd8ec9e4e2c3bc
sw x3, 0(x2) # store 0x3ddd8ec9e4e2c3bc in memory
flw f23, 0(x2) # load 0x3ddd8ec9e4e2c3bc from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmsub.s f11, f19, f23, f5, dyn # perform operation
fmsub.s f11, f19, f23, f5, rdn # perform operation
fmsub.s f11, f19, f23, f5, rmm # perform operation
fmsub.s f11, f19, f23, f5, rne # perform operation
fmsub.s f11, f19, f23, f5, rtz # perform operation
fmsub.s f11, f19, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xfddba02bd0bff2ad # load x3 with value 0xfddba02bd0bff2ad
sw x3, 0(x2) # store 0xfddba02bd0bff2ad in memory
flw f2, 0(x2) # load 0xfddba02bd0bff2ad from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmsub.s f15, f8, f2, f6, dyn # perform operation
fmsub.s f15, f8, f2, f6, rdn # perform operation
fmsub.s f15, f8, f2, f6, rmm # perform operation
fmsub.s f15, f8, f2, f6, rne # perform operation
fmsub.s f15, f8, f2, f6, rtz # perform operation
fmsub.s f15, f8, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xda3bff035e6e98f3 # load x3 with value 0xda3bff035e6e98f3
sw x3, 0(x2) # store 0xda3bff035e6e98f3 in memory
flw f19, 0(x2) # load 0xda3bff035e6e98f3 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fmsub.s f3, f16, f19, f5, dyn # perform operation
fmsub.s f3, f16, f19, f5, rdn # perform operation
fmsub.s f3, f16, f19, f5, rmm # perform operation
fmsub.s f3, f16, f19, f5, rne # perform operation
fmsub.s f3, f16, f19, f5, rtz # perform operation
fmsub.s f3, f16, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f16, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x481049bfe5ecc298 # load x3 with value 0x481049bfe5ecc298
sw x3, 0(x2) # store 0x481049bfe5ecc298 in memory
flw f14, 0(x2) # load 0x481049bfe5ecc298 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fmsub.s f25, f23, f14, f12, dyn # perform operation
fmsub.s f25, f23, f14, f12, rdn # perform operation
fmsub.s f25, f23, f14, f12, rmm # perform operation
fmsub.s f25, f23, f14, f12, rne # perform operation
fmsub.s f25, f23, f14, f12, rtz # perform operation
fmsub.s f25, f23, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x254ad5fbd3d281a0 # load x3 with value 0x254ad5fbd3d281a0
sw x3, 0(x2) # store 0x254ad5fbd3d281a0 in memory
flw f27, 0(x2) # load 0x254ad5fbd3d281a0 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmsub.s f25, f19, f27, f20, dyn # perform operation
fmsub.s f25, f19, f27, f20, rdn # perform operation
fmsub.s f25, f19, f27, f20, rmm # perform operation
fmsub.s f25, f19, f27, f20, rne # perform operation
fmsub.s f25, f19, f27, f20, rtz # perform operation
fmsub.s f25, f19, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xe9ca25f3cf09b8ff # load x3 with value 0xe9ca25f3cf09b8ff
sw x3, 0(x2) # store 0xe9ca25f3cf09b8ff in memory
flw f11, 0(x2) # load 0xe9ca25f3cf09b8ff from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmsub.s f12, f6, f11, f20, dyn # perform operation
fmsub.s f12, f6, f11, f20, rdn # perform operation
fmsub.s f12, f6, f11, f20, rmm # perform operation
fmsub.s f12, f6, f11, f20, rne # perform operation
fmsub.s f12, f6, f11, f20, rtz # perform operation
fmsub.s f12, f6, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xf255f5e07a552498 # load x3 with value 0xf255f5e07a552498
sw x3, 0(x2) # store 0xf255f5e07a552498 in memory
flw f21, 0(x2) # load 0xf255f5e07a552498 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmsub.s f23, f11, f21, f2, dyn # perform operation
fmsub.s f23, f11, f21, f2, rdn # perform operation
fmsub.s f23, f11, f21, f2, rmm # perform operation
fmsub.s f23, f11, f21, f2, rne # perform operation
fmsub.s f23, f11, f21, f2, rtz # perform operation
fmsub.s f23, f11, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f11, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x29eeee80a5571843 # load x3 with value 0x29eeee80a5571843
sw x3, 0(x2) # store 0x29eeee80a5571843 in memory
flw f26, 0(x2) # load 0x29eeee80a5571843 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fmsub.s f6, f1, f26, f27, dyn # perform operation
fmsub.s f6, f1, f26, f27, rdn # perform operation
fmsub.s f6, f1, f26, f27, rmm # perform operation
fmsub.s f6, f1, f26, f27, rne # perform operation
fmsub.s f6, f1, f26, f27, rtz # perform operation
fmsub.s f6, f1, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x1720d3e805853c63 # load x3 with value 0x1720d3e805853c63
sw x3, 0(x2) # store 0x1720d3e805853c63 in memory
flw f19, 0(x2) # load 0x1720d3e805853c63 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f5, f31, f19, f6, dyn # perform operation
fmsub.s f5, f31, f19, f6, rdn # perform operation
fmsub.s f5, f31, f19, f6, rmm # perform operation
fmsub.s f5, f31, f19, f6, rne # perform operation
fmsub.s f5, f31, f19, f6, rtz # perform operation
fmsub.s f5, f31, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xd8396ee37d74b92a # load x3 with value 0xd8396ee37d74b92a
sw x3, 0(x2) # store 0xd8396ee37d74b92a in memory
flw f13, 0(x2) # load 0xd8396ee37d74b92a from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fmsub.s f29, f26, f13, f28, dyn # perform operation
fmsub.s f29, f26, f13, f28, rdn # perform operation
fmsub.s f29, f26, f13, f28, rmm # perform operation
fmsub.s f29, f26, f13, f28, rne # perform operation
fmsub.s f29, f26, f13, f28, rtz # perform operation
fmsub.s f29, f26, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f13, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xb3344d12e0cfccbe # load x3 with value 0xb3344d12e0cfccbe
sw x3, 0(x2) # store 0xb3344d12e0cfccbe in memory
flw f13, 0(x2) # load 0xb3344d12e0cfccbe from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmsub.s f28, f20, f13, f5, dyn # perform operation
fmsub.s f28, f20, f13, f5, rdn # perform operation
fmsub.s f28, f20, f13, f5, rmm # perform operation
fmsub.s f28, f20, f13, f5, rne # perform operation
fmsub.s f28, f20, f13, f5, rtz # perform operation
fmsub.s f28, f20, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f13, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0xe15b3ffde9434909 # load x3 with value 0xe15b3ffde9434909
sw x3, 0(x2) # store 0xe15b3ffde9434909 in memory
flw f26, 0(x2) # load 0xe15b3ffde9434909 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f1, f12, f26, f27, dyn # perform operation
fmsub.s f1, f12, f26, f27, rdn # perform operation
fmsub.s f1, f12, f26, f27, rmm # perform operation
fmsub.s f1, f12, f26, f27, rne # perform operation
fmsub.s f1, f12, f26, f27, rtz # perform operation
fmsub.s f1, f12, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f12, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f12, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x107180a5d533c3f4 # load x3 with value 0x107180a5d533c3f4
sw x3, 0(x2) # store 0x107180a5d533c3f4 in memory
flw f6, 0(x2) # load 0x107180a5d533c3f4 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fmsub.s f27, f2, f6, f30, dyn # perform operation
fmsub.s f27, f2, f6, f30, rdn # perform operation
fmsub.s f27, f2, f6, f30, rmm # perform operation
fmsub.s f27, f2, f6, f30, rne # perform operation
fmsub.s f27, f2, f6, f30, rtz # perform operation
fmsub.s f27, f2, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f2, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f2, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xbad2a73873711e44 # load x3 with value 0xbad2a73873711e44
sw x3, 0(x2) # store 0xbad2a73873711e44 in memory
flw f30, 0(x2) # load 0xbad2a73873711e44 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fmsub.s f18, f20, f30, f23, dyn # perform operation
fmsub.s f18, f20, f30, f23, rdn # perform operation
fmsub.s f18, f20, f30, f23, rmm # perform operation
fmsub.s f18, f20, f30, f23, rne # perform operation
fmsub.s f18, f20, f30, f23, rtz # perform operation
fmsub.s f18, f20, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f20, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xcded76db79038031 # load x3 with value 0xcded76db79038031
sw x3, 0(x2) # store 0xcded76db79038031 in memory
flw f10, 0(x2) # load 0xcded76db79038031 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmsub.s f20, f2, f10, f7, dyn # perform operation
fmsub.s f20, f2, f10, f7, rdn # perform operation
fmsub.s f20, f2, f10, f7, rmm # perform operation
fmsub.s f20, f2, f10, f7, rne # perform operation
fmsub.s f20, f2, f10, f7, rtz # perform operation
fmsub.s f20, f2, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f2, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f2, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xe28af5f7595d23d4 # load x3 with value 0xe28af5f7595d23d4
sw x3, 0(x2) # store 0xe28af5f7595d23d4 in memory
flw f11, 0(x2) # load 0xe28af5f7595d23d4 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmsub.s f23, f28, f11, f25, dyn # perform operation
fmsub.s f23, f28, f11, f25, rdn # perform operation
fmsub.s f23, f28, f11, f25, rmm # perform operation
fmsub.s f23, f28, f11, f25, rne # perform operation
fmsub.s f23, f28, f11, f25, rtz # perform operation
fmsub.s f23, f28, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f28, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f28, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x96ecaafa93ba8b98 # load x3 with value 0x96ecaafa93ba8b98
sw x3, 0(x2) # store 0x96ecaafa93ba8b98 in memory
flw f17, 0(x2) # load 0x96ecaafa93ba8b98 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f7, f2, f17, f23, dyn # perform operation
fmsub.s f7, f2, f17, f23, rdn # perform operation
fmsub.s f7, f2, f17, f23, rmm # perform operation
fmsub.s f7, f2, f17, f23, rne # perform operation
fmsub.s f7, f2, f17, f23, rtz # perform operation
fmsub.s f7, f2, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f2, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x4c6761cc7ed456e2 # load x3 with value 0x4c6761cc7ed456e2
sw x3, 0(x2) # store 0x4c6761cc7ed456e2 in memory
flw f29, 0(x2) # load 0x4c6761cc7ed456e2 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmsub.s f6, f1, f29, f23, dyn # perform operation
fmsub.s f6, f1, f29, f23, rdn # perform operation
fmsub.s f6, f1, f29, f23, rmm # perform operation
fmsub.s f6, f1, f29, f23, rne # perform operation
fmsub.s f6, f1, f29, f23, rtz # perform operation
fmsub.s f6, f1, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xb4bb188c024af65d # load x3 with value 0xb4bb188c024af65d
sw x3, 0(x2) # store 0xb4bb188c024af65d in memory
flw f14, 0(x2) # load 0xb4bb188c024af65d from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fmsub.s f16, f8, f14, f24, dyn # perform operation
fmsub.s f16, f8, f14, f24, rdn # perform operation
fmsub.s f16, f8, f14, f24, rmm # perform operation
fmsub.s f16, f8, f14, f24, rne # perform operation
fmsub.s f16, f8, f14, f24, rtz # perform operation
fmsub.s f16, f8, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f8, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x6e040c7cde4f7620 # load x3 with value 0x6e040c7cde4f7620
sw x3, 0(x2) # store 0x6e040c7cde4f7620 in memory
flw f8, 0(x2) # load 0x6e040c7cde4f7620 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fmsub.s f29, f15, f8, f13, dyn # perform operation
fmsub.s f29, f15, f8, f13, rdn # perform operation
fmsub.s f29, f15, f8, f13, rmm # perform operation
fmsub.s f29, f15, f8, f13, rne # perform operation
fmsub.s f29, f15, f8, f13, rtz # perform operation
fmsub.s f29, f15, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f8, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x61a0d5dcc7e98f06 # load x3 with value 0x61a0d5dcc7e98f06
sw x3, 0(x2) # store 0x61a0d5dcc7e98f06 in memory
flw f25, 0(x2) # load 0x61a0d5dcc7e98f06 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmsub.s f9, f6, f25, f19, dyn # perform operation
fmsub.s f9, f6, f25, f19, rdn # perform operation
fmsub.s f9, f6, f25, f19, rmm # perform operation
fmsub.s f9, f6, f25, f19, rne # perform operation
fmsub.s f9, f6, f25, f19, rtz # perform operation
fmsub.s f9, f6, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x9f036d76c907329e # load x3 with value 0x9f036d76c907329e
sw x3, 0(x2) # store 0x9f036d76c907329e in memory
flw f18, 0(x2) # load 0x9f036d76c907329e from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmsub.s f24, f27, f18, f23, dyn # perform operation
fmsub.s f24, f27, f18, f23, rdn # perform operation
fmsub.s f24, f27, f18, f23, rmm # perform operation
fmsub.s f24, f27, f18, f23, rne # perform operation
fmsub.s f24, f27, f18, f23, rtz # perform operation
fmsub.s f24, f27, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f18, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x75f5939841044c10 # load x3 with value 0x75f5939841044c10
sw x3, 0(x2) # store 0x75f5939841044c10 in memory
flw f8, 0(x2) # load 0x75f5939841044c10 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fmsub.s f1, f25, f8, f19, dyn # perform operation
fmsub.s f1, f25, f8, f19, rdn # perform operation
fmsub.s f1, f25, f8, f19, rmm # perform operation
fmsub.s f1, f25, f8, f19, rne # perform operation
fmsub.s f1, f25, f8, f19, rtz # perform operation
fmsub.s f1, f25, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0xcf397597c05f4aca # load x3 with value 0xcf397597c05f4aca
sw x3, 0(x2) # store 0xcf397597c05f4aca in memory
flw f1, 0(x2) # load 0xcf397597c05f4aca from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fmsub.s f3, f12, f1, f7, dyn # perform operation
fmsub.s f3, f12, f1, f7, rdn # perform operation
fmsub.s f3, f12, f1, f7, rmm # perform operation
fmsub.s f3, f12, f1, f7, rne # perform operation
fmsub.s f3, f12, f1, f7, rtz # perform operation
fmsub.s f3, f12, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f12, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f12, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f12, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f12, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f12, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xb3bcbef21eba7b2a # load x3 with value 0xb3bcbef21eba7b2a
sw x3, 0(x2) # store 0xb3bcbef21eba7b2a in memory
flw f1, 0(x2) # load 0xb3bcbef21eba7b2a from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmsub.s f15, f29, f1, f6, dyn # perform operation
fmsub.s f15, f29, f1, f6, rdn # perform operation
fmsub.s f15, f29, f1, f6, rmm # perform operation
fmsub.s f15, f29, f1, f6, rne # perform operation
fmsub.s f15, f29, f1, f6, rtz # perform operation
fmsub.s f15, f29, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x35be14d3557c7181 # load x3 with value 0x35be14d3557c7181
sw x3, 0(x2) # store 0x35be14d3557c7181 in memory
flw f12, 0(x2) # load 0x35be14d3557c7181 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f6, f3, f12, f17, dyn # perform operation
fmsub.s f6, f3, f12, f17, rdn # perform operation
fmsub.s f6, f3, f12, f17, rmm # perform operation
fmsub.s f6, f3, f12, f17, rne # perform operation
fmsub.s f6, f3, f12, f17, rtz # perform operation
fmsub.s f6, f3, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xafd20c688206b41f # load x3 with value 0xafd20c688206b41f
sw x3, 0(x2) # store 0xafd20c688206b41f in memory
flw f20, 0(x2) # load 0xafd20c688206b41f from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fmsub.s f25, f17, f20, f12, dyn # perform operation
fmsub.s f25, f17, f20, f12, rdn # perform operation
fmsub.s f25, f17, f20, f12, rmm # perform operation
fmsub.s f25, f17, f20, f12, rne # perform operation
fmsub.s f25, f17, f20, f12, rtz # perform operation
fmsub.s f25, f17, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f20, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x9979bb6800fa92b4 # load x3 with value 0x9979bb6800fa92b4
sw x3, 0(x2) # store 0x9979bb6800fa92b4 in memory
flw f24, 0(x2) # load 0x9979bb6800fa92b4 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmsub.s f23, f8, f24, f10, dyn # perform operation
fmsub.s f23, f8, f24, f10, rdn # perform operation
fmsub.s f23, f8, f24, f10, rmm # perform operation
fmsub.s f23, f8, f24, f10, rne # perform operation
fmsub.s f23, f8, f24, f10, rtz # perform operation
fmsub.s f23, f8, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0xcfca5b766019ec03 # load x3 with value 0xcfca5b766019ec03
sw x3, 0(x2) # store 0xcfca5b766019ec03 in memory
flw f2, 0(x2) # load 0xcfca5b766019ec03 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmsub.s f26, f23, f2, f30, dyn # perform operation
fmsub.s f26, f23, f2, f30, rdn # perform operation
fmsub.s f26, f23, f2, f30, rmm # perform operation
fmsub.s f26, f23, f2, f30, rne # perform operation
fmsub.s f26, f23, f2, f30, rtz # perform operation
fmsub.s f26, f23, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x665f81611a99118f # load x3 with value 0x665f81611a99118f
sw x3, 0(x2) # store 0x665f81611a99118f in memory
flw f2, 0(x2) # load 0x665f81611a99118f from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmsub.s f3, f31, f2, f6, dyn # perform operation
fmsub.s f3, f31, f2, f6, rdn # perform operation
fmsub.s f3, f31, f2, f6, rmm # perform operation
fmsub.s f3, f31, f2, f6, rne # perform operation
fmsub.s f3, f31, f2, f6, rtz # perform operation
fmsub.s f3, f31, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f31, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x74616fc805c8e1d4 # load x3 with value 0x74616fc805c8e1d4
sw x3, 0(x2) # store 0x74616fc805c8e1d4 in memory
flw f21, 0(x2) # load 0x74616fc805c8e1d4 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fmsub.s f20, f5, f21, f8, dyn # perform operation
fmsub.s f20, f5, f21, f8, rdn # perform operation
fmsub.s f20, f5, f21, f8, rmm # perform operation
fmsub.s f20, f5, f21, f8, rne # perform operation
fmsub.s f20, f5, f21, f8, rtz # perform operation
fmsub.s f20, f5, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f5, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f5, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xfe4c4e9d01509ec4 # load x3 with value 0xfe4c4e9d01509ec4
sw x3, 0(x2) # store 0xfe4c4e9d01509ec4 in memory
flw f11, 0(x2) # load 0xfe4c4e9d01509ec4 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmsub.s f5, f21, f11, f15, dyn # perform operation
fmsub.s f5, f21, f11, f15, rdn # perform operation
fmsub.s f5, f21, f11, f15, rmm # perform operation
fmsub.s f5, f21, f11, f15, rne # perform operation
fmsub.s f5, f21, f11, f15, rtz # perform operation
fmsub.s f5, f21, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x1f4e84ead131f55c # load x3 with value 0x1f4e84ead131f55c
sw x3, 0(x2) # store 0x1f4e84ead131f55c in memory
flw f30, 0(x2) # load 0x1f4e84ead131f55c from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmsub.s f15, f20, f30, f21, dyn # perform operation
fmsub.s f15, f20, f30, f21, rdn # perform operation
fmsub.s f15, f20, f30, f21, rmm # perform operation
fmsub.s f15, f20, f30, f21, rne # perform operation
fmsub.s f15, f20, f30, f21, rtz # perform operation
fmsub.s f15, f20, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x2fca8f30e411d6a5 # load x3 with value 0x2fca8f30e411d6a5
sw x3, 0(x2) # store 0x2fca8f30e411d6a5 in memory
flw f21, 0(x2) # load 0x2fca8f30e411d6a5 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f25, f9, f21, f23, dyn # perform operation
fmsub.s f25, f9, f21, f23, rdn # perform operation
fmsub.s f25, f9, f21, f23, rmm # perform operation
fmsub.s f25, f9, f21, f23, rne # perform operation
fmsub.s f25, f9, f21, f23, rtz # perform operation
fmsub.s f25, f9, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xd043dd0deeb05381 # load x3 with value 0xd043dd0deeb05381
sw x3, 0(x2) # store 0xd043dd0deeb05381 in memory
flw f22, 0(x2) # load 0xd043dd0deeb05381 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmsub.s f10, f11, f22, f28, dyn # perform operation
fmsub.s f10, f11, f22, f28, rdn # perform operation
fmsub.s f10, f11, f22, f28, rmm # perform operation
fmsub.s f10, f11, f22, f28, rne # perform operation
fmsub.s f10, f11, f22, f28, rtz # perform operation
fmsub.s f10, f11, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x8841a21e20c8167 # load x3 with value 0x8841a21e20c8167
sw x3, 0(x2) # store 0x8841a21e20c8167 in memory
flw f12, 0(x2) # load 0x8841a21e20c8167 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmsub.s f29, f15, f12, f8, dyn # perform operation
fmsub.s f29, f15, f12, f8, rdn # perform operation
fmsub.s f29, f15, f12, f8, rmm # perform operation
fmsub.s f29, f15, f12, f8, rne # perform operation
fmsub.s f29, f15, f12, f8, rtz # perform operation
fmsub.s f29, f15, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x3d606ac5c6188b9c # load x3 with value 0x3d606ac5c6188b9c
sw x3, 0(x2) # store 0x3d606ac5c6188b9c in memory
flw f9, 0(x2) # load 0x3d606ac5c6188b9c from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmsub.s f27, f26, f9, f2, dyn # perform operation
fmsub.s f27, f26, f9, f2, rdn # perform operation
fmsub.s f27, f26, f9, f2, rmm # perform operation
fmsub.s f27, f26, f9, f2, rne # perform operation
fmsub.s f27, f26, f9, f2, rtz # perform operation
fmsub.s f27, f26, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f26, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x42f609c2af328c7b # load x3 with value 0x42f609c2af328c7b
sw x3, 0(x2) # store 0x42f609c2af328c7b in memory
flw f14, 0(x2) # load 0x42f609c2af328c7b from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmsub.s f19, f17, f14, f3, dyn # perform operation
fmsub.s f19, f17, f14, f3, rdn # perform operation
fmsub.s f19, f17, f14, f3, rmm # perform operation
fmsub.s f19, f17, f14, f3, rne # perform operation
fmsub.s f19, f17, f14, f3, rtz # perform operation
fmsub.s f19, f17, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x153fa7bb16ada5ba # load x3 with value 0x153fa7bb16ada5ba
sw x3, 0(x2) # store 0x153fa7bb16ada5ba in memory
flw f2, 0(x2) # load 0x153fa7bb16ada5ba from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmsub.s f3, f9, f2, f17, dyn # perform operation
fmsub.s f3, f9, f2, f17, rdn # perform operation
fmsub.s f3, f9, f2, f17, rmm # perform operation
fmsub.s f3, f9, f2, f17, rne # perform operation
fmsub.s f3, f9, f2, f17, rtz # perform operation
fmsub.s f3, f9, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f2, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x3ab13274fefc7220 # load x3 with value 0x3ab13274fefc7220
sw x3, 0(x2) # store 0x3ab13274fefc7220 in memory
flw f5, 0(x2) # load 0x3ab13274fefc7220 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fmsub.s f3, f24, f5, f30, dyn # perform operation
fmsub.s f3, f24, f5, f30, rdn # perform operation
fmsub.s f3, f24, f5, f30, rmm # perform operation
fmsub.s f3, f24, f5, f30, rne # perform operation
fmsub.s f3, f24, f5, f30, rtz # perform operation
fmsub.s f3, f24, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f24, f5, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x32793eb7f5786726 # load x3 with value 0x32793eb7f5786726
sw x3, 0(x2) # store 0x32793eb7f5786726 in memory
flw f9, 0(x2) # load 0x32793eb7f5786726 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fmsub.s f29, f10, f9, f15, dyn # perform operation
fmsub.s f29, f10, f9, f15, rdn # perform operation
fmsub.s f29, f10, f9, f15, rmm # perform operation
fmsub.s f29, f10, f9, f15, rne # perform operation
fmsub.s f29, f10, f9, f15, rtz # perform operation
fmsub.s f29, f10, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x59bec636bb4d9bc9 # load x3 with value 0x59bec636bb4d9bc9
sw x3, 0(x2) # store 0x59bec636bb4d9bc9 in memory
flw f17, 0(x2) # load 0x59bec636bb4d9bc9 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fmsub.s f2, f3, f17, f9, dyn # perform operation
fmsub.s f2, f3, f17, f9, rdn # perform operation
fmsub.s f2, f3, f17, f9, rmm # perform operation
fmsub.s f2, f3, f17, f9, rne # perform operation
fmsub.s f2, f3, f17, f9, rtz # perform operation
fmsub.s f2, f3, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0xd60f363d01a4ecac # load x3 with value 0xd60f363d01a4ecac
sw x3, 0(x2) # store 0xd60f363d01a4ecac in memory
flw f11, 0(x2) # load 0xd60f363d01a4ecac from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fmsub.s f19, f3, f11, f9, dyn # perform operation
fmsub.s f19, f3, f11, f9, rdn # perform operation
fmsub.s f19, f3, f11, f9, rmm # perform operation
fmsub.s f19, f3, f11, f9, rne # perform operation
fmsub.s f19, f3, f11, f9, rtz # perform operation
fmsub.s f19, f3, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f11, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xdf3178cacb3f932c # load x3 with value 0xdf3178cacb3f932c
sw x3, 0(x2) # store 0xdf3178cacb3f932c in memory
flw f19, 0(x2) # load 0xdf3178cacb3f932c from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmsub.s f23, f9, f19, f3, dyn # perform operation
fmsub.s f23, f9, f19, f3, rdn # perform operation
fmsub.s f23, f9, f19, f3, rmm # perform operation
fmsub.s f23, f9, f19, f3, rne # perform operation
fmsub.s f23, f9, f19, f3, rtz # perform operation
fmsub.s f23, f9, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x1222941669ae85d8 # load x3 with value 0x1222941669ae85d8
sw x3, 0(x2) # store 0x1222941669ae85d8 in memory
flw f18, 0(x2) # load 0x1222941669ae85d8 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmsub.s f21, f9, f18, f10, dyn # perform operation
fmsub.s f21, f9, f18, f10, rdn # perform operation
fmsub.s f21, f9, f18, f10, rmm # perform operation
fmsub.s f21, f9, f18, f10, rne # perform operation
fmsub.s f21, f9, f18, f10, rtz # perform operation
fmsub.s f21, f9, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f9, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f9, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x53fd2d930c6a5888 # load x3 with value 0x53fd2d930c6a5888
sw x3, 0(x2) # store 0x53fd2d930c6a5888 in memory
flw f31, 0(x2) # load 0x53fd2d930c6a5888 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f24, f15, f31, f29, dyn # perform operation
fmsub.s f24, f15, f31, f29, rdn # perform operation
fmsub.s f24, f15, f31, f29, rmm # perform operation
fmsub.s f24, f15, f31, f29, rne # perform operation
fmsub.s f24, f15, f31, f29, rtz # perform operation
fmsub.s f24, f15, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f15, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f15, f31, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xc03ea36fd5f159dc # load x3 with value 0xc03ea36fd5f159dc
sw x3, 0(x2) # store 0xc03ea36fd5f159dc in memory
flw f10, 0(x2) # load 0xc03ea36fd5f159dc from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fmsub.s f23, f24, f10, f19, dyn # perform operation
fmsub.s f23, f24, f10, f19, rdn # perform operation
fmsub.s f23, f24, f10, f19, rmm # perform operation
fmsub.s f23, f24, f10, f19, rne # perform operation
fmsub.s f23, f24, f10, f19, rtz # perform operation
fmsub.s f23, f24, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x1f3a022fd4b2b06c # load x3 with value 0x1f3a022fd4b2b06c
sw x3, 0(x2) # store 0x1f3a022fd4b2b06c in memory
flw f27, 0(x2) # load 0x1f3a022fd4b2b06c from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f2, f31, f27, f29, dyn # perform operation
fmsub.s f2, f31, f27, f29, rdn # perform operation
fmsub.s f2, f31, f27, f29, rmm # perform operation
fmsub.s f2, f31, f27, f29, rne # perform operation
fmsub.s f2, f31, f27, f29, rtz # perform operation
fmsub.s f2, f31, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x1cbb7e67fa4cfe9e # load x3 with value 0x1cbb7e67fa4cfe9e
sw x3, 0(x2) # store 0x1cbb7e67fa4cfe9e in memory
flw f12, 0(x2) # load 0x1cbb7e67fa4cfe9e from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmsub.s f1, f23, f12, f3, dyn # perform operation
fmsub.s f1, f23, f12, f3, rdn # perform operation
fmsub.s f1, f23, f12, f3, rmm # perform operation
fmsub.s f1, f23, f12, f3, rne # perform operation
fmsub.s f1, f23, f12, f3, rtz # perform operation
fmsub.s f1, f23, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f23, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f23, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x88856722a12ce42e # load x3 with value 0x88856722a12ce42e
sw x3, 0(x2) # store 0x88856722a12ce42e in memory
flw f17, 0(x2) # load 0x88856722a12ce42e from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fmsub.s f5, f6, f17, f30, dyn # perform operation
fmsub.s f5, f6, f17, f30, rdn # perform operation
fmsub.s f5, f6, f17, f30, rmm # perform operation
fmsub.s f5, f6, f17, f30, rne # perform operation
fmsub.s f5, f6, f17, f30, rtz # perform operation
fmsub.s f5, f6, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f6, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f6, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f6, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f6, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f6, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x708359b65d8370d2 # load x3 with value 0x708359b65d8370d2
sw x3, 0(x2) # store 0x708359b65d8370d2 in memory
flw f19, 0(x2) # load 0x708359b65d8370d2 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmsub.s f30, f8, f19, f6, dyn # perform operation
fmsub.s f30, f8, f19, f6, rdn # perform operation
fmsub.s f30, f8, f19, f6, rmm # perform operation
fmsub.s f30, f8, f19, f6, rne # perform operation
fmsub.s f30, f8, f19, f6, rtz # perform operation
fmsub.s f30, f8, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xe0a1c5e2386e1074 # load x3 with value 0xe0a1c5e2386e1074
sw x3, 0(x2) # store 0xe0a1c5e2386e1074 in memory
flw f27, 0(x2) # load 0xe0a1c5e2386e1074 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmsub.s f26, f14, f27, f18, dyn # perform operation
fmsub.s f26, f14, f27, f18, rdn # perform operation
fmsub.s f26, f14, f27, f18, rmm # perform operation
fmsub.s f26, f14, f27, f18, rne # perform operation
fmsub.s f26, f14, f27, f18, rtz # perform operation
fmsub.s f26, f14, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0xe29aeba6df932f46 # load x3 with value 0xe29aeba6df932f46
sw x3, 0(x2) # store 0xe29aeba6df932f46 in memory
flw f2, 0(x2) # load 0xe29aeba6df932f46 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmsub.s f25, f26, f2, f5, dyn # perform operation
fmsub.s f25, f26, f2, f5, rdn # perform operation
fmsub.s f25, f26, f2, f5, rmm # perform operation
fmsub.s f25, f26, f2, f5, rne # perform operation
fmsub.s f25, f26, f2, f5, rtz # perform operation
fmsub.s f25, f26, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x83e9834884421ddc # load x3 with value 0x83e9834884421ddc
sw x3, 0(x2) # store 0x83e9834884421ddc in memory
flw f12, 0(x2) # load 0x83e9834884421ddc from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmsub.s f21, f22, f12, f24, dyn # perform operation
fmsub.s f21, f22, f12, f24, rdn # perform operation
fmsub.s f21, f22, f12, f24, rmm # perform operation
fmsub.s f21, f22, f12, f24, rne # perform operation
fmsub.s f21, f22, f12, f24, rtz # perform operation
fmsub.s f21, f22, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f22, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f22, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x182dbe1c08081955 # load x3 with value 0x182dbe1c08081955
sw x3, 0(x2) # store 0x182dbe1c08081955 in memory
flw f7, 0(x2) # load 0x182dbe1c08081955 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmsub.s f13, f31, f7, f8, dyn # perform operation
fmsub.s f13, f31, f7, f8, rdn # perform operation
fmsub.s f13, f31, f7, f8, rmm # perform operation
fmsub.s f13, f31, f7, f8, rne # perform operation
fmsub.s f13, f31, f7, f8, rtz # perform operation
fmsub.s f13, f31, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f31, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f31, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x54294952c53ed714 # load x3 with value 0x54294952c53ed714
sw x3, 0(x2) # store 0x54294952c53ed714 in memory
flw f28, 0(x2) # load 0x54294952c53ed714 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmsub.s f30, f7, f28, f17, dyn # perform operation
fmsub.s f30, f7, f28, f17, rdn # perform operation
fmsub.s f30, f7, f28, f17, rmm # perform operation
fmsub.s f30, f7, f28, f17, rne # perform operation
fmsub.s f30, f7, f28, f17, rtz # perform operation
fmsub.s f30, f7, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x5a5edc0f8e243830 # load x3 with value 0x5a5edc0f8e243830
sw x3, 0(x2) # store 0x5a5edc0f8e243830 in memory
flw f18, 0(x2) # load 0x5a5edc0f8e243830 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fmsub.s f22, f9, f18, f19, dyn # perform operation
fmsub.s f22, f9, f18, f19, rdn # perform operation
fmsub.s f22, f9, f18, f19, rmm # perform operation
fmsub.s f22, f9, f18, f19, rne # perform operation
fmsub.s f22, f9, f18, f19, rtz # perform operation
fmsub.s f22, f9, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x7b27ae0031a8466 # load x3 with value 0x7b27ae0031a8466
sw x3, 0(x2) # store 0x7b27ae0031a8466 in memory
flw f26, 0(x2) # load 0x7b27ae0031a8466 from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmsub.s f12, f17, f26, f15, dyn # perform operation
fmsub.s f12, f17, f26, f15, rdn # perform operation
fmsub.s f12, f17, f26, f15, rmm # perform operation
fmsub.s f12, f17, f26, f15, rne # perform operation
fmsub.s f12, f17, f26, f15, rtz # perform operation
fmsub.s f12, f17, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f17, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f17, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x6f97bfc551c1e1d5 # load x3 with value 0x6f97bfc551c1e1d5
sw x3, 0(x2) # store 0x6f97bfc551c1e1d5 in memory
flw f21, 0(x2) # load 0x6f97bfc551c1e1d5 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmsub.s f25, f1, f21, f26, dyn # perform operation
fmsub.s f25, f1, f21, f26, rdn # perform operation
fmsub.s f25, f1, f21, f26, rmm # perform operation
fmsub.s f25, f1, f21, f26, rne # perform operation
fmsub.s f25, f1, f21, f26, rtz # perform operation
fmsub.s f25, f1, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f21, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xac516eb943da19ca # load x3 with value 0xac516eb943da19ca
sw x3, 0(x2) # store 0xac516eb943da19ca in memory
flw f22, 0(x2) # load 0xac516eb943da19ca from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fmsub.s f15, f9, f22, f16, dyn # perform operation
fmsub.s f15, f9, f22, f16, rdn # perform operation
fmsub.s f15, f9, f22, f16, rmm # perform operation
fmsub.s f15, f9, f22, f16, rne # perform operation
fmsub.s f15, f9, f22, f16, rtz # perform operation
fmsub.s f15, f9, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xac208318cba5134f # load x3 with value 0xac208318cba5134f
sw x3, 0(x2) # store 0xac208318cba5134f in memory
flw f28, 0(x2) # load 0xac208318cba5134f from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmsub.s f14, f16, f28, f20, dyn # perform operation
fmsub.s f14, f16, f28, f20, rdn # perform operation
fmsub.s f14, f16, f28, f20, rmm # perform operation
fmsub.s f14, f16, f28, f20, rne # perform operation
fmsub.s f14, f16, f28, f20, rtz # perform operation
fmsub.s f14, f16, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x9affaa5613e43d3a # load x3 with value 0x9affaa5613e43d3a
sw x3, 0(x2) # store 0x9affaa5613e43d3a in memory
flw f15, 0(x2) # load 0x9affaa5613e43d3a from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmsub.s f30, f8, f15, f26, dyn # perform operation
fmsub.s f30, f8, f15, f26, rdn # perform operation
fmsub.s f30, f8, f15, f26, rmm # perform operation
fmsub.s f30, f8, f15, f26, rne # perform operation
fmsub.s f30, f8, f15, f26, rtz # perform operation
fmsub.s f30, f8, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x5b8ffe0f9301939a # load x3 with value 0x5b8ffe0f9301939a
sw x3, 0(x2) # store 0x5b8ffe0f9301939a in memory
flw f15, 0(x2) # load 0x5b8ffe0f9301939a from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f22, f6, f15, f14, dyn # perform operation
fmsub.s f22, f6, f15, f14, rdn # perform operation
fmsub.s f22, f6, f15, f14, rmm # perform operation
fmsub.s f22, f6, f15, f14, rne # perform operation
fmsub.s f22, f6, f15, f14, rtz # perform operation
fmsub.s f22, f6, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f6, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f6, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x762fe4e4d1ea3d06 # load x3 with value 0x762fe4e4d1ea3d06
sw x3, 0(x2) # store 0x762fe4e4d1ea3d06 in memory
flw f26, 0(x2) # load 0x762fe4e4d1ea3d06 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fmsub.s f25, f3, f26, f9, dyn # perform operation
fmsub.s f25, f3, f26, f9, rdn # perform operation
fmsub.s f25, f3, f26, f9, rmm # perform operation
fmsub.s f25, f3, f26, f9, rne # perform operation
fmsub.s f25, f3, f26, f9, rtz # perform operation
fmsub.s f25, f3, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f3, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f3, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x204eab3dfc61edea # load x3 with value 0x204eab3dfc61edea
sw x3, 0(x2) # store 0x204eab3dfc61edea in memory
flw f16, 0(x2) # load 0x204eab3dfc61edea from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmsub.s f10, f31, f16, f11, dyn # perform operation
fmsub.s f10, f31, f16, f11, rdn # perform operation
fmsub.s f10, f31, f16, f11, rmm # perform operation
fmsub.s f10, f31, f16, f11, rne # perform operation
fmsub.s f10, f31, f16, f11, rtz # perform operation
fmsub.s f10, f31, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f31, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f31, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xb4b5741defc7495 # load x3 with value 0xb4b5741defc7495
sw x3, 0(x2) # store 0xb4b5741defc7495 in memory
flw f11, 0(x2) # load 0xb4b5741defc7495 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fmsub.s f13, f19, f11, f26, dyn # perform operation
fmsub.s f13, f19, f11, f26, rdn # perform operation
fmsub.s f13, f19, f11, f26, rmm # perform operation
fmsub.s f13, f19, f11, f26, rne # perform operation
fmsub.s f13, f19, f11, f26, rtz # perform operation
fmsub.s f13, f19, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xf6a27db72ff3759c # load x3 with value 0xf6a27db72ff3759c
sw x3, 0(x2) # store 0xf6a27db72ff3759c in memory
flw f19, 0(x2) # load 0xf6a27db72ff3759c from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmsub.s f26, f12, f19, f3, dyn # perform operation
fmsub.s f26, f12, f19, f3, rdn # perform operation
fmsub.s f26, f12, f19, f3, rmm # perform operation
fmsub.s f26, f12, f19, f3, rne # perform operation
fmsub.s f26, f12, f19, f3, rtz # perform operation
fmsub.s f26, f12, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x63d89394275a6dd4 # load x3 with value 0x63d89394275a6dd4
sw x3, 0(x2) # store 0x63d89394275a6dd4 in memory
flw f9, 0(x2) # load 0x63d89394275a6dd4 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fmsub.s f24, f26, f9, f8, dyn # perform operation
fmsub.s f24, f26, f9, f8, rdn # perform operation
fmsub.s f24, f26, f9, f8, rmm # perform operation
fmsub.s f24, f26, f9, f8, rne # perform operation
fmsub.s f24, f26, f9, f8, rtz # perform operation
fmsub.s f24, f26, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f9, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xf2a593e415adf5f9 # load x3 with value 0xf2a593e415adf5f9
sw x3, 0(x2) # store 0xf2a593e415adf5f9 in memory
flw f27, 0(x2) # load 0xf2a593e415adf5f9 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmsub.s f18, f8, f27, f13, dyn # perform operation
fmsub.s f18, f8, f27, f13, rdn # perform operation
fmsub.s f18, f8, f27, f13, rmm # perform operation
fmsub.s f18, f8, f27, f13, rne # perform operation
fmsub.s f18, f8, f27, f13, rtz # perform operation
fmsub.s f18, f8, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f8, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x6c83c1e4aaeec316 # load x3 with value 0x6c83c1e4aaeec316
sw x3, 0(x2) # store 0x6c83c1e4aaeec316 in memory
flw f15, 0(x2) # load 0x6c83c1e4aaeec316 from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f12, f24, f15, f21, dyn # perform operation
fmsub.s f12, f24, f15, f21, rdn # perform operation
fmsub.s f12, f24, f15, f21, rmm # perform operation
fmsub.s f12, f24, f15, f21, rne # perform operation
fmsub.s f12, f24, f15, f21, rtz # perform operation
fmsub.s f12, f24, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f24, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f24, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f24, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f24, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f24, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x368e192c4fbf7e7 # load x3 with value 0x368e192c4fbf7e7
sw x3, 0(x2) # store 0x368e192c4fbf7e7 in memory
flw f28, 0(x2) # load 0x368e192c4fbf7e7 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmsub.s f16, f17, f28, f25, dyn # perform operation
fmsub.s f16, f17, f28, f25, rdn # perform operation
fmsub.s f16, f17, f28, f25, rmm # perform operation
fmsub.s f16, f17, f28, f25, rne # perform operation
fmsub.s f16, f17, f28, f25, rtz # perform operation
fmsub.s f16, f17, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f17, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f17, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xa2a7b1c17b2d34a # load x3 with value 0xa2a7b1c17b2d34a
sw x3, 0(x2) # store 0xa2a7b1c17b2d34a in memory
flw f20, 0(x2) # load 0xa2a7b1c17b2d34a from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmsub.s f8, f24, f20, f26, dyn # perform operation
fmsub.s f8, f24, f20, f26, rdn # perform operation
fmsub.s f8, f24, f20, f26, rmm # perform operation
fmsub.s f8, f24, f20, f26, rne # perform operation
fmsub.s f8, f24, f20, f26, rtz # perform operation
fmsub.s f8, f24, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0xff858d90c0c06805 # load x3 with value 0xff858d90c0c06805
sw x3, 0(x2) # store 0xff858d90c0c06805 in memory
flw f26, 0(x2) # load 0xff858d90c0c06805 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fmsub.s f11, f6, f26, f16, dyn # perform operation
fmsub.s f11, f6, f26, f16, rdn # perform operation
fmsub.s f11, f6, f26, f16, rmm # perform operation
fmsub.s f11, f6, f26, f16, rne # perform operation
fmsub.s f11, f6, f26, f16, rtz # perform operation
fmsub.s f11, f6, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f26, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xcc8a8d7a6bc85341 # load x3 with value 0xcc8a8d7a6bc85341
sw x3, 0(x2) # store 0xcc8a8d7a6bc85341 in memory
flw f17, 0(x2) # load 0xcc8a8d7a6bc85341 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmsub.s f6, f3, f17, f14, dyn # perform operation
fmsub.s f6, f3, f17, f14, rdn # perform operation
fmsub.s f6, f3, f17, f14, rmm # perform operation
fmsub.s f6, f3, f17, f14, rne # perform operation
fmsub.s f6, f3, f17, f14, rtz # perform operation
fmsub.s f6, f3, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x7536b82dc0340683 # load x3 with value 0x7536b82dc0340683
sw x3, 0(x2) # store 0x7536b82dc0340683 in memory
flw f14, 0(x2) # load 0x7536b82dc0340683 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fmsub.s f24, f19, f14, f17, dyn # perform operation
fmsub.s f24, f19, f14, f17, rdn # perform operation
fmsub.s f24, f19, f14, f17, rmm # perform operation
fmsub.s f24, f19, f14, f17, rne # perform operation
fmsub.s f24, f19, f14, f17, rtz # perform operation
fmsub.s f24, f19, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f19, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f19, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f19, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f19, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f19, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0xf5124660facf5179 # load x3 with value 0xf5124660facf5179
sw x3, 0(x2) # store 0xf5124660facf5179 in memory
flw f17, 0(x2) # load 0xf5124660facf5179 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f31, f27, f17, f16, dyn # perform operation
fmsub.s f31, f27, f17, f16, rdn # perform operation
fmsub.s f31, f27, f17, f16, rmm # perform operation
fmsub.s f31, f27, f17, f16, rne # perform operation
fmsub.s f31, f27, f17, f16, rtz # perform operation
fmsub.s f31, f27, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f27, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x6e5858a31573566a # load x3 with value 0x6e5858a31573566a
sw x3, 0(x2) # store 0x6e5858a31573566a in memory
flw f1, 0(x2) # load 0x6e5858a31573566a from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmsub.s f19, f15, f1, f10, dyn # perform operation
fmsub.s f19, f15, f1, f10, rdn # perform operation
fmsub.s f19, f15, f1, f10, rmm # perform operation
fmsub.s f19, f15, f1, f10, rne # perform operation
fmsub.s f19, f15, f1, f10, rtz # perform operation
fmsub.s f19, f15, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x2e8ed1b300b39750 # load x3 with value 0x2e8ed1b300b39750
sw x3, 0(x2) # store 0x2e8ed1b300b39750 in memory
flw f1, 0(x2) # load 0x2e8ed1b300b39750 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fmsub.s f7, f29, f1, f22, dyn # perform operation
fmsub.s f7, f29, f1, f22, rdn # perform operation
fmsub.s f7, f29, f1, f22, rmm # perform operation
fmsub.s f7, f29, f1, f22, rne # perform operation
fmsub.s f7, f29, f1, f22, rtz # perform operation
fmsub.s f7, f29, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x68c16d90566b6dc7 # load x3 with value 0x68c16d90566b6dc7
sw x3, 0(x2) # store 0x68c16d90566b6dc7 in memory
flw f22, 0(x2) # load 0x68c16d90566b6dc7 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmsub.s f30, f25, f22, f2, dyn # perform operation
fmsub.s f30, f25, f22, f2, rdn # perform operation
fmsub.s f30, f25, f22, f2, rmm # perform operation
fmsub.s f30, f25, f22, f2, rne # perform operation
fmsub.s f30, f25, f22, f2, rtz # perform operation
fmsub.s f30, f25, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0xb127fa50212eba2b # load x3 with value 0xb127fa50212eba2b
sw x3, 0(x2) # store 0xb127fa50212eba2b in memory
flw f20, 0(x2) # load 0xb127fa50212eba2b from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmsub.s f9, f23, f20, f5, dyn # perform operation
fmsub.s f9, f23, f20, f5, rdn # perform operation
fmsub.s f9, f23, f20, f5, rmm # perform operation
fmsub.s f9, f23, f20, f5, rne # perform operation
fmsub.s f9, f23, f20, f5, rtz # perform operation
fmsub.s f9, f23, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f23, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xe9892417841a5dfa # load x3 with value 0xe9892417841a5dfa
sw x3, 0(x2) # store 0xe9892417841a5dfa in memory
flw f19, 0(x2) # load 0xe9892417841a5dfa from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmsub.s f16, f1, f19, f23, dyn # perform operation
fmsub.s f16, f1, f19, f23, rdn # perform operation
fmsub.s f16, f1, f19, f23, rmm # perform operation
fmsub.s f16, f1, f19, f23, rne # perform operation
fmsub.s f16, f1, f19, f23, rtz # perform operation
fmsub.s f16, f1, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f1, f19, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x238e89447ecb19fb # load x3 with value 0x238e89447ecb19fb
sw x3, 0(x2) # store 0x238e89447ecb19fb in memory
flw f19, 0(x2) # load 0x238e89447ecb19fb from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmsub.s f22, f15, f19, f28, dyn # perform operation
fmsub.s f22, f15, f19, f28, rdn # perform operation
fmsub.s f22, f15, f19, f28, rmm # perform operation
fmsub.s f22, f15, f19, f28, rne # perform operation
fmsub.s f22, f15, f19, f28, rtz # perform operation
fmsub.s f22, f15, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xdb5116e5a1464e07 # load x3 with value 0xdb5116e5a1464e07
sw x3, 0(x2) # store 0xdb5116e5a1464e07 in memory
flw f13, 0(x2) # load 0xdb5116e5a1464e07 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmsub.s f30, f29, f13, f19, dyn # perform operation
fmsub.s f30, f29, f13, f19, rdn # perform operation
fmsub.s f30, f29, f13, f19, rmm # perform operation
fmsub.s f30, f29, f13, f19, rne # perform operation
fmsub.s f30, f29, f13, f19, rtz # perform operation
fmsub.s f30, f29, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f29, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f29, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x265d012fb10c2efa # load x3 with value 0x265d012fb10c2efa
sw x3, 0(x2) # store 0x265d012fb10c2efa in memory
flw f12, 0(x2) # load 0x265d012fb10c2efa from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmsub.s f27, f15, f12, f26, dyn # perform operation
fmsub.s f27, f15, f12, f26, rdn # perform operation
fmsub.s f27, f15, f12, f26, rmm # perform operation
fmsub.s f27, f15, f12, f26, rne # perform operation
fmsub.s f27, f15, f12, f26, rtz # perform operation
fmsub.s f27, f15, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f15, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f15, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x15512b4427fea965 # load x3 with value 0x15512b4427fea965
sw x3, 0(x2) # store 0x15512b4427fea965 in memory
flw f9, 0(x2) # load 0x15512b4427fea965 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fmsub.s f26, f15, f9, f18, dyn # perform operation
fmsub.s f26, f15, f9, f18, rdn # perform operation
fmsub.s f26, f15, f9, f18, rmm # perform operation
fmsub.s f26, f15, f9, f18, rne # perform operation
fmsub.s f26, f15, f9, f18, rtz # perform operation
fmsub.s f26, f15, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xf710ce87fdf38685 # load x3 with value 0xf710ce87fdf38685
sw x3, 0(x2) # store 0xf710ce87fdf38685 in memory
flw f14, 0(x2) # load 0xf710ce87fdf38685 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmsub.s f21, f30, f14, f13, dyn # perform operation
fmsub.s f21, f30, f14, f13, rdn # perform operation
fmsub.s f21, f30, f14, f13, rmm # perform operation
fmsub.s f21, f30, f14, f13, rne # perform operation
fmsub.s f21, f30, f14, f13, rtz # perform operation
fmsub.s f21, f30, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xc6ad321b5aa88d8b # load x3 with value 0xc6ad321b5aa88d8b
sw x3, 0(x2) # store 0xc6ad321b5aa88d8b in memory
flw f27, 0(x2) # load 0xc6ad321b5aa88d8b from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmsub.s f6, f19, f27, f9, dyn # perform operation
fmsub.s f6, f19, f27, f9, rdn # perform operation
fmsub.s f6, f19, f27, f9, rmm # perform operation
fmsub.s f6, f19, f27, f9, rne # perform operation
fmsub.s f6, f19, f27, f9, rtz # perform operation
fmsub.s f6, f19, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f19, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f19, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f19, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f19, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f19, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x83743a6ba5cf48c # load x3 with value 0x83743a6ba5cf48c
sw x3, 0(x2) # store 0x83743a6ba5cf48c in memory
flw f24, 0(x2) # load 0x83743a6ba5cf48c from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fmsub.s f3, f2, f24, f22, dyn # perform operation
fmsub.s f3, f2, f24, f22, rdn # perform operation
fmsub.s f3, f2, f24, f22, rmm # perform operation
fmsub.s f3, f2, f24, f22, rne # perform operation
fmsub.s f3, f2, f24, f22, rtz # perform operation
fmsub.s f3, f2, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f2, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f2, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x1dcad50028210ff6 # load x3 with value 0x1dcad50028210ff6
sw x3, 0(x2) # store 0x1dcad50028210ff6 in memory
flw f8, 0(x2) # load 0x1dcad50028210ff6 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmsub.s f28, f10, f8, f16, dyn # perform operation
fmsub.s f28, f10, f8, f16, rdn # perform operation
fmsub.s f28, f10, f8, f16, rmm # perform operation
fmsub.s f28, f10, f8, f16, rne # perform operation
fmsub.s f28, f10, f8, f16, rtz # perform operation
fmsub.s f28, f10, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xe33442f4b9db1ac6 # load x3 with value 0xe33442f4b9db1ac6
sw x3, 0(x2) # store 0xe33442f4b9db1ac6 in memory
flw f15, 0(x2) # load 0xe33442f4b9db1ac6 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fmsub.s f12, f14, f15, f6, dyn # perform operation
fmsub.s f12, f14, f15, f6, rdn # perform operation
fmsub.s f12, f14, f15, f6, rmm # perform operation
fmsub.s f12, f14, f15, f6, rne # perform operation
fmsub.s f12, f14, f15, f6, rtz # perform operation
fmsub.s f12, f14, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x632b4a9d70a10107 # load x3 with value 0x632b4a9d70a10107
sw x3, 0(x2) # store 0x632b4a9d70a10107 in memory
flw f26, 0(x2) # load 0x632b4a9d70a10107 from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmsub.s f2, f15, f26, f20, dyn # perform operation
fmsub.s f2, f15, f26, f20, rdn # perform operation
fmsub.s f2, f15, f26, f20, rmm # perform operation
fmsub.s f2, f15, f26, f20, rne # perform operation
fmsub.s f2, f15, f26, f20, rtz # perform operation
fmsub.s f2, f15, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xd66c548337b83344 # load x3 with value 0xd66c548337b83344
sw x3, 0(x2) # store 0xd66c548337b83344 in memory
flw f3, 0(x2) # load 0xd66c548337b83344 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmsub.s f28, f14, f3, f23, dyn # perform operation
fmsub.s f28, f14, f3, f23, rdn # perform operation
fmsub.s f28, f14, f3, f23, rmm # perform operation
fmsub.s f28, f14, f3, f23, rne # perform operation
fmsub.s f28, f14, f3, f23, rtz # perform operation
fmsub.s f28, f14, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x746919ce981a6272 # load x3 with value 0x746919ce981a6272
sw x3, 0(x2) # store 0x746919ce981a6272 in memory
flw f11, 0(x2) # load 0x746919ce981a6272 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fmsub.s f19, f3, f11, f12, dyn # perform operation
fmsub.s f19, f3, f11, f12, rdn # perform operation
fmsub.s f19, f3, f11, f12, rmm # perform operation
fmsub.s f19, f3, f11, f12, rne # perform operation
fmsub.s f19, f3, f11, f12, rtz # perform operation
fmsub.s f19, f3, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xd814a166221181cb # load x3 with value 0xd814a166221181cb
sw x3, 0(x2) # store 0xd814a166221181cb in memory
flw f14, 0(x2) # load 0xd814a166221181cb from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmsub.s f18, f23, f14, f20, dyn # perform operation
fmsub.s f18, f23, f14, f20, rdn # perform operation
fmsub.s f18, f23, f14, f20, rmm # perform operation
fmsub.s f18, f23, f14, f20, rne # perform operation
fmsub.s f18, f23, f14, f20, rtz # perform operation
fmsub.s f18, f23, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x9bef8ff59d107f49 # load x3 with value 0x9bef8ff59d107f49
sw x3, 0(x2) # store 0x9bef8ff59d107f49 in memory
flw f20, 0(x2) # load 0x9bef8ff59d107f49 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fmsub.s f15, f5, f20, f22, dyn # perform operation
fmsub.s f15, f5, f20, f22, rdn # perform operation
fmsub.s f15, f5, f20, f22, rmm # perform operation
fmsub.s f15, f5, f20, f22, rne # perform operation
fmsub.s f15, f5, f20, f22, rtz # perform operation
fmsub.s f15, f5, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x33255e33d7c27266 # load x3 with value 0x33255e33d7c27266
sw x3, 0(x2) # store 0x33255e33d7c27266 in memory
flw f8, 0(x2) # load 0x33255e33d7c27266 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmsub.s f15, f18, f8, f7, dyn # perform operation
fmsub.s f15, f18, f8, f7, rdn # perform operation
fmsub.s f15, f18, f8, f7, rmm # perform operation
fmsub.s f15, f18, f8, f7, rne # perform operation
fmsub.s f15, f18, f8, f7, rtz # perform operation
fmsub.s f15, f18, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f18, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f18, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x14e01c874f0bb140 # load x3 with value 0x14e01c874f0bb140
sw x3, 0(x2) # store 0x14e01c874f0bb140 in memory
flw f11, 0(x2) # load 0x14e01c874f0bb140 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmsub.s f18, f3, f11, f13, dyn # perform operation
fmsub.s f18, f3, f11, f13, rdn # perform operation
fmsub.s f18, f3, f11, f13, rmm # perform operation
fmsub.s f18, f3, f11, f13, rne # perform operation
fmsub.s f18, f3, f11, f13, rtz # perform operation
fmsub.s f18, f3, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f3, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f3, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f3, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f3, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f3, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xdfc85c98efe510b7 # load x3 with value 0xdfc85c98efe510b7
sw x3, 0(x2) # store 0xdfc85c98efe510b7 in memory
flw f10, 0(x2) # load 0xdfc85c98efe510b7 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f12, f19, f10, f28, dyn # perform operation
fmsub.s f12, f19, f10, f28, rdn # perform operation
fmsub.s f12, f19, f10, f28, rmm # perform operation
fmsub.s f12, f19, f10, f28, rne # perform operation
fmsub.s f12, f19, f10, f28, rtz # perform operation
fmsub.s f12, f19, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f19, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f19, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x473b82a8313c87cd # load x3 with value 0x473b82a8313c87cd
sw x3, 0(x2) # store 0x473b82a8313c87cd in memory
flw f23, 0(x2) # load 0x473b82a8313c87cd from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmsub.s f21, f26, f23, f15, dyn # perform operation
fmsub.s f21, f26, f23, f15, rdn # perform operation
fmsub.s f21, f26, f23, f15, rmm # perform operation
fmsub.s f21, f26, f23, f15, rne # perform operation
fmsub.s f21, f26, f23, f15, rtz # perform operation
fmsub.s f21, f26, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xddabb53c0ac713d4 # load x3 with value 0xddabb53c0ac713d4
sw x3, 0(x2) # store 0xddabb53c0ac713d4 in memory
flw f10, 0(x2) # load 0xddabb53c0ac713d4 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmsub.s f25, f6, f10, f2, dyn # perform operation
fmsub.s f25, f6, f10, f2, rdn # perform operation
fmsub.s f25, f6, f10, f2, rmm # perform operation
fmsub.s f25, f6, f10, f2, rne # perform operation
fmsub.s f25, f6, f10, f2, rtz # perform operation
fmsub.s f25, f6, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xcf3a0474e9f4a660 # load x3 with value 0xcf3a0474e9f4a660
sw x3, 0(x2) # store 0xcf3a0474e9f4a660 in memory
flw f29, 0(x2) # load 0xcf3a0474e9f4a660 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fmsub.s f25, f22, f29, f17, dyn # perform operation
fmsub.s f25, f22, f29, f17, rdn # perform operation
fmsub.s f25, f22, f29, f17, rmm # perform operation
fmsub.s f25, f22, f29, f17, rne # perform operation
fmsub.s f25, f22, f29, f17, rtz # perform operation
fmsub.s f25, f22, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f22, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f22, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xa12f929e56f89334 # load x3 with value 0xa12f929e56f89334
sw x3, 0(x2) # store 0xa12f929e56f89334 in memory
flw f11, 0(x2) # load 0xa12f929e56f89334 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f27, f28, f11, f29, dyn # perform operation
fmsub.s f27, f28, f11, f29, rdn # perform operation
fmsub.s f27, f28, f11, f29, rmm # perform operation
fmsub.s f27, f28, f11, f29, rne # perform operation
fmsub.s f27, f28, f11, f29, rtz # perform operation
fmsub.s f27, f28, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x5d248d7a8adeb042 # load x3 with value 0x5d248d7a8adeb042
sw x3, 0(x2) # store 0x5d248d7a8adeb042 in memory
flw f14, 0(x2) # load 0x5d248d7a8adeb042 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fmsub.s f23, f30, f14, f21, dyn # perform operation
fmsub.s f23, f30, f14, f21, rdn # perform operation
fmsub.s f23, f30, f14, f21, rmm # perform operation
fmsub.s f23, f30, f14, f21, rne # perform operation
fmsub.s f23, f30, f14, f21, rtz # perform operation
fmsub.s f23, f30, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f30, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x9982de005d32208c # load x3 with value 0x9982de005d32208c
sw x3, 0(x2) # store 0x9982de005d32208c in memory
flw f15, 0(x2) # load 0x9982de005d32208c from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmsub.s f19, f7, f15, f10, dyn # perform operation
fmsub.s f19, f7, f15, f10, rdn # perform operation
fmsub.s f19, f7, f15, f10, rmm # perform operation
fmsub.s f19, f7, f15, f10, rne # perform operation
fmsub.s f19, f7, f15, f10, rtz # perform operation
fmsub.s f19, f7, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f7, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f7, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xeab6bd2074ceb500 # load x3 with value 0xeab6bd2074ceb500
sw x3, 0(x2) # store 0xeab6bd2074ceb500 in memory
flw f30, 0(x2) # load 0xeab6bd2074ceb500 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmsub.s f22, f8, f30, f28, dyn # perform operation
fmsub.s f22, f8, f30, f28, rdn # perform operation
fmsub.s f22, f8, f30, f28, rmm # perform operation
fmsub.s f22, f8, f30, f28, rne # perform operation
fmsub.s f22, f8, f30, f28, rtz # perform operation
fmsub.s f22, f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0xb714d9a76b10459 # load x3 with value 0xb714d9a76b10459
sw x3, 0(x2) # store 0xb714d9a76b10459 in memory
flw f29, 0(x2) # load 0xb714d9a76b10459 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmsub.s f10, f25, f29, f23, dyn # perform operation
fmsub.s f10, f25, f29, f23, rdn # perform operation
fmsub.s f10, f25, f29, f23, rmm # perform operation
fmsub.s f10, f25, f29, f23, rne # perform operation
fmsub.s f10, f25, f29, f23, rtz # perform operation
fmsub.s f10, f25, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x2db68492bcccf82c # load x3 with value 0x2db68492bcccf82c
sw x3, 0(x2) # store 0x2db68492bcccf82c in memory
flw f11, 0(x2) # load 0x2db68492bcccf82c from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmsub.s f2, f17, f11, f28, dyn # perform operation
fmsub.s f2, f17, f11, f28, rdn # perform operation
fmsub.s f2, f17, f11, f28, rmm # perform operation
fmsub.s f2, f17, f11, f28, rne # perform operation
fmsub.s f2, f17, f11, f28, rtz # perform operation
fmsub.s f2, f17, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xcfc20ca089395161 # load x3 with value 0xcfc20ca089395161
sw x3, 0(x2) # store 0xcfc20ca089395161 in memory
flw f26, 0(x2) # load 0xcfc20ca089395161 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fmsub.s f31, f7, f26, f29, dyn # perform operation
fmsub.s f31, f7, f26, f29, rdn # perform operation
fmsub.s f31, f7, f26, f29, rmm # perform operation
fmsub.s f31, f7, f26, f29, rne # perform operation
fmsub.s f31, f7, f26, f29, rtz # perform operation
fmsub.s f31, f7, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xc4c96561e75df340 # load x3 with value 0xc4c96561e75df340
sw x3, 0(x2) # store 0xc4c96561e75df340 in memory
flw f27, 0(x2) # load 0xc4c96561e75df340 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f19, f3, f27, f26, dyn # perform operation
fmsub.s f19, f3, f27, f26, rdn # perform operation
fmsub.s f19, f3, f27, f26, rmm # perform operation
fmsub.s f19, f3, f27, f26, rne # perform operation
fmsub.s f19, f3, f27, f26, rtz # perform operation
fmsub.s f19, f3, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x16d8dd1a09605298 # load x3 with value 0x16d8dd1a09605298
sw x3, 0(x2) # store 0x16d8dd1a09605298 in memory
flw f16, 0(x2) # load 0x16d8dd1a09605298 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmsub.s f29, f13, f16, f1, dyn # perform operation
fmsub.s f29, f13, f16, f1, rdn # perform operation
fmsub.s f29, f13, f16, f1, rmm # perform operation
fmsub.s f29, f13, f16, f1, rne # perform operation
fmsub.s f29, f13, f16, f1, rtz # perform operation
fmsub.s f29, f13, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x2e8d77f1974136ad # load x3 with value 0x2e8d77f1974136ad
sw x3, 0(x2) # store 0x2e8d77f1974136ad in memory
flw f27, 0(x2) # load 0x2e8d77f1974136ad from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmsub.s f24, f22, f27, f23, dyn # perform operation
fmsub.s f24, f22, f27, f23, rdn # perform operation
fmsub.s f24, f22, f27, f23, rmm # perform operation
fmsub.s f24, f22, f27, f23, rne # perform operation
fmsub.s f24, f22, f27, f23, rtz # perform operation
fmsub.s f24, f22, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x93b0ae279a352dda # load x3 with value 0x93b0ae279a352dda
sw x3, 0(x2) # store 0x93b0ae279a352dda in memory
flw f11, 0(x2) # load 0x93b0ae279a352dda from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fmsub.s f24, f17, f11, f13, dyn # perform operation
fmsub.s f24, f17, f11, f13, rdn # perform operation
fmsub.s f24, f17, f11, f13, rmm # perform operation
fmsub.s f24, f17, f11, f13, rne # perform operation
fmsub.s f24, f17, f11, f13, rtz # perform operation
fmsub.s f24, f17, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x62dd1603dac71af1 # load x3 with value 0x62dd1603dac71af1
sw x3, 0(x2) # store 0x62dd1603dac71af1 in memory
flw f20, 0(x2) # load 0x62dd1603dac71af1 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmsub.s f23, f10, f20, f28, dyn # perform operation
fmsub.s f23, f10, f20, f28, rdn # perform operation
fmsub.s f23, f10, f20, f28, rmm # perform operation
fmsub.s f23, f10, f20, f28, rne # perform operation
fmsub.s f23, f10, f20, f28, rtz # perform operation
fmsub.s f23, f10, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x408612aee5b5ed3d # load x3 with value 0x408612aee5b5ed3d
sw x3, 0(x2) # store 0x408612aee5b5ed3d in memory
flw f30, 0(x2) # load 0x408612aee5b5ed3d from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmsub.s f24, f22, f30, f12, dyn # perform operation
fmsub.s f24, f22, f30, f12, rdn # perform operation
fmsub.s f24, f22, f30, f12, rmm # perform operation
fmsub.s f24, f22, f30, f12, rne # perform operation
fmsub.s f24, f22, f30, f12, rtz # perform operation
fmsub.s f24, f22, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xc4f99cf17d30d602 # load x3 with value 0xc4f99cf17d30d602
sw x3, 0(x2) # store 0xc4f99cf17d30d602 in memory
flw f22, 0(x2) # load 0xc4f99cf17d30d602 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmsub.s f15, f14, f22, f17, dyn # perform operation
fmsub.s f15, f14, f22, f17, rdn # perform operation
fmsub.s f15, f14, f22, f17, rmm # perform operation
fmsub.s f15, f14, f22, f17, rne # perform operation
fmsub.s f15, f14, f22, f17, rtz # perform operation
fmsub.s f15, f14, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x3656f29bbae52eac # load x3 with value 0x3656f29bbae52eac
sw x3, 0(x2) # store 0x3656f29bbae52eac in memory
flw f5, 0(x2) # load 0x3656f29bbae52eac from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmsub.s f7, f21, f5, f1, dyn # perform operation
fmsub.s f7, f21, f5, f1, rdn # perform operation
fmsub.s f7, f21, f5, f1, rmm # perform operation
fmsub.s f7, f21, f5, f1, rne # perform operation
fmsub.s f7, f21, f5, f1, rtz # perform operation
fmsub.s f7, f21, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f21, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f21, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xc34ebeb3738c5496 # load x3 with value 0xc34ebeb3738c5496
sw x3, 0(x2) # store 0xc34ebeb3738c5496 in memory
flw f21, 0(x2) # load 0xc34ebeb3738c5496 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmsub.s f9, f10, f21, f24, dyn # perform operation
fmsub.s f9, f10, f21, f24, rdn # perform operation
fmsub.s f9, f10, f21, f24, rmm # perform operation
fmsub.s f9, f10, f21, f24, rne # perform operation
fmsub.s f9, f10, f21, f24, rtz # perform operation
fmsub.s f9, f10, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xfac270390b7ae754 # load x3 with value 0xfac270390b7ae754
sw x3, 0(x2) # store 0xfac270390b7ae754 in memory
flw f13, 0(x2) # load 0xfac270390b7ae754 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmsub.s f31, f22, f13, f25, dyn # perform operation
fmsub.s f31, f22, f13, f25, rdn # perform operation
fmsub.s f31, f22, f13, f25, rmm # perform operation
fmsub.s f31, f22, f13, f25, rne # perform operation
fmsub.s f31, f22, f13, f25, rtz # perform operation
fmsub.s f31, f22, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f22, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f22, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f22, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f22, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f22, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xb5145fbecf05584d # load x3 with value 0xb5145fbecf05584d
sw x3, 0(x2) # store 0xb5145fbecf05584d in memory
flw f6, 0(x2) # load 0xb5145fbecf05584d from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmsub.s f21, f14, f6, f27, dyn # perform operation
fmsub.s f21, f14, f6, f27, rdn # perform operation
fmsub.s f21, f14, f6, f27, rmm # perform operation
fmsub.s f21, f14, f6, f27, rne # perform operation
fmsub.s f21, f14, f6, f27, rtz # perform operation
fmsub.s f21, f14, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x6246870516a753fd # load x3 with value 0x6246870516a753fd
sw x3, 0(x2) # store 0x6246870516a753fd in memory
flw f19, 0(x2) # load 0x6246870516a753fd from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fmsub.s f24, f30, f19, f2, dyn # perform operation
fmsub.s f24, f30, f19, f2, rdn # perform operation
fmsub.s f24, f30, f19, f2, rmm # perform operation
fmsub.s f24, f30, f19, f2, rne # perform operation
fmsub.s f24, f30, f19, f2, rtz # perform operation
fmsub.s f24, f30, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x98ee111adb47af3f # load x3 with value 0x98ee111adb47af3f
sw x3, 0(x2) # store 0x98ee111adb47af3f in memory
flw f20, 0(x2) # load 0x98ee111adb47af3f from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fmsub.s f5, f22, f20, f18, dyn # perform operation
fmsub.s f5, f22, f20, f18, rdn # perform operation
fmsub.s f5, f22, f20, f18, rmm # perform operation
fmsub.s f5, f22, f20, f18, rne # perform operation
fmsub.s f5, f22, f20, f18, rtz # perform operation
fmsub.s f5, f22, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f22, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x8a19fb839f53285d # load x3 with value 0x8a19fb839f53285d
sw x3, 0(x2) # store 0x8a19fb839f53285d in memory
flw f2, 0(x2) # load 0x8a19fb839f53285d from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmsub.s f7, f14, f2, f3, dyn # perform operation
fmsub.s f7, f14, f2, f3, rdn # perform operation
fmsub.s f7, f14, f2, f3, rmm # perform operation
fmsub.s f7, f14, f2, f3, rne # perform operation
fmsub.s f7, f14, f2, f3, rtz # perform operation
fmsub.s f7, f14, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f14, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xb50569c12f4e3678 # load x3 with value 0xb50569c12f4e3678
sw x3, 0(x2) # store 0xb50569c12f4e3678 in memory
flw f14, 0(x2) # load 0xb50569c12f4e3678 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmsub.s f25, f26, f14, f5, dyn # perform operation
fmsub.s f25, f26, f14, f5, rdn # perform operation
fmsub.s f25, f26, f14, f5, rmm # perform operation
fmsub.s f25, f26, f14, f5, rne # perform operation
fmsub.s f25, f26, f14, f5, rtz # perform operation
fmsub.s f25, f26, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xdbbee5e0ca5d904e # load x3 with value 0xdbbee5e0ca5d904e
sw x3, 0(x2) # store 0xdbbee5e0ca5d904e in memory
flw f30, 0(x2) # load 0xdbbee5e0ca5d904e from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmsub.s f15, f24, f30, f3, dyn # perform operation
fmsub.s f15, f24, f30, f3, rdn # perform operation
fmsub.s f15, f24, f30, f3, rmm # perform operation
fmsub.s f15, f24, f30, f3, rne # perform operation
fmsub.s f15, f24, f30, f3, rtz # perform operation
fmsub.s f15, f24, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f30, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0xadd20dce25bafa5f # load x3 with value 0xadd20dce25bafa5f
sw x3, 0(x2) # store 0xadd20dce25bafa5f in memory
flw f17, 0(x2) # load 0xadd20dce25bafa5f from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f16, f21, f17, f19, dyn # perform operation
fmsub.s f16, f21, f17, f19, rdn # perform operation
fmsub.s f16, f21, f17, f19, rmm # perform operation
fmsub.s f16, f21, f17, f19, rne # perform operation
fmsub.s f16, f21, f17, f19, rtz # perform operation
fmsub.s f16, f21, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xadcdc5d2360f2d11 # load x3 with value 0xadcdc5d2360f2d11
sw x3, 0(x2) # store 0xadcdc5d2360f2d11 in memory
flw f26, 0(x2) # load 0xadcdc5d2360f2d11 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f16, f15, f26, f28, dyn # perform operation
fmsub.s f16, f15, f26, f28, rdn # perform operation
fmsub.s f16, f15, f26, f28, rmm # perform operation
fmsub.s f16, f15, f26, f28, rne # perform operation
fmsub.s f16, f15, f26, f28, rtz # perform operation
fmsub.s f16, f15, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f26, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x5e8426aedab54596 # load x3 with value 0x5e8426aedab54596
sw x3, 0(x2) # store 0x5e8426aedab54596 in memory
flw f15, 0(x2) # load 0x5e8426aedab54596 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmsub.s f27, f25, f15, f22, dyn # perform operation
fmsub.s f27, f25, f15, f22, rdn # perform operation
fmsub.s f27, f25, f15, f22, rmm # perform operation
fmsub.s f27, f25, f15, f22, rne # perform operation
fmsub.s f27, f25, f15, f22, rtz # perform operation
fmsub.s f27, f25, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f25, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x5d02e47695b659a3 # load x3 with value 0x5d02e47695b659a3
sw x3, 0(x2) # store 0x5d02e47695b659a3 in memory
flw f16, 0(x2) # load 0x5d02e47695b659a3 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmsub.s f22, f3, f16, f11, dyn # perform operation
fmsub.s f22, f3, f16, f11, rdn # perform operation
fmsub.s f22, f3, f16, f11, rmm # perform operation
fmsub.s f22, f3, f16, f11, rne # perform operation
fmsub.s f22, f3, f16, f11, rtz # perform operation
fmsub.s f22, f3, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xc12765b433e0664e # load x3 with value 0xc12765b433e0664e
sw x3, 0(x2) # store 0xc12765b433e0664e in memory
flw f19, 0(x2) # load 0xc12765b433e0664e from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmsub.s f20, f24, f19, f14, dyn # perform operation
fmsub.s f20, f24, f19, f14, rdn # perform operation
fmsub.s f20, f24, f19, f14, rmm # perform operation
fmsub.s f20, f24, f19, f14, rne # perform operation
fmsub.s f20, f24, f19, f14, rtz # perform operation
fmsub.s f20, f24, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f24, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f24, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f24, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f24, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f24, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x983b95d2a0c98c00 # load x3 with value 0x983b95d2a0c98c00
sw x3, 0(x2) # store 0x983b95d2a0c98c00 in memory
flw f27, 0(x2) # load 0x983b95d2a0c98c00 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmsub.s f21, f29, f27, f9, dyn # perform operation
fmsub.s f21, f29, f27, f9, rdn # perform operation
fmsub.s f21, f29, f27, f9, rmm # perform operation
fmsub.s f21, f29, f27, f9, rne # perform operation
fmsub.s f21, f29, f27, f9, rtz # perform operation
fmsub.s f21, f29, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f29, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f29, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xbcdb6a8b754efc68 # load x3 with value 0xbcdb6a8b754efc68
sw x3, 0(x2) # store 0xbcdb6a8b754efc68 in memory
flw f23, 0(x2) # load 0xbcdb6a8b754efc68 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fmsub.s f26, f31, f23, f17, dyn # perform operation
fmsub.s f26, f31, f23, f17, rdn # perform operation
fmsub.s f26, f31, f23, f17, rmm # perform operation
fmsub.s f26, f31, f23, f17, rne # perform operation
fmsub.s f26, f31, f23, f17, rtz # perform operation
fmsub.s f26, f31, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f31, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f31, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x65ade45a3c4181cf # load x3 with value 0x65ade45a3c4181cf
sw x3, 0(x2) # store 0x65ade45a3c4181cf in memory
flw f15, 0(x2) # load 0x65ade45a3c4181cf from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fmsub.s f22, f7, f15, f18, dyn # perform operation
fmsub.s f22, f7, f15, f18, rdn # perform operation
fmsub.s f22, f7, f15, f18, rmm # perform operation
fmsub.s f22, f7, f15, f18, rne # perform operation
fmsub.s f22, f7, f15, f18, rtz # perform operation
fmsub.s f22, f7, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x431018a9c04d1a82 # load x3 with value 0x431018a9c04d1a82
sw x3, 0(x2) # store 0x431018a9c04d1a82 in memory
flw f29, 0(x2) # load 0x431018a9c04d1a82 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmsub.s f28, f18, f29, f20, dyn # perform operation
fmsub.s f28, f18, f29, f20, rdn # perform operation
fmsub.s f28, f18, f29, f20, rmm # perform operation
fmsub.s f28, f18, f29, f20, rne # perform operation
fmsub.s f28, f18, f29, f20, rtz # perform operation
fmsub.s f28, f18, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xeea18395a8e8281 # load x3 with value 0xeea18395a8e8281
sw x3, 0(x2) # store 0xeea18395a8e8281 in memory
flw f8, 0(x2) # load 0xeea18395a8e8281 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fmsub.s f12, f9, f8, f20, dyn # perform operation
fmsub.s f12, f9, f8, f20, rdn # perform operation
fmsub.s f12, f9, f8, f20, rmm # perform operation
fmsub.s f12, f9, f8, f20, rne # perform operation
fmsub.s f12, f9, f8, f20, rtz # perform operation
fmsub.s f12, f9, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x395c1778939e5b1a # load x3 with value 0x395c1778939e5b1a
sw x3, 0(x2) # store 0x395c1778939e5b1a in memory
flw f17, 0(x2) # load 0x395c1778939e5b1a from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fmsub.s f8, f12, f17, f14, dyn # perform operation
fmsub.s f8, f12, f17, f14, rdn # perform operation
fmsub.s f8, f12, f17, f14, rmm # perform operation
fmsub.s f8, f12, f17, f14, rne # perform operation
fmsub.s f8, f12, f17, f14, rtz # perform operation
fmsub.s f8, f12, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x102f30c324dd25b4 # load x3 with value 0x102f30c324dd25b4
sw x3, 0(x2) # store 0x102f30c324dd25b4 in memory
flw f8, 0(x2) # load 0x102f30c324dd25b4 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fmsub.s f27, f17, f8, f14, dyn # perform operation
fmsub.s f27, f17, f8, f14, rdn # perform operation
fmsub.s f27, f17, f8, f14, rmm # perform operation
fmsub.s f27, f17, f8, f14, rne # perform operation
fmsub.s f27, f17, f8, f14, rtz # perform operation
fmsub.s f27, f17, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x8686329f146a0b2e # load x3 with value 0x8686329f146a0b2e
sw x3, 0(x2) # store 0x8686329f146a0b2e in memory
flw f9, 0(x2) # load 0x8686329f146a0b2e from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fmsub.s f2, f10, f9, f24, dyn # perform operation
fmsub.s f2, f10, f9, f24, rdn # perform operation
fmsub.s f2, f10, f9, f24, rmm # perform operation
fmsub.s f2, f10, f9, f24, rne # perform operation
fmsub.s f2, f10, f9, f24, rtz # perform operation
fmsub.s f2, f10, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f10, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f10, f9, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x548b18d046fbff86 # load x3 with value 0x548b18d046fbff86
sw x3, 0(x2) # store 0x548b18d046fbff86 in memory
flw f22, 0(x2) # load 0x548b18d046fbff86 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmsub.s f11, f14, f22, f29, dyn # perform operation
fmsub.s f11, f14, f22, f29, rdn # perform operation
fmsub.s f11, f14, f22, f29, rmm # perform operation
fmsub.s f11, f14, f22, f29, rne # perform operation
fmsub.s f11, f14, f22, f29, rtz # perform operation
fmsub.s f11, f14, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0xbdcfd05cef67286 # load x3 with value 0xbdcfd05cef67286
sw x3, 0(x2) # store 0xbdcfd05cef67286 in memory
flw f13, 0(x2) # load 0xbdcfd05cef67286 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmsub.s f22, f8, f13, f31, dyn # perform operation
fmsub.s f22, f8, f13, f31, rdn # perform operation
fmsub.s f22, f8, f13, f31, rmm # perform operation
fmsub.s f22, f8, f13, f31, rne # perform operation
fmsub.s f22, f8, f13, f31, rtz # perform operation
fmsub.s f22, f8, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x7b51a8db15759faf # load x3 with value 0x7b51a8db15759faf
sw x3, 0(x2) # store 0x7b51a8db15759faf in memory
flw f25, 0(x2) # load 0x7b51a8db15759faf from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmsub.s f14, f15, f25, f31, dyn # perform operation
fmsub.s f14, f15, f25, f31, rdn # perform operation
fmsub.s f14, f15, f25, f31, rmm # perform operation
fmsub.s f14, f15, f25, f31, rne # perform operation
fmsub.s f14, f15, f25, f31, rtz # perform operation
fmsub.s f14, f15, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f25, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xd97dfe056fe4a550 # load x3 with value 0xd97dfe056fe4a550
sw x3, 0(x2) # store 0xd97dfe056fe4a550 in memory
flw f20, 0(x2) # load 0xd97dfe056fe4a550 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f1, f5, f20, f31, dyn # perform operation
fmsub.s f1, f5, f20, f31, rdn # perform operation
fmsub.s f1, f5, f20, f31, rmm # perform operation
fmsub.s f1, f5, f20, f31, rne # perform operation
fmsub.s f1, f5, f20, f31, rtz # perform operation
fmsub.s f1, f5, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0xae1660820647a8bd # load x3 with value 0xae1660820647a8bd
sw x3, 0(x2) # store 0xae1660820647a8bd in memory
flw f16, 0(x2) # load 0xae1660820647a8bd from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmsub.s f20, f9, f16, f19, dyn # perform operation
fmsub.s f20, f9, f16, f19, rdn # perform operation
fmsub.s f20, f9, f16, f19, rmm # perform operation
fmsub.s f20, f9, f16, f19, rne # perform operation
fmsub.s f20, f9, f16, f19, rtz # perform operation
fmsub.s f20, f9, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x7d7babba6cc0094c # load x3 with value 0x7d7babba6cc0094c
sw x3, 0(x2) # store 0x7d7babba6cc0094c in memory
flw f14, 0(x2) # load 0x7d7babba6cc0094c from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmsub.s f30, f10, f14, f13, dyn # perform operation
fmsub.s f30, f10, f14, f13, rdn # perform operation
fmsub.s f30, f10, f14, f13, rmm # perform operation
fmsub.s f30, f10, f14, f13, rne # perform operation
fmsub.s f30, f10, f14, f13, rtz # perform operation
fmsub.s f30, f10, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f14, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xe6076ad778449a5c # load x3 with value 0xe6076ad778449a5c
sw x3, 0(x2) # store 0xe6076ad778449a5c in memory
flw f7, 0(x2) # load 0xe6076ad778449a5c from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f9, f23, f7, f20, dyn # perform operation
fmsub.s f9, f23, f7, f20, rdn # perform operation
fmsub.s f9, f23, f7, f20, rmm # perform operation
fmsub.s f9, f23, f7, f20, rne # perform operation
fmsub.s f9, f23, f7, f20, rtz # perform operation
fmsub.s f9, f23, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f23, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f23, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x4837d1142fb37331 # load x3 with value 0x4837d1142fb37331
sw x3, 0(x2) # store 0x4837d1142fb37331 in memory
flw f19, 0(x2) # load 0x4837d1142fb37331 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f2, f25, f19, f29, dyn # perform operation
fmsub.s f2, f25, f19, f29, rdn # perform operation
fmsub.s f2, f25, f19, f29, rmm # perform operation
fmsub.s f2, f25, f19, f29, rne # perform operation
fmsub.s f2, f25, f19, f29, rtz # perform operation
fmsub.s f2, f25, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f25, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x33806d3d115755da # load x3 with value 0x33806d3d115755da
sw x3, 0(x2) # store 0x33806d3d115755da in memory
flw f21, 0(x2) # load 0x33806d3d115755da from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmsub.s f22, f16, f21, f24, dyn # perform operation
fmsub.s f22, f16, f21, f24, rdn # perform operation
fmsub.s f22, f16, f21, f24, rmm # perform operation
fmsub.s f22, f16, f21, f24, rne # perform operation
fmsub.s f22, f16, f21, f24, rtz # perform operation
fmsub.s f22, f16, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x11603950d9193599 # load x3 with value 0x11603950d9193599
sw x3, 0(x2) # store 0x11603950d9193599 in memory
flw f20, 0(x2) # load 0x11603950d9193599 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fmsub.s f17, f3, f20, f1, dyn # perform operation
fmsub.s f17, f3, f20, f1, rdn # perform operation
fmsub.s f17, f3, f20, f1, rmm # perform operation
fmsub.s f17, f3, f20, f1, rne # perform operation
fmsub.s f17, f3, f20, f1, rtz # perform operation
fmsub.s f17, f3, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x8bb9448f1c652f47 # load x3 with value 0x8bb9448f1c652f47
sw x3, 0(x2) # store 0x8bb9448f1c652f47 in memory
flw f2, 0(x2) # load 0x8bb9448f1c652f47 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmsub.s f13, f3, f2, f26, dyn # perform operation
fmsub.s f13, f3, f2, f26, rdn # perform operation
fmsub.s f13, f3, f2, f26, rmm # perform operation
fmsub.s f13, f3, f2, f26, rne # perform operation
fmsub.s f13, f3, f2, f26, rtz # perform operation
fmsub.s f13, f3, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x57bf96cea1b2180 # load x3 with value 0x57bf96cea1b2180
sw x3, 0(x2) # store 0x57bf96cea1b2180 in memory
flw f16, 0(x2) # load 0x57bf96cea1b2180 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmsub.s f1, f3, f16, f31, dyn # perform operation
fmsub.s f1, f3, f16, f31, rdn # perform operation
fmsub.s f1, f3, f16, f31, rmm # perform operation
fmsub.s f1, f3, f16, f31, rne # perform operation
fmsub.s f1, f3, f16, f31, rtz # perform operation
fmsub.s f1, f3, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f3, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f3, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f3, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f3, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f3, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x2cdf24b5449d0a7e # load x3 with value 0x2cdf24b5449d0a7e
sw x3, 0(x2) # store 0x2cdf24b5449d0a7e in memory
flw f20, 0(x2) # load 0x2cdf24b5449d0a7e from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmsub.s f15, f25, f20, f27, dyn # perform operation
fmsub.s f15, f25, f20, f27, rdn # perform operation
fmsub.s f15, f25, f20, f27, rmm # perform operation
fmsub.s f15, f25, f20, f27, rne # perform operation
fmsub.s f15, f25, f20, f27, rtz # perform operation
fmsub.s f15, f25, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x7c2e25a063d49b66 # load x3 with value 0x7c2e25a063d49b66
sw x3, 0(x2) # store 0x7c2e25a063d49b66 in memory
flw f8, 0(x2) # load 0x7c2e25a063d49b66 from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fmsub.s f19, f1, f8, f14, dyn # perform operation
fmsub.s f19, f1, f8, f14, rdn # perform operation
fmsub.s f19, f1, f8, f14, rmm # perform operation
fmsub.s f19, f1, f8, f14, rne # perform operation
fmsub.s f19, f1, f8, f14, rtz # perform operation
fmsub.s f19, f1, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f1, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f1, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xe7ea54d39dc2a179 # load x3 with value 0xe7ea54d39dc2a179
sw x3, 0(x2) # store 0xe7ea54d39dc2a179 in memory
flw f7, 0(x2) # load 0xe7ea54d39dc2a179 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fmsub.s f28, f2, f7, f10, dyn # perform operation
fmsub.s f28, f2, f7, f10, rdn # perform operation
fmsub.s f28, f2, f7, f10, rmm # perform operation
fmsub.s f28, f2, f7, f10, rne # perform operation
fmsub.s f28, f2, f7, f10, rtz # perform operation
fmsub.s f28, f2, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x959ba4dfca812a61 # load x3 with value 0x959ba4dfca812a61
sw x3, 0(x2) # store 0x959ba4dfca812a61 in memory
flw f30, 0(x2) # load 0x959ba4dfca812a61 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmsub.s f9, f20, f30, f18, dyn # perform operation
fmsub.s f9, f20, f30, f18, rdn # perform operation
fmsub.s f9, f20, f30, f18, rmm # perform operation
fmsub.s f9, f20, f30, f18, rne # perform operation
fmsub.s f9, f20, f30, f18, rtz # perform operation
fmsub.s f9, f20, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f20, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x687d220876af46a # load x3 with value 0x687d220876af46a
sw x3, 0(x2) # store 0x687d220876af46a in memory
flw f15, 0(x2) # load 0x687d220876af46a from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
fmsub.s f14, f21, f15, f10, dyn # perform operation
fmsub.s f14, f21, f15, f10, rdn # perform operation
fmsub.s f14, f21, f15, f10, rmm # perform operation
fmsub.s f14, f21, f15, f10, rne # perform operation
fmsub.s f14, f21, f15, f10, rtz # perform operation
fmsub.s f14, f21, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0xaae19c7001a01187 # load x3 with value 0xaae19c7001a01187
sw x3, 0(x2) # store 0xaae19c7001a01187 in memory
flw f10, 0(x2) # load 0xaae19c7001a01187 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmsub.s f7, f26, f10, f24, dyn # perform operation
fmsub.s f7, f26, f10, f24, rdn # perform operation
fmsub.s f7, f26, f10, f24, rmm # perform operation
fmsub.s f7, f26, f10, f24, rne # perform operation
fmsub.s f7, f26, f10, f24, rtz # perform operation
fmsub.s f7, f26, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x5eb4a0d782d7b56c # load x3 with value 0x5eb4a0d782d7b56c
sw x3, 0(x2) # store 0x5eb4a0d782d7b56c in memory
flw f27, 0(x2) # load 0x5eb4a0d782d7b56c from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmsub.s f1, f17, f27, f10, dyn # perform operation
fmsub.s f1, f17, f27, f10, rdn # perform operation
fmsub.s f1, f17, f27, f10, rmm # perform operation
fmsub.s f1, f17, f27, f10, rne # perform operation
fmsub.s f1, f17, f27, f10, rtz # perform operation
fmsub.s f1, f17, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0xef8f089683a74027 # load x3 with value 0xef8f089683a74027
sw x3, 0(x2) # store 0xef8f089683a74027 in memory
flw f28, 0(x2) # load 0xef8f089683a74027 from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmsub.s f29, f27, f28, f11, dyn # perform operation
fmsub.s f29, f27, f28, f11, rdn # perform operation
fmsub.s f29, f27, f28, f11, rmm # perform operation
fmsub.s f29, f27, f28, f11, rne # perform operation
fmsub.s f29, f27, f28, f11, rtz # perform operation
fmsub.s f29, f27, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f27, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f27, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x56cdf79af10829db # load x3 with value 0x56cdf79af10829db
sw x3, 0(x2) # store 0x56cdf79af10829db in memory
flw f16, 0(x2) # load 0x56cdf79af10829db from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmsub.s f17, f8, f16, f6, dyn # perform operation
fmsub.s f17, f8, f16, f6, rdn # perform operation
fmsub.s f17, f8, f16, f6, rmm # perform operation
fmsub.s f17, f8, f16, f6, rne # perform operation
fmsub.s f17, f8, f16, f6, rtz # perform operation
fmsub.s f17, f8, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0xb995fb7ff5581cad # load x3 with value 0xb995fb7ff5581cad
sw x3, 0(x2) # store 0xb995fb7ff5581cad in memory
flw f1, 0(x2) # load 0xb995fb7ff5581cad from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fmsub.s f19, f29, f1, f8, dyn # perform operation
fmsub.s f19, f29, f1, f8, rdn # perform operation
fmsub.s f19, f29, f1, f8, rmm # perform operation
fmsub.s f19, f29, f1, f8, rne # perform operation
fmsub.s f19, f29, f1, f8, rtz # perform operation
fmsub.s f19, f29, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f29, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f29, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f29, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f29, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f29, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xd29ba5397dfc1316 # load x3 with value 0xd29ba5397dfc1316
sw x3, 0(x2) # store 0xd29ba5397dfc1316 in memory
flw f31, 0(x2) # load 0xd29ba5397dfc1316 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmsub.s f24, f17, f31, f2, dyn # perform operation
fmsub.s f24, f17, f31, f2, rdn # perform operation
fmsub.s f24, f17, f31, f2, rmm # perform operation
fmsub.s f24, f17, f31, f2, rne # perform operation
fmsub.s f24, f17, f31, f2, rtz # perform operation
fmsub.s f24, f17, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xfb5073c4b9b1e0e2 # load x3 with value 0xfb5073c4b9b1e0e2
sw x3, 0(x2) # store 0xfb5073c4b9b1e0e2 in memory
flw f17, 0(x2) # load 0xfb5073c4b9b1e0e2 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fmsub.s f25, f24, f17, f26, dyn # perform operation
fmsub.s f25, f24, f17, f26, rdn # perform operation
fmsub.s f25, f24, f17, f26, rmm # perform operation
fmsub.s f25, f24, f17, f26, rne # perform operation
fmsub.s f25, f24, f17, f26, rtz # perform operation
fmsub.s f25, f24, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f24, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xae8a2594adaac7d9 # load x3 with value 0xae8a2594adaac7d9
sw x3, 0(x2) # store 0xae8a2594adaac7d9 in memory
flw f10, 0(x2) # load 0xae8a2594adaac7d9 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmsub.s f1, f17, f10, f9, dyn # perform operation
fmsub.s f1, f17, f10, f9, rdn # perform operation
fmsub.s f1, f17, f10, f9, rmm # perform operation
fmsub.s f1, f17, f10, f9, rne # perform operation
fmsub.s f1, f17, f10, f9, rtz # perform operation
fmsub.s f1, f17, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f10, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xaddcaa35c16ebb14 # load x3 with value 0xaddcaa35c16ebb14
sw x3, 0(x2) # store 0xaddcaa35c16ebb14 in memory
flw f14, 0(x2) # load 0xaddcaa35c16ebb14 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmsub.s f19, f12, f14, f23, dyn # perform operation
fmsub.s f19, f12, f14, f23, rdn # perform operation
fmsub.s f19, f12, f14, f23, rmm # perform operation
fmsub.s f19, f12, f14, f23, rne # perform operation
fmsub.s f19, f12, f14, f23, rtz # perform operation
fmsub.s f19, f12, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f12, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f12, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f12, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f12, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f12, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xf0b1167ece29ba7 # load x3 with value 0xf0b1167ece29ba7
sw x3, 0(x2) # store 0xf0b1167ece29ba7 in memory
flw f25, 0(x2) # load 0xf0b1167ece29ba7 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmsub.s f28, f7, f25, f31, dyn # perform operation
fmsub.s f28, f7, f25, f31, rdn # perform operation
fmsub.s f28, f7, f25, f31, rmm # perform operation
fmsub.s f28, f7, f25, f31, rne # perform operation
fmsub.s f28, f7, f25, f31, rtz # perform operation
fmsub.s f28, f7, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f25, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0xd220107825c178fd # load x3 with value 0xd220107825c178fd
sw x3, 0(x2) # store 0xd220107825c178fd in memory
flw f5, 0(x2) # load 0xd220107825c178fd from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmsub.s f21, f16, f5, f19, dyn # perform operation
fmsub.s f21, f16, f5, f19, rdn # perform operation
fmsub.s f21, f16, f5, f19, rmm # perform operation
fmsub.s f21, f16, f5, f19, rne # perform operation
fmsub.s f21, f16, f5, f19, rtz # perform operation
fmsub.s f21, f16, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x724a577b23c8252 # load x3 with value 0x724a577b23c8252
sw x3, 0(x2) # store 0x724a577b23c8252 in memory
flw f6, 0(x2) # load 0x724a577b23c8252 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmsub.s f14, f29, f6, f27, dyn # perform operation
fmsub.s f14, f29, f6, f27, rdn # perform operation
fmsub.s f14, f29, f6, f27, rmm # perform operation
fmsub.s f14, f29, f6, f27, rne # perform operation
fmsub.s f14, f29, f6, f27, rtz # perform operation
fmsub.s f14, f29, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x55f5c5f3e575c58b # load x3 with value 0x55f5c5f3e575c58b
sw x3, 0(x2) # store 0x55f5c5f3e575c58b in memory
flw f26, 0(x2) # load 0x55f5c5f3e575c58b from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmsub.s f24, f6, f26, f19, dyn # perform operation
fmsub.s f24, f6, f26, f19, rdn # perform operation
fmsub.s f24, f6, f26, f19, rmm # perform operation
fmsub.s f24, f6, f26, f19, rne # perform operation
fmsub.s f24, f6, f26, f19, rtz # perform operation
fmsub.s f24, f6, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f6, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f6, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xca2f672a41d5ff55 # load x3 with value 0xca2f672a41d5ff55
sw x3, 0(x2) # store 0xca2f672a41d5ff55 in memory
flw f26, 0(x2) # load 0xca2f672a41d5ff55 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmsub.s f10, f9, f26, f17, dyn # perform operation
fmsub.s f10, f9, f26, f17, rdn # perform operation
fmsub.s f10, f9, f26, f17, rmm # perform operation
fmsub.s f10, f9, f26, f17, rne # perform operation
fmsub.s f10, f9, f26, f17, rtz # perform operation
fmsub.s f10, f9, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x766171dea3a4710a # load x3 with value 0x766171dea3a4710a
sw x3, 0(x2) # store 0x766171dea3a4710a in memory
flw f11, 0(x2) # load 0x766171dea3a4710a from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmsub.s f6, f8, f11, f10, dyn # perform operation
fmsub.s f6, f8, f11, f10, rdn # perform operation
fmsub.s f6, f8, f11, f10, rmm # perform operation
fmsub.s f6, f8, f11, f10, rne # perform operation
fmsub.s f6, f8, f11, f10, rtz # perform operation
fmsub.s f6, f8, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x67de0b2b3dc9dcf1 # load x3 with value 0x67de0b2b3dc9dcf1
sw x3, 0(x2) # store 0x67de0b2b3dc9dcf1 in memory
flw f23, 0(x2) # load 0x67de0b2b3dc9dcf1 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmsub.s f31, f11, f23, f29, dyn # perform operation
fmsub.s f31, f11, f23, f29, rdn # perform operation
fmsub.s f31, f11, f23, f29, rmm # perform operation
fmsub.s f31, f11, f23, f29, rne # perform operation
fmsub.s f31, f11, f23, f29, rtz # perform operation
fmsub.s f31, f11, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x95c5dd742aa4f3b9 # load x3 with value 0x95c5dd742aa4f3b9
sw x3, 0(x2) # store 0x95c5dd742aa4f3b9 in memory
flw f29, 0(x2) # load 0x95c5dd742aa4f3b9 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fmsub.s f15, f24, f29, f10, dyn # perform operation
fmsub.s f15, f24, f29, f10, rdn # perform operation
fmsub.s f15, f24, f29, f10, rmm # perform operation
fmsub.s f15, f24, f29, f10, rne # perform operation
fmsub.s f15, f24, f29, f10, rtz # perform operation
fmsub.s f15, f24, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x697f4bbb9e7c9497 # load x3 with value 0x697f4bbb9e7c9497
sw x3, 0(x2) # store 0x697f4bbb9e7c9497 in memory
flw f18, 0(x2) # load 0x697f4bbb9e7c9497 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fmsub.s f9, f16, f18, f5, dyn # perform operation
fmsub.s f9, f16, f18, f5, rdn # perform operation
fmsub.s f9, f16, f18, f5, rmm # perform operation
fmsub.s f9, f16, f18, f5, rne # perform operation
fmsub.s f9, f16, f18, f5, rtz # perform operation
fmsub.s f9, f16, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f18, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x5d4e2ddf69aca939 # load x3 with value 0x5d4e2ddf69aca939
sw x3, 0(x2) # store 0x5d4e2ddf69aca939 in memory
flw f29, 0(x2) # load 0x5d4e2ddf69aca939 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmsub.s f8, f14, f29, f1, dyn # perform operation
fmsub.s f8, f14, f29, f1, rdn # perform operation
fmsub.s f8, f14, f29, f1, rmm # perform operation
fmsub.s f8, f14, f29, f1, rne # perform operation
fmsub.s f8, f14, f29, f1, rtz # perform operation
fmsub.s f8, f14, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x57532f27bf197ebe # load x3 with value 0x57532f27bf197ebe
sw x3, 0(x2) # store 0x57532f27bf197ebe in memory
flw f5, 0(x2) # load 0x57532f27bf197ebe from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f2, f3, f5, f18, dyn # perform operation
fmsub.s f2, f3, f5, f18, rdn # perform operation
fmsub.s f2, f3, f5, f18, rmm # perform operation
fmsub.s f2, f3, f5, f18, rne # perform operation
fmsub.s f2, f3, f5, f18, rtz # perform operation
fmsub.s f2, f3, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x2c4c295ead1e3e33 # load x3 with value 0x2c4c295ead1e3e33
sw x3, 0(x2) # store 0x2c4c295ead1e3e33 in memory
flw f30, 0(x2) # load 0x2c4c295ead1e3e33 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmsub.s f25, f27, f30, f28, dyn # perform operation
fmsub.s f25, f27, f30, f28, rdn # perform operation
fmsub.s f25, f27, f30, f28, rmm # perform operation
fmsub.s f25, f27, f30, f28, rne # perform operation
fmsub.s f25, f27, f30, f28, rtz # perform operation
fmsub.s f25, f27, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f27, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f27, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f27, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f27, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f27, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x6c2a4f6b5af7266c # load x3 with value 0x6c2a4f6b5af7266c
sw x3, 0(x2) # store 0x6c2a4f6b5af7266c in memory
flw f26, 0(x2) # load 0x6c2a4f6b5af7266c from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fmsub.s f21, f18, f26, f12, dyn # perform operation
fmsub.s f21, f18, f26, f12, rdn # perform operation
fmsub.s f21, f18, f26, f12, rmm # perform operation
fmsub.s f21, f18, f26, f12, rne # perform operation
fmsub.s f21, f18, f26, f12, rtz # perform operation
fmsub.s f21, f18, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0xa21ae5d7bde90e15 # load x3 with value 0xa21ae5d7bde90e15
sw x3, 0(x2) # store 0xa21ae5d7bde90e15 in memory
flw f26, 0(x2) # load 0xa21ae5d7bde90e15 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f31, f10, f26, f25, dyn # perform operation
fmsub.s f31, f10, f26, f25, rdn # perform operation
fmsub.s f31, f10, f26, f25, rmm # perform operation
fmsub.s f31, f10, f26, f25, rne # perform operation
fmsub.s f31, f10, f26, f25, rtz # perform operation
fmsub.s f31, f10, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x6951b65708df71b2 # load x3 with value 0x6951b65708df71b2
sw x3, 0(x2) # store 0x6951b65708df71b2 in memory
flw f11, 0(x2) # load 0x6951b65708df71b2 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmsub.s f18, f27, f11, f25, dyn # perform operation
fmsub.s f18, f27, f11, f25, rdn # perform operation
fmsub.s f18, f27, f11, f25, rmm # perform operation
fmsub.s f18, f27, f11, f25, rne # perform operation
fmsub.s f18, f27, f11, f25, rtz # perform operation
fmsub.s f18, f27, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xfb57be0d1d841274 # load x3 with value 0xfb57be0d1d841274
sw x3, 0(x2) # store 0xfb57be0d1d841274 in memory
flw f30, 0(x2) # load 0xfb57be0d1d841274 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmsub.s f20, f12, f30, f29, dyn # perform operation
fmsub.s f20, f12, f30, f29, rdn # perform operation
fmsub.s f20, f12, f30, f29, rmm # perform operation
fmsub.s f20, f12, f30, f29, rne # perform operation
fmsub.s f20, f12, f30, f29, rtz # perform operation
fmsub.s f20, f12, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f12, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f12, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f12, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f12, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f12, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x3156c8c8d59c6243 # load x3 with value 0x3156c8c8d59c6243
sw x3, 0(x2) # store 0x3156c8c8d59c6243 in memory
flw f6, 0(x2) # load 0x3156c8c8d59c6243 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmsub.s f12, f1, f6, f28, dyn # perform operation
fmsub.s f12, f1, f6, f28, rdn # perform operation
fmsub.s f12, f1, f6, f28, rmm # perform operation
fmsub.s f12, f1, f6, f28, rne # perform operation
fmsub.s f12, f1, f6, f28, rtz # perform operation
fmsub.s f12, f1, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x66d6aa1a035ef57c # load x3 with value 0x66d6aa1a035ef57c
sw x3, 0(x2) # store 0x66d6aa1a035ef57c in memory
flw f3, 0(x2) # load 0x66d6aa1a035ef57c from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmsub.s f23, f24, f3, f8, dyn # perform operation
fmsub.s f23, f24, f3, f8, rdn # perform operation
fmsub.s f23, f24, f3, f8, rmm # perform operation
fmsub.s f23, f24, f3, f8, rne # perform operation
fmsub.s f23, f24, f3, f8, rtz # perform operation
fmsub.s f23, f24, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f24, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f24, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x4f7dc4bd05f681d4 # load x3 with value 0x4f7dc4bd05f681d4
sw x3, 0(x2) # store 0x4f7dc4bd05f681d4 in memory
flw f19, 0(x2) # load 0x4f7dc4bd05f681d4 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmsub.s f15, f27, f19, f16, dyn # perform operation
fmsub.s f15, f27, f19, f16, rdn # perform operation
fmsub.s f15, f27, f19, f16, rmm # perform operation
fmsub.s f15, f27, f19, f16, rne # perform operation
fmsub.s f15, f27, f19, f16, rtz # perform operation
fmsub.s f15, f27, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f27, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f27, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xf7e04977940ec0ef # load x3 with value 0xf7e04977940ec0ef
sw x3, 0(x2) # store 0xf7e04977940ec0ef in memory
flw f15, 0(x2) # load 0xf7e04977940ec0ef from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f14, f23, f15, f11, dyn # perform operation
fmsub.s f14, f23, f15, f11, rdn # perform operation
fmsub.s f14, f23, f15, f11, rmm # perform operation
fmsub.s f14, f23, f15, f11, rne # perform operation
fmsub.s f14, f23, f15, f11, rtz # perform operation
fmsub.s f14, f23, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f23, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x9ff97658ff2cab0a # load x3 with value 0x9ff97658ff2cab0a
sw x3, 0(x2) # store 0x9ff97658ff2cab0a in memory
flw f2, 0(x2) # load 0x9ff97658ff2cab0a from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmsub.s f16, f7, f2, f19, dyn # perform operation
fmsub.s f16, f7, f2, f19, rdn # perform operation
fmsub.s f16, f7, f2, f19, rmm # perform operation
fmsub.s f16, f7, f2, f19, rne # perform operation
fmsub.s f16, f7, f2, f19, rtz # perform operation
fmsub.s f16, f7, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f7, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f7, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f7, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f7, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f7, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xe78e2e2a7d92831f # load x3 with value 0xe78e2e2a7d92831f
sw x3, 0(x2) # store 0xe78e2e2a7d92831f in memory
flw f13, 0(x2) # load 0xe78e2e2a7d92831f from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmsub.s f10, f25, f13, f27, dyn # perform operation
fmsub.s f10, f25, f13, f27, rdn # perform operation
fmsub.s f10, f25, f13, f27, rmm # perform operation
fmsub.s f10, f25, f13, f27, rne # perform operation
fmsub.s f10, f25, f13, f27, rtz # perform operation
fmsub.s f10, f25, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xc389dc4144f901e6 # load x3 with value 0xc389dc4144f901e6
sw x3, 0(x2) # store 0xc389dc4144f901e6 in memory
flw f14, 0(x2) # load 0xc389dc4144f901e6 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmsub.s f25, f12, f14, f16, dyn # perform operation
fmsub.s f25, f12, f14, f16, rdn # perform operation
fmsub.s f25, f12, f14, f16, rmm # perform operation
fmsub.s f25, f12, f14, f16, rne # perform operation
fmsub.s f25, f12, f14, f16, rtz # perform operation
fmsub.s f25, f12, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x4cd22c76b11cda4c # load x3 with value 0x4cd22c76b11cda4c
sw x3, 0(x2) # store 0x4cd22c76b11cda4c in memory
flw f22, 0(x2) # load 0x4cd22c76b11cda4c from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fmsub.s f14, f18, f22, f26, dyn # perform operation
fmsub.s f14, f18, f22, f26, rdn # perform operation
fmsub.s f14, f18, f22, f26, rmm # perform operation
fmsub.s f14, f18, f22, f26, rne # perform operation
fmsub.s f14, f18, f22, f26, rtz # perform operation
fmsub.s f14, f18, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f18, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f18, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f18, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f18, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f18, f22, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0xc2f80f927f787c07 # load x3 with value 0xc2f80f927f787c07
sw x3, 0(x2) # store 0xc2f80f927f787c07 in memory
flw f7, 0(x2) # load 0xc2f80f927f787c07 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmsub.s f30, f16, f7, f14, dyn # perform operation
fmsub.s f30, f16, f7, f14, rdn # perform operation
fmsub.s f30, f16, f7, f14, rmm # perform operation
fmsub.s f30, f16, f7, f14, rne # perform operation
fmsub.s f30, f16, f7, f14, rtz # perform operation
fmsub.s f30, f16, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f16, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f16, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x42aefead8a0a3a9a # load x3 with value 0x42aefead8a0a3a9a
sw x3, 0(x2) # store 0x42aefead8a0a3a9a in memory
flw f14, 0(x2) # load 0x42aefead8a0a3a9a from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmsub.s f11, f27, f14, f25, dyn # perform operation
fmsub.s f11, f27, f14, f25, rdn # perform operation
fmsub.s f11, f27, f14, f25, rmm # perform operation
fmsub.s f11, f27, f14, f25, rne # perform operation
fmsub.s f11, f27, f14, f25, rtz # perform operation
fmsub.s f11, f27, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x6949b656537359ea # load x3 with value 0x6949b656537359ea
sw x3, 0(x2) # store 0x6949b656537359ea in memory
flw f18, 0(x2) # load 0x6949b656537359ea from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fmsub.s f13, f15, f18, f14, dyn # perform operation
fmsub.s f13, f15, f18, f14, rdn # perform operation
fmsub.s f13, f15, f18, f14, rmm # perform operation
fmsub.s f13, f15, f18, f14, rne # perform operation
fmsub.s f13, f15, f18, f14, rtz # perform operation
fmsub.s f13, f15, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x2715a74726fcb39e # load x3 with value 0x2715a74726fcb39e
sw x3, 0(x2) # store 0x2715a74726fcb39e in memory
flw f31, 0(x2) # load 0x2715a74726fcb39e from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmsub.s f17, f7, f31, f22, dyn # perform operation
fmsub.s f17, f7, f31, f22, rdn # perform operation
fmsub.s f17, f7, f31, f22, rmm # perform operation
fmsub.s f17, f7, f31, f22, rne # perform operation
fmsub.s f17, f7, f31, f22, rtz # perform operation
fmsub.s f17, f7, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x10b452f591082bc3 # load x3 with value 0x10b452f591082bc3
sw x3, 0(x2) # store 0x10b452f591082bc3 in memory
flw f11, 0(x2) # load 0x10b452f591082bc3 from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmsub.s f13, f27, f11, f17, dyn # perform operation
fmsub.s f13, f27, f11, f17, rdn # perform operation
fmsub.s f13, f27, f11, f17, rmm # perform operation
fmsub.s f13, f27, f11, f17, rne # perform operation
fmsub.s f13, f27, f11, f17, rtz # perform operation
fmsub.s f13, f27, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f27, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f27, f11, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x2aa550186007573d # load x3 with value 0x2aa550186007573d
sw x3, 0(x2) # store 0x2aa550186007573d in memory
flw f20, 0(x2) # load 0x2aa550186007573d from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmsub.s f16, f27, f20, f2, dyn # perform operation
fmsub.s f16, f27, f20, f2, rdn # perform operation
fmsub.s f16, f27, f20, f2, rmm # perform operation
fmsub.s f16, f27, f20, f2, rne # perform operation
fmsub.s f16, f27, f20, f2, rtz # perform operation
fmsub.s f16, f27, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f27, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x9d6d58b687d9198e # load x3 with value 0x9d6d58b687d9198e
sw x3, 0(x2) # store 0x9d6d58b687d9198e in memory
flw f23, 0(x2) # load 0x9d6d58b687d9198e from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fmsub.s f29, f19, f23, f6, dyn # perform operation
fmsub.s f29, f19, f23, f6, rdn # perform operation
fmsub.s f29, f19, f23, f6, rmm # perform operation
fmsub.s f29, f19, f23, f6, rne # perform operation
fmsub.s f29, f19, f23, f6, rtz # perform operation
fmsub.s f29, f19, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f19, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xc8d436089db656e8 # load x3 with value 0xc8d436089db656e8
sw x3, 0(x2) # store 0xc8d436089db656e8 in memory
flw f10, 0(x2) # load 0xc8d436089db656e8 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmsub.s f27, f3, f10, f16, dyn # perform operation
fmsub.s f27, f3, f10, f16, rdn # perform operation
fmsub.s f27, f3, f10, f16, rmm # perform operation
fmsub.s f27, f3, f10, f16, rne # perform operation
fmsub.s f27, f3, f10, f16, rtz # perform operation
fmsub.s f27, f3, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f10, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xf1c54f71af2a3fab # load x3 with value 0xf1c54f71af2a3fab
sw x3, 0(x2) # store 0xf1c54f71af2a3fab in memory
flw f27, 0(x2) # load 0xf1c54f71af2a3fab from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmsub.s f8, f24, f27, f26, dyn # perform operation
fmsub.s f8, f24, f27, f26, rdn # perform operation
fmsub.s f8, f24, f27, f26, rmm # perform operation
fmsub.s f8, f24, f27, f26, rne # perform operation
fmsub.s f8, f24, f27, f26, rtz # perform operation
fmsub.s f8, f24, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xe07523dc19f140d0 # load x3 with value 0xe07523dc19f140d0
sw x3, 0(x2) # store 0xe07523dc19f140d0 in memory
flw f22, 0(x2) # load 0xe07523dc19f140d0 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fmsub.s f12, f6, f22, f25, dyn # perform operation
fmsub.s f12, f6, f22, f25, rdn # perform operation
fmsub.s f12, f6, f22, f25, rmm # perform operation
fmsub.s f12, f6, f22, f25, rne # perform operation
fmsub.s f12, f6, f22, f25, rtz # perform operation
fmsub.s f12, f6, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x92d97ecb16d5dc07 # load x3 with value 0x92d97ecb16d5dc07
sw x3, 0(x2) # store 0x92d97ecb16d5dc07 in memory
flw f16, 0(x2) # load 0x92d97ecb16d5dc07 from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fmsub.s f30, f18, f16, f7, dyn # perform operation
fmsub.s f30, f18, f16, f7, rdn # perform operation
fmsub.s f30, f18, f16, f7, rmm # perform operation
fmsub.s f30, f18, f16, f7, rne # perform operation
fmsub.s f30, f18, f16, f7, rtz # perform operation
fmsub.s f30, f18, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f18, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f18, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xc5e596b4796a262a # load x3 with value 0xc5e596b4796a262a
sw x3, 0(x2) # store 0xc5e596b4796a262a in memory
flw f26, 0(x2) # load 0xc5e596b4796a262a from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fmsub.s f16, f30, f26, f6, dyn # perform operation
fmsub.s f16, f30, f26, f6, rdn # perform operation
fmsub.s f16, f30, f26, f6, rmm # perform operation
fmsub.s f16, f30, f26, f6, rne # perform operation
fmsub.s f16, f30, f26, f6, rtz # perform operation
fmsub.s f16, f30, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f30, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f30, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f30, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f30, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f30, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x2cc48bcf376dc3e6 # load x3 with value 0x2cc48bcf376dc3e6
sw x3, 0(x2) # store 0x2cc48bcf376dc3e6 in memory
flw f16, 0(x2) # load 0x2cc48bcf376dc3e6 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmsub.s f11, f23, f16, f3, dyn # perform operation
fmsub.s f11, f23, f16, f3, rdn # perform operation
fmsub.s f11, f23, f16, f3, rmm # perform operation
fmsub.s f11, f23, f16, f3, rne # perform operation
fmsub.s f11, f23, f16, f3, rtz # perform operation
fmsub.s f11, f23, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f23, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f23, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f23, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f23, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f23, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x29ae300409cdad7 # load x3 with value 0x29ae300409cdad7
sw x3, 0(x2) # store 0x29ae300409cdad7 in memory
flw f16, 0(x2) # load 0x29ae300409cdad7 from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmsub.s f1, f22, f16, f27, dyn # perform operation
fmsub.s f1, f22, f16, f27, rdn # perform operation
fmsub.s f1, f22, f16, f27, rmm # perform operation
fmsub.s f1, f22, f16, f27, rne # perform operation
fmsub.s f1, f22, f16, f27, rtz # perform operation
fmsub.s f1, f22, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f22, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f22, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x4c01699d4270cc7e # load x3 with value 0x4c01699d4270cc7e
sw x3, 0(x2) # store 0x4c01699d4270cc7e in memory
flw f6, 0(x2) # load 0x4c01699d4270cc7e from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmsub.s f5, f11, f6, f14, dyn # perform operation
fmsub.s f5, f11, f6, f14, rdn # perform operation
fmsub.s f5, f11, f6, f14, rmm # perform operation
fmsub.s f5, f11, f6, f14, rne # perform operation
fmsub.s f5, f11, f6, f14, rtz # perform operation
fmsub.s f5, f11, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f11, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f11, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x3aa752d361314956 # load x3 with value 0x3aa752d361314956
sw x3, 0(x2) # store 0x3aa752d361314956 in memory
flw f13, 0(x2) # load 0x3aa752d361314956 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f29, f2, f13, f6, dyn # perform operation
fmsub.s f29, f2, f13, f6, rdn # perform operation
fmsub.s f29, f2, f13, f6, rmm # perform operation
fmsub.s f29, f2, f13, f6, rne # perform operation
fmsub.s f29, f2, f13, f6, rtz # perform operation
fmsub.s f29, f2, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0xdcfa1d945036d34b # load x3 with value 0xdcfa1d945036d34b
sw x3, 0(x2) # store 0xdcfa1d945036d34b in memory
flw f30, 0(x2) # load 0xdcfa1d945036d34b from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f26, f22, f30, f5, dyn # perform operation
fmsub.s f26, f22, f30, f5, rdn # perform operation
fmsub.s f26, f22, f30, f5, rmm # perform operation
fmsub.s f26, f22, f30, f5, rne # perform operation
fmsub.s f26, f22, f30, f5, rtz # perform operation
fmsub.s f26, f22, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f22, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xdec2183244ffc36c # load x3 with value 0xdec2183244ffc36c
sw x3, 0(x2) # store 0xdec2183244ffc36c in memory
flw f3, 0(x2) # load 0xdec2183244ffc36c from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmsub.s f6, f27, f3, f19, dyn # perform operation
fmsub.s f6, f27, f3, f19, rdn # perform operation
fmsub.s f6, f27, f3, f19, rmm # perform operation
fmsub.s f6, f27, f3, f19, rne # perform operation
fmsub.s f6, f27, f3, f19, rtz # perform operation
fmsub.s f6, f27, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f27, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f27, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xd6323dc8c18cb7d4 # load x3 with value 0xd6323dc8c18cb7d4
sw x3, 0(x2) # store 0xd6323dc8c18cb7d4 in memory
flw f7, 0(x2) # load 0xd6323dc8c18cb7d4 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fmsub.s f29, f28, f7, f12, dyn # perform operation
fmsub.s f29, f28, f7, f12, rdn # perform operation
fmsub.s f29, f28, f7, f12, rmm # perform operation
fmsub.s f29, f28, f7, f12, rne # perform operation
fmsub.s f29, f28, f7, f12, rtz # perform operation
fmsub.s f29, f28, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x67a1a61dc002d8bb # load x3 with value 0x67a1a61dc002d8bb
sw x3, 0(x2) # store 0x67a1a61dc002d8bb in memory
flw f19, 0(x2) # load 0x67a1a61dc002d8bb from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmsub.s f6, f23, f19, f29, dyn # perform operation
fmsub.s f6, f23, f19, f29, rdn # perform operation
fmsub.s f6, f23, f19, f29, rmm # perform operation
fmsub.s f6, f23, f19, f29, rne # perform operation
fmsub.s f6, f23, f19, f29, rtz # perform operation
fmsub.s f6, f23, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f23, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f23, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x672f239dff831cc8 # load x3 with value 0x672f239dff831cc8
sw x3, 0(x2) # store 0x672f239dff831cc8 in memory
flw f12, 0(x2) # load 0x672f239dff831cc8 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f10, f14, f12, f27, dyn # perform operation
fmsub.s f10, f14, f12, f27, rdn # perform operation
fmsub.s f10, f14, f12, f27, rmm # perform operation
fmsub.s f10, f14, f12, f27, rne # perform operation
fmsub.s f10, f14, f12, f27, rtz # perform operation
fmsub.s f10, f14, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x4998a02935ec5f8f # load x3 with value 0x4998a02935ec5f8f
sw x3, 0(x2) # store 0x4998a02935ec5f8f in memory
flw f6, 0(x2) # load 0x4998a02935ec5f8f from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmsub.s f7, f30, f6, f25, dyn # perform operation
fmsub.s f7, f30, f6, f25, rdn # perform operation
fmsub.s f7, f30, f6, f25, rmm # perform operation
fmsub.s f7, f30, f6, f25, rne # perform operation
fmsub.s f7, f30, f6, f25, rtz # perform operation
fmsub.s f7, f30, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f30, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xfa65a5a480fa9de8 # load x3 with value 0xfa65a5a480fa9de8
sw x3, 0(x2) # store 0xfa65a5a480fa9de8 in memory
flw f14, 0(x2) # load 0xfa65a5a480fa9de8 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmsub.s f7, f17, f14, f29, dyn # perform operation
fmsub.s f7, f17, f14, f29, rdn # perform operation
fmsub.s f7, f17, f14, f29, rmm # perform operation
fmsub.s f7, f17, f14, f29, rne # perform operation
fmsub.s f7, f17, f14, f29, rtz # perform operation
fmsub.s f7, f17, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f17, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f17, f14, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x37b9d31b2ee8277a # load x3 with value 0x37b9d31b2ee8277a
sw x3, 0(x2) # store 0x37b9d31b2ee8277a in memory
flw f27, 0(x2) # load 0x37b9d31b2ee8277a from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fmsub.s f6, f28, f27, f1, dyn # perform operation
fmsub.s f6, f28, f27, f1, rdn # perform operation
fmsub.s f6, f28, f27, f1, rmm # perform operation
fmsub.s f6, f28, f27, f1, rne # perform operation
fmsub.s f6, f28, f27, f1, rtz # perform operation
fmsub.s f6, f28, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f28, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f28, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f28, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f28, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f28, f27, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xb89ae247d9f599df # load x3 with value 0xb89ae247d9f599df
sw x3, 0(x2) # store 0xb89ae247d9f599df in memory
flw f17, 0(x2) # load 0xb89ae247d9f599df from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmsub.s f12, f20, f17, f13, dyn # perform operation
fmsub.s f12, f20, f17, f13, rdn # perform operation
fmsub.s f12, f20, f17, f13, rmm # perform operation
fmsub.s f12, f20, f17, f13, rne # perform operation
fmsub.s f12, f20, f17, f13, rtz # perform operation
fmsub.s f12, f20, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xb144fdb8e2e3891e # load x3 with value 0xb144fdb8e2e3891e
sw x3, 0(x2) # store 0xb144fdb8e2e3891e in memory
flw f5, 0(x2) # load 0xb144fdb8e2e3891e from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fmsub.s f6, f30, f5, f7, dyn # perform operation
fmsub.s f6, f30, f5, f7, rdn # perform operation
fmsub.s f6, f30, f5, f7, rmm # perform operation
fmsub.s f6, f30, f5, f7, rne # perform operation
fmsub.s f6, f30, f5, f7, rtz # perform operation
fmsub.s f6, f30, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x61d8652bb6fe3751 # load x3 with value 0x61d8652bb6fe3751
sw x3, 0(x2) # store 0x61d8652bb6fe3751 in memory
flw f13, 0(x2) # load 0x61d8652bb6fe3751 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmsub.s f28, f15, f13, f5, dyn # perform operation
fmsub.s f28, f15, f13, f5, rdn # perform operation
fmsub.s f28, f15, f13, f5, rmm # perform operation
fmsub.s f28, f15, f13, f5, rne # perform operation
fmsub.s f28, f15, f13, f5, rtz # perform operation
fmsub.s f28, f15, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f13, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xc1d9abe9f1c5156f # load x3 with value 0xc1d9abe9f1c5156f
sw x3, 0(x2) # store 0xc1d9abe9f1c5156f in memory
flw f26, 0(x2) # load 0xc1d9abe9f1c5156f from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fmsub.s f24, f18, f26, f5, dyn # perform operation
fmsub.s f24, f18, f26, f5, rdn # perform operation
fmsub.s f24, f18, f26, f5, rmm # perform operation
fmsub.s f24, f18, f26, f5, rne # perform operation
fmsub.s f24, f18, f26, f5, rtz # perform operation
fmsub.s f24, f18, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xf9eaacb59988f538 # load x3 with value 0xf9eaacb59988f538
sw x3, 0(x2) # store 0xf9eaacb59988f538 in memory
flw f23, 0(x2) # load 0xf9eaacb59988f538 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fmsub.s f16, f9, f23, f19, dyn # perform operation
fmsub.s f16, f9, f23, f19, rdn # perform operation
fmsub.s f16, f9, f23, f19, rmm # perform operation
fmsub.s f16, f9, f23, f19, rne # perform operation
fmsub.s f16, f9, f23, f19, rtz # perform operation
fmsub.s f16, f9, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f9, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f9, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xaa4f03f8251d4026 # load x3 with value 0xaa4f03f8251d4026
sw x3, 0(x2) # store 0xaa4f03f8251d4026 in memory
flw f8, 0(x2) # load 0xaa4f03f8251d4026 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmsub.s f5, f23, f8, f9, dyn # perform operation
fmsub.s f5, f23, f8, f9, rdn # perform operation
fmsub.s f5, f23, f8, f9, rmm # perform operation
fmsub.s f5, f23, f8, f9, rne # perform operation
fmsub.s f5, f23, f8, f9, rtz # perform operation
fmsub.s f5, f23, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f23, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f23, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x221f414574ba7f1a # load x3 with value 0x221f414574ba7f1a
sw x3, 0(x2) # store 0x221f414574ba7f1a in memory
flw f15, 0(x2) # load 0x221f414574ba7f1a from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fmsub.s f13, f23, f15, f16, dyn # perform operation
fmsub.s f13, f23, f15, f16, rdn # perform operation
fmsub.s f13, f23, f15, f16, rmm # perform operation
fmsub.s f13, f23, f15, f16, rne # perform operation
fmsub.s f13, f23, f15, f16, rtz # perform operation
fmsub.s f13, f23, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f23, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xe973430550091ae5 # load x3 with value 0xe973430550091ae5
sw x3, 0(x2) # store 0xe973430550091ae5 in memory
flw f8, 0(x2) # load 0xe973430550091ae5 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmsub.s f17, f20, f8, f25, dyn # perform operation
fmsub.s f17, f20, f8, f25, rdn # perform operation
fmsub.s f17, f20, f8, f25, rmm # perform operation
fmsub.s f17, f20, f8, f25, rne # perform operation
fmsub.s f17, f20, f8, f25, rtz # perform operation
fmsub.s f17, f20, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f20, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f20, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x91e842af3ebc1ae1 # load x3 with value 0x91e842af3ebc1ae1
sw x3, 0(x2) # store 0x91e842af3ebc1ae1 in memory
flw f21, 0(x2) # load 0x91e842af3ebc1ae1 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fmsub.s f23, f14, f21, f8, dyn # perform operation
fmsub.s f23, f14, f21, f8, rdn # perform operation
fmsub.s f23, f14, f21, f8, rmm # perform operation
fmsub.s f23, f14, f21, f8, rne # perform operation
fmsub.s f23, f14, f21, f8, rtz # perform operation
fmsub.s f23, f14, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f14, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f14, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x8d447858df2aba51 # load x3 with value 0x8d447858df2aba51
sw x3, 0(x2) # store 0x8d447858df2aba51 in memory
flw f6, 0(x2) # load 0x8d447858df2aba51 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f15, f25, f6, f26, dyn # perform operation
fmsub.s f15, f25, f6, f26, rdn # perform operation
fmsub.s f15, f25, f6, f26, rmm # perform operation
fmsub.s f15, f25, f6, f26, rne # perform operation
fmsub.s f15, f25, f6, f26, rtz # perform operation
fmsub.s f15, f25, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f25, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f25, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f25, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f25, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f25, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xd0c6203d46fe200f # load x3 with value 0xd0c6203d46fe200f
sw x3, 0(x2) # store 0xd0c6203d46fe200f in memory
flw f14, 0(x2) # load 0xd0c6203d46fe200f from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fmsub.s f13, f28, f14, f16, dyn # perform operation
fmsub.s f13, f28, f14, f16, rdn # perform operation
fmsub.s f13, f28, f14, f16, rmm # perform operation
fmsub.s f13, f28, f14, f16, rne # perform operation
fmsub.s f13, f28, f14, f16, rtz # perform operation
fmsub.s f13, f28, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xcdf582e9950f01b2 # load x3 with value 0xcdf582e9950f01b2
sw x3, 0(x2) # store 0xcdf582e9950f01b2 in memory
flw f27, 0(x2) # load 0xcdf582e9950f01b2 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f9, f29, f27, f25, dyn # perform operation
fmsub.s f9, f29, f27, f25, rdn # perform operation
fmsub.s f9, f29, f27, f25, rmm # perform operation
fmsub.s f9, f29, f27, f25, rne # perform operation
fmsub.s f9, f29, f27, f25, rtz # perform operation
fmsub.s f9, f29, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f29, f27, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xd74c8d9edb548695 # load x3 with value 0xd74c8d9edb548695
sw x3, 0(x2) # store 0xd74c8d9edb548695 in memory
flw f29, 0(x2) # load 0xd74c8d9edb548695 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmsub.s f9, f16, f29, f15, dyn # perform operation
fmsub.s f9, f16, f29, f15, rdn # perform operation
fmsub.s f9, f16, f29, f15, rmm # perform operation
fmsub.s f9, f16, f29, f15, rne # perform operation
fmsub.s f9, f16, f29, f15, rtz # perform operation
fmsub.s f9, f16, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x77e83c9924d01393 # load x3 with value 0x77e83c9924d01393
sw x3, 0(x2) # store 0x77e83c9924d01393 in memory
flw f1, 0(x2) # load 0x77e83c9924d01393 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmsub.s f31, f18, f1, f8, dyn # perform operation
fmsub.s f31, f18, f1, f8, rdn # perform operation
fmsub.s f31, f18, f1, f8, rmm # perform operation
fmsub.s f31, f18, f1, f8, rne # perform operation
fmsub.s f31, f18, f1, f8, rtz # perform operation
fmsub.s f31, f18, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0xcd167c72debd8565 # load x3 with value 0xcd167c72debd8565
sw x3, 0(x2) # store 0xcd167c72debd8565 in memory
flw f5, 0(x2) # load 0xcd167c72debd8565 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmsub.s f6, f26, f5, f19, dyn # perform operation
fmsub.s f6, f26, f5, f19, rdn # perform operation
fmsub.s f6, f26, f5, f19, rmm # perform operation
fmsub.s f6, f26, f5, f19, rne # perform operation
fmsub.s f6, f26, f5, f19, rtz # perform operation
fmsub.s f6, f26, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x37d4b740fd50dd16 # load x3 with value 0x37d4b740fd50dd16
sw x3, 0(x2) # store 0x37d4b740fd50dd16 in memory
flw f29, 0(x2) # load 0x37d4b740fd50dd16 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmsub.s f23, f2, f29, f11, dyn # perform operation
fmsub.s f23, f2, f29, f11, rdn # perform operation
fmsub.s f23, f2, f29, f11, rmm # perform operation
fmsub.s f23, f2, f29, f11, rne # perform operation
fmsub.s f23, f2, f29, f11, rtz # perform operation
fmsub.s f23, f2, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f2, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f2, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x1e83cfce8b73940c # load x3 with value 0x1e83cfce8b73940c
sw x3, 0(x2) # store 0x1e83cfce8b73940c in memory
flw f25, 0(x2) # load 0x1e83cfce8b73940c from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fmsub.s f27, f11, f25, f28, dyn # perform operation
fmsub.s f27, f11, f25, f28, rdn # perform operation
fmsub.s f27, f11, f25, f28, rmm # perform operation
fmsub.s f27, f11, f25, f28, rne # perform operation
fmsub.s f27, f11, f25, f28, rtz # perform operation
fmsub.s f27, f11, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xe2fdfd2c1d24c603 # load x3 with value 0xe2fdfd2c1d24c603
sw x3, 0(x2) # store 0xe2fdfd2c1d24c603 in memory
flw f31, 0(x2) # load 0xe2fdfd2c1d24c603 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmsub.s f14, f15, f31, f19, dyn # perform operation
fmsub.s f14, f15, f31, f19, rdn # perform operation
fmsub.s f14, f15, f31, f19, rmm # perform operation
fmsub.s f14, f15, f31, f19, rne # perform operation
fmsub.s f14, f15, f31, f19, rtz # perform operation
fmsub.s f14, f15, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x6497e9325db95c0f # load x3 with value 0x6497e9325db95c0f
sw x3, 0(x2) # store 0x6497e9325db95c0f in memory
flw f23, 0(x2) # load 0x6497e9325db95c0f from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmsub.s f31, f6, f23, f16, dyn # perform operation
fmsub.s f31, f6, f23, f16, rdn # perform operation
fmsub.s f31, f6, f23, f16, rmm # perform operation
fmsub.s f31, f6, f23, f16, rne # perform operation
fmsub.s f31, f6, f23, f16, rtz # perform operation
fmsub.s f31, f6, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f6, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f6, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f6, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f6, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f6, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x7a23070a242da494 # load x3 with value 0x7a23070a242da494
sw x3, 0(x2) # store 0x7a23070a242da494 in memory
flw f23, 0(x2) # load 0x7a23070a242da494 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fmsub.s f14, f7, f23, f29, dyn # perform operation
fmsub.s f14, f7, f23, f29, rdn # perform operation
fmsub.s f14, f7, f23, f29, rmm # perform operation
fmsub.s f14, f7, f23, f29, rne # perform operation
fmsub.s f14, f7, f23, f29, rtz # perform operation
fmsub.s f14, f7, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xa55ff38e0df5ce4b # load x3 with value 0xa55ff38e0df5ce4b
sw x3, 0(x2) # store 0xa55ff38e0df5ce4b in memory
flw f7, 0(x2) # load 0xa55ff38e0df5ce4b from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmsub.s f11, f6, f7, f30, dyn # perform operation
fmsub.s f11, f6, f7, f30, rdn # perform operation
fmsub.s f11, f6, f7, f30, rmm # perform operation
fmsub.s f11, f6, f7, f30, rne # perform operation
fmsub.s f11, f6, f7, f30, rtz # perform operation
fmsub.s f11, f6, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x4abf3e10eaa9f3ff # load x3 with value 0x4abf3e10eaa9f3ff
sw x3, 0(x2) # store 0x4abf3e10eaa9f3ff in memory
flw f3, 0(x2) # load 0x4abf3e10eaa9f3ff from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmsub.s f22, f5, f3, f26, dyn # perform operation
fmsub.s f22, f5, f3, f26, rdn # perform operation
fmsub.s f22, f5, f3, f26, rmm # perform operation
fmsub.s f22, f5, f3, f26, rne # perform operation
fmsub.s f22, f5, f3, f26, rtz # perform operation
fmsub.s f22, f5, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xb28e44f7dced2dbe # load x3 with value 0xb28e44f7dced2dbe
sw x3, 0(x2) # store 0xb28e44f7dced2dbe in memory
flw f1, 0(x2) # load 0xb28e44f7dced2dbe from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmsub.s f21, f31, f1, f10, dyn # perform operation
fmsub.s f21, f31, f1, f10, rdn # perform operation
fmsub.s f21, f31, f1, f10, rmm # perform operation
fmsub.s f21, f31, f1, f10, rne # perform operation
fmsub.s f21, f31, f1, f10, rtz # perform operation
fmsub.s f21, f31, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xfbc3ce6f823f487a # load x3 with value 0xfbc3ce6f823f487a
sw x3, 0(x2) # store 0xfbc3ce6f823f487a in memory
flw f23, 0(x2) # load 0xfbc3ce6f823f487a from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmsub.s f29, f30, f23, f8, dyn # perform operation
fmsub.s f29, f30, f23, f8, rdn # perform operation
fmsub.s f29, f30, f23, f8, rmm # perform operation
fmsub.s f29, f30, f23, f8, rne # perform operation
fmsub.s f29, f30, f23, f8, rtz # perform operation
fmsub.s f29, f30, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f23, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x15b0c5030300d22e # load x3 with value 0x15b0c5030300d22e
sw x3, 0(x2) # store 0x15b0c5030300d22e in memory
flw f11, 0(x2) # load 0x15b0c5030300d22e from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmsub.s f10, f22, f11, f23, dyn # perform operation
fmsub.s f10, f22, f11, f23, rdn # perform operation
fmsub.s f10, f22, f11, f23, rmm # perform operation
fmsub.s f10, f22, f11, f23, rne # perform operation
fmsub.s f10, f22, f11, f23, rtz # perform operation
fmsub.s f10, f22, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x569b33d322adf15 # load x3 with value 0x569b33d322adf15
sw x3, 0(x2) # store 0x569b33d322adf15 in memory
flw f9, 0(x2) # load 0x569b33d322adf15 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f18, f16, f9, f26, dyn # perform operation
fmsub.s f18, f16, f9, f26, rdn # perform operation
fmsub.s f18, f16, f9, f26, rmm # perform operation
fmsub.s f18, f16, f9, f26, rne # perform operation
fmsub.s f18, f16, f9, f26, rtz # perform operation
fmsub.s f18, f16, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f16, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f16, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f16, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f16, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f16, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0xaf361eb469aeff1b # load x3 with value 0xaf361eb469aeff1b
sw x3, 0(x2) # store 0xaf361eb469aeff1b in memory
flw f3, 0(x2) # load 0xaf361eb469aeff1b from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmsub.s f1, f16, f3, f5, dyn # perform operation
fmsub.s f1, f16, f3, f5, rdn # perform operation
fmsub.s f1, f16, f3, f5, rmm # perform operation
fmsub.s f1, f16, f3, f5, rne # perform operation
fmsub.s f1, f16, f3, f5, rtz # perform operation
fmsub.s f1, f16, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f16, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xa4a9fc6be519b24e # load x3 with value 0xa4a9fc6be519b24e
sw x3, 0(x2) # store 0xa4a9fc6be519b24e in memory
flw f20, 0(x2) # load 0xa4a9fc6be519b24e from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmsub.s f23, f5, f20, f2, dyn # perform operation
fmsub.s f23, f5, f20, f2, rdn # perform operation
fmsub.s f23, f5, f20, f2, rmm # perform operation
fmsub.s f23, f5, f20, f2, rne # perform operation
fmsub.s f23, f5, f20, f2, rtz # perform operation
fmsub.s f23, f5, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xc94f69bf827f7050 # load x3 with value 0xc94f69bf827f7050
sw x3, 0(x2) # store 0xc94f69bf827f7050 in memory
flw f11, 0(x2) # load 0xc94f69bf827f7050 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fmsub.s f21, f31, f11, f5, dyn # perform operation
fmsub.s f21, f31, f11, f5, rdn # perform operation
fmsub.s f21, f31, f11, f5, rmm # perform operation
fmsub.s f21, f31, f11, f5, rne # perform operation
fmsub.s f21, f31, f11, f5, rtz # perform operation
fmsub.s f21, f31, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f31, f11, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x1f7510b015463bbc # load x3 with value 0x1f7510b015463bbc
sw x3, 0(x2) # store 0x1f7510b015463bbc in memory
flw f10, 0(x2) # load 0x1f7510b015463bbc from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmsub.s f5, f31, f10, f26, dyn # perform operation
fmsub.s f5, f31, f10, f26, rdn # perform operation
fmsub.s f5, f31, f10, f26, rmm # perform operation
fmsub.s f5, f31, f10, f26, rne # perform operation
fmsub.s f5, f31, f10, f26, rtz # perform operation
fmsub.s f5, f31, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f10, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x8f7317d01a61f31f # load x3 with value 0x8f7317d01a61f31f
sw x3, 0(x2) # store 0x8f7317d01a61f31f in memory
flw f20, 0(x2) # load 0x8f7317d01a61f31f from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fmsub.s f8, f19, f20, f27, dyn # perform operation
fmsub.s f8, f19, f20, f27, rdn # perform operation
fmsub.s f8, f19, f20, f27, rmm # perform operation
fmsub.s f8, f19, f20, f27, rne # perform operation
fmsub.s f8, f19, f20, f27, rtz # perform operation
fmsub.s f8, f19, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xe55e2194f6ca2e72 # load x3 with value 0xe55e2194f6ca2e72
sw x3, 0(x2) # store 0xe55e2194f6ca2e72 in memory
flw f7, 0(x2) # load 0xe55e2194f6ca2e72 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmsub.s f11, f3, f7, f12, dyn # perform operation
fmsub.s f11, f3, f7, f12, rdn # perform operation
fmsub.s f11, f3, f7, f12, rmm # perform operation
fmsub.s f11, f3, f7, f12, rne # perform operation
fmsub.s f11, f3, f7, f12, rtz # perform operation
fmsub.s f11, f3, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f3, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f3, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x6f3922b652223a3f # load x3 with value 0x6f3922b652223a3f
sw x3, 0(x2) # store 0x6f3922b652223a3f in memory
flw f7, 0(x2) # load 0x6f3922b652223a3f from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmsub.s f21, f16, f7, f30, dyn # perform operation
fmsub.s f21, f16, f7, f30, rdn # perform operation
fmsub.s f21, f16, f7, f30, rmm # perform operation
fmsub.s f21, f16, f7, f30, rne # perform operation
fmsub.s f21, f16, f7, f30, rtz # perform operation
fmsub.s f21, f16, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0xeb442cfb3bd14b5c # load x3 with value 0xeb442cfb3bd14b5c
sw x3, 0(x2) # store 0xeb442cfb3bd14b5c in memory
flw f19, 0(x2) # load 0xeb442cfb3bd14b5c from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmsub.s f14, f2, f19, f12, dyn # perform operation
fmsub.s f14, f2, f19, f12, rdn # perform operation
fmsub.s f14, f2, f19, f12, rmm # perform operation
fmsub.s f14, f2, f19, f12, rne # perform operation
fmsub.s f14, f2, f19, f12, rtz # perform operation
fmsub.s f14, f2, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x4b0ffca887252bdf # load x3 with value 0x4b0ffca887252bdf
sw x3, 0(x2) # store 0x4b0ffca887252bdf in memory
flw f7, 0(x2) # load 0x4b0ffca887252bdf from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmsub.s f2, f3, f7, f9, dyn # perform operation
fmsub.s f2, f3, f7, f9, rdn # perform operation
fmsub.s f2, f3, f7, f9, rmm # perform operation
fmsub.s f2, f3, f7, f9, rne # perform operation
fmsub.s f2, f3, f7, f9, rtz # perform operation
fmsub.s f2, f3, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x462d9ff205fccdac # load x3 with value 0x462d9ff205fccdac
sw x3, 0(x2) # store 0x462d9ff205fccdac in memory
flw f20, 0(x2) # load 0x462d9ff205fccdac from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmsub.s f2, f9, f20, f31, dyn # perform operation
fmsub.s f2, f9, f20, f31, rdn # perform operation
fmsub.s f2, f9, f20, f31, rmm # perform operation
fmsub.s f2, f9, f20, f31, rne # perform operation
fmsub.s f2, f9, f20, f31, rtz # perform operation
fmsub.s f2, f9, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x1119cd083c0e0733 # load x3 with value 0x1119cd083c0e0733
sw x3, 0(x2) # store 0x1119cd083c0e0733 in memory
flw f26, 0(x2) # load 0x1119cd083c0e0733 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fmsub.s f15, f17, f26, f6, dyn # perform operation
fmsub.s f15, f17, f26, f6, rdn # perform operation
fmsub.s f15, f17, f26, f6, rmm # perform operation
fmsub.s f15, f17, f26, f6, rne # perform operation
fmsub.s f15, f17, f26, f6, rtz # perform operation
fmsub.s f15, f17, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x6bd5492159020c23 # load x3 with value 0x6bd5492159020c23
sw x3, 0(x2) # store 0x6bd5492159020c23 in memory
flw f21, 0(x2) # load 0x6bd5492159020c23 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmsub.s f30, f1, f21, f25, dyn # perform operation
fmsub.s f30, f1, f21, f25, rdn # perform operation
fmsub.s f30, f1, f21, f25, rmm # perform operation
fmsub.s f30, f1, f21, f25, rne # perform operation
fmsub.s f30, f1, f21, f25, rtz # perform operation
fmsub.s f30, f1, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xcb90a44832fbd4d8 # load x3 with value 0xcb90a44832fbd4d8
sw x3, 0(x2) # store 0xcb90a44832fbd4d8 in memory
flw f3, 0(x2) # load 0xcb90a44832fbd4d8 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmsub.s f5, f1, f3, f27, dyn # perform operation
fmsub.s f5, f1, f3, f27, rdn # perform operation
fmsub.s f5, f1, f3, f27, rmm # perform operation
fmsub.s f5, f1, f3, f27, rne # perform operation
fmsub.s f5, f1, f3, f27, rtz # perform operation
fmsub.s f5, f1, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x803bbdc81caaabec # load x3 with value 0x803bbdc81caaabec
sw x3, 0(x2) # store 0x803bbdc81caaabec in memory
flw f2, 0(x2) # load 0x803bbdc81caaabec from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmsub.s f24, f17, f2, f22, dyn # perform operation
fmsub.s f24, f17, f2, f22, rdn # perform operation
fmsub.s f24, f17, f2, f22, rmm # perform operation
fmsub.s f24, f17, f2, f22, rne # perform operation
fmsub.s f24, f17, f2, f22, rtz # perform operation
fmsub.s f24, f17, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x124ec079b056a590 # load x3 with value 0x124ec079b056a590
sw x3, 0(x2) # store 0x124ec079b056a590 in memory
flw f11, 0(x2) # load 0x124ec079b056a590 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmsub.s f6, f27, f11, f22, dyn # perform operation
fmsub.s f6, f27, f11, f22, rdn # perform operation
fmsub.s f6, f27, f11, f22, rmm # perform operation
fmsub.s f6, f27, f11, f22, rne # perform operation
fmsub.s f6, f27, f11, f22, rtz # perform operation
fmsub.s f6, f27, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f27, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f27, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f27, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f27, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f27, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x9af8a831f8b211e1 # load x3 with value 0x9af8a831f8b211e1
sw x3, 0(x2) # store 0x9af8a831f8b211e1 in memory
flw f16, 0(x2) # load 0x9af8a831f8b211e1 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fmsub.s f1, f10, f16, f19, dyn # perform operation
fmsub.s f1, f10, f16, f19, rdn # perform operation
fmsub.s f1, f10, f16, f19, rmm # perform operation
fmsub.s f1, f10, f16, f19, rne # perform operation
fmsub.s f1, f10, f16, f19, rtz # perform operation
fmsub.s f1, f10, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f10, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x2219455e39e4a146 # load x3 with value 0x2219455e39e4a146
sw x3, 0(x2) # store 0x2219455e39e4a146 in memory
flw f29, 0(x2) # load 0x2219455e39e4a146 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fmsub.s f10, f7, f29, f25, dyn # perform operation
fmsub.s f10, f7, f29, f25, rdn # perform operation
fmsub.s f10, f7, f29, f25, rmm # perform operation
fmsub.s f10, f7, f29, f25, rne # perform operation
fmsub.s f10, f7, f29, f25, rtz # perform operation
fmsub.s f10, f7, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f7, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f7, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f7, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f7, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f7, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x74b01de98c97c211 # load x3 with value 0x74b01de98c97c211
sw x3, 0(x2) # store 0x74b01de98c97c211 in memory
flw f7, 0(x2) # load 0x74b01de98c97c211 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fmsub.s f21, f8, f7, f29, dyn # perform operation
fmsub.s f21, f8, f7, f29, rdn # perform operation
fmsub.s f21, f8, f7, f29, rmm # perform operation
fmsub.s f21, f8, f7, f29, rne # perform operation
fmsub.s f21, f8, f7, f29, rtz # perform operation
fmsub.s f21, f8, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f8, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x80a85c5cfbe0f566 # load x3 with value 0x80a85c5cfbe0f566
sw x3, 0(x2) # store 0x80a85c5cfbe0f566 in memory
flw f31, 0(x2) # load 0x80a85c5cfbe0f566 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmsub.s f26, f27, f31, f21, dyn # perform operation
fmsub.s f26, f27, f31, f21, rdn # perform operation
fmsub.s f26, f27, f31, f21, rmm # perform operation
fmsub.s f26, f27, f31, f21, rne # perform operation
fmsub.s f26, f27, f31, f21, rtz # perform operation
fmsub.s f26, f27, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f31, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0xa0eea5412b9ba9af # load x3 with value 0xa0eea5412b9ba9af
sw x3, 0(x2) # store 0xa0eea5412b9ba9af in memory
flw f14, 0(x2) # load 0xa0eea5412b9ba9af from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmsub.s f9, f24, f14, f11, dyn # perform operation
fmsub.s f9, f24, f14, f11, rdn # perform operation
fmsub.s f9, f24, f14, f11, rmm # perform operation
fmsub.s f9, f24, f14, f11, rne # perform operation
fmsub.s f9, f24, f14, f11, rtz # perform operation
fmsub.s f9, f24, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f24, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f24, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x9a1d9b398705103c # load x3 with value 0x9a1d9b398705103c
sw x3, 0(x2) # store 0x9a1d9b398705103c in memory
flw f12, 0(x2) # load 0x9a1d9b398705103c from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmsub.s f2, f31, f12, f30, dyn # perform operation
fmsub.s f2, f31, f12, f30, rdn # perform operation
fmsub.s f2, f31, f12, f30, rmm # perform operation
fmsub.s f2, f31, f12, f30, rne # perform operation
fmsub.s f2, f31, f12, f30, rtz # perform operation
fmsub.s f2, f31, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0xc982fb946c94f665 # load x3 with value 0xc982fb946c94f665
sw x3, 0(x2) # store 0xc982fb946c94f665 in memory
flw f22, 0(x2) # load 0xc982fb946c94f665 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmsub.s f28, f15, f22, f11, dyn # perform operation
fmsub.s f28, f15, f22, f11, rdn # perform operation
fmsub.s f28, f15, f22, f11, rmm # perform operation
fmsub.s f28, f15, f22, f11, rne # perform operation
fmsub.s f28, f15, f22, f11, rtz # perform operation
fmsub.s f28, f15, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xfa1b8826b53411c8 # load x3 with value 0xfa1b8826b53411c8
sw x3, 0(x2) # store 0xfa1b8826b53411c8 in memory
flw f7, 0(x2) # load 0xfa1b8826b53411c8 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fmsub.s f21, f16, f7, f22, dyn # perform operation
fmsub.s f21, f16, f7, f22, rdn # perform operation
fmsub.s f21, f16, f7, f22, rmm # perform operation
fmsub.s f21, f16, f7, f22, rne # perform operation
fmsub.s f21, f16, f7, f22, rtz # perform operation
fmsub.s f21, f16, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f16, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f16, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x806ac035c907e01 # load x3 with value 0x806ac035c907e01
sw x3, 0(x2) # store 0x806ac035c907e01 in memory
flw f17, 0(x2) # load 0x806ac035c907e01 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmsub.s f28, f19, f17, f8, dyn # perform operation
fmsub.s f28, f19, f17, f8, rdn # perform operation
fmsub.s f28, f19, f17, f8, rmm # perform operation
fmsub.s f28, f19, f17, f8, rne # perform operation
fmsub.s f28, f19, f17, f8, rtz # perform operation
fmsub.s f28, f19, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f17, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x62700bf7e55836f0 # load x3 with value 0x62700bf7e55836f0
sw x3, 0(x2) # store 0x62700bf7e55836f0 in memory
flw f10, 0(x2) # load 0x62700bf7e55836f0 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fmsub.s f5, f17, f10, f19, dyn # perform operation
fmsub.s f5, f17, f10, f19, rdn # perform operation
fmsub.s f5, f17, f10, f19, rmm # perform operation
fmsub.s f5, f17, f10, f19, rne # perform operation
fmsub.s f5, f17, f10, f19, rtz # perform operation
fmsub.s f5, f17, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f17, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f17, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xcbe37da5544b29c5 # load x3 with value 0xcbe37da5544b29c5
sw x3, 0(x2) # store 0xcbe37da5544b29c5 in memory
flw f23, 0(x2) # load 0xcbe37da5544b29c5 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fmsub.s f11, f18, f23, f24, dyn # perform operation
fmsub.s f11, f18, f23, f24, rdn # perform operation
fmsub.s f11, f18, f23, f24, rmm # perform operation
fmsub.s f11, f18, f23, f24, rne # perform operation
fmsub.s f11, f18, f23, f24, rtz # perform operation
fmsub.s f11, f18, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f18, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x25d929738a4a1ee2 # load x3 with value 0x25d929738a4a1ee2
sw x3, 0(x2) # store 0x25d929738a4a1ee2 in memory
flw f25, 0(x2) # load 0x25d929738a4a1ee2 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f26, f2, f25, f29, dyn # perform operation
fmsub.s f26, f2, f25, f29, rdn # perform operation
fmsub.s f26, f2, f25, f29, rmm # perform operation
fmsub.s f26, f2, f25, f29, rne # perform operation
fmsub.s f26, f2, f25, f29, rtz # perform operation
fmsub.s f26, f2, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x154ce38b10c88e1a # load x3 with value 0x154ce38b10c88e1a
sw x3, 0(x2) # store 0x154ce38b10c88e1a in memory
flw f12, 0(x2) # load 0x154ce38b10c88e1a from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmsub.s f1, f10, f12, f8, dyn # perform operation
fmsub.s f1, f10, f12, f8, rdn # perform operation
fmsub.s f1, f10, f12, f8, rmm # perform operation
fmsub.s f1, f10, f12, f8, rne # perform operation
fmsub.s f1, f10, f12, f8, rtz # perform operation
fmsub.s f1, f10, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f10, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f10, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x35a73e6dc6258bed # load x3 with value 0x35a73e6dc6258bed
sw x3, 0(x2) # store 0x35a73e6dc6258bed in memory
flw f2, 0(x2) # load 0x35a73e6dc6258bed from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmsub.s f8, f13, f2, f22, dyn # perform operation
fmsub.s f8, f13, f2, f22, rdn # perform operation
fmsub.s f8, f13, f2, f22, rmm # perform operation
fmsub.s f8, f13, f2, f22, rne # perform operation
fmsub.s f8, f13, f2, f22, rtz # perform operation
fmsub.s f8, f13, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x2294205bd6deefc7 # load x3 with value 0x2294205bd6deefc7
sw x3, 0(x2) # store 0x2294205bd6deefc7 in memory
flw f29, 0(x2) # load 0x2294205bd6deefc7 from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmsub.s f8, f23, f29, f7, dyn # perform operation
fmsub.s f8, f23, f29, f7, rdn # perform operation
fmsub.s f8, f23, f29, f7, rmm # perform operation
fmsub.s f8, f23, f29, f7, rne # perform operation
fmsub.s f8, f23, f29, f7, rtz # perform operation
fmsub.s f8, f23, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xbc68cace212b77df # load x3 with value 0xbc68cace212b77df
sw x3, 0(x2) # store 0xbc68cace212b77df in memory
flw f24, 0(x2) # load 0xbc68cace212b77df from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmsub.s f10, f13, f24, f1, dyn # perform operation
fmsub.s f10, f13, f24, f1, rdn # perform operation
fmsub.s f10, f13, f24, f1, rmm # perform operation
fmsub.s f10, f13, f24, f1, rne # perform operation
fmsub.s f10, f13, f24, f1, rtz # perform operation
fmsub.s f10, f13, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f13, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f13, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xe542e065792ec64d # load x3 with value 0xe542e065792ec64d
sw x3, 0(x2) # store 0xe542e065792ec64d in memory
flw f8, 0(x2) # load 0xe542e065792ec64d from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmsub.s f29, f30, f8, f12, dyn # perform operation
fmsub.s f29, f30, f8, f12, rdn # perform operation
fmsub.s f29, f30, f8, f12, rmm # perform operation
fmsub.s f29, f30, f8, f12, rne # perform operation
fmsub.s f29, f30, f8, f12, rtz # perform operation
fmsub.s f29, f30, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xc60fbfe6ef5aeeb4 # load x3 with value 0xc60fbfe6ef5aeeb4
sw x3, 0(x2) # store 0xc60fbfe6ef5aeeb4 in memory
flw f21, 0(x2) # load 0xc60fbfe6ef5aeeb4 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmsub.s f14, f2, f21, f1, dyn # perform operation
fmsub.s f14, f2, f21, f1, rdn # perform operation
fmsub.s f14, f2, f21, f1, rmm # perform operation
fmsub.s f14, f2, f21, f1, rne # perform operation
fmsub.s f14, f2, f21, f1, rtz # perform operation
fmsub.s f14, f2, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f2, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f2, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xe000125a262bea1b # load x3 with value 0xe000125a262bea1b
sw x3, 0(x2) # store 0xe000125a262bea1b in memory
flw f19, 0(x2) # load 0xe000125a262bea1b from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
fmsub.s f6, f11, f19, f3, dyn # perform operation
fmsub.s f6, f11, f19, f3, rdn # perform operation
fmsub.s f6, f11, f19, f3, rmm # perform operation
fmsub.s f6, f11, f19, f3, rne # perform operation
fmsub.s f6, f11, f19, f3, rtz # perform operation
fmsub.s f6, f11, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f11, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f11, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f11, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f11, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f11, f19, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xf734b96e8be1f7e3 # load x3 with value 0xf734b96e8be1f7e3
sw x3, 0(x2) # store 0xf734b96e8be1f7e3 in memory
flw f26, 0(x2) # load 0xf734b96e8be1f7e3 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fmsub.s f24, f11, f26, f25, dyn # perform operation
fmsub.s f24, f11, f26, f25, rdn # perform operation
fmsub.s f24, f11, f26, f25, rmm # perform operation
fmsub.s f24, f11, f26, f25, rne # perform operation
fmsub.s f24, f11, f26, f25, rtz # perform operation
fmsub.s f24, f11, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x258fd7a031118c7a # load x3 with value 0x258fd7a031118c7a
sw x3, 0(x2) # store 0x258fd7a031118c7a in memory
flw f18, 0(x2) # load 0x258fd7a031118c7a from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmsub.s f25, f26, f18, f19, dyn # perform operation
fmsub.s f25, f26, f18, f19, rdn # perform operation
fmsub.s f25, f26, f18, f19, rmm # perform operation
fmsub.s f25, f26, f18, f19, rne # perform operation
fmsub.s f25, f26, f18, f19, rtz # perform operation
fmsub.s f25, f26, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x926505f84ea93221 # load x3 with value 0x926505f84ea93221
sw x3, 0(x2) # store 0x926505f84ea93221 in memory
flw f1, 0(x2) # load 0x926505f84ea93221 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fmsub.s f23, f11, f1, f15, dyn # perform operation
fmsub.s f23, f11, f1, f15, rdn # perform operation
fmsub.s f23, f11, f1, f15, rmm # perform operation
fmsub.s f23, f11, f1, f15, rne # perform operation
fmsub.s f23, f11, f1, f15, rtz # perform operation
fmsub.s f23, f11, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f11, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f11, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xabf6acbd07c59ce1 # load x3 with value 0xabf6acbd07c59ce1
sw x3, 0(x2) # store 0xabf6acbd07c59ce1 in memory
flw f6, 0(x2) # load 0xabf6acbd07c59ce1 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmsub.s f7, f5, f6, f21, dyn # perform operation
fmsub.s f7, f5, f6, f21, rdn # perform operation
fmsub.s f7, f5, f6, f21, rmm # perform operation
fmsub.s f7, f5, f6, f21, rne # perform operation
fmsub.s f7, f5, f6, f21, rtz # perform operation
fmsub.s f7, f5, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xdd4a497e3949900b # load x3 with value 0xdd4a497e3949900b
sw x3, 0(x2) # store 0xdd4a497e3949900b in memory
flw f31, 0(x2) # load 0xdd4a497e3949900b from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f23, f27, f31, f1, dyn # perform operation
fmsub.s f23, f27, f31, f1, rdn # perform operation
fmsub.s f23, f27, f31, f1, rmm # perform operation
fmsub.s f23, f27, f31, f1, rne # perform operation
fmsub.s f23, f27, f31, f1, rtz # perform operation
fmsub.s f23, f27, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f31, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xb4384ece0a243e15 # load x3 with value 0xb4384ece0a243e15
sw x3, 0(x2) # store 0xb4384ece0a243e15 in memory
flw f23, 0(x2) # load 0xb4384ece0a243e15 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmsub.s f9, f15, f23, f11, dyn # perform operation
fmsub.s f9, f15, f23, f11, rdn # perform operation
fmsub.s f9, f15, f23, f11, rmm # perform operation
fmsub.s f9, f15, f23, f11, rne # perform operation
fmsub.s f9, f15, f23, f11, rtz # perform operation
fmsub.s f9, f15, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0xdc24e7b75f728a0e # load x3 with value 0xdc24e7b75f728a0e
sw x3, 0(x2) # store 0xdc24e7b75f728a0e in memory
flw f23, 0(x2) # load 0xdc24e7b75f728a0e from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fmsub.s f28, f24, f23, f25, dyn # perform operation
fmsub.s f28, f24, f23, f25, rdn # perform operation
fmsub.s f28, f24, f23, f25, rmm # perform operation
fmsub.s f28, f24, f23, f25, rne # perform operation
fmsub.s f28, f24, f23, f25, rtz # perform operation
fmsub.s f28, f24, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x6e5c476a22dfea0a # load x3 with value 0x6e5c476a22dfea0a
sw x3, 0(x2) # store 0x6e5c476a22dfea0a in memory
flw f3, 0(x2) # load 0x6e5c476a22dfea0a from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fmsub.s f26, f11, f3, f13, dyn # perform operation
fmsub.s f26, f11, f3, f13, rdn # perform operation
fmsub.s f26, f11, f3, f13, rmm # perform operation
fmsub.s f26, f11, f3, f13, rne # perform operation
fmsub.s f26, f11, f3, f13, rtz # perform operation
fmsub.s f26, f11, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f11, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f11, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x9853fb4844e6d601 # load x3 with value 0x9853fb4844e6d601
sw x3, 0(x2) # store 0x9853fb4844e6d601 in memory
flw f23, 0(x2) # load 0x9853fb4844e6d601 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmsub.s f11, f31, f23, f19, dyn # perform operation
fmsub.s f11, f31, f23, f19, rdn # perform operation
fmsub.s f11, f31, f23, f19, rmm # perform operation
fmsub.s f11, f31, f23, f19, rne # perform operation
fmsub.s f11, f31, f23, f19, rtz # perform operation
fmsub.s f11, f31, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xba110975956a535c # load x3 with value 0xba110975956a535c
sw x3, 0(x2) # store 0xba110975956a535c in memory
flw f11, 0(x2) # load 0xba110975956a535c from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmsub.s f20, f7, f11, f30, dyn # perform operation
fmsub.s f20, f7, f11, f30, rdn # perform operation
fmsub.s f20, f7, f11, f30, rmm # perform operation
fmsub.s f20, f7, f11, f30, rne # perform operation
fmsub.s f20, f7, f11, f30, rtz # perform operation
fmsub.s f20, f7, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x9e9998705ee91e48 # load x3 with value 0x9e9998705ee91e48
sw x3, 0(x2) # store 0x9e9998705ee91e48 in memory
flw f19, 0(x2) # load 0x9e9998705ee91e48 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmsub.s f10, f16, f19, f11, dyn # perform operation
fmsub.s f10, f16, f19, f11, rdn # perform operation
fmsub.s f10, f16, f19, f11, rmm # perform operation
fmsub.s f10, f16, f19, f11, rne # perform operation
fmsub.s f10, f16, f19, f11, rtz # perform operation
fmsub.s f10, f16, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f16, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x842cbe37322ba585 # load x3 with value 0x842cbe37322ba585
sw x3, 0(x2) # store 0x842cbe37322ba585 in memory
flw f29, 0(x2) # load 0x842cbe37322ba585 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmsub.s f13, f21, f29, f1, dyn # perform operation
fmsub.s f13, f21, f29, f1, rdn # perform operation
fmsub.s f13, f21, f29, f1, rmm # perform operation
fmsub.s f13, f21, f29, f1, rne # perform operation
fmsub.s f13, f21, f29, f1, rtz # perform operation
fmsub.s f13, f21, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f21, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f21, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xede69a565c3b011a # load x3 with value 0xede69a565c3b011a
sw x3, 0(x2) # store 0xede69a565c3b011a in memory
flw f11, 0(x2) # load 0xede69a565c3b011a from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmsub.s f25, f6, f11, f27, dyn # perform operation
fmsub.s f25, f6, f11, f27, rdn # perform operation
fmsub.s f25, f6, f11, f27, rmm # perform operation
fmsub.s f25, f6, f11, f27, rne # perform operation
fmsub.s f25, f6, f11, f27, rtz # perform operation
fmsub.s f25, f6, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0xbb88b6bbbaff03b3 # load x3 with value 0xbb88b6bbbaff03b3
sw x3, 0(x2) # store 0xbb88b6bbbaff03b3 in memory
flw f19, 0(x2) # load 0xbb88b6bbbaff03b3 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmsub.s f27, f12, f19, f29, dyn # perform operation
fmsub.s f27, f12, f19, f29, rdn # perform operation
fmsub.s f27, f12, f19, f29, rmm # perform operation
fmsub.s f27, f12, f19, f29, rne # perform operation
fmsub.s f27, f12, f19, f29, rtz # perform operation
fmsub.s f27, f12, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f12, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f12, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f12, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f12, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f12, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x3555b344280d5e3 # load x3 with value 0x3555b344280d5e3
sw x3, 0(x2) # store 0x3555b344280d5e3 in memory
flw f31, 0(x2) # load 0x3555b344280d5e3 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fmsub.s f15, f29, f31, f2, dyn # perform operation
fmsub.s f15, f29, f31, f2, rdn # perform operation
fmsub.s f15, f29, f31, f2, rmm # perform operation
fmsub.s f15, f29, f31, f2, rne # perform operation
fmsub.s f15, f29, f31, f2, rtz # perform operation
fmsub.s f15, f29, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x16663b62bce59802 # load x3 with value 0x16663b62bce59802
sw x3, 0(x2) # store 0x16663b62bce59802 in memory
flw f16, 0(x2) # load 0x16663b62bce59802 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fmsub.s f6, f8, f16, f29, dyn # perform operation
fmsub.s f6, f8, f16, f29, rdn # perform operation
fmsub.s f6, f8, f16, f29, rmm # perform operation
fmsub.s f6, f8, f16, f29, rne # perform operation
fmsub.s f6, f8, f16, f29, rtz # perform operation
fmsub.s f6, f8, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x47dc98afba77f93 # load x3 with value 0x47dc98afba77f93
sw x3, 0(x2) # store 0x47dc98afba77f93 in memory
flw f5, 0(x2) # load 0x47dc98afba77f93 from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fmsub.s f6, f31, f5, f12, dyn # perform operation
fmsub.s f6, f31, f5, f12, rdn # perform operation
fmsub.s f6, f31, f5, f12, rmm # perform operation
fmsub.s f6, f31, f5, f12, rne # perform operation
fmsub.s f6, f31, f5, f12, rtz # perform operation
fmsub.s f6, f31, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xd5378eae28c140c0 # load x3 with value 0xd5378eae28c140c0
sw x3, 0(x2) # store 0xd5378eae28c140c0 in memory
flw f2, 0(x2) # load 0xd5378eae28c140c0 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fmsub.s f13, f7, f2, f24, dyn # perform operation
fmsub.s f13, f7, f2, f24, rdn # perform operation
fmsub.s f13, f7, f2, f24, rmm # perform operation
fmsub.s f13, f7, f2, f24, rne # perform operation
fmsub.s f13, f7, f2, f24, rtz # perform operation
fmsub.s f13, f7, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f7, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f7, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xbc0e44ceb253d103 # load x3 with value 0xbc0e44ceb253d103
sw x3, 0(x2) # store 0xbc0e44ceb253d103 in memory
flw f18, 0(x2) # load 0xbc0e44ceb253d103 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fmsub.s f23, f7, f18, f19, dyn # perform operation
fmsub.s f23, f7, f18, f19, rdn # perform operation
fmsub.s f23, f7, f18, f19, rmm # perform operation
fmsub.s f23, f7, f18, f19, rne # perform operation
fmsub.s f23, f7, f18, f19, rtz # perform operation
fmsub.s f23, f7, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f7, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x4cea196aa0b17aab # load x3 with value 0x4cea196aa0b17aab
sw x3, 0(x2) # store 0x4cea196aa0b17aab in memory
flw f29, 0(x2) # load 0x4cea196aa0b17aab from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f18, f13, f29, f25, dyn # perform operation
fmsub.s f18, f13, f29, f25, rdn # perform operation
fmsub.s f18, f13, f29, f25, rmm # perform operation
fmsub.s f18, f13, f29, f25, rne # perform operation
fmsub.s f18, f13, f29, f25, rtz # perform operation
fmsub.s f18, f13, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f13, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f13, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f13, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f13, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f13, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x6f7648ce0b9762e # load x3 with value 0x6f7648ce0b9762e
sw x3, 0(x2) # store 0x6f7648ce0b9762e in memory
flw f25, 0(x2) # load 0x6f7648ce0b9762e from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f24, f11, f25, f19, dyn # perform operation
fmsub.s f24, f11, f25, f19, rdn # perform operation
fmsub.s f24, f11, f25, f19, rmm # perform operation
fmsub.s f24, f11, f25, f19, rne # perform operation
fmsub.s f24, f11, f25, f19, rtz # perform operation
fmsub.s f24, f11, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x5bbe0daa0bd7b5cf # load x3 with value 0x5bbe0daa0bd7b5cf
sw x3, 0(x2) # store 0x5bbe0daa0bd7b5cf in memory
flw f7, 0(x2) # load 0x5bbe0daa0bd7b5cf from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f15, f6, f7, f10, dyn # perform operation
fmsub.s f15, f6, f7, f10, rdn # perform operation
fmsub.s f15, f6, f7, f10, rmm # perform operation
fmsub.s f15, f6, f7, f10, rne # perform operation
fmsub.s f15, f6, f7, f10, rtz # perform operation
fmsub.s f15, f6, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x1360ad41e55f6923 # load x3 with value 0x1360ad41e55f6923
sw x3, 0(x2) # store 0x1360ad41e55f6923 in memory
flw f3, 0(x2) # load 0x1360ad41e55f6923 from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmsub.s f10, f24, f3, f29, dyn # perform operation
fmsub.s f10, f24, f3, f29, rdn # perform operation
fmsub.s f10, f24, f3, f29, rmm # perform operation
fmsub.s f10, f24, f3, f29, rne # perform operation
fmsub.s f10, f24, f3, f29, rtz # perform operation
fmsub.s f10, f24, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x26257c1077394504 # load x3 with value 0x26257c1077394504
sw x3, 0(x2) # store 0x26257c1077394504 in memory
flw f28, 0(x2) # load 0x26257c1077394504 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fmsub.s f6, f30, f28, f19, dyn # perform operation
fmsub.s f6, f30, f28, f19, rdn # perform operation
fmsub.s f6, f30, f28, f19, rmm # perform operation
fmsub.s f6, f30, f28, f19, rne # perform operation
fmsub.s f6, f30, f28, f19, rtz # perform operation
fmsub.s f6, f30, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x30fc1fb22e831429 # load x3 with value 0x30fc1fb22e831429
sw x3, 0(x2) # store 0x30fc1fb22e831429 in memory
flw f12, 0(x2) # load 0x30fc1fb22e831429 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fmsub.s f29, f15, f12, f16, dyn # perform operation
fmsub.s f29, f15, f12, f16, rdn # perform operation
fmsub.s f29, f15, f12, f16, rmm # perform operation
fmsub.s f29, f15, f12, f16, rne # perform operation
fmsub.s f29, f15, f12, f16, rtz # perform operation
fmsub.s f29, f15, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xe17de62967f5109a # load x3 with value 0xe17de62967f5109a
sw x3, 0(x2) # store 0xe17de62967f5109a in memory
flw f5, 0(x2) # load 0xe17de62967f5109a from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmsub.s f20, f31, f5, f10, dyn # perform operation
fmsub.s f20, f31, f5, f10, rdn # perform operation
fmsub.s f20, f31, f5, f10, rmm # perform operation
fmsub.s f20, f31, f5, f10, rne # perform operation
fmsub.s f20, f31, f5, f10, rtz # perform operation
fmsub.s f20, f31, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x6532685f8bb4235a # load x3 with value 0x6532685f8bb4235a
sw x3, 0(x2) # store 0x6532685f8bb4235a in memory
flw f16, 0(x2) # load 0x6532685f8bb4235a from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmsub.s f21, f11, f16, f2, dyn # perform operation
fmsub.s f21, f11, f16, f2, rdn # perform operation
fmsub.s f21, f11, f16, f2, rmm # perform operation
fmsub.s f21, f11, f16, f2, rne # perform operation
fmsub.s f21, f11, f16, f2, rtz # perform operation
fmsub.s f21, f11, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f11, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f11, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x721c6bb3de94cc27 # load x3 with value 0x721c6bb3de94cc27
sw x3, 0(x2) # store 0x721c6bb3de94cc27 in memory
flw f23, 0(x2) # load 0x721c6bb3de94cc27 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
fmsub.s f5, f22, f23, f11, dyn # perform operation
fmsub.s f5, f22, f23, f11, rdn # perform operation
fmsub.s f5, f22, f23, f11, rmm # perform operation
fmsub.s f5, f22, f23, f11, rne # perform operation
fmsub.s f5, f22, f23, f11, rtz # perform operation
fmsub.s f5, f22, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f22, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xab806d3d0ceebebc # load x3 with value 0xab806d3d0ceebebc
sw x3, 0(x2) # store 0xab806d3d0ceebebc in memory
flw f20, 0(x2) # load 0xab806d3d0ceebebc from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f18, f7, f20, f29, dyn # perform operation
fmsub.s f18, f7, f20, f29, rdn # perform operation
fmsub.s f18, f7, f20, f29, rmm # perform operation
fmsub.s f18, f7, f20, f29, rne # perform operation
fmsub.s f18, f7, f20, f29, rtz # perform operation
fmsub.s f18, f7, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xfcc84d8063c9712f # load x3 with value 0xfcc84d8063c9712f
sw x3, 0(x2) # store 0xfcc84d8063c9712f in memory
flw f28, 0(x2) # load 0xfcc84d8063c9712f from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fmsub.s f18, f23, f28, f24, dyn # perform operation
fmsub.s f18, f23, f28, f24, rdn # perform operation
fmsub.s f18, f23, f28, f24, rmm # perform operation
fmsub.s f18, f23, f28, f24, rne # perform operation
fmsub.s f18, f23, f28, f24, rtz # perform operation
fmsub.s f18, f23, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x5f3d47e41cb4ce5a # load x3 with value 0x5f3d47e41cb4ce5a
sw x3, 0(x2) # store 0x5f3d47e41cb4ce5a in memory
flw f16, 0(x2) # load 0x5f3d47e41cb4ce5a from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
fmsub.s f24, f14, f16, f12, dyn # perform operation
fmsub.s f24, f14, f16, f12, rdn # perform operation
fmsub.s f24, f14, f16, f12, rmm # perform operation
fmsub.s f24, f14, f16, f12, rne # perform operation
fmsub.s f24, f14, f16, f12, rtz # perform operation
fmsub.s f24, f14, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f14, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f14, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f14, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f14, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f14, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x168fe26d7af2b7bd # load x3 with value 0x168fe26d7af2b7bd
sw x3, 0(x2) # store 0x168fe26d7af2b7bd in memory
flw f23, 0(x2) # load 0x168fe26d7af2b7bd from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmsub.s f19, f10, f23, f29, dyn # perform operation
fmsub.s f19, f10, f23, f29, rdn # perform operation
fmsub.s f19, f10, f23, f29, rmm # perform operation
fmsub.s f19, f10, f23, f29, rne # perform operation
fmsub.s f19, f10, f23, f29, rtz # perform operation
fmsub.s f19, f10, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xe25991a96e3b83af # load x3 with value 0xe25991a96e3b83af
sw x3, 0(x2) # store 0xe25991a96e3b83af in memory
flw f1, 0(x2) # load 0xe25991a96e3b83af from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fmsub.s f24, f8, f1, f6, dyn # perform operation
fmsub.s f24, f8, f1, f6, rdn # perform operation
fmsub.s f24, f8, f1, f6, rmm # perform operation
fmsub.s f24, f8, f1, f6, rne # perform operation
fmsub.s f24, f8, f1, f6, rtz # perform operation
fmsub.s f24, f8, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x7fd1eb80a7e476b4 # load x3 with value 0x7fd1eb80a7e476b4
sw x3, 0(x2) # store 0x7fd1eb80a7e476b4 in memory
flw f25, 0(x2) # load 0x7fd1eb80a7e476b4 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmsub.s f12, f10, f25, f20, dyn # perform operation
fmsub.s f12, f10, f25, f20, rdn # perform operation
fmsub.s f12, f10, f25, f20, rmm # perform operation
fmsub.s f12, f10, f25, f20, rne # perform operation
fmsub.s f12, f10, f25, f20, rtz # perform operation
fmsub.s f12, f10, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x47bb32bfe0ab0e80 # load x3 with value 0x47bb32bfe0ab0e80
sw x3, 0(x2) # store 0x47bb32bfe0ab0e80 in memory
flw f19, 0(x2) # load 0x47bb32bfe0ab0e80 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmsub.s f28, f8, f19, f23, dyn # perform operation
fmsub.s f28, f8, f19, f23, rdn # perform operation
fmsub.s f28, f8, f19, f23, rmm # perform operation
fmsub.s f28, f8, f19, f23, rne # perform operation
fmsub.s f28, f8, f19, f23, rtz # perform operation
fmsub.s f28, f8, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f19, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0xa475bfc2df2ae24d # load x3 with value 0xa475bfc2df2ae24d
sw x3, 0(x2) # store 0xa475bfc2df2ae24d in memory
flw f18, 0(x2) # load 0xa475bfc2df2ae24d from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fmsub.s f13, f1, f18, f26, dyn # perform operation
fmsub.s f13, f1, f18, f26, rdn # perform operation
fmsub.s f13, f1, f18, f26, rmm # perform operation
fmsub.s f13, f1, f18, f26, rne # perform operation
fmsub.s f13, f1, f18, f26, rtz # perform operation
fmsub.s f13, f1, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f1, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f1, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x17488d71edd8ebc6 # load x3 with value 0x17488d71edd8ebc6
sw x3, 0(x2) # store 0x17488d71edd8ebc6 in memory
flw f8, 0(x2) # load 0x17488d71edd8ebc6 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmsub.s f18, f31, f8, f23, dyn # perform operation
fmsub.s f18, f31, f8, f23, rdn # perform operation
fmsub.s f18, f31, f8, f23, rmm # perform operation
fmsub.s f18, f31, f8, f23, rne # perform operation
fmsub.s f18, f31, f8, f23, rtz # perform operation
fmsub.s f18, f31, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x4f29a1067d7db0ed # load x3 with value 0x4f29a1067d7db0ed
sw x3, 0(x2) # store 0x4f29a1067d7db0ed in memory
flw f9, 0(x2) # load 0x4f29a1067d7db0ed from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmsub.s f2, f5, f9, f31, dyn # perform operation
fmsub.s f2, f5, f9, f31, rdn # perform operation
fmsub.s f2, f5, f9, f31, rmm # perform operation
fmsub.s f2, f5, f9, f31, rne # perform operation
fmsub.s f2, f5, f9, f31, rtz # perform operation
fmsub.s f2, f5, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f5, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f5, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f5, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f5, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f5, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x780869c683d585f1 # load x3 with value 0x780869c683d585f1
sw x3, 0(x2) # store 0x780869c683d585f1 in memory
flw f30, 0(x2) # load 0x780869c683d585f1 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmsub.s f7, f3, f30, f2, dyn # perform operation
fmsub.s f7, f3, f30, f2, rdn # perform operation
fmsub.s f7, f3, f30, f2, rmm # perform operation
fmsub.s f7, f3, f30, f2, rne # perform operation
fmsub.s f7, f3, f30, f2, rtz # perform operation
fmsub.s f7, f3, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x4afac904daea2d2 # load x3 with value 0x4afac904daea2d2
sw x3, 0(x2) # store 0x4afac904daea2d2 in memory
flw f21, 0(x2) # load 0x4afac904daea2d2 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmsub.s f30, f22, f21, f14, dyn # perform operation
fmsub.s f30, f22, f21, f14, rdn # perform operation
fmsub.s f30, f22, f21, f14, rmm # perform operation
fmsub.s f30, f22, f21, f14, rne # perform operation
fmsub.s f30, f22, f21, f14, rtz # perform operation
fmsub.s f30, f22, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f22, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f22, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x590ed089f2ff6118 # load x3 with value 0x590ed089f2ff6118
sw x3, 0(x2) # store 0x590ed089f2ff6118 in memory
flw f12, 0(x2) # load 0x590ed089f2ff6118 from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmsub.s f11, f3, f12, f8, dyn # perform operation
fmsub.s f11, f3, f12, f8, rdn # perform operation
fmsub.s f11, f3, f12, f8, rmm # perform operation
fmsub.s f11, f3, f12, f8, rne # perform operation
fmsub.s f11, f3, f12, f8, rtz # perform operation
fmsub.s f11, f3, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f3, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f3, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f3, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f3, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f3, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xa7ad1fef7a80d975 # load x3 with value 0xa7ad1fef7a80d975
sw x3, 0(x2) # store 0xa7ad1fef7a80d975 in memory
flw f15, 0(x2) # load 0xa7ad1fef7a80d975 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmsub.s f1, f26, f15, f11, dyn # perform operation
fmsub.s f1, f26, f15, f11, rdn # perform operation
fmsub.s f1, f26, f15, f11, rmm # perform operation
fmsub.s f1, f26, f15, f11, rne # perform operation
fmsub.s f1, f26, f15, f11, rtz # perform operation
fmsub.s f1, f26, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x1fe566bed6d1416a # load x3 with value 0x1fe566bed6d1416a
sw x3, 0(x2) # store 0x1fe566bed6d1416a in memory
flw f26, 0(x2) # load 0x1fe566bed6d1416a from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fmsub.s f9, f31, f26, f5, dyn # perform operation
fmsub.s f9, f31, f26, f5, rdn # perform operation
fmsub.s f9, f31, f26, f5, rmm # perform operation
fmsub.s f9, f31, f26, f5, rne # perform operation
fmsub.s f9, f31, f26, f5, rtz # perform operation
fmsub.s f9, f31, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f31, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f31, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x42fcb394b0cc909a # load x3 with value 0x42fcb394b0cc909a
sw x3, 0(x2) # store 0x42fcb394b0cc909a in memory
flw f19, 0(x2) # load 0x42fcb394b0cc909a from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fmsub.s f15, f29, f19, f12, dyn # perform operation
fmsub.s f15, f29, f19, f12, rdn # perform operation
fmsub.s f15, f29, f19, f12, rmm # perform operation
fmsub.s f15, f29, f19, f12, rne # perform operation
fmsub.s f15, f29, f19, f12, rtz # perform operation
fmsub.s f15, f29, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x6b1b47054c798baf # load x3 with value 0x6b1b47054c798baf
sw x3, 0(x2) # store 0x6b1b47054c798baf in memory
flw f10, 0(x2) # load 0x6b1b47054c798baf from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fmsub.s f14, f26, f10, f29, dyn # perform operation
fmsub.s f14, f26, f10, f29, rdn # perform operation
fmsub.s f14, f26, f10, f29, rmm # perform operation
fmsub.s f14, f26, f10, f29, rne # perform operation
fmsub.s f14, f26, f10, f29, rtz # perform operation
fmsub.s f14, f26, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0xb1de31267ea87b67 # load x3 with value 0xb1de31267ea87b67
sw x3, 0(x2) # store 0xb1de31267ea87b67 in memory
flw f11, 0(x2) # load 0xb1de31267ea87b67 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmsub.s f10, f18, f11, f27, dyn # perform operation
fmsub.s f10, f18, f11, f27, rdn # perform operation
fmsub.s f10, f18, f11, f27, rmm # perform operation
fmsub.s f10, f18, f11, f27, rne # perform operation
fmsub.s f10, f18, f11, f27, rtz # perform operation
fmsub.s f10, f18, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x7f9b0f1b8afb59b7 # load x3 with value 0x7f9b0f1b8afb59b7
sw x3, 0(x2) # store 0x7f9b0f1b8afb59b7 in memory
flw f8, 0(x2) # load 0x7f9b0f1b8afb59b7 from memory into f8
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fmsub.s f10, f1, f8, f19, dyn # perform operation
fmsub.s f10, f1, f8, f19, rdn # perform operation
fmsub.s f10, f1, f8, f19, rmm # perform operation
fmsub.s f10, f1, f8, f19, rne # perform operation
fmsub.s f10, f1, f8, f19, rtz # perform operation
fmsub.s f10, f1, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xd5d800e5b62c9469 # load x3 with value 0xd5d800e5b62c9469
sw x3, 0(x2) # store 0xd5d800e5b62c9469 in memory
flw f22, 0(x2) # load 0xd5d800e5b62c9469 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f27, f23, f22, f25, dyn # perform operation
fmsub.s f27, f23, f22, f25, rdn # perform operation
fmsub.s f27, f23, f22, f25, rmm # perform operation
fmsub.s f27, f23, f22, f25, rne # perform operation
fmsub.s f27, f23, f22, f25, rtz # perform operation
fmsub.s f27, f23, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f23, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f23, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x52adddce45d1f353 # load x3 with value 0x52adddce45d1f353
sw x3, 0(x2) # store 0x52adddce45d1f353 in memory
flw f2, 0(x2) # load 0x52adddce45d1f353 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fmsub.s f24, f16, f2, f15, dyn # perform operation
fmsub.s f24, f16, f2, f15, rdn # perform operation
fmsub.s f24, f16, f2, f15, rmm # perform operation
fmsub.s f24, f16, f2, f15, rne # perform operation
fmsub.s f24, f16, f2, f15, rtz # perform operation
fmsub.s f24, f16, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xa2763c45848bd84c # load x3 with value 0xa2763c45848bd84c
sw x3, 0(x2) # store 0xa2763c45848bd84c in memory
flw f5, 0(x2) # load 0xa2763c45848bd84c from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fmsub.s f11, f25, f5, f12, dyn # perform operation
fmsub.s f11, f25, f5, f12, rdn # perform operation
fmsub.s f11, f25, f5, f12, rmm # perform operation
fmsub.s f11, f25, f5, f12, rne # perform operation
fmsub.s f11, f25, f5, f12, rtz # perform operation
fmsub.s f11, f25, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x415cd178a3362ea1 # load x3 with value 0x415cd178a3362ea1
sw x3, 0(x2) # store 0x415cd178a3362ea1 in memory
flw f5, 0(x2) # load 0x415cd178a3362ea1 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmsub.s f23, f13, f5, f20, dyn # perform operation
fmsub.s f23, f13, f5, f20, rdn # perform operation
fmsub.s f23, f13, f5, f20, rmm # perform operation
fmsub.s f23, f13, f5, f20, rne # perform operation
fmsub.s f23, f13, f5, f20, rtz # perform operation
fmsub.s f23, f13, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x6516ab1b790e416 # load x3 with value 0x6516ab1b790e416
sw x3, 0(x2) # store 0x6516ab1b790e416 in memory
flw f29, 0(x2) # load 0x6516ab1b790e416 from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmsub.s f8, f23, f29, f21, dyn # perform operation
fmsub.s f8, f23, f29, f21, rdn # perform operation
fmsub.s f8, f23, f29, f21, rmm # perform operation
fmsub.s f8, f23, f29, f21, rne # perform operation
fmsub.s f8, f23, f29, f21, rtz # perform operation
fmsub.s f8, f23, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x299d5d85a701e7fd # load x3 with value 0x299d5d85a701e7fd
sw x3, 0(x2) # store 0x299d5d85a701e7fd in memory
flw f6, 0(x2) # load 0x299d5d85a701e7fd from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fmsub.s f23, f12, f6, f31, dyn # perform operation
fmsub.s f23, f12, f6, f31, rdn # perform operation
fmsub.s f23, f12, f6, f31, rmm # perform operation
fmsub.s f23, f12, f6, f31, rne # perform operation
fmsub.s f23, f12, f6, f31, rtz # perform operation
fmsub.s f23, f12, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xd4ca7ad0665918ed # load x3 with value 0xd4ca7ad0665918ed
sw x3, 0(x2) # store 0xd4ca7ad0665918ed in memory
flw f28, 0(x2) # load 0xd4ca7ad0665918ed from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fmsub.s f1, f29, f28, f31, dyn # perform operation
fmsub.s f1, f29, f28, f31, rdn # perform operation
fmsub.s f1, f29, f28, f31, rmm # perform operation
fmsub.s f1, f29, f28, f31, rne # perform operation
fmsub.s f1, f29, f28, f31, rtz # perform operation
fmsub.s f1, f29, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f29, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f29, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0xef7fc57dccc5cc99 # load x3 with value 0xef7fc57dccc5cc99
sw x3, 0(x2) # store 0xef7fc57dccc5cc99 in memory
flw f14, 0(x2) # load 0xef7fc57dccc5cc99 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmsub.s f23, f6, f14, f28, dyn # perform operation
fmsub.s f23, f6, f14, f28, rdn # perform operation
fmsub.s f23, f6, f14, f28, rmm # perform operation
fmsub.s f23, f6, f14, f28, rne # perform operation
fmsub.s f23, f6, f14, f28, rtz # perform operation
fmsub.s f23, f6, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x83a2ef7ec3c6c9b6 # load x3 with value 0x83a2ef7ec3c6c9b6
sw x3, 0(x2) # store 0x83a2ef7ec3c6c9b6 in memory
flw f21, 0(x2) # load 0x83a2ef7ec3c6c9b6 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmsub.s f24, f22, f21, f12, dyn # perform operation
fmsub.s f24, f22, f21, f12, rdn # perform operation
fmsub.s f24, f22, f21, f12, rmm # perform operation
fmsub.s f24, f22, f21, f12, rne # perform operation
fmsub.s f24, f22, f21, f12, rtz # perform operation
fmsub.s f24, f22, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f22, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f22, f21, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x6fb080466198f4f8 # load x3 with value 0x6fb080466198f4f8
sw x3, 0(x2) # store 0x6fb080466198f4f8 in memory
flw f12, 0(x2) # load 0x6fb080466198f4f8 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f6, f10, f12, f31, dyn # perform operation
fmsub.s f6, f10, f12, f31, rdn # perform operation
fmsub.s f6, f10, f12, f31, rmm # perform operation
fmsub.s f6, f10, f12, f31, rne # perform operation
fmsub.s f6, f10, f12, f31, rtz # perform operation
fmsub.s f6, f10, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xb02b299477f6c05e # load x3 with value 0xb02b299477f6c05e
sw x3, 0(x2) # store 0xb02b299477f6c05e in memory
flw f21, 0(x2) # load 0xb02b299477f6c05e from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmsub.s f20, f14, f21, f25, dyn # perform operation
fmsub.s f20, f14, f21, f25, rdn # perform operation
fmsub.s f20, f14, f21, f25, rmm # perform operation
fmsub.s f20, f14, f21, f25, rne # perform operation
fmsub.s f20, f14, f21, f25, rtz # perform operation
fmsub.s f20, f14, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f14, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x2acf2620fe735b83 # load x3 with value 0x2acf2620fe735b83
sw x3, 0(x2) # store 0x2acf2620fe735b83 in memory
flw f26, 0(x2) # load 0x2acf2620fe735b83 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fmsub.s f9, f16, f26, f10, dyn # perform operation
fmsub.s f9, f16, f26, f10, rdn # perform operation
fmsub.s f9, f16, f26, f10, rmm # perform operation
fmsub.s f9, f16, f26, f10, rne # perform operation
fmsub.s f9, f16, f26, f10, rtz # perform operation
fmsub.s f9, f16, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0xa63437eab2aff311 # load x3 with value 0xa63437eab2aff311
sw x3, 0(x2) # store 0xa63437eab2aff311 in memory
flw f11, 0(x2) # load 0xa63437eab2aff311 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fmsub.s f13, f2, f11, f20, dyn # perform operation
fmsub.s f13, f2, f11, f20, rdn # perform operation
fmsub.s f13, f2, f11, f20, rmm # perform operation
fmsub.s f13, f2, f11, f20, rne # perform operation
fmsub.s f13, f2, f11, f20, rtz # perform operation
fmsub.s f13, f2, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x17fcbc8b195258f8 # load x3 with value 0x17fcbc8b195258f8
sw x3, 0(x2) # store 0x17fcbc8b195258f8 in memory
flw f24, 0(x2) # load 0x17fcbc8b195258f8 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmsub.s f1, f6, f24, f31, dyn # perform operation
fmsub.s f1, f6, f24, f31, rdn # perform operation
fmsub.s f1, f6, f24, f31, rmm # perform operation
fmsub.s f1, f6, f24, f31, rne # perform operation
fmsub.s f1, f6, f24, f31, rtz # perform operation
fmsub.s f1, f6, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f6, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f6, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x337a56dda15a66ad # load x3 with value 0x337a56dda15a66ad
sw x3, 0(x2) # store 0x337a56dda15a66ad in memory
flw f27, 0(x2) # load 0x337a56dda15a66ad from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f10, f17, f27, f26, dyn # perform operation
fmsub.s f10, f17, f27, f26, rdn # perform operation
fmsub.s f10, f17, f27, f26, rmm # perform operation
fmsub.s f10, f17, f27, f26, rne # perform operation
fmsub.s f10, f17, f27, f26, rtz # perform operation
fmsub.s f10, f17, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x959283e3e5a01c05 # load x3 with value 0x959283e3e5a01c05
sw x3, 0(x2) # store 0x959283e3e5a01c05 in memory
flw f26, 0(x2) # load 0x959283e3e5a01c05 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmsub.s f16, f19, f26, f24, dyn # perform operation
fmsub.s f16, f19, f26, f24, rdn # perform operation
fmsub.s f16, f19, f26, f24, rmm # perform operation
fmsub.s f16, f19, f26, f24, rne # perform operation
fmsub.s f16, f19, f26, f24, rtz # perform operation
fmsub.s f16, f19, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f19, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f19, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x1c303407437968b3 # load x3 with value 0x1c303407437968b3
sw x3, 0(x2) # store 0x1c303407437968b3 in memory
flw f11, 0(x2) # load 0x1c303407437968b3 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmsub.s f13, f6, f11, f8, dyn # perform operation
fmsub.s f13, f6, f11, f8, rdn # perform operation
fmsub.s f13, f6, f11, f8, rmm # perform operation
fmsub.s f13, f6, f11, f8, rne # perform operation
fmsub.s f13, f6, f11, f8, rtz # perform operation
fmsub.s f13, f6, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f6, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f6, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x8f01baa04a78c6ad # load x3 with value 0x8f01baa04a78c6ad
sw x3, 0(x2) # store 0x8f01baa04a78c6ad in memory
flw f8, 0(x2) # load 0x8f01baa04a78c6ad from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmsub.s f3, f12, f8, f10, dyn # perform operation
fmsub.s f3, f12, f8, f10, rdn # perform operation
fmsub.s f3, f12, f8, f10, rmm # perform operation
fmsub.s f3, f12, f8, f10, rne # perform operation
fmsub.s f3, f12, f8, f10, rtz # perform operation
fmsub.s f3, f12, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f12, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f12, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x8b673eca4af1a816 # load x3 with value 0x8b673eca4af1a816
sw x3, 0(x2) # store 0x8b673eca4af1a816 in memory
flw f11, 0(x2) # load 0x8b673eca4af1a816 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmsub.s f20, f17, f11, f22, dyn # perform operation
fmsub.s f20, f17, f11, f22, rdn # perform operation
fmsub.s f20, f17, f11, f22, rmm # perform operation
fmsub.s f20, f17, f11, f22, rne # perform operation
fmsub.s f20, f17, f11, f22, rtz # perform operation
fmsub.s f20, f17, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x41fee7ca9e2bfb83 # load x3 with value 0x41fee7ca9e2bfb83
sw x3, 0(x2) # store 0x41fee7ca9e2bfb83 in memory
flw f6, 0(x2) # load 0x41fee7ca9e2bfb83 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fmsub.s f11, f25, f6, f17, dyn # perform operation
fmsub.s f11, f25, f6, f17, rdn # perform operation
fmsub.s f11, f25, f6, f17, rmm # perform operation
fmsub.s f11, f25, f6, f17, rne # perform operation
fmsub.s f11, f25, f6, f17, rtz # perform operation
fmsub.s f11, f25, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xefc8dfd50f267d05 # load x3 with value 0xefc8dfd50f267d05
sw x3, 0(x2) # store 0xefc8dfd50f267d05 in memory
flw f27, 0(x2) # load 0xefc8dfd50f267d05 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fmsub.s f23, f29, f27, f20, dyn # perform operation
fmsub.s f23, f29, f27, f20, rdn # perform operation
fmsub.s f23, f29, f27, f20, rmm # perform operation
fmsub.s f23, f29, f27, f20, rne # perform operation
fmsub.s f23, f29, f27, f20, rtz # perform operation
fmsub.s f23, f29, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xda4af292c54503b9 # load x3 with value 0xda4af292c54503b9
sw x3, 0(x2) # store 0xda4af292c54503b9 in memory
flw f1, 0(x2) # load 0xda4af292c54503b9 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmsub.s f26, f23, f1, f25, dyn # perform operation
fmsub.s f26, f23, f1, f25, rdn # perform operation
fmsub.s f26, f23, f1, f25, rmm # perform operation
fmsub.s f26, f23, f1, f25, rne # perform operation
fmsub.s f26, f23, f1, f25, rtz # perform operation
fmsub.s f26, f23, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f1, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x24ed6fc6861f4cb2 # load x3 with value 0x24ed6fc6861f4cb2
sw x3, 0(x2) # store 0x24ed6fc6861f4cb2 in memory
flw f19, 0(x2) # load 0x24ed6fc6861f4cb2 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fmsub.s f7, f21, f19, f5, dyn # perform operation
fmsub.s f7, f21, f19, f5, rdn # perform operation
fmsub.s f7, f21, f19, f5, rmm # perform operation
fmsub.s f7, f21, f19, f5, rne # perform operation
fmsub.s f7, f21, f19, f5, rtz # perform operation
fmsub.s f7, f21, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f21, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f21, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f21, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f21, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f21, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x44fa57caa6f6b769 # load x3 with value 0x44fa57caa6f6b769
sw x3, 0(x2) # store 0x44fa57caa6f6b769 in memory
flw f24, 0(x2) # load 0x44fa57caa6f6b769 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fmsub.s f29, f26, f24, f7, dyn # perform operation
fmsub.s f29, f26, f24, f7, rdn # perform operation
fmsub.s f29, f26, f24, f7, rmm # perform operation
fmsub.s f29, f26, f24, f7, rne # perform operation
fmsub.s f29, f26, f24, f7, rtz # perform operation
fmsub.s f29, f26, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x99403617be4a404c # load x3 with value 0x99403617be4a404c
sw x3, 0(x2) # store 0x99403617be4a404c in memory
flw f3, 0(x2) # load 0x99403617be4a404c from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f8, f22, f3, f14, dyn # perform operation
fmsub.s f8, f22, f3, f14, rdn # perform operation
fmsub.s f8, f22, f3, f14, rmm # perform operation
fmsub.s f8, f22, f3, f14, rne # perform operation
fmsub.s f8, f22, f3, f14, rtz # perform operation
fmsub.s f8, f22, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f22, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f22, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f22, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f22, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f22, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x27ee369685198bb # load x3 with value 0x27ee369685198bb
sw x3, 0(x2) # store 0x27ee369685198bb in memory
flw f15, 0(x2) # load 0x27ee369685198bb from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f3, f29, f15, f5, dyn # perform operation
fmsub.s f3, f29, f15, f5, rdn # perform operation
fmsub.s f3, f29, f15, f5, rmm # perform operation
fmsub.s f3, f29, f15, f5, rne # perform operation
fmsub.s f3, f29, f15, f5, rtz # perform operation
fmsub.s f3, f29, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x4e159d1a0a580033 # load x3 with value 0x4e159d1a0a580033
sw x3, 0(x2) # store 0x4e159d1a0a580033 in memory
flw f10, 0(x2) # load 0x4e159d1a0a580033 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f30, f1, f10, f6, dyn # perform operation
fmsub.s f30, f1, f10, f6, rdn # perform operation
fmsub.s f30, f1, f10, f6, rmm # perform operation
fmsub.s f30, f1, f10, f6, rne # perform operation
fmsub.s f30, f1, f10, f6, rtz # perform operation
fmsub.s f30, f1, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f10, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x82d1e9025cbf8b44 # load x3 with value 0x82d1e9025cbf8b44
sw x3, 0(x2) # store 0x82d1e9025cbf8b44 in memory
flw f21, 0(x2) # load 0x82d1e9025cbf8b44 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmsub.s f3, f16, f21, f7, dyn # perform operation
fmsub.s f3, f16, f21, f7, rdn # perform operation
fmsub.s f3, f16, f21, f7, rmm # perform operation
fmsub.s f3, f16, f21, f7, rne # perform operation
fmsub.s f3, f16, f21, f7, rtz # perform operation
fmsub.s f3, f16, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f16, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f16, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x98da642998794781 # load x3 with value 0x98da642998794781
sw x3, 0(x2) # store 0x98da642998794781 in memory
flw f12, 0(x2) # load 0x98da642998794781 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f15, f29, f12, f25, dyn # perform operation
fmsub.s f15, f29, f12, f25, rdn # perform operation
fmsub.s f15, f29, f12, f25, rmm # perform operation
fmsub.s f15, f29, f12, f25, rne # perform operation
fmsub.s f15, f29, f12, f25, rtz # perform operation
fmsub.s f15, f29, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0xcb4344e6a3a65b2c # load x3 with value 0xcb4344e6a3a65b2c
sw x3, 0(x2) # store 0xcb4344e6a3a65b2c in memory
flw f16, 0(x2) # load 0xcb4344e6a3a65b2c from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f3, f15, f16, f29, dyn # perform operation
fmsub.s f3, f15, f16, f29, rdn # perform operation
fmsub.s f3, f15, f16, f29, rmm # perform operation
fmsub.s f3, f15, f16, f29, rne # perform operation
fmsub.s f3, f15, f16, f29, rtz # perform operation
fmsub.s f3, f15, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xbe00f762390245a6 # load x3 with value 0xbe00f762390245a6
sw x3, 0(x2) # store 0xbe00f762390245a6 in memory
flw f23, 0(x2) # load 0xbe00f762390245a6 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmsub.s f15, f2, f23, f31, dyn # perform operation
fmsub.s f15, f2, f23, f31, rdn # perform operation
fmsub.s f15, f2, f23, f31, rmm # perform operation
fmsub.s f15, f2, f23, f31, rne # perform operation
fmsub.s f15, f2, f23, f31, rtz # perform operation
fmsub.s f15, f2, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x993bd6799157850c # load x3 with value 0x993bd6799157850c
sw x3, 0(x2) # store 0x993bd6799157850c in memory
flw f6, 0(x2) # load 0x993bd6799157850c from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmsub.s f3, f29, f6, f12, dyn # perform operation
fmsub.s f3, f29, f6, f12, rdn # perform operation
fmsub.s f3, f29, f6, f12, rmm # perform operation
fmsub.s f3, f29, f6, f12, rne # perform operation
fmsub.s f3, f29, f6, f12, rtz # perform operation
fmsub.s f3, f29, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f6, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x60331f336cf705d7 # load x3 with value 0x60331f336cf705d7
sw x3, 0(x2) # store 0x60331f336cf705d7 in memory
flw f12, 0(x2) # load 0x60331f336cf705d7 from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmsub.s f13, f22, f12, f26, dyn # perform operation
fmsub.s f13, f22, f12, f26, rdn # perform operation
fmsub.s f13, f22, f12, f26, rmm # perform operation
fmsub.s f13, f22, f12, f26, rne # perform operation
fmsub.s f13, f22, f12, f26, rtz # perform operation
fmsub.s f13, f22, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f22, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f22, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xc08453356ea53dff # load x3 with value 0xc08453356ea53dff
sw x3, 0(x2) # store 0xc08453356ea53dff in memory
flw f9, 0(x2) # load 0xc08453356ea53dff from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmsub.s f18, f8, f9, f6, dyn # perform operation
fmsub.s f18, f8, f9, f6, rdn # perform operation
fmsub.s f18, f8, f9, f6, rmm # perform operation
fmsub.s f18, f8, f9, f6, rne # perform operation
fmsub.s f18, f8, f9, f6, rtz # perform operation
fmsub.s f18, f8, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f8, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f8, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f8, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f8, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f8, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x4a3622460feaf1e5 # load x3 with value 0x4a3622460feaf1e5
sw x3, 0(x2) # store 0x4a3622460feaf1e5 in memory
flw f5, 0(x2) # load 0x4a3622460feaf1e5 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmsub.s f19, f16, f5, f30, dyn # perform operation
fmsub.s f19, f16, f5, f30, rdn # perform operation
fmsub.s f19, f16, f5, f30, rmm # perform operation
fmsub.s f19, f16, f5, f30, rne # perform operation
fmsub.s f19, f16, f5, f30, rtz # perform operation
fmsub.s f19, f16, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f5, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0xa99416014b9af7b9 # load x3 with value 0xa99416014b9af7b9
sw x3, 0(x2) # store 0xa99416014b9af7b9 in memory
flw f6, 0(x2) # load 0xa99416014b9af7b9 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmsub.s f5, f9, f6, f28, dyn # perform operation
fmsub.s f5, f9, f6, f28, rdn # perform operation
fmsub.s f5, f9, f6, f28, rmm # perform operation
fmsub.s f5, f9, f6, f28, rne # perform operation
fmsub.s f5, f9, f6, f28, rtz # perform operation
fmsub.s f5, f9, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f9, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x27e9b0151c0b1ea3 # load x3 with value 0x27e9b0151c0b1ea3
sw x3, 0(x2) # store 0x27e9b0151c0b1ea3 in memory
flw f20, 0(x2) # load 0x27e9b0151c0b1ea3 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fmsub.s f26, f19, f20, f31, dyn # perform operation
fmsub.s f26, f19, f20, f31, rdn # perform operation
fmsub.s f26, f19, f20, f31, rmm # perform operation
fmsub.s f26, f19, f20, f31, rne # perform operation
fmsub.s f26, f19, f20, f31, rtz # perform operation
fmsub.s f26, f19, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f19, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f19, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x95a7c6a1a1c4b566 # load x3 with value 0x95a7c6a1a1c4b566
sw x3, 0(x2) # store 0x95a7c6a1a1c4b566 in memory
flw f12, 0(x2) # load 0x95a7c6a1a1c4b566 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f15, f18, f12, f31, dyn # perform operation
fmsub.s f15, f18, f12, f31, rdn # perform operation
fmsub.s f15, f18, f12, f31, rmm # perform operation
fmsub.s f15, f18, f12, f31, rne # perform operation
fmsub.s f15, f18, f12, f31, rtz # perform operation
fmsub.s f15, f18, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f18, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f18, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xd46eb855200588ae # load x3 with value 0xd46eb855200588ae
sw x3, 0(x2) # store 0xd46eb855200588ae in memory
flw f18, 0(x2) # load 0xd46eb855200588ae from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmsub.s f15, f14, f18, f19, dyn # perform operation
fmsub.s f15, f14, f18, f19, rdn # perform operation
fmsub.s f15, f14, f18, f19, rmm # perform operation
fmsub.s f15, f14, f18, f19, rne # perform operation
fmsub.s f15, f14, f18, f19, rtz # perform operation
fmsub.s f15, f14, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x25d14541abd13f74 # load x3 with value 0x25d14541abd13f74
sw x3, 0(x2) # store 0x25d14541abd13f74 in memory
flw f17, 0(x2) # load 0x25d14541abd13f74 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
fmsub.s f1, f27, f17, f29, dyn # perform operation
fmsub.s f1, f27, f17, f29, rdn # perform operation
fmsub.s f1, f27, f17, f29, rmm # perform operation
fmsub.s f1, f27, f17, f29, rne # perform operation
fmsub.s f1, f27, f17, f29, rtz # perform operation
fmsub.s f1, f27, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f27, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x2f5e318f27f43ba0 # load x3 with value 0x2f5e318f27f43ba0
sw x3, 0(x2) # store 0x2f5e318f27f43ba0 in memory
flw f5, 0(x2) # load 0x2f5e318f27f43ba0 from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fmsub.s f7, f27, f5, f15, dyn # perform operation
fmsub.s f7, f27, f5, f15, rdn # perform operation
fmsub.s f7, f27, f5, f15, rmm # perform operation
fmsub.s f7, f27, f5, f15, rne # perform operation
fmsub.s f7, f27, f5, f15, rtz # perform operation
fmsub.s f7, f27, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f27, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f27, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f27, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f27, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f27, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xd30bbb58dceb11c5 # load x3 with value 0xd30bbb58dceb11c5
sw x3, 0(x2) # store 0xd30bbb58dceb11c5 in memory
flw f13, 0(x2) # load 0xd30bbb58dceb11c5 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fmsub.s f12, f7, f13, f29, dyn # perform operation
fmsub.s f12, f7, f13, f29, rdn # perform operation
fmsub.s f12, f7, f13, f29, rmm # perform operation
fmsub.s f12, f7, f13, f29, rne # perform operation
fmsub.s f12, f7, f13, f29, rtz # perform operation
fmsub.s f12, f7, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f7, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f7, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f7, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f7, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f7, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x2ee5954a262835b9 # load x3 with value 0x2ee5954a262835b9
sw x3, 0(x2) # store 0x2ee5954a262835b9 in memory
flw f3, 0(x2) # load 0x2ee5954a262835b9 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fmsub.s f14, f28, f3, f31, dyn # perform operation
fmsub.s f14, f28, f3, f31, rdn # perform operation
fmsub.s f14, f28, f3, f31, rmm # perform operation
fmsub.s f14, f28, f3, f31, rne # perform operation
fmsub.s f14, f28, f3, f31, rtz # perform operation
fmsub.s f14, f28, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f28, f3, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xe52b013e71c71c32 # load x3 with value 0xe52b013e71c71c32
sw x3, 0(x2) # store 0xe52b013e71c71c32 in memory
flw f2, 0(x2) # load 0xe52b013e71c71c32 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fmsub.s f7, f10, f2, f16, dyn # perform operation
fmsub.s f7, f10, f2, f16, rdn # perform operation
fmsub.s f7, f10, f2, f16, rmm # perform operation
fmsub.s f7, f10, f2, f16, rne # perform operation
fmsub.s f7, f10, f2, f16, rtz # perform operation
fmsub.s f7, f10, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x2dccfe693d34b014 # load x3 with value 0x2dccfe693d34b014
sw x3, 0(x2) # store 0x2dccfe693d34b014 in memory
flw f7, 0(x2) # load 0x2dccfe693d34b014 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmsub.s f3, f14, f7, f28, dyn # perform operation
fmsub.s f3, f14, f7, f28, rdn # perform operation
fmsub.s f3, f14, f7, f28, rmm # perform operation
fmsub.s f3, f14, f7, f28, rne # perform operation
fmsub.s f3, f14, f7, f28, rtz # perform operation
fmsub.s f3, f14, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xd5571619514c7e0d # load x3 with value 0xd5571619514c7e0d
sw x3, 0(x2) # store 0xd5571619514c7e0d in memory
flw f14, 0(x2) # load 0xd5571619514c7e0d from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fmsub.s f22, f5, f14, f28, dyn # perform operation
fmsub.s f22, f5, f14, f28, rdn # perform operation
fmsub.s f22, f5, f14, f28, rmm # perform operation
fmsub.s f22, f5, f14, f28, rne # perform operation
fmsub.s f22, f5, f14, f28, rtz # perform operation
fmsub.s f22, f5, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xb34056cf50a50923 # load x3 with value 0xb34056cf50a50923
sw x3, 0(x2) # store 0xb34056cf50a50923 in memory
flw f7, 0(x2) # load 0xb34056cf50a50923 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmsub.s f29, f22, f7, f12, dyn # perform operation
fmsub.s f29, f22, f7, f12, rdn # perform operation
fmsub.s f29, f22, f7, f12, rmm # perform operation
fmsub.s f29, f22, f7, f12, rne # perform operation
fmsub.s f29, f22, f7, f12, rtz # perform operation
fmsub.s f29, f22, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f22, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f22, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0xd1d2518593b3007b # load x3 with value 0xd1d2518593b3007b
sw x3, 0(x2) # store 0xd1d2518593b3007b in memory
flw f30, 0(x2) # load 0xd1d2518593b3007b from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmsub.s f17, f16, f30, f24, dyn # perform operation
fmsub.s f17, f16, f30, f24, rdn # perform operation
fmsub.s f17, f16, f30, f24, rmm # perform operation
fmsub.s f17, f16, f30, f24, rne # perform operation
fmsub.s f17, f16, f30, f24, rtz # perform operation
fmsub.s f17, f16, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f30, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x9b4963dd2e31b081 # load x3 with value 0x9b4963dd2e31b081
sw x3, 0(x2) # store 0x9b4963dd2e31b081 in memory
flw f24, 0(x2) # load 0x9b4963dd2e31b081 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmsub.s f17, f14, f24, f22, dyn # perform operation
fmsub.s f17, f14, f24, f22, rdn # perform operation
fmsub.s f17, f14, f24, f22, rmm # perform operation
fmsub.s f17, f14, f24, f22, rne # perform operation
fmsub.s f17, f14, f24, f22, rtz # perform operation
fmsub.s f17, f14, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f14, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f14, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x7d0f35de529161a # load x3 with value 0x7d0f35de529161a
sw x3, 0(x2) # store 0x7d0f35de529161a in memory
flw f24, 0(x2) # load 0x7d0f35de529161a from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmsub.s f14, f22, f24, f23, dyn # perform operation
fmsub.s f14, f22, f24, f23, rdn # perform operation
fmsub.s f14, f22, f24, f23, rmm # perform operation
fmsub.s f14, f22, f24, f23, rne # perform operation
fmsub.s f14, f22, f24, f23, rtz # perform operation
fmsub.s f14, f22, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f22, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f22, f24, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x3233a6ccfab90fda # load x3 with value 0x3233a6ccfab90fda
sw x3, 0(x2) # store 0x3233a6ccfab90fda in memory
flw f3, 0(x2) # load 0x3233a6ccfab90fda from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmsub.s f25, f19, f3, f6, dyn # perform operation
fmsub.s f25, f19, f3, f6, rdn # perform operation
fmsub.s f25, f19, f3, f6, rmm # perform operation
fmsub.s f25, f19, f3, f6, rne # perform operation
fmsub.s f25, f19, f3, f6, rtz # perform operation
fmsub.s f25, f19, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f3, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x317030963bc387ca # load x3 with value 0x317030963bc387ca
sw x3, 0(x2) # store 0x317030963bc387ca in memory
flw f2, 0(x2) # load 0x317030963bc387ca from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmsub.s f29, f26, f2, f20, dyn # perform operation
fmsub.s f29, f26, f2, f20, rdn # perform operation
fmsub.s f29, f26, f2, f20, rmm # perform operation
fmsub.s f29, f26, f2, f20, rne # perform operation
fmsub.s f29, f26, f2, f20, rtz # perform operation
fmsub.s f29, f26, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f2, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x258b9c4decdab53e # load x3 with value 0x258b9c4decdab53e
sw x3, 0(x2) # store 0x258b9c4decdab53e in memory
flw f8, 0(x2) # load 0x258b9c4decdab53e from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f3, f13, f8, f14, dyn # perform operation
fmsub.s f3, f13, f8, f14, rdn # perform operation
fmsub.s f3, f13, f8, f14, rmm # perform operation
fmsub.s f3, f13, f8, f14, rne # perform operation
fmsub.s f3, f13, f8, f14, rtz # perform operation
fmsub.s f3, f13, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f13, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xc0c2fe01799c35c3 # load x3 with value 0xc0c2fe01799c35c3
sw x3, 0(x2) # store 0xc0c2fe01799c35c3 in memory
flw f1, 0(x2) # load 0xc0c2fe01799c35c3 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmsub.s f10, f25, f1, f6, dyn # perform operation
fmsub.s f10, f25, f1, f6, rdn # perform operation
fmsub.s f10, f25, f1, f6, rmm # perform operation
fmsub.s f10, f25, f1, f6, rne # perform operation
fmsub.s f10, f25, f1, f6, rtz # perform operation
fmsub.s f10, f25, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0x9635517911b687a9 # load x3 with value 0x9635517911b687a9
sw x3, 0(x2) # store 0x9635517911b687a9 in memory
flw f10, 0(x2) # load 0x9635517911b687a9 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmsub.s f25, f22, f10, f5, dyn # perform operation
fmsub.s f25, f22, f10, f5, rdn # perform operation
fmsub.s f25, f22, f10, f5, rmm # perform operation
fmsub.s f25, f22, f10, f5, rne # perform operation
fmsub.s f25, f22, f10, f5, rtz # perform operation
fmsub.s f25, f22, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f22, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f22, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f22, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f22, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f22, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x2f2662f730861447 # load x3 with value 0x2f2662f730861447
sw x3, 0(x2) # store 0x2f2662f730861447 in memory
flw f20, 0(x2) # load 0x2f2662f730861447 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fmsub.s f18, f19, f20, f23, dyn # perform operation
fmsub.s f18, f19, f20, f23, rdn # perform operation
fmsub.s f18, f19, f20, f23, rmm # perform operation
fmsub.s f18, f19, f20, f23, rne # perform operation
fmsub.s f18, f19, f20, f23, rtz # perform operation
fmsub.s f18, f19, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xf0e08ae52eccf0e # load x3 with value 0xf0e08ae52eccf0e
sw x3, 0(x2) # store 0xf0e08ae52eccf0e in memory
flw f28, 0(x2) # load 0xf0e08ae52eccf0e from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmsub.s f26, f14, f28, f30, dyn # perform operation
fmsub.s f26, f14, f28, f30, rdn # perform operation
fmsub.s f26, f14, f28, f30, rmm # perform operation
fmsub.s f26, f14, f28, f30, rne # perform operation
fmsub.s f26, f14, f28, f30, rtz # perform operation
fmsub.s f26, f14, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f14, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f14, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xc34f0fbbd52440f4 # load x3 with value 0xc34f0fbbd52440f4
sw x3, 0(x2) # store 0xc34f0fbbd52440f4 in memory
flw f25, 0(x2) # load 0xc34f0fbbd52440f4 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmsub.s f21, f15, f25, f1, dyn # perform operation
fmsub.s f21, f15, f25, f1, rdn # perform operation
fmsub.s f21, f15, f25, f1, rmm # perform operation
fmsub.s f21, f15, f25, f1, rne # perform operation
fmsub.s f21, f15, f25, f1, rtz # perform operation
fmsub.s f21, f15, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xd51a907a05e1567d # load x3 with value 0xd51a907a05e1567d
sw x3, 0(x2) # store 0xd51a907a05e1567d in memory
flw f21, 0(x2) # load 0xd51a907a05e1567d from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmsub.s f13, f25, f21, f7, dyn # perform operation
fmsub.s f13, f25, f21, f7, rdn # perform operation
fmsub.s f13, f25, f21, f7, rmm # perform operation
fmsub.s f13, f25, f21, f7, rne # perform operation
fmsub.s f13, f25, f21, f7, rtz # perform operation
fmsub.s f13, f25, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f25, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x103bf4353d7d6e7a # load x3 with value 0x103bf4353d7d6e7a
sw x3, 0(x2) # store 0x103bf4353d7d6e7a in memory
flw f16, 0(x2) # load 0x103bf4353d7d6e7a from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
fmsub.s f23, f26, f16, f2, dyn # perform operation
fmsub.s f23, f26, f16, f2, rdn # perform operation
fmsub.s f23, f26, f16, f2, rmm # perform operation
fmsub.s f23, f26, f16, f2, rne # perform operation
fmsub.s f23, f26, f16, f2, rtz # perform operation
fmsub.s f23, f26, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f26, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f26, f16, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x2cb40758d11e9027 # load x3 with value 0x2cb40758d11e9027
sw x3, 0(x2) # store 0x2cb40758d11e9027 in memory
flw f13, 0(x2) # load 0x2cb40758d11e9027 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmsub.s f6, f9, f13, f25, dyn # perform operation
fmsub.s f6, f9, f13, f25, rdn # perform operation
fmsub.s f6, f9, f13, f25, rmm # perform operation
fmsub.s f6, f9, f13, f25, rne # perform operation
fmsub.s f6, f9, f13, f25, rtz # perform operation
fmsub.s f6, f9, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x6d181b28ee754119 # load x3 with value 0x6d181b28ee754119
sw x3, 0(x2) # store 0x6d181b28ee754119 in memory
flw f24, 0(x2) # load 0x6d181b28ee754119 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmsub.s f28, f18, f24, f6, dyn # perform operation
fmsub.s f28, f18, f24, f6, rdn # perform operation
fmsub.s f28, f18, f24, f6, rmm # perform operation
fmsub.s f28, f18, f24, f6, rne # perform operation
fmsub.s f28, f18, f24, f6, rtz # perform operation
fmsub.s f28, f18, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0xf54360b07025f90f # load x3 with value 0xf54360b07025f90f
sw x3, 0(x2) # store 0xf54360b07025f90f in memory
flw f7, 0(x2) # load 0xf54360b07025f90f from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmsub.s f13, f3, f7, f25, dyn # perform operation
fmsub.s f13, f3, f7, f25, rdn # perform operation
fmsub.s f13, f3, f7, f25, rmm # perform operation
fmsub.s f13, f3, f7, f25, rne # perform operation
fmsub.s f13, f3, f7, f25, rtz # perform operation
fmsub.s f13, f3, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f7, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xff94a52723bc80ce # load x3 with value 0xff94a52723bc80ce
sw x3, 0(x2) # store 0xff94a52723bc80ce in memory
flw f13, 0(x2) # load 0xff94a52723bc80ce from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmsub.s f23, f15, f13, f14, dyn # perform operation
fmsub.s f23, f15, f13, f14, rdn # perform operation
fmsub.s f23, f15, f13, f14, rmm # perform operation
fmsub.s f23, f15, f13, f14, rne # perform operation
fmsub.s f23, f15, f13, f14, rtz # perform operation
fmsub.s f23, f15, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f15, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f15, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x4249f0e45f9549ea # load x3 with value 0x4249f0e45f9549ea
sw x3, 0(x2) # store 0x4249f0e45f9549ea in memory
flw f3, 0(x2) # load 0x4249f0e45f9549ea from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmsub.s f29, f16, f3, f12, dyn # perform operation
fmsub.s f29, f16, f3, f12, rdn # perform operation
fmsub.s f29, f16, f3, f12, rmm # perform operation
fmsub.s f29, f16, f3, f12, rne # perform operation
fmsub.s f29, f16, f3, f12, rtz # perform operation
fmsub.s f29, f16, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x884c64e39a3328eb # load x3 with value 0x884c64e39a3328eb
sw x3, 0(x2) # store 0x884c64e39a3328eb in memory
flw f29, 0(x2) # load 0x884c64e39a3328eb from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmsub.s f22, f16, f29, f11, dyn # perform operation
fmsub.s f22, f16, f29, f11, rdn # perform operation
fmsub.s f22, f16, f29, f11, rmm # perform operation
fmsub.s f22, f16, f29, f11, rne # perform operation
fmsub.s f22, f16, f29, f11, rtz # perform operation
fmsub.s f22, f16, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xc42ed09b1f585c9a # load x3 with value 0xc42ed09b1f585c9a
sw x3, 0(x2) # store 0xc42ed09b1f585c9a in memory
flw f29, 0(x2) # load 0xc42ed09b1f585c9a from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmsub.s f31, f25, f29, f5, dyn # perform operation
fmsub.s f31, f25, f29, f5, rdn # perform operation
fmsub.s f31, f25, f29, f5, rmm # perform operation
fmsub.s f31, f25, f29, f5, rne # perform operation
fmsub.s f31, f25, f29, f5, rtz # perform operation
fmsub.s f31, f25, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f25, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0xd872742b25a38fa7 # load x3 with value 0xd872742b25a38fa7
sw x3, 0(x2) # store 0xd872742b25a38fa7 in memory
flw f14, 0(x2) # load 0xd872742b25a38fa7 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
fmsub.s f11, f20, f14, f12, dyn # perform operation
fmsub.s f11, f20, f14, f12, rdn # perform operation
fmsub.s f11, f20, f14, f12, rmm # perform operation
fmsub.s f11, f20, f14, f12, rne # perform operation
fmsub.s f11, f20, f14, f12, rtz # perform operation
fmsub.s f11, f20, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f20, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0xb911f2972f02608b # load x3 with value 0xb911f2972f02608b
sw x3, 0(x2) # store 0xb911f2972f02608b in memory
flw f26, 0(x2) # load 0xb911f2972f02608b from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmsub.s f17, f31, f26, f23, dyn # perform operation
fmsub.s f17, f31, f26, f23, rdn # perform operation
fmsub.s f17, f31, f26, f23, rmm # perform operation
fmsub.s f17, f31, f26, f23, rne # perform operation
fmsub.s f17, f31, f26, f23, rtz # perform operation
fmsub.s f17, f31, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f31, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f31, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f31, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f31, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f31, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x8cde9f431521b773 # load x3 with value 0x8cde9f431521b773
sw x3, 0(x2) # store 0x8cde9f431521b773 in memory
flw f14, 0(x2) # load 0x8cde9f431521b773 from memory into f14
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmsub.s f29, f8, f14, f18, dyn # perform operation
fmsub.s f29, f8, f14, f18, rdn # perform operation
fmsub.s f29, f8, f14, f18, rmm # perform operation
fmsub.s f29, f8, f14, f18, rne # perform operation
fmsub.s f29, f8, f14, f18, rtz # perform operation
fmsub.s f29, f8, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x7c6c856e01205b2c # load x3 with value 0x7c6c856e01205b2c
sw x3, 0(x2) # store 0x7c6c856e01205b2c in memory
flw f27, 0(x2) # load 0x7c6c856e01205b2c from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fmsub.s f17, f15, f27, f22, dyn # perform operation
fmsub.s f17, f15, f27, f22, rdn # perform operation
fmsub.s f17, f15, f27, f22, rmm # perform operation
fmsub.s f17, f15, f27, f22, rne # perform operation
fmsub.s f17, f15, f27, f22, rtz # perform operation
fmsub.s f17, f15, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x6f97dbdc4617f32a # load x3 with value 0x6f97dbdc4617f32a
sw x3, 0(x2) # store 0x6f97dbdc4617f32a in memory
flw f7, 0(x2) # load 0x6f97dbdc4617f32a from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmsub.s f1, f17, f7, f18, dyn # perform operation
fmsub.s f1, f17, f7, f18, rdn # perform operation
fmsub.s f1, f17, f7, f18, rmm # perform operation
fmsub.s f1, f17, f7, f18, rne # perform operation
fmsub.s f1, f17, f7, f18, rtz # perform operation
fmsub.s f1, f17, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f17, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f17, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x771798a37b3cdf6d # load x3 with value 0x771798a37b3cdf6d
sw x3, 0(x2) # store 0x771798a37b3cdf6d in memory
flw f28, 0(x2) # load 0x771798a37b3cdf6d from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmsub.s f2, f7, f28, f16, dyn # perform operation
fmsub.s f2, f7, f28, f16, rdn # perform operation
fmsub.s f2, f7, f28, f16, rmm # perform operation
fmsub.s f2, f7, f28, f16, rne # perform operation
fmsub.s f2, f7, f28, f16, rtz # perform operation
fmsub.s f2, f7, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xa4e4f37382a92f24 # load x3 with value 0xa4e4f37382a92f24
sw x3, 0(x2) # store 0xa4e4f37382a92f24 in memory
flw f25, 0(x2) # load 0xa4e4f37382a92f24 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmsub.s f24, f8, f25, f27, dyn # perform operation
fmsub.s f24, f8, f25, f27, rdn # perform operation
fmsub.s f24, f8, f25, f27, rmm # perform operation
fmsub.s f24, f8, f25, f27, rne # perform operation
fmsub.s f24, f8, f25, f27, rtz # perform operation
fmsub.s f24, f8, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x3244eb1dc3bf2d60 # load x3 with value 0x3244eb1dc3bf2d60
sw x3, 0(x2) # store 0x3244eb1dc3bf2d60 in memory
flw f27, 0(x2) # load 0x3244eb1dc3bf2d60 from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fmsub.s f13, f16, f27, f9, dyn # perform operation
fmsub.s f13, f16, f27, f9, rdn # perform operation
fmsub.s f13, f16, f27, f9, rmm # perform operation
fmsub.s f13, f16, f27, f9, rne # perform operation
fmsub.s f13, f16, f27, f9, rtz # perform operation
fmsub.s f13, f16, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x405b2e32e476274e # load x3 with value 0x405b2e32e476274e
sw x3, 0(x2) # store 0x405b2e32e476274e in memory
flw f28, 0(x2) # load 0x405b2e32e476274e from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmsub.s f26, f25, f28, f1, dyn # perform operation
fmsub.s f26, f25, f28, f1, rdn # perform operation
fmsub.s f26, f25, f28, f1, rmm # perform operation
fmsub.s f26, f25, f28, f1, rne # perform operation
fmsub.s f26, f25, f28, f1, rtz # perform operation
fmsub.s f26, f25, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f25, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x36584ba10758707d # load x3 with value 0x36584ba10758707d
sw x3, 0(x2) # store 0x36584ba10758707d in memory
flw f27, 0(x2) # load 0x36584ba10758707d from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmsub.s f17, f21, f27, f2, dyn # perform operation
fmsub.s f17, f21, f27, f2, rdn # perform operation
fmsub.s f17, f21, f27, f2, rmm # perform operation
fmsub.s f17, f21, f27, f2, rne # perform operation
fmsub.s f17, f21, f27, f2, rtz # perform operation
fmsub.s f17, f21, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f21, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f21, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xcd14da54f5bbe463 # load x3 with value 0xcd14da54f5bbe463
sw x3, 0(x2) # store 0xcd14da54f5bbe463 in memory
flw f7, 0(x2) # load 0xcd14da54f5bbe463 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmsub.s f29, f1, f7, f15, dyn # perform operation
fmsub.s f29, f1, f7, f15, rdn # perform operation
fmsub.s f29, f1, f7, f15, rmm # perform operation
fmsub.s f29, f1, f7, f15, rne # perform operation
fmsub.s f29, f1, f7, f15, rtz # perform operation
fmsub.s f29, f1, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0xc41e41e8de545105 # load x3 with value 0xc41e41e8de545105
sw x3, 0(x2) # store 0xc41e41e8de545105 in memory
flw f14, 0(x2) # load 0xc41e41e8de545105 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fmsub.s f7, f9, f14, f2, dyn # perform operation
fmsub.s f7, f9, f14, f2, rdn # perform operation
fmsub.s f7, f9, f14, f2, rmm # perform operation
fmsub.s f7, f9, f14, f2, rne # perform operation
fmsub.s f7, f9, f14, f2, rtz # perform operation
fmsub.s f7, f9, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x25d743bcdeb76aa7 # load x3 with value 0x25d743bcdeb76aa7
sw x3, 0(x2) # store 0x25d743bcdeb76aa7 in memory
flw f19, 0(x2) # load 0x25d743bcdeb76aa7 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fmsub.s f24, f16, f19, f7, dyn # perform operation
fmsub.s f24, f16, f19, f7, rdn # perform operation
fmsub.s f24, f16, f19, f7, rmm # perform operation
fmsub.s f24, f16, f19, f7, rne # perform operation
fmsub.s f24, f16, f19, f7, rtz # perform operation
fmsub.s f24, f16, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x49fa4b042f2da898 # load x3 with value 0x49fa4b042f2da898
sw x3, 0(x2) # store 0x49fa4b042f2da898 in memory
flw f22, 0(x2) # load 0x49fa4b042f2da898 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fmsub.s f24, f13, f22, f23, dyn # perform operation
fmsub.s f24, f13, f22, f23, rdn # perform operation
fmsub.s f24, f13, f22, f23, rmm # perform operation
fmsub.s f24, f13, f22, f23, rne # perform operation
fmsub.s f24, f13, f22, f23, rtz # perform operation
fmsub.s f24, f13, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f13, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f13, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x9a2426e2665fd15a # load x3 with value 0x9a2426e2665fd15a
sw x3, 0(x2) # store 0x9a2426e2665fd15a in memory
flw f3, 0(x2) # load 0x9a2426e2665fd15a from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmsub.s f22, f26, f3, f1, dyn # perform operation
fmsub.s f22, f26, f3, f1, rdn # perform operation
fmsub.s f22, f26, f3, f1, rmm # perform operation
fmsub.s f22, f26, f3, f1, rne # perform operation
fmsub.s f22, f26, f3, f1, rtz # perform operation
fmsub.s f22, f26, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xd717b1f19aee23dc # load x3 with value 0xd717b1f19aee23dc
sw x3, 0(x2) # store 0xd717b1f19aee23dc in memory
flw f20, 0(x2) # load 0xd717b1f19aee23dc from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fmsub.s f9, f28, f20, f18, dyn # perform operation
fmsub.s f9, f28, f20, f18, rdn # perform operation
fmsub.s f9, f28, f20, f18, rmm # perform operation
fmsub.s f9, f28, f20, f18, rne # perform operation
fmsub.s f9, f28, f20, f18, rtz # perform operation
fmsub.s f9, f28, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x9aecf3cd7e4a91fb # load x3 with value 0x9aecf3cd7e4a91fb
sw x3, 0(x2) # store 0x9aecf3cd7e4a91fb in memory
flw f12, 0(x2) # load 0x9aecf3cd7e4a91fb from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmsub.s f17, f2, f12, f20, dyn # perform operation
fmsub.s f17, f2, f12, f20, rdn # perform operation
fmsub.s f17, f2, f12, f20, rmm # perform operation
fmsub.s f17, f2, f12, f20, rne # perform operation
fmsub.s f17, f2, f12, f20, rtz # perform operation
fmsub.s f17, f2, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x77fbcbb83f8f201e # load x3 with value 0x77fbcbb83f8f201e
sw x3, 0(x2) # store 0x77fbcbb83f8f201e in memory
flw f11, 0(x2) # load 0x77fbcbb83f8f201e from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmsub.s f19, f13, f11, f26, dyn # perform operation
fmsub.s f19, f13, f11, f26, rdn # perform operation
fmsub.s f19, f13, f11, f26, rmm # perform operation
fmsub.s f19, f13, f11, f26, rne # perform operation
fmsub.s f19, f13, f11, f26, rtz # perform operation
fmsub.s f19, f13, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xc83b1ad823ade5c1 # load x3 with value 0xc83b1ad823ade5c1
sw x3, 0(x2) # store 0xc83b1ad823ade5c1 in memory
flw f19, 0(x2) # load 0xc83b1ad823ade5c1 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmsub.s f7, f17, f19, f13, dyn # perform operation
fmsub.s f7, f17, f19, f13, rdn # perform operation
fmsub.s f7, f17, f19, f13, rmm # perform operation
fmsub.s f7, f17, f19, f13, rne # perform operation
fmsub.s f7, f17, f19, f13, rtz # perform operation
fmsub.s f7, f17, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f17, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xa2fe183c4ececc97 # load x3 with value 0xa2fe183c4ececc97
sw x3, 0(x2) # store 0xa2fe183c4ececc97 in memory
flw f5, 0(x2) # load 0xa2fe183c4ececc97 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fmsub.s f7, f12, f5, f27, dyn # perform operation
fmsub.s f7, f12, f5, f27, rdn # perform operation
fmsub.s f7, f12, f5, f27, rmm # perform operation
fmsub.s f7, f12, f5, f27, rne # perform operation
fmsub.s f7, f12, f5, f27, rtz # perform operation
fmsub.s f7, f12, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xf1ddf35654b9851c # load x3 with value 0xf1ddf35654b9851c
sw x3, 0(x2) # store 0xf1ddf35654b9851c in memory
flw f2, 0(x2) # load 0xf1ddf35654b9851c from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmsub.s f24, f11, f2, f5, dyn # perform operation
fmsub.s f24, f11, f2, f5, rdn # perform operation
fmsub.s f24, f11, f2, f5, rmm # perform operation
fmsub.s f24, f11, f2, f5, rne # perform operation
fmsub.s f24, f11, f2, f5, rtz # perform operation
fmsub.s f24, f11, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xc218efee92be07dd # load x3 with value 0xc218efee92be07dd
sw x3, 0(x2) # store 0xc218efee92be07dd in memory
flw f13, 0(x2) # load 0xc218efee92be07dd from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmsub.s f1, f3, f13, f8, dyn # perform operation
fmsub.s f1, f3, f13, f8, rdn # perform operation
fmsub.s f1, f3, f13, f8, rmm # perform operation
fmsub.s f1, f3, f13, f8, rne # perform operation
fmsub.s f1, f3, f13, f8, rtz # perform operation
fmsub.s f1, f3, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f3, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f3, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x478df5fd1fb8cec5 # load x3 with value 0x478df5fd1fb8cec5
sw x3, 0(x2) # store 0x478df5fd1fb8cec5 in memory
flw f31, 0(x2) # load 0x478df5fd1fb8cec5 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmsub.s f20, f17, f31, f15, dyn # perform operation
fmsub.s f20, f17, f31, f15, rdn # perform operation
fmsub.s f20, f17, f31, f15, rmm # perform operation
fmsub.s f20, f17, f31, f15, rne # perform operation
fmsub.s f20, f17, f31, f15, rtz # perform operation
fmsub.s f20, f17, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f31, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0xc3e4738359db3739 # load x3 with value 0xc3e4738359db3739
sw x3, 0(x2) # store 0xc3e4738359db3739 in memory
flw f18, 0(x2) # load 0xc3e4738359db3739 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f15, f31, f18, f22, dyn # perform operation
fmsub.s f15, f31, f18, f22, rdn # perform operation
fmsub.s f15, f31, f18, f22, rmm # perform operation
fmsub.s f15, f31, f18, f22, rne # perform operation
fmsub.s f15, f31, f18, f22, rtz # perform operation
fmsub.s f15, f31, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x8425b0ccd6400486 # load x3 with value 0x8425b0ccd6400486
sw x3, 0(x2) # store 0x8425b0ccd6400486 in memory
flw f12, 0(x2) # load 0x8425b0ccd6400486 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmsub.s f7, f3, f12, f1, dyn # perform operation
fmsub.s f7, f3, f12, f1, rdn # perform operation
fmsub.s f7, f3, f12, f1, rmm # perform operation
fmsub.s f7, f3, f12, f1, rne # perform operation
fmsub.s f7, f3, f12, f1, rtz # perform operation
fmsub.s f7, f3, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f3, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f3, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x8add2bfdc44b2685 # load x3 with value 0x8add2bfdc44b2685
sw x3, 0(x2) # store 0x8add2bfdc44b2685 in memory
flw f2, 0(x2) # load 0x8add2bfdc44b2685 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fmsub.s f21, f6, f2, f30, dyn # perform operation
fmsub.s f21, f6, f2, f30, rdn # perform operation
fmsub.s f21, f6, f2, f30, rmm # perform operation
fmsub.s f21, f6, f2, f30, rne # perform operation
fmsub.s f21, f6, f2, f30, rtz # perform operation
fmsub.s f21, f6, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f6, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f6, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f6, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f6, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f6, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xa096a7d988856087 # load x3 with value 0xa096a7d988856087
sw x3, 0(x2) # store 0xa096a7d988856087 in memory
flw f6, 0(x2) # load 0xa096a7d988856087 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmsub.s f1, f28, f6, f17, dyn # perform operation
fmsub.s f1, f28, f6, f17, rdn # perform operation
fmsub.s f1, f28, f6, f17, rmm # perform operation
fmsub.s f1, f28, f6, f17, rne # perform operation
fmsub.s f1, f28, f6, f17, rtz # perform operation
fmsub.s f1, f28, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x15935a63c64b0efc # load x3 with value 0x15935a63c64b0efc
sw x3, 0(x2) # store 0x15935a63c64b0efc in memory
flw f26, 0(x2) # load 0x15935a63c64b0efc from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmsub.s f8, f16, f26, f30, dyn # perform operation
fmsub.s f8, f16, f26, f30, rdn # perform operation
fmsub.s f8, f16, f26, f30, rmm # perform operation
fmsub.s f8, f16, f26, f30, rne # perform operation
fmsub.s f8, f16, f26, f30, rtz # perform operation
fmsub.s f8, f16, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x75038e661422f692 # load x3 with value 0x75038e661422f692
sw x3, 0(x2) # store 0x75038e661422f692 in memory
flw f30, 0(x2) # load 0x75038e661422f692 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmsub.s f27, f20, f30, f9, dyn # perform operation
fmsub.s f27, f20, f30, f9, rdn # perform operation
fmsub.s f27, f20, f30, f9, rmm # perform operation
fmsub.s f27, f20, f30, f9, rne # perform operation
fmsub.s f27, f20, f30, f9, rtz # perform operation
fmsub.s f27, f20, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f20, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x28f04d349c7a7017 # load x3 with value 0x28f04d349c7a7017
sw x3, 0(x2) # store 0x28f04d349c7a7017 in memory
flw f28, 0(x2) # load 0x28f04d349c7a7017 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fmsub.s f29, f7, f28, f16, dyn # perform operation
fmsub.s f29, f7, f28, f16, rdn # perform operation
fmsub.s f29, f7, f28, f16, rmm # perform operation
fmsub.s f29, f7, f28, f16, rne # perform operation
fmsub.s f29, f7, f28, f16, rtz # perform operation
fmsub.s f29, f7, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f7, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f7, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0xc197b948a94d0e8c # load x3 with value 0xc197b948a94d0e8c
sw x3, 0(x2) # store 0xc197b948a94d0e8c in memory
flw f31, 0(x2) # load 0xc197b948a94d0e8c from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmsub.s f24, f9, f31, f18, dyn # perform operation
fmsub.s f24, f9, f31, f18, rdn # perform operation
fmsub.s f24, f9, f31, f18, rmm # perform operation
fmsub.s f24, f9, f31, f18, rne # perform operation
fmsub.s f24, f9, f31, f18, rtz # perform operation
fmsub.s f24, f9, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f9, f31, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x7ba15af1efa246b5 # load x3 with value 0x7ba15af1efa246b5
sw x3, 0(x2) # store 0x7ba15af1efa246b5 in memory
flw f3, 0(x2) # load 0x7ba15af1efa246b5 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmsub.s f24, f15, f3, f25, dyn # perform operation
fmsub.s f24, f15, f3, f25, rdn # perform operation
fmsub.s f24, f15, f3, f25, rmm # perform operation
fmsub.s f24, f15, f3, f25, rne # perform operation
fmsub.s f24, f15, f3, f25, rtz # perform operation
fmsub.s f24, f15, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f15, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f15, f3, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x7150721b6d1e8d0d # load x3 with value 0x7150721b6d1e8d0d
sw x3, 0(x2) # store 0x7150721b6d1e8d0d in memory
flw f16, 0(x2) # load 0x7150721b6d1e8d0d from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmsub.s f26, f10, f16, f18, dyn # perform operation
fmsub.s f26, f10, f16, f18, rdn # perform operation
fmsub.s f26, f10, f16, f18, rmm # perform operation
fmsub.s f26, f10, f16, f18, rne # perform operation
fmsub.s f26, f10, f16, f18, rtz # perform operation
fmsub.s f26, f10, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xcbecf7cfca1f586 # load x3 with value 0xcbecf7cfca1f586
sw x3, 0(x2) # store 0xcbecf7cfca1f586 in memory
flw f31, 0(x2) # load 0xcbecf7cfca1f586 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmsub.s f27, f16, f31, f19, dyn # perform operation
fmsub.s f27, f16, f31, f19, rdn # perform operation
fmsub.s f27, f16, f31, f19, rmm # perform operation
fmsub.s f27, f16, f31, f19, rne # perform operation
fmsub.s f27, f16, f31, f19, rtz # perform operation
fmsub.s f27, f16, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xeb1a15e6270e3edf # load x3 with value 0xeb1a15e6270e3edf
sw x3, 0(x2) # store 0xeb1a15e6270e3edf in memory
flw f26, 0(x2) # load 0xeb1a15e6270e3edf from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmsub.s f21, f25, f26, f19, dyn # perform operation
fmsub.s f21, f25, f26, f19, rdn # perform operation
fmsub.s f21, f25, f26, f19, rmm # perform operation
fmsub.s f21, f25, f26, f19, rne # perform operation
fmsub.s f21, f25, f26, f19, rtz # perform operation
fmsub.s f21, f25, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x34c2b3b91da31404 # load x3 with value 0x34c2b3b91da31404
sw x3, 0(x2) # store 0x34c2b3b91da31404 in memory
flw f1, 0(x2) # load 0x34c2b3b91da31404 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmsub.s f3, f30, f1, f28, dyn # perform operation
fmsub.s f3, f30, f1, f28, rdn # perform operation
fmsub.s f3, f30, f1, f28, rmm # perform operation
fmsub.s f3, f30, f1, f28, rne # perform operation
fmsub.s f3, f30, f1, f28, rtz # perform operation
fmsub.s f3, f30, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f30, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x9563334d2defe741 # load x3 with value 0x9563334d2defe741
sw x3, 0(x2) # store 0x9563334d2defe741 in memory
flw f23, 0(x2) # load 0x9563334d2defe741 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fmsub.s f11, f31, f23, f16, dyn # perform operation
fmsub.s f11, f31, f23, f16, rdn # perform operation
fmsub.s f11, f31, f23, f16, rmm # perform operation
fmsub.s f11, f31, f23, f16, rne # perform operation
fmsub.s f11, f31, f23, f16, rtz # perform operation
fmsub.s f11, f31, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x8ee264f9e05ae08 # load x3 with value 0x8ee264f9e05ae08
sw x3, 0(x2) # store 0x8ee264f9e05ae08 in memory
flw f29, 0(x2) # load 0x8ee264f9e05ae08 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmsub.s f10, f22, f29, f16, dyn # perform operation
fmsub.s f10, f22, f29, f16, rdn # perform operation
fmsub.s f10, f22, f29, f16, rmm # perform operation
fmsub.s f10, f22, f29, f16, rne # perform operation
fmsub.s f10, f22, f29, f16, rtz # perform operation
fmsub.s f10, f22, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xe9d6484d91a22f11 # load x3 with value 0xe9d6484d91a22f11
sw x3, 0(x2) # store 0xe9d6484d91a22f11 in memory
flw f9, 0(x2) # load 0xe9d6484d91a22f11 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f28, f11, f9, f20, dyn # perform operation
fmsub.s f28, f11, f9, f20, rdn # perform operation
fmsub.s f28, f11, f9, f20, rmm # perform operation
fmsub.s f28, f11, f9, f20, rne # perform operation
fmsub.s f28, f11, f9, f20, rtz # perform operation
fmsub.s f28, f11, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x5e227ac9182ce057 # load x3 with value 0x5e227ac9182ce057
sw x3, 0(x2) # store 0x5e227ac9182ce057 in memory
flw f30, 0(x2) # load 0x5e227ac9182ce057 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fmsub.s f26, f18, f30, f25, dyn # perform operation
fmsub.s f26, f18, f30, f25, rdn # perform operation
fmsub.s f26, f18, f30, f25, rmm # perform operation
fmsub.s f26, f18, f30, f25, rne # perform operation
fmsub.s f26, f18, f30, f25, rtz # perform operation
fmsub.s f26, f18, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xa91f04e99232a31b # load x3 with value 0xa91f04e99232a31b
sw x3, 0(x2) # store 0xa91f04e99232a31b in memory
flw f2, 0(x2) # load 0xa91f04e99232a31b from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmsub.s f22, f25, f2, f28, dyn # perform operation
fmsub.s f22, f25, f2, f28, rdn # perform operation
fmsub.s f22, f25, f2, f28, rmm # perform operation
fmsub.s f22, f25, f2, f28, rne # perform operation
fmsub.s f22, f25, f2, f28, rtz # perform operation
fmsub.s f22, f25, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xb25cdf5bea8ca711 # load x3 with value 0xb25cdf5bea8ca711
sw x3, 0(x2) # store 0xb25cdf5bea8ca711 in memory
flw f1, 0(x2) # load 0xb25cdf5bea8ca711 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmsub.s f11, f26, f1, f27, dyn # perform operation
fmsub.s f11, f26, f1, f27, rdn # perform operation
fmsub.s f11, f26, f1, f27, rmm # perform operation
fmsub.s f11, f26, f1, f27, rne # perform operation
fmsub.s f11, f26, f1, f27, rtz # perform operation
fmsub.s f11, f26, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f26, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f26, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x519e11848df67e85 # load x3 with value 0x519e11848df67e85
sw x3, 0(x2) # store 0x519e11848df67e85 in memory
flw f22, 0(x2) # load 0x519e11848df67e85 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmsub.s f12, f3, f22, f20, dyn # perform operation
fmsub.s f12, f3, f22, f20, rdn # perform operation
fmsub.s f12, f3, f22, f20, rmm # perform operation
fmsub.s f12, f3, f22, f20, rne # perform operation
fmsub.s f12, f3, f22, f20, rtz # perform operation
fmsub.s f12, f3, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xd599727988ed4d0c # load x3 with value 0xd599727988ed4d0c
sw x3, 0(x2) # store 0xd599727988ed4d0c in memory
flw f15, 0(x2) # load 0xd599727988ed4d0c from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fmsub.s f3, f26, f15, f9, dyn # perform operation
fmsub.s f3, f26, f15, f9, rdn # perform operation
fmsub.s f3, f26, f15, f9, rmm # perform operation
fmsub.s f3, f26, f15, f9, rne # perform operation
fmsub.s f3, f26, f15, f9, rtz # perform operation
fmsub.s f3, f26, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f26, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f26, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x18001e308d328cf9 # load x3 with value 0x18001e308d328cf9
sw x3, 0(x2) # store 0x18001e308d328cf9 in memory
flw f22, 0(x2) # load 0x18001e308d328cf9 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmsub.s f29, f11, f22, f7, dyn # perform operation
fmsub.s f29, f11, f22, f7, rdn # perform operation
fmsub.s f29, f11, f22, f7, rmm # perform operation
fmsub.s f29, f11, f22, f7, rne # perform operation
fmsub.s f29, f11, f22, f7, rtz # perform operation
fmsub.s f29, f11, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f11, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f11, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f11, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f11, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f11, f22, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xe1f991cd94ca4b22 # load x3 with value 0xe1f991cd94ca4b22
sw x3, 0(x2) # store 0xe1f991cd94ca4b22 in memory
flw f5, 0(x2) # load 0xe1f991cd94ca4b22 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmsub.s f30, f21, f5, f2, dyn # perform operation
fmsub.s f30, f21, f5, f2, rdn # perform operation
fmsub.s f30, f21, f5, f2, rmm # perform operation
fmsub.s f30, f21, f5, f2, rne # perform operation
fmsub.s f30, f21, f5, f2, rtz # perform operation
fmsub.s f30, f21, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xca6169f210fa6f9b # load x3 with value 0xca6169f210fa6f9b
sw x3, 0(x2) # store 0xca6169f210fa6f9b in memory
flw f27, 0(x2) # load 0xca6169f210fa6f9b from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmsub.s f23, f21, f27, f13, dyn # perform operation
fmsub.s f23, f21, f27, f13, rdn # perform operation
fmsub.s f23, f21, f27, f13, rmm # perform operation
fmsub.s f23, f21, f27, f13, rne # perform operation
fmsub.s f23, f21, f27, f13, rtz # perform operation
fmsub.s f23, f21, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x3d3267496948210b # load x3 with value 0x3d3267496948210b
sw x3, 0(x2) # store 0x3d3267496948210b in memory
flw f18, 0(x2) # load 0x3d3267496948210b from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f17, f7, f18, f19, dyn # perform operation
fmsub.s f17, f7, f18, f19, rdn # perform operation
fmsub.s f17, f7, f18, f19, rmm # perform operation
fmsub.s f17, f7, f18, f19, rne # perform operation
fmsub.s f17, f7, f18, f19, rtz # perform operation
fmsub.s f17, f7, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xd01747aff69fe38f # load x3 with value 0xd01747aff69fe38f
sw x3, 0(x2) # store 0xd01747aff69fe38f in memory
flw f15, 0(x2) # load 0xd01747aff69fe38f from memory into f15
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmsub.s f2, f21, f15, f7, dyn # perform operation
fmsub.s f2, f21, f15, f7, rdn # perform operation
fmsub.s f2, f21, f15, f7, rmm # perform operation
fmsub.s f2, f21, f15, f7, rne # perform operation
fmsub.s f2, f21, f15, f7, rtz # perform operation
fmsub.s f2, f21, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x20bd0e95c8f27086 # load x3 with value 0x20bd0e95c8f27086
sw x3, 0(x2) # store 0x20bd0e95c8f27086 in memory
flw f25, 0(x2) # load 0x20bd0e95c8f27086 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmsub.s f3, f12, f25, f20, dyn # perform operation
fmsub.s f3, f12, f25, f20, rdn # perform operation
fmsub.s f3, f12, f25, f20, rmm # perform operation
fmsub.s f3, f12, f25, f20, rne # perform operation
fmsub.s f3, f12, f25, f20, rtz # perform operation
fmsub.s f3, f12, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f12, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f12, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f12, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f12, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f12, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xbc22aabda2ef0d27 # load x3 with value 0xbc22aabda2ef0d27
sw x3, 0(x2) # store 0xbc22aabda2ef0d27 in memory
flw f14, 0(x2) # load 0xbc22aabda2ef0d27 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmsub.s f9, f27, f14, f3, dyn # perform operation
fmsub.s f9, f27, f14, f3, rdn # perform operation
fmsub.s f9, f27, f14, f3, rmm # perform operation
fmsub.s f9, f27, f14, f3, rne # perform operation
fmsub.s f9, f27, f14, f3, rtz # perform operation
fmsub.s f9, f27, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xcd2c767cb63211ec # load x3 with value 0xcd2c767cb63211ec
sw x3, 0(x2) # store 0xcd2c767cb63211ec in memory
flw f31, 0(x2) # load 0xcd2c767cb63211ec from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmsub.s f20, f13, f31, f14, dyn # perform operation
fmsub.s f20, f13, f31, f14, rdn # perform operation
fmsub.s f20, f13, f31, f14, rmm # perform operation
fmsub.s f20, f13, f31, f14, rne # perform operation
fmsub.s f20, f13, f31, f14, rtz # perform operation
fmsub.s f20, f13, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f13, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f13, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xca9fa977495f8a4f # load x3 with value 0xca9fa977495f8a4f
sw x3, 0(x2) # store 0xca9fa977495f8a4f in memory
flw f7, 0(x2) # load 0xca9fa977495f8a4f from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f28, f20, f7, f24, dyn # perform operation
fmsub.s f28, f20, f7, f24, rdn # perform operation
fmsub.s f28, f20, f7, f24, rmm # perform operation
fmsub.s f28, f20, f7, f24, rne # perform operation
fmsub.s f28, f20, f7, f24, rtz # perform operation
fmsub.s f28, f20, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x8c0bfa5d54ba423c # load x3 with value 0x8c0bfa5d54ba423c
sw x3, 0(x2) # store 0x8c0bfa5d54ba423c in memory
flw f31, 0(x2) # load 0x8c0bfa5d54ba423c from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fmsub.s f17, f16, f31, f19, dyn # perform operation
fmsub.s f17, f16, f31, f19, rdn # perform operation
fmsub.s f17, f16, f31, f19, rmm # perform operation
fmsub.s f17, f16, f31, f19, rne # perform operation
fmsub.s f17, f16, f31, f19, rtz # perform operation
fmsub.s f17, f16, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x34bb7104f1fa3972 # load x3 with value 0x34bb7104f1fa3972
sw x3, 0(x2) # store 0x34bb7104f1fa3972 in memory
flw f8, 0(x2) # load 0x34bb7104f1fa3972 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fmsub.s f23, f17, f8, f19, dyn # perform operation
fmsub.s f23, f17, f8, f19, rdn # perform operation
fmsub.s f23, f17, f8, f19, rmm # perform operation
fmsub.s f23, f17, f8, f19, rne # perform operation
fmsub.s f23, f17, f8, f19, rtz # perform operation
fmsub.s f23, f17, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f17, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f17, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f17, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f17, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f17, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0xe7680d5dda812395 # load x3 with value 0xe7680d5dda812395
sw x3, 0(x2) # store 0xe7680d5dda812395 in memory
flw f19, 0(x2) # load 0xe7680d5dda812395 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmsub.s f6, f22, f19, f18, dyn # perform operation
fmsub.s f6, f22, f19, f18, rdn # perform operation
fmsub.s f6, f22, f19, f18, rmm # perform operation
fmsub.s f6, f22, f19, f18, rne # perform operation
fmsub.s f6, f22, f19, f18, rtz # perform operation
fmsub.s f6, f22, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f22, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f22, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x64985466ccd2c7d9 # load x3 with value 0x64985466ccd2c7d9
sw x3, 0(x2) # store 0x64985466ccd2c7d9 in memory
flw f25, 0(x2) # load 0x64985466ccd2c7d9 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
fmsub.s f27, f11, f25, f12, dyn # perform operation
fmsub.s f27, f11, f25, f12, rdn # perform operation
fmsub.s f27, f11, f25, f12, rmm # perform operation
fmsub.s f27, f11, f25, f12, rne # perform operation
fmsub.s f27, f11, f25, f12, rtz # perform operation
fmsub.s f27, f11, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xf24b1cb5bae39925 # load x3 with value 0xf24b1cb5bae39925
sw x3, 0(x2) # store 0xf24b1cb5bae39925 in memory
flw f2, 0(x2) # load 0xf24b1cb5bae39925 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f30, f18, f2, f5, dyn # perform operation
fmsub.s f30, f18, f2, f5, rdn # perform operation
fmsub.s f30, f18, f2, f5, rmm # perform operation
fmsub.s f30, f18, f2, f5, rne # perform operation
fmsub.s f30, f18, f2, f5, rtz # perform operation
fmsub.s f30, f18, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f18, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f18, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x1ccb57949badbada # load x3 with value 0x1ccb57949badbada
sw x3, 0(x2) # store 0x1ccb57949badbada in memory
flw f31, 0(x2) # load 0x1ccb57949badbada from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmsub.s f14, f29, f31, f23, dyn # perform operation
fmsub.s f14, f29, f31, f23, rdn # perform operation
fmsub.s f14, f29, f31, f23, rmm # perform operation
fmsub.s f14, f29, f31, f23, rne # perform operation
fmsub.s f14, f29, f31, f23, rtz # perform operation
fmsub.s f14, f29, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xc3505334ad1491a8 # load x3 with value 0xc3505334ad1491a8
sw x3, 0(x2) # store 0xc3505334ad1491a8 in memory
flw f24, 0(x2) # load 0xc3505334ad1491a8 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmsub.s f13, f17, f24, f30, dyn # perform operation
fmsub.s f13, f17, f24, f30, rdn # perform operation
fmsub.s f13, f17, f24, f30, rmm # perform operation
fmsub.s f13, f17, f24, f30, rne # perform operation
fmsub.s f13, f17, f24, f30, rtz # perform operation
fmsub.s f13, f17, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0xfd716d01e1357024 # load x3 with value 0xfd716d01e1357024
sw x3, 0(x2) # store 0xfd716d01e1357024 in memory
flw f23, 0(x2) # load 0xfd716d01e1357024 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmsub.s f5, f27, f23, f15, dyn # perform operation
fmsub.s f5, f27, f23, f15, rdn # perform operation
fmsub.s f5, f27, f23, f15, rmm # perform operation
fmsub.s f5, f27, f23, f15, rne # perform operation
fmsub.s f5, f27, f23, f15, rtz # perform operation
fmsub.s f5, f27, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f27, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xb0293cc0afb15b8 # load x3 with value 0xb0293cc0afb15b8
sw x3, 0(x2) # store 0xb0293cc0afb15b8 in memory
flw f14, 0(x2) # load 0xb0293cc0afb15b8 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmsub.s f17, f1, f14, f28, dyn # perform operation
fmsub.s f17, f1, f14, f28, rdn # perform operation
fmsub.s f17, f1, f14, f28, rmm # perform operation
fmsub.s f17, f1, f14, f28, rne # perform operation
fmsub.s f17, f1, f14, f28, rtz # perform operation
fmsub.s f17, f1, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x6c0f5021014859a # load x3 with value 0x6c0f5021014859a
sw x3, 0(x2) # store 0x6c0f5021014859a in memory
flw f11, 0(x2) # load 0x6c0f5021014859a from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmsub.s f6, f24, f11, f30, dyn # perform operation
fmsub.s f6, f24, f11, f30, rdn # perform operation
fmsub.s f6, f24, f11, f30, rmm # perform operation
fmsub.s f6, f24, f11, f30, rne # perform operation
fmsub.s f6, f24, f11, f30, rtz # perform operation
fmsub.s f6, f24, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0xe7d376a2c49b4522 # load x3 with value 0xe7d376a2c49b4522
sw x3, 0(x2) # store 0xe7d376a2c49b4522 in memory
flw f31, 0(x2) # load 0xe7d376a2c49b4522 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmsub.s f28, f18, f31, f5, dyn # perform operation
fmsub.s f28, f18, f31, f5, rdn # perform operation
fmsub.s f28, f18, f31, f5, rmm # perform operation
fmsub.s f28, f18, f31, f5, rne # perform operation
fmsub.s f28, f18, f31, f5, rtz # perform operation
fmsub.s f28, f18, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f18, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f18, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f18, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f18, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f18, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x7d2cf37aa63d26fc # load x3 with value 0x7d2cf37aa63d26fc
sw x3, 0(x2) # store 0x7d2cf37aa63d26fc in memory
flw f30, 0(x2) # load 0x7d2cf37aa63d26fc from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmsub.s f2, f27, f30, f31, dyn # perform operation
fmsub.s f2, f27, f30, f31, rdn # perform operation
fmsub.s f2, f27, f30, f31, rmm # perform operation
fmsub.s f2, f27, f30, f31, rne # perform operation
fmsub.s f2, f27, f30, f31, rtz # perform operation
fmsub.s f2, f27, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f27, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f27, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f27, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f27, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f27, f30, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x4905a6eeed929358 # load x3 with value 0x4905a6eeed929358
sw x3, 0(x2) # store 0x4905a6eeed929358 in memory
flw f15, 0(x2) # load 0x4905a6eeed929358 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmsub.s f25, f6, f15, f11, dyn # perform operation
fmsub.s f25, f6, f15, f11, rdn # perform operation
fmsub.s f25, f6, f15, f11, rmm # perform operation
fmsub.s f25, f6, f15, f11, rne # perform operation
fmsub.s f25, f6, f15, f11, rtz # perform operation
fmsub.s f25, f6, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xef45533dddf2e7e9 # load x3 with value 0xef45533dddf2e7e9
sw x3, 0(x2) # store 0xef45533dddf2e7e9 in memory
flw f23, 0(x2) # load 0xef45533dddf2e7e9 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fmsub.s f18, f28, f23, f19, dyn # perform operation
fmsub.s f18, f28, f23, f19, rdn # perform operation
fmsub.s f18, f28, f23, f19, rmm # perform operation
fmsub.s f18, f28, f23, f19, rne # perform operation
fmsub.s f18, f28, f23, f19, rtz # perform operation
fmsub.s f18, f28, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x292168b729d8c76e # load x3 with value 0x292168b729d8c76e
sw x3, 0(x2) # store 0x292168b729d8c76e in memory
flw f23, 0(x2) # load 0x292168b729d8c76e from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmsub.s f12, f20, f23, f22, dyn # perform operation
fmsub.s f12, f20, f23, f22, rdn # perform operation
fmsub.s f12, f20, f23, f22, rmm # perform operation
fmsub.s f12, f20, f23, f22, rne # perform operation
fmsub.s f12, f20, f23, f22, rtz # perform operation
fmsub.s f12, f20, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x10e6d8cf1c4cb469 # load x3 with value 0x10e6d8cf1c4cb469
sw x3, 0(x2) # store 0x10e6d8cf1c4cb469 in memory
flw f10, 0(x2) # load 0x10e6d8cf1c4cb469 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fmsub.s f11, f6, f10, f7, dyn # perform operation
fmsub.s f11, f6, f10, f7, rdn # perform operation
fmsub.s f11, f6, f10, f7, rmm # perform operation
fmsub.s f11, f6, f10, f7, rne # perform operation
fmsub.s f11, f6, f10, f7, rtz # perform operation
fmsub.s f11, f6, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f6, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f6, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x683ccd07caf3bff8 # load x3 with value 0x683ccd07caf3bff8
sw x3, 0(x2) # store 0x683ccd07caf3bff8 in memory
flw f25, 0(x2) # load 0x683ccd07caf3bff8 from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmsub.s f1, f5, f25, f27, dyn # perform operation
fmsub.s f1, f5, f25, f27, rdn # perform operation
fmsub.s f1, f5, f25, f27, rmm # perform operation
fmsub.s f1, f5, f25, f27, rne # perform operation
fmsub.s f1, f5, f25, f27, rtz # perform operation
fmsub.s f1, f5, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x4bdb1df6973d64f4 # load x3 with value 0x4bdb1df6973d64f4
sw x3, 0(x2) # store 0x4bdb1df6973d64f4 in memory
flw f9, 0(x2) # load 0x4bdb1df6973d64f4 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmsub.s f23, f13, f9, f20, dyn # perform operation
fmsub.s f23, f13, f9, f20, rdn # perform operation
fmsub.s f23, f13, f9, f20, rmm # perform operation
fmsub.s f23, f13, f9, f20, rne # perform operation
fmsub.s f23, f13, f9, f20, rtz # perform operation
fmsub.s f23, f13, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xe7d34d91683c4a8e # load x3 with value 0xe7d34d91683c4a8e
sw x3, 0(x2) # store 0xe7d34d91683c4a8e in memory
flw f11, 0(x2) # load 0xe7d34d91683c4a8e from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fmsub.s f17, f29, f11, f23, dyn # perform operation
fmsub.s f17, f29, f11, f23, rdn # perform operation
fmsub.s f17, f29, f11, f23, rmm # perform operation
fmsub.s f17, f29, f11, f23, rne # perform operation
fmsub.s f17, f29, f11, f23, rtz # perform operation
fmsub.s f17, f29, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f29, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f29, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xbc76278f2d43a385 # load x3 with value 0xbc76278f2d43a385
sw x3, 0(x2) # store 0xbc76278f2d43a385 in memory
flw f29, 0(x2) # load 0xbc76278f2d43a385 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmsub.s f14, f11, f29, f22, dyn # perform operation
fmsub.s f14, f11, f29, f22, rdn # perform operation
fmsub.s f14, f11, f29, f22, rmm # perform operation
fmsub.s f14, f11, f29, f22, rne # perform operation
fmsub.s f14, f11, f29, f22, rtz # perform operation
fmsub.s f14, f11, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f11, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f11, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xc1f59e27ac7d78a6 # load x3 with value 0xc1f59e27ac7d78a6
sw x3, 0(x2) # store 0xc1f59e27ac7d78a6 in memory
flw f21, 0(x2) # load 0xc1f59e27ac7d78a6 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fmsub.s f25, f12, f21, f28, dyn # perform operation
fmsub.s f25, f12, f21, f28, rdn # perform operation
fmsub.s f25, f12, f21, f28, rmm # perform operation
fmsub.s f25, f12, f21, f28, rne # perform operation
fmsub.s f25, f12, f21, f28, rtz # perform operation
fmsub.s f25, f12, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x652296d64d52f08c # load x3 with value 0x652296d64d52f08c
sw x3, 0(x2) # store 0x652296d64d52f08c in memory
flw f14, 0(x2) # load 0x652296d64d52f08c from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmsub.s f12, f1, f14, f2, dyn # perform operation
fmsub.s f12, f1, f14, f2, rdn # perform operation
fmsub.s f12, f1, f14, f2, rmm # perform operation
fmsub.s f12, f1, f14, f2, rne # perform operation
fmsub.s f12, f1, f14, f2, rtz # perform operation
fmsub.s f12, f1, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x8e5593dd6c0a02b3 # load x3 with value 0x8e5593dd6c0a02b3
sw x3, 0(x2) # store 0x8e5593dd6c0a02b3 in memory
flw f9, 0(x2) # load 0x8e5593dd6c0a02b3 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fmsub.s f24, f23, f9, f2, dyn # perform operation
fmsub.s f24, f23, f9, f2, rdn # perform operation
fmsub.s f24, f23, f9, f2, rmm # perform operation
fmsub.s f24, f23, f9, f2, rne # perform operation
fmsub.s f24, f23, f9, f2, rtz # perform operation
fmsub.s f24, f23, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x5075e662f8624d67 # load x3 with value 0x5075e662f8624d67
sw x3, 0(x2) # store 0x5075e662f8624d67 in memory
flw f19, 0(x2) # load 0x5075e662f8624d67 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fmsub.s f30, f20, f19, f27, dyn # perform operation
fmsub.s f30, f20, f19, f27, rdn # perform operation
fmsub.s f30, f20, f19, f27, rmm # perform operation
fmsub.s f30, f20, f19, f27, rne # perform operation
fmsub.s f30, f20, f19, f27, rtz # perform operation
fmsub.s f30, f20, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f20, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xeef658822699cf5b # load x3 with value 0xeef658822699cf5b
sw x3, 0(x2) # store 0xeef658822699cf5b in memory
flw f29, 0(x2) # load 0xeef658822699cf5b from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fmsub.s f13, f30, f29, f1, dyn # perform operation
fmsub.s f13, f30, f29, f1, rdn # perform operation
fmsub.s f13, f30, f29, f1, rmm # perform operation
fmsub.s f13, f30, f29, f1, rne # perform operation
fmsub.s f13, f30, f29, f1, rtz # perform operation
fmsub.s f13, f30, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x98d105fdb12ee55a # load x3 with value 0x98d105fdb12ee55a
sw x3, 0(x2) # store 0x98d105fdb12ee55a in memory
flw f10, 0(x2) # load 0x98d105fdb12ee55a from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fmsub.s f22, f20, f10, f8, dyn # perform operation
fmsub.s f22, f20, f10, f8, rdn # perform operation
fmsub.s f22, f20, f10, f8, rmm # perform operation
fmsub.s f22, f20, f10, f8, rne # perform operation
fmsub.s f22, f20, f10, f8, rtz # perform operation
fmsub.s f22, f20, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f20, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f20, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f20, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f20, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f20, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x74eac62d2f4757af # load x3 with value 0x74eac62d2f4757af
sw x3, 0(x2) # store 0x74eac62d2f4757af in memory
flw f3, 0(x2) # load 0x74eac62d2f4757af from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmsub.s f23, f12, f3, f30, dyn # perform operation
fmsub.s f23, f12, f3, f30, rdn # perform operation
fmsub.s f23, f12, f3, f30, rmm # perform operation
fmsub.s f23, f12, f3, f30, rne # perform operation
fmsub.s f23, f12, f3, f30, rtz # perform operation
fmsub.s f23, f12, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f12, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f12, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f12, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f12, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f12, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x6188392441b4490e # load x3 with value 0x6188392441b4490e
sw x3, 0(x2) # store 0x6188392441b4490e in memory
flw f19, 0(x2) # load 0x6188392441b4490e from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fmsub.s f1, f24, f19, f17, dyn # perform operation
fmsub.s f1, f24, f19, f17, rdn # perform operation
fmsub.s f1, f24, f19, f17, rmm # perform operation
fmsub.s f1, f24, f19, f17, rne # perform operation
fmsub.s f1, f24, f19, f17, rtz # perform operation
fmsub.s f1, f24, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f24, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xce63e8688e2a62a5 # load x3 with value 0xce63e8688e2a62a5
sw x3, 0(x2) # store 0xce63e8688e2a62a5 in memory
flw f10, 0(x2) # load 0xce63e8688e2a62a5 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fmsub.s f24, f7, f10, f14, dyn # perform operation
fmsub.s f24, f7, f10, f14, rdn # perform operation
fmsub.s f24, f7, f10, f14, rmm # perform operation
fmsub.s f24, f7, f10, f14, rne # perform operation
fmsub.s f24, f7, f10, f14, rtz # perform operation
fmsub.s f24, f7, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f7, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f7, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x3f554f4086883daf # load x3 with value 0x3f554f4086883daf
sw x3, 0(x2) # store 0x3f554f4086883daf in memory
flw f8, 0(x2) # load 0x3f554f4086883daf from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f11, f10, f8, f31, dyn # perform operation
fmsub.s f11, f10, f8, f31, rdn # perform operation
fmsub.s f11, f10, f8, f31, rmm # perform operation
fmsub.s f11, f10, f8, f31, rne # perform operation
fmsub.s f11, f10, f8, f31, rtz # perform operation
fmsub.s f11, f10, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f10, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x97f5784f1c2fb5c8 # load x3 with value 0x97f5784f1c2fb5c8
sw x3, 0(x2) # store 0x97f5784f1c2fb5c8 in memory
flw f27, 0(x2) # load 0x97f5784f1c2fb5c8 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmsub.s f23, f3, f27, f22, dyn # perform operation
fmsub.s f23, f3, f27, f22, rdn # perform operation
fmsub.s f23, f3, f27, f22, rmm # perform operation
fmsub.s f23, f3, f27, f22, rne # perform operation
fmsub.s f23, f3, f27, f22, rtz # perform operation
fmsub.s f23, f3, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x3bfef529a97063c9 # load x3 with value 0x3bfef529a97063c9
sw x3, 0(x2) # store 0x3bfef529a97063c9 in memory
flw f19, 0(x2) # load 0x3bfef529a97063c9 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fmsub.s f17, f23, f19, f2, dyn # perform operation
fmsub.s f17, f23, f19, f2, rdn # perform operation
fmsub.s f17, f23, f19, f2, rmm # perform operation
fmsub.s f17, f23, f19, f2, rne # perform operation
fmsub.s f17, f23, f19, f2, rtz # perform operation
fmsub.s f17, f23, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f23, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f23, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x44451270f0f14e85 # load x3 with value 0x44451270f0f14e85
sw x3, 0(x2) # store 0x44451270f0f14e85 in memory
flw f16, 0(x2) # load 0x44451270f0f14e85 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmsub.s f9, f11, f16, f17, dyn # perform operation
fmsub.s f9, f11, f16, f17, rdn # perform operation
fmsub.s f9, f11, f16, f17, rmm # perform operation
fmsub.s f9, f11, f16, f17, rne # perform operation
fmsub.s f9, f11, f16, f17, rtz # perform operation
fmsub.s f9, f11, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xa0dfa43588ea592a # load x3 with value 0xa0dfa43588ea592a
sw x3, 0(x2) # store 0xa0dfa43588ea592a in memory
flw f20, 0(x2) # load 0xa0dfa43588ea592a from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmsub.s f15, f11, f20, f17, dyn # perform operation
fmsub.s f15, f11, f20, f17, rdn # perform operation
fmsub.s f15, f11, f20, f17, rmm # perform operation
fmsub.s f15, f11, f20, f17, rne # perform operation
fmsub.s f15, f11, f20, f17, rtz # perform operation
fmsub.s f15, f11, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f11, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f11, f20, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x76b5bf6189065101 # load x3 with value 0x76b5bf6189065101
sw x3, 0(x2) # store 0x76b5bf6189065101 in memory
flw f12, 0(x2) # load 0x76b5bf6189065101 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmsub.s f8, f23, f12, f14, dyn # perform operation
fmsub.s f8, f23, f12, f14, rdn # perform operation
fmsub.s f8, f23, f12, f14, rmm # perform operation
fmsub.s f8, f23, f12, f14, rne # perform operation
fmsub.s f8, f23, f12, f14, rtz # perform operation
fmsub.s f8, f23, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xe0bd6f1930bca893 # load x3 with value 0xe0bd6f1930bca893
sw x3, 0(x2) # store 0xe0bd6f1930bca893 in memory
flw f14, 0(x2) # load 0xe0bd6f1930bca893 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmsub.s f15, f2, f14, f1, dyn # perform operation
fmsub.s f15, f2, f14, f1, rdn # perform operation
fmsub.s f15, f2, f14, f1, rmm # perform operation
fmsub.s f15, f2, f14, f1, rne # perform operation
fmsub.s f15, f2, f14, f1, rtz # perform operation
fmsub.s f15, f2, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x477bdb021111c5fb # load x3 with value 0x477bdb021111c5fb
sw x3, 0(x2) # store 0x477bdb021111c5fb in memory
flw f10, 0(x2) # load 0x477bdb021111c5fb from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmsub.s f5, f21, f10, f3, dyn # perform operation
fmsub.s f5, f21, f10, f3, rdn # perform operation
fmsub.s f5, f21, f10, f3, rmm # perform operation
fmsub.s f5, f21, f10, f3, rne # perform operation
fmsub.s f5, f21, f10, f3, rtz # perform operation
fmsub.s f5, f21, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x755010be1a8552d4 # load x3 with value 0x755010be1a8552d4
sw x3, 0(x2) # store 0x755010be1a8552d4 in memory
flw f3, 0(x2) # load 0x755010be1a8552d4 from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fmsub.s f16, f12, f3, f18, dyn # perform operation
fmsub.s f16, f12, f3, f18, rdn # perform operation
fmsub.s f16, f12, f3, f18, rmm # perform operation
fmsub.s f16, f12, f3, f18, rne # perform operation
fmsub.s f16, f12, f3, f18, rtz # perform operation
fmsub.s f16, f12, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xe0f1fb43b9d37d # load x3 with value 0xe0f1fb43b9d37d
sw x3, 0(x2) # store 0xe0f1fb43b9d37d in memory
flw f15, 0(x2) # load 0xe0f1fb43b9d37d from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmsub.s f17, f22, f15, f26, dyn # perform operation
fmsub.s f17, f22, f15, f26, rdn # perform operation
fmsub.s f17, f22, f15, f26, rmm # perform operation
fmsub.s f17, f22, f15, f26, rne # perform operation
fmsub.s f17, f22, f15, f26, rtz # perform operation
fmsub.s f17, f22, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x78140f035c40b74 # load x3 with value 0x78140f035c40b74
sw x3, 0(x2) # store 0x78140f035c40b74 in memory
flw f9, 0(x2) # load 0x78140f035c40b74 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmsub.s f14, f26, f9, f31, dyn # perform operation
fmsub.s f14, f26, f9, f31, rdn # perform operation
fmsub.s f14, f26, f9, f31, rmm # perform operation
fmsub.s f14, f26, f9, f31, rne # perform operation
fmsub.s f14, f26, f9, f31, rtz # perform operation
fmsub.s f14, f26, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f26, f9, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x63fa60a90afe6c0d # load x3 with value 0x63fa60a90afe6c0d
sw x3, 0(x2) # store 0x63fa60a90afe6c0d in memory
flw f15, 0(x2) # load 0x63fa60a90afe6c0d from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmsub.s f7, f1, f15, f21, dyn # perform operation
fmsub.s f7, f1, f15, f21, rdn # perform operation
fmsub.s f7, f1, f15, f21, rmm # perform operation
fmsub.s f7, f1, f15, f21, rne # perform operation
fmsub.s f7, f1, f15, f21, rtz # perform operation
fmsub.s f7, f1, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0xd5c60b463a1153e7 # load x3 with value 0xd5c60b463a1153e7
sw x3, 0(x2) # store 0xd5c60b463a1153e7 in memory
flw f31, 0(x2) # load 0xd5c60b463a1153e7 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmsub.s f18, f26, f31, f15, dyn # perform operation
fmsub.s f18, f26, f31, f15, rdn # perform operation
fmsub.s f18, f26, f31, f15, rmm # perform operation
fmsub.s f18, f26, f31, f15, rne # perform operation
fmsub.s f18, f26, f31, f15, rtz # perform operation
fmsub.s f18, f26, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f31, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x59e5a78a8dcefe80 # load x3 with value 0x59e5a78a8dcefe80
sw x3, 0(x2) # store 0x59e5a78a8dcefe80 in memory
flw f13, 0(x2) # load 0x59e5a78a8dcefe80 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmsub.s f27, f3, f13, f6, dyn # perform operation
fmsub.s f27, f3, f13, f6, rdn # perform operation
fmsub.s f27, f3, f13, f6, rmm # perform operation
fmsub.s f27, f3, f13, f6, rne # perform operation
fmsub.s f27, f3, f13, f6, rtz # perform operation
fmsub.s f27, f3, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x3870997cb90214d4 # load x3 with value 0x3870997cb90214d4
sw x3, 0(x2) # store 0x3870997cb90214d4 in memory
flw f24, 0(x2) # load 0x3870997cb90214d4 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmsub.s f1, f6, f24, f14, dyn # perform operation
fmsub.s f1, f6, f24, f14, rdn # perform operation
fmsub.s f1, f6, f24, f14, rmm # perform operation
fmsub.s f1, f6, f24, f14, rne # perform operation
fmsub.s f1, f6, f24, f14, rtz # perform operation
fmsub.s f1, f6, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f6, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x66692a669d419f55 # load x3 with value 0x66692a669d419f55
sw x3, 0(x2) # store 0x66692a669d419f55 in memory
flw f27, 0(x2) # load 0x66692a669d419f55 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fmsub.s f31, f8, f27, f15, dyn # perform operation
fmsub.s f31, f8, f27, f15, rdn # perform operation
fmsub.s f31, f8, f27, f15, rmm # perform operation
fmsub.s f31, f8, f27, f15, rne # perform operation
fmsub.s f31, f8, f27, f15, rtz # perform operation
fmsub.s f31, f8, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f27, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x16df1d4ff6bb6e75 # load x3 with value 0x16df1d4ff6bb6e75
sw x3, 0(x2) # store 0x16df1d4ff6bb6e75 in memory
flw f3, 0(x2) # load 0x16df1d4ff6bb6e75 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmsub.s f27, f9, f3, f26, dyn # perform operation
fmsub.s f27, f9, f3, f26, rdn # perform operation
fmsub.s f27, f9, f3, f26, rmm # perform operation
fmsub.s f27, f9, f3, f26, rne # perform operation
fmsub.s f27, f9, f3, f26, rtz # perform operation
fmsub.s f27, f9, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f9, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x2500e37623339da4 # load x3 with value 0x2500e37623339da4
sw x3, 0(x2) # store 0x2500e37623339da4 in memory
flw f28, 0(x2) # load 0x2500e37623339da4 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmsub.s f12, f25, f28, f27, dyn # perform operation
fmsub.s f12, f25, f28, f27, rdn # perform operation
fmsub.s f12, f25, f28, f27, rmm # perform operation
fmsub.s f12, f25, f28, f27, rne # perform operation
fmsub.s f12, f25, f28, f27, rtz # perform operation
fmsub.s f12, f25, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f25, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f25, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f25, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f25, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f25, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x988577807a25c51a # load x3 with value 0x988577807a25c51a
sw x3, 0(x2) # store 0x988577807a25c51a in memory
flw f2, 0(x2) # load 0x988577807a25c51a from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmsub.s f14, f23, f2, f27, dyn # perform operation
fmsub.s f14, f23, f2, f27, rdn # perform operation
fmsub.s f14, f23, f2, f27, rmm # perform operation
fmsub.s f14, f23, f2, f27, rne # perform operation
fmsub.s f14, f23, f2, f27, rtz # perform operation
fmsub.s f14, f23, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f23, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xc4cf77046658fb50 # load x3 with value 0xc4cf77046658fb50
sw x3, 0(x2) # store 0xc4cf77046658fb50 in memory
flw f20, 0(x2) # load 0xc4cf77046658fb50 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmsub.s f26, f29, f20, f16, dyn # perform operation
fmsub.s f26, f29, f20, f16, rdn # perform operation
fmsub.s f26, f29, f20, f16, rmm # perform operation
fmsub.s f26, f29, f20, f16, rne # perform operation
fmsub.s f26, f29, f20, f16, rtz # perform operation
fmsub.s f26, f29, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f29, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f29, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f29, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f29, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f29, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0xb7bd7336023690ce # load x3 with value 0xb7bd7336023690ce
sw x3, 0(x2) # store 0xb7bd7336023690ce in memory
flw f18, 0(x2) # load 0xb7bd7336023690ce from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fmsub.s f27, f3, f18, f26, dyn # perform operation
fmsub.s f27, f3, f18, f26, rdn # perform operation
fmsub.s f27, f3, f18, f26, rmm # perform operation
fmsub.s f27, f3, f18, f26, rne # perform operation
fmsub.s f27, f3, f18, f26, rtz # perform operation
fmsub.s f27, f3, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f3, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x1f0c0743b731d123 # load x3 with value 0x1f0c0743b731d123
sw x3, 0(x2) # store 0x1f0c0743b731d123 in memory
flw f5, 0(x2) # load 0x1f0c0743b731d123 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmsub.s f10, f11, f5, f14, dyn # perform operation
fmsub.s f10, f11, f5, f14, rdn # perform operation
fmsub.s f10, f11, f5, f14, rmm # perform operation
fmsub.s f10, f11, f5, f14, rne # perform operation
fmsub.s f10, f11, f5, f14, rtz # perform operation
fmsub.s f10, f11, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f5, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xea1b612a7ee239a1 # load x3 with value 0xea1b612a7ee239a1
sw x3, 0(x2) # store 0xea1b612a7ee239a1 in memory
flw f11, 0(x2) # load 0xea1b612a7ee239a1 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f16, f29, f11, f21, dyn # perform operation
fmsub.s f16, f29, f11, f21, rdn # perform operation
fmsub.s f16, f29, f11, f21, rmm # perform operation
fmsub.s f16, f29, f11, f21, rne # perform operation
fmsub.s f16, f29, f11, f21, rtz # perform operation
fmsub.s f16, f29, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xb3782408ef17004c # load x3 with value 0xb3782408ef17004c
sw x3, 0(x2) # store 0xb3782408ef17004c in memory
flw f7, 0(x2) # load 0xb3782408ef17004c from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmsub.s f24, f17, f7, f31, dyn # perform operation
fmsub.s f24, f17, f7, f31, rdn # perform operation
fmsub.s f24, f17, f7, f31, rmm # perform operation
fmsub.s f24, f17, f7, f31, rne # perform operation
fmsub.s f24, f17, f7, f31, rtz # perform operation
fmsub.s f24, f17, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f7, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x691b2fa1d892de05 # load x3 with value 0x691b2fa1d892de05
sw x3, 0(x2) # store 0x691b2fa1d892de05 in memory
flw f22, 0(x2) # load 0x691b2fa1d892de05 from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmsub.s f26, f21, f22, f28, dyn # perform operation
fmsub.s f26, f21, f22, f28, rdn # perform operation
fmsub.s f26, f21, f22, f28, rmm # perform operation
fmsub.s f26, f21, f22, f28, rne # perform operation
fmsub.s f26, f21, f22, f28, rtz # perform operation
fmsub.s f26, f21, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x285f940bf5cd2d11 # load x3 with value 0x285f940bf5cd2d11
sw x3, 0(x2) # store 0x285f940bf5cd2d11 in memory
flw f22, 0(x2) # load 0x285f940bf5cd2d11 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmsub.s f11, f19, f22, f30, dyn # perform operation
fmsub.s f11, f19, f22, f30, rdn # perform operation
fmsub.s f11, f19, f22, f30, rmm # perform operation
fmsub.s f11, f19, f22, f30, rne # perform operation
fmsub.s f11, f19, f22, f30, rtz # perform operation
fmsub.s f11, f19, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xae82385c4a2b647c # load x3 with value 0xae82385c4a2b647c
sw x3, 0(x2) # store 0xae82385c4a2b647c in memory
flw f12, 0(x2) # load 0xae82385c4a2b647c from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmsub.s f24, f31, f12, f11, dyn # perform operation
fmsub.s f24, f31, f12, f11, rdn # perform operation
fmsub.s f24, f31, f12, f11, rmm # perform operation
fmsub.s f24, f31, f12, f11, rne # perform operation
fmsub.s f24, f31, f12, f11, rtz # perform operation
fmsub.s f24, f31, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f31, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xfd4f76c76e81658f # load x3 with value 0xfd4f76c76e81658f
sw x3, 0(x2) # store 0xfd4f76c76e81658f in memory
flw f13, 0(x2) # load 0xfd4f76c76e81658f from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
fmsub.s f16, f23, f13, f29, dyn # perform operation
fmsub.s f16, f23, f13, f29, rdn # perform operation
fmsub.s f16, f23, f13, f29, rmm # perform operation
fmsub.s f16, f23, f13, f29, rne # perform operation
fmsub.s f16, f23, f13, f29, rtz # perform operation
fmsub.s f16, f23, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f23, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f23, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f23, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f23, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f23, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x1977c0dab3be96e0 # load x3 with value 0x1977c0dab3be96e0
sw x3, 0(x2) # store 0x1977c0dab3be96e0 in memory
flw f6, 0(x2) # load 0x1977c0dab3be96e0 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fmsub.s f25, f5, f6, f18, dyn # perform operation
fmsub.s f25, f5, f6, f18, rdn # perform operation
fmsub.s f25, f5, f6, f18, rmm # perform operation
fmsub.s f25, f5, f6, f18, rne # perform operation
fmsub.s f25, f5, f6, f18, rtz # perform operation
fmsub.s f25, f5, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f5, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x9da923d86b7d2a88 # load x3 with value 0x9da923d86b7d2a88
sw x3, 0(x2) # store 0x9da923d86b7d2a88 in memory
flw f14, 0(x2) # load 0x9da923d86b7d2a88 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmsub.s f8, f19, f14, f28, dyn # perform operation
fmsub.s f8, f19, f14, f28, rdn # perform operation
fmsub.s f8, f19, f14, f28, rmm # perform operation
fmsub.s f8, f19, f14, f28, rne # perform operation
fmsub.s f8, f19, f14, f28, rtz # perform operation
fmsub.s f8, f19, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0xad3f2c4ada7a5427 # load x3 with value 0xad3f2c4ada7a5427
sw x3, 0(x2) # store 0xad3f2c4ada7a5427 in memory
flw f5, 0(x2) # load 0xad3f2c4ada7a5427 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
fmsub.s f26, f18, f5, f19, dyn # perform operation
fmsub.s f26, f18, f5, f19, rdn # perform operation
fmsub.s f26, f18, f5, f19, rmm # perform operation
fmsub.s f26, f18, f5, f19, rne # perform operation
fmsub.s f26, f18, f5, f19, rtz # perform operation
fmsub.s f26, f18, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x3792bd4e5b1c2e7e # load x3 with value 0x3792bd4e5b1c2e7e
sw x3, 0(x2) # store 0x3792bd4e5b1c2e7e in memory
flw f28, 0(x2) # load 0x3792bd4e5b1c2e7e from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmsub.s f21, f29, f28, f6, dyn # perform operation
fmsub.s f21, f29, f28, f6, rdn # perform operation
fmsub.s f21, f29, f28, f6, rmm # perform operation
fmsub.s f21, f29, f28, f6, rne # perform operation
fmsub.s f21, f29, f28, f6, rtz # perform operation
fmsub.s f21, f29, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f29, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f29, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x9d9315b6c8dd0f5f # load x3 with value 0x9d9315b6c8dd0f5f
sw x3, 0(x2) # store 0x9d9315b6c8dd0f5f in memory
flw f19, 0(x2) # load 0x9d9315b6c8dd0f5f from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmsub.s f26, f27, f19, f20, dyn # perform operation
fmsub.s f26, f27, f19, f20, rdn # perform operation
fmsub.s f26, f27, f19, f20, rmm # perform operation
fmsub.s f26, f27, f19, f20, rne # perform operation
fmsub.s f26, f27, f19, f20, rtz # perform operation
fmsub.s f26, f27, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f27, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f27, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f27, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f27, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f27, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xf95853b5a5d4efd # load x3 with value 0xf95853b5a5d4efd
sw x3, 0(x2) # store 0xf95853b5a5d4efd in memory
flw f28, 0(x2) # load 0xf95853b5a5d4efd from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmsub.s f16, f30, f28, f5, dyn # perform operation
fmsub.s f16, f30, f28, f5, rdn # perform operation
fmsub.s f16, f30, f28, f5, rmm # perform operation
fmsub.s f16, f30, f28, f5, rne # perform operation
fmsub.s f16, f30, f28, f5, rtz # perform operation
fmsub.s f16, f30, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f30, f28, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xc30c68e49fd677a2 # load x3 with value 0xc30c68e49fd677a2
sw x3, 0(x2) # store 0xc30c68e49fd677a2 in memory
flw f26, 0(x2) # load 0xc30c68e49fd677a2 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fmsub.s f8, f12, f26, f25, dyn # perform operation
fmsub.s f8, f12, f26, f25, rdn # perform operation
fmsub.s f8, f12, f26, f25, rmm # perform operation
fmsub.s f8, f12, f26, f25, rne # perform operation
fmsub.s f8, f12, f26, f25, rtz # perform operation
fmsub.s f8, f12, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x948a8795e209e8b8 # load x3 with value 0x948a8795e209e8b8
sw x3, 0(x2) # store 0x948a8795e209e8b8 in memory
flw f9, 0(x2) # load 0x948a8795e209e8b8 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fmsub.s f24, f15, f9, f12, dyn # perform operation
fmsub.s f24, f15, f9, f12, rdn # perform operation
fmsub.s f24, f15, f9, f12, rmm # perform operation
fmsub.s f24, f15, f9, f12, rne # perform operation
fmsub.s f24, f15, f9, f12, rtz # perform operation
fmsub.s f24, f15, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f15, f9, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x7e75c45e0b47957a # load x3 with value 0x7e75c45e0b47957a
sw x3, 0(x2) # store 0x7e75c45e0b47957a in memory
flw f15, 0(x2) # load 0x7e75c45e0b47957a from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmsub.s f5, f14, f15, f30, dyn # perform operation
fmsub.s f5, f14, f15, f30, rdn # perform operation
fmsub.s f5, f14, f15, f30, rmm # perform operation
fmsub.s f5, f14, f15, f30, rne # perform operation
fmsub.s f5, f14, f15, f30, rtz # perform operation
fmsub.s f5, f14, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f14, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x22738728d26a56f5 # load x3 with value 0x22738728d26a56f5
sw x3, 0(x2) # store 0x22738728d26a56f5 in memory
flw f21, 0(x2) # load 0x22738728d26a56f5 from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmsub.s f27, f30, f21, f20, dyn # perform operation
fmsub.s f27, f30, f21, f20, rdn # perform operation
fmsub.s f27, f30, f21, f20, rmm # perform operation
fmsub.s f27, f30, f21, f20, rne # perform operation
fmsub.s f27, f30, f21, f20, rtz # perform operation
fmsub.s f27, f30, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f30, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f30, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xa353f4485370d7e # load x3 with value 0xa353f4485370d7e
sw x3, 0(x2) # store 0xa353f4485370d7e in memory
flw f10, 0(x2) # load 0xa353f4485370d7e from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmsub.s f23, f29, f10, f13, dyn # perform operation
fmsub.s f23, f29, f10, f13, rdn # perform operation
fmsub.s f23, f29, f10, f13, rmm # perform operation
fmsub.s f23, f29, f10, f13, rne # perform operation
fmsub.s f23, f29, f10, f13, rtz # perform operation
fmsub.s f23, f29, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x50d8ecfbd05dd29c # load x3 with value 0x50d8ecfbd05dd29c
sw x3, 0(x2) # store 0x50d8ecfbd05dd29c in memory
flw f7, 0(x2) # load 0x50d8ecfbd05dd29c from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmsub.s f24, f25, f7, f31, dyn # perform operation
fmsub.s f24, f25, f7, f31, rdn # perform operation
fmsub.s f24, f25, f7, f31, rmm # perform operation
fmsub.s f24, f25, f7, f31, rne # perform operation
fmsub.s f24, f25, f7, f31, rtz # perform operation
fmsub.s f24, f25, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f7, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xf6911c0920250032 # load x3 with value 0xf6911c0920250032
sw x3, 0(x2) # store 0xf6911c0920250032 in memory
flw f2, 0(x2) # load 0xf6911c0920250032 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f28, f25, f2, f20, dyn # perform operation
fmsub.s f28, f25, f2, f20, rdn # perform operation
fmsub.s f28, f25, f2, f20, rmm # perform operation
fmsub.s f28, f25, f2, f20, rne # perform operation
fmsub.s f28, f25, f2, f20, rtz # perform operation
fmsub.s f28, f25, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f2, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xd1e1f841f7441ad0 # load x3 with value 0xd1e1f841f7441ad0
sw x3, 0(x2) # store 0xd1e1f841f7441ad0 in memory
flw f19, 0(x2) # load 0xd1e1f841f7441ad0 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmsub.s f17, f11, f19, f24, dyn # perform operation
fmsub.s f17, f11, f19, f24, rdn # perform operation
fmsub.s f17, f11, f19, f24, rmm # perform operation
fmsub.s f17, f11, f19, f24, rne # perform operation
fmsub.s f17, f11, f19, f24, rtz # perform operation
fmsub.s f17, f11, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f11, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f11, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f11, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f11, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f11, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x4cf69aa6cbd673f0 # load x3 with value 0x4cf69aa6cbd673f0
sw x3, 0(x2) # store 0x4cf69aa6cbd673f0 in memory
flw f21, 0(x2) # load 0x4cf69aa6cbd673f0 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmsub.s f7, f2, f21, f20, dyn # perform operation
fmsub.s f7, f2, f21, f20, rdn # perform operation
fmsub.s f7, f2, f21, f20, rmm # perform operation
fmsub.s f7, f2, f21, f20, rne # perform operation
fmsub.s f7, f2, f21, f20, rtz # perform operation
fmsub.s f7, f2, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f2, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x3c4b5852dab994d2 # load x3 with value 0x3c4b5852dab994d2
sw x3, 0(x2) # store 0x3c4b5852dab994d2 in memory
flw f3, 0(x2) # load 0x3c4b5852dab994d2 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f13, f19, f3, f14, dyn # perform operation
fmsub.s f13, f19, f3, f14, rdn # perform operation
fmsub.s f13, f19, f3, f14, rmm # perform operation
fmsub.s f13, f19, f3, f14, rne # perform operation
fmsub.s f13, f19, f3, f14, rtz # perform operation
fmsub.s f13, f19, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xcb7cb090b961bd77 # load x3 with value 0xcb7cb090b961bd77
sw x3, 0(x2) # store 0xcb7cb090b961bd77 in memory
flw f21, 0(x2) # load 0xcb7cb090b961bd77 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmsub.s f1, f12, f21, f20, dyn # perform operation
fmsub.s f1, f12, f21, f20, rdn # perform operation
fmsub.s f1, f12, f21, f20, rmm # perform operation
fmsub.s f1, f12, f21, f20, rne # perform operation
fmsub.s f1, f12, f21, f20, rtz # perform operation
fmsub.s f1, f12, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f12, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f12, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f12, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f12, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f12, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x968bdccdbf668983 # load x3 with value 0x968bdccdbf668983
sw x3, 0(x2) # store 0x968bdccdbf668983 in memory
flw f21, 0(x2) # load 0x968bdccdbf668983 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmsub.s f7, f30, f21, f2, dyn # perform operation
fmsub.s f7, f30, f21, f2, rdn # perform operation
fmsub.s f7, f30, f21, f2, rmm # perform operation
fmsub.s f7, f30, f21, f2, rne # perform operation
fmsub.s f7, f30, f21, f2, rtz # perform operation
fmsub.s f7, f30, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f30, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f30, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x9c2a603791372cc6 # load x3 with value 0x9c2a603791372cc6
sw x3, 0(x2) # store 0x9c2a603791372cc6 in memory
flw f16, 0(x2) # load 0x9c2a603791372cc6 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmsub.s f28, f15, f16, f27, dyn # perform operation
fmsub.s f28, f15, f16, f27, rdn # perform operation
fmsub.s f28, f15, f16, f27, rmm # perform operation
fmsub.s f28, f15, f16, f27, rne # perform operation
fmsub.s f28, f15, f16, f27, rtz # perform operation
fmsub.s f28, f15, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x42f2563b48ac9aae # load x3 with value 0x42f2563b48ac9aae
sw x3, 0(x2) # store 0x42f2563b48ac9aae in memory
flw f21, 0(x2) # load 0x42f2563b48ac9aae from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmsub.s f12, f23, f21, f6, dyn # perform operation
fmsub.s f12, f23, f21, f6, rdn # perform operation
fmsub.s f12, f23, f21, f6, rmm # perform operation
fmsub.s f12, f23, f21, f6, rne # perform operation
fmsub.s f12, f23, f21, f6, rtz # perform operation
fmsub.s f12, f23, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f23, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x94aa3abd1e518a6c # load x3 with value 0x94aa3abd1e518a6c
sw x3, 0(x2) # store 0x94aa3abd1e518a6c in memory
flw f26, 0(x2) # load 0x94aa3abd1e518a6c from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmsub.s f6, f13, f26, f5, dyn # perform operation
fmsub.s f6, f13, f26, f5, rdn # perform operation
fmsub.s f6, f13, f26, f5, rmm # perform operation
fmsub.s f6, f13, f26, f5, rne # perform operation
fmsub.s f6, f13, f26, f5, rtz # perform operation
fmsub.s f6, f13, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f13, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x4a2fcefd4ccee13f # load x3 with value 0x4a2fcefd4ccee13f
sw x3, 0(x2) # store 0x4a2fcefd4ccee13f in memory
flw f18, 0(x2) # load 0x4a2fcefd4ccee13f from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fmsub.s f8, f7, f18, f9, dyn # perform operation
fmsub.s f8, f7, f18, f9, rdn # perform operation
fmsub.s f8, f7, f18, f9, rmm # perform operation
fmsub.s f8, f7, f18, f9, rne # perform operation
fmsub.s f8, f7, f18, f9, rtz # perform operation
fmsub.s f8, f7, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x2196583cc1d00625 # load x3 with value 0x2196583cc1d00625
sw x3, 0(x2) # store 0x2196583cc1d00625 in memory
flw f7, 0(x2) # load 0x2196583cc1d00625 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f9, f14, f7, f28, dyn # perform operation
fmsub.s f9, f14, f7, f28, rdn # perform operation
fmsub.s f9, f14, f7, f28, rmm # perform operation
fmsub.s f9, f14, f7, f28, rne # perform operation
fmsub.s f9, f14, f7, f28, rtz # perform operation
fmsub.s f9, f14, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f14, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f14, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x6c2e23a3f86f312c # load x3 with value 0x6c2e23a3f86f312c
sw x3, 0(x2) # store 0x6c2e23a3f86f312c in memory
flw f3, 0(x2) # load 0x6c2e23a3f86f312c from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fmsub.s f11, f21, f3, f30, dyn # perform operation
fmsub.s f11, f21, f3, f30, rdn # perform operation
fmsub.s f11, f21, f3, f30, rmm # perform operation
fmsub.s f11, f21, f3, f30, rne # perform operation
fmsub.s f11, f21, f3, f30, rtz # perform operation
fmsub.s f11, f21, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x4a44649ffdc714f7 # load x3 with value 0x4a44649ffdc714f7
sw x3, 0(x2) # store 0x4a44649ffdc714f7 in memory
flw f26, 0(x2) # load 0x4a44649ffdc714f7 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmsub.s f12, f14, f26, f21, dyn # perform operation
fmsub.s f12, f14, f26, f21, rdn # perform operation
fmsub.s f12, f14, f26, f21, rmm # perform operation
fmsub.s f12, f14, f26, f21, rne # perform operation
fmsub.s f12, f14, f26, f21, rtz # perform operation
fmsub.s f12, f14, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xa323ead777ad0ff3 # load x3 with value 0xa323ead777ad0ff3
sw x3, 0(x2) # store 0xa323ead777ad0ff3 in memory
flw f6, 0(x2) # load 0xa323ead777ad0ff3 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f1, f14, f6, f23, dyn # perform operation
fmsub.s f1, f14, f6, f23, rdn # perform operation
fmsub.s f1, f14, f6, f23, rmm # perform operation
fmsub.s f1, f14, f6, f23, rne # perform operation
fmsub.s f1, f14, f6, f23, rtz # perform operation
fmsub.s f1, f14, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f14, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f14, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0xf8bf8d4fcc78d406 # load x3 with value 0xf8bf8d4fcc78d406
sw x3, 0(x2) # store 0xf8bf8d4fcc78d406 in memory
flw f3, 0(x2) # load 0xf8bf8d4fcc78d406 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmsub.s f23, f31, f3, f8, dyn # perform operation
fmsub.s f23, f31, f3, f8, rdn # perform operation
fmsub.s f23, f31, f3, f8, rmm # perform operation
fmsub.s f23, f31, f3, f8, rne # perform operation
fmsub.s f23, f31, f3, f8, rtz # perform operation
fmsub.s f23, f31, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xa14ba1f4e3fe388d # load x3 with value 0xa14ba1f4e3fe388d
sw x3, 0(x2) # store 0xa14ba1f4e3fe388d in memory
flw f19, 0(x2) # load 0xa14ba1f4e3fe388d from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fmsub.s f20, f1, f19, f26, dyn # perform operation
fmsub.s f20, f1, f19, f26, rdn # perform operation
fmsub.s f20, f1, f19, f26, rmm # perform operation
fmsub.s f20, f1, f19, f26, rne # perform operation
fmsub.s f20, f1, f19, f26, rtz # perform operation
fmsub.s f20, f1, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f1, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f1, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f1, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f1, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f1, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xc641c0e1ff9cb4ca # load x3 with value 0xc641c0e1ff9cb4ca
sw x3, 0(x2) # store 0xc641c0e1ff9cb4ca in memory
flw f2, 0(x2) # load 0xc641c0e1ff9cb4ca from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmsub.s f31, f27, f2, f30, dyn # perform operation
fmsub.s f31, f27, f2, f30, rdn # perform operation
fmsub.s f31, f27, f2, f30, rmm # perform operation
fmsub.s f31, f27, f2, f30, rne # perform operation
fmsub.s f31, f27, f2, f30, rtz # perform operation
fmsub.s f31, f27, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f27, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x5e8db7a7053cdcbe # load x3 with value 0x5e8db7a7053cdcbe
sw x3, 0(x2) # store 0x5e8db7a7053cdcbe in memory
flw f6, 0(x2) # load 0x5e8db7a7053cdcbe from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmsub.s f5, f28, f6, f30, dyn # perform operation
fmsub.s f5, f28, f6, f30, rdn # perform operation
fmsub.s f5, f28, f6, f30, rmm # perform operation
fmsub.s f5, f28, f6, f30, rne # perform operation
fmsub.s f5, f28, f6, f30, rtz # perform operation
fmsub.s f5, f28, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x777f752cbe3d0b19 # load x3 with value 0x777f752cbe3d0b19
sw x3, 0(x2) # store 0x777f752cbe3d0b19 in memory
flw f23, 0(x2) # load 0x777f752cbe3d0b19 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fmsub.s f3, f2, f23, f27, dyn # perform operation
fmsub.s f3, f2, f23, f27, rdn # perform operation
fmsub.s f3, f2, f23, f27, rmm # perform operation
fmsub.s f3, f2, f23, f27, rne # perform operation
fmsub.s f3, f2, f23, f27, rtz # perform operation
fmsub.s f3, f2, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f2, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f2, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x35f6a54f5f3ec92e # load x3 with value 0x35f6a54f5f3ec92e
sw x3, 0(x2) # store 0x35f6a54f5f3ec92e in memory
flw f3, 0(x2) # load 0x35f6a54f5f3ec92e from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmsub.s f27, f17, f3, f24, dyn # perform operation
fmsub.s f27, f17, f3, f24, rdn # perform operation
fmsub.s f27, f17, f3, f24, rmm # perform operation
fmsub.s f27, f17, f3, f24, rne # perform operation
fmsub.s f27, f17, f3, f24, rtz # perform operation
fmsub.s f27, f17, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x3163cff321a92fcf # load x3 with value 0x3163cff321a92fcf
sw x3, 0(x2) # store 0x3163cff321a92fcf in memory
flw f3, 0(x2) # load 0x3163cff321a92fcf from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmsub.s f7, f23, f3, f22, dyn # perform operation
fmsub.s f7, f23, f3, f22, rdn # perform operation
fmsub.s f7, f23, f3, f22, rmm # perform operation
fmsub.s f7, f23, f3, f22, rne # perform operation
fmsub.s f7, f23, f3, f22, rtz # perform operation
fmsub.s f7, f23, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f23, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f23, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x1a6c5917e131a3b9 # load x3 with value 0x1a6c5917e131a3b9
sw x3, 0(x2) # store 0x1a6c5917e131a3b9 in memory
flw f21, 0(x2) # load 0x1a6c5917e131a3b9 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmsub.s f18, f11, f21, f14, dyn # perform operation
fmsub.s f18, f11, f21, f14, rdn # perform operation
fmsub.s f18, f11, f21, f14, rmm # perform operation
fmsub.s f18, f11, f21, f14, rne # perform operation
fmsub.s f18, f11, f21, f14, rtz # perform operation
fmsub.s f18, f11, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f11, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f11, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x7dd42e8ec17f7735 # load x3 with value 0x7dd42e8ec17f7735
sw x3, 0(x2) # store 0x7dd42e8ec17f7735 in memory
flw f29, 0(x2) # load 0x7dd42e8ec17f7735 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmsub.s f28, f7, f29, f22, dyn # perform operation
fmsub.s f28, f7, f29, f22, rdn # perform operation
fmsub.s f28, f7, f29, f22, rmm # perform operation
fmsub.s f28, f7, f29, f22, rne # perform operation
fmsub.s f28, f7, f29, f22, rtz # perform operation
fmsub.s f28, f7, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xd91b370d672f7a7c # load x3 with value 0xd91b370d672f7a7c
sw x3, 0(x2) # store 0xd91b370d672f7a7c in memory
flw f9, 0(x2) # load 0xd91b370d672f7a7c from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmsub.s f30, f24, f9, f3, dyn # perform operation
fmsub.s f30, f24, f9, f3, rdn # perform operation
fmsub.s f30, f24, f9, f3, rmm # perform operation
fmsub.s f30, f24, f9, f3, rne # perform operation
fmsub.s f30, f24, f9, f3, rtz # perform operation
fmsub.s f30, f24, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f24, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f24, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x7e8bff19ed3b6c0e # load x3 with value 0x7e8bff19ed3b6c0e
sw x3, 0(x2) # store 0x7e8bff19ed3b6c0e in memory
flw f3, 0(x2) # load 0x7e8bff19ed3b6c0e from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fmsub.s f15, f16, f3, f14, dyn # perform operation
fmsub.s f15, f16, f3, f14, rdn # perform operation
fmsub.s f15, f16, f3, f14, rmm # perform operation
fmsub.s f15, f16, f3, f14, rne # perform operation
fmsub.s f15, f16, f3, f14, rtz # perform operation
fmsub.s f15, f16, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f16, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f16, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xe4d4d674bd1432f1 # load x3 with value 0xe4d4d674bd1432f1
sw x3, 0(x2) # store 0xe4d4d674bd1432f1 in memory
flw f25, 0(x2) # load 0xe4d4d674bd1432f1 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fmsub.s f13, f20, f25, f1, dyn # perform operation
fmsub.s f13, f20, f25, f1, rdn # perform operation
fmsub.s f13, f20, f25, f1, rmm # perform operation
fmsub.s f13, f20, f25, f1, rne # perform operation
fmsub.s f13, f20, f25, f1, rtz # perform operation
fmsub.s f13, f20, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x6eabd5e70b30e59e # load x3 with value 0x6eabd5e70b30e59e
sw x3, 0(x2) # store 0x6eabd5e70b30e59e in memory
flw f15, 0(x2) # load 0x6eabd5e70b30e59e from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fmsub.s f31, f26, f15, f25, dyn # perform operation
fmsub.s f31, f26, f15, f25, rdn # perform operation
fmsub.s f31, f26, f15, f25, rmm # perform operation
fmsub.s f31, f26, f15, f25, rne # perform operation
fmsub.s f31, f26, f15, f25, rtz # perform operation
fmsub.s f31, f26, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xd78339ade0658dc # load x3 with value 0xd78339ade0658dc
sw x3, 0(x2) # store 0xd78339ade0658dc in memory
flw f27, 0(x2) # load 0xd78339ade0658dc from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmsub.s f19, f31, f27, f30, dyn # perform operation
fmsub.s f19, f31, f27, f30, rdn # perform operation
fmsub.s f19, f31, f27, f30, rmm # perform operation
fmsub.s f19, f31, f27, f30, rne # perform operation
fmsub.s f19, f31, f27, f30, rtz # perform operation
fmsub.s f19, f31, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f31, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0xab3b50f7d466aef5 # load x3 with value 0xab3b50f7d466aef5
sw x3, 0(x2) # store 0xab3b50f7d466aef5 in memory
flw f19, 0(x2) # load 0xab3b50f7d466aef5 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f22, f16, f19, f7, dyn # perform operation
fmsub.s f22, f16, f19, f7, rdn # perform operation
fmsub.s f22, f16, f19, f7, rmm # perform operation
fmsub.s f22, f16, f19, f7, rne # perform operation
fmsub.s f22, f16, f19, f7, rtz # perform operation
fmsub.s f22, f16, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xbf20ec87c55a66f5 # load x3 with value 0xbf20ec87c55a66f5
sw x3, 0(x2) # store 0xbf20ec87c55a66f5 in memory
flw f30, 0(x2) # load 0xbf20ec87c55a66f5 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fmsub.s f10, f18, f30, f23, dyn # perform operation
fmsub.s f10, f18, f30, f23, rdn # perform operation
fmsub.s f10, f18, f30, f23, rmm # perform operation
fmsub.s f10, f18, f30, f23, rne # perform operation
fmsub.s f10, f18, f30, f23, rtz # perform operation
fmsub.s f10, f18, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f18, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f18, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x615b789b6d555f5a # load x3 with value 0x615b789b6d555f5a
sw x3, 0(x2) # store 0x615b789b6d555f5a in memory
flw f17, 0(x2) # load 0x615b789b6d555f5a from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmsub.s f23, f13, f17, f12, dyn # perform operation
fmsub.s f23, f13, f17, f12, rdn # perform operation
fmsub.s f23, f13, f17, f12, rmm # perform operation
fmsub.s f23, f13, f17, f12, rne # perform operation
fmsub.s f23, f13, f17, f12, rtz # perform operation
fmsub.s f23, f13, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x6f1bc246f40881e9 # load x3 with value 0x6f1bc246f40881e9
sw x3, 0(x2) # store 0x6f1bc246f40881e9 in memory
flw f3, 0(x2) # load 0x6f1bc246f40881e9 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmsub.s f13, f2, f3, f17, dyn # perform operation
fmsub.s f13, f2, f3, f17, rdn # perform operation
fmsub.s f13, f2, f3, f17, rmm # perform operation
fmsub.s f13, f2, f3, f17, rne # perform operation
fmsub.s f13, f2, f3, f17, rtz # perform operation
fmsub.s f13, f2, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x4b78ade67cb36f5a # load x3 with value 0x4b78ade67cb36f5a
sw x3, 0(x2) # store 0x4b78ade67cb36f5a in memory
flw f14, 0(x2) # load 0x4b78ade67cb36f5a from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fmsub.s f8, f7, f14, f9, dyn # perform operation
fmsub.s f8, f7, f14, f9, rdn # perform operation
fmsub.s f8, f7, f14, f9, rmm # perform operation
fmsub.s f8, f7, f14, f9, rne # perform operation
fmsub.s f8, f7, f14, f9, rtz # perform operation
fmsub.s f8, f7, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xf9b468780b840b4d # load x3 with value 0xf9b468780b840b4d
sw x3, 0(x2) # store 0xf9b468780b840b4d in memory
flw f11, 0(x2) # load 0xf9b468780b840b4d from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fmsub.s f14, f24, f11, f7, dyn # perform operation
fmsub.s f14, f24, f11, f7, rdn # perform operation
fmsub.s f14, f24, f11, f7, rmm # perform operation
fmsub.s f14, f24, f11, f7, rne # perform operation
fmsub.s f14, f24, f11, f7, rtz # perform operation
fmsub.s f14, f24, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x184ebfa809281777 # load x3 with value 0x184ebfa809281777
sw x3, 0(x2) # store 0x184ebfa809281777 in memory
flw f1, 0(x2) # load 0x184ebfa809281777 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fmsub.s f17, f6, f1, f31, dyn # perform operation
fmsub.s f17, f6, f1, f31, rdn # perform operation
fmsub.s f17, f6, f1, f31, rmm # perform operation
fmsub.s f17, f6, f1, f31, rne # perform operation
fmsub.s f17, f6, f1, f31, rtz # perform operation
fmsub.s f17, f6, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f6, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f6, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x52d87ed7cd610940 # load x3 with value 0x52d87ed7cd610940
sw x3, 0(x2) # store 0x52d87ed7cd610940 in memory
flw f21, 0(x2) # load 0x52d87ed7cd610940 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmsub.s f9, f3, f21, f26, dyn # perform operation
fmsub.s f9, f3, f21, f26, rdn # perform operation
fmsub.s f9, f3, f21, f26, rmm # perform operation
fmsub.s f9, f3, f21, f26, rne # perform operation
fmsub.s f9, f3, f21, f26, rtz # perform operation
fmsub.s f9, f3, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f21, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xc40d09275505e98a # load x3 with value 0xc40d09275505e98a
sw x3, 0(x2) # store 0xc40d09275505e98a in memory
flw f27, 0(x2) # load 0xc40d09275505e98a from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmsub.s f25, f19, f27, f18, dyn # perform operation
fmsub.s f25, f19, f27, f18, rdn # perform operation
fmsub.s f25, f19, f27, f18, rmm # perform operation
fmsub.s f25, f19, f27, f18, rne # perform operation
fmsub.s f25, f19, f27, f18, rtz # perform operation
fmsub.s f25, f19, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xb0e6f6f20e226469 # load x3 with value 0xb0e6f6f20e226469
sw x3, 0(x2) # store 0xb0e6f6f20e226469 in memory
flw f27, 0(x2) # load 0xb0e6f6f20e226469 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmsub.s f22, f11, f27, f31, dyn # perform operation
fmsub.s f22, f11, f27, f31, rdn # perform operation
fmsub.s f22, f11, f27, f31, rmm # perform operation
fmsub.s f22, f11, f27, f31, rne # perform operation
fmsub.s f22, f11, f27, f31, rtz # perform operation
fmsub.s f22, f11, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f11, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f11, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xb19d7307ed795b94 # load x3 with value 0xb19d7307ed795b94
sw x3, 0(x2) # store 0xb19d7307ed795b94 in memory
flw f12, 0(x2) # load 0xb19d7307ed795b94 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f25, f1, f12, f11, dyn # perform operation
fmsub.s f25, f1, f12, f11, rdn # perform operation
fmsub.s f25, f1, f12, f11, rmm # perform operation
fmsub.s f25, f1, f12, f11, rne # perform operation
fmsub.s f25, f1, f12, f11, rtz # perform operation
fmsub.s f25, f1, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x8ffab18c2b787a5 # load x3 with value 0x8ffab18c2b787a5
sw x3, 0(x2) # store 0x8ffab18c2b787a5 in memory
flw f25, 0(x2) # load 0x8ffab18c2b787a5 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fmsub.s f26, f17, f25, f27, dyn # perform operation
fmsub.s f26, f17, f25, f27, rdn # perform operation
fmsub.s f26, f17, f25, f27, rmm # perform operation
fmsub.s f26, f17, f25, f27, rne # perform operation
fmsub.s f26, f17, f25, f27, rtz # perform operation
fmsub.s f26, f17, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0xc14efc014c2dc67e # load x3 with value 0xc14efc014c2dc67e
sw x3, 0(x2) # store 0xc14efc014c2dc67e in memory
flw f6, 0(x2) # load 0xc14efc014c2dc67e from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f3, f27, f6, f30, dyn # perform operation
fmsub.s f3, f27, f6, f30, rdn # perform operation
fmsub.s f3, f27, f6, f30, rmm # perform operation
fmsub.s f3, f27, f6, f30, rne # perform operation
fmsub.s f3, f27, f6, f30, rtz # perform operation
fmsub.s f3, f27, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f27, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f27, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x862599b7cfa1ba3b # load x3 with value 0x862599b7cfa1ba3b
sw x3, 0(x2) # store 0x862599b7cfa1ba3b in memory
flw f18, 0(x2) # load 0x862599b7cfa1ba3b from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fmsub.s f24, f8, f18, f15, dyn # perform operation
fmsub.s f24, f8, f18, f15, rdn # perform operation
fmsub.s f24, f8, f18, f15, rmm # perform operation
fmsub.s f24, f8, f18, f15, rne # perform operation
fmsub.s f24, f8, f18, f15, rtz # perform operation
fmsub.s f24, f8, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f8, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f8, f18, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x9738356aacd89d24 # load x3 with value 0x9738356aacd89d24
sw x3, 0(x2) # store 0x9738356aacd89d24 in memory
flw f11, 0(x2) # load 0x9738356aacd89d24 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmsub.s f20, f12, f11, f28, dyn # perform operation
fmsub.s f20, f12, f11, f28, rdn # perform operation
fmsub.s f20, f12, f11, f28, rmm # perform operation
fmsub.s f20, f12, f11, f28, rne # perform operation
fmsub.s f20, f12, f11, f28, rtz # perform operation
fmsub.s f20, f12, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f12, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xefff90c9f6759d87 # load x3 with value 0xefff90c9f6759d87
sw x3, 0(x2) # store 0xefff90c9f6759d87 in memory
flw f7, 0(x2) # load 0xefff90c9f6759d87 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fmsub.s f15, f26, f7, f2, dyn # perform operation
fmsub.s f15, f26, f7, f2, rdn # perform operation
fmsub.s f15, f26, f7, f2, rmm # perform operation
fmsub.s f15, f26, f7, f2, rne # perform operation
fmsub.s f15, f26, f7, f2, rtz # perform operation
fmsub.s f15, f26, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f26, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f26, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f26, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f26, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f26, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xc0c168a7d6edd2ec # load x3 with value 0xc0c168a7d6edd2ec
sw x3, 0(x2) # store 0xc0c168a7d6edd2ec in memory
flw f19, 0(x2) # load 0xc0c168a7d6edd2ec from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f20, f14, f19, f31, dyn # perform operation
fmsub.s f20, f14, f19, f31, rdn # perform operation
fmsub.s f20, f14, f19, f31, rmm # perform operation
fmsub.s f20, f14, f19, f31, rne # perform operation
fmsub.s f20, f14, f19, f31, rtz # perform operation
fmsub.s f20, f14, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f14, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f14, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0xf2a38f081b1960e9 # load x3 with value 0xf2a38f081b1960e9
sw x3, 0(x2) # store 0xf2a38f081b1960e9 in memory
flw f25, 0(x2) # load 0xf2a38f081b1960e9 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fmsub.s f3, f9, f25, f17, dyn # perform operation
fmsub.s f3, f9, f25, f17, rdn # perform operation
fmsub.s f3, f9, f25, f17, rmm # perform operation
fmsub.s f3, f9, f25, f17, rne # perform operation
fmsub.s f3, f9, f25, f17, rtz # perform operation
fmsub.s f3, f9, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xc81973354063a2eb # load x3 with value 0xc81973354063a2eb
sw x3, 0(x2) # store 0xc81973354063a2eb in memory
flw f18, 0(x2) # load 0xc81973354063a2eb from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fmsub.s f14, f24, f18, f3, dyn # perform operation
fmsub.s f14, f24, f18, f3, rdn # perform operation
fmsub.s f14, f24, f18, f3, rmm # perform operation
fmsub.s f14, f24, f18, f3, rne # perform operation
fmsub.s f14, f24, f18, f3, rtz # perform operation
fmsub.s f14, f24, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xca0a5cf74fb24a0 # load x3 with value 0xca0a5cf74fb24a0
sw x3, 0(x2) # store 0xca0a5cf74fb24a0 in memory
flw f14, 0(x2) # load 0xca0a5cf74fb24a0 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fmsub.s f22, f29, f14, f27, dyn # perform operation
fmsub.s f22, f29, f14, f27, rdn # perform operation
fmsub.s f22, f29, f14, f27, rmm # perform operation
fmsub.s f22, f29, f14, f27, rne # perform operation
fmsub.s f22, f29, f14, f27, rtz # perform operation
fmsub.s f22, f29, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f29, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f29, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x29c4a17e7c1a882 # load x3 with value 0x29c4a17e7c1a882
sw x3, 0(x2) # store 0x29c4a17e7c1a882 in memory
flw f20, 0(x2) # load 0x29c4a17e7c1a882 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fmsub.s f11, f16, f20, f7, dyn # perform operation
fmsub.s f11, f16, f20, f7, rdn # perform operation
fmsub.s f11, f16, f20, f7, rmm # perform operation
fmsub.s f11, f16, f20, f7, rne # perform operation
fmsub.s f11, f16, f20, f7, rtz # perform operation
fmsub.s f11, f16, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f20, f7 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
