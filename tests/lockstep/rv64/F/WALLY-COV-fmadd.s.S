///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv64/F/WALLY-COV-fmadd.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x10, x1, x20 # perform first operation
fmadd.s f19, f12, f15, f30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x1, x12, x2 # perform first operation
fmadd.s f24, f19, f9, f16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x2, x10, x9 # perform first operation
fmadd.s f7, f5, f3, f1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f31, f7, f18 # perform first operation
fmadd.s f8, f31, f1, f3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f17, f6, f13 # perform first operation
fmadd.s f13, f3, f17, f22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f15, f9, f23 # perform first operation
fmadd.s f10, f15, f27, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f21, f30, f22 # perform first operation
fmadd.s f21, f31, f26, f14 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f9, f28, f27 # perform first operation
fmadd.s f9, f1, f16, f26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f1, f14, f25 # perform first operation
fmadd.s f1, f10, f17, f27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f29, f22, f24 # perform first operation
fmadd.s f22, f5, f21, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f13, f2, f12 # perform first operation
fmadd.s f12, f22, f20, f17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f10, f30, f23 # perform first operation
fmadd.s f2, f11, f13, f31 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x3df14957626f48b # load x3 with value 0x3df14957626f48b
sw x3, 0(x2) # store 0x3df14957626f48b in memory
flw f0, 0(x2) # load 0x3df14957626f48b from memory into f0
la x2, scratch
li x3, 0xd58799845eaaea10 # load x3 with value 0xd58799845eaaea10
sw x3, 0(x2) # store 0xd58799845eaaea10 in memory
flw f17, 0(x2) # load 0xd58799845eaaea10 from memory into f17
la x2, scratch
li x3, 0x6967bd746f5c4d4a # load x3 with value 0x6967bd746f5c4d4a
sw x3, 0(x2) # store 0x6967bd746f5c4d4a in memory
flw f3, 0(x2) # load 0x6967bd746f5c4d4a from memory into f3
fmadd.s f9, f0, f17, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0xaccad87d8b5ded1b # load x3 with value 0xaccad87d8b5ded1b
sw x3, 0(x2) # store 0xaccad87d8b5ded1b in memory
flw f1, 0(x2) # load 0xaccad87d8b5ded1b from memory into f1
la x2, scratch
li x3, 0x5464b01be3aa42b6 # load x3 with value 0x5464b01be3aa42b6
sw x3, 0(x2) # store 0x5464b01be3aa42b6 in memory
flw f29, 0(x2) # load 0x5464b01be3aa42b6 from memory into f29
la x2, scratch
li x3, 0xbafacab7c01e66bd # load x3 with value 0xbafacab7c01e66bd
sw x3, 0(x2) # store 0xbafacab7c01e66bd in memory
flw f31, 0(x2) # load 0xbafacab7c01e66bd from memory into f31
fmadd.s f30, f1, f29, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0xbfaae9046fa14a97 # load x3 with value 0xbfaae9046fa14a97
sw x3, 0(x2) # store 0xbfaae9046fa14a97 in memory
flw f2, 0(x2) # load 0xbfaae9046fa14a97 from memory into f2
la x2, scratch
li x3, 0x1b67078a3456486 # load x3 with value 0x1b67078a3456486
sw x3, 0(x2) # store 0x1b67078a3456486 in memory
flw f15, 0(x2) # load 0x1b67078a3456486 from memory into f15
la x2, scratch
li x3, 0x7e62b5bc3bb3017a # load x3 with value 0x7e62b5bc3bb3017a
sw x3, 0(x2) # store 0x7e62b5bc3bb3017a in memory
flw f26, 0(x2) # load 0x7e62b5bc3bb3017a from memory into f26
fmadd.s f19, f2, f15, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xfcfd3243ef7f1cd # load x3 with value 0xfcfd3243ef7f1cd
sw x3, 0(x2) # store 0xfcfd3243ef7f1cd in memory
flw f3, 0(x2) # load 0xfcfd3243ef7f1cd from memory into f3
la x2, scratch
li x3, 0x281d5eb7b01793f2 # load x3 with value 0x281d5eb7b01793f2
sw x3, 0(x2) # store 0x281d5eb7b01793f2 in memory
flw f23, 0(x2) # load 0x281d5eb7b01793f2 from memory into f23
la x2, scratch
li x3, 0xa2c8b29642166f76 # load x3 with value 0xa2c8b29642166f76
sw x3, 0(x2) # store 0xa2c8b29642166f76 in memory
flw f15, 0(x2) # load 0xa2c8b29642166f76 from memory into f15
fmadd.s f3, f3, f23, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x627e16a394abf08b # load x3 with value 0x627e16a394abf08b
sw x3, 0(x2) # store 0x627e16a394abf08b in memory
flw f4, 0(x2) # load 0x627e16a394abf08b from memory into f4
la x2, scratch
li x3, 0x7305614bacf96392 # load x3 with value 0x7305614bacf96392
sw x3, 0(x2) # store 0x7305614bacf96392 in memory
flw f16, 0(x2) # load 0x7305614bacf96392 from memory into f16
la x2, scratch
li x3, 0xb6c1fd4f02d38f45 # load x3 with value 0xb6c1fd4f02d38f45
sw x3, 0(x2) # store 0xb6c1fd4f02d38f45 in memory
flw f17, 0(x2) # load 0xb6c1fd4f02d38f45 from memory into f17
fmadd.s f20, f4, f16, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb3d1f0413c409685 # load x3 with value 0xb3d1f0413c409685
sw x3, 0(x2) # store 0xb3d1f0413c409685 in memory
flw f5, 0(x2) # load 0xb3d1f0413c409685 from memory into f5
la x2, scratch
li x3, 0x6894f06021a4ad76 # load x3 with value 0x6894f06021a4ad76
sw x3, 0(x2) # store 0x6894f06021a4ad76 in memory
flw f6, 0(x2) # load 0x6894f06021a4ad76 from memory into f6
la x2, scratch
li x3, 0xd2acf16c139f077b # load x3 with value 0xd2acf16c139f077b
sw x3, 0(x2) # store 0xd2acf16c139f077b in memory
flw f11, 0(x2) # load 0xd2acf16c139f077b from memory into f11
fmadd.s f13, f5, f6, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
la x2, scratch
li x3, 0xa71d19bc33b4390f # load x3 with value 0xa71d19bc33b4390f
sw x3, 0(x2) # store 0xa71d19bc33b4390f in memory
flw f6, 0(x2) # load 0xa71d19bc33b4390f from memory into f6
la x2, scratch
li x3, 0x41465b3ea41bb5c7 # load x3 with value 0x41465b3ea41bb5c7
sw x3, 0(x2) # store 0x41465b3ea41bb5c7 in memory
flw f13, 0(x2) # load 0x41465b3ea41bb5c7 from memory into f13
la x2, scratch
li x3, 0x31daa068f96e4432 # load x3 with value 0x31daa068f96e4432
sw x3, 0(x2) # store 0x31daa068f96e4432 in memory
flw f19, 0(x2) # load 0x31daa068f96e4432 from memory into f19
fmadd.s f18, f6, f13, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x23c6283b620175d # load x3 with value 0x23c6283b620175d
sw x3, 0(x2) # store 0x23c6283b620175d in memory
flw f7, 0(x2) # load 0x23c6283b620175d from memory into f7
la x2, scratch
li x3, 0xcef167a3a0676db5 # load x3 with value 0xcef167a3a0676db5
sw x3, 0(x2) # store 0xcef167a3a0676db5 in memory
flw f17, 0(x2) # load 0xcef167a3a0676db5 from memory into f17
la x2, scratch
li x3, 0x738962091ffb5b21 # load x3 with value 0x738962091ffb5b21
sw x3, 0(x2) # store 0x738962091ffb5b21 in memory
flw f4, 0(x2) # load 0x738962091ffb5b21 from memory into f4
fmadd.s f31, f7, f17, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0xd4ed91b3d7e22d7b # load x3 with value 0xd4ed91b3d7e22d7b
sw x3, 0(x2) # store 0xd4ed91b3d7e22d7b in memory
flw f8, 0(x2) # load 0xd4ed91b3d7e22d7b from memory into f8
la x2, scratch
li x3, 0x7a407f8096656a12 # load x3 with value 0x7a407f8096656a12
sw x3, 0(x2) # store 0x7a407f8096656a12 in memory
flw f26, 0(x2) # load 0x7a407f8096656a12 from memory into f26
la x2, scratch
li x3, 0x898a76e9d70ae79d # load x3 with value 0x898a76e9d70ae79d
sw x3, 0(x2) # store 0x898a76e9d70ae79d in memory
flw f3, 0(x2) # load 0x898a76e9d70ae79d from memory into f3
fmadd.s f31, f8, f26, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x5a4dd95b3337a039 # load x3 with value 0x5a4dd95b3337a039
sw x3, 0(x2) # store 0x5a4dd95b3337a039 in memory
flw f9, 0(x2) # load 0x5a4dd95b3337a039 from memory into f9
la x2, scratch
li x3, 0x8430309abf750602 # load x3 with value 0x8430309abf750602
sw x3, 0(x2) # store 0x8430309abf750602 in memory
flw f2, 0(x2) # load 0x8430309abf750602 from memory into f2
la x2, scratch
li x3, 0x60f0778bbabbdda0 # load x3 with value 0x60f0778bbabbdda0
sw x3, 0(x2) # store 0x60f0778bbabbdda0 in memory
flw f13, 0(x2) # load 0x60f0778bbabbdda0 from memory into f13
fmadd.s f12, f9, f2, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0xc189291ec9bee308 # load x3 with value 0xc189291ec9bee308
sw x3, 0(x2) # store 0xc189291ec9bee308 in memory
flw f10, 0(x2) # load 0xc189291ec9bee308 from memory into f10
la x2, scratch
li x3, 0xe423157b9d607c4 # load x3 with value 0xe423157b9d607c4
sw x3, 0(x2) # store 0xe423157b9d607c4 in memory
flw f8, 0(x2) # load 0xe423157b9d607c4 from memory into f8
la x2, scratch
li x3, 0xc753f05729ad11ba # load x3 with value 0xc753f05729ad11ba
sw x3, 0(x2) # store 0xc753f05729ad11ba in memory
flw f7, 0(x2) # load 0xc753f05729ad11ba from memory into f7
fmadd.s f3, f10, f8, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x630fd65b02b26c29 # load x3 with value 0x630fd65b02b26c29
sw x3, 0(x2) # store 0x630fd65b02b26c29 in memory
flw f11, 0(x2) # load 0x630fd65b02b26c29 from memory into f11
la x2, scratch
li x3, 0x85ccc30c0e0fca26 # load x3 with value 0x85ccc30c0e0fca26
sw x3, 0(x2) # store 0x85ccc30c0e0fca26 in memory
flw f9, 0(x2) # load 0x85ccc30c0e0fca26 from memory into f9
la x2, scratch
li x3, 0xb9f5bfec56b6ed30 # load x3 with value 0xb9f5bfec56b6ed30
sw x3, 0(x2) # store 0xb9f5bfec56b6ed30 in memory
flw f20, 0(x2) # load 0xb9f5bfec56b6ed30 from memory into f20
fmadd.s f29, f11, f9, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0xe5844b05baa1de75 # load x3 with value 0xe5844b05baa1de75
sw x3, 0(x2) # store 0xe5844b05baa1de75 in memory
flw f12, 0(x2) # load 0xe5844b05baa1de75 from memory into f12
la x2, scratch
li x3, 0x821f13da15e778 # load x3 with value 0x821f13da15e778
sw x3, 0(x2) # store 0x821f13da15e778 in memory
flw f6, 0(x2) # load 0x821f13da15e778 from memory into f6
la x2, scratch
li x3, 0x24aa9dbefb29b137 # load x3 with value 0x24aa9dbefb29b137
sw x3, 0(x2) # store 0x24aa9dbefb29b137 in memory
flw f21, 0(x2) # load 0x24aa9dbefb29b137 from memory into f21
fmadd.s f28, f12, f6, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0x91b803268f8506b3 # load x3 with value 0x91b803268f8506b3
sw x3, 0(x2) # store 0x91b803268f8506b3 in memory
flw f13, 0(x2) # load 0x91b803268f8506b3 from memory into f13
la x2, scratch
li x3, 0xf4e88b8d0ef2da47 # load x3 with value 0xf4e88b8d0ef2da47
sw x3, 0(x2) # store 0xf4e88b8d0ef2da47 in memory
flw f22, 0(x2) # load 0xf4e88b8d0ef2da47 from memory into f22
la x2, scratch
li x3, 0x96945cef8cab84a0 # load x3 with value 0x96945cef8cab84a0
sw x3, 0(x2) # store 0x96945cef8cab84a0 in memory
flw f18, 0(x2) # load 0x96945cef8cab84a0 from memory into f18
fmadd.s f27, f13, f22, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0xb1d109e1a9aa50 # load x3 with value 0xb1d109e1a9aa50
sw x3, 0(x2) # store 0xb1d109e1a9aa50 in memory
flw f14, 0(x2) # load 0xb1d109e1a9aa50 from memory into f14
la x2, scratch
li x3, 0x370f8f1a577d1ae2 # load x3 with value 0x370f8f1a577d1ae2
sw x3, 0(x2) # store 0x370f8f1a577d1ae2 in memory
flw f15, 0(x2) # load 0x370f8f1a577d1ae2 from memory into f15
la x2, scratch
li x3, 0x71276bc48fc38ba8 # load x3 with value 0x71276bc48fc38ba8
sw x3, 0(x2) # store 0x71276bc48fc38ba8 in memory
flw f11, 0(x2) # load 0x71276bc48fc38ba8 from memory into f11
fmadd.s f8, f14, f15, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x7109084c1fd27037 # load x3 with value 0x7109084c1fd27037
sw x3, 0(x2) # store 0x7109084c1fd27037 in memory
flw f15, 0(x2) # load 0x7109084c1fd27037 from memory into f15
la x2, scratch
li x3, 0x42b5acf8a82edd9f # load x3 with value 0x42b5acf8a82edd9f
sw x3, 0(x2) # store 0x42b5acf8a82edd9f in memory
flw f29, 0(x2) # load 0x42b5acf8a82edd9f from memory into f29
la x2, scratch
li x3, 0xbe8b9e1f4b8f674a # load x3 with value 0xbe8b9e1f4b8f674a
sw x3, 0(x2) # store 0xbe8b9e1f4b8f674a in memory
flw f10, 0(x2) # load 0xbe8b9e1f4b8f674a from memory into f10
fmadd.s f28, f15, f29, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x3caa87a96283ac46 # load x3 with value 0x3caa87a96283ac46
sw x3, 0(x2) # store 0x3caa87a96283ac46 in memory
flw f16, 0(x2) # load 0x3caa87a96283ac46 from memory into f16
la x2, scratch
li x3, 0xd11a818ccc12a9ba # load x3 with value 0xd11a818ccc12a9ba
sw x3, 0(x2) # store 0xd11a818ccc12a9ba in memory
flw f7, 0(x2) # load 0xd11a818ccc12a9ba from memory into f7
la x2, scratch
li x3, 0xb59e821677fba8eb # load x3 with value 0xb59e821677fba8eb
sw x3, 0(x2) # store 0xb59e821677fba8eb in memory
flw f1, 0(x2) # load 0xb59e821677fba8eb from memory into f1
fmadd.s f15, f16, f7, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x422daf71246e5d2 # load x3 with value 0x422daf71246e5d2
sw x3, 0(x2) # store 0x422daf71246e5d2 in memory
flw f17, 0(x2) # load 0x422daf71246e5d2 from memory into f17
la x2, scratch
li x3, 0x9ead595d8974fe66 # load x3 with value 0x9ead595d8974fe66
sw x3, 0(x2) # store 0x9ead595d8974fe66 in memory
flw f6, 0(x2) # load 0x9ead595d8974fe66 from memory into f6
la x2, scratch
li x3, 0x84c99c826898b913 # load x3 with value 0x84c99c826898b913
sw x3, 0(x2) # store 0x84c99c826898b913 in memory
flw f21, 0(x2) # load 0x84c99c826898b913 from memory into f21
fmadd.s f8, f17, f6, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0x73fc5592dd130b44 # load x3 with value 0x73fc5592dd130b44
sw x3, 0(x2) # store 0x73fc5592dd130b44 in memory
flw f18, 0(x2) # load 0x73fc5592dd130b44 from memory into f18
la x2, scratch
li x3, 0xeb22a33010212850 # load x3 with value 0xeb22a33010212850
sw x3, 0(x2) # store 0xeb22a33010212850 in memory
flw f3, 0(x2) # load 0xeb22a33010212850 from memory into f3
la x2, scratch
li x3, 0x10b722b4d1091107 # load x3 with value 0x10b722b4d1091107
sw x3, 0(x2) # store 0x10b722b4d1091107 in memory
flw f5, 0(x2) # load 0x10b722b4d1091107 from memory into f5
fmadd.s f27, f18, f3, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0x2f9c628f6e6998dd # load x3 with value 0x2f9c628f6e6998dd
sw x3, 0(x2) # store 0x2f9c628f6e6998dd in memory
flw f19, 0(x2) # load 0x2f9c628f6e6998dd from memory into f19
la x2, scratch
li x3, 0x7281a77327e5e325 # load x3 with value 0x7281a77327e5e325
sw x3, 0(x2) # store 0x7281a77327e5e325 in memory
flw f28, 0(x2) # load 0x7281a77327e5e325 from memory into f28
la x2, scratch
li x3, 0xb8dbd090bcea27b7 # load x3 with value 0xb8dbd090bcea27b7
sw x3, 0(x2) # store 0xb8dbd090bcea27b7 in memory
flw f14, 0(x2) # load 0xb8dbd090bcea27b7 from memory into f14
fmadd.s f31, f19, f28, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xcd5bfa880d703f4a # load x3 with value 0xcd5bfa880d703f4a
sw x3, 0(x2) # store 0xcd5bfa880d703f4a in memory
flw f20, 0(x2) # load 0xcd5bfa880d703f4a from memory into f20
la x2, scratch
li x3, 0x37f6184065358eba # load x3 with value 0x37f6184065358eba
sw x3, 0(x2) # store 0x37f6184065358eba in memory
flw f28, 0(x2) # load 0x37f6184065358eba from memory into f28
la x2, scratch
li x3, 0xc7b86b8d11cc3d2d # load x3 with value 0xc7b86b8d11cc3d2d
sw x3, 0(x2) # store 0xc7b86b8d11cc3d2d in memory
flw f5, 0(x2) # load 0xc7b86b8d11cc3d2d from memory into f5
fmadd.s f11, f20, f28, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x641263805eac3def # load x3 with value 0x641263805eac3def
sw x3, 0(x2) # store 0x641263805eac3def in memory
flw f21, 0(x2) # load 0x641263805eac3def from memory into f21
la x2, scratch
li x3, 0x7dae791765950384 # load x3 with value 0x7dae791765950384
sw x3, 0(x2) # store 0x7dae791765950384 in memory
flw f1, 0(x2) # load 0x7dae791765950384 from memory into f1
la x2, scratch
li x3, 0xe474775652614c5 # load x3 with value 0xe474775652614c5
sw x3, 0(x2) # store 0xe474775652614c5 in memory
flw f28, 0(x2) # load 0xe474775652614c5 from memory into f28
fmadd.s f25, f21, f1, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0xaab167e688473fee # load x3 with value 0xaab167e688473fee
sw x3, 0(x2) # store 0xaab167e688473fee in memory
flw f22, 0(x2) # load 0xaab167e688473fee from memory into f22
la x2, scratch
li x3, 0x4f2956c091a29672 # load x3 with value 0x4f2956c091a29672
sw x3, 0(x2) # store 0x4f2956c091a29672 in memory
flw f10, 0(x2) # load 0x4f2956c091a29672 from memory into f10
la x2, scratch
li x3, 0xc23687cc0f2ae255 # load x3 with value 0xc23687cc0f2ae255
sw x3, 0(x2) # store 0xc23687cc0f2ae255 in memory
flw f16, 0(x2) # load 0xc23687cc0f2ae255 from memory into f16
fmadd.s f22, f22, f10, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x7d9154e04a48cb39 # load x3 with value 0x7d9154e04a48cb39
sw x3, 0(x2) # store 0x7d9154e04a48cb39 in memory
flw f23, 0(x2) # load 0x7d9154e04a48cb39 from memory into f23
la x2, scratch
li x3, 0x9cc448ff280dfe96 # load x3 with value 0x9cc448ff280dfe96
sw x3, 0(x2) # store 0x9cc448ff280dfe96 in memory
flw f20, 0(x2) # load 0x9cc448ff280dfe96 from memory into f20
la x2, scratch
li x3, 0xe02a77568beb7267 # load x3 with value 0xe02a77568beb7267
sw x3, 0(x2) # store 0xe02a77568beb7267 in memory
flw f25, 0(x2) # load 0xe02a77568beb7267 from memory into f25
fmadd.s f22, f23, f20, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0xf3f73fe9af076489 # load x3 with value 0xf3f73fe9af076489
sw x3, 0(x2) # store 0xf3f73fe9af076489 in memory
flw f24, 0(x2) # load 0xf3f73fe9af076489 from memory into f24
la x2, scratch
li x3, 0xa29c894b99f4d25f # load x3 with value 0xa29c894b99f4d25f
sw x3, 0(x2) # store 0xa29c894b99f4d25f in memory
flw f16, 0(x2) # load 0xa29c894b99f4d25f from memory into f16
la x2, scratch
li x3, 0xde2cf9f2ad4cec63 # load x3 with value 0xde2cf9f2ad4cec63
sw x3, 0(x2) # store 0xde2cf9f2ad4cec63 in memory
flw f25, 0(x2) # load 0xde2cf9f2ad4cec63 from memory into f25
fmadd.s f19, f24, f16, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x7a96bb341a2d135f # load x3 with value 0x7a96bb341a2d135f
sw x3, 0(x2) # store 0x7a96bb341a2d135f in memory
flw f25, 0(x2) # load 0x7a96bb341a2d135f from memory into f25
la x2, scratch
li x3, 0x29cf258692cfc147 # load x3 with value 0x29cf258692cfc147
sw x3, 0(x2) # store 0x29cf258692cfc147 in memory
flw f16, 0(x2) # load 0x29cf258692cfc147 from memory into f16
la x2, scratch
li x3, 0x1f3aef7686724bab # load x3 with value 0x1f3aef7686724bab
sw x3, 0(x2) # store 0x1f3aef7686724bab in memory
flw f15, 0(x2) # load 0x1f3aef7686724bab from memory into f15
fmadd.s f6, f25, f16, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0xc38ef3861bca5c9e # load x3 with value 0xc38ef3861bca5c9e
sw x3, 0(x2) # store 0xc38ef3861bca5c9e in memory
flw f26, 0(x2) # load 0xc38ef3861bca5c9e from memory into f26
la x2, scratch
li x3, 0xdac8986a87fbcd28 # load x3 with value 0xdac8986a87fbcd28
sw x3, 0(x2) # store 0xdac8986a87fbcd28 in memory
flw f17, 0(x2) # load 0xdac8986a87fbcd28 from memory into f17
la x2, scratch
li x3, 0xf3bc8f766d0cf01c # load x3 with value 0xf3bc8f766d0cf01c
sw x3, 0(x2) # store 0xf3bc8f766d0cf01c in memory
flw f1, 0(x2) # load 0xf3bc8f766d0cf01c from memory into f1
fmadd.s f5, f26, f17, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x4a3616449ba56a59 # load x3 with value 0x4a3616449ba56a59
sw x3, 0(x2) # store 0x4a3616449ba56a59 in memory
flw f27, 0(x2) # load 0x4a3616449ba56a59 from memory into f27
la x2, scratch
li x3, 0xdd90c794eaeaa663 # load x3 with value 0xdd90c794eaeaa663
sw x3, 0(x2) # store 0xdd90c794eaeaa663 in memory
flw f29, 0(x2) # load 0xdd90c794eaeaa663 from memory into f29
la x2, scratch
li x3, 0x65e1f9559038e052 # load x3 with value 0x65e1f9559038e052
sw x3, 0(x2) # store 0x65e1f9559038e052 in memory
flw f16, 0(x2) # load 0x65e1f9559038e052 from memory into f16
fmadd.s f11, f27, f29, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0x3117bca4824705e7 # load x3 with value 0x3117bca4824705e7
sw x3, 0(x2) # store 0x3117bca4824705e7 in memory
flw f28, 0(x2) # load 0x3117bca4824705e7 from memory into f28
la x2, scratch
li x3, 0x6f0184c56828b514 # load x3 with value 0x6f0184c56828b514
sw x3, 0(x2) # store 0x6f0184c56828b514 in memory
flw f21, 0(x2) # load 0x6f0184c56828b514 from memory into f21
la x2, scratch
li x3, 0x8edd195bd3f8b3c0 # load x3 with value 0x8edd195bd3f8b3c0
sw x3, 0(x2) # store 0x8edd195bd3f8b3c0 in memory
flw f13, 0(x2) # load 0x8edd195bd3f8b3c0 from memory into f13
fmadd.s f6, f28, f21, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0x1194930b475fcf52 # load x3 with value 0x1194930b475fcf52
sw x3, 0(x2) # store 0x1194930b475fcf52 in memory
flw f29, 0(x2) # load 0x1194930b475fcf52 from memory into f29
la x2, scratch
li x3, 0xc7de8550d57573ed # load x3 with value 0xc7de8550d57573ed
sw x3, 0(x2) # store 0xc7de8550d57573ed in memory
flw f30, 0(x2) # load 0xc7de8550d57573ed from memory into f30
la x2, scratch
li x3, 0xe9b86c8bc3ed00f4 # load x3 with value 0xe9b86c8bc3ed00f4
sw x3, 0(x2) # store 0xe9b86c8bc3ed00f4 in memory
flw f5, 0(x2) # load 0xe9b86c8bc3ed00f4 from memory into f5
fmadd.s f23, f29, f30, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0xd6c929fbff51afe8 # load x3 with value 0xd6c929fbff51afe8
sw x3, 0(x2) # store 0xd6c929fbff51afe8 in memory
flw f30, 0(x2) # load 0xd6c929fbff51afe8 from memory into f30
la x2, scratch
li x3, 0x3baa5ec1464164cd # load x3 with value 0x3baa5ec1464164cd
sw x3, 0(x2) # store 0x3baa5ec1464164cd in memory
flw f28, 0(x2) # load 0x3baa5ec1464164cd from memory into f28
la x2, scratch
li x3, 0xd72c51bad230c9d6 # load x3 with value 0xd72c51bad230c9d6
sw x3, 0(x2) # store 0xd72c51bad230c9d6 in memory
flw f23, 0(x2) # load 0xd72c51bad230c9d6 from memory into f23
fmadd.s f13, f30, f28, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xa6671da850fe65f8 # load x3 with value 0xa6671da850fe65f8
sw x3, 0(x2) # store 0xa6671da850fe65f8 in memory
flw f31, 0(x2) # load 0xa6671da850fe65f8 from memory into f31
la x2, scratch
li x3, 0x95a141439cd1cc76 # load x3 with value 0x95a141439cd1cc76
sw x3, 0(x2) # store 0x95a141439cd1cc76 in memory
flw f5, 0(x2) # load 0x95a141439cd1cc76 from memory into f5
la x2, scratch
li x3, 0x89878e235bc3c06b # load x3 with value 0x89878e235bc3c06b
sw x3, 0(x2) # store 0x89878e235bc3c06b in memory
flw f11, 0(x2) # load 0x89878e235bc3c06b from memory into f11
fmadd.s f21, f31, f5, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x45e554d959edb8ae # load x3 with value 0x45e554d959edb8ae
sw x3, 0(x2) # store 0x45e554d959edb8ae in memory
flw f2, 0(x2) # load 0x45e554d959edb8ae from memory into f2
la x2, scratch
li x3, 0x719e019dc7fe38c9 # load x3 with value 0x719e019dc7fe38c9
sw x3, 0(x2) # store 0x719e019dc7fe38c9 in memory
flw f0, 0(x2) # load 0x719e019dc7fe38c9 from memory into f0
la x2, scratch
li x3, 0x5a6892a98d42fa28 # load x3 with value 0x5a6892a98d42fa28
sw x3, 0(x2) # store 0x5a6892a98d42fa28 in memory
flw f23, 0(x2) # load 0x5a6892a98d42fa28 from memory into f23
fmadd.s f19, f2, f0, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x5a0c502de146d3af # load x3 with value 0x5a0c502de146d3af
sw x3, 0(x2) # store 0x5a0c502de146d3af in memory
flw f3, 0(x2) # load 0x5a0c502de146d3af from memory into f3
la x2, scratch
li x3, 0xe1ebedc35348e80 # load x3 with value 0xe1ebedc35348e80
sw x3, 0(x2) # store 0xe1ebedc35348e80 in memory
flw f1, 0(x2) # load 0xe1ebedc35348e80 from memory into f1
la x2, scratch
li x3, 0xb79ab863e598b121 # load x3 with value 0xb79ab863e598b121
sw x3, 0(x2) # store 0xb79ab863e598b121 in memory
flw f5, 0(x2) # load 0xb79ab863e598b121 from memory into f5
fmadd.s f15, f3, f1, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x474d2c03977a42df # load x3 with value 0x474d2c03977a42df
sw x3, 0(x2) # store 0x474d2c03977a42df in memory
flw f14, 0(x2) # load 0x474d2c03977a42df from memory into f14
la x2, scratch
li x3, 0x65a589305a320bfc # load x3 with value 0x65a589305a320bfc
sw x3, 0(x2) # store 0x65a589305a320bfc in memory
flw f2, 0(x2) # load 0x65a589305a320bfc from memory into f2
la x2, scratch
li x3, 0x7e6d2b2904e0ef6c # load x3 with value 0x7e6d2b2904e0ef6c
sw x3, 0(x2) # store 0x7e6d2b2904e0ef6c in memory
flw f1, 0(x2) # load 0x7e6d2b2904e0ef6c from memory into f1
fmadd.s f26, f14, f2, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x1b97b02e493881bc # load x3 with value 0x1b97b02e493881bc
sw x3, 0(x2) # store 0x1b97b02e493881bc in memory
flw f24, 0(x2) # load 0x1b97b02e493881bc from memory into f24
la x2, scratch
li x3, 0xe93ec27dc5a6665e # load x3 with value 0xe93ec27dc5a6665e
sw x3, 0(x2) # store 0xe93ec27dc5a6665e in memory
flw f3, 0(x2) # load 0xe93ec27dc5a6665e from memory into f3
la x2, scratch
li x3, 0xfa4a8b45a7c7dd6e # load x3 with value 0xfa4a8b45a7c7dd6e
sw x3, 0(x2) # store 0xfa4a8b45a7c7dd6e in memory
flw f30, 0(x2) # load 0xfa4a8b45a7c7dd6e from memory into f30
fmadd.s f5, f24, f3, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x656fe3399334a5af # load x3 with value 0x656fe3399334a5af
sw x3, 0(x2) # store 0x656fe3399334a5af in memory
flw f25, 0(x2) # load 0x656fe3399334a5af from memory into f25
la x2, scratch
li x3, 0xb45570412fecddbc # load x3 with value 0xb45570412fecddbc
sw x3, 0(x2) # store 0xb45570412fecddbc in memory
flw f4, 0(x2) # load 0xb45570412fecddbc from memory into f4
la x2, scratch
li x3, 0x7676a24d36f15ae # load x3 with value 0x7676a24d36f15ae
sw x3, 0(x2) # store 0x7676a24d36f15ae in memory
flw f5, 0(x2) # load 0x7676a24d36f15ae from memory into f5
fmadd.s f27, f25, f4, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x11be877f0441e4f7 # load x3 with value 0x11be877f0441e4f7
sw x3, 0(x2) # store 0x11be877f0441e4f7 in memory
flw f13, 0(x2) # load 0x11be877f0441e4f7 from memory into f13
la x2, scratch
li x3, 0xc5e96c6d4e3344dd # load x3 with value 0xc5e96c6d4e3344dd
sw x3, 0(x2) # store 0xc5e96c6d4e3344dd in memory
flw f5, 0(x2) # load 0xc5e96c6d4e3344dd from memory into f5
la x2, scratch
li x3, 0x8bf4418fd4de83a2 # load x3 with value 0x8bf4418fd4de83a2
sw x3, 0(x2) # store 0x8bf4418fd4de83a2 in memory
flw f11, 0(x2) # load 0x8bf4418fd4de83a2 from memory into f11
fmadd.s f31, f13, f5, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3bf7c1d2e71fc1c7 # load x3 with value 0x3bf7c1d2e71fc1c7
sw x3, 0(x2) # store 0x3bf7c1d2e71fc1c7 in memory
flw f19, 0(x2) # load 0x3bf7c1d2e71fc1c7 from memory into f19
la x2, scratch
li x3, 0x7ea0794a60e8978 # load x3 with value 0x7ea0794a60e8978
sw x3, 0(x2) # store 0x7ea0794a60e8978 in memory
flw f6, 0(x2) # load 0x7ea0794a60e8978 from memory into f6
la x2, scratch
li x3, 0x166cdeda146fb2c4 # load x3 with value 0x166cdeda146fb2c4
sw x3, 0(x2) # store 0x166cdeda146fb2c4 in memory
flw f1, 0(x2) # load 0x166cdeda146fb2c4 from memory into f1
fmadd.s f13, f19, f6, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x69091454c0bcbec5 # load x3 with value 0x69091454c0bcbec5
sw x3, 0(x2) # store 0x69091454c0bcbec5 in memory
flw f8, 0(x2) # load 0x69091454c0bcbec5 from memory into f8
la x2, scratch
li x3, 0x825e5fad5210c943 # load x3 with value 0x825e5fad5210c943
sw x3, 0(x2) # store 0x825e5fad5210c943 in memory
flw f7, 0(x2) # load 0x825e5fad5210c943 from memory into f7
la x2, scratch
li x3, 0x2c4f42004716e4b7 # load x3 with value 0x2c4f42004716e4b7
sw x3, 0(x2) # store 0x2c4f42004716e4b7 in memory
flw f3, 0(x2) # load 0x2c4f42004716e4b7 from memory into f3
fmadd.s f13, f8, f7, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0x88cf60372935eaa7 # load x3 with value 0x88cf60372935eaa7
sw x3, 0(x2) # store 0x88cf60372935eaa7 in memory
flw f13, 0(x2) # load 0x88cf60372935eaa7 from memory into f13
la x2, scratch
li x3, 0x14011eff7134e0fb # load x3 with value 0x14011eff7134e0fb
sw x3, 0(x2) # store 0x14011eff7134e0fb in memory
flw f8, 0(x2) # load 0x14011eff7134e0fb from memory into f8
la x2, scratch
li x3, 0x49ba9bbd86f6c6a7 # load x3 with value 0x49ba9bbd86f6c6a7
sw x3, 0(x2) # store 0x49ba9bbd86f6c6a7 in memory
flw f15, 0(x2) # load 0x49ba9bbd86f6c6a7 from memory into f15
fmadd.s f1, f13, f8, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xaef112502dfa948e # load x3 with value 0xaef112502dfa948e
sw x3, 0(x2) # store 0xaef112502dfa948e in memory
flw f13, 0(x2) # load 0xaef112502dfa948e from memory into f13
la x2, scratch
li x3, 0x39e7c9017a4d7f29 # load x3 with value 0x39e7c9017a4d7f29
sw x3, 0(x2) # store 0x39e7c9017a4d7f29 in memory
flw f9, 0(x2) # load 0x39e7c9017a4d7f29 from memory into f9
la x2, scratch
li x3, 0x192ba305ac5ff868 # load x3 with value 0x192ba305ac5ff868
sw x3, 0(x2) # store 0x192ba305ac5ff868 in memory
flw f16, 0(x2) # load 0x192ba305ac5ff868 from memory into f16
fmadd.s f30, f13, f9, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0xb32d3c9d3330f044 # load x3 with value 0xb32d3c9d3330f044
sw x3, 0(x2) # store 0xb32d3c9d3330f044 in memory
flw f12, 0(x2) # load 0xb32d3c9d3330f044 from memory into f12
la x2, scratch
li x3, 0xd76c0e0d80639455 # load x3 with value 0xd76c0e0d80639455
sw x3, 0(x2) # store 0xd76c0e0d80639455 in memory
flw f10, 0(x2) # load 0xd76c0e0d80639455 from memory into f10
la x2, scratch
li x3, 0xa33e6c1df45185ae # load x3 with value 0xa33e6c1df45185ae
sw x3, 0(x2) # store 0xa33e6c1df45185ae in memory
flw f7, 0(x2) # load 0xa33e6c1df45185ae from memory into f7
fmadd.s f2, f12, f10, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0xef440fc1f2676fb6 # load x3 with value 0xef440fc1f2676fb6
sw x3, 0(x2) # store 0xef440fc1f2676fb6 in memory
flw f17, 0(x2) # load 0xef440fc1f2676fb6 from memory into f17
la x2, scratch
li x3, 0x69a35be64204498f # load x3 with value 0x69a35be64204498f
sw x3, 0(x2) # store 0x69a35be64204498f in memory
flw f11, 0(x2) # load 0x69a35be64204498f from memory into f11
la x2, scratch
li x3, 0xed2d47eb8f8521ee # load x3 with value 0xed2d47eb8f8521ee
sw x3, 0(x2) # store 0xed2d47eb8f8521ee in memory
flw f9, 0(x2) # load 0xed2d47eb8f8521ee from memory into f9
fmadd.s f14, f17, f11, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0xc0120f862eb76ed6 # load x3 with value 0xc0120f862eb76ed6
sw x3, 0(x2) # store 0xc0120f862eb76ed6 in memory
flw f19, 0(x2) # load 0xc0120f862eb76ed6 from memory into f19
la x2, scratch
li x3, 0x4cbe49b2ba56d829 # load x3 with value 0x4cbe49b2ba56d829
sw x3, 0(x2) # store 0x4cbe49b2ba56d829 in memory
flw f12, 0(x2) # load 0x4cbe49b2ba56d829 from memory into f12
la x2, scratch
li x3, 0xb030a0ce6cd0f9ee # load x3 with value 0xb030a0ce6cd0f9ee
sw x3, 0(x2) # store 0xb030a0ce6cd0f9ee in memory
flw f6, 0(x2) # load 0xb030a0ce6cd0f9ee from memory into f6
fmadd.s f8, f19, f12, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x29ef569648ed2580 # load x3 with value 0x29ef569648ed2580
sw x3, 0(x2) # store 0x29ef569648ed2580 in memory
flw f26, 0(x2) # load 0x29ef569648ed2580 from memory into f26
la x2, scratch
li x3, 0x4068f497ea251c16 # load x3 with value 0x4068f497ea251c16
sw x3, 0(x2) # store 0x4068f497ea251c16 in memory
flw f13, 0(x2) # load 0x4068f497ea251c16 from memory into f13
la x2, scratch
li x3, 0x680af34950431ba3 # load x3 with value 0x680af34950431ba3
sw x3, 0(x2) # store 0x680af34950431ba3 in memory
flw f16, 0(x2) # load 0x680af34950431ba3 from memory into f16
fmadd.s f1, f26, f13, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0xd58c42119c9a023f # load x3 with value 0xd58c42119c9a023f
sw x3, 0(x2) # store 0xd58c42119c9a023f in memory
flw f16, 0(x2) # load 0xd58c42119c9a023f from memory into f16
la x2, scratch
li x3, 0x1f5a7b9dc5b75647 # load x3 with value 0x1f5a7b9dc5b75647
sw x3, 0(x2) # store 0x1f5a7b9dc5b75647 in memory
flw f14, 0(x2) # load 0x1f5a7b9dc5b75647 from memory into f14
la x2, scratch
li x3, 0x7df529cac3938795 # load x3 with value 0x7df529cac3938795
sw x3, 0(x2) # store 0x7df529cac3938795 in memory
flw f6, 0(x2) # load 0x7df529cac3938795 from memory into f6
fmadd.s f8, f16, f14, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x14a98b5ddf2c7098 # load x3 with value 0x14a98b5ddf2c7098
sw x3, 0(x2) # store 0x14a98b5ddf2c7098 in memory
flw f23, 0(x2) # load 0x14a98b5ddf2c7098 from memory into f23
la x2, scratch
li x3, 0x6c6f47a61ca92cc1 # load x3 with value 0x6c6f47a61ca92cc1
sw x3, 0(x2) # store 0x6c6f47a61ca92cc1 in memory
flw f15, 0(x2) # load 0x6c6f47a61ca92cc1 from memory into f15
la x2, scratch
li x3, 0x47f8fcbfbc6c4d02 # load x3 with value 0x47f8fcbfbc6c4d02
sw x3, 0(x2) # store 0x47f8fcbfbc6c4d02 in memory
flw f16, 0(x2) # load 0x47f8fcbfbc6c4d02 from memory into f16
fmadd.s f5, f23, f15, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x7dd3bdd06b5511d8 # load x3 with value 0x7dd3bdd06b5511d8
sw x3, 0(x2) # store 0x7dd3bdd06b5511d8 in memory
flw f10, 0(x2) # load 0x7dd3bdd06b5511d8 from memory into f10
la x2, scratch
li x3, 0xfed1303431a4df1f # load x3 with value 0xfed1303431a4df1f
sw x3, 0(x2) # store 0xfed1303431a4df1f in memory
flw f16, 0(x2) # load 0xfed1303431a4df1f from memory into f16
la x2, scratch
li x3, 0xc9048f0486bbde17 # load x3 with value 0xc9048f0486bbde17
sw x3, 0(x2) # store 0xc9048f0486bbde17 in memory
flw f24, 0(x2) # load 0xc9048f0486bbde17 from memory into f24
fmadd.s f8, f10, f16, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x2098cad840d73e98 # load x3 with value 0x2098cad840d73e98
sw x3, 0(x2) # store 0x2098cad840d73e98 in memory
flw f29, 0(x2) # load 0x2098cad840d73e98 from memory into f29
la x2, scratch
li x3, 0xa10e652cee58bbfd # load x3 with value 0xa10e652cee58bbfd
sw x3, 0(x2) # store 0xa10e652cee58bbfd in memory
flw f17, 0(x2) # load 0xa10e652cee58bbfd from memory into f17
la x2, scratch
li x3, 0x70bd1abac9afc4bf # load x3 with value 0x70bd1abac9afc4bf
sw x3, 0(x2) # store 0x70bd1abac9afc4bf in memory
flw f5, 0(x2) # load 0x70bd1abac9afc4bf from memory into f5
fmadd.s f1, f29, f17, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x1cfcff1c4f08716b # load x3 with value 0x1cfcff1c4f08716b
sw x3, 0(x2) # store 0x1cfcff1c4f08716b in memory
flw f15, 0(x2) # load 0x1cfcff1c4f08716b from memory into f15
la x2, scratch
li x3, 0xcf2e91a5b31a3a6 # load x3 with value 0xcf2e91a5b31a3a6
sw x3, 0(x2) # store 0xcf2e91a5b31a3a6 in memory
flw f18, 0(x2) # load 0xcf2e91a5b31a3a6 from memory into f18
la x2, scratch
li x3, 0xc08e9dbcf16ab47 # load x3 with value 0xc08e9dbcf16ab47
sw x3, 0(x2) # store 0xc08e9dbcf16ab47 in memory
flw f29, 0(x2) # load 0xc08e9dbcf16ab47 from memory into f29
fmadd.s f12, f15, f18, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x18eaeb9386117a85 # load x3 with value 0x18eaeb9386117a85
sw x3, 0(x2) # store 0x18eaeb9386117a85 in memory
flw f24, 0(x2) # load 0x18eaeb9386117a85 from memory into f24
la x2, scratch
li x3, 0x14ab7221f1ed2a35 # load x3 with value 0x14ab7221f1ed2a35
sw x3, 0(x2) # store 0x14ab7221f1ed2a35 in memory
flw f19, 0(x2) # load 0x14ab7221f1ed2a35 from memory into f19
la x2, scratch
li x3, 0x8818b1707c6c3471 # load x3 with value 0x8818b1707c6c3471
sw x3, 0(x2) # store 0x8818b1707c6c3471 in memory
flw f14, 0(x2) # load 0x8818b1707c6c3471 from memory into f14
fmadd.s f28, f24, f19, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x8cd65da2da1c48de # load x3 with value 0x8cd65da2da1c48de
sw x3, 0(x2) # store 0x8cd65da2da1c48de in memory
flw f26, 0(x2) # load 0x8cd65da2da1c48de from memory into f26
la x2, scratch
li x3, 0x621902c2074b74af # load x3 with value 0x621902c2074b74af
sw x3, 0(x2) # store 0x621902c2074b74af in memory
flw f20, 0(x2) # load 0x621902c2074b74af from memory into f20
la x2, scratch
li x3, 0x54bb920560463b18 # load x3 with value 0x54bb920560463b18
sw x3, 0(x2) # store 0x54bb920560463b18 in memory
flw f18, 0(x2) # load 0x54bb920560463b18 from memory into f18
fmadd.s f22, f26, f20, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0xa0bbf742797da3d3 # load x3 with value 0xa0bbf742797da3d3
sw x3, 0(x2) # store 0xa0bbf742797da3d3 in memory
flw f12, 0(x2) # load 0xa0bbf742797da3d3 from memory into f12
la x2, scratch
li x3, 0x4fe83c557c99ee51 # load x3 with value 0x4fe83c557c99ee51
sw x3, 0(x2) # store 0x4fe83c557c99ee51 in memory
flw f21, 0(x2) # load 0x4fe83c557c99ee51 from memory into f21
la x2, scratch
li x3, 0xd7a579d27a57c70a # load x3 with value 0xd7a579d27a57c70a
sw x3, 0(x2) # store 0xd7a579d27a57c70a in memory
flw f14, 0(x2) # load 0xd7a579d27a57c70a from memory into f14
fmadd.s f19, f12, f21, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0xf53abd957d110f9a # load x3 with value 0xf53abd957d110f9a
sw x3, 0(x2) # store 0xf53abd957d110f9a in memory
flw f19, 0(x2) # load 0xf53abd957d110f9a from memory into f19
la x2, scratch
li x3, 0x83ce525dc455ac56 # load x3 with value 0x83ce525dc455ac56
sw x3, 0(x2) # store 0x83ce525dc455ac56 in memory
flw f22, 0(x2) # load 0x83ce525dc455ac56 from memory into f22
la x2, scratch
li x3, 0xa192a3a0e3676ccd # load x3 with value 0xa192a3a0e3676ccd
sw x3, 0(x2) # store 0xa192a3a0e3676ccd in memory
flw f9, 0(x2) # load 0xa192a3a0e3676ccd from memory into f9
fmadd.s f11, f19, f22, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0xed53f88b97f5cc28 # load x3 with value 0xed53f88b97f5cc28
sw x3, 0(x2) # store 0xed53f88b97f5cc28 in memory
flw f17, 0(x2) # load 0xed53f88b97f5cc28 from memory into f17
la x2, scratch
li x3, 0xccf488ad532af5dc # load x3 with value 0xccf488ad532af5dc
sw x3, 0(x2) # store 0xccf488ad532af5dc in memory
flw f23, 0(x2) # load 0xccf488ad532af5dc from memory into f23
la x2, scratch
li x3, 0x8320e55f335ef2d2 # load x3 with value 0x8320e55f335ef2d2
sw x3, 0(x2) # store 0x8320e55f335ef2d2 in memory
flw f24, 0(x2) # load 0x8320e55f335ef2d2 from memory into f24
fmadd.s f8, f17, f23, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0x2e45d6bf2bbd8dc3 # load x3 with value 0x2e45d6bf2bbd8dc3
sw x3, 0(x2) # store 0x2e45d6bf2bbd8dc3 in memory
flw f1, 0(x2) # load 0x2e45d6bf2bbd8dc3 from memory into f1
la x2, scratch
li x3, 0xc0c7280a44fa3380 # load x3 with value 0xc0c7280a44fa3380
sw x3, 0(x2) # store 0xc0c7280a44fa3380 in memory
flw f24, 0(x2) # load 0xc0c7280a44fa3380 from memory into f24
la x2, scratch
li x3, 0x4677748482097a88 # load x3 with value 0x4677748482097a88
sw x3, 0(x2) # store 0x4677748482097a88 in memory
flw f5, 0(x2) # load 0x4677748482097a88 from memory into f5
fmadd.s f9, f1, f24, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0xc339dca3d87442ad # load x3 with value 0xc339dca3d87442ad
sw x3, 0(x2) # store 0xc339dca3d87442ad in memory
flw f2, 0(x2) # load 0xc339dca3d87442ad from memory into f2
la x2, scratch
li x3, 0x3473ead3c12a45e4 # load x3 with value 0x3473ead3c12a45e4
sw x3, 0(x2) # store 0x3473ead3c12a45e4 in memory
flw f25, 0(x2) # load 0x3473ead3c12a45e4 from memory into f25
la x2, scratch
li x3, 0x4be04672cf022f0 # load x3 with value 0x4be04672cf022f0
sw x3, 0(x2) # store 0x4be04672cf022f0 in memory
flw f10, 0(x2) # load 0x4be04672cf022f0 from memory into f10
fmadd.s f3, f2, f25, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x78eea8cb741d2533 # load x3 with value 0x78eea8cb741d2533
sw x3, 0(x2) # store 0x78eea8cb741d2533 in memory
flw f5, 0(x2) # load 0x78eea8cb741d2533 from memory into f5
la x2, scratch
li x3, 0x46b599b3377e9a34 # load x3 with value 0x46b599b3377e9a34
sw x3, 0(x2) # store 0x46b599b3377e9a34 in memory
flw f26, 0(x2) # load 0x46b599b3377e9a34 from memory into f26
la x2, scratch
li x3, 0xedf0f537e6d84928 # load x3 with value 0xedf0f537e6d84928
sw x3, 0(x2) # store 0xedf0f537e6d84928 in memory
flw f16, 0(x2) # load 0xedf0f537e6d84928 from memory into f16
fmadd.s f14, f5, f26, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x2213598b1cddbec0 # load x3 with value 0x2213598b1cddbec0
sw x3, 0(x2) # store 0x2213598b1cddbec0 in memory
flw f2, 0(x2) # load 0x2213598b1cddbec0 from memory into f2
la x2, scratch
li x3, 0x241aa44931ac6348 # load x3 with value 0x241aa44931ac6348
sw x3, 0(x2) # store 0x241aa44931ac6348 in memory
flw f27, 0(x2) # load 0x241aa44931ac6348 from memory into f27
la x2, scratch
li x3, 0xfcaa388ec5d25349 # load x3 with value 0xfcaa388ec5d25349
sw x3, 0(x2) # store 0xfcaa388ec5d25349 in memory
flw f14, 0(x2) # load 0xfcaa388ec5d25349 from memory into f14
fmadd.s f30, f2, f27, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x36184862f7fe8af2 # load x3 with value 0x36184862f7fe8af2
sw x3, 0(x2) # store 0x36184862f7fe8af2 in memory
flw f3, 0(x2) # load 0x36184862f7fe8af2 from memory into f3
la x2, scratch
li x3, 0xc5b353ce8941b4c8 # load x3 with value 0xc5b353ce8941b4c8
sw x3, 0(x2) # store 0xc5b353ce8941b4c8 in memory
flw f28, 0(x2) # load 0xc5b353ce8941b4c8 from memory into f28
la x2, scratch
li x3, 0x483dc779d11a3741 # load x3 with value 0x483dc779d11a3741
sw x3, 0(x2) # store 0x483dc779d11a3741 in memory
flw f26, 0(x2) # load 0x483dc779d11a3741 from memory into f26
fmadd.s f6, f3, f28, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0xad7b52f4b855b0e8 # load x3 with value 0xad7b52f4b855b0e8
sw x3, 0(x2) # store 0xad7b52f4b855b0e8 in memory
flw f16, 0(x2) # load 0xad7b52f4b855b0e8 from memory into f16
la x2, scratch
li x3, 0x550d2a2a55071d35 # load x3 with value 0x550d2a2a55071d35
sw x3, 0(x2) # store 0x550d2a2a55071d35 in memory
flw f29, 0(x2) # load 0x550d2a2a55071d35 from memory into f29
la x2, scratch
li x3, 0xe875a6eafbaf2f97 # load x3 with value 0xe875a6eafbaf2f97
sw x3, 0(x2) # store 0xe875a6eafbaf2f97 in memory
flw f11, 0(x2) # load 0xe875a6eafbaf2f97 from memory into f11
fmadd.s f15, f16, f29, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x1a8741b7ae84dfd4 # load x3 with value 0x1a8741b7ae84dfd4
sw x3, 0(x2) # store 0x1a8741b7ae84dfd4 in memory
flw f29, 0(x2) # load 0x1a8741b7ae84dfd4 from memory into f29
la x2, scratch
li x3, 0x4ec4688ce4f1e890 # load x3 with value 0x4ec4688ce4f1e890
sw x3, 0(x2) # store 0x4ec4688ce4f1e890 in memory
flw f30, 0(x2) # load 0x4ec4688ce4f1e890 from memory into f30
la x2, scratch
li x3, 0xe5ec37bfe11ad5a0 # load x3 with value 0xe5ec37bfe11ad5a0
sw x3, 0(x2) # store 0xe5ec37bfe11ad5a0 in memory
flw f20, 0(x2) # load 0xe5ec37bfe11ad5a0 from memory into f20
fmadd.s f6, f29, f30, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x9eff77a2a6760433 # load x3 with value 0x9eff77a2a6760433
sw x3, 0(x2) # store 0x9eff77a2a6760433 in memory
flw f2, 0(x2) # load 0x9eff77a2a6760433 from memory into f2
la x2, scratch
li x3, 0x6a83cc9397a779ae # load x3 with value 0x6a83cc9397a779ae
sw x3, 0(x2) # store 0x6a83cc9397a779ae in memory
flw f31, 0(x2) # load 0x6a83cc9397a779ae from memory into f31
la x2, scratch
li x3, 0x7ccbe68ffb170a68 # load x3 with value 0x7ccbe68ffb170a68
sw x3, 0(x2) # store 0x7ccbe68ffb170a68 in memory
flw f26, 0(x2) # load 0x7ccbe68ffb170a68 from memory into f26
fmadd.s f15, f2, f31, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x134309d04ee3491e # load x3 with value 0x134309d04ee3491e
sw x3, 0(x2) # store 0x134309d04ee3491e in memory
flw f29, 0(x2) # load 0x134309d04ee3491e from memory into f29
la x2, scratch
li x3, 0xac6c35b3377668f5 # load x3 with value 0xac6c35b3377668f5
sw x3, 0(x2) # store 0xac6c35b3377668f5 in memory
flw f1, 0(x2) # load 0xac6c35b3377668f5 from memory into f1
la x2, scratch
li x3, 0x2cd8b22ea2159fa9 # load x3 with value 0x2cd8b22ea2159fa9
sw x3, 0(x2) # store 0x2cd8b22ea2159fa9 in memory
flw f0, 0(x2) # load 0x2cd8b22ea2159fa9 from memory into f0
fmadd.s f3, f29, f1, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0xbbfffc0ca8d679b4 # load x3 with value 0xbbfffc0ca8d679b4
sw x3, 0(x2) # store 0xbbfffc0ca8d679b4 in memory
flw f23, 0(x2) # load 0xbbfffc0ca8d679b4 from memory into f23
la x2, scratch
li x3, 0xc92b2de07e06e6e # load x3 with value 0xc92b2de07e06e6e
sw x3, 0(x2) # store 0xc92b2de07e06e6e in memory
flw f8, 0(x2) # load 0xc92b2de07e06e6e from memory into f8
la x2, scratch
li x3, 0x812b5e5873933ee4 # load x3 with value 0x812b5e5873933ee4
sw x3, 0(x2) # store 0x812b5e5873933ee4 in memory
flw f1, 0(x2) # load 0x812b5e5873933ee4 from memory into f1
fmadd.s f3, f23, f8, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xaabb12f3ffb309fb # load x3 with value 0xaabb12f3ffb309fb
sw x3, 0(x2) # store 0xaabb12f3ffb309fb in memory
flw f25, 0(x2) # load 0xaabb12f3ffb309fb from memory into f25
la x2, scratch
li x3, 0x608ad48c35b70138 # load x3 with value 0x608ad48c35b70138
sw x3, 0(x2) # store 0x608ad48c35b70138 in memory
flw f28, 0(x2) # load 0x608ad48c35b70138 from memory into f28
la x2, scratch
li x3, 0xf16c3134f497071d # load x3 with value 0xf16c3134f497071d
sw x3, 0(x2) # store 0xf16c3134f497071d in memory
flw f2, 0(x2) # load 0xf16c3134f497071d from memory into f2
fmadd.s f9, f25, f28, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0x92e1ca349f63501a # load x3 with value 0x92e1ca349f63501a
sw x3, 0(x2) # store 0x92e1ca349f63501a in memory
flw f22, 0(x2) # load 0x92e1ca349f63501a from memory into f22
la x2, scratch
li x3, 0xed0b6fa38da169fa # load x3 with value 0xed0b6fa38da169fa
sw x3, 0(x2) # store 0xed0b6fa38da169fa in memory
flw f31, 0(x2) # load 0xed0b6fa38da169fa from memory into f31
la x2, scratch
li x3, 0x342bdb34555e52af # load x3 with value 0x342bdb34555e52af
sw x3, 0(x2) # store 0x342bdb34555e52af in memory
flw f3, 0(x2) # load 0x342bdb34555e52af from memory into f3
fmadd.s f30, f22, f31, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0xa7b2a1b115b74d83 # load x3 with value 0xa7b2a1b115b74d83
sw x3, 0(x2) # store 0xa7b2a1b115b74d83 in memory
flw f16, 0(x2) # load 0xa7b2a1b115b74d83 from memory into f16
la x2, scratch
li x3, 0x823639ad611811a0 # load x3 with value 0x823639ad611811a0
sw x3, 0(x2) # store 0x823639ad611811a0 in memory
flw f1, 0(x2) # load 0x823639ad611811a0 from memory into f1
la x2, scratch
li x3, 0x698a062619c32f7 # load x3 with value 0x698a062619c32f7
sw x3, 0(x2) # store 0x698a062619c32f7 in memory
flw f4, 0(x2) # load 0x698a062619c32f7 from memory into f4
fmadd.s f21, f16, f1, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0xc6421255661e0c47 # load x3 with value 0xc6421255661e0c47
sw x3, 0(x2) # store 0xc6421255661e0c47 in memory
flw f25, 0(x2) # load 0xc6421255661e0c47 from memory into f25
la x2, scratch
li x3, 0xbc4b41a16692a272 # load x3 with value 0xbc4b41a16692a272
sw x3, 0(x2) # store 0xbc4b41a16692a272 in memory
flw f8, 0(x2) # load 0xbc4b41a16692a272 from memory into f8
la x2, scratch
li x3, 0x87bc3d54af77fb75 # load x3 with value 0x87bc3d54af77fb75
sw x3, 0(x2) # store 0x87bc3d54af77fb75 in memory
flw f5, 0(x2) # load 0x87bc3d54af77fb75 from memory into f5
fmadd.s f1, f25, f8, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x648a743a98c3f6b4 # load x3 with value 0x648a743a98c3f6b4
sw x3, 0(x2) # store 0x648a743a98c3f6b4 in memory
flw f8, 0(x2) # load 0x648a743a98c3f6b4 from memory into f8
la x2, scratch
li x3, 0x39dc34e3cb5b4a74 # load x3 with value 0x39dc34e3cb5b4a74
sw x3, 0(x2) # store 0x39dc34e3cb5b4a74 in memory
flw f7, 0(x2) # load 0x39dc34e3cb5b4a74 from memory into f7
la x2, scratch
li x3, 0x60bc10005eeabdc8 # load x3 with value 0x60bc10005eeabdc8
sw x3, 0(x2) # store 0x60bc10005eeabdc8 in memory
flw f6, 0(x2) # load 0x60bc10005eeabdc8 from memory into f6
fmadd.s f23, f8, f7, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0xdae81cba852598ad # load x3 with value 0xdae81cba852598ad
sw x3, 0(x2) # store 0xdae81cba852598ad in memory
flw f13, 0(x2) # load 0xdae81cba852598ad from memory into f13
la x2, scratch
li x3, 0xd6e3e12f9b06ff74 # load x3 with value 0xd6e3e12f9b06ff74
sw x3, 0(x2) # store 0xd6e3e12f9b06ff74 in memory
flw f17, 0(x2) # load 0xd6e3e12f9b06ff74 from memory into f17
la x2, scratch
li x3, 0x11717afee1fbca3d # load x3 with value 0x11717afee1fbca3d
sw x3, 0(x2) # store 0x11717afee1fbca3d in memory
flw f7, 0(x2) # load 0x11717afee1fbca3d from memory into f7
fmadd.s f14, f13, f17, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0x21fe75cade939628 # load x3 with value 0x21fe75cade939628
sw x3, 0(x2) # store 0x21fe75cade939628 in memory
flw f28, 0(x2) # load 0x21fe75cade939628 from memory into f28
la x2, scratch
li x3, 0xc99b9db96355414e # load x3 with value 0xc99b9db96355414e
sw x3, 0(x2) # store 0xc99b9db96355414e in memory
flw f6, 0(x2) # load 0xc99b9db96355414e from memory into f6
la x2, scratch
li x3, 0xd3e2f9239e56836b # load x3 with value 0xd3e2f9239e56836b
sw x3, 0(x2) # store 0xd3e2f9239e56836b in memory
flw f8, 0(x2) # load 0xd3e2f9239e56836b from memory into f8
fmadd.s f18, f28, f6, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0x10145d497fb4c3b2 # load x3 with value 0x10145d497fb4c3b2
sw x3, 0(x2) # store 0x10145d497fb4c3b2 in memory
flw f27, 0(x2) # load 0x10145d497fb4c3b2 from memory into f27
la x2, scratch
li x3, 0x264e30e4f5b6e92a # load x3 with value 0x264e30e4f5b6e92a
sw x3, 0(x2) # store 0x264e30e4f5b6e92a in memory
flw f6, 0(x2) # load 0x264e30e4f5b6e92a from memory into f6
la x2, scratch
li x3, 0xf6afe65eed45b5dc # load x3 with value 0xf6afe65eed45b5dc
sw x3, 0(x2) # store 0xf6afe65eed45b5dc in memory
flw f9, 0(x2) # load 0xf6afe65eed45b5dc from memory into f9
fmadd.s f19, f27, f6, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0xc9089bef503bb7ff # load x3 with value 0xc9089bef503bb7ff
sw x3, 0(x2) # store 0xc9089bef503bb7ff in memory
flw f5, 0(x2) # load 0xc9089bef503bb7ff from memory into f5
la x2, scratch
li x3, 0x26e6e8f08f733963 # load x3 with value 0x26e6e8f08f733963
sw x3, 0(x2) # store 0x26e6e8f08f733963 in memory
flw f14, 0(x2) # load 0x26e6e8f08f733963 from memory into f14
la x2, scratch
li x3, 0x555781128588f1c0 # load x3 with value 0x555781128588f1c0
sw x3, 0(x2) # store 0x555781128588f1c0 in memory
flw f10, 0(x2) # load 0x555781128588f1c0 from memory into f10
fmadd.s f9, f5, f14, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0xfcf9767dcad55b51 # load x3 with value 0xfcf9767dcad55b51
sw x3, 0(x2) # store 0xfcf9767dcad55b51 in memory
flw f5, 0(x2) # load 0xfcf9767dcad55b51 from memory into f5
la x2, scratch
li x3, 0x3e72df6e77b9af3e # load x3 with value 0x3e72df6e77b9af3e
sw x3, 0(x2) # store 0x3e72df6e77b9af3e in memory
flw f15, 0(x2) # load 0x3e72df6e77b9af3e from memory into f15
la x2, scratch
li x3, 0x51689e8a11e0ca47 # load x3 with value 0x51689e8a11e0ca47
sw x3, 0(x2) # store 0x51689e8a11e0ca47 in memory
flw f11, 0(x2) # load 0x51689e8a11e0ca47 from memory into f11
fmadd.s f3, f5, f15, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0x54d89fa10d3d034f # load x3 with value 0x54d89fa10d3d034f
sw x3, 0(x2) # store 0x54d89fa10d3d034f in memory
flw f2, 0(x2) # load 0x54d89fa10d3d034f from memory into f2
la x2, scratch
li x3, 0x779ebc0271d6a38d # load x3 with value 0x779ebc0271d6a38d
sw x3, 0(x2) # store 0x779ebc0271d6a38d in memory
flw f21, 0(x2) # load 0x779ebc0271d6a38d from memory into f21
la x2, scratch
li x3, 0xdb5a610eed652a93 # load x3 with value 0xdb5a610eed652a93
sw x3, 0(x2) # store 0xdb5a610eed652a93 in memory
flw f12, 0(x2) # load 0xdb5a610eed652a93 from memory into f12
fmadd.s f5, f2, f21, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x8c1a02f38a7d216b # load x3 with value 0x8c1a02f38a7d216b
sw x3, 0(x2) # store 0x8c1a02f38a7d216b in memory
flw f19, 0(x2) # load 0x8c1a02f38a7d216b from memory into f19
la x2, scratch
li x3, 0x7ebd1c8ccfbeb168 # load x3 with value 0x7ebd1c8ccfbeb168
sw x3, 0(x2) # store 0x7ebd1c8ccfbeb168 in memory
flw f24, 0(x2) # load 0x7ebd1c8ccfbeb168 from memory into f24
la x2, scratch
li x3, 0x3af9dfb3ce32070c # load x3 with value 0x3af9dfb3ce32070c
sw x3, 0(x2) # store 0x3af9dfb3ce32070c in memory
flw f13, 0(x2) # load 0x3af9dfb3ce32070c from memory into f13
fmadd.s f13, f19, f24, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0x308071e27cafffbc # load x3 with value 0x308071e27cafffbc
sw x3, 0(x2) # store 0x308071e27cafffbc in memory
flw f17, 0(x2) # load 0x308071e27cafffbc from memory into f17
la x2, scratch
li x3, 0x3a21163ec735bc2c # load x3 with value 0x3a21163ec735bc2c
sw x3, 0(x2) # store 0x3a21163ec735bc2c in memory
flw f31, 0(x2) # load 0x3a21163ec735bc2c from memory into f31
la x2, scratch
li x3, 0x8389b2b6ba09686c # load x3 with value 0x8389b2b6ba09686c
sw x3, 0(x2) # store 0x8389b2b6ba09686c in memory
flw f14, 0(x2) # load 0x8389b2b6ba09686c from memory into f14
fmadd.s f6, f17, f31, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x930d6985e67bea0c # load x3 with value 0x930d6985e67bea0c
sw x3, 0(x2) # store 0x930d6985e67bea0c in memory
flw f29, 0(x2) # load 0x930d6985e67bea0c from memory into f29
la x2, scratch
li x3, 0x2a19568b378c8a9a # load x3 with value 0x2a19568b378c8a9a
sw x3, 0(x2) # store 0x2a19568b378c8a9a in memory
flw f16, 0(x2) # load 0x2a19568b378c8a9a from memory into f16
la x2, scratch
li x3, 0xa7976b67251a42d9 # load x3 with value 0xa7976b67251a42d9
sw x3, 0(x2) # store 0xa7976b67251a42d9 in memory
flw f15, 0(x2) # load 0xa7976b67251a42d9 from memory into f15
fmadd.s f18, f29, f16, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0x3af01cf8fc6fcc41 # load x3 with value 0x3af01cf8fc6fcc41
sw x3, 0(x2) # store 0x3af01cf8fc6fcc41 in memory
flw f18, 0(x2) # load 0x3af01cf8fc6fcc41 from memory into f18
la x2, scratch
li x3, 0x41d5ba21d24ec202 # load x3 with value 0x41d5ba21d24ec202
sw x3, 0(x2) # store 0x41d5ba21d24ec202 in memory
flw f22, 0(x2) # load 0x41d5ba21d24ec202 from memory into f22
la x2, scratch
li x3, 0x7d6066c277fa4d00 # load x3 with value 0x7d6066c277fa4d00
sw x3, 0(x2) # store 0x7d6066c277fa4d00 in memory
flw f16, 0(x2) # load 0x7d6066c277fa4d00 from memory into f16
fmadd.s f25, f18, f22, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0xdc0b2cd3faaeb9c3 # load x3 with value 0xdc0b2cd3faaeb9c3
sw x3, 0(x2) # store 0xdc0b2cd3faaeb9c3 in memory
flw f7, 0(x2) # load 0xdc0b2cd3faaeb9c3 from memory into f7
la x2, scratch
li x3, 0xb652b9f75ee8097e # load x3 with value 0xb652b9f75ee8097e
sw x3, 0(x2) # store 0xb652b9f75ee8097e in memory
flw f12, 0(x2) # load 0xb652b9f75ee8097e from memory into f12
la x2, scratch
li x3, 0x2b3b28d86e9224d1 # load x3 with value 0x2b3b28d86e9224d1
sw x3, 0(x2) # store 0x2b3b28d86e9224d1 in memory
flw f17, 0(x2) # load 0x2b3b28d86e9224d1 from memory into f17
fmadd.s f30, f7, f12, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x4a506f45147a4517 # load x3 with value 0x4a506f45147a4517
sw x3, 0(x2) # store 0x4a506f45147a4517 in memory
flw f17, 0(x2) # load 0x4a506f45147a4517 from memory into f17
la x2, scratch
li x3, 0xb5bb2fcde4468c94 # load x3 with value 0xb5bb2fcde4468c94
sw x3, 0(x2) # store 0xb5bb2fcde4468c94 in memory
flw f8, 0(x2) # load 0xb5bb2fcde4468c94 from memory into f8
la x2, scratch
li x3, 0xd3bf1c2f81c9ce4 # load x3 with value 0xd3bf1c2f81c9ce4
sw x3, 0(x2) # store 0xd3bf1c2f81c9ce4 in memory
flw f18, 0(x2) # load 0xd3bf1c2f81c9ce4 from memory into f18
fmadd.s f7, f17, f8, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0xf5ccee5cef2b2ba5 # load x3 with value 0xf5ccee5cef2b2ba5
sw x3, 0(x2) # store 0xf5ccee5cef2b2ba5 in memory
flw f1, 0(x2) # load 0xf5ccee5cef2b2ba5 from memory into f1
la x2, scratch
li x3, 0x40c3bc742f398d89 # load x3 with value 0x40c3bc742f398d89
sw x3, 0(x2) # store 0x40c3bc742f398d89 in memory
flw f21, 0(x2) # load 0x40c3bc742f398d89 from memory into f21
la x2, scratch
li x3, 0x25e146cb0e5abf66 # load x3 with value 0x25e146cb0e5abf66
sw x3, 0(x2) # store 0x25e146cb0e5abf66 in memory
flw f19, 0(x2) # load 0x25e146cb0e5abf66 from memory into f19
fmadd.s f23, f1, f21, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0x2658f3c2602506fe # load x3 with value 0x2658f3c2602506fe
sw x3, 0(x2) # store 0x2658f3c2602506fe in memory
flw f13, 0(x2) # load 0x2658f3c2602506fe from memory into f13
la x2, scratch
li x3, 0x46d9623491da5ec8 # load x3 with value 0x46d9623491da5ec8
sw x3, 0(x2) # store 0x46d9623491da5ec8 in memory
flw f30, 0(x2) # load 0x46d9623491da5ec8 from memory into f30
la x2, scratch
li x3, 0x702d1e0bb8eefe90 # load x3 with value 0x702d1e0bb8eefe90
sw x3, 0(x2) # store 0x702d1e0bb8eefe90 in memory
flw f20, 0(x2) # load 0x702d1e0bb8eefe90 from memory into f20
fmadd.s f31, f13, f30, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0xa3464c2c0bf0422a # load x3 with value 0xa3464c2c0bf0422a
sw x3, 0(x2) # store 0xa3464c2c0bf0422a in memory
flw f15, 0(x2) # load 0xa3464c2c0bf0422a from memory into f15
la x2, scratch
li x3, 0x2cd0c1ae16d720d6 # load x3 with value 0x2cd0c1ae16d720d6
sw x3, 0(x2) # store 0x2cd0c1ae16d720d6 in memory
flw f12, 0(x2) # load 0x2cd0c1ae16d720d6 from memory into f12
la x2, scratch
li x3, 0x3a660c5671d5a775 # load x3 with value 0x3a660c5671d5a775
sw x3, 0(x2) # store 0x3a660c5671d5a775 in memory
flw f21, 0(x2) # load 0x3a660c5671d5a775 from memory into f21
fmadd.s f7, f15, f12, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x3b60a0673c3a3f80 # load x3 with value 0x3b60a0673c3a3f80
sw x3, 0(x2) # store 0x3b60a0673c3a3f80 in memory
flw f1, 0(x2) # load 0x3b60a0673c3a3f80 from memory into f1
la x2, scratch
li x3, 0x3c4e0aabc3be0167 # load x3 with value 0x3c4e0aabc3be0167
sw x3, 0(x2) # store 0x3c4e0aabc3be0167 in memory
flw f21, 0(x2) # load 0x3c4e0aabc3be0167 from memory into f21
la x2, scratch
li x3, 0x3b58a5a9becb8456 # load x3 with value 0x3b58a5a9becb8456
sw x3, 0(x2) # store 0x3b58a5a9becb8456 in memory
flw f22, 0(x2) # load 0x3b58a5a9becb8456 from memory into f22
fmadd.s f17, f1, f21, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0x501f11c4cef09b69 # load x3 with value 0x501f11c4cef09b69
sw x3, 0(x2) # store 0x501f11c4cef09b69 in memory
flw f13, 0(x2) # load 0x501f11c4cef09b69 from memory into f13
la x2, scratch
li x3, 0x4b7b29a2eb7252ac # load x3 with value 0x4b7b29a2eb7252ac
sw x3, 0(x2) # store 0x4b7b29a2eb7252ac in memory
flw f27, 0(x2) # load 0x4b7b29a2eb7252ac from memory into f27
la x2, scratch
li x3, 0xc2721932b318d45 # load x3 with value 0xc2721932b318d45
sw x3, 0(x2) # store 0xc2721932b318d45 in memory
flw f23, 0(x2) # load 0xc2721932b318d45 from memory into f23
fmadd.s f28, f13, f27, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0x8699fa187dbcac7c # load x3 with value 0x8699fa187dbcac7c
sw x3, 0(x2) # store 0x8699fa187dbcac7c in memory
flw f1, 0(x2) # load 0x8699fa187dbcac7c from memory into f1
la x2, scratch
li x3, 0x77129a3b81c6a9bd # load x3 with value 0x77129a3b81c6a9bd
sw x3, 0(x2) # store 0x77129a3b81c6a9bd in memory
flw f19, 0(x2) # load 0x77129a3b81c6a9bd from memory into f19
la x2, scratch
li x3, 0x10435910e4c5e239 # load x3 with value 0x10435910e4c5e239
sw x3, 0(x2) # store 0x10435910e4c5e239 in memory
flw f24, 0(x2) # load 0x10435910e4c5e239 from memory into f24
fmadd.s f10, f1, f19, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x60a752de4737c0dc # load x3 with value 0x60a752de4737c0dc
sw x3, 0(x2) # store 0x60a752de4737c0dc in memory
flw f27, 0(x2) # load 0x60a752de4737c0dc from memory into f27
la x2, scratch
li x3, 0x6eb83091290eb20 # load x3 with value 0x6eb83091290eb20
sw x3, 0(x2) # store 0x6eb83091290eb20 in memory
flw f23, 0(x2) # load 0x6eb83091290eb20 from memory into f23
la x2, scratch
li x3, 0x34953fda73216b58 # load x3 with value 0x34953fda73216b58
sw x3, 0(x2) # store 0x34953fda73216b58 in memory
flw f25, 0(x2) # load 0x34953fda73216b58 from memory into f25
fmadd.s f11, f27, f23, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0xd9c5c0408dff91e4 # load x3 with value 0xd9c5c0408dff91e4
sw x3, 0(x2) # store 0xd9c5c0408dff91e4 in memory
flw f16, 0(x2) # load 0xd9c5c0408dff91e4 from memory into f16
la x2, scratch
li x3, 0x2b14b8670dcb7ed7 # load x3 with value 0x2b14b8670dcb7ed7
sw x3, 0(x2) # store 0x2b14b8670dcb7ed7 in memory
flw f1, 0(x2) # load 0x2b14b8670dcb7ed7 from memory into f1
la x2, scratch
li x3, 0xd8492c0444ca7de0 # load x3 with value 0xd8492c0444ca7de0
sw x3, 0(x2) # store 0xd8492c0444ca7de0 in memory
flw f26, 0(x2) # load 0xd8492c0444ca7de0 from memory into f26
fmadd.s f31, f16, f1, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0x4da9cab4deb66785 # load x3 with value 0x4da9cab4deb66785
sw x3, 0(x2) # store 0x4da9cab4deb66785 in memory
flw f28, 0(x2) # load 0x4da9cab4deb66785 from memory into f28
la x2, scratch
li x3, 0xb73bd94eff9f3997 # load x3 with value 0xb73bd94eff9f3997
sw x3, 0(x2) # store 0xb73bd94eff9f3997 in memory
flw f10, 0(x2) # load 0xb73bd94eff9f3997 from memory into f10
la x2, scratch
li x3, 0x5122ef18515a530e # load x3 with value 0x5122ef18515a530e
sw x3, 0(x2) # store 0x5122ef18515a530e in memory
flw f27, 0(x2) # load 0x5122ef18515a530e from memory into f27
fmadd.s f5, f28, f10, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x532dd24b3fda5fc8 # load x3 with value 0x532dd24b3fda5fc8
sw x3, 0(x2) # store 0x532dd24b3fda5fc8 in memory
flw f11, 0(x2) # load 0x532dd24b3fda5fc8 from memory into f11
la x2, scratch
li x3, 0xdbc5d3ea8ec95d30 # load x3 with value 0xdbc5d3ea8ec95d30
sw x3, 0(x2) # store 0xdbc5d3ea8ec95d30 in memory
flw f5, 0(x2) # load 0xdbc5d3ea8ec95d30 from memory into f5
la x2, scratch
li x3, 0xe03fa349d5db1507 # load x3 with value 0xe03fa349d5db1507
sw x3, 0(x2) # store 0xe03fa349d5db1507 in memory
flw f28, 0(x2) # load 0xe03fa349d5db1507 from memory into f28
fmadd.s f3, f11, f5, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x6ce5856fb9ea1230 # load x3 with value 0x6ce5856fb9ea1230
sw x3, 0(x2) # store 0x6ce5856fb9ea1230 in memory
flw f19, 0(x2) # load 0x6ce5856fb9ea1230 from memory into f19
la x2, scratch
li x3, 0x6fb198e39085c70e # load x3 with value 0x6fb198e39085c70e
sw x3, 0(x2) # store 0x6fb198e39085c70e in memory
flw f1, 0(x2) # load 0x6fb198e39085c70e from memory into f1
la x2, scratch
li x3, 0xe962db9e2b4a8bd0 # load x3 with value 0xe962db9e2b4a8bd0
sw x3, 0(x2) # store 0xe962db9e2b4a8bd0 in memory
flw f29, 0(x2) # load 0xe962db9e2b4a8bd0 from memory into f29
fmadd.s f17, f19, f1, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x5631abf8cb0e2cb3 # load x3 with value 0x5631abf8cb0e2cb3
sw x3, 0(x2) # store 0x5631abf8cb0e2cb3 in memory
flw f15, 0(x2) # load 0x5631abf8cb0e2cb3 from memory into f15
la x2, scratch
li x3, 0xdb1c7627c77c116 # load x3 with value 0xdb1c7627c77c116
sw x3, 0(x2) # store 0xdb1c7627c77c116 in memory
flw f9, 0(x2) # load 0xdb1c7627c77c116 from memory into f9
la x2, scratch
li x3, 0xe2fe3467cdf2bd76 # load x3 with value 0xe2fe3467cdf2bd76
sw x3, 0(x2) # store 0xe2fe3467cdf2bd76 in memory
flw f30, 0(x2) # load 0xe2fe3467cdf2bd76 from memory into f30
fmadd.s f14, f15, f9, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x2f13c5fd0970dd5b # load x3 with value 0x2f13c5fd0970dd5b
sw x3, 0(x2) # store 0x2f13c5fd0970dd5b in memory
flw f6, 0(x2) # load 0x2f13c5fd0970dd5b from memory into f6
la x2, scratch
li x3, 0x6b4dbd8cd9da5b58 # load x3 with value 0x6b4dbd8cd9da5b58
sw x3, 0(x2) # store 0x6b4dbd8cd9da5b58 in memory
flw f12, 0(x2) # load 0x6b4dbd8cd9da5b58 from memory into f12
la x2, scratch
li x3, 0xfbd27751d9a2390f # load x3 with value 0xfbd27751d9a2390f
sw x3, 0(x2) # store 0xfbd27751d9a2390f in memory
flw f31, 0(x2) # load 0xfbd27751d9a2390f from memory into f31
fmadd.s f2, f6, f12, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0x7c5c30519cc95ad1 # load x3 with value 0x7c5c30519cc95ad1
sw x3, 0(x2) # store 0x7c5c30519cc95ad1 in memory
flw f28, 0(x2) # load 0x7c5c30519cc95ad1 from memory into f28
la x2, scratch
li x3, 0x60138e9a6d9c6e71 # load x3 with value 0x60138e9a6d9c6e71
sw x3, 0(x2) # store 0x60138e9a6d9c6e71 in memory
flw f24, 0(x2) # load 0x60138e9a6d9c6e71 from memory into f24
la x2, scratch
li x3, 0x7a25ad8efeccbc84 # load x3 with value 0x7a25ad8efeccbc84
sw x3, 0(x2) # store 0x7a25ad8efeccbc84 in memory
flw f10, 0(x2) # load 0x7a25ad8efeccbc84 from memory into f10
fmadd.s f0, f28, f24, f10 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x29e73b95cbcb5752 # load x3 with value 0x29e73b95cbcb5752
sw x3, 0(x2) # store 0x29e73b95cbcb5752 in memory
flw f9, 0(x2) # load 0x29e73b95cbcb5752 from memory into f9
la x2, scratch
li x3, 0x2b20b982081ec308 # load x3 with value 0x2b20b982081ec308
sw x3, 0(x2) # store 0x2b20b982081ec308 in memory
flw f10, 0(x2) # load 0x2b20b982081ec308 from memory into f10
la x2, scratch
li x3, 0x905780a29a3a53af # load x3 with value 0x905780a29a3a53af
sw x3, 0(x2) # store 0x905780a29a3a53af in memory
flw f18, 0(x2) # load 0x905780a29a3a53af from memory into f18
fmadd.s f1, f9, f10, f18 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x872d2e07a0449426 # load x3 with value 0x872d2e07a0449426
sw x3, 0(x2) # store 0x872d2e07a0449426 in memory
flw f19, 0(x2) # load 0x872d2e07a0449426 from memory into f19
la x2, scratch
li x3, 0x541c5d998c6e5788 # load x3 with value 0x541c5d998c6e5788
sw x3, 0(x2) # store 0x541c5d998c6e5788 in memory
flw f10, 0(x2) # load 0x541c5d998c6e5788 from memory into f10
la x2, scratch
li x3, 0xfe1b167e2c03d622 # load x3 with value 0xfe1b167e2c03d622
sw x3, 0(x2) # store 0xfe1b167e2c03d622 in memory
flw f18, 0(x2) # load 0xfe1b167e2c03d622 from memory into f18
fmadd.s f2, f19, f10, f18 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x59396a8c61e45e61 # load x3 with value 0x59396a8c61e45e61
sw x3, 0(x2) # store 0x59396a8c61e45e61 in memory
flw f24, 0(x2) # load 0x59396a8c61e45e61 from memory into f24
la x2, scratch
li x3, 0x4d648ab9397bb84b # load x3 with value 0x4d648ab9397bb84b
sw x3, 0(x2) # store 0x4d648ab9397bb84b in memory
flw f22, 0(x2) # load 0x4d648ab9397bb84b from memory into f22
la x2, scratch
li x3, 0x513d713b214fbc5f # load x3 with value 0x513d713b214fbc5f
sw x3, 0(x2) # store 0x513d713b214fbc5f in memory
flw f29, 0(x2) # load 0x513d713b214fbc5f from memory into f29
fmadd.s f3, f24, f22, f29 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3769c45bcdb079f4 # load x3 with value 0x3769c45bcdb079f4
sw x3, 0(x2) # store 0x3769c45bcdb079f4 in memory
flw f13, 0(x2) # load 0x3769c45bcdb079f4 from memory into f13
la x2, scratch
li x3, 0x950408634aa59ffd # load x3 with value 0x950408634aa59ffd
sw x3, 0(x2) # store 0x950408634aa59ffd in memory
flw f8, 0(x2) # load 0x950408634aa59ffd from memory into f8
la x2, scratch
li x3, 0x779a5c7ca4f485a7 # load x3 with value 0x779a5c7ca4f485a7
sw x3, 0(x2) # store 0x779a5c7ca4f485a7 in memory
flw f24, 0(x2) # load 0x779a5c7ca4f485a7 from memory into f24
fmadd.s f4, f13, f8, f24 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8df72645e339087 # load x3 with value 0x8df72645e339087
sw x3, 0(x2) # store 0x8df72645e339087 in memory
flw f28, 0(x2) # load 0x8df72645e339087 from memory into f28
la x2, scratch
li x3, 0xb61e09a3bac3ba01 # load x3 with value 0xb61e09a3bac3ba01
sw x3, 0(x2) # store 0xb61e09a3bac3ba01 in memory
flw f11, 0(x2) # load 0xb61e09a3bac3ba01 from memory into f11
la x2, scratch
li x3, 0x6ca48833d56ac2d0 # load x3 with value 0x6ca48833d56ac2d0
sw x3, 0(x2) # store 0x6ca48833d56ac2d0 in memory
flw f31, 0(x2) # load 0x6ca48833d56ac2d0 from memory into f31
fmadd.s f5, f28, f11, f31 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xe45f6167deaa75a4 # load x3 with value 0xe45f6167deaa75a4
sw x3, 0(x2) # store 0xe45f6167deaa75a4 in memory
flw f28, 0(x2) # load 0xe45f6167deaa75a4 from memory into f28
la x2, scratch
li x3, 0xe47c54d4428f7fde # load x3 with value 0xe47c54d4428f7fde
sw x3, 0(x2) # store 0xe47c54d4428f7fde in memory
flw f2, 0(x2) # load 0xe47c54d4428f7fde from memory into f2
la x2, scratch
li x3, 0x71a92248a8f879b2 # load x3 with value 0x71a92248a8f879b2
sw x3, 0(x2) # store 0x71a92248a8f879b2 in memory
flw f9, 0(x2) # load 0x71a92248a8f879b2 from memory into f9
fmadd.s f6, f28, f2, f9 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x34cbe065abbeea07 # load x3 with value 0x34cbe065abbeea07
sw x3, 0(x2) # store 0x34cbe065abbeea07 in memory
flw f20, 0(x2) # load 0x34cbe065abbeea07 from memory into f20
la x2, scratch
li x3, 0xa49d001bb98561d3 # load x3 with value 0xa49d001bb98561d3
sw x3, 0(x2) # store 0xa49d001bb98561d3 in memory
flw f30, 0(x2) # load 0xa49d001bb98561d3 from memory into f30
la x2, scratch
li x3, 0xcf531338beb2ef56 # load x3 with value 0xcf531338beb2ef56
sw x3, 0(x2) # store 0xcf531338beb2ef56 in memory
flw f28, 0(x2) # load 0xcf531338beb2ef56 from memory into f28
fmadd.s f7, f20, f30, f28 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0xf064d40b7bf5a87a # load x3 with value 0xf064d40b7bf5a87a
sw x3, 0(x2) # store 0xf064d40b7bf5a87a in memory
flw f26, 0(x2) # load 0xf064d40b7bf5a87a from memory into f26
la x2, scratch
li x3, 0xb5d5f8675af8258a # load x3 with value 0xb5d5f8675af8258a
sw x3, 0(x2) # store 0xb5d5f8675af8258a in memory
flw f24, 0(x2) # load 0xb5d5f8675af8258a from memory into f24
la x2, scratch
li x3, 0x7d87ed396508ba74 # load x3 with value 0x7d87ed396508ba74
sw x3, 0(x2) # store 0x7d87ed396508ba74 in memory
flw f9, 0(x2) # load 0x7d87ed396508ba74 from memory into f9
fmadd.s f8, f26, f24, f9 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x957428e83d77dd58 # load x3 with value 0x957428e83d77dd58
sw x3, 0(x2) # store 0x957428e83d77dd58 in memory
flw f23, 0(x2) # load 0x957428e83d77dd58 from memory into f23
la x2, scratch
li x3, 0x92b047bd82e715bf # load x3 with value 0x92b047bd82e715bf
sw x3, 0(x2) # store 0x92b047bd82e715bf in memory
flw f17, 0(x2) # load 0x92b047bd82e715bf from memory into f17
la x2, scratch
li x3, 0xfd1cad7fcbb6bc96 # load x3 with value 0xfd1cad7fcbb6bc96
sw x3, 0(x2) # store 0xfd1cad7fcbb6bc96 in memory
flw f28, 0(x2) # load 0xfd1cad7fcbb6bc96 from memory into f28
fmadd.s f9, f23, f17, f28 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x5807c83f4771361e # load x3 with value 0x5807c83f4771361e
sw x3, 0(x2) # store 0x5807c83f4771361e in memory
flw f1, 0(x2) # load 0x5807c83f4771361e from memory into f1
la x2, scratch
li x3, 0x83fb90d3a091d1aa # load x3 with value 0x83fb90d3a091d1aa
sw x3, 0(x2) # store 0x83fb90d3a091d1aa in memory
flw f24, 0(x2) # load 0x83fb90d3a091d1aa from memory into f24
la x2, scratch
li x3, 0xfed52175e6c96e31 # load x3 with value 0xfed52175e6c96e31
sw x3, 0(x2) # store 0xfed52175e6c96e31 in memory
flw f11, 0(x2) # load 0xfed52175e6c96e31 from memory into f11
fmadd.s f10, f1, f24, f11 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xd39421b07ff2b1df # load x3 with value 0xd39421b07ff2b1df
sw x3, 0(x2) # store 0xd39421b07ff2b1df in memory
flw f10, 0(x2) # load 0xd39421b07ff2b1df from memory into f10
la x2, scratch
li x3, 0x593f58ff0f5759ec # load x3 with value 0x593f58ff0f5759ec
sw x3, 0(x2) # store 0x593f58ff0f5759ec in memory
flw f25, 0(x2) # load 0x593f58ff0f5759ec from memory into f25
la x2, scratch
li x3, 0x78558be2983798fd # load x3 with value 0x78558be2983798fd
sw x3, 0(x2) # store 0x78558be2983798fd in memory
flw f27, 0(x2) # load 0x78558be2983798fd from memory into f27
fmadd.s f11, f10, f25, f27 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x35bf32f76c602e21 # load x3 with value 0x35bf32f76c602e21
sw x3, 0(x2) # store 0x35bf32f76c602e21 in memory
flw f12, 0(x2) # load 0x35bf32f76c602e21 from memory into f12
la x2, scratch
li x3, 0xb37d270c4101d56f # load x3 with value 0xb37d270c4101d56f
sw x3, 0(x2) # store 0xb37d270c4101d56f in memory
flw f23, 0(x2) # load 0xb37d270c4101d56f from memory into f23
la x2, scratch
li x3, 0xd0bb491b1328038d # load x3 with value 0xd0bb491b1328038d
sw x3, 0(x2) # store 0xd0bb491b1328038d in memory
flw f29, 0(x2) # load 0xd0bb491b1328038d from memory into f29
fmadd.s f12, f12, f23, f29 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0x56d8a0a017b8c6dc # load x3 with value 0x56d8a0a017b8c6dc
sw x3, 0(x2) # store 0x56d8a0a017b8c6dc in memory
flw f3, 0(x2) # load 0x56d8a0a017b8c6dc from memory into f3
la x2, scratch
li x3, 0xd9148fb30fb3a904 # load x3 with value 0xd9148fb30fb3a904
sw x3, 0(x2) # store 0xd9148fb30fb3a904 in memory
flw f15, 0(x2) # load 0xd9148fb30fb3a904 from memory into f15
la x2, scratch
li x3, 0x6ec32d7d0ba4277d # load x3 with value 0x6ec32d7d0ba4277d
sw x3, 0(x2) # store 0x6ec32d7d0ba4277d in memory
flw f26, 0(x2) # load 0x6ec32d7d0ba4277d from memory into f26
fmadd.s f13, f3, f15, f26 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x5f6b21b76b24a817 # load x3 with value 0x5f6b21b76b24a817
sw x3, 0(x2) # store 0x5f6b21b76b24a817 in memory
flw f21, 0(x2) # load 0x5f6b21b76b24a817 from memory into f21
la x2, scratch
li x3, 0x4250f8d4f1cce118 # load x3 with value 0x4250f8d4f1cce118
sw x3, 0(x2) # store 0x4250f8d4f1cce118 in memory
flw f19, 0(x2) # load 0x4250f8d4f1cce118 from memory into f19
la x2, scratch
li x3, 0x5dedc80664280f4d # load x3 with value 0x5dedc80664280f4d
sw x3, 0(x2) # store 0x5dedc80664280f4d in memory
flw f15, 0(x2) # load 0x5dedc80664280f4d from memory into f15
fmadd.s f14, f21, f19, f15 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xa470e5d922f64743 # load x3 with value 0xa470e5d922f64743
sw x3, 0(x2) # store 0xa470e5d922f64743 in memory
flw f11, 0(x2) # load 0xa470e5d922f64743 from memory into f11
la x2, scratch
li x3, 0xdcdf13818e308a72 # load x3 with value 0xdcdf13818e308a72
sw x3, 0(x2) # store 0xdcdf13818e308a72 in memory
flw f30, 0(x2) # load 0xdcdf13818e308a72 from memory into f30
la x2, scratch
li x3, 0x4db135febaf579a4 # load x3 with value 0x4db135febaf579a4
sw x3, 0(x2) # store 0x4db135febaf579a4 in memory
flw f26, 0(x2) # load 0x4db135febaf579a4 from memory into f26
fmadd.s f15, f11, f30, f26 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0xf3c7c42f336ea311 # load x3 with value 0xf3c7c42f336ea311
sw x3, 0(x2) # store 0xf3c7c42f336ea311 in memory
flw f3, 0(x2) # load 0xf3c7c42f336ea311 from memory into f3
la x2, scratch
li x3, 0xa4ae20f83014e18b # load x3 with value 0xa4ae20f83014e18b
sw x3, 0(x2) # store 0xa4ae20f83014e18b in memory
flw f11, 0(x2) # load 0xa4ae20f83014e18b from memory into f11
la x2, scratch
li x3, 0x6197bce76d16733d # load x3 with value 0x6197bce76d16733d
sw x3, 0(x2) # store 0x6197bce76d16733d in memory
flw f23, 0(x2) # load 0x6197bce76d16733d from memory into f23
fmadd.s f16, f3, f11, f23 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x277e1b7e244250e4 # load x3 with value 0x277e1b7e244250e4
sw x3, 0(x2) # store 0x277e1b7e244250e4 in memory
flw f29, 0(x2) # load 0x277e1b7e244250e4 from memory into f29
la x2, scratch
li x3, 0x2a8d6c6b3c51cc63 # load x3 with value 0x2a8d6c6b3c51cc63
sw x3, 0(x2) # store 0x2a8d6c6b3c51cc63 in memory
flw f5, 0(x2) # load 0x2a8d6c6b3c51cc63 from memory into f5
la x2, scratch
li x3, 0x8d64625694dca1c8 # load x3 with value 0x8d64625694dca1c8
sw x3, 0(x2) # store 0x8d64625694dca1c8 in memory
flw f25, 0(x2) # load 0x8d64625694dca1c8 from memory into f25
fmadd.s f17, f29, f5, f25 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x9b2bbb807fe84497 # load x3 with value 0x9b2bbb807fe84497
sw x3, 0(x2) # store 0x9b2bbb807fe84497 in memory
flw f3, 0(x2) # load 0x9b2bbb807fe84497 from memory into f3
la x2, scratch
li x3, 0xd6b7df10621f82b7 # load x3 with value 0xd6b7df10621f82b7
sw x3, 0(x2) # store 0xd6b7df10621f82b7 in memory
flw f2, 0(x2) # load 0xd6b7df10621f82b7 from memory into f2
la x2, scratch
li x3, 0xb8531b47ee5e884c # load x3 with value 0xb8531b47ee5e884c
sw x3, 0(x2) # store 0xb8531b47ee5e884c in memory
flw f15, 0(x2) # load 0xb8531b47ee5e884c from memory into f15
fmadd.s f18, f3, f2, f15 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x54d663ab1d5b324a # load x3 with value 0x54d663ab1d5b324a
sw x3, 0(x2) # store 0x54d663ab1d5b324a in memory
flw f13, 0(x2) # load 0x54d663ab1d5b324a from memory into f13
la x2, scratch
li x3, 0x8b34073878ea6741 # load x3 with value 0x8b34073878ea6741
sw x3, 0(x2) # store 0x8b34073878ea6741 in memory
flw f5, 0(x2) # load 0x8b34073878ea6741 from memory into f5
la x2, scratch
li x3, 0x273dabb98a047c2e # load x3 with value 0x273dabb98a047c2e
sw x3, 0(x2) # store 0x273dabb98a047c2e in memory
flw f17, 0(x2) # load 0x273dabb98a047c2e from memory into f17
fmadd.s f19, f13, f5, f17 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0xd49821091e50a1e7 # load x3 with value 0xd49821091e50a1e7
sw x3, 0(x2) # store 0xd49821091e50a1e7 in memory
flw f26, 0(x2) # load 0xd49821091e50a1e7 from memory into f26
la x2, scratch
li x3, 0xff4ab10e23cd7d77 # load x3 with value 0xff4ab10e23cd7d77
sw x3, 0(x2) # store 0xff4ab10e23cd7d77 in memory
flw f18, 0(x2) # load 0xff4ab10e23cd7d77 from memory into f18
la x2, scratch
li x3, 0x1fe14f1aa1bfa511 # load x3 with value 0x1fe14f1aa1bfa511
sw x3, 0(x2) # store 0x1fe14f1aa1bfa511 in memory
flw f5, 0(x2) # load 0x1fe14f1aa1bfa511 from memory into f5
fmadd.s f20, f26, f18, f5 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x1ac43b66d4ff2f1c # load x3 with value 0x1ac43b66d4ff2f1c
sw x3, 0(x2) # store 0x1ac43b66d4ff2f1c in memory
flw f29, 0(x2) # load 0x1ac43b66d4ff2f1c from memory into f29
la x2, scratch
li x3, 0x3959545bc7cfc93d # load x3 with value 0x3959545bc7cfc93d
sw x3, 0(x2) # store 0x3959545bc7cfc93d in memory
flw f26, 0(x2) # load 0x3959545bc7cfc93d from memory into f26
la x2, scratch
li x3, 0xa90e4da71684f6e5 # load x3 with value 0xa90e4da71684f6e5
sw x3, 0(x2) # store 0xa90e4da71684f6e5 in memory
flw f31, 0(x2) # load 0xa90e4da71684f6e5 from memory into f31
fmadd.s f21, f29, f26, f31 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x19754ffd83bfcde # load x3 with value 0x19754ffd83bfcde
sw x3, 0(x2) # store 0x19754ffd83bfcde in memory
flw f31, 0(x2) # load 0x19754ffd83bfcde from memory into f31
la x2, scratch
li x3, 0xc86bc65198d9effc # load x3 with value 0xc86bc65198d9effc
sw x3, 0(x2) # store 0xc86bc65198d9effc in memory
flw f27, 0(x2) # load 0xc86bc65198d9effc from memory into f27
la x2, scratch
li x3, 0xf5b86a3b2d5271b # load x3 with value 0xf5b86a3b2d5271b
sw x3, 0(x2) # store 0xf5b86a3b2d5271b in memory
flw f2, 0(x2) # load 0xf5b86a3b2d5271b from memory into f2
fmadd.s f22, f31, f27, f2 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0xeb2c4536e9432b82 # load x3 with value 0xeb2c4536e9432b82
sw x3, 0(x2) # store 0xeb2c4536e9432b82 in memory
flw f6, 0(x2) # load 0xeb2c4536e9432b82 from memory into f6
la x2, scratch
li x3, 0x356843566bbeb4bb # load x3 with value 0x356843566bbeb4bb
sw x3, 0(x2) # store 0x356843566bbeb4bb in memory
flw f11, 0(x2) # load 0x356843566bbeb4bb from memory into f11
la x2, scratch
li x3, 0x29a4fa199d5fa727 # load x3 with value 0x29a4fa199d5fa727
sw x3, 0(x2) # store 0x29a4fa199d5fa727 in memory
flw f2, 0(x2) # load 0x29a4fa199d5fa727 from memory into f2
fmadd.s f23, f6, f11, f2 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0x5e17b18e6f845904 # load x3 with value 0x5e17b18e6f845904
sw x3, 0(x2) # store 0x5e17b18e6f845904 in memory
flw f31, 0(x2) # load 0x5e17b18e6f845904 from memory into f31
la x2, scratch
li x3, 0x18385d1bad561360 # load x3 with value 0x18385d1bad561360
sw x3, 0(x2) # store 0x18385d1bad561360 in memory
flw f18, 0(x2) # load 0x18385d1bad561360 from memory into f18
la x2, scratch
li x3, 0xfe7e3a56b22d3f1f # load x3 with value 0xfe7e3a56b22d3f1f
sw x3, 0(x2) # store 0xfe7e3a56b22d3f1f in memory
flw f7, 0(x2) # load 0xfe7e3a56b22d3f1f from memory into f7
fmadd.s f24, f31, f18, f7 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x21c56f2b82f61aae # load x3 with value 0x21c56f2b82f61aae
sw x3, 0(x2) # store 0x21c56f2b82f61aae in memory
flw f22, 0(x2) # load 0x21c56f2b82f61aae from memory into f22
la x2, scratch
li x3, 0xcd89673e2c324790 # load x3 with value 0xcd89673e2c324790
sw x3, 0(x2) # store 0xcd89673e2c324790 in memory
flw f8, 0(x2) # load 0xcd89673e2c324790 from memory into f8
la x2, scratch
li x3, 0x9ff316696ccac65 # load x3 with value 0x9ff316696ccac65
sw x3, 0(x2) # store 0x9ff316696ccac65 in memory
flw f26, 0(x2) # load 0x9ff316696ccac65 from memory into f26
fmadd.s f25, f22, f8, f26 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0xdf560690632d13c6 # load x3 with value 0xdf560690632d13c6
sw x3, 0(x2) # store 0xdf560690632d13c6 in memory
flw f21, 0(x2) # load 0xdf560690632d13c6 from memory into f21
la x2, scratch
li x3, 0x412144a17cb057d6 # load x3 with value 0x412144a17cb057d6
sw x3, 0(x2) # store 0x412144a17cb057d6 in memory
flw f24, 0(x2) # load 0x412144a17cb057d6 from memory into f24
la x2, scratch
li x3, 0x707de5fccc3248fd # load x3 with value 0x707de5fccc3248fd
sw x3, 0(x2) # store 0x707de5fccc3248fd in memory
flw f1, 0(x2) # load 0x707de5fccc3248fd from memory into f1
fmadd.s f26, f21, f24, f1 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0xfa24775e0673760 # load x3 with value 0xfa24775e0673760
sw x3, 0(x2) # store 0xfa24775e0673760 in memory
flw f13, 0(x2) # load 0xfa24775e0673760 from memory into f13
la x2, scratch
li x3, 0x46ded248c76e9eb5 # load x3 with value 0x46ded248c76e9eb5
sw x3, 0(x2) # store 0x46ded248c76e9eb5 in memory
flw f18, 0(x2) # load 0x46ded248c76e9eb5 from memory into f18
la x2, scratch
li x3, 0x18f3742e96f5a765 # load x3 with value 0x18f3742e96f5a765
sw x3, 0(x2) # store 0x18f3742e96f5a765 in memory
flw f29, 0(x2) # load 0x18f3742e96f5a765 from memory into f29
fmadd.s f27, f13, f18, f29 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0xdeb4b7e9081a7e22 # load x3 with value 0xdeb4b7e9081a7e22
sw x3, 0(x2) # store 0xdeb4b7e9081a7e22 in memory
flw f15, 0(x2) # load 0xdeb4b7e9081a7e22 from memory into f15
la x2, scratch
li x3, 0xbff2300db0ac54be # load x3 with value 0xbff2300db0ac54be
sw x3, 0(x2) # store 0xbff2300db0ac54be in memory
flw f3, 0(x2) # load 0xbff2300db0ac54be from memory into f3
la x2, scratch
li x3, 0xff9888f92f26e180 # load x3 with value 0xff9888f92f26e180
sw x3, 0(x2) # store 0xff9888f92f26e180 in memory
flw f19, 0(x2) # load 0xff9888f92f26e180 from memory into f19
fmadd.s f28, f15, f3, f19 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xd9bb7708e78712e5 # load x3 with value 0xd9bb7708e78712e5
sw x3, 0(x2) # store 0xd9bb7708e78712e5 in memory
flw f11, 0(x2) # load 0xd9bb7708e78712e5 from memory into f11
la x2, scratch
li x3, 0x6caea7e5418091e2 # load x3 with value 0x6caea7e5418091e2
sw x3, 0(x2) # store 0x6caea7e5418091e2 in memory
flw f8, 0(x2) # load 0x6caea7e5418091e2 from memory into f8
la x2, scratch
li x3, 0x169e37e6adc0e17 # load x3 with value 0x169e37e6adc0e17
sw x3, 0(x2) # store 0x169e37e6adc0e17 in memory
flw f3, 0(x2) # load 0x169e37e6adc0e17 from memory into f3
fmadd.s f29, f11, f8, f3 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x49d620b0732d05a0 # load x3 with value 0x49d620b0732d05a0
sw x3, 0(x2) # store 0x49d620b0732d05a0 in memory
flw f24, 0(x2) # load 0x49d620b0732d05a0 from memory into f24
la x2, scratch
li x3, 0xa7179b2afe23269a # load x3 with value 0xa7179b2afe23269a
sw x3, 0(x2) # store 0xa7179b2afe23269a in memory
flw f10, 0(x2) # load 0xa7179b2afe23269a from memory into f10
la x2, scratch
li x3, 0x5c7f3e4cdf984832 # load x3 with value 0x5c7f3e4cdf984832
sw x3, 0(x2) # store 0x5c7f3e4cdf984832 in memory
flw f22, 0(x2) # load 0x5c7f3e4cdf984832 from memory into f22
fmadd.s f30, f24, f10, f22 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0xaa17da06aca9af6f # load x3 with value 0xaa17da06aca9af6f
sw x3, 0(x2) # store 0xaa17da06aca9af6f in memory
flw f17, 0(x2) # load 0xaa17da06aca9af6f from memory into f17
la x2, scratch
li x3, 0x605afe15dcf7af90 # load x3 with value 0x605afe15dcf7af90
sw x3, 0(x2) # store 0x605afe15dcf7af90 in memory
flw f23, 0(x2) # load 0x605afe15dcf7af90 from memory into f23
la x2, scratch
li x3, 0xe13fac686d4a907a # load x3 with value 0xe13fac686d4a907a
sw x3, 0(x2) # store 0xe13fac686d4a907a in memory
flw f13, 0(x2) # load 0xe13fac686d4a907a from memory into f13
fmadd.s f31, f17, f23, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x6b257ed6accdd0f4 # load x3 with value 0x6b257ed6accdd0f4
sw x3, 0(x2) # store 0x6b257ed6accdd0f4 in memory
flw f16, 0(x2) # load 0x6b257ed6accdd0f4 from memory into f16
la x2, scratch
li x3, 0xda41cffd1fb16556 # load x3 with value 0xda41cffd1fb16556
sw x3, 0(x2) # store 0xda41cffd1fb16556 in memory
flw f6, 0(x2) # load 0xda41cffd1fb16556 from memory into f6
fmadd.s f29, f21, f16, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x973616e82799c6d1 # load x3 with value 0x973616e82799c6d1
sw x3, 0(x2) # store 0x973616e82799c6d1 in memory
flw f24, 0(x2) # load 0x973616e82799c6d1 from memory into f24
la x2, scratch
li x3, 0xfdcb9623fc2d7741 # load x3 with value 0xfdcb9623fc2d7741
sw x3, 0(x2) # store 0xfdcb9623fc2d7741 in memory
flw f22, 0(x2) # load 0xfdcb9623fc2d7741 from memory into f22
fmadd.s f25, f29, f24, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xd300fa07537593e1 # load x3 with value 0xd300fa07537593e1
sw x3, 0(x2) # store 0xd300fa07537593e1 in memory
flw f9, 0(x2) # load 0xd300fa07537593e1 from memory into f9
la x2, scratch
li x3, 0xc360e5ed24e9f522 # load x3 with value 0xc360e5ed24e9f522
sw x3, 0(x2) # store 0xc360e5ed24e9f522 in memory
flw f8, 0(x2) # load 0xc360e5ed24e9f522 from memory into f8
fmadd.s f3, f2, f9, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x72cef12088bb066d # load x3 with value 0x72cef12088bb066d
sw x3, 0(x2) # store 0x72cef12088bb066d in memory
flw f19, 0(x2) # load 0x72cef12088bb066d from memory into f19
la x2, scratch
li x3, 0x2aa9f9f8253f7928 # load x3 with value 0x2aa9f9f8253f7928
sw x3, 0(x2) # store 0x2aa9f9f8253f7928 in memory
flw f20, 0(x2) # load 0x2aa9f9f8253f7928 from memory into f20
fmadd.s f18, f7, f19, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0xed49a6e6f371b9b9 # load x3 with value 0xed49a6e6f371b9b9
sw x3, 0(x2) # store 0xed49a6e6f371b9b9 in memory
flw f5, 0(x2) # load 0xed49a6e6f371b9b9 from memory into f5
la x2, scratch
li x3, 0xa3540383caa206c2 # load x3 with value 0xa3540383caa206c2
sw x3, 0(x2) # store 0xa3540383caa206c2 in memory
flw f23, 0(x2) # load 0xa3540383caa206c2 from memory into f23
fmadd.s f17, f8, f5, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x14e6be6c60b6ed97 # load x3 with value 0x14e6be6c60b6ed97
sw x3, 0(x2) # store 0x14e6be6c60b6ed97 in memory
flw f31, 0(x2) # load 0x14e6be6c60b6ed97 from memory into f31
la x2, scratch
li x3, 0x2505b068dbcd65d9 # load x3 with value 0x2505b068dbcd65d9
sw x3, 0(x2) # store 0x2505b068dbcd65d9 in memory
flw f17, 0(x2) # load 0x2505b068dbcd65d9 from memory into f17
fmadd.s f9, f3, f31, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0xc824f666f3034cad # load x3 with value 0xc824f666f3034cad
sw x3, 0(x2) # store 0xc824f666f3034cad in memory
flw f19, 0(x2) # load 0xc824f666f3034cad from memory into f19
la x2, scratch
li x3, 0x54a45c265cd274a # load x3 with value 0x54a45c265cd274a
sw x3, 0(x2) # store 0x54a45c265cd274a in memory
flw f30, 0(x2) # load 0x54a45c265cd274a from memory into f30
fmadd.s f22, f13, f19, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xc1e75251709c3e4a # load x3 with value 0xc1e75251709c3e4a
sw x3, 0(x2) # store 0xc1e75251709c3e4a in memory
flw f31, 0(x2) # load 0xc1e75251709c3e4a from memory into f31
la x2, scratch
li x3, 0xd96f0872deb3fd80 # load x3 with value 0xd96f0872deb3fd80
sw x3, 0(x2) # store 0xd96f0872deb3fd80 in memory
flw f22, 0(x2) # load 0xd96f0872deb3fd80 from memory into f22
fmadd.s f17, f20, f31, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xe0f1b7763a4813f6 # load x3 with value 0xe0f1b7763a4813f6
sw x3, 0(x2) # store 0xe0f1b7763a4813f6 in memory
flw f1, 0(x2) # load 0xe0f1b7763a4813f6 from memory into f1
la x2, scratch
li x3, 0xbb7fc7fbe9d58c5 # load x3 with value 0xbb7fc7fbe9d58c5
sw x3, 0(x2) # store 0xbb7fc7fbe9d58c5 in memory
flw f15, 0(x2) # load 0xbb7fc7fbe9d58c5 from memory into f15
fmadd.s f9, f10, f1, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xc3a43dc46e309aa5 # load x3 with value 0xc3a43dc46e309aa5
sw x3, 0(x2) # store 0xc3a43dc46e309aa5 in memory
flw f30, 0(x2) # load 0xc3a43dc46e309aa5 from memory into f30
la x2, scratch
li x3, 0x2b3a0cbf2ebe0d13 # load x3 with value 0x2b3a0cbf2ebe0d13
sw x3, 0(x2) # store 0x2b3a0cbf2ebe0d13 in memory
flw f6, 0(x2) # load 0x2b3a0cbf2ebe0d13 from memory into f6
fmadd.s f1, f8, f30, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x5cf787d4336b2150 # load x3 with value 0x5cf787d4336b2150
sw x3, 0(x2) # store 0x5cf787d4336b2150 in memory
flw f28, 0(x2) # load 0x5cf787d4336b2150 from memory into f28
la x2, scratch
li x3, 0x2a59bdfa14bdc27c # load x3 with value 0x2a59bdfa14bdc27c
sw x3, 0(x2) # store 0x2a59bdfa14bdc27c in memory
flw f31, 0(x2) # load 0x2a59bdfa14bdc27c from memory into f31
fmadd.s f12, f27, f28, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x1391548822020c13 # load x3 with value 0x1391548822020c13
sw x3, 0(x2) # store 0x1391548822020c13 in memory
flw f16, 0(x2) # load 0x1391548822020c13 from memory into f16
la x2, scratch
li x3, 0x5f94a14f0817b8be # load x3 with value 0x5f94a14f0817b8be
sw x3, 0(x2) # store 0x5f94a14f0817b8be in memory
flw f14, 0(x2) # load 0x5f94a14f0817b8be from memory into f14
fmadd.s f10, f1, f16, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x2f1b99ecad5dcd30 # load x3 with value 0x2f1b99ecad5dcd30
sw x3, 0(x2) # store 0x2f1b99ecad5dcd30 in memory
flw f12, 0(x2) # load 0x2f1b99ecad5dcd30 from memory into f12
la x2, scratch
li x3, 0x1e666933059e434e # load x3 with value 0x1e666933059e434e
sw x3, 0(x2) # store 0x1e666933059e434e in memory
flw f15, 0(x2) # load 0x1e666933059e434e from memory into f15
fmadd.s f21, f26, f12, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x1b2fa26d52037be7 # load x3 with value 0x1b2fa26d52037be7
sw x3, 0(x2) # store 0x1b2fa26d52037be7 in memory
flw f28, 0(x2) # load 0x1b2fa26d52037be7 from memory into f28
la x2, scratch
li x3, 0x454b68df9992cdb1 # load x3 with value 0x454b68df9992cdb1
sw x3, 0(x2) # store 0x454b68df9992cdb1 in memory
flw f31, 0(x2) # load 0x454b68df9992cdb1 from memory into f31
fmadd.s f23, f27, f28, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xdf7767753ec0f485 # load x3 with value 0xdf7767753ec0f485
sw x3, 0(x2) # store 0xdf7767753ec0f485 in memory
flw f19, 0(x2) # load 0xdf7767753ec0f485 from memory into f19
la x2, scratch
li x3, 0x251739dbf4b964a7 # load x3 with value 0x251739dbf4b964a7
sw x3, 0(x2) # store 0x251739dbf4b964a7 in memory
flw f18, 0(x2) # load 0x251739dbf4b964a7 from memory into f18
fmadd.s f31, f13, f19, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0xe045669259dd518e # load x3 with value 0xe045669259dd518e
sw x3, 0(x2) # store 0xe045669259dd518e in memory
flw f7, 0(x2) # load 0xe045669259dd518e from memory into f7
la x2, scratch
li x3, 0x3377cca27a1a70cc # load x3 with value 0x3377cca27a1a70cc
sw x3, 0(x2) # store 0x3377cca27a1a70cc in memory
flw f20, 0(x2) # load 0x3377cca27a1a70cc from memory into f20
fmadd.s f15, f14, f7, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0xe959c1eff18732d3 # load x3 with value 0xe959c1eff18732d3
sw x3, 0(x2) # store 0xe959c1eff18732d3 in memory
flw f13, 0(x2) # load 0xe959c1eff18732d3 from memory into f13
la x2, scratch
li x3, 0x52a4148f637b6399 # load x3 with value 0x52a4148f637b6399
sw x3, 0(x2) # store 0x52a4148f637b6399 in memory
flw f17, 0(x2) # load 0x52a4148f637b6399 from memory into f17
fmadd.s f28, f24, f13, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x92370a6d02b34e44 # load x3 with value 0x92370a6d02b34e44
sw x3, 0(x2) # store 0x92370a6d02b34e44 in memory
flw f8, 0(x2) # load 0x92370a6d02b34e44 from memory into f8
la x2, scratch
li x3, 0xbce82a175521ccd7 # load x3 with value 0xbce82a175521ccd7
sw x3, 0(x2) # store 0xbce82a175521ccd7 in memory
flw f16, 0(x2) # load 0xbce82a175521ccd7 from memory into f16
fmadd.s f17, f29, f8, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x1986b9786aff2a19 # load x3 with value 0x1986b9786aff2a19
sw x3, 0(x2) # store 0x1986b9786aff2a19 in memory
flw f26, 0(x2) # load 0x1986b9786aff2a19 from memory into f26
la x2, scratch
li x3, 0x554735874784124e # load x3 with value 0x554735874784124e
sw x3, 0(x2) # store 0x554735874784124e in memory
flw f17, 0(x2) # load 0x554735874784124e from memory into f17
fmadd.s f20, f10, f26, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x4687255b33d4be40 # load x3 with value 0x4687255b33d4be40
sw x3, 0(x2) # store 0x4687255b33d4be40 in memory
flw f25, 0(x2) # load 0x4687255b33d4be40 from memory into f25
la x2, scratch
li x3, 0x19022bbf464fce11 # load x3 with value 0x19022bbf464fce11
sw x3, 0(x2) # store 0x19022bbf464fce11 in memory
flw f23, 0(x2) # load 0x19022bbf464fce11 from memory into f23
fmadd.s f1, f22, f25, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x3d4e21c02fd53cac # load x3 with value 0x3d4e21c02fd53cac
sw x3, 0(x2) # store 0x3d4e21c02fd53cac in memory
flw f22, 0(x2) # load 0x3d4e21c02fd53cac from memory into f22
la x2, scratch
li x3, 0xd8b5858d80771e48 # load x3 with value 0xd8b5858d80771e48
sw x3, 0(x2) # store 0xd8b5858d80771e48 in memory
flw f5, 0(x2) # load 0xd8b5858d80771e48 from memory into f5
fmadd.s f13, f25, f22, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0xbc6815f79f1d5482 # load x3 with value 0xbc6815f79f1d5482
sw x3, 0(x2) # store 0xbc6815f79f1d5482 in memory
flw f22, 0(x2) # load 0xbc6815f79f1d5482 from memory into f22
la x2, scratch
li x3, 0x22d0aacf94a7932f # load x3 with value 0x22d0aacf94a7932f
sw x3, 0(x2) # store 0x22d0aacf94a7932f in memory
flw f2, 0(x2) # load 0x22d0aacf94a7932f from memory into f2
fmadd.s f28, f20, f22, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x27b8d07bb6032682 # load x3 with value 0x27b8d07bb6032682
sw x3, 0(x2) # store 0x27b8d07bb6032682 in memory
flw f10, 0(x2) # load 0x27b8d07bb6032682 from memory into f10
la x2, scratch
li x3, 0x356768c7b1402d90 # load x3 with value 0x356768c7b1402d90
sw x3, 0(x2) # store 0x356768c7b1402d90 in memory
flw f25, 0(x2) # load 0x356768c7b1402d90 from memory into f25
fmadd.s f29, f14, f10, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xbd00a269eb591a1a # load x3 with value 0xbd00a269eb591a1a
sw x3, 0(x2) # store 0xbd00a269eb591a1a in memory
flw f15, 0(x2) # load 0xbd00a269eb591a1a from memory into f15
la x2, scratch
li x3, 0x1b6e763ffc31032a # load x3 with value 0x1b6e763ffc31032a
sw x3, 0(x2) # store 0x1b6e763ffc31032a in memory
flw f6, 0(x2) # load 0x1b6e763ffc31032a from memory into f6
fmadd.s f11, f16, f15, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x494194173410a2b3 # load x3 with value 0x494194173410a2b3
sw x3, 0(x2) # store 0x494194173410a2b3 in memory
flw f1, 0(x2) # load 0x494194173410a2b3 from memory into f1
la x2, scratch
li x3, 0x8714ed121e2737f6 # load x3 with value 0x8714ed121e2737f6
sw x3, 0(x2) # store 0x8714ed121e2737f6 in memory
flw f25, 0(x2) # load 0x8714ed121e2737f6 from memory into f25
fmadd.s f23, f27, f1, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x8152bad8b124f934 # load x3 with value 0x8152bad8b124f934
sw x3, 0(x2) # store 0x8152bad8b124f934 in memory
flw f27, 0(x2) # load 0x8152bad8b124f934 from memory into f27
la x2, scratch
li x3, 0x1e4df3237901764 # load x3 with value 0x1e4df3237901764
sw x3, 0(x2) # store 0x1e4df3237901764 in memory
flw f15, 0(x2) # load 0x1e4df3237901764 from memory into f15
fmadd.s f22, f14, f27, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x1ed35588a97ee7d7 # load x3 with value 0x1ed35588a97ee7d7
sw x3, 0(x2) # store 0x1ed35588a97ee7d7 in memory
flw f27, 0(x2) # load 0x1ed35588a97ee7d7 from memory into f27
la x2, scratch
li x3, 0x37a36eba875ee76b # load x3 with value 0x37a36eba875ee76b
sw x3, 0(x2) # store 0x37a36eba875ee76b in memory
flw f19, 0(x2) # load 0x37a36eba875ee76b from memory into f19
fmadd.s f31, f1, f27, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x76291e464746a4a6 # load x3 with value 0x76291e464746a4a6
sw x3, 0(x2) # store 0x76291e464746a4a6 in memory
flw f1, 0(x2) # load 0x76291e464746a4a6 from memory into f1
la x2, scratch
li x3, 0x65ce98b0f01343e7 # load x3 with value 0x65ce98b0f01343e7
sw x3, 0(x2) # store 0x65ce98b0f01343e7 in memory
flw f26, 0(x2) # load 0x65ce98b0f01343e7 from memory into f26
fmadd.s f10, f27, f1, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x996290789203b80e # load x3 with value 0x996290789203b80e
sw x3, 0(x2) # store 0x996290789203b80e in memory
flw f22, 0(x2) # load 0x996290789203b80e from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xaa6a1ef0bea93440 # load x3 with value 0xaa6a1ef0bea93440
sw x3, 0(x2) # store 0xaa6a1ef0bea93440 in memory
flw f3, 0(x2) # load 0xaa6a1ef0bea93440 from memory into f3
fmadd.s f7, f22, f16, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0xf62bb309686cc1d5 # load x3 with value 0xf62bb309686cc1d5
sw x3, 0(x2) # store 0xf62bb309686cc1d5 in memory
flw f17, 0(x2) # load 0xf62bb309686cc1d5 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xa97ef325415f8128 # load x3 with value 0xa97ef325415f8128
sw x3, 0(x2) # store 0xa97ef325415f8128 in memory
flw f6, 0(x2) # load 0xa97ef325415f8128 from memory into f6
fmadd.s f8, f17, f22, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0x3b5ca3496db95c3a # load x3 with value 0x3b5ca3496db95c3a
sw x3, 0(x2) # store 0x3b5ca3496db95c3a in memory
flw f28, 0(x2) # load 0x3b5ca3496db95c3a from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x83fac5378b0bb7df # load x3 with value 0x83fac5378b0bb7df
sw x3, 0(x2) # store 0x83fac5378b0bb7df in memory
flw f19, 0(x2) # load 0x83fac5378b0bb7df from memory into f19
fmadd.s f21, f28, f9, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0x7a29bf8ab09e1bd8 # load x3 with value 0x7a29bf8ab09e1bd8
sw x3, 0(x2) # store 0x7a29bf8ab09e1bd8 in memory
flw f14, 0(x2) # load 0x7a29bf8ab09e1bd8 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x779d23e79801eeb8 # load x3 with value 0x779d23e79801eeb8
sw x3, 0(x2) # store 0x779d23e79801eeb8 in memory
flw f20, 0(x2) # load 0x779d23e79801eeb8 from memory into f20
fmadd.s f15, f14, f28, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0xd07c797739e58fd4 # load x3 with value 0xd07c797739e58fd4
sw x3, 0(x2) # store 0xd07c797739e58fd4 in memory
flw f8, 0(x2) # load 0xd07c797739e58fd4 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xbdd9253cf31f13a6 # load x3 with value 0xbdd9253cf31f13a6
sw x3, 0(x2) # store 0xbdd9253cf31f13a6 in memory
flw f10, 0(x2) # load 0xbdd9253cf31f13a6 from memory into f10
fmadd.s f2, f8, f27, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0xff618a65a84c62b4 # load x3 with value 0xff618a65a84c62b4
sw x3, 0(x2) # store 0xff618a65a84c62b4 in memory
flw f14, 0(x2) # load 0xff618a65a84c62b4 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x9956a523eaa80cd7 # load x3 with value 0x9956a523eaa80cd7
sw x3, 0(x2) # store 0x9956a523eaa80cd7 in memory
flw f13, 0(x2) # load 0x9956a523eaa80cd7 from memory into f13
fmadd.s f29, f14, f8, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0xc3c895075da3cc6 # load x3 with value 0xc3c895075da3cc6
sw x3, 0(x2) # store 0xc3c895075da3cc6 in memory
flw f15, 0(x2) # load 0xc3c895075da3cc6 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x42a24f131e98c45 # load x3 with value 0x42a24f131e98c45
sw x3, 0(x2) # store 0x42a24f131e98c45 in memory
flw f13, 0(x2) # load 0x42a24f131e98c45 from memory into f13
fmadd.s f2, f15, f29, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0xf524d0dcf264b47e # load x3 with value 0xf524d0dcf264b47e
sw x3, 0(x2) # store 0xf524d0dcf264b47e in memory
flw f15, 0(x2) # load 0xf524d0dcf264b47e from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x11e29324640d91be # load x3 with value 0x11e29324640d91be
sw x3, 0(x2) # store 0x11e29324640d91be in memory
flw f28, 0(x2) # load 0x11e29324640d91be from memory into f28
fmadd.s f21, f15, f6, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0xdfd3f86c8d2aa80f # load x3 with value 0xdfd3f86c8d2aa80f
sw x3, 0(x2) # store 0xdfd3f86c8d2aa80f in memory
flw f18, 0(x2) # load 0xdfd3f86c8d2aa80f from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x5ddc132051885ada # load x3 with value 0x5ddc132051885ada
sw x3, 0(x2) # store 0x5ddc132051885ada in memory
flw f29, 0(x2) # load 0x5ddc132051885ada from memory into f29
fmadd.s f1, f18, f25, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0x3b23a1d91702a5b9 # load x3 with value 0x3b23a1d91702a5b9
sw x3, 0(x2) # store 0x3b23a1d91702a5b9 in memory
flw f19, 0(x2) # load 0x3b23a1d91702a5b9 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0xb2b880adb8dc48c7 # load x3 with value 0xb2b880adb8dc48c7
sw x3, 0(x2) # store 0xb2b880adb8dc48c7 in memory
flw f25, 0(x2) # load 0xb2b880adb8dc48c7 from memory into f25
fmadd.s f15, f19, f10, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0xd061de62716e2992 # load x3 with value 0xd061de62716e2992
sw x3, 0(x2) # store 0xd061de62716e2992 in memory
flw f18, 0(x2) # load 0xd061de62716e2992 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x4e1e4b9d99114b6e # load x3 with value 0x4e1e4b9d99114b6e
sw x3, 0(x2) # store 0x4e1e4b9d99114b6e in memory
flw f6, 0(x2) # load 0x4e1e4b9d99114b6e from memory into f6
fmadd.s f24, f18, f22, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0x687905144d2c5464 # load x3 with value 0x687905144d2c5464
sw x3, 0(x2) # store 0x687905144d2c5464 in memory
flw f12, 0(x2) # load 0x687905144d2c5464 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x9dad25d9ca10eb1b # load x3 with value 0x9dad25d9ca10eb1b
sw x3, 0(x2) # store 0x9dad25d9ca10eb1b in memory
flw f11, 0(x2) # load 0x9dad25d9ca10eb1b from memory into f11
fmadd.s f17, f12, f29, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0xf2a9e373c4ff3c5d # load x3 with value 0xf2a9e373c4ff3c5d
sw x3, 0(x2) # store 0xf2a9e373c4ff3c5d in memory
flw f19, 0(x2) # load 0xf2a9e373c4ff3c5d from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xc9d1ef5968379837 # load x3 with value 0xc9d1ef5968379837
sw x3, 0(x2) # store 0xc9d1ef5968379837 in memory
flw f2, 0(x2) # load 0xc9d1ef5968379837 from memory into f2
fmadd.s f31, f19, f9, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0xb38072142724ba12 # load x3 with value 0xb38072142724ba12
sw x3, 0(x2) # store 0xb38072142724ba12 in memory
flw f14, 0(x2) # load 0xb38072142724ba12 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x56e2f0236e0129b1 # load x3 with value 0x56e2f0236e0129b1
sw x3, 0(x2) # store 0x56e2f0236e0129b1 in memory
flw f23, 0(x2) # load 0x56e2f0236e0129b1 from memory into f23
fmadd.s f10, f14, f20, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0xfe82c0746723bc88 # load x3 with value 0xfe82c0746723bc88
sw x3, 0(x2) # store 0xfe82c0746723bc88 in memory
flw f23, 0(x2) # load 0xfe82c0746723bc88 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xa8d485192a5431c9 # load x3 with value 0xa8d485192a5431c9
sw x3, 0(x2) # store 0xa8d485192a5431c9 in memory
flw f22, 0(x2) # load 0xa8d485192a5431c9 from memory into f22
fmadd.s f25, f23, f15, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0x69f5209884e09880 # load x3 with value 0x69f5209884e09880
sw x3, 0(x2) # store 0x69f5209884e09880 in memory
flw f24, 0(x2) # load 0x69f5209884e09880 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xa747f45122c34c1c # load x3 with value 0xa747f45122c34c1c
sw x3, 0(x2) # store 0xa747f45122c34c1c in memory
flw f18, 0(x2) # load 0xa747f45122c34c1c from memory into f18
fmadd.s f28, f24, f23, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0xbda3659257ae8d46 # load x3 with value 0xbda3659257ae8d46
sw x3, 0(x2) # store 0xbda3659257ae8d46 in memory
flw f25, 0(x2) # load 0xbda3659257ae8d46 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x10fbfbbec753e229 # load x3 with value 0x10fbfbbec753e229
sw x3, 0(x2) # store 0x10fbfbbec753e229 in memory
flw f24, 0(x2) # load 0x10fbfbbec753e229 from memory into f24
fmadd.s f30, f25, f26, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0xe31504e95006c974 # load x3 with value 0xe31504e95006c974
sw x3, 0(x2) # store 0xe31504e95006c974 in memory
flw f30, 0(x2) # load 0xe31504e95006c974 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xc6d0aee9acfd0372 # load x3 with value 0xc6d0aee9acfd0372
sw x3, 0(x2) # store 0xc6d0aee9acfd0372 in memory
flw f13, 0(x2) # load 0xc6d0aee9acfd0372 from memory into f13
fmadd.s f15, f30, f2, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0xda0507022d85920c # load x3 with value 0xda0507022d85920c
sw x3, 0(x2) # store 0xda0507022d85920c in memory
flw f9, 0(x2) # load 0xda0507022d85920c from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xcabe363252bb0499 # load x3 with value 0xcabe363252bb0499
sw x3, 0(x2) # store 0xcabe363252bb0499 in memory
flw f21, 0(x2) # load 0xcabe363252bb0499 from memory into f21
fmadd.s f26, f9, f31, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xc46bf8908dc017c3 # load x3 with value 0xc46bf8908dc017c3
sw x3, 0(x2) # store 0xc46bf8908dc017c3 in memory
flw f18, 0(x2) # load 0xc46bf8908dc017c3 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x7492071e0ae62f1b # load x3 with value 0x7492071e0ae62f1b
sw x3, 0(x2) # store 0x7492071e0ae62f1b in memory
flw f9, 0(x2) # load 0x7492071e0ae62f1b from memory into f9
fmadd.s f10, f18, f27, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0x86b3db50bf6bdba3 # load x3 with value 0x86b3db50bf6bdba3
sw x3, 0(x2) # store 0x86b3db50bf6bdba3 in memory
flw f31, 0(x2) # load 0x86b3db50bf6bdba3 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xa0dfac8d513ca5f # load x3 with value 0xa0dfac8d513ca5f
sw x3, 0(x2) # store 0xa0dfac8d513ca5f in memory
flw f14, 0(x2) # load 0xa0dfac8d513ca5f from memory into f14
fmadd.s f28, f31, f26, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0x97e00a718d9a9952 # load x3 with value 0x97e00a718d9a9952
sw x3, 0(x2) # store 0x97e00a718d9a9952 in memory
flw f7, 0(x2) # load 0x97e00a718d9a9952 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x782462bcbfc00833 # load x3 with value 0x782462bcbfc00833
sw x3, 0(x2) # store 0x782462bcbfc00833 in memory
flw f3, 0(x2) # load 0x782462bcbfc00833 from memory into f3
fmadd.s f19, f7, f2, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0xb697277ae7813247 # load x3 with value 0xb697277ae7813247
sw x3, 0(x2) # store 0xb697277ae7813247 in memory
flw f10, 0(x2) # load 0xb697277ae7813247 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xe979e6f2743b96f4 # load x3 with value 0xe979e6f2743b96f4
sw x3, 0(x2) # store 0xe979e6f2743b96f4 in memory
flw f28, 0(x2) # load 0xe979e6f2743b96f4 from memory into f28
fmadd.s f23, f10, f14, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0x559c07a5d138ca21 # load x3 with value 0x559c07a5d138ca21
sw x3, 0(x2) # store 0x559c07a5d138ca21 in memory
flw f10, 0(x2) # load 0x559c07a5d138ca21 from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x84b717bcf681a29a # load x3 with value 0x84b717bcf681a29a
sw x3, 0(x2) # store 0x84b717bcf681a29a in memory
flw f2, 0(x2) # load 0x84b717bcf681a29a from memory into f2
fmadd.s f18, f10, f3, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0x1c4025aac949e186 # load x3 with value 0x1c4025aac949e186
sw x3, 0(x2) # store 0x1c4025aac949e186 in memory
flw f11, 0(x2) # load 0x1c4025aac949e186 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x91f6b32cdb067b74 # load x3 with value 0x91f6b32cdb067b74
sw x3, 0(x2) # store 0x91f6b32cdb067b74 in memory
flw f21, 0(x2) # load 0x91f6b32cdb067b74 from memory into f21
fmadd.s f9, f11, f7, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0x176a496567c000b0 # load x3 with value 0x176a496567c000b0
sw x3, 0(x2) # store 0x176a496567c000b0 in memory
flw f14, 0(x2) # load 0x176a496567c000b0 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0xec0f73dfccb7997 # load x3 with value 0xec0f73dfccb7997
sw x3, 0(x2) # store 0xec0f73dfccb7997 in memory
flw f19, 0(x2) # load 0xec0f73dfccb7997 from memory into f19
fmadd.s f6, f14, f18, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0x6b0dc16d59afdd17 # load x3 with value 0x6b0dc16d59afdd17
sw x3, 0(x2) # store 0x6b0dc16d59afdd17 in memory
flw f8, 0(x2) # load 0x6b0dc16d59afdd17 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xf87fc685404b1ee4 # load x3 with value 0xf87fc685404b1ee4
sw x3, 0(x2) # store 0xf87fc685404b1ee4 in memory
flw f12, 0(x2) # load 0xf87fc685404b1ee4 from memory into f12
fmadd.s f6, f8, f20, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0x358ed764cbb21d97 # load x3 with value 0x358ed764cbb21d97
sw x3, 0(x2) # store 0x358ed764cbb21d97 in memory
flw f24, 0(x2) # load 0x358ed764cbb21d97 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0xcdd8f24db6418594 # load x3 with value 0xcdd8f24db6418594
sw x3, 0(x2) # store 0xcdd8f24db6418594 in memory
flw f13, 0(x2) # load 0xcdd8f24db6418594 from memory into f13
fmadd.s f25, f24, f12, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0x86bd032e42f85ff8 # load x3 with value 0x86bd032e42f85ff8
sw x3, 0(x2) # store 0x86bd032e42f85ff8 in memory
flw f17, 0(x2) # load 0x86bd032e42f85ff8 from memory into f17
la x2, scratch
li x3, 0xdf614f1b67befe28 # load x3 with value 0xdf614f1b67befe28
sw x3, 0(x2) # store 0xdf614f1b67befe28 in memory
flw f2, 0(x2) # load 0xdf614f1b67befe28 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmadd.s f12, f17, f2, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0xd975f134a64e6525 # load x3 with value 0xd975f134a64e6525
sw x3, 0(x2) # store 0xd975f134a64e6525 in memory
flw f12, 0(x2) # load 0xd975f134a64e6525 from memory into f12
la x2, scratch
li x3, 0x3489a0eb8f13fc6e # load x3 with value 0x3489a0eb8f13fc6e
sw x3, 0(x2) # store 0x3489a0eb8f13fc6e in memory
flw f24, 0(x2) # load 0x3489a0eb8f13fc6e from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmadd.s f22, f12, f24, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0xa836830a60f04eff # load x3 with value 0xa836830a60f04eff
sw x3, 0(x2) # store 0xa836830a60f04eff in memory
flw f24, 0(x2) # load 0xa836830a60f04eff from memory into f24
la x2, scratch
li x3, 0x20b799a6f1046507 # load x3 with value 0x20b799a6f1046507
sw x3, 0(x2) # store 0x20b799a6f1046507 in memory
flw f2, 0(x2) # load 0x20b799a6f1046507 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmadd.s f14, f24, f2, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0xb93a721961bdac34 # load x3 with value 0xb93a721961bdac34
sw x3, 0(x2) # store 0xb93a721961bdac34 in memory
flw f7, 0(x2) # load 0xb93a721961bdac34 from memory into f7
la x2, scratch
li x3, 0x7b618e60e09684ba # load x3 with value 0x7b618e60e09684ba
sw x3, 0(x2) # store 0x7b618e60e09684ba in memory
flw f22, 0(x2) # load 0x7b618e60e09684ba from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmadd.s f20, f7, f22, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0x8045bfb830144b03 # load x3 with value 0x8045bfb830144b03
sw x3, 0(x2) # store 0x8045bfb830144b03 in memory
flw f26, 0(x2) # load 0x8045bfb830144b03 from memory into f26
la x2, scratch
li x3, 0x1c3ab38f125b9ab6 # load x3 with value 0x1c3ab38f125b9ab6
sw x3, 0(x2) # store 0x1c3ab38f125b9ab6 in memory
flw f23, 0(x2) # load 0x1c3ab38f125b9ab6 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmadd.s f18, f26, f23, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0xe619a46fa5cd5418 # load x3 with value 0xe619a46fa5cd5418
sw x3, 0(x2) # store 0xe619a46fa5cd5418 in memory
flw f21, 0(x2) # load 0xe619a46fa5cd5418 from memory into f21
la x2, scratch
li x3, 0x1aed78fc30948e92 # load x3 with value 0x1aed78fc30948e92
sw x3, 0(x2) # store 0x1aed78fc30948e92 in memory
flw f15, 0(x2) # load 0x1aed78fc30948e92 from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f24, f21, f15, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0x9247855ddea21ee4 # load x3 with value 0x9247855ddea21ee4
sw x3, 0(x2) # store 0x9247855ddea21ee4 in memory
flw f20, 0(x2) # load 0x9247855ddea21ee4 from memory into f20
la x2, scratch
li x3, 0x84870fe198dddd7d # load x3 with value 0x84870fe198dddd7d
sw x3, 0(x2) # store 0x84870fe198dddd7d in memory
flw f26, 0(x2) # load 0x84870fe198dddd7d from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmadd.s f27, f20, f26, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0xcc2eadc95d38c285 # load x3 with value 0xcc2eadc95d38c285
sw x3, 0(x2) # store 0xcc2eadc95d38c285 in memory
flw f15, 0(x2) # load 0xcc2eadc95d38c285 from memory into f15
la x2, scratch
li x3, 0x44ac6c9c77a6cefc # load x3 with value 0x44ac6c9c77a6cefc
sw x3, 0(x2) # store 0x44ac6c9c77a6cefc in memory
flw f18, 0(x2) # load 0x44ac6c9c77a6cefc from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmadd.s f16, f15, f18, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0x1c4b0b674c42a35a # load x3 with value 0x1c4b0b674c42a35a
sw x3, 0(x2) # store 0x1c4b0b674c42a35a in memory
flw f23, 0(x2) # load 0x1c4b0b674c42a35a from memory into f23
la x2, scratch
li x3, 0x1ef7eadeb3105598 # load x3 with value 0x1ef7eadeb3105598
sw x3, 0(x2) # store 0x1ef7eadeb3105598 in memory
flw f12, 0(x2) # load 0x1ef7eadeb3105598 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fmadd.s f11, f23, f12, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0xfe489045fbcb5093 # load x3 with value 0xfe489045fbcb5093
sw x3, 0(x2) # store 0xfe489045fbcb5093 in memory
flw f8, 0(x2) # load 0xfe489045fbcb5093 from memory into f8
la x2, scratch
li x3, 0xee73c0920ada84d # load x3 with value 0xee73c0920ada84d
sw x3, 0(x2) # store 0xee73c0920ada84d in memory
flw f17, 0(x2) # load 0xee73c0920ada84d from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmadd.s f14, f8, f17, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0xae055d0f4370ab82 # load x3 with value 0xae055d0f4370ab82
sw x3, 0(x2) # store 0xae055d0f4370ab82 in memory
flw f8, 0(x2) # load 0xae055d0f4370ab82 from memory into f8
la x2, scratch
li x3, 0x11debeed406225a9 # load x3 with value 0x11debeed406225a9
sw x3, 0(x2) # store 0x11debeed406225a9 in memory
flw f16, 0(x2) # load 0x11debeed406225a9 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmadd.s f27, f8, f16, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0x77b5104b96562539 # load x3 with value 0x77b5104b96562539
sw x3, 0(x2) # store 0x77b5104b96562539 in memory
flw f9, 0(x2) # load 0x77b5104b96562539 from memory into f9
la x2, scratch
li x3, 0x155ba727fc4de053 # load x3 with value 0x155ba727fc4de053
sw x3, 0(x2) # store 0x155ba727fc4de053 in memory
flw f20, 0(x2) # load 0x155ba727fc4de053 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmadd.s f21, f9, f20, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0xb5d014fb817b4fa1 # load x3 with value 0xb5d014fb817b4fa1
sw x3, 0(x2) # store 0xb5d014fb817b4fa1 in memory
flw f27, 0(x2) # load 0xb5d014fb817b4fa1 from memory into f27
la x2, scratch
li x3, 0x843df04e730096c1 # load x3 with value 0x843df04e730096c1
sw x3, 0(x2) # store 0x843df04e730096c1 in memory
flw f1, 0(x2) # load 0x843df04e730096c1 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmadd.s f18, f27, f1, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0x807667301fc9552d # load x3 with value 0x807667301fc9552d
sw x3, 0(x2) # store 0x807667301fc9552d in memory
flw f8, 0(x2) # load 0x807667301fc9552d from memory into f8
la x2, scratch
li x3, 0x1c2805a163ee547b # load x3 with value 0x1c2805a163ee547b
sw x3, 0(x2) # store 0x1c2805a163ee547b in memory
flw f14, 0(x2) # load 0x1c2805a163ee547b from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmadd.s f15, f8, f14, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0x51474144dc7fbc2 # load x3 with value 0x51474144dc7fbc2
sw x3, 0(x2) # store 0x51474144dc7fbc2 in memory
flw f29, 0(x2) # load 0x51474144dc7fbc2 from memory into f29
la x2, scratch
li x3, 0x978c39ec31b7cbae # load x3 with value 0x978c39ec31b7cbae
sw x3, 0(x2) # store 0x978c39ec31b7cbae in memory
flw f27, 0(x2) # load 0x978c39ec31b7cbae from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmadd.s f28, f29, f27, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0x6b466871fb174f91 # load x3 with value 0x6b466871fb174f91
sw x3, 0(x2) # store 0x6b466871fb174f91 in memory
flw f20, 0(x2) # load 0x6b466871fb174f91 from memory into f20
la x2, scratch
li x3, 0x530afd17ea04c394 # load x3 with value 0x530afd17ea04c394
sw x3, 0(x2) # store 0x530afd17ea04c394 in memory
flw f27, 0(x2) # load 0x530afd17ea04c394 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f8, f20, f27, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x49df237fbf591e5d # load x3 with value 0x49df237fbf591e5d
sw x3, 0(x2) # store 0x49df237fbf591e5d in memory
flw f30, 0(x2) # load 0x49df237fbf591e5d from memory into f30
la x2, scratch
li x3, 0xf2a8e601ce195ac8 # load x3 with value 0xf2a8e601ce195ac8
sw x3, 0(x2) # store 0xf2a8e601ce195ac8 in memory
flw f12, 0(x2) # load 0xf2a8e601ce195ac8 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fmadd.s f17, f30, f12, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0xb0982c84a305d087 # load x3 with value 0xb0982c84a305d087
sw x3, 0(x2) # store 0xb0982c84a305d087 in memory
flw f8, 0(x2) # load 0xb0982c84a305d087 from memory into f8
la x2, scratch
li x3, 0xada4d9d1c0c36487 # load x3 with value 0xada4d9d1c0c36487
sw x3, 0(x2) # store 0xada4d9d1c0c36487 in memory
flw f26, 0(x2) # load 0xada4d9d1c0c36487 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f18, f8, f26, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0x1cf13a739db13ff5 # load x3 with value 0x1cf13a739db13ff5
sw x3, 0(x2) # store 0x1cf13a739db13ff5 in memory
flw f11, 0(x2) # load 0x1cf13a739db13ff5 from memory into f11
la x2, scratch
li x3, 0x6d06385f52059388 # load x3 with value 0x6d06385f52059388
sw x3, 0(x2) # store 0x6d06385f52059388 in memory
flw f17, 0(x2) # load 0x6d06385f52059388 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmadd.s f25, f11, f17, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0x1bda87e4a2e828f2 # load x3 with value 0x1bda87e4a2e828f2
sw x3, 0(x2) # store 0x1bda87e4a2e828f2 in memory
flw f21, 0(x2) # load 0x1bda87e4a2e828f2 from memory into f21
la x2, scratch
li x3, 0xcafcd507ff0f030a # load x3 with value 0xcafcd507ff0f030a
sw x3, 0(x2) # store 0xcafcd507ff0f030a in memory
flw f11, 0(x2) # load 0xcafcd507ff0f030a from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmadd.s f13, f21, f11, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0x67e184b4f7af805a # load x3 with value 0x67e184b4f7af805a
sw x3, 0(x2) # store 0x67e184b4f7af805a in memory
flw f9, 0(x2) # load 0x67e184b4f7af805a from memory into f9
la x2, scratch
li x3, 0xa48129a058fd6f42 # load x3 with value 0xa48129a058fd6f42
sw x3, 0(x2) # store 0xa48129a058fd6f42 in memory
flw f14, 0(x2) # load 0xa48129a058fd6f42 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fmadd.s f29, f9, f14, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0x8d51cf4ffac22ef # load x3 with value 0x8d51cf4ffac22ef
sw x3, 0(x2) # store 0x8d51cf4ffac22ef in memory
flw f19, 0(x2) # load 0x8d51cf4ffac22ef from memory into f19
la x2, scratch
li x3, 0xb5bcf9c7c8013987 # load x3 with value 0xb5bcf9c7c8013987
sw x3, 0(x2) # store 0xb5bcf9c7c8013987 in memory
flw f30, 0(x2) # load 0xb5bcf9c7c8013987 from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmadd.s f23, f19, f30, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0x544d04c11e1a1732 # load x3 with value 0x544d04c11e1a1732
sw x3, 0(x2) # store 0x544d04c11e1a1732 in memory
flw f19, 0(x2) # load 0x544d04c11e1a1732 from memory into f19
la x2, scratch
li x3, 0xafd9de3a45bb8466 # load x3 with value 0xafd9de3a45bb8466
sw x3, 0(x2) # store 0xafd9de3a45bb8466 in memory
flw f5, 0(x2) # load 0xafd9de3a45bb8466 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fmadd.s f2, f19, f5, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0xa85c6e20084aac2b # load x3 with value 0xa85c6e20084aac2b
sw x3, 0(x2) # store 0xa85c6e20084aac2b in memory
flw f9, 0(x2) # load 0xa85c6e20084aac2b from memory into f9
la x2, scratch
li x3, 0xb0aa72a2eedc508d # load x3 with value 0xb0aa72a2eedc508d
sw x3, 0(x2) # store 0xb0aa72a2eedc508d in memory
flw f18, 0(x2) # load 0xb0aa72a2eedc508d from memory into f18
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fmadd.s f15, f9, f18, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0x8dda4a99b57a410c # load x3 with value 0x8dda4a99b57a410c
sw x3, 0(x2) # store 0x8dda4a99b57a410c in memory
flw f12, 0(x2) # load 0x8dda4a99b57a410c from memory into f12
la x2, scratch
li x3, 0x5e1c3bd53c88f19e # load x3 with value 0x5e1c3bd53c88f19e
sw x3, 0(x2) # store 0x5e1c3bd53c88f19e in memory
flw f9, 0(x2) # load 0x5e1c3bd53c88f19e from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fmadd.s f8, f12, f9, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0xd0b58d9391025b2f # load x3 with value 0xd0b58d9391025b2f
sw x3, 0(x2) # store 0xd0b58d9391025b2f in memory
flw f16, 0(x2) # load 0xd0b58d9391025b2f from memory into f16
la x2, scratch
li x3, 0x9d8299bd5ed95185 # load x3 with value 0x9d8299bd5ed95185
sw x3, 0(x2) # store 0x9d8299bd5ed95185 in memory
flw f8, 0(x2) # load 0x9d8299bd5ed95185 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fmadd.s f28, f16, f8, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0x29ea901ef6b1124a # load x3 with value 0x29ea901ef6b1124a
sw x3, 0(x2) # store 0x29ea901ef6b1124a in memory
flw f27, 0(x2) # load 0x29ea901ef6b1124a from memory into f27
la x2, scratch
li x3, 0x226e5f1c49cbf163 # load x3 with value 0x226e5f1c49cbf163
sw x3, 0(x2) # store 0x226e5f1c49cbf163 in memory
flw f9, 0(x2) # load 0x226e5f1c49cbf163 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f31, f27, f9, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x12af6d83c5bb47df # load x3 with value 0x12af6d83c5bb47df
sw x3, 0(x2) # store 0x12af6d83c5bb47df in memory
flw f31, 0(x2) # load 0x12af6d83c5bb47df from memory into f31
la x2, scratch
li x3, 0x44fa8e1bf43e2a3a # load x3 with value 0x44fa8e1bf43e2a3a
sw x3, 0(x2) # store 0x44fa8e1bf43e2a3a in memory
flw f2, 0(x2) # load 0x44fa8e1bf43e2a3a from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmadd.s f8, f31, f2, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x1a0bb72d1960ab4c # load x3 with value 0x1a0bb72d1960ab4c
sw x3, 0(x2) # store 0x1a0bb72d1960ab4c in memory
flw f0, 0(x2) # load 0x1a0bb72d1960ab4c from memory into f0
la x2, scratch
li x3, 0x22b273838dd735b2 # load x3 with value 0x22b273838dd735b2
sw x3, 0(x2) # store 0x22b273838dd735b2 in memory
flw f30, 0(x2) # load 0x22b273838dd735b2 from memory into f30
la x2, scratch
li x3, 0x6fc0fa45dd395ecd # load x3 with value 0x6fc0fa45dd395ecd
sw x3, 0(x2) # store 0x6fc0fa45dd395ecd in memory
flw f10, 0(x2) # load 0x6fc0fa45dd395ecd from memory into f10
fmadd.s f0, f0, f30, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0xba8a83844363df35 # load x3 with value 0xba8a83844363df35
sw x3, 0(x2) # store 0xba8a83844363df35 in memory
flw f1, 0(x2) # load 0xba8a83844363df35 from memory into f1
la x2, scratch
li x3, 0xdc43c0bbb966304f # load x3 with value 0xdc43c0bbb966304f
sw x3, 0(x2) # store 0xdc43c0bbb966304f in memory
flw f29, 0(x2) # load 0xdc43c0bbb966304f from memory into f29
la x2, scratch
li x3, 0xffdce9598a946c49 # load x3 with value 0xffdce9598a946c49
sw x3, 0(x2) # store 0xffdce9598a946c49 in memory
flw f31, 0(x2) # load 0xffdce9598a946c49 from memory into f31
fmadd.s f1, f1, f29, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0x787758f3249f5492 # load x3 with value 0x787758f3249f5492
sw x3, 0(x2) # store 0x787758f3249f5492 in memory
flw f2, 0(x2) # load 0x787758f3249f5492 from memory into f2
la x2, scratch
li x3, 0xfb9a03e446da57d6 # load x3 with value 0xfb9a03e446da57d6
sw x3, 0(x2) # store 0xfb9a03e446da57d6 in memory
flw f12, 0(x2) # load 0xfb9a03e446da57d6 from memory into f12
la x2, scratch
li x3, 0x3633c5c1b97caedd # load x3 with value 0x3633c5c1b97caedd
sw x3, 0(x2) # store 0x3633c5c1b97caedd in memory
flw f17, 0(x2) # load 0x3633c5c1b97caedd from memory into f17
fmadd.s f2, f2, f12, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x257427894892a112 # load x3 with value 0x257427894892a112
sw x3, 0(x2) # store 0x257427894892a112 in memory
flw f3, 0(x2) # load 0x257427894892a112 from memory into f3
la x2, scratch
li x3, 0x177de11c9f424f77 # load x3 with value 0x177de11c9f424f77
sw x3, 0(x2) # store 0x177de11c9f424f77 in memory
flw f20, 0(x2) # load 0x177de11c9f424f77 from memory into f20
la x2, scratch
li x3, 0xbcc9a610e342e575 # load x3 with value 0xbcc9a610e342e575
sw x3, 0(x2) # store 0xbcc9a610e342e575 in memory
flw f17, 0(x2) # load 0xbcc9a610e342e575 from memory into f17
fmadd.s f3, f3, f20, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa61c2bf257ab86fb # load x3 with value 0xa61c2bf257ab86fb
sw x3, 0(x2) # store 0xa61c2bf257ab86fb in memory
flw f4, 0(x2) # load 0xa61c2bf257ab86fb from memory into f4
la x2, scratch
li x3, 0xa1f5d3748066f7bd # load x3 with value 0xa1f5d3748066f7bd
sw x3, 0(x2) # store 0xa1f5d3748066f7bd in memory
flw f15, 0(x2) # load 0xa1f5d3748066f7bd from memory into f15
la x2, scratch
li x3, 0x1328048a8df64f93 # load x3 with value 0x1328048a8df64f93
sw x3, 0(x2) # store 0x1328048a8df64f93 in memory
flw f28, 0(x2) # load 0x1328048a8df64f93 from memory into f28
fmadd.s f4, f4, f15, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x541744ca49351df9 # load x3 with value 0x541744ca49351df9
sw x3, 0(x2) # store 0x541744ca49351df9 in memory
flw f5, 0(x2) # load 0x541744ca49351df9 from memory into f5
la x2, scratch
li x3, 0xe156e1baf2c37042 # load x3 with value 0xe156e1baf2c37042
sw x3, 0(x2) # store 0xe156e1baf2c37042 in memory
flw f24, 0(x2) # load 0xe156e1baf2c37042 from memory into f24
la x2, scratch
li x3, 0xb75f7a1fd82c91c6 # load x3 with value 0xb75f7a1fd82c91c6
sw x3, 0(x2) # store 0xb75f7a1fd82c91c6 in memory
flw f18, 0(x2) # load 0xb75f7a1fd82c91c6 from memory into f18
fmadd.s f5, f5, f24, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc27ad404d610934c # load x3 with value 0xc27ad404d610934c
sw x3, 0(x2) # store 0xc27ad404d610934c in memory
flw f6, 0(x2) # load 0xc27ad404d610934c from memory into f6
la x2, scratch
li x3, 0xe1d9f6324d680739 # load x3 with value 0xe1d9f6324d680739
sw x3, 0(x2) # store 0xe1d9f6324d680739 in memory
flw f23, 0(x2) # load 0xe1d9f6324d680739 from memory into f23
la x2, scratch
li x3, 0x748e7a8507230a4c # load x3 with value 0x748e7a8507230a4c
sw x3, 0(x2) # store 0x748e7a8507230a4c in memory
flw f25, 0(x2) # load 0x748e7a8507230a4c from memory into f25
fmadd.s f6, f6, f23, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xeec7e5fcbd5508ff # load x3 with value 0xeec7e5fcbd5508ff
sw x3, 0(x2) # store 0xeec7e5fcbd5508ff in memory
flw f7, 0(x2) # load 0xeec7e5fcbd5508ff from memory into f7
la x2, scratch
li x3, 0x55d4aca63af06c19 # load x3 with value 0x55d4aca63af06c19
sw x3, 0(x2) # store 0x55d4aca63af06c19 in memory
flw f31, 0(x2) # load 0x55d4aca63af06c19 from memory into f31
la x2, scratch
li x3, 0xe67e42463c983699 # load x3 with value 0xe67e42463c983699
sw x3, 0(x2) # store 0xe67e42463c983699 in memory
flw f10, 0(x2) # load 0xe67e42463c983699 from memory into f10
fmadd.s f7, f7, f31, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x6a67631a233a364b # load x3 with value 0x6a67631a233a364b
sw x3, 0(x2) # store 0x6a67631a233a364b in memory
flw f8, 0(x2) # load 0x6a67631a233a364b from memory into f8
la x2, scratch
li x3, 0x277037a0a7c6513f # load x3 with value 0x277037a0a7c6513f
sw x3, 0(x2) # store 0x277037a0a7c6513f in memory
flw f9, 0(x2) # load 0x277037a0a7c6513f from memory into f9
la x2, scratch
li x3, 0x873070b99d1497df # load x3 with value 0x873070b99d1497df
sw x3, 0(x2) # store 0x873070b99d1497df in memory
flw f25, 0(x2) # load 0x873070b99d1497df from memory into f25
fmadd.s f8, f8, f9, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xfe04547cb7d2760c # load x3 with value 0xfe04547cb7d2760c
sw x3, 0(x2) # store 0xfe04547cb7d2760c in memory
flw f9, 0(x2) # load 0xfe04547cb7d2760c from memory into f9
la x2, scratch
li x3, 0x28ef4586a50f007c # load x3 with value 0x28ef4586a50f007c
sw x3, 0(x2) # store 0x28ef4586a50f007c in memory
flw f8, 0(x2) # load 0x28ef4586a50f007c from memory into f8
la x2, scratch
li x3, 0x170e11824fc096f8 # load x3 with value 0x170e11824fc096f8
sw x3, 0(x2) # store 0x170e11824fc096f8 in memory
flw f25, 0(x2) # load 0x170e11824fc096f8 from memory into f25
fmadd.s f9, f9, f8, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0xea0c1b8dbcf926ab # load x3 with value 0xea0c1b8dbcf926ab
sw x3, 0(x2) # store 0xea0c1b8dbcf926ab in memory
flw f10, 0(x2) # load 0xea0c1b8dbcf926ab from memory into f10
la x2, scratch
li x3, 0xfb36663e456e198f # load x3 with value 0xfb36663e456e198f
sw x3, 0(x2) # store 0xfb36663e456e198f in memory
flw f14, 0(x2) # load 0xfb36663e456e198f from memory into f14
la x2, scratch
li x3, 0x5c845d661d7a1798 # load x3 with value 0x5c845d661d7a1798
sw x3, 0(x2) # store 0x5c845d661d7a1798 in memory
flw f21, 0(x2) # load 0x5c845d661d7a1798 from memory into f21
fmadd.s f10, f10, f14, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0xe00d202ffc6957f1 # load x3 with value 0xe00d202ffc6957f1
sw x3, 0(x2) # store 0xe00d202ffc6957f1 in memory
flw f11, 0(x2) # load 0xe00d202ffc6957f1 from memory into f11
la x2, scratch
li x3, 0xff8e3e2b1ddfb855 # load x3 with value 0xff8e3e2b1ddfb855
sw x3, 0(x2) # store 0xff8e3e2b1ddfb855 in memory
flw f20, 0(x2) # load 0xff8e3e2b1ddfb855 from memory into f20
la x2, scratch
li x3, 0xe08fbead8b39e867 # load x3 with value 0xe08fbead8b39e867
sw x3, 0(x2) # store 0xe08fbead8b39e867 in memory
flw f10, 0(x2) # load 0xe08fbead8b39e867 from memory into f10
fmadd.s f11, f11, f20, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0xbbf357498f376205 # load x3 with value 0xbbf357498f376205
sw x3, 0(x2) # store 0xbbf357498f376205 in memory
flw f12, 0(x2) # load 0xbbf357498f376205 from memory into f12
la x2, scratch
li x3, 0x3183d30df35170cc # load x3 with value 0x3183d30df35170cc
sw x3, 0(x2) # store 0x3183d30df35170cc in memory
flw f29, 0(x2) # load 0x3183d30df35170cc from memory into f29
la x2, scratch
li x3, 0x6c00613d3fe69acd # load x3 with value 0x6c00613d3fe69acd
sw x3, 0(x2) # store 0x6c00613d3fe69acd in memory
flw f15, 0(x2) # load 0x6c00613d3fe69acd from memory into f15
fmadd.s f12, f12, f29, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0xccb19ee2e2f3ac70 # load x3 with value 0xccb19ee2e2f3ac70
sw x3, 0(x2) # store 0xccb19ee2e2f3ac70 in memory
flw f13, 0(x2) # load 0xccb19ee2e2f3ac70 from memory into f13
la x2, scratch
li x3, 0xc69bc0ac6ee57a4f # load x3 with value 0xc69bc0ac6ee57a4f
sw x3, 0(x2) # store 0xc69bc0ac6ee57a4f in memory
flw f12, 0(x2) # load 0xc69bc0ac6ee57a4f from memory into f12
la x2, scratch
li x3, 0x6eab5265b39efe5b # load x3 with value 0x6eab5265b39efe5b
sw x3, 0(x2) # store 0x6eab5265b39efe5b in memory
flw f1, 0(x2) # load 0x6eab5265b39efe5b from memory into f1
fmadd.s f13, f13, f12, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x375a51f1b9e12b55 # load x3 with value 0x375a51f1b9e12b55
sw x3, 0(x2) # store 0x375a51f1b9e12b55 in memory
flw f14, 0(x2) # load 0x375a51f1b9e12b55 from memory into f14
la x2, scratch
li x3, 0x1ce80e542423b4d8 # load x3 with value 0x1ce80e542423b4d8
sw x3, 0(x2) # store 0x1ce80e542423b4d8 in memory
flw f29, 0(x2) # load 0x1ce80e542423b4d8 from memory into f29
la x2, scratch
li x3, 0x745912ec158adc96 # load x3 with value 0x745912ec158adc96
sw x3, 0(x2) # store 0x745912ec158adc96 in memory
flw f11, 0(x2) # load 0x745912ec158adc96 from memory into f11
fmadd.s f14, f14, f29, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0xf47d5d7c865362b4 # load x3 with value 0xf47d5d7c865362b4
sw x3, 0(x2) # store 0xf47d5d7c865362b4 in memory
flw f15, 0(x2) # load 0xf47d5d7c865362b4 from memory into f15
la x2, scratch
li x3, 0xa144e52dde0bebe9 # load x3 with value 0xa144e52dde0bebe9
sw x3, 0(x2) # store 0xa144e52dde0bebe9 in memory
flw f13, 0(x2) # load 0xa144e52dde0bebe9 from memory into f13
la x2, scratch
li x3, 0x6d25b553a88d3661 # load x3 with value 0x6d25b553a88d3661
sw x3, 0(x2) # store 0x6d25b553a88d3661 in memory
flw f9, 0(x2) # load 0x6d25b553a88d3661 from memory into f9
fmadd.s f15, f15, f13, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x8fe892e66c4e9cfb # load x3 with value 0x8fe892e66c4e9cfb
sw x3, 0(x2) # store 0x8fe892e66c4e9cfb in memory
flw f16, 0(x2) # load 0x8fe892e66c4e9cfb from memory into f16
la x2, scratch
li x3, 0x900a1c7a2c87ce7b # load x3 with value 0x900a1c7a2c87ce7b
sw x3, 0(x2) # store 0x900a1c7a2c87ce7b in memory
flw f22, 0(x2) # load 0x900a1c7a2c87ce7b from memory into f22
la x2, scratch
li x3, 0x32ae6c7b5e9328cd # load x3 with value 0x32ae6c7b5e9328cd
sw x3, 0(x2) # store 0x32ae6c7b5e9328cd in memory
flw f5, 0(x2) # load 0x32ae6c7b5e9328cd from memory into f5
fmadd.s f16, f16, f22, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0x96b75ff853ea6794 # load x3 with value 0x96b75ff853ea6794
sw x3, 0(x2) # store 0x96b75ff853ea6794 in memory
flw f17, 0(x2) # load 0x96b75ff853ea6794 from memory into f17
la x2, scratch
li x3, 0x9e95814fa7581d8c # load x3 with value 0x9e95814fa7581d8c
sw x3, 0(x2) # store 0x9e95814fa7581d8c in memory
flw f5, 0(x2) # load 0x9e95814fa7581d8c from memory into f5
la x2, scratch
li x3, 0x584050eab735875a # load x3 with value 0x584050eab735875a
sw x3, 0(x2) # store 0x584050eab735875a in memory
flw f9, 0(x2) # load 0x584050eab735875a from memory into f9
fmadd.s f17, f17, f5, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x31af57ade0ecdc8b # load x3 with value 0x31af57ade0ecdc8b
sw x3, 0(x2) # store 0x31af57ade0ecdc8b in memory
flw f18, 0(x2) # load 0x31af57ade0ecdc8b from memory into f18
la x2, scratch
li x3, 0xdd2260761e7941bd # load x3 with value 0xdd2260761e7941bd
sw x3, 0(x2) # store 0xdd2260761e7941bd in memory
flw f8, 0(x2) # load 0xdd2260761e7941bd from memory into f8
la x2, scratch
li x3, 0x5357de537d00cad9 # load x3 with value 0x5357de537d00cad9
sw x3, 0(x2) # store 0x5357de537d00cad9 in memory
flw f6, 0(x2) # load 0x5357de537d00cad9 from memory into f6
fmadd.s f18, f18, f8, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x5dbd1fc4269583ed # load x3 with value 0x5dbd1fc4269583ed
sw x3, 0(x2) # store 0x5dbd1fc4269583ed in memory
flw f19, 0(x2) # load 0x5dbd1fc4269583ed from memory into f19
la x2, scratch
li x3, 0x8466c63b69303122 # load x3 with value 0x8466c63b69303122
sw x3, 0(x2) # store 0x8466c63b69303122 in memory
flw f7, 0(x2) # load 0x8466c63b69303122 from memory into f7
la x2, scratch
li x3, 0xa661f2dc83bc9b0c # load x3 with value 0xa661f2dc83bc9b0c
sw x3, 0(x2) # store 0xa661f2dc83bc9b0c in memory
flw f9, 0(x2) # load 0xa661f2dc83bc9b0c from memory into f9
fmadd.s f19, f19, f7, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0xe858f38679c3946 # load x3 with value 0xe858f38679c3946
sw x3, 0(x2) # store 0xe858f38679c3946 in memory
flw f20, 0(x2) # load 0xe858f38679c3946 from memory into f20
la x2, scratch
li x3, 0x585387dedf4e73dc # load x3 with value 0x585387dedf4e73dc
sw x3, 0(x2) # store 0x585387dedf4e73dc in memory
flw f15, 0(x2) # load 0x585387dedf4e73dc from memory into f15
la x2, scratch
li x3, 0x4ccf81381643f4f9 # load x3 with value 0x4ccf81381643f4f9
sw x3, 0(x2) # store 0x4ccf81381643f4f9 in memory
flw f23, 0(x2) # load 0x4ccf81381643f4f9 from memory into f23
fmadd.s f20, f20, f15, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0xf2c4834571dc8ab6 # load x3 with value 0xf2c4834571dc8ab6
sw x3, 0(x2) # store 0xf2c4834571dc8ab6 in memory
flw f21, 0(x2) # load 0xf2c4834571dc8ab6 from memory into f21
la x2, scratch
li x3, 0xfcf54b10e568c3a # load x3 with value 0xfcf54b10e568c3a
sw x3, 0(x2) # store 0xfcf54b10e568c3a in memory
flw f27, 0(x2) # load 0xfcf54b10e568c3a from memory into f27
la x2, scratch
li x3, 0x8ca61510f9d314a3 # load x3 with value 0x8ca61510f9d314a3
sw x3, 0(x2) # store 0x8ca61510f9d314a3 in memory
flw f13, 0(x2) # load 0x8ca61510f9d314a3 from memory into f13
fmadd.s f21, f21, f27, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0xbfdb74f4986c7dbc # load x3 with value 0xbfdb74f4986c7dbc
sw x3, 0(x2) # store 0xbfdb74f4986c7dbc in memory
flw f22, 0(x2) # load 0xbfdb74f4986c7dbc from memory into f22
la x2, scratch
li x3, 0x20f074822da6c172 # load x3 with value 0x20f074822da6c172
sw x3, 0(x2) # store 0x20f074822da6c172 in memory
flw f26, 0(x2) # load 0x20f074822da6c172 from memory into f26
la x2, scratch
li x3, 0xa82820fc46e74dfb # load x3 with value 0xa82820fc46e74dfb
sw x3, 0(x2) # store 0xa82820fc46e74dfb in memory
flw f23, 0(x2) # load 0xa82820fc46e74dfb from memory into f23
fmadd.s f22, f22, f26, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x59a8faab1ea91f51 # load x3 with value 0x59a8faab1ea91f51
sw x3, 0(x2) # store 0x59a8faab1ea91f51 in memory
flw f23, 0(x2) # load 0x59a8faab1ea91f51 from memory into f23
la x2, scratch
li x3, 0x149e1840a7a1e10d # load x3 with value 0x149e1840a7a1e10d
sw x3, 0(x2) # store 0x149e1840a7a1e10d in memory
flw f5, 0(x2) # load 0x149e1840a7a1e10d from memory into f5
la x2, scratch
li x3, 0x41c777e46e3901e3 # load x3 with value 0x41c777e46e3901e3
sw x3, 0(x2) # store 0x41c777e46e3901e3 in memory
flw f28, 0(x2) # load 0x41c777e46e3901e3 from memory into f28
fmadd.s f23, f23, f5, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0x7640f5209c51f24 # load x3 with value 0x7640f5209c51f24
sw x3, 0(x2) # store 0x7640f5209c51f24 in memory
flw f24, 0(x2) # load 0x7640f5209c51f24 from memory into f24
la x2, scratch
li x3, 0xac6cef384eab7130 # load x3 with value 0xac6cef384eab7130
sw x3, 0(x2) # store 0xac6cef384eab7130 in memory
flw f19, 0(x2) # load 0xac6cef384eab7130 from memory into f19
la x2, scratch
li x3, 0x185b0f7209972bca # load x3 with value 0x185b0f7209972bca
sw x3, 0(x2) # store 0x185b0f7209972bca in memory
flw f6, 0(x2) # load 0x185b0f7209972bca from memory into f6
fmadd.s f24, f24, f19, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xc726e810b895de8 # load x3 with value 0xc726e810b895de8
sw x3, 0(x2) # store 0xc726e810b895de8 in memory
flw f25, 0(x2) # load 0xc726e810b895de8 from memory into f25
la x2, scratch
li x3, 0x838d9fe7ffdd48b3 # load x3 with value 0x838d9fe7ffdd48b3
sw x3, 0(x2) # store 0x838d9fe7ffdd48b3 in memory
flw f25, 0(x2) # load 0x838d9fe7ffdd48b3 from memory into f25
la x2, scratch
li x3, 0xd99bb8b71520cd4b # load x3 with value 0xd99bb8b71520cd4b
sw x3, 0(x2) # store 0xd99bb8b71520cd4b in memory
flw f16, 0(x2) # load 0xd99bb8b71520cd4b from memory into f16
fmadd.s f25, f25, f25, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0xffcb580657af92e4 # load x3 with value 0xffcb580657af92e4
sw x3, 0(x2) # store 0xffcb580657af92e4 in memory
flw f26, 0(x2) # load 0xffcb580657af92e4 from memory into f26
la x2, scratch
li x3, 0x31704a362f64faf1 # load x3 with value 0x31704a362f64faf1
sw x3, 0(x2) # store 0x31704a362f64faf1 in memory
flw f26, 0(x2) # load 0x31704a362f64faf1 from memory into f26
la x2, scratch
li x3, 0xd50df54f44064e4b # load x3 with value 0xd50df54f44064e4b
sw x3, 0(x2) # store 0xd50df54f44064e4b in memory
flw f2, 0(x2) # load 0xd50df54f44064e4b from memory into f2
fmadd.s f26, f26, f26, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x489f03fe2e7a5be3 # load x3 with value 0x489f03fe2e7a5be3
sw x3, 0(x2) # store 0x489f03fe2e7a5be3 in memory
flw f27, 0(x2) # load 0x489f03fe2e7a5be3 from memory into f27
la x2, scratch
li x3, 0xb9735606bda660c1 # load x3 with value 0xb9735606bda660c1
sw x3, 0(x2) # store 0xb9735606bda660c1 in memory
flw f16, 0(x2) # load 0xb9735606bda660c1 from memory into f16
la x2, scratch
li x3, 0x76abe8054c7f6011 # load x3 with value 0x76abe8054c7f6011
sw x3, 0(x2) # store 0x76abe8054c7f6011 in memory
flw f29, 0(x2) # load 0x76abe8054c7f6011 from memory into f29
fmadd.s f27, f27, f16, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0xbb9030eaed2e6b12 # load x3 with value 0xbb9030eaed2e6b12
sw x3, 0(x2) # store 0xbb9030eaed2e6b12 in memory
flw f28, 0(x2) # load 0xbb9030eaed2e6b12 from memory into f28
la x2, scratch
li x3, 0xd4e1794ad91b53c # load x3 with value 0xd4e1794ad91b53c
sw x3, 0(x2) # store 0xd4e1794ad91b53c in memory
flw f23, 0(x2) # load 0xd4e1794ad91b53c from memory into f23
la x2, scratch
li x3, 0xfc31ce629b7a5c44 # load x3 with value 0xfc31ce629b7a5c44
sw x3, 0(x2) # store 0xfc31ce629b7a5c44 in memory
flw f18, 0(x2) # load 0xfc31ce629b7a5c44 from memory into f18
fmadd.s f28, f28, f23, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0xc85b287f7d8b1ce9 # load x3 with value 0xc85b287f7d8b1ce9
sw x3, 0(x2) # store 0xc85b287f7d8b1ce9 in memory
flw f29, 0(x2) # load 0xc85b287f7d8b1ce9 from memory into f29
la x2, scratch
li x3, 0x6b4a1bfb46e20a1d # load x3 with value 0x6b4a1bfb46e20a1d
sw x3, 0(x2) # store 0x6b4a1bfb46e20a1d in memory
flw f17, 0(x2) # load 0x6b4a1bfb46e20a1d from memory into f17
la x2, scratch
li x3, 0x2bafb5423d71364 # load x3 with value 0x2bafb5423d71364
sw x3, 0(x2) # store 0x2bafb5423d71364 in memory
flw f19, 0(x2) # load 0x2bafb5423d71364 from memory into f19
fmadd.s f29, f29, f17, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x7a2db4f61f7813e1 # load x3 with value 0x7a2db4f61f7813e1
sw x3, 0(x2) # store 0x7a2db4f61f7813e1 in memory
flw f30, 0(x2) # load 0x7a2db4f61f7813e1 from memory into f30
la x2, scratch
li x3, 0xc6b7da8974e44782 # load x3 with value 0xc6b7da8974e44782
sw x3, 0(x2) # store 0xc6b7da8974e44782 in memory
flw f8, 0(x2) # load 0xc6b7da8974e44782 from memory into f8
la x2, scratch
li x3, 0xbb154850100279f # load x3 with value 0xbb154850100279f
sw x3, 0(x2) # store 0xbb154850100279f in memory
flw f14, 0(x2) # load 0xbb154850100279f from memory into f14
fmadd.s f30, f30, f8, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0xda97ed6175b56b5e # load x3 with value 0xda97ed6175b56b5e
sw x3, 0(x2) # store 0xda97ed6175b56b5e in memory
flw f31, 0(x2) # load 0xda97ed6175b56b5e from memory into f31
la x2, scratch
li x3, 0x84d9efc99bd5e94b # load x3 with value 0x84d9efc99bd5e94b
sw x3, 0(x2) # store 0x84d9efc99bd5e94b in memory
flw f21, 0(x2) # load 0x84d9efc99bd5e94b from memory into f21
la x2, scratch
li x3, 0xf215d1ecb586d1dd # load x3 with value 0xf215d1ecb586d1dd
sw x3, 0(x2) # store 0xf215d1ecb586d1dd in memory
flw f23, 0(x2) # load 0xf215d1ecb586d1dd from memory into f23
fmadd.s f31, f31, f21, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x4e14a16471cc44d3 # load x3 with value 0x4e14a16471cc44d3
sw x3, 0(x2) # store 0x4e14a16471cc44d3 in memory
flw f14, 0(x2) # load 0x4e14a16471cc44d3 from memory into f14
la x2, scratch
li x3, 0x7c9ee328a47000a # load x3 with value 0x7c9ee328a47000a
sw x3, 0(x2) # store 0x7c9ee328a47000a in memory
flw f0, 0(x2) # load 0x7c9ee328a47000a from memory into f0
la x2, scratch
li x3, 0x75542c65362f722f # load x3 with value 0x75542c65362f722f
sw x3, 0(x2) # store 0x75542c65362f722f in memory
flw f8, 0(x2) # load 0x75542c65362f722f from memory into f8
fmadd.s f0, f14, f0, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0xc44687190fd0fff0 # load x3 with value 0xc44687190fd0fff0
sw x3, 0(x2) # store 0xc44687190fd0fff0 in memory
flw f31, 0(x2) # load 0xc44687190fd0fff0 from memory into f31
la x2, scratch
li x3, 0x5f39970bb2246502 # load x3 with value 0x5f39970bb2246502
sw x3, 0(x2) # store 0x5f39970bb2246502 in memory
flw f1, 0(x2) # load 0x5f39970bb2246502 from memory into f1
la x2, scratch
li x3, 0x5578fac191464eb3 # load x3 with value 0x5578fac191464eb3
sw x3, 0(x2) # store 0x5578fac191464eb3 in memory
flw f7, 0(x2) # load 0x5578fac191464eb3 from memory into f7
fmadd.s f1, f31, f1, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x534dd5bbb8ac784c # load x3 with value 0x534dd5bbb8ac784c
sw x3, 0(x2) # store 0x534dd5bbb8ac784c in memory
flw f7, 0(x2) # load 0x534dd5bbb8ac784c from memory into f7
la x2, scratch
li x3, 0xa20ccb742a727a90 # load x3 with value 0xa20ccb742a727a90
sw x3, 0(x2) # store 0xa20ccb742a727a90 in memory
flw f2, 0(x2) # load 0xa20ccb742a727a90 from memory into f2
la x2, scratch
li x3, 0x98c320844377838b # load x3 with value 0x98c320844377838b
sw x3, 0(x2) # store 0x98c320844377838b in memory
flw f17, 0(x2) # load 0x98c320844377838b from memory into f17
fmadd.s f2, f7, f2, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x4923d7d53a561ad9 # load x3 with value 0x4923d7d53a561ad9
sw x3, 0(x2) # store 0x4923d7d53a561ad9 in memory
flw f3, 0(x2) # load 0x4923d7d53a561ad9 from memory into f3
la x2, scratch
li x3, 0x9fe3736ee853e51 # load x3 with value 0x9fe3736ee853e51
sw x3, 0(x2) # store 0x9fe3736ee853e51 in memory
flw f3, 0(x2) # load 0x9fe3736ee853e51 from memory into f3
la x2, scratch
li x3, 0x66a32e038d7c3b10 # load x3 with value 0x66a32e038d7c3b10
sw x3, 0(x2) # store 0x66a32e038d7c3b10 in memory
flw f7, 0(x2) # load 0x66a32e038d7c3b10 from memory into f7
fmadd.s f3, f3, f3, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7392fcc9338ead1 # load x3 with value 0x7392fcc9338ead1
sw x3, 0(x2) # store 0x7392fcc9338ead1 in memory
flw f21, 0(x2) # load 0x7392fcc9338ead1 from memory into f21
la x2, scratch
li x3, 0x9dd112000dc547e2 # load x3 with value 0x9dd112000dc547e2
sw x3, 0(x2) # store 0x9dd112000dc547e2 in memory
flw f4, 0(x2) # load 0x9dd112000dc547e2 from memory into f4
la x2, scratch
li x3, 0xd5a50ccb4650ddbf # load x3 with value 0xd5a50ccb4650ddbf
sw x3, 0(x2) # store 0xd5a50ccb4650ddbf in memory
flw f9, 0(x2) # load 0xd5a50ccb4650ddbf from memory into f9
fmadd.s f4, f21, f4, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfa474f06a914c318 # load x3 with value 0xfa474f06a914c318
sw x3, 0(x2) # store 0xfa474f06a914c318 in memory
flw f20, 0(x2) # load 0xfa474f06a914c318 from memory into f20
la x2, scratch
li x3, 0xe5da9b347211b450 # load x3 with value 0xe5da9b347211b450
sw x3, 0(x2) # store 0xe5da9b347211b450 in memory
flw f5, 0(x2) # load 0xe5da9b347211b450 from memory into f5
la x2, scratch
li x3, 0x5cbf66e295bb1875 # load x3 with value 0x5cbf66e295bb1875
sw x3, 0(x2) # store 0x5cbf66e295bb1875 in memory
flw f3, 0(x2) # load 0x5cbf66e295bb1875 from memory into f3
fmadd.s f5, f20, f5, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xaa6e1922c3de829e # load x3 with value 0xaa6e1922c3de829e
sw x3, 0(x2) # store 0xaa6e1922c3de829e in memory
flw f5, 0(x2) # load 0xaa6e1922c3de829e from memory into f5
la x2, scratch
li x3, 0x4c821659ebb13837 # load x3 with value 0x4c821659ebb13837
sw x3, 0(x2) # store 0x4c821659ebb13837 in memory
flw f6, 0(x2) # load 0x4c821659ebb13837 from memory into f6
la x2, scratch
li x3, 0x93a482fd7db9bdb0 # load x3 with value 0x93a482fd7db9bdb0
sw x3, 0(x2) # store 0x93a482fd7db9bdb0 in memory
flw f7, 0(x2) # load 0x93a482fd7db9bdb0 from memory into f7
fmadd.s f6, f5, f6, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc2543e471721252e # load x3 with value 0xc2543e471721252e
sw x3, 0(x2) # store 0xc2543e471721252e in memory
flw f10, 0(x2) # load 0xc2543e471721252e from memory into f10
la x2, scratch
li x3, 0xb7f9415395c64ad4 # load x3 with value 0xb7f9415395c64ad4
sw x3, 0(x2) # store 0xb7f9415395c64ad4 in memory
flw f7, 0(x2) # load 0xb7f9415395c64ad4 from memory into f7
la x2, scratch
li x3, 0x6a97bbea9b56d8e0 # load x3 with value 0x6a97bbea9b56d8e0
sw x3, 0(x2) # store 0x6a97bbea9b56d8e0 in memory
flw f19, 0(x2) # load 0x6a97bbea9b56d8e0 from memory into f19
fmadd.s f7, f10, f7, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x2b45d679a1e8354c # load x3 with value 0x2b45d679a1e8354c
sw x3, 0(x2) # store 0x2b45d679a1e8354c in memory
flw f25, 0(x2) # load 0x2b45d679a1e8354c from memory into f25
la x2, scratch
li x3, 0x38dbfc330d5045d6 # load x3 with value 0x38dbfc330d5045d6
sw x3, 0(x2) # store 0x38dbfc330d5045d6 in memory
flw f8, 0(x2) # load 0x38dbfc330d5045d6 from memory into f8
la x2, scratch
li x3, 0xc2fd9400d5dc7944 # load x3 with value 0xc2fd9400d5dc7944
sw x3, 0(x2) # store 0xc2fd9400d5dc7944 in memory
flw f31, 0(x2) # load 0xc2fd9400d5dc7944 from memory into f31
fmadd.s f8, f25, f8, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0xa43b2875669f9dc4 # load x3 with value 0xa43b2875669f9dc4
sw x3, 0(x2) # store 0xa43b2875669f9dc4 in memory
flw f2, 0(x2) # load 0xa43b2875669f9dc4 from memory into f2
la x2, scratch
li x3, 0x1ecae7afc5873785 # load x3 with value 0x1ecae7afc5873785
sw x3, 0(x2) # store 0x1ecae7afc5873785 in memory
flw f9, 0(x2) # load 0x1ecae7afc5873785 from memory into f9
la x2, scratch
li x3, 0x570d1fca7aa70b3f # load x3 with value 0x570d1fca7aa70b3f
sw x3, 0(x2) # store 0x570d1fca7aa70b3f in memory
flw f22, 0(x2) # load 0x570d1fca7aa70b3f from memory into f22
fmadd.s f9, f2, f9, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0xeade6d2f5d583d2b # load x3 with value 0xeade6d2f5d583d2b
sw x3, 0(x2) # store 0xeade6d2f5d583d2b in memory
flw f28, 0(x2) # load 0xeade6d2f5d583d2b from memory into f28
la x2, scratch
li x3, 0x21847bef081705bf # load x3 with value 0x21847bef081705bf
sw x3, 0(x2) # store 0x21847bef081705bf in memory
flw f10, 0(x2) # load 0x21847bef081705bf from memory into f10
la x2, scratch
li x3, 0xa8ed952500e3e321 # load x3 with value 0xa8ed952500e3e321
sw x3, 0(x2) # store 0xa8ed952500e3e321 in memory
flw f23, 0(x2) # load 0xa8ed952500e3e321 from memory into f23
fmadd.s f10, f28, f10, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xf6386a24ecc4d59a # load x3 with value 0xf6386a24ecc4d59a
sw x3, 0(x2) # store 0xf6386a24ecc4d59a in memory
flw f14, 0(x2) # load 0xf6386a24ecc4d59a from memory into f14
la x2, scratch
li x3, 0x49c3f77c7407cb35 # load x3 with value 0x49c3f77c7407cb35
sw x3, 0(x2) # store 0x49c3f77c7407cb35 in memory
flw f11, 0(x2) # load 0x49c3f77c7407cb35 from memory into f11
la x2, scratch
li x3, 0x5906b6fee815e0e0 # load x3 with value 0x5906b6fee815e0e0
sw x3, 0(x2) # store 0x5906b6fee815e0e0 in memory
flw f17, 0(x2) # load 0x5906b6fee815e0e0 from memory into f17
fmadd.s f11, f14, f11, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0xde91d58407d1a82d # load x3 with value 0xde91d58407d1a82d
sw x3, 0(x2) # store 0xde91d58407d1a82d in memory
flw f11, 0(x2) # load 0xde91d58407d1a82d from memory into f11
la x2, scratch
li x3, 0xc33133e6cef6c12d # load x3 with value 0xc33133e6cef6c12d
sw x3, 0(x2) # store 0xc33133e6cef6c12d in memory
flw f12, 0(x2) # load 0xc33133e6cef6c12d from memory into f12
la x2, scratch
li x3, 0xc9a681eefb3d7d19 # load x3 with value 0xc9a681eefb3d7d19
sw x3, 0(x2) # store 0xc9a681eefb3d7d19 in memory
flw f20, 0(x2) # load 0xc9a681eefb3d7d19 from memory into f20
fmadd.s f12, f11, f12, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0xc231c45f670108ca # load x3 with value 0xc231c45f670108ca
sw x3, 0(x2) # store 0xc231c45f670108ca in memory
flw f6, 0(x2) # load 0xc231c45f670108ca from memory into f6
la x2, scratch
li x3, 0x2475595a4c08c04 # load x3 with value 0x2475595a4c08c04
sw x3, 0(x2) # store 0x2475595a4c08c04 in memory
flw f13, 0(x2) # load 0x2475595a4c08c04 from memory into f13
la x2, scratch
li x3, 0xcb268d6888d55016 # load x3 with value 0xcb268d6888d55016
sw x3, 0(x2) # store 0xcb268d6888d55016 in memory
flw f5, 0(x2) # load 0xcb268d6888d55016 from memory into f5
fmadd.s f13, f6, f13, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xa3bbf4d84833b60d # load x3 with value 0xa3bbf4d84833b60d
sw x3, 0(x2) # store 0xa3bbf4d84833b60d in memory
flw f7, 0(x2) # load 0xa3bbf4d84833b60d from memory into f7
la x2, scratch
li x3, 0x67a5b3bcabc0e418 # load x3 with value 0x67a5b3bcabc0e418
sw x3, 0(x2) # store 0x67a5b3bcabc0e418 in memory
flw f14, 0(x2) # load 0x67a5b3bcabc0e418 from memory into f14
la x2, scratch
li x3, 0xaf115a768bc3c581 # load x3 with value 0xaf115a768bc3c581
sw x3, 0(x2) # store 0xaf115a768bc3c581 in memory
flw f15, 0(x2) # load 0xaf115a768bc3c581 from memory into f15
fmadd.s f14, f7, f14, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0xa28632c1b290cb91 # load x3 with value 0xa28632c1b290cb91
sw x3, 0(x2) # store 0xa28632c1b290cb91 in memory
flw f20, 0(x2) # load 0xa28632c1b290cb91 from memory into f20
la x2, scratch
li x3, 0xc97a99137af0a938 # load x3 with value 0xc97a99137af0a938
sw x3, 0(x2) # store 0xc97a99137af0a938 in memory
flw f15, 0(x2) # load 0xc97a99137af0a938 from memory into f15
la x2, scratch
li x3, 0x5a0841f92399ee54 # load x3 with value 0x5a0841f92399ee54
sw x3, 0(x2) # store 0x5a0841f92399ee54 in memory
flw f29, 0(x2) # load 0x5a0841f92399ee54 from memory into f29
fmadd.s f15, f20, f15, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0x7ec8502137a50d7f # load x3 with value 0x7ec8502137a50d7f
sw x3, 0(x2) # store 0x7ec8502137a50d7f in memory
flw f15, 0(x2) # load 0x7ec8502137a50d7f from memory into f15
la x2, scratch
li x3, 0x27acd251b2e8ed07 # load x3 with value 0x27acd251b2e8ed07
sw x3, 0(x2) # store 0x27acd251b2e8ed07 in memory
flw f16, 0(x2) # load 0x27acd251b2e8ed07 from memory into f16
la x2, scratch
li x3, 0xa014ae044b605971 # load x3 with value 0xa014ae044b605971
sw x3, 0(x2) # store 0xa014ae044b605971 in memory
flw f11, 0(x2) # load 0xa014ae044b605971 from memory into f11
fmadd.s f16, f15, f16, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xbd4cde84e6168219 # load x3 with value 0xbd4cde84e6168219
sw x3, 0(x2) # store 0xbd4cde84e6168219 in memory
flw f25, 0(x2) # load 0xbd4cde84e6168219 from memory into f25
la x2, scratch
li x3, 0x1d9bac981f010a66 # load x3 with value 0x1d9bac981f010a66
sw x3, 0(x2) # store 0x1d9bac981f010a66 in memory
flw f17, 0(x2) # load 0x1d9bac981f010a66 from memory into f17
la x2, scratch
li x3, 0x8336212a1b6b2665 # load x3 with value 0x8336212a1b6b2665
sw x3, 0(x2) # store 0x8336212a1b6b2665 in memory
flw f12, 0(x2) # load 0x8336212a1b6b2665 from memory into f12
fmadd.s f17, f25, f17, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0x94748cfbce7bac55 # load x3 with value 0x94748cfbce7bac55
sw x3, 0(x2) # store 0x94748cfbce7bac55 in memory
flw f22, 0(x2) # load 0x94748cfbce7bac55 from memory into f22
la x2, scratch
li x3, 0x47862d35e3a8b2ab # load x3 with value 0x47862d35e3a8b2ab
sw x3, 0(x2) # store 0x47862d35e3a8b2ab in memory
flw f18, 0(x2) # load 0x47862d35e3a8b2ab from memory into f18
la x2, scratch
li x3, 0x3747e5238c1a8812 # load x3 with value 0x3747e5238c1a8812
sw x3, 0(x2) # store 0x3747e5238c1a8812 in memory
flw f30, 0(x2) # load 0x3747e5238c1a8812 from memory into f30
fmadd.s f18, f22, f18, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x9fa60ed92b531e8a # load x3 with value 0x9fa60ed92b531e8a
sw x3, 0(x2) # store 0x9fa60ed92b531e8a in memory
flw f10, 0(x2) # load 0x9fa60ed92b531e8a from memory into f10
la x2, scratch
li x3, 0x7cb7ce6f25101941 # load x3 with value 0x7cb7ce6f25101941
sw x3, 0(x2) # store 0x7cb7ce6f25101941 in memory
flw f19, 0(x2) # load 0x7cb7ce6f25101941 from memory into f19
la x2, scratch
li x3, 0x9609522e2671a271 # load x3 with value 0x9609522e2671a271
sw x3, 0(x2) # store 0x9609522e2671a271 in memory
flw f8, 0(x2) # load 0x9609522e2671a271 from memory into f8
fmadd.s f19, f10, f19, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x6f757821cccfd857 # load x3 with value 0x6f757821cccfd857
sw x3, 0(x2) # store 0x6f757821cccfd857 in memory
flw f11, 0(x2) # load 0x6f757821cccfd857 from memory into f11
la x2, scratch
li x3, 0xb10fe222a1bdb049 # load x3 with value 0xb10fe222a1bdb049
sw x3, 0(x2) # store 0xb10fe222a1bdb049 in memory
flw f20, 0(x2) # load 0xb10fe222a1bdb049 from memory into f20
la x2, scratch
li x3, 0x4473a36aaa17b6c2 # load x3 with value 0x4473a36aaa17b6c2
sw x3, 0(x2) # store 0x4473a36aaa17b6c2 in memory
flw f12, 0(x2) # load 0x4473a36aaa17b6c2 from memory into f12
fmadd.s f20, f11, f20, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0x2d1d3ab76104a4d1 # load x3 with value 0x2d1d3ab76104a4d1
sw x3, 0(x2) # store 0x2d1d3ab76104a4d1 in memory
flw f3, 0(x2) # load 0x2d1d3ab76104a4d1 from memory into f3
la x2, scratch
li x3, 0x29fdf75233c3da18 # load x3 with value 0x29fdf75233c3da18
sw x3, 0(x2) # store 0x29fdf75233c3da18 in memory
flw f21, 0(x2) # load 0x29fdf75233c3da18 from memory into f21
la x2, scratch
li x3, 0xc02c46975f9e958 # load x3 with value 0xc02c46975f9e958
sw x3, 0(x2) # store 0xc02c46975f9e958 in memory
flw f6, 0(x2) # load 0xc02c46975f9e958 from memory into f6
fmadd.s f21, f3, f21, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x7464d4b8538a7961 # load x3 with value 0x7464d4b8538a7961
sw x3, 0(x2) # store 0x7464d4b8538a7961 in memory
flw f10, 0(x2) # load 0x7464d4b8538a7961 from memory into f10
la x2, scratch
li x3, 0xff605aa3a863b30 # load x3 with value 0xff605aa3a863b30
sw x3, 0(x2) # store 0xff605aa3a863b30 in memory
flw f22, 0(x2) # load 0xff605aa3a863b30 from memory into f22
la x2, scratch
li x3, 0xf502b988a7f362b7 # load x3 with value 0xf502b988a7f362b7
sw x3, 0(x2) # store 0xf502b988a7f362b7 in memory
flw f25, 0(x2) # load 0xf502b988a7f362b7 from memory into f25
fmadd.s f22, f10, f22, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x9f5d60b6447f751d # load x3 with value 0x9f5d60b6447f751d
sw x3, 0(x2) # store 0x9f5d60b6447f751d in memory
flw f16, 0(x2) # load 0x9f5d60b6447f751d from memory into f16
la x2, scratch
li x3, 0x6521b2936b14b990 # load x3 with value 0x6521b2936b14b990
sw x3, 0(x2) # store 0x6521b2936b14b990 in memory
flw f23, 0(x2) # load 0x6521b2936b14b990 from memory into f23
la x2, scratch
li x3, 0x18a00765a4a7f480 # load x3 with value 0x18a00765a4a7f480
sw x3, 0(x2) # store 0x18a00765a4a7f480 in memory
flw f2, 0(x2) # load 0x18a00765a4a7f480 from memory into f2
fmadd.s f23, f16, f23, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0x57943f9991a7950f # load x3 with value 0x57943f9991a7950f
sw x3, 0(x2) # store 0x57943f9991a7950f in memory
flw f20, 0(x2) # load 0x57943f9991a7950f from memory into f20
la x2, scratch
li x3, 0x259ff82576ad6209 # load x3 with value 0x259ff82576ad6209
sw x3, 0(x2) # store 0x259ff82576ad6209 in memory
flw f24, 0(x2) # load 0x259ff82576ad6209 from memory into f24
la x2, scratch
li x3, 0x3b06f8f4e7bbe6cf # load x3 with value 0x3b06f8f4e7bbe6cf
sw x3, 0(x2) # store 0x3b06f8f4e7bbe6cf in memory
flw f14, 0(x2) # load 0x3b06f8f4e7bbe6cf from memory into f14
fmadd.s f24, f20, f24, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x726c0cd7f4407aed # load x3 with value 0x726c0cd7f4407aed
sw x3, 0(x2) # store 0x726c0cd7f4407aed in memory
flw f23, 0(x2) # load 0x726c0cd7f4407aed from memory into f23
la x2, scratch
li x3, 0xf188ad728588dc9 # load x3 with value 0xf188ad728588dc9
sw x3, 0(x2) # store 0xf188ad728588dc9 in memory
flw f25, 0(x2) # load 0xf188ad728588dc9 from memory into f25
la x2, scratch
li x3, 0x266fad8320d4acc0 # load x3 with value 0x266fad8320d4acc0
sw x3, 0(x2) # store 0x266fad8320d4acc0 in memory
flw f19, 0(x2) # load 0x266fad8320d4acc0 from memory into f19
fmadd.s f25, f23, f25, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0xc34825a840d3d3f3 # load x3 with value 0xc34825a840d3d3f3
sw x3, 0(x2) # store 0xc34825a840d3d3f3 in memory
flw f12, 0(x2) # load 0xc34825a840d3d3f3 from memory into f12
la x2, scratch
li x3, 0x29b2579f6a358231 # load x3 with value 0x29b2579f6a358231
sw x3, 0(x2) # store 0x29b2579f6a358231 in memory
flw f26, 0(x2) # load 0x29b2579f6a358231 from memory into f26
la x2, scratch
li x3, 0x1f04f740848dc317 # load x3 with value 0x1f04f740848dc317
sw x3, 0(x2) # store 0x1f04f740848dc317 in memory
flw f10, 0(x2) # load 0x1f04f740848dc317 from memory into f10
fmadd.s f26, f12, f26, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x89d905a3229cb2e0 # load x3 with value 0x89d905a3229cb2e0
sw x3, 0(x2) # store 0x89d905a3229cb2e0 in memory
flw f26, 0(x2) # load 0x89d905a3229cb2e0 from memory into f26
la x2, scratch
li x3, 0x890fdad6b36c225b # load x3 with value 0x890fdad6b36c225b
sw x3, 0(x2) # store 0x890fdad6b36c225b in memory
flw f27, 0(x2) # load 0x890fdad6b36c225b from memory into f27
la x2, scratch
li x3, 0x78d02028132db583 # load x3 with value 0x78d02028132db583
sw x3, 0(x2) # store 0x78d02028132db583 in memory
flw f3, 0(x2) # load 0x78d02028132db583 from memory into f3
fmadd.s f27, f26, f27, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0xbf0606c2d6ae411f # load x3 with value 0xbf0606c2d6ae411f
sw x3, 0(x2) # store 0xbf0606c2d6ae411f in memory
flw f13, 0(x2) # load 0xbf0606c2d6ae411f from memory into f13
la x2, scratch
li x3, 0x4718173422cbb88d # load x3 with value 0x4718173422cbb88d
sw x3, 0(x2) # store 0x4718173422cbb88d in memory
flw f28, 0(x2) # load 0x4718173422cbb88d from memory into f28
la x2, scratch
li x3, 0x649fbca365a77b55 # load x3 with value 0x649fbca365a77b55
sw x3, 0(x2) # store 0x649fbca365a77b55 in memory
flw f29, 0(x2) # load 0x649fbca365a77b55 from memory into f29
fmadd.s f28, f13, f28, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xf166ec2c4c50ff2e # load x3 with value 0xf166ec2c4c50ff2e
sw x3, 0(x2) # store 0xf166ec2c4c50ff2e in memory
flw f15, 0(x2) # load 0xf166ec2c4c50ff2e from memory into f15
la x2, scratch
li x3, 0x17a45270b8fc7c5e # load x3 with value 0x17a45270b8fc7c5e
sw x3, 0(x2) # store 0x17a45270b8fc7c5e in memory
flw f29, 0(x2) # load 0x17a45270b8fc7c5e from memory into f29
la x2, scratch
li x3, 0xfdabd3964e11d1cb # load x3 with value 0xfdabd3964e11d1cb
sw x3, 0(x2) # store 0xfdabd3964e11d1cb in memory
flw f23, 0(x2) # load 0xfdabd3964e11d1cb from memory into f23
fmadd.s f29, f15, f29, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x7fedc8ea358ee381 # load x3 with value 0x7fedc8ea358ee381
sw x3, 0(x2) # store 0x7fedc8ea358ee381 in memory
flw f8, 0(x2) # load 0x7fedc8ea358ee381 from memory into f8
la x2, scratch
li x3, 0x35ad51c0ef94877a # load x3 with value 0x35ad51c0ef94877a
sw x3, 0(x2) # store 0x35ad51c0ef94877a in memory
flw f30, 0(x2) # load 0x35ad51c0ef94877a from memory into f30
la x2, scratch
li x3, 0x7a0cb102e3b689c0 # load x3 with value 0x7a0cb102e3b689c0
sw x3, 0(x2) # store 0x7a0cb102e3b689c0 in memory
flw f21, 0(x2) # load 0x7a0cb102e3b689c0 from memory into f21
fmadd.s f30, f8, f30, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0xc7630ce3ade3bb2b # load x3 with value 0xc7630ce3ade3bb2b
sw x3, 0(x2) # store 0xc7630ce3ade3bb2b in memory
flw f14, 0(x2) # load 0xc7630ce3ade3bb2b from memory into f14
la x2, scratch
li x3, 0x46c33db6ba1036c8 # load x3 with value 0x46c33db6ba1036c8
sw x3, 0(x2) # store 0x46c33db6ba1036c8 in memory
flw f31, 0(x2) # load 0x46c33db6ba1036c8 from memory into f31
la x2, scratch
li x3, 0xea3abd255cb518b3 # load x3 with value 0xea3abd255cb518b3
sw x3, 0(x2) # store 0xea3abd255cb518b3 in memory
flw f24, 0(x2) # load 0xea3abd255cb518b3 from memory into f24
fmadd.s f31, f14, f31, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0xab5cfa6171b3eea9 # load x3 with value 0xab5cfa6171b3eea9
sw x3, 0(x2) # store 0xab5cfa6171b3eea9 in memory
flw f15, 0(x2) # load 0xab5cfa6171b3eea9 from memory into f15
la x2, scratch
li x3, 0x2d0b91ec4753acae # load x3 with value 0x2d0b91ec4753acae
sw x3, 0(x2) # store 0x2d0b91ec4753acae in memory
flw f28, 0(x2) # load 0x2d0b91ec4753acae from memory into f28
la x2, scratch
li x3, 0x924378282cc8192c # load x3 with value 0x924378282cc8192c
sw x3, 0(x2) # store 0x924378282cc8192c in memory
flw f0, 0(x2) # load 0x924378282cc8192c from memory into f0
fmadd.s f0, f15, f28, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0x1ca85821b7357336 # load x3 with value 0x1ca85821b7357336
sw x3, 0(x2) # store 0x1ca85821b7357336 in memory
flw f9, 0(x2) # load 0x1ca85821b7357336 from memory into f9
la x2, scratch
li x3, 0xa42f2c7bda4d143f # load x3 with value 0xa42f2c7bda4d143f
sw x3, 0(x2) # store 0xa42f2c7bda4d143f in memory
flw f16, 0(x2) # load 0xa42f2c7bda4d143f from memory into f16
la x2, scratch
li x3, 0x2cc40c53643b8cae # load x3 with value 0x2cc40c53643b8cae
sw x3, 0(x2) # store 0x2cc40c53643b8cae in memory
flw f1, 0(x2) # load 0x2cc40c53643b8cae from memory into f1
fmadd.s f1, f9, f16, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0xf74ea1fd56ff196b # load x3 with value 0xf74ea1fd56ff196b
sw x3, 0(x2) # store 0xf74ea1fd56ff196b in memory
flw f15, 0(x2) # load 0xf74ea1fd56ff196b from memory into f15
la x2, scratch
li x3, 0xbb133ac566ff8629 # load x3 with value 0xbb133ac566ff8629
sw x3, 0(x2) # store 0xbb133ac566ff8629 in memory
flw f17, 0(x2) # load 0xbb133ac566ff8629 from memory into f17
la x2, scratch
li x3, 0x8aac9132df7ba9e5 # load x3 with value 0x8aac9132df7ba9e5
sw x3, 0(x2) # store 0x8aac9132df7ba9e5 in memory
flw f2, 0(x2) # load 0x8aac9132df7ba9e5 from memory into f2
fmadd.s f2, f15, f17, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x2b17deb58000181c # load x3 with value 0x2b17deb58000181c
sw x3, 0(x2) # store 0x2b17deb58000181c in memory
flw f20, 0(x2) # load 0x2b17deb58000181c from memory into f20
la x2, scratch
li x3, 0x4bc37e4d330643ca # load x3 with value 0x4bc37e4d330643ca
sw x3, 0(x2) # store 0x4bc37e4d330643ca in memory
flw f22, 0(x2) # load 0x4bc37e4d330643ca from memory into f22
la x2, scratch
li x3, 0x41bcb1cdbe4539f6 # load x3 with value 0x41bcb1cdbe4539f6
sw x3, 0(x2) # store 0x41bcb1cdbe4539f6 in memory
flw f3, 0(x2) # load 0x41bcb1cdbe4539f6 from memory into f3
fmadd.s f3, f20, f22, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x5353368020615f79 # load x3 with value 0x5353368020615f79
sw x3, 0(x2) # store 0x5353368020615f79 in memory
flw f28, 0(x2) # load 0x5353368020615f79 from memory into f28
la x2, scratch
li x3, 0xb6e74c34bb273859 # load x3 with value 0xb6e74c34bb273859
sw x3, 0(x2) # store 0xb6e74c34bb273859 in memory
flw f5, 0(x2) # load 0xb6e74c34bb273859 from memory into f5
la x2, scratch
li x3, 0xf6cd252f73cbb41a # load x3 with value 0xf6cd252f73cbb41a
sw x3, 0(x2) # store 0xf6cd252f73cbb41a in memory
flw f4, 0(x2) # load 0xf6cd252f73cbb41a from memory into f4
fmadd.s f4, f28, f5, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
la x2, scratch
li x3, 0xf48a874144de2f36 # load x3 with value 0xf48a874144de2f36
sw x3, 0(x2) # store 0xf48a874144de2f36 in memory
flw f5, 0(x2) # load 0xf48a874144de2f36 from memory into f5
la x2, scratch
li x3, 0xfcf19a2578c3dbe1 # load x3 with value 0xfcf19a2578c3dbe1
sw x3, 0(x2) # store 0xfcf19a2578c3dbe1 in memory
flw f23, 0(x2) # load 0xfcf19a2578c3dbe1 from memory into f23
la x2, scratch
li x3, 0xbaf3c469dc1b1656 # load x3 with value 0xbaf3c469dc1b1656
sw x3, 0(x2) # store 0xbaf3c469dc1b1656 in memory
flw f5, 0(x2) # load 0xbaf3c469dc1b1656 from memory into f5
fmadd.s f5, f5, f23, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xff57f26a45469506 # load x3 with value 0xff57f26a45469506
sw x3, 0(x2) # store 0xff57f26a45469506 in memory
flw f8, 0(x2) # load 0xff57f26a45469506 from memory into f8
la x2, scratch
li x3, 0x8592743c5f47c1a8 # load x3 with value 0x8592743c5f47c1a8
sw x3, 0(x2) # store 0x8592743c5f47c1a8 in memory
flw f11, 0(x2) # load 0x8592743c5f47c1a8 from memory into f11
la x2, scratch
li x3, 0x2e40f01cf68e0d91 # load x3 with value 0x2e40f01cf68e0d91
sw x3, 0(x2) # store 0x2e40f01cf68e0d91 in memory
flw f6, 0(x2) # load 0x2e40f01cf68e0d91 from memory into f6
fmadd.s f6, f8, f11, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x36c00585768a582a # load x3 with value 0x36c00585768a582a
sw x3, 0(x2) # store 0x36c00585768a582a in memory
flw f28, 0(x2) # load 0x36c00585768a582a from memory into f28
la x2, scratch
li x3, 0x1a99c895171348b0 # load x3 with value 0x1a99c895171348b0
sw x3, 0(x2) # store 0x1a99c895171348b0 in memory
flw f3, 0(x2) # load 0x1a99c895171348b0 from memory into f3
la x2, scratch
li x3, 0x84b0875eb3525cbe # load x3 with value 0x84b0875eb3525cbe
sw x3, 0(x2) # store 0x84b0875eb3525cbe in memory
flw f7, 0(x2) # load 0x84b0875eb3525cbe from memory into f7
fmadd.s f7, f28, f3, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x1b2fccdef9126072 # load x3 with value 0x1b2fccdef9126072
sw x3, 0(x2) # store 0x1b2fccdef9126072 in memory
flw f25, 0(x2) # load 0x1b2fccdef9126072 from memory into f25
la x2, scratch
li x3, 0x522e25f4af534b12 # load x3 with value 0x522e25f4af534b12
sw x3, 0(x2) # store 0x522e25f4af534b12 in memory
flw f6, 0(x2) # load 0x522e25f4af534b12 from memory into f6
la x2, scratch
li x3, 0x2d56a063c975228b # load x3 with value 0x2d56a063c975228b
sw x3, 0(x2) # store 0x2d56a063c975228b in memory
flw f8, 0(x2) # load 0x2d56a063c975228b from memory into f8
fmadd.s f8, f25, f6, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x4d821b2b32ce8019 # load x3 with value 0x4d821b2b32ce8019
sw x3, 0(x2) # store 0x4d821b2b32ce8019 in memory
flw f26, 0(x2) # load 0x4d821b2b32ce8019 from memory into f26
la x2, scratch
li x3, 0xf92c5140fa5beeb9 # load x3 with value 0xf92c5140fa5beeb9
sw x3, 0(x2) # store 0xf92c5140fa5beeb9 in memory
flw f29, 0(x2) # load 0xf92c5140fa5beeb9 from memory into f29
la x2, scratch
li x3, 0x3cc143b89dd23a27 # load x3 with value 0x3cc143b89dd23a27
sw x3, 0(x2) # store 0x3cc143b89dd23a27 in memory
flw f9, 0(x2) # load 0x3cc143b89dd23a27 from memory into f9
fmadd.s f9, f26, f29, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0xf840c4dfc07c9e1b # load x3 with value 0xf840c4dfc07c9e1b
sw x3, 0(x2) # store 0xf840c4dfc07c9e1b in memory
flw f2, 0(x2) # load 0xf840c4dfc07c9e1b from memory into f2
la x2, scratch
li x3, 0x112b28e1125e2ebd # load x3 with value 0x112b28e1125e2ebd
sw x3, 0(x2) # store 0x112b28e1125e2ebd in memory
flw f7, 0(x2) # load 0x112b28e1125e2ebd from memory into f7
la x2, scratch
li x3, 0xdcb2a558177cf07c # load x3 with value 0xdcb2a558177cf07c
sw x3, 0(x2) # store 0xdcb2a558177cf07c in memory
flw f10, 0(x2) # load 0xdcb2a558177cf07c from memory into f10
fmadd.s f10, f2, f7, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x166bca083e9987cc # load x3 with value 0x166bca083e9987cc
sw x3, 0(x2) # store 0x166bca083e9987cc in memory
flw f27, 0(x2) # load 0x166bca083e9987cc from memory into f27
la x2, scratch
li x3, 0x7577986634c4b435 # load x3 with value 0x7577986634c4b435
sw x3, 0(x2) # store 0x7577986634c4b435 in memory
flw f11, 0(x2) # load 0x7577986634c4b435 from memory into f11
la x2, scratch
li x3, 0x4e47973e75da040d # load x3 with value 0x4e47973e75da040d
sw x3, 0(x2) # store 0x4e47973e75da040d in memory
flw f11, 0(x2) # load 0x4e47973e75da040d from memory into f11
fmadd.s f11, f27, f11, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0xfb0690d7636da53 # load x3 with value 0xfb0690d7636da53
sw x3, 0(x2) # store 0xfb0690d7636da53 in memory
flw f19, 0(x2) # load 0xfb0690d7636da53 from memory into f19
la x2, scratch
li x3, 0x77d0b46fd34686da # load x3 with value 0x77d0b46fd34686da
sw x3, 0(x2) # store 0x77d0b46fd34686da in memory
flw f7, 0(x2) # load 0x77d0b46fd34686da from memory into f7
la x2, scratch
li x3, 0xda07b14edec9858 # load x3 with value 0xda07b14edec9858
sw x3, 0(x2) # store 0xda07b14edec9858 in memory
flw f12, 0(x2) # load 0xda07b14edec9858 from memory into f12
fmadd.s f12, f19, f7, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0x687d4030c4ac27d # load x3 with value 0x687d4030c4ac27d
sw x3, 0(x2) # store 0x687d4030c4ac27d in memory
flw f10, 0(x2) # load 0x687d4030c4ac27d from memory into f10
la x2, scratch
li x3, 0x9d00a196f39f9e08 # load x3 with value 0x9d00a196f39f9e08
sw x3, 0(x2) # store 0x9d00a196f39f9e08 in memory
flw f15, 0(x2) # load 0x9d00a196f39f9e08 from memory into f15
la x2, scratch
li x3, 0x8332c945137a4933 # load x3 with value 0x8332c945137a4933
sw x3, 0(x2) # store 0x8332c945137a4933 in memory
flw f13, 0(x2) # load 0x8332c945137a4933 from memory into f13
fmadd.s f13, f10, f15, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0x76d72a4fabfd94f1 # load x3 with value 0x76d72a4fabfd94f1
sw x3, 0(x2) # store 0x76d72a4fabfd94f1 in memory
flw f15, 0(x2) # load 0x76d72a4fabfd94f1 from memory into f15
la x2, scratch
li x3, 0x5f4b95d130e72317 # load x3 with value 0x5f4b95d130e72317
sw x3, 0(x2) # store 0x5f4b95d130e72317 in memory
flw f19, 0(x2) # load 0x5f4b95d130e72317 from memory into f19
la x2, scratch
li x3, 0xf302818c9e46c99f # load x3 with value 0xf302818c9e46c99f
sw x3, 0(x2) # store 0xf302818c9e46c99f in memory
flw f14, 0(x2) # load 0xf302818c9e46c99f from memory into f14
fmadd.s f14, f15, f19, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0xedc11a23180fdcf0 # load x3 with value 0xedc11a23180fdcf0
sw x3, 0(x2) # store 0xedc11a23180fdcf0 in memory
flw f23, 0(x2) # load 0xedc11a23180fdcf0 from memory into f23
la x2, scratch
li x3, 0x6749215ad11c9ad3 # load x3 with value 0x6749215ad11c9ad3
sw x3, 0(x2) # store 0x6749215ad11c9ad3 in memory
flw f22, 0(x2) # load 0x6749215ad11c9ad3 from memory into f22
la x2, scratch
li x3, 0x4929b46aaf47148b # load x3 with value 0x4929b46aaf47148b
sw x3, 0(x2) # store 0x4929b46aaf47148b in memory
flw f15, 0(x2) # load 0x4929b46aaf47148b from memory into f15
fmadd.s f15, f23, f22, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0x2fbfa290c49bfd5d # load x3 with value 0x2fbfa290c49bfd5d
sw x3, 0(x2) # store 0x2fbfa290c49bfd5d in memory
flw f30, 0(x2) # load 0x2fbfa290c49bfd5d from memory into f30
la x2, scratch
li x3, 0x6d4ddfd0670a83ae # load x3 with value 0x6d4ddfd0670a83ae
sw x3, 0(x2) # store 0x6d4ddfd0670a83ae in memory
flw f24, 0(x2) # load 0x6d4ddfd0670a83ae from memory into f24
la x2, scratch
li x3, 0x4d33dcafefe4fa54 # load x3 with value 0x4d33dcafefe4fa54
sw x3, 0(x2) # store 0x4d33dcafefe4fa54 in memory
flw f16, 0(x2) # load 0x4d33dcafefe4fa54 from memory into f16
fmadd.s f16, f30, f24, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0xf69b971e71240c67 # load x3 with value 0xf69b971e71240c67
sw x3, 0(x2) # store 0xf69b971e71240c67 in memory
flw f18, 0(x2) # load 0xf69b971e71240c67 from memory into f18
la x2, scratch
li x3, 0x88ab445cc47fcd32 # load x3 with value 0x88ab445cc47fcd32
sw x3, 0(x2) # store 0x88ab445cc47fcd32 in memory
flw f25, 0(x2) # load 0x88ab445cc47fcd32 from memory into f25
la x2, scratch
li x3, 0x40fbd7a074098442 # load x3 with value 0x40fbd7a074098442
sw x3, 0(x2) # store 0x40fbd7a074098442 in memory
flw f17, 0(x2) # load 0x40fbd7a074098442 from memory into f17
fmadd.s f17, f18, f25, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0x91f53504f8911d2c # load x3 with value 0x91f53504f8911d2c
sw x3, 0(x2) # store 0x91f53504f8911d2c in memory
flw f1, 0(x2) # load 0x91f53504f8911d2c from memory into f1
la x2, scratch
li x3, 0xbb90e038999a0250 # load x3 with value 0xbb90e038999a0250
sw x3, 0(x2) # store 0xbb90e038999a0250 in memory
flw f13, 0(x2) # load 0xbb90e038999a0250 from memory into f13
la x2, scratch
li x3, 0xdcfa090c9278f6b0 # load x3 with value 0xdcfa090c9278f6b0
sw x3, 0(x2) # store 0xdcfa090c9278f6b0 in memory
flw f18, 0(x2) # load 0xdcfa090c9278f6b0 from memory into f18
fmadd.s f18, f1, f13, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0x8b00b2073cfe47d1 # load x3 with value 0x8b00b2073cfe47d1
sw x3, 0(x2) # store 0x8b00b2073cfe47d1 in memory
flw f25, 0(x2) # load 0x8b00b2073cfe47d1 from memory into f25
la x2, scratch
li x3, 0xa69419c71ee5444d # load x3 with value 0xa69419c71ee5444d
sw x3, 0(x2) # store 0xa69419c71ee5444d in memory
flw f5, 0(x2) # load 0xa69419c71ee5444d from memory into f5
la x2, scratch
li x3, 0xb901055981cfbbc4 # load x3 with value 0xb901055981cfbbc4
sw x3, 0(x2) # store 0xb901055981cfbbc4 in memory
flw f19, 0(x2) # load 0xb901055981cfbbc4 from memory into f19
fmadd.s f19, f25, f5, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0x2c89c7d4f095537b # load x3 with value 0x2c89c7d4f095537b
sw x3, 0(x2) # store 0x2c89c7d4f095537b in memory
flw f19, 0(x2) # load 0x2c89c7d4f095537b from memory into f19
la x2, scratch
li x3, 0x13d6672422be7023 # load x3 with value 0x13d6672422be7023
sw x3, 0(x2) # store 0x13d6672422be7023 in memory
flw f15, 0(x2) # load 0x13d6672422be7023 from memory into f15
la x2, scratch
li x3, 0x7a0cb1b6f51c236e # load x3 with value 0x7a0cb1b6f51c236e
sw x3, 0(x2) # store 0x7a0cb1b6f51c236e in memory
flw f20, 0(x2) # load 0x7a0cb1b6f51c236e from memory into f20
fmadd.s f20, f19, f15, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x76e1411fcfbb3761 # load x3 with value 0x76e1411fcfbb3761
sw x3, 0(x2) # store 0x76e1411fcfbb3761 in memory
flw f14, 0(x2) # load 0x76e1411fcfbb3761 from memory into f14
la x2, scratch
li x3, 0x24f33ad47e9f8bc4 # load x3 with value 0x24f33ad47e9f8bc4
sw x3, 0(x2) # store 0x24f33ad47e9f8bc4 in memory
flw f18, 0(x2) # load 0x24f33ad47e9f8bc4 from memory into f18
la x2, scratch
li x3, 0x84b8879f7041f331 # load x3 with value 0x84b8879f7041f331
sw x3, 0(x2) # store 0x84b8879f7041f331 in memory
flw f21, 0(x2) # load 0x84b8879f7041f331 from memory into f21
fmadd.s f21, f14, f18, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0xda49a60aee83df52 # load x3 with value 0xda49a60aee83df52
sw x3, 0(x2) # store 0xda49a60aee83df52 in memory
flw f19, 0(x2) # load 0xda49a60aee83df52 from memory into f19
la x2, scratch
li x3, 0xab658088ea4bb6c0 # load x3 with value 0xab658088ea4bb6c0
sw x3, 0(x2) # store 0xab658088ea4bb6c0 in memory
flw f7, 0(x2) # load 0xab658088ea4bb6c0 from memory into f7
la x2, scratch
li x3, 0x366dcef2c6eba7cd # load x3 with value 0x366dcef2c6eba7cd
sw x3, 0(x2) # store 0x366dcef2c6eba7cd in memory
flw f22, 0(x2) # load 0x366dcef2c6eba7cd from memory into f22
fmadd.s f22, f19, f7, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0xd13d46ef3236fda0 # load x3 with value 0xd13d46ef3236fda0
sw x3, 0(x2) # store 0xd13d46ef3236fda0 in memory
flw f28, 0(x2) # load 0xd13d46ef3236fda0 from memory into f28
la x2, scratch
li x3, 0x6513502e8a2903d7 # load x3 with value 0x6513502e8a2903d7
sw x3, 0(x2) # store 0x6513502e8a2903d7 in memory
flw f8, 0(x2) # load 0x6513502e8a2903d7 from memory into f8
la x2, scratch
li x3, 0x3a6311c60f2e20dd # load x3 with value 0x3a6311c60f2e20dd
sw x3, 0(x2) # store 0x3a6311c60f2e20dd in memory
flw f23, 0(x2) # load 0x3a6311c60f2e20dd from memory into f23
fmadd.s f23, f28, f8, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0xf432b78441a6230f # load x3 with value 0xf432b78441a6230f
sw x3, 0(x2) # store 0xf432b78441a6230f in memory
flw f17, 0(x2) # load 0xf432b78441a6230f from memory into f17
la x2, scratch
li x3, 0x7f9e388647ffae94 # load x3 with value 0x7f9e388647ffae94
sw x3, 0(x2) # store 0x7f9e388647ffae94 in memory
flw f19, 0(x2) # load 0x7f9e388647ffae94 from memory into f19
la x2, scratch
li x3, 0xf5128a3ac9999fc0 # load x3 with value 0xf5128a3ac9999fc0
sw x3, 0(x2) # store 0xf5128a3ac9999fc0 in memory
flw f24, 0(x2) # load 0xf5128a3ac9999fc0 from memory into f24
fmadd.s f24, f17, f19, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0x4478ca3410f8035f # load x3 with value 0x4478ca3410f8035f
sw x3, 0(x2) # store 0x4478ca3410f8035f in memory
flw f9, 0(x2) # load 0x4478ca3410f8035f from memory into f9
la x2, scratch
li x3, 0x9cc462d32a48d5c7 # load x3 with value 0x9cc462d32a48d5c7
sw x3, 0(x2) # store 0x9cc462d32a48d5c7 in memory
flw f10, 0(x2) # load 0x9cc462d32a48d5c7 from memory into f10
la x2, scratch
li x3, 0x92b92492680adf0b # load x3 with value 0x92b92492680adf0b
sw x3, 0(x2) # store 0x92b92492680adf0b in memory
flw f25, 0(x2) # load 0x92b92492680adf0b from memory into f25
fmadd.s f25, f9, f10, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0xe64cdfd60d7409d5 # load x3 with value 0xe64cdfd60d7409d5
sw x3, 0(x2) # store 0xe64cdfd60d7409d5 in memory
flw f1, 0(x2) # load 0xe64cdfd60d7409d5 from memory into f1
la x2, scratch
li x3, 0xab0bdf450448986 # load x3 with value 0xab0bdf450448986
sw x3, 0(x2) # store 0xab0bdf450448986 in memory
flw f8, 0(x2) # load 0xab0bdf450448986 from memory into f8
la x2, scratch
li x3, 0x4cb21e04b954dd3 # load x3 with value 0x4cb21e04b954dd3
sw x3, 0(x2) # store 0x4cb21e04b954dd3 in memory
flw f26, 0(x2) # load 0x4cb21e04b954dd3 from memory into f26
fmadd.s f26, f1, f8, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0xcded8954951bdd80 # load x3 with value 0xcded8954951bdd80
sw x3, 0(x2) # store 0xcded8954951bdd80 in memory
flw f26, 0(x2) # load 0xcded8954951bdd80 from memory into f26
la x2, scratch
li x3, 0x13535e3a37bd22a3 # load x3 with value 0x13535e3a37bd22a3
sw x3, 0(x2) # store 0x13535e3a37bd22a3 in memory
flw f20, 0(x2) # load 0x13535e3a37bd22a3 from memory into f20
la x2, scratch
li x3, 0xc597d7d34b9bfff2 # load x3 with value 0xc597d7d34b9bfff2
sw x3, 0(x2) # store 0xc597d7d34b9bfff2 in memory
flw f27, 0(x2) # load 0xc597d7d34b9bfff2 from memory into f27
fmadd.s f27, f26, f20, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0xd506286e229c8562 # load x3 with value 0xd506286e229c8562
sw x3, 0(x2) # store 0xd506286e229c8562 in memory
flw f23, 0(x2) # load 0xd506286e229c8562 from memory into f23
la x2, scratch
li x3, 0xba38d2e6abe582ba # load x3 with value 0xba38d2e6abe582ba
sw x3, 0(x2) # store 0xba38d2e6abe582ba in memory
flw f28, 0(x2) # load 0xba38d2e6abe582ba from memory into f28
la x2, scratch
li x3, 0xcbdfed5b471be227 # load x3 with value 0xcbdfed5b471be227
sw x3, 0(x2) # store 0xcbdfed5b471be227 in memory
flw f28, 0(x2) # load 0xcbdfed5b471be227 from memory into f28
fmadd.s f28, f23, f28, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0xe456250df948b2aa # load x3 with value 0xe456250df948b2aa
sw x3, 0(x2) # store 0xe456250df948b2aa in memory
flw f9, 0(x2) # load 0xe456250df948b2aa from memory into f9
la x2, scratch
li x3, 0x10f9183abaab99a8 # load x3 with value 0x10f9183abaab99a8
sw x3, 0(x2) # store 0x10f9183abaab99a8 in memory
flw f1, 0(x2) # load 0x10f9183abaab99a8 from memory into f1
la x2, scratch
li x3, 0x23dcd8f3fdb37abb # load x3 with value 0x23dcd8f3fdb37abb
sw x3, 0(x2) # store 0x23dcd8f3fdb37abb in memory
flw f29, 0(x2) # load 0x23dcd8f3fdb37abb from memory into f29
fmadd.s f29, f9, f1, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0x757c727d31e99485 # load x3 with value 0x757c727d31e99485
sw x3, 0(x2) # store 0x757c727d31e99485 in memory
flw f31, 0(x2) # load 0x757c727d31e99485 from memory into f31
la x2, scratch
li x3, 0x1f8d26276d2553ac # load x3 with value 0x1f8d26276d2553ac
sw x3, 0(x2) # store 0x1f8d26276d2553ac in memory
flw f30, 0(x2) # load 0x1f8d26276d2553ac from memory into f30
la x2, scratch
li x3, 0x4ca4da3c7fb3315f # load x3 with value 0x4ca4da3c7fb3315f
sw x3, 0(x2) # store 0x4ca4da3c7fb3315f in memory
flw f30, 0(x2) # load 0x4ca4da3c7fb3315f from memory into f30
fmadd.s f30, f31, f30, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x87b7d1fa2da99b9a # load x3 with value 0x87b7d1fa2da99b9a
sw x3, 0(x2) # store 0x87b7d1fa2da99b9a in memory
flw f24, 0(x2) # load 0x87b7d1fa2da99b9a from memory into f24
la x2, scratch
li x3, 0xf527fc821abb07f9 # load x3 with value 0xf527fc821abb07f9
sw x3, 0(x2) # store 0xf527fc821abb07f9 in memory
flw f16, 0(x2) # load 0xf527fc821abb07f9 from memory into f16
la x2, scratch
li x3, 0xfc799b420131e363 # load x3 with value 0xfc799b420131e363
sw x3, 0(x2) # store 0xfc799b420131e363 in memory
flw f31, 0(x2) # load 0xfc799b420131e363 from memory into f31
fmadd.s f31, f24, f16, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0xde2404bdecd3bd8d # load x3 with value 0xde2404bdecd3bd8d
sw x3, 0(x2) # store 0xde2404bdecd3bd8d in memory
flw f8, 0(x2) # load 0xde2404bdecd3bd8d from memory into f8
la x2, scratch
li x3, 0x210e456b9f7c6afc # load x3 with value 0x210e456b9f7c6afc
sw x3, 0(x2) # store 0x210e456b9f7c6afc in memory
flw f27, 0(x2) # load 0x210e456b9f7c6afc from memory into f27
la x2, scratch
li x3, 0x0000000a # load x3 with value 0x0000000a
sw x3, 0(x2) # store 0x0000000a in memory
flw f10, 0(x2) # load 0x0000000a from memory into f10
fmadd.s f14, f8, f27, f10, dyn # perform operation
fmadd.s f14, f8, f27, f10, rdn # perform operation
fmadd.s f14, f8, f27, f10, rmm # perform operation
fmadd.s f14, f8, f27, f10, rne # perform operation
fmadd.s f14, f8, f27, f10, rtz # perform operation
fmadd.s f14, f8, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0xe8e574c35ff14fa # load x3 with value 0xe8e574c35ff14fa
sw x3, 0(x2) # store 0xe8e574c35ff14fa in memory
flw f6, 0(x2) # load 0xe8e574c35ff14fa from memory into f6
fmadd.s f3, f16, f28, f6, dyn # perform operation
fmadd.s f3, f16, f28, f6, rdn # perform operation
fmadd.s f3, f16, f28, f6, rmm # perform operation
fmadd.s f3, f16, f28, f6, rne # perform operation
fmadd.s f3, f16, f28, f6, rtz # perform operation
fmadd.s f3, f16, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x811db73a04cc1b04 # load x3 with value 0x811db73a04cc1b04
sw x3, 0(x2) # store 0x811db73a04cc1b04 in memory
flw f15, 0(x2) # load 0x811db73a04cc1b04 from memory into f15
fmadd.s f7, f19, f30, f15, dyn # perform operation
fmadd.s f7, f19, f30, f15, rdn # perform operation
fmadd.s f7, f19, f30, f15, rmm # perform operation
fmadd.s f7, f19, f30, f15, rne # perform operation
fmadd.s f7, f19, f30, f15, rtz # perform operation
fmadd.s f7, f19, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x81d0fff2f560f3fd # load x3 with value 0x81d0fff2f560f3fd
sw x3, 0(x2) # store 0x81d0fff2f560f3fd in memory
flw f13, 0(x2) # load 0x81d0fff2f560f3fd from memory into f13
fmadd.s f8, f18, f20, f13, dyn # perform operation
fmadd.s f8, f18, f20, f13, rdn # perform operation
fmadd.s f8, f18, f20, f13, rmm # perform operation
fmadd.s f8, f18, f20, f13, rne # perform operation
fmadd.s f8, f18, f20, f13, rtz # perform operation
fmadd.s f8, f18, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f18, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f18, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xf029b14d999d4822 # load x3 with value 0xf029b14d999d4822
sw x3, 0(x2) # store 0xf029b14d999d4822 in memory
flw f13, 0(x2) # load 0xf029b14d999d4822 from memory into f13
fmadd.s f5, f20, f12, f13, dyn # perform operation
fmadd.s f5, f20, f12, f13, rdn # perform operation
fmadd.s f5, f20, f12, f13, rmm # perform operation
fmadd.s f5, f20, f12, f13, rne # perform operation
fmadd.s f5, f20, f12, f13, rtz # perform operation
fmadd.s f5, f20, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x1045e737e544aedd # load x3 with value 0x1045e737e544aedd
sw x3, 0(x2) # store 0x1045e737e544aedd in memory
flw f16, 0(x2) # load 0x1045e737e544aedd from memory into f16
fmadd.s f9, f19, f15, f16, dyn # perform operation
fmadd.s f9, f19, f15, f16, rdn # perform operation
fmadd.s f9, f19, f15, f16, rmm # perform operation
fmadd.s f9, f19, f15, f16, rne # perform operation
fmadd.s f9, f19, f15, f16, rtz # perform operation
fmadd.s f9, f19, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f19, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x8d43034de99edb3d # load x3 with value 0x8d43034de99edb3d
sw x3, 0(x2) # store 0x8d43034de99edb3d in memory
flw f21, 0(x2) # load 0x8d43034de99edb3d from memory into f21
fmadd.s f28, f25, f12, f21, dyn # perform operation
fmadd.s f28, f25, f12, f21, rdn # perform operation
fmadd.s f28, f25, f12, f21, rmm # perform operation
fmadd.s f28, f25, f12, f21, rne # perform operation
fmadd.s f28, f25, f12, f21, rtz # perform operation
fmadd.s f28, f25, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x9d04b57eacee05cc # load x3 with value 0x9d04b57eacee05cc
sw x3, 0(x2) # store 0x9d04b57eacee05cc in memory
flw f28, 0(x2) # load 0x9d04b57eacee05cc from memory into f28
fmadd.s f17, f29, f9, f28, dyn # perform operation
fmadd.s f17, f29, f9, f28, rdn # perform operation
fmadd.s f17, f29, f9, f28, rmm # perform operation
fmadd.s f17, f29, f9, f28, rne # perform operation
fmadd.s f17, f29, f9, f28, rtz # perform operation
fmadd.s f17, f29, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x529fdc1cd1b8d22 # load x3 with value 0x529fdc1cd1b8d22
sw x3, 0(x2) # store 0x529fdc1cd1b8d22 in memory
flw f7, 0(x2) # load 0x529fdc1cd1b8d22 from memory into f7
fmadd.s f29, f17, f16, f7, dyn # perform operation
fmadd.s f29, f17, f16, f7, rdn # perform operation
fmadd.s f29, f17, f16, f7, rmm # perform operation
fmadd.s f29, f17, f16, f7, rne # perform operation
fmadd.s f29, f17, f16, f7, rtz # perform operation
fmadd.s f29, f17, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x7af67efee8cfea01 # load x3 with value 0x7af67efee8cfea01
sw x3, 0(x2) # store 0x7af67efee8cfea01 in memory
flw f12, 0(x2) # load 0x7af67efee8cfea01 from memory into f12
fmadd.s f30, f19, f20, f12, dyn # perform operation
fmadd.s f30, f19, f20, f12, rdn # perform operation
fmadd.s f30, f19, f20, f12, rmm # perform operation
fmadd.s f30, f19, f20, f12, rne # perform operation
fmadd.s f30, f19, f20, f12, rtz # perform operation
fmadd.s f30, f19, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x6706643dea795618 # load x3 with value 0x6706643dea795618
sw x3, 0(x2) # store 0x6706643dea795618 in memory
flw f21, 0(x2) # load 0x6706643dea795618 from memory into f21
fmadd.s f1, f11, f26, f21, dyn # perform operation
fmadd.s f1, f11, f26, f21, rdn # perform operation
fmadd.s f1, f11, f26, f21, rmm # perform operation
fmadd.s f1, f11, f26, f21, rne # perform operation
fmadd.s f1, f11, f26, f21, rtz # perform operation
fmadd.s f1, f11, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f11, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f11, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x8c1546a38721d1cb # load x3 with value 0x8c1546a38721d1cb
sw x3, 0(x2) # store 0x8c1546a38721d1cb in memory
flw f25, 0(x2) # load 0x8c1546a38721d1cb from memory into f25
fmadd.s f30, f6, f24, f25, dyn # perform operation
fmadd.s f30, f6, f24, f25, rdn # perform operation
fmadd.s f30, f6, f24, f25, rmm # perform operation
fmadd.s f30, f6, f24, f25, rne # perform operation
fmadd.s f30, f6, f24, f25, rtz # perform operation
fmadd.s f30, f6, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f6, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0xd7695bfd429e8919 # load x3 with value 0xd7695bfd429e8919
sw x3, 0(x2) # store 0xd7695bfd429e8919 in memory
flw f2, 0(x2) # load 0xd7695bfd429e8919 from memory into f2
fmadd.s f14, f21, f15, f2, dyn # perform operation
fmadd.s f14, f21, f15, f2, rdn # perform operation
fmadd.s f14, f21, f15, f2, rmm # perform operation
fmadd.s f14, f21, f15, f2, rne # perform operation
fmadd.s f14, f21, f15, f2, rtz # perform operation
fmadd.s f14, f21, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f21, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f21, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xf0a0f45625f2c9c9 # load x3 with value 0xf0a0f45625f2c9c9
sw x3, 0(x2) # store 0xf0a0f45625f2c9c9 in memory
flw f31, 0(x2) # load 0xf0a0f45625f2c9c9 from memory into f31
fmadd.s f27, f25, f7, f31, dyn # perform operation
fmadd.s f27, f25, f7, f31, rdn # perform operation
fmadd.s f27, f25, f7, f31, rmm # perform operation
fmadd.s f27, f25, f7, f31, rne # perform operation
fmadd.s f27, f25, f7, f31, rtz # perform operation
fmadd.s f27, f25, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xb21b49dcd170a20a # load x3 with value 0xb21b49dcd170a20a
sw x3, 0(x2) # store 0xb21b49dcd170a20a in memory
flw f10, 0(x2) # load 0xb21b49dcd170a20a from memory into f10
fmadd.s f6, f30, f15, f10, dyn # perform operation
fmadd.s f6, f30, f15, f10, rdn # perform operation
fmadd.s f6, f30, f15, f10, rmm # perform operation
fmadd.s f6, f30, f15, f10, rne # perform operation
fmadd.s f6, f30, f15, f10, rtz # perform operation
fmadd.s f6, f30, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f30, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f30, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x351fe21b59f6cd9a # load x3 with value 0x351fe21b59f6cd9a
sw x3, 0(x2) # store 0x351fe21b59f6cd9a in memory
flw f14, 0(x2) # load 0x351fe21b59f6cd9a from memory into f14
fmadd.s f28, f25, f22, f14, dyn # perform operation
fmadd.s f28, f25, f22, f14, rdn # perform operation
fmadd.s f28, f25, f22, f14, rmm # perform operation
fmadd.s f28, f25, f22, f14, rne # perform operation
fmadd.s f28, f25, f22, f14, rtz # perform operation
fmadd.s f28, f25, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x191a54d1ecd14296 # load x3 with value 0x191a54d1ecd14296
sw x3, 0(x2) # store 0x191a54d1ecd14296 in memory
flw f1, 0(x2) # load 0x191a54d1ecd14296 from memory into f1
fmadd.s f17, f8, f2, f1, dyn # perform operation
fmadd.s f17, f8, f2, f1, rdn # perform operation
fmadd.s f17, f8, f2, f1, rmm # perform operation
fmadd.s f17, f8, f2, f1, rne # perform operation
fmadd.s f17, f8, f2, f1, rtz # perform operation
fmadd.s f17, f8, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f2, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x47ebb7f0137d4078 # load x3 with value 0x47ebb7f0137d4078
sw x3, 0(x2) # store 0x47ebb7f0137d4078 in memory
flw f19, 0(x2) # load 0x47ebb7f0137d4078 from memory into f19
fmadd.s f7, f23, f26, f19, dyn # perform operation
fmadd.s f7, f23, f26, f19, rdn # perform operation
fmadd.s f7, f23, f26, f19, rmm # perform operation
fmadd.s f7, f23, f26, f19, rne # perform operation
fmadd.s f7, f23, f26, f19, rtz # perform operation
fmadd.s f7, f23, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x9896b0d76c84b5d2 # load x3 with value 0x9896b0d76c84b5d2
sw x3, 0(x2) # store 0x9896b0d76c84b5d2 in memory
flw f13, 0(x2) # load 0x9896b0d76c84b5d2 from memory into f13
fmadd.s f14, f5, f31, f13, dyn # perform operation
fmadd.s f14, f5, f31, f13, rdn # perform operation
fmadd.s f14, f5, f31, f13, rmm # perform operation
fmadd.s f14, f5, f31, f13, rne # perform operation
fmadd.s f14, f5, f31, f13, rtz # perform operation
fmadd.s f14, f5, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x593cd424225bc9e0 # load x3 with value 0x593cd424225bc9e0
sw x3, 0(x2) # store 0x593cd424225bc9e0 in memory
flw f3, 0(x2) # load 0x593cd424225bc9e0 from memory into f3
fmadd.s f19, f11, f12, f3, dyn # perform operation
fmadd.s f19, f11, f12, f3, rdn # perform operation
fmadd.s f19, f11, f12, f3, rmm # perform operation
fmadd.s f19, f11, f12, f3, rne # perform operation
fmadd.s f19, f11, f12, f3, rtz # perform operation
fmadd.s f19, f11, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x9144a76047f19d21 # load x3 with value 0x9144a76047f19d21
sw x3, 0(x2) # store 0x9144a76047f19d21 in memory
flw f25, 0(x2) # load 0x9144a76047f19d21 from memory into f25
fmadd.s f14, f10, f22, f25, dyn # perform operation
fmadd.s f14, f10, f22, f25, rdn # perform operation
fmadd.s f14, f10, f22, f25, rmm # perform operation
fmadd.s f14, f10, f22, f25, rne # perform operation
fmadd.s f14, f10, f22, f25, rtz # perform operation
fmadd.s f14, f10, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x8e769fbc1c605c4b # load x3 with value 0x8e769fbc1c605c4b
sw x3, 0(x2) # store 0x8e769fbc1c605c4b in memory
flw f5, 0(x2) # load 0x8e769fbc1c605c4b from memory into f5
fmadd.s f29, f6, f14, f5, dyn # perform operation
fmadd.s f29, f6, f14, f5, rdn # perform operation
fmadd.s f29, f6, f14, f5, rmm # perform operation
fmadd.s f29, f6, f14, f5, rne # perform operation
fmadd.s f29, f6, f14, f5, rtz # perform operation
fmadd.s f29, f6, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f6, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0xbfaa9eb44d8292fe # load x3 with value 0xbfaa9eb44d8292fe
sw x3, 0(x2) # store 0xbfaa9eb44d8292fe in memory
flw f6, 0(x2) # load 0xbfaa9eb44d8292fe from memory into f6
fmadd.s f27, f16, f17, f6, dyn # perform operation
fmadd.s f27, f16, f17, f6, rdn # perform operation
fmadd.s f27, f16, f17, f6, rmm # perform operation
fmadd.s f27, f16, f17, f6, rne # perform operation
fmadd.s f27, f16, f17, f6, rtz # perform operation
fmadd.s f27, f16, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xf3cfe6829328c3e1 # load x3 with value 0xf3cfe6829328c3e1
sw x3, 0(x2) # store 0xf3cfe6829328c3e1 in memory
flw f26, 0(x2) # load 0xf3cfe6829328c3e1 from memory into f26
fmadd.s f11, f17, f12, f26, dyn # perform operation
fmadd.s f11, f17, f12, f26, rdn # perform operation
fmadd.s f11, f17, f12, f26, rmm # perform operation
fmadd.s f11, f17, f12, f26, rne # perform operation
fmadd.s f11, f17, f12, f26, rtz # perform operation
fmadd.s f11, f17, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f17, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x1d35b3937cf384db # load x3 with value 0x1d35b3937cf384db
sw x3, 0(x2) # store 0x1d35b3937cf384db in memory
flw f28, 0(x2) # load 0x1d35b3937cf384db from memory into f28
fmadd.s f3, f7, f21, f28, dyn # perform operation
fmadd.s f3, f7, f21, f28, rdn # perform operation
fmadd.s f3, f7, f21, f28, rmm # perform operation
fmadd.s f3, f7, f21, f28, rne # perform operation
fmadd.s f3, f7, f21, f28, rtz # perform operation
fmadd.s f3, f7, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x6eaca55b28f011cd # load x3 with value 0x6eaca55b28f011cd
sw x3, 0(x2) # store 0x6eaca55b28f011cd in memory
flw f5, 0(x2) # load 0x6eaca55b28f011cd from memory into f5
fmadd.s f23, f21, f17, f5, dyn # perform operation
fmadd.s f23, f21, f17, f5, rdn # perform operation
fmadd.s f23, f21, f17, f5, rmm # perform operation
fmadd.s f23, f21, f17, f5, rne # perform operation
fmadd.s f23, f21, f17, f5, rtz # perform operation
fmadd.s f23, f21, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f21, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f21, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x49773cbe57296d38 # load x3 with value 0x49773cbe57296d38
sw x3, 0(x2) # store 0x49773cbe57296d38 in memory
flw f28, 0(x2) # load 0x49773cbe57296d38 from memory into f28
fmadd.s f11, f30, f15, f28, dyn # perform operation
fmadd.s f11, f30, f15, f28, rdn # perform operation
fmadd.s f11, f30, f15, f28, rmm # perform operation
fmadd.s f11, f30, f15, f28, rne # perform operation
fmadd.s f11, f30, f15, f28, rtz # perform operation
fmadd.s f11, f30, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0xa4b8eebea67487f8 # load x3 with value 0xa4b8eebea67487f8
sw x3, 0(x2) # store 0xa4b8eebea67487f8 in memory
flw f28, 0(x2) # load 0xa4b8eebea67487f8 from memory into f28
fmadd.s f22, f10, f17, f28, dyn # perform operation
fmadd.s f22, f10, f17, f28, rdn # perform operation
fmadd.s f22, f10, f17, f28, rmm # perform operation
fmadd.s f22, f10, f17, f28, rne # perform operation
fmadd.s f22, f10, f17, f28, rtz # perform operation
fmadd.s f22, f10, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0xfdbbe4e9736ef1ec # load x3 with value 0xfdbbe4e9736ef1ec
sw x3, 0(x2) # store 0xfdbbe4e9736ef1ec in memory
flw f2, 0(x2) # load 0xfdbbe4e9736ef1ec from memory into f2
fmadd.s f22, f17, f16, f2, dyn # perform operation
fmadd.s f22, f17, f16, f2, rdn # perform operation
fmadd.s f22, f17, f16, f2, rmm # perform operation
fmadd.s f22, f17, f16, f2, rne # perform operation
fmadd.s f22, f17, f16, f2, rtz # perform operation
fmadd.s f22, f17, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x7baf8a3544b548a7 # load x3 with value 0x7baf8a3544b548a7
sw x3, 0(x2) # store 0x7baf8a3544b548a7 in memory
flw f15, 0(x2) # load 0x7baf8a3544b548a7 from memory into f15
fmadd.s f22, f19, f28, f15, dyn # perform operation
fmadd.s f22, f19, f28, f15, rdn # perform operation
fmadd.s f22, f19, f28, f15, rmm # perform operation
fmadd.s f22, f19, f28, f15, rne # perform operation
fmadd.s f22, f19, f28, f15, rtz # perform operation
fmadd.s f22, f19, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xaeb3df5366736cae # load x3 with value 0xaeb3df5366736cae
sw x3, 0(x2) # store 0xaeb3df5366736cae in memory
flw f17, 0(x2) # load 0xaeb3df5366736cae from memory into f17
fmadd.s f10, f26, f25, f17, dyn # perform operation
fmadd.s f10, f26, f25, f17, rdn # perform operation
fmadd.s f10, f26, f25, f17, rmm # perform operation
fmadd.s f10, f26, f25, f17, rne # perform operation
fmadd.s f10, f26, f25, f17, rtz # perform operation
fmadd.s f10, f26, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f26, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f26, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x80df6daeedd504c0 # load x3 with value 0x80df6daeedd504c0
sw x3, 0(x2) # store 0x80df6daeedd504c0 in memory
flw f8, 0(x2) # load 0x80df6daeedd504c0 from memory into f8
fmadd.s f24, f28, f18, f8, dyn # perform operation
fmadd.s f24, f28, f18, f8, rdn # perform operation
fmadd.s f24, f28, f18, f8, rmm # perform operation
fmadd.s f24, f28, f18, f8, rne # perform operation
fmadd.s f24, f28, f18, f8, rtz # perform operation
fmadd.s f24, f28, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x2595ca40bfec0bfe # load x3 with value 0x2595ca40bfec0bfe
sw x3, 0(x2) # store 0x2595ca40bfec0bfe in memory
flw f26, 0(x2) # load 0x2595ca40bfec0bfe from memory into f26
fmadd.s f5, f27, f15, f26, dyn # perform operation
fmadd.s f5, f27, f15, f26, rdn # perform operation
fmadd.s f5, f27, f15, f26, rmm # perform operation
fmadd.s f5, f27, f15, f26, rne # perform operation
fmadd.s f5, f27, f15, f26, rtz # perform operation
fmadd.s f5, f27, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f27, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xca3ca1b611ff3ffa # load x3 with value 0xca3ca1b611ff3ffa
sw x3, 0(x2) # store 0xca3ca1b611ff3ffa in memory
flw f26, 0(x2) # load 0xca3ca1b611ff3ffa from memory into f26
fmadd.s f29, f10, f13, f26, dyn # perform operation
fmadd.s f29, f10, f13, f26, rdn # perform operation
fmadd.s f29, f10, f13, f26, rmm # perform operation
fmadd.s f29, f10, f13, f26, rne # perform operation
fmadd.s f29, f10, f13, f26, rtz # perform operation
fmadd.s f29, f10, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x1a560362745730a8 # load x3 with value 0x1a560362745730a8
sw x3, 0(x2) # store 0x1a560362745730a8 in memory
flw f9, 0(x2) # load 0x1a560362745730a8 from memory into f9
fmadd.s f7, f28, f24, f9, dyn # perform operation
fmadd.s f7, f28, f24, f9, rdn # perform operation
fmadd.s f7, f28, f24, f9, rmm # perform operation
fmadd.s f7, f28, f24, f9, rne # perform operation
fmadd.s f7, f28, f24, f9, rtz # perform operation
fmadd.s f7, f28, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f28, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xf93b1f8b3645cc72 # load x3 with value 0xf93b1f8b3645cc72
sw x3, 0(x2) # store 0xf93b1f8b3645cc72 in memory
flw f12, 0(x2) # load 0xf93b1f8b3645cc72 from memory into f12
fmadd.s f25, f21, f28, f12, dyn # perform operation
fmadd.s f25, f21, f28, f12, rdn # perform operation
fmadd.s f25, f21, f28, f12, rmm # perform operation
fmadd.s f25, f21, f28, f12, rne # perform operation
fmadd.s f25, f21, f28, f12, rtz # perform operation
fmadd.s f25, f21, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xd5028ecebcc810e7 # load x3 with value 0xd5028ecebcc810e7
sw x3, 0(x2) # store 0xd5028ecebcc810e7 in memory
flw f16, 0(x2) # load 0xd5028ecebcc810e7 from memory into f16
fmadd.s f28, f5, f1, f16, dyn # perform operation
fmadd.s f28, f5, f1, f16, rdn # perform operation
fmadd.s f28, f5, f1, f16, rmm # perform operation
fmadd.s f28, f5, f1, f16, rne # perform operation
fmadd.s f28, f5, f1, f16, rtz # perform operation
fmadd.s f28, f5, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f5, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f5, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f5, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f5, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f5, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x1fddc6ae3065d9d2 # load x3 with value 0x1fddc6ae3065d9d2
sw x3, 0(x2) # store 0x1fddc6ae3065d9d2 in memory
flw f28, 0(x2) # load 0x1fddc6ae3065d9d2 from memory into f28
fmadd.s f29, f7, f23, f28, dyn # perform operation
fmadd.s f29, f7, f23, f28, rdn # perform operation
fmadd.s f29, f7, f23, f28, rmm # perform operation
fmadd.s f29, f7, f23, f28, rne # perform operation
fmadd.s f29, f7, f23, f28, rtz # perform operation
fmadd.s f29, f7, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xdfc94576da032e29 # load x3 with value 0xdfc94576da032e29
sw x3, 0(x2) # store 0xdfc94576da032e29 in memory
flw f1, 0(x2) # load 0xdfc94576da032e29 from memory into f1
fmadd.s f10, f23, f21, f1, dyn # perform operation
fmadd.s f10, f23, f21, f1, rdn # perform operation
fmadd.s f10, f23, f21, f1, rmm # perform operation
fmadd.s f10, f23, f21, f1, rne # perform operation
fmadd.s f10, f23, f21, f1, rtz # perform operation
fmadd.s f10, f23, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x80c91e5c3b31ef8c # load x3 with value 0x80c91e5c3b31ef8c
sw x3, 0(x2) # store 0x80c91e5c3b31ef8c in memory
flw f10, 0(x2) # load 0x80c91e5c3b31ef8c from memory into f10
fmadd.s f7, f19, f17, f10, dyn # perform operation
fmadd.s f7, f19, f17, f10, rdn # perform operation
fmadd.s f7, f19, f17, f10, rmm # perform operation
fmadd.s f7, f19, f17, f10, rne # perform operation
fmadd.s f7, f19, f17, f10, rtz # perform operation
fmadd.s f7, f19, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x61bc3549d8c89eea # load x3 with value 0x61bc3549d8c89eea
sw x3, 0(x2) # store 0x61bc3549d8c89eea in memory
flw f6, 0(x2) # load 0x61bc3549d8c89eea from memory into f6
fmadd.s f7, f21, f28, f6, dyn # perform operation
fmadd.s f7, f21, f28, f6, rdn # perform operation
fmadd.s f7, f21, f28, f6, rmm # perform operation
fmadd.s f7, f21, f28, f6, rne # perform operation
fmadd.s f7, f21, f28, f6, rtz # perform operation
fmadd.s f7, f21, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xc9ac0cc7dbbd042d # load x3 with value 0xc9ac0cc7dbbd042d
sw x3, 0(x2) # store 0xc9ac0cc7dbbd042d in memory
flw f29, 0(x2) # load 0xc9ac0cc7dbbd042d from memory into f29
fmadd.s f30, f18, f27, f29, dyn # perform operation
fmadd.s f30, f18, f27, f29, rdn # perform operation
fmadd.s f30, f18, f27, f29, rmm # perform operation
fmadd.s f30, f18, f27, f29, rne # perform operation
fmadd.s f30, f18, f27, f29, rtz # perform operation
fmadd.s f30, f18, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x72013fc1504e0816 # load x3 with value 0x72013fc1504e0816
sw x3, 0(x2) # store 0x72013fc1504e0816 in memory
flw f3, 0(x2) # load 0x72013fc1504e0816 from memory into f3
fmadd.s f1, f9, f7, f3, dyn # perform operation
fmadd.s f1, f9, f7, f3, rdn # perform operation
fmadd.s f1, f9, f7, f3, rmm # perform operation
fmadd.s f1, f9, f7, f3, rne # perform operation
fmadd.s f1, f9, f7, f3, rtz # perform operation
fmadd.s f1, f9, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x827468c532d979e9 # load x3 with value 0x827468c532d979e9
sw x3, 0(x2) # store 0x827468c532d979e9 in memory
flw f2, 0(x2) # load 0x827468c532d979e9 from memory into f2
fmadd.s f23, f3, f24, f2, dyn # perform operation
fmadd.s f23, f3, f24, f2, rdn # perform operation
fmadd.s f23, f3, f24, f2, rmm # perform operation
fmadd.s f23, f3, f24, f2, rne # perform operation
fmadd.s f23, f3, f24, f2, rtz # perform operation
fmadd.s f23, f3, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xbcfaa8e3c71a54eb # load x3 with value 0xbcfaa8e3c71a54eb
sw x3, 0(x2) # store 0xbcfaa8e3c71a54eb in memory
flw f20, 0(x2) # load 0xbcfaa8e3c71a54eb from memory into f20
fmadd.s f5, f7, f13, f20, dyn # perform operation
fmadd.s f5, f7, f13, f20, rdn # perform operation
fmadd.s f5, f7, f13, f20, rmm # perform operation
fmadd.s f5, f7, f13, f20, rne # perform operation
fmadd.s f5, f7, f13, f20, rtz # perform operation
fmadd.s f5, f7, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xe5476ff1bed2dc96 # load x3 with value 0xe5476ff1bed2dc96
sw x3, 0(x2) # store 0xe5476ff1bed2dc96 in memory
flw f7, 0(x2) # load 0xe5476ff1bed2dc96 from memory into f7
fmadd.s f31, f5, f14, f7, dyn # perform operation
fmadd.s f31, f5, f14, f7, rdn # perform operation
fmadd.s f31, f5, f14, f7, rmm # perform operation
fmadd.s f31, f5, f14, f7, rne # perform operation
fmadd.s f31, f5, f14, f7, rtz # perform operation
fmadd.s f31, f5, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x3a7d5a37308dad31 # load x3 with value 0x3a7d5a37308dad31
sw x3, 0(x2) # store 0x3a7d5a37308dad31 in memory
flw f22, 0(x2) # load 0x3a7d5a37308dad31 from memory into f22
fmadd.s f8, f14, f29, f22, dyn # perform operation
fmadd.s f8, f14, f29, f22, rdn # perform operation
fmadd.s f8, f14, f29, f22, rmm # perform operation
fmadd.s f8, f14, f29, f22, rne # perform operation
fmadd.s f8, f14, f29, f22, rtz # perform operation
fmadd.s f8, f14, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f29, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x29833e65d8aa9cde # load x3 with value 0x29833e65d8aa9cde
sw x3, 0(x2) # store 0x29833e65d8aa9cde in memory
flw f8, 0(x2) # load 0x29833e65d8aa9cde from memory into f8
fmadd.s f15, f23, f21, f8, dyn # perform operation
fmadd.s f15, f23, f21, f8, rdn # perform operation
fmadd.s f15, f23, f21, f8, rmm # perform operation
fmadd.s f15, f23, f21, f8, rne # perform operation
fmadd.s f15, f23, f21, f8, rtz # perform operation
fmadd.s f15, f23, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x7830707f1d4339e # load x3 with value 0x7830707f1d4339e
sw x3, 0(x2) # store 0x7830707f1d4339e in memory
flw f8, 0(x2) # load 0x7830707f1d4339e from memory into f8
fmadd.s f26, f16, f28, f8, dyn # perform operation
fmadd.s f26, f16, f28, f8, rdn # perform operation
fmadd.s f26, f16, f28, f8, rmm # perform operation
fmadd.s f26, f16, f28, f8, rne # perform operation
fmadd.s f26, f16, f28, f8, rtz # perform operation
fmadd.s f26, f16, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f16, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f16, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xea87a77ef44ace1f # load x3 with value 0xea87a77ef44ace1f
sw x3, 0(x2) # store 0xea87a77ef44ace1f in memory
flw f25, 0(x2) # load 0xea87a77ef44ace1f from memory into f25
fmadd.s f18, f17, f19, f25, dyn # perform operation
fmadd.s f18, f17, f19, f25, rdn # perform operation
fmadd.s f18, f17, f19, f25, rmm # perform operation
fmadd.s f18, f17, f19, f25, rne # perform operation
fmadd.s f18, f17, f19, f25, rtz # perform operation
fmadd.s f18, f17, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x80d8db0f77f7cb79 # load x3 with value 0x80d8db0f77f7cb79
sw x3, 0(x2) # store 0x80d8db0f77f7cb79 in memory
flw f5, 0(x2) # load 0x80d8db0f77f7cb79 from memory into f5
fmadd.s f27, f25, f8, f5, dyn # perform operation
fmadd.s f27, f25, f8, f5, rdn # perform operation
fmadd.s f27, f25, f8, f5, rmm # perform operation
fmadd.s f27, f25, f8, f5, rne # perform operation
fmadd.s f27, f25, f8, f5, rtz # perform operation
fmadd.s f27, f25, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x49c99a064c69df8f # load x3 with value 0x49c99a064c69df8f
sw x3, 0(x2) # store 0x49c99a064c69df8f in memory
flw f12, 0(x2) # load 0x49c99a064c69df8f from memory into f12
fmadd.s f26, f11, f27, f12, dyn # perform operation
fmadd.s f26, f11, f27, f12, rdn # perform operation
fmadd.s f26, f11, f27, f12, rmm # perform operation
fmadd.s f26, f11, f27, f12, rne # perform operation
fmadd.s f26, f11, f27, f12, rtz # perform operation
fmadd.s f26, f11, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f11, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f11, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f11, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f11, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f11, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x547f2fccb0d6c854 # load x3 with value 0x547f2fccb0d6c854
sw x3, 0(x2) # store 0x547f2fccb0d6c854 in memory
flw f17, 0(x2) # load 0x547f2fccb0d6c854 from memory into f17
fmadd.s f5, f13, f8, f17, dyn # perform operation
fmadd.s f5, f13, f8, f17, rdn # perform operation
fmadd.s f5, f13, f8, f17, rmm # perform operation
fmadd.s f5, f13, f8, f17, rne # perform operation
fmadd.s f5, f13, f8, f17, rtz # perform operation
fmadd.s f5, f13, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xd0dd4b4f17049afc # load x3 with value 0xd0dd4b4f17049afc
sw x3, 0(x2) # store 0xd0dd4b4f17049afc in memory
flw f11, 0(x2) # load 0xd0dd4b4f17049afc from memory into f11
fmadd.s f20, f29, f25, f11, dyn # perform operation
fmadd.s f20, f29, f25, f11, rdn # perform operation
fmadd.s f20, f29, f25, f11, rmm # perform operation
fmadd.s f20, f29, f25, f11, rne # perform operation
fmadd.s f20, f29, f25, f11, rtz # perform operation
fmadd.s f20, f29, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x25affceaa6ccb209 # load x3 with value 0x25affceaa6ccb209
sw x3, 0(x2) # store 0x25affceaa6ccb209 in memory
flw f13, 0(x2) # load 0x25affceaa6ccb209 from memory into f13
fmadd.s f12, f3, f29, f13, dyn # perform operation
fmadd.s f12, f3, f29, f13, rdn # perform operation
fmadd.s f12, f3, f29, f13, rmm # perform operation
fmadd.s f12, f3, f29, f13, rne # perform operation
fmadd.s f12, f3, f29, f13, rtz # perform operation
fmadd.s f12, f3, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f3, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xce903ce9596456f4 # load x3 with value 0xce903ce9596456f4
sw x3, 0(x2) # store 0xce903ce9596456f4 in memory
flw f17, 0(x2) # load 0xce903ce9596456f4 from memory into f17
fmadd.s f15, f16, f28, f17, dyn # perform operation
fmadd.s f15, f16, f28, f17, rdn # perform operation
fmadd.s f15, f16, f28, f17, rmm # perform operation
fmadd.s f15, f16, f28, f17, rne # perform operation
fmadd.s f15, f16, f28, f17, rtz # perform operation
fmadd.s f15, f16, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xda593418bfec5ab # load x3 with value 0xda593418bfec5ab
sw x3, 0(x2) # store 0xda593418bfec5ab in memory
flw f11, 0(x2) # load 0xda593418bfec5ab from memory into f11
fmadd.s f17, f5, f24, f11, dyn # perform operation
fmadd.s f17, f5, f24, f11, rdn # perform operation
fmadd.s f17, f5, f24, f11, rmm # perform operation
fmadd.s f17, f5, f24, f11, rne # perform operation
fmadd.s f17, f5, f24, f11, rtz # perform operation
fmadd.s f17, f5, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x8dc0b70e63fd0f94 # load x3 with value 0x8dc0b70e63fd0f94
sw x3, 0(x2) # store 0x8dc0b70e63fd0f94 in memory
flw f15, 0(x2) # load 0x8dc0b70e63fd0f94 from memory into f15
fmadd.s f24, f23, f13, f15, dyn # perform operation
fmadd.s f24, f23, f13, f15, rdn # perform operation
fmadd.s f24, f23, f13, f15, rmm # perform operation
fmadd.s f24, f23, f13, f15, rne # perform operation
fmadd.s f24, f23, f13, f15, rtz # perform operation
fmadd.s f24, f23, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xd3b7e2fbe497935e # load x3 with value 0xd3b7e2fbe497935e
sw x3, 0(x2) # store 0xd3b7e2fbe497935e in memory
flw f17, 0(x2) # load 0xd3b7e2fbe497935e from memory into f17
fmadd.s f15, f9, f2, f17, dyn # perform operation
fmadd.s f15, f9, f2, f17, rdn # perform operation
fmadd.s f15, f9, f2, f17, rmm # perform operation
fmadd.s f15, f9, f2, f17, rne # perform operation
fmadd.s f15, f9, f2, f17, rtz # perform operation
fmadd.s f15, f9, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f9, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x86fa023352b81a2c # load x3 with value 0x86fa023352b81a2c
sw x3, 0(x2) # store 0x86fa023352b81a2c in memory
flw f22, 0(x2) # load 0x86fa023352b81a2c from memory into f22
fmadd.s f17, f18, f19, f22, dyn # perform operation
fmadd.s f17, f18, f19, f22, rdn # perform operation
fmadd.s f17, f18, f19, f22, rmm # perform operation
fmadd.s f17, f18, f19, f22, rne # perform operation
fmadd.s f17, f18, f19, f22, rtz # perform operation
fmadd.s f17, f18, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x12050aae3a722685 # load x3 with value 0x12050aae3a722685
sw x3, 0(x2) # store 0x12050aae3a722685 in memory
flw f3, 0(x2) # load 0x12050aae3a722685 from memory into f3
fmadd.s f23, f19, f10, f3, dyn # perform operation
fmadd.s f23, f19, f10, f3, rdn # perform operation
fmadd.s f23, f19, f10, f3, rmm # perform operation
fmadd.s f23, f19, f10, f3, rne # perform operation
fmadd.s f23, f19, f10, f3, rtz # perform operation
fmadd.s f23, f19, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xab904c51f8c5a7e4 # load x3 with value 0xab904c51f8c5a7e4
sw x3, 0(x2) # store 0xab904c51f8c5a7e4 in memory
flw f28, 0(x2) # load 0xab904c51f8c5a7e4 from memory into f28
fmadd.s f15, f29, f1, f28, dyn # perform operation
fmadd.s f15, f29, f1, f28, rdn # perform operation
fmadd.s f15, f29, f1, f28, rmm # perform operation
fmadd.s f15, f29, f1, f28, rne # perform operation
fmadd.s f15, f29, f1, f28, rtz # perform operation
fmadd.s f15, f29, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f29, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f29, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xe4ca4cc619521db2 # load x3 with value 0xe4ca4cc619521db2
sw x3, 0(x2) # store 0xe4ca4cc619521db2 in memory
flw f6, 0(x2) # load 0xe4ca4cc619521db2 from memory into f6
fmadd.s f19, f9, f8, f6, dyn # perform operation
fmadd.s f19, f9, f8, f6, rdn # perform operation
fmadd.s f19, f9, f8, f6, rmm # perform operation
fmadd.s f19, f9, f8, f6, rne # perform operation
fmadd.s f19, f9, f8, f6, rtz # perform operation
fmadd.s f19, f9, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xc9d61699134670b5 # load x3 with value 0xc9d61699134670b5
sw x3, 0(x2) # store 0xc9d61699134670b5 in memory
flw f31, 0(x2) # load 0xc9d61699134670b5 from memory into f31
fmadd.s f14, f8, f28, f31, dyn # perform operation
fmadd.s f14, f8, f28, f31, rdn # perform operation
fmadd.s f14, f8, f28, f31, rmm # perform operation
fmadd.s f14, f8, f28, f31, rne # perform operation
fmadd.s f14, f8, f28, f31, rtz # perform operation
fmadd.s f14, f8, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0xfab1afdfed8bb76d # load x3 with value 0xfab1afdfed8bb76d
sw x3, 0(x2) # store 0xfab1afdfed8bb76d in memory
flw f2, 0(x2) # load 0xfab1afdfed8bb76d from memory into f2
fmadd.s f7, f18, f20, f2, dyn # perform operation
fmadd.s f7, f18, f20, f2, rdn # perform operation
fmadd.s f7, f18, f20, f2, rmm # perform operation
fmadd.s f7, f18, f20, f2, rne # perform operation
fmadd.s f7, f18, f20, f2, rtz # perform operation
fmadd.s f7, f18, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xa4c3c6cd6c4870b # load x3 with value 0xa4c3c6cd6c4870b
sw x3, 0(x2) # store 0xa4c3c6cd6c4870b in memory
flw f27, 0(x2) # load 0xa4c3c6cd6c4870b from memory into f27
fmadd.s f21, f2, f16, f27, dyn # perform operation
fmadd.s f21, f2, f16, f27, rdn # perform operation
fmadd.s f21, f2, f16, f27, rmm # perform operation
fmadd.s f21, f2, f16, f27, rne # perform operation
fmadd.s f21, f2, f16, f27, rtz # perform operation
fmadd.s f21, f2, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xd124c93c7f8fd39a # load x3 with value 0xd124c93c7f8fd39a
sw x3, 0(x2) # store 0xd124c93c7f8fd39a in memory
flw f5, 0(x2) # load 0xd124c93c7f8fd39a from memory into f5
fmadd.s f6, f27, f12, f5, dyn # perform operation
fmadd.s f6, f27, f12, f5, rdn # perform operation
fmadd.s f6, f27, f12, f5, rmm # perform operation
fmadd.s f6, f27, f12, f5, rne # perform operation
fmadd.s f6, f27, f12, f5, rtz # perform operation
fmadd.s f6, f27, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f27, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x1a6eec27dd46ec16 # load x3 with value 0x1a6eec27dd46ec16
sw x3, 0(x2) # store 0x1a6eec27dd46ec16 in memory
flw f15, 0(x2) # load 0x1a6eec27dd46ec16 from memory into f15
fmadd.s f25, f5, f23, f15, dyn # perform operation
fmadd.s f25, f5, f23, f15, rdn # perform operation
fmadd.s f25, f5, f23, f15, rmm # perform operation
fmadd.s f25, f5, f23, f15, rne # perform operation
fmadd.s f25, f5, f23, f15, rtz # perform operation
fmadd.s f25, f5, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xa0d058266f407d34 # load x3 with value 0xa0d058266f407d34
sw x3, 0(x2) # store 0xa0d058266f407d34 in memory
flw f24, 0(x2) # load 0xa0d058266f407d34 from memory into f24
fmadd.s f17, f20, f12, f24, dyn # perform operation
fmadd.s f17, f20, f12, f24, rdn # perform operation
fmadd.s f17, f20, f12, f24, rmm # perform operation
fmadd.s f17, f20, f12, f24, rne # perform operation
fmadd.s f17, f20, f12, f24, rtz # perform operation
fmadd.s f17, f20, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f20, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xd345221189536e9d # load x3 with value 0xd345221189536e9d
sw x3, 0(x2) # store 0xd345221189536e9d in memory
flw f25, 0(x2) # load 0xd345221189536e9d from memory into f25
fmadd.s f16, f26, f6, f25, dyn # perform operation
fmadd.s f16, f26, f6, f25, rdn # perform operation
fmadd.s f16, f26, f6, f25, rmm # perform operation
fmadd.s f16, f26, f6, f25, rne # perform operation
fmadd.s f16, f26, f6, f25, rtz # perform operation
fmadd.s f16, f26, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xe6958ef38d0fdb89 # load x3 with value 0xe6958ef38d0fdb89
sw x3, 0(x2) # store 0xe6958ef38d0fdb89 in memory
flw f16, 0(x2) # load 0xe6958ef38d0fdb89 from memory into f16
fmadd.s f1, f22, f21, f16, dyn # perform operation
fmadd.s f1, f22, f21, f16, rdn # perform operation
fmadd.s f1, f22, f21, f16, rmm # perform operation
fmadd.s f1, f22, f21, f16, rne # perform operation
fmadd.s f1, f22, f21, f16, rtz # perform operation
fmadd.s f1, f22, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f22, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f22, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xfcf381d2e12ec098 # load x3 with value 0xfcf381d2e12ec098
sw x3, 0(x2) # store 0xfcf381d2e12ec098 in memory
flw f6, 0(x2) # load 0xfcf381d2e12ec098 from memory into f6
fmadd.s f13, f16, f27, f6, dyn # perform operation
fmadd.s f13, f16, f27, f6, rdn # perform operation
fmadd.s f13, f16, f27, f6, rmm # perform operation
fmadd.s f13, f16, f27, f6, rne # perform operation
fmadd.s f13, f16, f27, f6, rtz # perform operation
fmadd.s f13, f16, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x15ec36e01ab53f43 # load x3 with value 0x15ec36e01ab53f43
sw x3, 0(x2) # store 0x15ec36e01ab53f43 in memory
flw f10, 0(x2) # load 0x15ec36e01ab53f43 from memory into f10
fmadd.s f15, f26, f6, f10, dyn # perform operation
fmadd.s f15, f26, f6, f10, rdn # perform operation
fmadd.s f15, f26, f6, f10, rmm # perform operation
fmadd.s f15, f26, f6, f10, rne # perform operation
fmadd.s f15, f26, f6, f10, rtz # perform operation
fmadd.s f15, f26, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x998fb1e3bcc684c5 # load x3 with value 0x998fb1e3bcc684c5
sw x3, 0(x2) # store 0x998fb1e3bcc684c5 in memory
flw f24, 0(x2) # load 0x998fb1e3bcc684c5 from memory into f24
fmadd.s f27, f21, f9, f24, dyn # perform operation
fmadd.s f27, f21, f9, f24, rdn # perform operation
fmadd.s f27, f21, f9, f24, rmm # perform operation
fmadd.s f27, f21, f9, f24, rne # perform operation
fmadd.s f27, f21, f9, f24, rtz # perform operation
fmadd.s f27, f21, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f21, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f21, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x480ab5b6f6efdc52 # load x3 with value 0x480ab5b6f6efdc52
sw x3, 0(x2) # store 0x480ab5b6f6efdc52 in memory
flw f26, 0(x2) # load 0x480ab5b6f6efdc52 from memory into f26
fmadd.s f5, f2, f8, f26, dyn # perform operation
fmadd.s f5, f2, f8, f26, rdn # perform operation
fmadd.s f5, f2, f8, f26, rmm # perform operation
fmadd.s f5, f2, f8, f26, rne # perform operation
fmadd.s f5, f2, f8, f26, rtz # perform operation
fmadd.s f5, f2, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xadbdd8495998b20d # load x3 with value 0xadbdd8495998b20d
sw x3, 0(x2) # store 0xadbdd8495998b20d in memory
flw f12, 0(x2) # load 0xadbdd8495998b20d from memory into f12
fmadd.s f31, f26, f29, f12, dyn # perform operation
fmadd.s f31, f26, f29, f12, rdn # perform operation
fmadd.s f31, f26, f29, f12, rmm # perform operation
fmadd.s f31, f26, f29, f12, rne # perform operation
fmadd.s f31, f26, f29, f12, rtz # perform operation
fmadd.s f31, f26, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f26, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xa4723e9e04255861 # load x3 with value 0xa4723e9e04255861
sw x3, 0(x2) # store 0xa4723e9e04255861 in memory
flw f18, 0(x2) # load 0xa4723e9e04255861 from memory into f18
fmadd.s f3, f6, f11, f18, dyn # perform operation
fmadd.s f3, f6, f11, f18, rdn # perform operation
fmadd.s f3, f6, f11, f18, rmm # perform operation
fmadd.s f3, f6, f11, f18, rne # perform operation
fmadd.s f3, f6, f11, f18, rtz # perform operation
fmadd.s f3, f6, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x43be4c8db86a75a9 # load x3 with value 0x43be4c8db86a75a9
sw x3, 0(x2) # store 0x43be4c8db86a75a9 in memory
flw f30, 0(x2) # load 0x43be4c8db86a75a9 from memory into f30
fmadd.s f2, f6, f13, f30, dyn # perform operation
fmadd.s f2, f6, f13, f30, rdn # perform operation
fmadd.s f2, f6, f13, f30, rmm # perform operation
fmadd.s f2, f6, f13, f30, rne # perform operation
fmadd.s f2, f6, f13, f30, rtz # perform operation
fmadd.s f2, f6, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f6, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f6, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x29c89df67bf2bf3d # load x3 with value 0x29c89df67bf2bf3d
sw x3, 0(x2) # store 0x29c89df67bf2bf3d in memory
flw f3, 0(x2) # load 0x29c89df67bf2bf3d from memory into f3
fmadd.s f18, f25, f28, f3, dyn # perform operation
fmadd.s f18, f25, f28, f3, rdn # perform operation
fmadd.s f18, f25, f28, f3, rmm # perform operation
fmadd.s f18, f25, f28, f3, rne # perform operation
fmadd.s f18, f25, f28, f3, rtz # perform operation
fmadd.s f18, f25, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0xf5215e7c603cd1a # load x3 with value 0xf5215e7c603cd1a
sw x3, 0(x2) # store 0xf5215e7c603cd1a in memory
flw f15, 0(x2) # load 0xf5215e7c603cd1a from memory into f15
fmadd.s f20, f25, f26, f15, dyn # perform operation
fmadd.s f20, f25, f26, f15, rdn # perform operation
fmadd.s f20, f25, f26, f15, rmm # perform operation
fmadd.s f20, f25, f26, f15, rne # perform operation
fmadd.s f20, f25, f26, f15, rtz # perform operation
fmadd.s f20, f25, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7d0dcc9bb63e672a # load x3 with value 0x7d0dcc9bb63e672a
sw x3, 0(x2) # store 0x7d0dcc9bb63e672a in memory
flw f23, 0(x2) # load 0x7d0dcc9bb63e672a from memory into f23
fmadd.s f25, f15, f2, f23, dyn # perform operation
fmadd.s f25, f15, f2, f23, rdn # perform operation
fmadd.s f25, f15, f2, f23, rmm # perform operation
fmadd.s f25, f15, f2, f23, rne # perform operation
fmadd.s f25, f15, f2, f23, rtz # perform operation
fmadd.s f25, f15, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x92b064b52c250c0f # load x3 with value 0x92b064b52c250c0f
sw x3, 0(x2) # store 0x92b064b52c250c0f in memory
flw f29, 0(x2) # load 0x92b064b52c250c0f from memory into f29
fmadd.s f21, f1, f23, f29, dyn # perform operation
fmadd.s f21, f1, f23, f29, rdn # perform operation
fmadd.s f21, f1, f23, f29, rmm # perform operation
fmadd.s f21, f1, f23, f29, rne # perform operation
fmadd.s f21, f1, f23, f29, rtz # perform operation
fmadd.s f21, f1, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xd3161823503a699f # load x3 with value 0xd3161823503a699f
sw x3, 0(x2) # store 0xd3161823503a699f in memory
flw f1, 0(x2) # load 0xd3161823503a699f from memory into f1
fmadd.s f26, f18, f13, f1, dyn # perform operation
fmadd.s f26, f18, f13, f1, rdn # perform operation
fmadd.s f26, f18, f13, f1, rmm # perform operation
fmadd.s f26, f18, f13, f1, rne # perform operation
fmadd.s f26, f18, f13, f1, rtz # perform operation
fmadd.s f26, f18, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f18, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f18, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x575b839c69528b7c # load x3 with value 0x575b839c69528b7c
sw x3, 0(x2) # store 0x575b839c69528b7c in memory
flw f9, 0(x2) # load 0x575b839c69528b7c from memory into f9
fmadd.s f13, f26, f24, f9, dyn # perform operation
fmadd.s f13, f26, f24, f9, rdn # perform operation
fmadd.s f13, f26, f24, f9, rmm # perform operation
fmadd.s f13, f26, f24, f9, rne # perform operation
fmadd.s f13, f26, f24, f9, rtz # perform operation
fmadd.s f13, f26, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x2ee8dd9d6f8d7c4f # load x3 with value 0x2ee8dd9d6f8d7c4f
sw x3, 0(x2) # store 0x2ee8dd9d6f8d7c4f in memory
flw f31, 0(x2) # load 0x2ee8dd9d6f8d7c4f from memory into f31
fmadd.s f5, f25, f7, f31, dyn # perform operation
fmadd.s f5, f25, f7, f31, rdn # perform operation
fmadd.s f5, f25, f7, f31, rmm # perform operation
fmadd.s f5, f25, f7, f31, rne # perform operation
fmadd.s f5, f25, f7, f31, rtz # perform operation
fmadd.s f5, f25, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xef557f9f2263c1b0 # load x3 with value 0xef557f9f2263c1b0
sw x3, 0(x2) # store 0xef557f9f2263c1b0 in memory
flw f5, 0(x2) # load 0xef557f9f2263c1b0 from memory into f5
fmadd.s f13, f1, f19, f5, dyn # perform operation
fmadd.s f13, f1, f19, f5, rdn # perform operation
fmadd.s f13, f1, f19, f5, rmm # perform operation
fmadd.s f13, f1, f19, f5, rne # perform operation
fmadd.s f13, f1, f19, f5, rtz # perform operation
fmadd.s f13, f1, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f1, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f1, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x8179a1c105643033 # load x3 with value 0x8179a1c105643033
sw x3, 0(x2) # store 0x8179a1c105643033 in memory
flw f6, 0(x2) # load 0x8179a1c105643033 from memory into f6
fmadd.s f3, f16, f10, f6, dyn # perform operation
fmadd.s f3, f16, f10, f6, rdn # perform operation
fmadd.s f3, f16, f10, f6, rmm # perform operation
fmadd.s f3, f16, f10, f6, rne # perform operation
fmadd.s f3, f16, f10, f6, rtz # perform operation
fmadd.s f3, f16, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x799258f0d65a701c # load x3 with value 0x799258f0d65a701c
sw x3, 0(x2) # store 0x799258f0d65a701c in memory
flw f2, 0(x2) # load 0x799258f0d65a701c from memory into f2
fmadd.s f31, f9, f16, f2, dyn # perform operation
fmadd.s f31, f9, f16, f2, rdn # perform operation
fmadd.s f31, f9, f16, f2, rmm # perform operation
fmadd.s f31, f9, f16, f2, rne # perform operation
fmadd.s f31, f9, f16, f2, rtz # perform operation
fmadd.s f31, f9, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0xe97743ec76b7d152 # load x3 with value 0xe97743ec76b7d152
sw x3, 0(x2) # store 0xe97743ec76b7d152 in memory
flw f22, 0(x2) # load 0xe97743ec76b7d152 from memory into f22
fmadd.s f5, f2, f27, f22, dyn # perform operation
fmadd.s f5, f2, f27, f22, rdn # perform operation
fmadd.s f5, f2, f27, f22, rmm # perform operation
fmadd.s f5, f2, f27, f22, rne # perform operation
fmadd.s f5, f2, f27, f22, rtz # perform operation
fmadd.s f5, f2, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xbdc2dcbf88724c81 # load x3 with value 0xbdc2dcbf88724c81
sw x3, 0(x2) # store 0xbdc2dcbf88724c81 in memory
flw f25, 0(x2) # load 0xbdc2dcbf88724c81 from memory into f25
fmadd.s f31, f23, f15, f25, dyn # perform operation
fmadd.s f31, f23, f15, f25, rdn # perform operation
fmadd.s f31, f23, f15, f25, rmm # perform operation
fmadd.s f31, f23, f15, f25, rne # perform operation
fmadd.s f31, f23, f15, f25, rtz # perform operation
fmadd.s f31, f23, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x9d687666b61a3c7a # load x3 with value 0x9d687666b61a3c7a
sw x3, 0(x2) # store 0x9d687666b61a3c7a in memory
flw f22, 0(x2) # load 0x9d687666b61a3c7a from memory into f22
fmadd.s f27, f6, f16, f22, dyn # perform operation
fmadd.s f27, f6, f16, f22, rdn # perform operation
fmadd.s f27, f6, f16, f22, rmm # perform operation
fmadd.s f27, f6, f16, f22, rne # perform operation
fmadd.s f27, f6, f16, f22, rtz # perform operation
fmadd.s f27, f6, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f6, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f6, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f6, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f6, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f6, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xaca8cc14b5993dc6 # load x3 with value 0xaca8cc14b5993dc6
sw x3, 0(x2) # store 0xaca8cc14b5993dc6 in memory
flw f17, 0(x2) # load 0xaca8cc14b5993dc6 from memory into f17
fmadd.s f25, f16, f7, f17, dyn # perform operation
fmadd.s f25, f16, f7, f17, rdn # perform operation
fmadd.s f25, f16, f7, f17, rmm # perform operation
fmadd.s f25, f16, f7, f17, rne # perform operation
fmadd.s f25, f16, f7, f17, rtz # perform operation
fmadd.s f25, f16, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f16, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f16, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x958de169b0ac4c4c # load x3 with value 0x958de169b0ac4c4c
sw x3, 0(x2) # store 0x958de169b0ac4c4c in memory
flw f8, 0(x2) # load 0x958de169b0ac4c4c from memory into f8
fmadd.s f25, f6, f19, f8, dyn # perform operation
fmadd.s f25, f6, f19, f8, rdn # perform operation
fmadd.s f25, f6, f19, f8, rmm # perform operation
fmadd.s f25, f6, f19, f8, rne # perform operation
fmadd.s f25, f6, f19, f8, rtz # perform operation
fmadd.s f25, f6, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xad5c1d0e0fe95dac # load x3 with value 0xad5c1d0e0fe95dac
sw x3, 0(x2) # store 0xad5c1d0e0fe95dac in memory
flw f20, 0(x2) # load 0xad5c1d0e0fe95dac from memory into f20
fmadd.s f13, f8, f5, f20, dyn # perform operation
fmadd.s f13, f8, f5, f20, rdn # perform operation
fmadd.s f13, f8, f5, f20, rmm # perform operation
fmadd.s f13, f8, f5, f20, rne # perform operation
fmadd.s f13, f8, f5, f20, rtz # perform operation
fmadd.s f13, f8, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xea29adf2bc7b062c # load x3 with value 0xea29adf2bc7b062c
sw x3, 0(x2) # store 0xea29adf2bc7b062c in memory
flw f12, 0(x2) # load 0xea29adf2bc7b062c from memory into f12
fmadd.s f20, f13, f22, f12, dyn # perform operation
fmadd.s f20, f13, f22, f12, rdn # perform operation
fmadd.s f20, f13, f22, f12, rmm # perform operation
fmadd.s f20, f13, f22, f12, rne # perform operation
fmadd.s f20, f13, f22, f12, rtz # perform operation
fmadd.s f20, f13, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f13, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f13, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x6c2ad49c76614d2e # load x3 with value 0x6c2ad49c76614d2e
sw x3, 0(x2) # store 0x6c2ad49c76614d2e in memory
flw f16, 0(x2) # load 0x6c2ad49c76614d2e from memory into f16
fmadd.s f20, f25, f11, f16, dyn # perform operation
fmadd.s f20, f25, f11, f16, rdn # perform operation
fmadd.s f20, f25, f11, f16, rmm # perform operation
fmadd.s f20, f25, f11, f16, rne # perform operation
fmadd.s f20, f25, f11, f16, rtz # perform operation
fmadd.s f20, f25, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xcd0c22f1ff6f83d7 # load x3 with value 0xcd0c22f1ff6f83d7
sw x3, 0(x2) # store 0xcd0c22f1ff6f83d7 in memory
flw f27, 0(x2) # load 0xcd0c22f1ff6f83d7 from memory into f27
fmadd.s f31, f20, f1, f27, dyn # perform operation
fmadd.s f31, f20, f1, f27, rdn # perform operation
fmadd.s f31, f20, f1, f27, rmm # perform operation
fmadd.s f31, f20, f1, f27, rne # perform operation
fmadd.s f31, f20, f1, f27, rtz # perform operation
fmadd.s f31, f20, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xac7463ed3b30c368 # load x3 with value 0xac7463ed3b30c368
sw x3, 0(x2) # store 0xac7463ed3b30c368 in memory
flw f16, 0(x2) # load 0xac7463ed3b30c368 from memory into f16
fmadd.s f7, f8, f19, f16, dyn # perform operation
fmadd.s f7, f8, f19, f16, rdn # perform operation
fmadd.s f7, f8, f19, f16, rmm # perform operation
fmadd.s f7, f8, f19, f16, rne # perform operation
fmadd.s f7, f8, f19, f16, rtz # perform operation
fmadd.s f7, f8, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xc89dbbce7b41c56c # load x3 with value 0xc89dbbce7b41c56c
sw x3, 0(x2) # store 0xc89dbbce7b41c56c in memory
flw f27, 0(x2) # load 0xc89dbbce7b41c56c from memory into f27
fmadd.s f5, f20, f12, f27, dyn # perform operation
fmadd.s f5, f20, f12, f27, rdn # perform operation
fmadd.s f5, f20, f12, f27, rmm # perform operation
fmadd.s f5, f20, f12, f27, rne # perform operation
fmadd.s f5, f20, f12, f27, rtz # perform operation
fmadd.s f5, f20, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0xf2575a01aa6e720d # load x3 with value 0xf2575a01aa6e720d
sw x3, 0(x2) # store 0xf2575a01aa6e720d in memory
flw f1, 0(x2) # load 0xf2575a01aa6e720d from memory into f1
fmadd.s f2, f29, f10, f1, dyn # perform operation
fmadd.s f2, f29, f10, f1, rdn # perform operation
fmadd.s f2, f29, f10, f1, rmm # perform operation
fmadd.s f2, f29, f10, f1, rne # perform operation
fmadd.s f2, f29, f10, f1, rtz # perform operation
fmadd.s f2, f29, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x1702a6d4d86729e8 # load x3 with value 0x1702a6d4d86729e8
sw x3, 0(x2) # store 0x1702a6d4d86729e8 in memory
flw f6, 0(x2) # load 0x1702a6d4d86729e8 from memory into f6
fmadd.s f26, f7, f2, f6, dyn # perform operation
fmadd.s f26, f7, f2, f6, rdn # perform operation
fmadd.s f26, f7, f2, f6, rmm # perform operation
fmadd.s f26, f7, f2, f6, rne # perform operation
fmadd.s f26, f7, f2, f6, rtz # perform operation
fmadd.s f26, f7, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f7, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x2fbc2e5325d9248d # load x3 with value 0x2fbc2e5325d9248d
sw x3, 0(x2) # store 0x2fbc2e5325d9248d in memory
flw f12, 0(x2) # load 0x2fbc2e5325d9248d from memory into f12
fmadd.s f27, f10, f19, f12, dyn # perform operation
fmadd.s f27, f10, f19, f12, rdn # perform operation
fmadd.s f27, f10, f19, f12, rmm # perform operation
fmadd.s f27, f10, f19, f12, rne # perform operation
fmadd.s f27, f10, f19, f12, rtz # perform operation
fmadd.s f27, f10, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x2c3d33221dc387e6 # load x3 with value 0x2c3d33221dc387e6
sw x3, 0(x2) # store 0x2c3d33221dc387e6 in memory
flw f30, 0(x2) # load 0x2c3d33221dc387e6 from memory into f30
fmadd.s f23, f17, f31, f30, dyn # perform operation
fmadd.s f23, f17, f31, f30, rdn # perform operation
fmadd.s f23, f17, f31, f30, rmm # perform operation
fmadd.s f23, f17, f31, f30, rne # perform operation
fmadd.s f23, f17, f31, f30, rtz # perform operation
fmadd.s f23, f17, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xaee8cac5563c9a73 # load x3 with value 0xaee8cac5563c9a73
sw x3, 0(x2) # store 0xaee8cac5563c9a73 in memory
flw f1, 0(x2) # load 0xaee8cac5563c9a73 from memory into f1
fmadd.s f12, f30, f21, f1, dyn # perform operation
fmadd.s f12, f30, f21, f1, rdn # perform operation
fmadd.s f12, f30, f21, f1, rmm # perform operation
fmadd.s f12, f30, f21, f1, rne # perform operation
fmadd.s f12, f30, f21, f1, rtz # perform operation
fmadd.s f12, f30, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f30, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f30, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x8888abec71386c51 # load x3 with value 0x8888abec71386c51
sw x3, 0(x2) # store 0x8888abec71386c51 in memory
flw f27, 0(x2) # load 0x8888abec71386c51 from memory into f27
fmadd.s f8, f19, f22, f27, dyn # perform operation
fmadd.s f8, f19, f22, f27, rdn # perform operation
fmadd.s f8, f19, f22, f27, rmm # perform operation
fmadd.s f8, f19, f22, f27, rne # perform operation
fmadd.s f8, f19, f22, f27, rtz # perform operation
fmadd.s f8, f19, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0xc6b0fed0e5a81a51 # load x3 with value 0xc6b0fed0e5a81a51
sw x3, 0(x2) # store 0xc6b0fed0e5a81a51 in memory
flw f30, 0(x2) # load 0xc6b0fed0e5a81a51 from memory into f30
fmadd.s f17, f14, f12, f30, dyn # perform operation
fmadd.s f17, f14, f12, f30, rdn # perform operation
fmadd.s f17, f14, f12, f30, rmm # perform operation
fmadd.s f17, f14, f12, f30, rne # perform operation
fmadd.s f17, f14, f12, f30, rtz # perform operation
fmadd.s f17, f14, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x45807a0ea13fbd75 # load x3 with value 0x45807a0ea13fbd75
sw x3, 0(x2) # store 0x45807a0ea13fbd75 in memory
flw f16, 0(x2) # load 0x45807a0ea13fbd75 from memory into f16
fmadd.s f9, f2, f11, f16, dyn # perform operation
fmadd.s f9, f2, f11, f16, rdn # perform operation
fmadd.s f9, f2, f11, f16, rmm # perform operation
fmadd.s f9, f2, f11, f16, rne # perform operation
fmadd.s f9, f2, f11, f16, rtz # perform operation
fmadd.s f9, f2, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xe01e0b48bad279ec # load x3 with value 0xe01e0b48bad279ec
sw x3, 0(x2) # store 0xe01e0b48bad279ec in memory
flw f22, 0(x2) # load 0xe01e0b48bad279ec from memory into f22
fmadd.s f13, f2, f1, f22, dyn # perform operation
fmadd.s f13, f2, f1, f22, rdn # perform operation
fmadd.s f13, f2, f1, f22, rmm # perform operation
fmadd.s f13, f2, f1, f22, rne # perform operation
fmadd.s f13, f2, f1, f22, rtz # perform operation
fmadd.s f13, f2, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x4fa3f3696a39a14a # load x3 with value 0x4fa3f3696a39a14a
sw x3, 0(x2) # store 0x4fa3f3696a39a14a in memory
flw f1, 0(x2) # load 0x4fa3f3696a39a14a from memory into f1
fmadd.s f5, f30, f25, f1, dyn # perform operation
fmadd.s f5, f30, f25, f1, rdn # perform operation
fmadd.s f5, f30, f25, f1, rmm # perform operation
fmadd.s f5, f30, f25, f1, rne # perform operation
fmadd.s f5, f30, f25, f1, rtz # perform operation
fmadd.s f5, f30, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f30, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f30, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x8bdb3867d0ccdc55 # load x3 with value 0x8bdb3867d0ccdc55
sw x3, 0(x2) # store 0x8bdb3867d0ccdc55 in memory
flw f5, 0(x2) # load 0x8bdb3867d0ccdc55 from memory into f5
fmadd.s f17, f30, f19, f5, dyn # perform operation
fmadd.s f17, f30, f19, f5, rdn # perform operation
fmadd.s f17, f30, f19, f5, rmm # perform operation
fmadd.s f17, f30, f19, f5, rne # perform operation
fmadd.s f17, f30, f19, f5, rtz # perform operation
fmadd.s f17, f30, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x872d7f49d9881124 # load x3 with value 0x872d7f49d9881124
sw x3, 0(x2) # store 0x872d7f49d9881124 in memory
flw f22, 0(x2) # load 0x872d7f49d9881124 from memory into f22
fmadd.s f20, f1, f21, f22, dyn # perform operation
fmadd.s f20, f1, f21, f22, rdn # perform operation
fmadd.s f20, f1, f21, f22, rmm # perform operation
fmadd.s f20, f1, f21, f22, rne # perform operation
fmadd.s f20, f1, f21, f22, rtz # perform operation
fmadd.s f20, f1, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x4ba10a3d131c8424 # load x3 with value 0x4ba10a3d131c8424
sw x3, 0(x2) # store 0x4ba10a3d131c8424 in memory
flw f14, 0(x2) # load 0x4ba10a3d131c8424 from memory into f14
fmadd.s f6, f9, f20, f14, dyn # perform operation
fmadd.s f6, f9, f20, f14, rdn # perform operation
fmadd.s f6, f9, f20, f14, rmm # perform operation
fmadd.s f6, f9, f20, f14, rne # perform operation
fmadd.s f6, f9, f20, f14, rtz # perform operation
fmadd.s f6, f9, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f9, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f9, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x6104239c9308e21d # load x3 with value 0x6104239c9308e21d
sw x3, 0(x2) # store 0x6104239c9308e21d in memory
flw f17, 0(x2) # load 0x6104239c9308e21d from memory into f17
fmadd.s f7, f10, f3, f17, dyn # perform operation
fmadd.s f7, f10, f3, f17, rdn # perform operation
fmadd.s f7, f10, f3, f17, rmm # perform operation
fmadd.s f7, f10, f3, f17, rne # perform operation
fmadd.s f7, f10, f3, f17, rtz # perform operation
fmadd.s f7, f10, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xadd618dad5731295 # load x3 with value 0xadd618dad5731295
sw x3, 0(x2) # store 0xadd618dad5731295 in memory
flw f16, 0(x2) # load 0xadd618dad5731295 from memory into f16
fmadd.s f14, f11, f10, f16, dyn # perform operation
fmadd.s f14, f11, f10, f16, rdn # perform operation
fmadd.s f14, f11, f10, f16, rmm # perform operation
fmadd.s f14, f11, f10, f16, rne # perform operation
fmadd.s f14, f11, f10, f16, rtz # perform operation
fmadd.s f14, f11, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x7bd9543e2d32c19a # load x3 with value 0x7bd9543e2d32c19a
sw x3, 0(x2) # store 0x7bd9543e2d32c19a in memory
flw f20, 0(x2) # load 0x7bd9543e2d32c19a from memory into f20
fmadd.s f23, f2, f13, f20, dyn # perform operation
fmadd.s f23, f2, f13, f20, rdn # perform operation
fmadd.s f23, f2, f13, f20, rmm # perform operation
fmadd.s f23, f2, f13, f20, rne # perform operation
fmadd.s f23, f2, f13, f20, rtz # perform operation
fmadd.s f23, f2, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f2, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f2, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x31815bbe9895a9ac # load x3 with value 0x31815bbe9895a9ac
sw x3, 0(x2) # store 0x31815bbe9895a9ac in memory
flw f30, 0(x2) # load 0x31815bbe9895a9ac from memory into f30
fmadd.s f29, f17, f26, f30, dyn # perform operation
fmadd.s f29, f17, f26, f30, rdn # perform operation
fmadd.s f29, f17, f26, f30, rmm # perform operation
fmadd.s f29, f17, f26, f30, rne # perform operation
fmadd.s f29, f17, f26, f30, rtz # perform operation
fmadd.s f29, f17, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x977fe74ab28ab39a # load x3 with value 0x977fe74ab28ab39a
sw x3, 0(x2) # store 0x977fe74ab28ab39a in memory
flw f23, 0(x2) # load 0x977fe74ab28ab39a from memory into f23
fmadd.s f5, f8, f13, f23, dyn # perform operation
fmadd.s f5, f8, f13, f23, rdn # perform operation
fmadd.s f5, f8, f13, f23, rmm # perform operation
fmadd.s f5, f8, f13, f23, rne # perform operation
fmadd.s f5, f8, f13, f23, rtz # perform operation
fmadd.s f5, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f8, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x2c5d4d73845b6a6b # load x3 with value 0x2c5d4d73845b6a6b
sw x3, 0(x2) # store 0x2c5d4d73845b6a6b in memory
flw f24, 0(x2) # load 0x2c5d4d73845b6a6b from memory into f24
fmadd.s f15, f14, f17, f24, dyn # perform operation
fmadd.s f15, f14, f17, f24, rdn # perform operation
fmadd.s f15, f14, f17, f24, rmm # perform operation
fmadd.s f15, f14, f17, f24, rne # perform operation
fmadd.s f15, f14, f17, f24, rtz # perform operation
fmadd.s f15, f14, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x4ab7468834008374 # load x3 with value 0x4ab7468834008374
sw x3, 0(x2) # store 0x4ab7468834008374 in memory
flw f9, 0(x2) # load 0x4ab7468834008374 from memory into f9
fmadd.s f7, f6, f2, f9, dyn # perform operation
fmadd.s f7, f6, f2, f9, rdn # perform operation
fmadd.s f7, f6, f2, f9, rmm # perform operation
fmadd.s f7, f6, f2, f9, rne # perform operation
fmadd.s f7, f6, f2, f9, rtz # perform operation
fmadd.s f7, f6, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f6, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f6, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0xf6e0bc18abe375fb # load x3 with value 0xf6e0bc18abe375fb
sw x3, 0(x2) # store 0xf6e0bc18abe375fb in memory
flw f31, 0(x2) # load 0xf6e0bc18abe375fb from memory into f31
fmadd.s f27, f21, f30, f31, dyn # perform operation
fmadd.s f27, f21, f30, f31, rdn # perform operation
fmadd.s f27, f21, f30, f31, rmm # perform operation
fmadd.s f27, f21, f30, f31, rne # perform operation
fmadd.s f27, f21, f30, f31, rtz # perform operation
fmadd.s f27, f21, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f21, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f21, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xf64dee6209ba08d3 # load x3 with value 0xf64dee6209ba08d3
sw x3, 0(x2) # store 0xf64dee6209ba08d3 in memory
flw f20, 0(x2) # load 0xf64dee6209ba08d3 from memory into f20
fmadd.s f17, f30, f24, f20, dyn # perform operation
fmadd.s f17, f30, f24, f20, rdn # perform operation
fmadd.s f17, f30, f24, f20, rmm # perform operation
fmadd.s f17, f30, f24, f20, rne # perform operation
fmadd.s f17, f30, f24, f20, rtz # perform operation
fmadd.s f17, f30, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f24, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xe0647c3508b2bfab # load x3 with value 0xe0647c3508b2bfab
sw x3, 0(x2) # store 0xe0647c3508b2bfab in memory
flw f2, 0(x2) # load 0xe0647c3508b2bfab from memory into f2
fmadd.s f11, f5, f23, f2, dyn # perform operation
fmadd.s f11, f5, f23, f2, rdn # perform operation
fmadd.s f11, f5, f23, f2, rmm # perform operation
fmadd.s f11, f5, f23, f2, rne # perform operation
fmadd.s f11, f5, f23, f2, rtz # perform operation
fmadd.s f11, f5, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f5, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f5, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x6b3e44401ee0d184 # load x3 with value 0x6b3e44401ee0d184
sw x3, 0(x2) # store 0x6b3e44401ee0d184 in memory
flw f23, 0(x2) # load 0x6b3e44401ee0d184 from memory into f23
fmadd.s f24, f20, f31, f23, dyn # perform operation
fmadd.s f24, f20, f31, f23, rdn # perform operation
fmadd.s f24, f20, f31, f23, rmm # perform operation
fmadd.s f24, f20, f31, f23, rne # perform operation
fmadd.s f24, f20, f31, f23, rtz # perform operation
fmadd.s f24, f20, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x8d51055126c84255 # load x3 with value 0x8d51055126c84255
sw x3, 0(x2) # store 0x8d51055126c84255 in memory
flw f19, 0(x2) # load 0x8d51055126c84255 from memory into f19
fmadd.s f5, f22, f7, f19, dyn # perform operation
fmadd.s f5, f22, f7, f19, rdn # perform operation
fmadd.s f5, f22, f7, f19, rmm # perform operation
fmadd.s f5, f22, f7, f19, rne # perform operation
fmadd.s f5, f22, f7, f19, rtz # perform operation
fmadd.s f5, f22, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x7891602c4e4c8e67 # load x3 with value 0x7891602c4e4c8e67
sw x3, 0(x2) # store 0x7891602c4e4c8e67 in memory
flw f27, 0(x2) # load 0x7891602c4e4c8e67 from memory into f27
fmadd.s f21, f19, f3, f27, dyn # perform operation
fmadd.s f21, f19, f3, f27, rdn # perform operation
fmadd.s f21, f19, f3, f27, rmm # perform operation
fmadd.s f21, f19, f3, f27, rne # perform operation
fmadd.s f21, f19, f3, f27, rtz # perform operation
fmadd.s f21, f19, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f19, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f19, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x64e4873beba40bc9 # load x3 with value 0x64e4873beba40bc9
sw x3, 0(x2) # store 0x64e4873beba40bc9 in memory
flw f29, 0(x2) # load 0x64e4873beba40bc9 from memory into f29
fmadd.s f13, f23, f10, f29, dyn # perform operation
fmadd.s f13, f23, f10, f29, rdn # perform operation
fmadd.s f13, f23, f10, f29, rmm # perform operation
fmadd.s f13, f23, f10, f29, rne # perform operation
fmadd.s f13, f23, f10, f29, rtz # perform operation
fmadd.s f13, f23, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f23, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x17a41146c36f42be # load x3 with value 0x17a41146c36f42be
sw x3, 0(x2) # store 0x17a41146c36f42be in memory
flw f23, 0(x2) # load 0x17a41146c36f42be from memory into f23
fmadd.s f10, f17, f14, f23, dyn # perform operation
fmadd.s f10, f17, f14, f23, rdn # perform operation
fmadd.s f10, f17, f14, f23, rmm # perform operation
fmadd.s f10, f17, f14, f23, rne # perform operation
fmadd.s f10, f17, f14, f23, rtz # perform operation
fmadd.s f10, f17, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x66da30bdd78cfaa5 # load x3 with value 0x66da30bdd78cfaa5
sw x3, 0(x2) # store 0x66da30bdd78cfaa5 in memory
flw f7, 0(x2) # load 0x66da30bdd78cfaa5 from memory into f7
fmadd.s f22, f6, f28, f7, dyn # perform operation
fmadd.s f22, f6, f28, f7, rdn # perform operation
fmadd.s f22, f6, f28, f7, rmm # perform operation
fmadd.s f22, f6, f28, f7, rne # perform operation
fmadd.s f22, f6, f28, f7, rtz # perform operation
fmadd.s f22, f6, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xd61f3f0797aff3f0 # load x3 with value 0xd61f3f0797aff3f0
sw x3, 0(x2) # store 0xd61f3f0797aff3f0 in memory
flw f23, 0(x2) # load 0xd61f3f0797aff3f0 from memory into f23
fmadd.s f26, f10, f31, f23, dyn # perform operation
fmadd.s f26, f10, f31, f23, rdn # perform operation
fmadd.s f26, f10, f31, f23, rmm # perform operation
fmadd.s f26, f10, f31, f23, rne # perform operation
fmadd.s f26, f10, f31, f23, rtz # perform operation
fmadd.s f26, f10, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f10, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f10, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xb33c9fabcd78208e # load x3 with value 0xb33c9fabcd78208e
sw x3, 0(x2) # store 0xb33c9fabcd78208e in memory
flw f24, 0(x2) # load 0xb33c9fabcd78208e from memory into f24
fmadd.s f21, f13, f11, f24, dyn # perform operation
fmadd.s f21, f13, f11, f24, rdn # perform operation
fmadd.s f21, f13, f11, f24, rmm # perform operation
fmadd.s f21, f13, f11, f24, rne # perform operation
fmadd.s f21, f13, f11, f24, rtz # perform operation
fmadd.s f21, f13, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x6f4821de44b7f5ae # load x3 with value 0x6f4821de44b7f5ae
sw x3, 0(x2) # store 0x6f4821de44b7f5ae in memory
flw f12, 0(x2) # load 0x6f4821de44b7f5ae from memory into f12
fmadd.s f14, f8, f22, f12, dyn # perform operation
fmadd.s f14, f8, f22, f12, rdn # perform operation
fmadd.s f14, f8, f22, f12, rmm # perform operation
fmadd.s f14, f8, f22, f12, rne # perform operation
fmadd.s f14, f8, f22, f12, rtz # perform operation
fmadd.s f14, f8, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x5860381645d8a272 # load x3 with value 0x5860381645d8a272
sw x3, 0(x2) # store 0x5860381645d8a272 in memory
flw f29, 0(x2) # load 0x5860381645d8a272 from memory into f29
fmadd.s f15, f9, f21, f29, dyn # perform operation
fmadd.s f15, f9, f21, f29, rdn # perform operation
fmadd.s f15, f9, f21, f29, rmm # perform operation
fmadd.s f15, f9, f21, f29, rne # perform operation
fmadd.s f15, f9, f21, f29, rtz # perform operation
fmadd.s f15, f9, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f9, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f9, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0xbd2c7847ca06ecdf # load x3 with value 0xbd2c7847ca06ecdf
sw x3, 0(x2) # store 0xbd2c7847ca06ecdf in memory
flw f13, 0(x2) # load 0xbd2c7847ca06ecdf from memory into f13
fmadd.s f23, f6, f5, f13, dyn # perform operation
fmadd.s f23, f6, f5, f13, rdn # perform operation
fmadd.s f23, f6, f5, f13, rmm # perform operation
fmadd.s f23, f6, f5, f13, rne # perform operation
fmadd.s f23, f6, f5, f13, rtz # perform operation
fmadd.s f23, f6, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x55b57fe97837daf5 # load x3 with value 0x55b57fe97837daf5
sw x3, 0(x2) # store 0x55b57fe97837daf5 in memory
flw f13, 0(x2) # load 0x55b57fe97837daf5 from memory into f13
fmadd.s f16, f5, f27, f13, dyn # perform operation
fmadd.s f16, f5, f27, f13, rdn # perform operation
fmadd.s f16, f5, f27, f13, rmm # perform operation
fmadd.s f16, f5, f27, f13, rne # perform operation
fmadd.s f16, f5, f27, f13, rtz # perform operation
fmadd.s f16, f5, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x7dacefb1c91392d0 # load x3 with value 0x7dacefb1c91392d0
sw x3, 0(x2) # store 0x7dacefb1c91392d0 in memory
flw f19, 0(x2) # load 0x7dacefb1c91392d0 from memory into f19
fmadd.s f15, f22, f14, f19, dyn # perform operation
fmadd.s f15, f22, f14, f19, rdn # perform operation
fmadd.s f15, f22, f14, f19, rmm # perform operation
fmadd.s f15, f22, f14, f19, rne # perform operation
fmadd.s f15, f22, f14, f19, rtz # perform operation
fmadd.s f15, f22, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0xe7be083b17f20b6c # load x3 with value 0xe7be083b17f20b6c
sw x3, 0(x2) # store 0xe7be083b17f20b6c in memory
flw f5, 0(x2) # load 0xe7be083b17f20b6c from memory into f5
fmadd.s f17, f16, f20, f5, dyn # perform operation
fmadd.s f17, f16, f20, f5, rdn # perform operation
fmadd.s f17, f16, f20, f5, rmm # perform operation
fmadd.s f17, f16, f20, f5, rne # perform operation
fmadd.s f17, f16, f20, f5, rtz # perform operation
fmadd.s f17, f16, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xdca89c9d40895dc0 # load x3 with value 0xdca89c9d40895dc0
sw x3, 0(x2) # store 0xdca89c9d40895dc0 in memory
flw f30, 0(x2) # load 0xdca89c9d40895dc0 from memory into f30
fmadd.s f11, f14, f29, f30, dyn # perform operation
fmadd.s f11, f14, f29, f30, rdn # perform operation
fmadd.s f11, f14, f29, f30, rmm # perform operation
fmadd.s f11, f14, f29, f30, rne # perform operation
fmadd.s f11, f14, f29, f30, rtz # perform operation
fmadd.s f11, f14, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xc0a0ea70c7c9107b # load x3 with value 0xc0a0ea70c7c9107b
sw x3, 0(x2) # store 0xc0a0ea70c7c9107b in memory
flw f10, 0(x2) # load 0xc0a0ea70c7c9107b from memory into f10
fmadd.s f16, f24, f9, f10, dyn # perform operation
fmadd.s f16, f24, f9, f10, rdn # perform operation
fmadd.s f16, f24, f9, f10, rmm # perform operation
fmadd.s f16, f24, f9, f10, rne # perform operation
fmadd.s f16, f24, f9, f10, rtz # perform operation
fmadd.s f16, f24, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f24, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f24, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f24, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f24, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f24, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x8f5fdd9dafd74059 # load x3 with value 0x8f5fdd9dafd74059
sw x3, 0(x2) # store 0x8f5fdd9dafd74059 in memory
flw f27, 0(x2) # load 0x8f5fdd9dafd74059 from memory into f27
fmadd.s f7, f24, f28, f27, dyn # perform operation
fmadd.s f7, f24, f28, f27, rdn # perform operation
fmadd.s f7, f24, f28, f27, rmm # perform operation
fmadd.s f7, f24, f28, f27, rne # perform operation
fmadd.s f7, f24, f28, f27, rtz # perform operation
fmadd.s f7, f24, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f24, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f24, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xac55ac3b1d963fdb # load x3 with value 0xac55ac3b1d963fdb
sw x3, 0(x2) # store 0xac55ac3b1d963fdb in memory
flw f8, 0(x2) # load 0xac55ac3b1d963fdb from memory into f8
fmadd.s f25, f6, f29, f8, dyn # perform operation
fmadd.s f25, f6, f29, f8, rdn # perform operation
fmadd.s f25, f6, f29, f8, rmm # perform operation
fmadd.s f25, f6, f29, f8, rne # perform operation
fmadd.s f25, f6, f29, f8, rtz # perform operation
fmadd.s f25, f6, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x8098b96ae32228c1 # load x3 with value 0x8098b96ae32228c1
sw x3, 0(x2) # store 0x8098b96ae32228c1 in memory
flw f11, 0(x2) # load 0x8098b96ae32228c1 from memory into f11
fmadd.s f8, f7, f28, f11, dyn # perform operation
fmadd.s f8, f7, f28, f11, rdn # perform operation
fmadd.s f8, f7, f28, f11, rmm # perform operation
fmadd.s f8, f7, f28, f11, rne # perform operation
fmadd.s f8, f7, f28, f11, rtz # perform operation
fmadd.s f8, f7, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xb9cae05d885ab8a9 # load x3 with value 0xb9cae05d885ab8a9
sw x3, 0(x2) # store 0xb9cae05d885ab8a9 in memory
flw f3, 0(x2) # load 0xb9cae05d885ab8a9 from memory into f3
fmadd.s f17, f30, f8, f3, dyn # perform operation
fmadd.s f17, f30, f8, f3, rdn # perform operation
fmadd.s f17, f30, f8, f3, rmm # perform operation
fmadd.s f17, f30, f8, f3, rne # perform operation
fmadd.s f17, f30, f8, f3, rtz # perform operation
fmadd.s f17, f30, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0xdf36b1d065b5aabc # load x3 with value 0xdf36b1d065b5aabc
sw x3, 0(x2) # store 0xdf36b1d065b5aabc in memory
flw f23, 0(x2) # load 0xdf36b1d065b5aabc from memory into f23
fmadd.s f29, f1, f19, f23, dyn # perform operation
fmadd.s f29, f1, f19, f23, rdn # perform operation
fmadd.s f29, f1, f19, f23, rmm # perform operation
fmadd.s f29, f1, f19, f23, rne # perform operation
fmadd.s f29, f1, f19, f23, rtz # perform operation
fmadd.s f29, f1, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f1, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f1, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x3066f245740de9c0 # load x3 with value 0x3066f245740de9c0
sw x3, 0(x2) # store 0x3066f245740de9c0 in memory
flw f17, 0(x2) # load 0x3066f245740de9c0 from memory into f17
fmadd.s f30, f12, f8, f17, dyn # perform operation
fmadd.s f30, f12, f8, f17, rdn # perform operation
fmadd.s f30, f12, f8, f17, rmm # perform operation
fmadd.s f30, f12, f8, f17, rne # perform operation
fmadd.s f30, f12, f8, f17, rtz # perform operation
fmadd.s f30, f12, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x1cd5f063c10b270c # load x3 with value 0x1cd5f063c10b270c
sw x3, 0(x2) # store 0x1cd5f063c10b270c in memory
flw f12, 0(x2) # load 0x1cd5f063c10b270c from memory into f12
fmadd.s f10, f22, f27, f12, dyn # perform operation
fmadd.s f10, f22, f27, f12, rdn # perform operation
fmadd.s f10, f22, f27, f12, rmm # perform operation
fmadd.s f10, f22, f27, f12, rne # perform operation
fmadd.s f10, f22, f27, f12, rtz # perform operation
fmadd.s f10, f22, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xfceef410e4871ea8 # load x3 with value 0xfceef410e4871ea8
sw x3, 0(x2) # store 0xfceef410e4871ea8 in memory
flw f13, 0(x2) # load 0xfceef410e4871ea8 from memory into f13
fmadd.s f12, f21, f6, f13, dyn # perform operation
fmadd.s f12, f21, f6, f13, rdn # perform operation
fmadd.s f12, f21, f6, f13, rmm # perform operation
fmadd.s f12, f21, f6, f13, rne # perform operation
fmadd.s f12, f21, f6, f13, rtz # perform operation
fmadd.s f12, f21, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x6d69e1fe0c71565d # load x3 with value 0x6d69e1fe0c71565d
sw x3, 0(x2) # store 0x6d69e1fe0c71565d in memory
flw f26, 0(x2) # load 0x6d69e1fe0c71565d from memory into f26
fmadd.s f22, f10, f27, f26, dyn # perform operation
fmadd.s f22, f10, f27, f26, rdn # perform operation
fmadd.s f22, f10, f27, f26, rmm # perform operation
fmadd.s f22, f10, f27, f26, rne # perform operation
fmadd.s f22, f10, f27, f26, rtz # perform operation
fmadd.s f22, f10, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xfb393907503e341c # load x3 with value 0xfb393907503e341c
sw x3, 0(x2) # store 0xfb393907503e341c in memory
flw f28, 0(x2) # load 0xfb393907503e341c from memory into f28
fmadd.s f26, f29, f19, f28, dyn # perform operation
fmadd.s f26, f29, f19, f28, rdn # perform operation
fmadd.s f26, f29, f19, f28, rmm # perform operation
fmadd.s f26, f29, f19, f28, rne # perform operation
fmadd.s f26, f29, f19, f28, rtz # perform operation
fmadd.s f26, f29, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0xf97726472183e89d # load x3 with value 0xf97726472183e89d
sw x3, 0(x2) # store 0xf97726472183e89d in memory
flw f29, 0(x2) # load 0xf97726472183e89d from memory into f29
fmadd.s f17, f10, f8, f29, dyn # perform operation
fmadd.s f17, f10, f8, f29, rdn # perform operation
fmadd.s f17, f10, f8, f29, rmm # perform operation
fmadd.s f17, f10, f8, f29, rne # perform operation
fmadd.s f17, f10, f8, f29, rtz # perform operation
fmadd.s f17, f10, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x154a15866755b8d5 # load x3 with value 0x154a15866755b8d5
sw x3, 0(x2) # store 0x154a15866755b8d5 in memory
flw f18, 0(x2) # load 0x154a15866755b8d5 from memory into f18
fmadd.s f20, f27, f11, f18, dyn # perform operation
fmadd.s f20, f27, f11, f18, rdn # perform operation
fmadd.s f20, f27, f11, f18, rmm # perform operation
fmadd.s f20, f27, f11, f18, rne # perform operation
fmadd.s f20, f27, f11, f18, rtz # perform operation
fmadd.s f20, f27, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xd1f40a189c85144c # load x3 with value 0xd1f40a189c85144c
sw x3, 0(x2) # store 0xd1f40a189c85144c in memory
flw f11, 0(x2) # load 0xd1f40a189c85144c from memory into f11
fmadd.s f24, f19, f12, f11, dyn # perform operation
fmadd.s f24, f19, f12, f11, rdn # perform operation
fmadd.s f24, f19, f12, f11, rmm # perform operation
fmadd.s f24, f19, f12, f11, rne # perform operation
fmadd.s f24, f19, f12, f11, rtz # perform operation
fmadd.s f24, f19, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xfb4fa5ceb4e70c4b # load x3 with value 0xfb4fa5ceb4e70c4b
sw x3, 0(x2) # store 0xfb4fa5ceb4e70c4b in memory
flw f1, 0(x2) # load 0xfb4fa5ceb4e70c4b from memory into f1
fmadd.s f3, f15, f10, f1, dyn # perform operation
fmadd.s f3, f15, f10, f1, rdn # perform operation
fmadd.s f3, f15, f10, f1, rmm # perform operation
fmadd.s f3, f15, f10, f1, rne # perform operation
fmadd.s f3, f15, f10, f1, rtz # perform operation
fmadd.s f3, f15, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f15, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xd86d694d1ea25511 # load x3 with value 0xd86d694d1ea25511
sw x3, 0(x2) # store 0xd86d694d1ea25511 in memory
flw f17, 0(x2) # load 0xd86d694d1ea25511 from memory into f17
fmadd.s f21, f25, f2, f17, dyn # perform operation
fmadd.s f21, f25, f2, f17, rdn # perform operation
fmadd.s f21, f25, f2, f17, rmm # perform operation
fmadd.s f21, f25, f2, f17, rne # perform operation
fmadd.s f21, f25, f2, f17, rtz # perform operation
fmadd.s f21, f25, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f25, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x286b33a0ebf4c623 # load x3 with value 0x286b33a0ebf4c623
sw x3, 0(x2) # store 0x286b33a0ebf4c623 in memory
flw f30, 0(x2) # load 0x286b33a0ebf4c623 from memory into f30
fmadd.s f12, f17, f14, f30, dyn # perform operation
fmadd.s f12, f17, f14, f30, rdn # perform operation
fmadd.s f12, f17, f14, f30, rmm # perform operation
fmadd.s f12, f17, f14, f30, rne # perform operation
fmadd.s f12, f17, f14, f30, rtz # perform operation
fmadd.s f12, f17, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x133e6bc95ff48124 # load x3 with value 0x133e6bc95ff48124
sw x3, 0(x2) # store 0x133e6bc95ff48124 in memory
flw f7, 0(x2) # load 0x133e6bc95ff48124 from memory into f7
fmadd.s f24, f17, f20, f7, dyn # perform operation
fmadd.s f24, f17, f20, f7, rdn # perform operation
fmadd.s f24, f17, f20, f7, rmm # perform operation
fmadd.s f24, f17, f20, f7, rne # perform operation
fmadd.s f24, f17, f20, f7, rtz # perform operation
fmadd.s f24, f17, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x59b727f36e40b6da # load x3 with value 0x59b727f36e40b6da
sw x3, 0(x2) # store 0x59b727f36e40b6da in memory
flw f28, 0(x2) # load 0x59b727f36e40b6da from memory into f28
fmadd.s f5, f19, f13, f28, dyn # perform operation
fmadd.s f5, f19, f13, f28, rdn # perform operation
fmadd.s f5, f19, f13, f28, rmm # perform operation
fmadd.s f5, f19, f13, f28, rne # perform operation
fmadd.s f5, f19, f13, f28, rtz # perform operation
fmadd.s f5, f19, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xa7051d6c793f1a42 # load x3 with value 0xa7051d6c793f1a42
sw x3, 0(x2) # store 0xa7051d6c793f1a42 in memory
flw f2, 0(x2) # load 0xa7051d6c793f1a42 from memory into f2
fmadd.s f18, f15, f3, f2, dyn # perform operation
fmadd.s f18, f15, f3, f2, rdn # perform operation
fmadd.s f18, f15, f3, f2, rmm # perform operation
fmadd.s f18, f15, f3, f2, rne # perform operation
fmadd.s f18, f15, f3, f2, rtz # perform operation
fmadd.s f18, f15, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x7b4d24adc605fb7a # load x3 with value 0x7b4d24adc605fb7a
sw x3, 0(x2) # store 0x7b4d24adc605fb7a in memory
flw f7, 0(x2) # load 0x7b4d24adc605fb7a from memory into f7
fmadd.s f29, f2, f19, f7, dyn # perform operation
fmadd.s f29, f2, f19, f7, rdn # perform operation
fmadd.s f29, f2, f19, f7, rmm # perform operation
fmadd.s f29, f2, f19, f7, rne # perform operation
fmadd.s f29, f2, f19, f7, rtz # perform operation
fmadd.s f29, f2, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xf0b8a1ad2d7ebc03 # load x3 with value 0xf0b8a1ad2d7ebc03
sw x3, 0(x2) # store 0xf0b8a1ad2d7ebc03 in memory
flw f31, 0(x2) # load 0xf0b8a1ad2d7ebc03 from memory into f31
fmadd.s f1, f9, f7, f31, dyn # perform operation
fmadd.s f1, f9, f7, f31, rdn # perform operation
fmadd.s f1, f9, f7, f31, rmm # perform operation
fmadd.s f1, f9, f7, f31, rne # perform operation
fmadd.s f1, f9, f7, f31, rtz # perform operation
fmadd.s f1, f9, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xa6df6a232ef23cdb # load x3 with value 0xa6df6a232ef23cdb
sw x3, 0(x2) # store 0xa6df6a232ef23cdb in memory
flw f16, 0(x2) # load 0xa6df6a232ef23cdb from memory into f16
fmadd.s f13, f18, f5, f16, dyn # perform operation
fmadd.s f13, f18, f5, f16, rdn # perform operation
fmadd.s f13, f18, f5, f16, rmm # perform operation
fmadd.s f13, f18, f5, f16, rne # perform operation
fmadd.s f13, f18, f5, f16, rtz # perform operation
fmadd.s f13, f18, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x2c654b9533a8fd94 # load x3 with value 0x2c654b9533a8fd94
sw x3, 0(x2) # store 0x2c654b9533a8fd94 in memory
flw f13, 0(x2) # load 0x2c654b9533a8fd94 from memory into f13
fmadd.s f10, f17, f25, f13, dyn # perform operation
fmadd.s f10, f17, f25, f13, rdn # perform operation
fmadd.s f10, f17, f25, f13, rmm # perform operation
fmadd.s f10, f17, f25, f13, rne # perform operation
fmadd.s f10, f17, f25, f13, rtz # perform operation
fmadd.s f10, f17, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x2322da0d102f9ba7 # load x3 with value 0x2322da0d102f9ba7
sw x3, 0(x2) # store 0x2322da0d102f9ba7 in memory
flw f6, 0(x2) # load 0x2322da0d102f9ba7 from memory into f6
fmadd.s f5, f11, f15, f6, dyn # perform operation
fmadd.s f5, f11, f15, f6, rdn # perform operation
fmadd.s f5, f11, f15, f6, rmm # perform operation
fmadd.s f5, f11, f15, f6, rne # perform operation
fmadd.s f5, f11, f15, f6, rtz # perform operation
fmadd.s f5, f11, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f11, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f11, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x882699e6bd4dd65b # load x3 with value 0x882699e6bd4dd65b
sw x3, 0(x2) # store 0x882699e6bd4dd65b in memory
flw f31, 0(x2) # load 0x882699e6bd4dd65b from memory into f31
fmadd.s f20, f23, f26, f31, dyn # perform operation
fmadd.s f20, f23, f26, f31, rdn # perform operation
fmadd.s f20, f23, f26, f31, rmm # perform operation
fmadd.s f20, f23, f26, f31, rne # perform operation
fmadd.s f20, f23, f26, f31, rtz # perform operation
fmadd.s f20, f23, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xb954cd78e169ca53 # load x3 with value 0xb954cd78e169ca53
sw x3, 0(x2) # store 0xb954cd78e169ca53 in memory
flw f31, 0(x2) # load 0xb954cd78e169ca53 from memory into f31
fmadd.s f2, f8, f28, f31, dyn # perform operation
fmadd.s f2, f8, f28, f31, rdn # perform operation
fmadd.s f2, f8, f28, f31, rmm # perform operation
fmadd.s f2, f8, f28, f31, rne # perform operation
fmadd.s f2, f8, f28, f31, rtz # perform operation
fmadd.s f2, f8, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x796138a9c9ed65d9 # load x3 with value 0x796138a9c9ed65d9
sw x3, 0(x2) # store 0x796138a9c9ed65d9 in memory
flw f20, 0(x2) # load 0x796138a9c9ed65d9 from memory into f20
fmadd.s f19, f16, f10, f20, dyn # perform operation
fmadd.s f19, f16, f10, f20, rdn # perform operation
fmadd.s f19, f16, f10, f20, rmm # perform operation
fmadd.s f19, f16, f10, f20, rne # perform operation
fmadd.s f19, f16, f10, f20, rtz # perform operation
fmadd.s f19, f16, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0xcbd8c88b31b3299b # load x3 with value 0xcbd8c88b31b3299b
sw x3, 0(x2) # store 0xcbd8c88b31b3299b in memory
flw f28, 0(x2) # load 0xcbd8c88b31b3299b from memory into f28
fmadd.s f5, f21, f15, f28, dyn # perform operation
fmadd.s f5, f21, f15, f28, rdn # perform operation
fmadd.s f5, f21, f15, f28, rmm # perform operation
fmadd.s f5, f21, f15, f28, rne # perform operation
fmadd.s f5, f21, f15, f28, rtz # perform operation
fmadd.s f5, f21, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f21, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xe173300be515c35 # load x3 with value 0xe173300be515c35
sw x3, 0(x2) # store 0xe173300be515c35 in memory
flw f23, 0(x2) # load 0xe173300be515c35 from memory into f23
fmadd.s f22, f7, f8, f23, dyn # perform operation
fmadd.s f22, f7, f8, f23, rdn # perform operation
fmadd.s f22, f7, f8, f23, rmm # perform operation
fmadd.s f22, f7, f8, f23, rne # perform operation
fmadd.s f22, f7, f8, f23, rtz # perform operation
fmadd.s f22, f7, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f8, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0xcc1c1aa54bee70e6 # load x3 with value 0xcc1c1aa54bee70e6
sw x3, 0(x2) # store 0xcc1c1aa54bee70e6 in memory
flw f7, 0(x2) # load 0xcc1c1aa54bee70e6 from memory into f7
fmadd.s f27, f2, f28, f7, dyn # perform operation
fmadd.s f27, f2, f28, f7, rdn # perform operation
fmadd.s f27, f2, f28, f7, rmm # perform operation
fmadd.s f27, f2, f28, f7, rne # perform operation
fmadd.s f27, f2, f28, f7, rtz # perform operation
fmadd.s f27, f2, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x6bda9d8ac8b9165e # load x3 with value 0x6bda9d8ac8b9165e
sw x3, 0(x2) # store 0x6bda9d8ac8b9165e in memory
flw f28, 0(x2) # load 0x6bda9d8ac8b9165e from memory into f28
fmadd.s f24, f21, f29, f28, dyn # perform operation
fmadd.s f24, f21, f29, f28, rdn # perform operation
fmadd.s f24, f21, f29, f28, rmm # perform operation
fmadd.s f24, f21, f29, f28, rne # perform operation
fmadd.s f24, f21, f29, f28, rtz # perform operation
fmadd.s f24, f21, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f21, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f21, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xdf676ee768934657 # load x3 with value 0xdf676ee768934657
sw x3, 0(x2) # store 0xdf676ee768934657 in memory
flw f20, 0(x2) # load 0xdf676ee768934657 from memory into f20
fmadd.s f19, f30, f16, f20, dyn # perform operation
fmadd.s f19, f30, f16, f20, rdn # perform operation
fmadd.s f19, f30, f16, f20, rmm # perform operation
fmadd.s f19, f30, f16, f20, rne # perform operation
fmadd.s f19, f30, f16, f20, rtz # perform operation
fmadd.s f19, f30, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x650e1484fb5521a9 # load x3 with value 0x650e1484fb5521a9
sw x3, 0(x2) # store 0x650e1484fb5521a9 in memory
flw f28, 0(x2) # load 0x650e1484fb5521a9 from memory into f28
fmadd.s f18, f5, f29, f28, dyn # perform operation
fmadd.s f18, f5, f29, f28, rdn # perform operation
fmadd.s f18, f5, f29, f28, rmm # perform operation
fmadd.s f18, f5, f29, f28, rne # perform operation
fmadd.s f18, f5, f29, f28, rtz # perform operation
fmadd.s f18, f5, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f5, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x4c6404cbc8b0a462 # load x3 with value 0x4c6404cbc8b0a462
sw x3, 0(x2) # store 0x4c6404cbc8b0a462 in memory
flw f5, 0(x2) # load 0x4c6404cbc8b0a462 from memory into f5
fmadd.s f10, f24, f8, f5, dyn # perform operation
fmadd.s f10, f24, f8, f5, rdn # perform operation
fmadd.s f10, f24, f8, f5, rmm # perform operation
fmadd.s f10, f24, f8, f5, rne # perform operation
fmadd.s f10, f24, f8, f5, rtz # perform operation
fmadd.s f10, f24, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x9182f2097ed9cfa4 # load x3 with value 0x9182f2097ed9cfa4
sw x3, 0(x2) # store 0x9182f2097ed9cfa4 in memory
flw f20, 0(x2) # load 0x9182f2097ed9cfa4 from memory into f20
fmadd.s f13, f28, f11, f20, dyn # perform operation
fmadd.s f13, f28, f11, f20, rdn # perform operation
fmadd.s f13, f28, f11, f20, rmm # perform operation
fmadd.s f13, f28, f11, f20, rne # perform operation
fmadd.s f13, f28, f11, f20, rtz # perform operation
fmadd.s f13, f28, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x3af56d2db3c596eb # load x3 with value 0x3af56d2db3c596eb
sw x3, 0(x2) # store 0x3af56d2db3c596eb in memory
flw f30, 0(x2) # load 0x3af56d2db3c596eb from memory into f30
fmadd.s f20, f22, f9, f30, dyn # perform operation
fmadd.s f20, f22, f9, f30, rdn # perform operation
fmadd.s f20, f22, f9, f30, rmm # perform operation
fmadd.s f20, f22, f9, f30, rne # perform operation
fmadd.s f20, f22, f9, f30, rtz # perform operation
fmadd.s f20, f22, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f22, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f22, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0x83aaf70b3a0c86d1 # load x3 with value 0x83aaf70b3a0c86d1
sw x3, 0(x2) # store 0x83aaf70b3a0c86d1 in memory
flw f8, 0(x2) # load 0x83aaf70b3a0c86d1 from memory into f8
fmadd.s f10, f27, f22, f8, dyn # perform operation
fmadd.s f10, f27, f22, f8, rdn # perform operation
fmadd.s f10, f27, f22, f8, rmm # perform operation
fmadd.s f10, f27, f22, f8, rne # perform operation
fmadd.s f10, f27, f22, f8, rtz # perform operation
fmadd.s f10, f27, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f27, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f27, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f27, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f27, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f27, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xeff77292c65cd5b6 # load x3 with value 0xeff77292c65cd5b6
sw x3, 0(x2) # store 0xeff77292c65cd5b6 in memory
flw f27, 0(x2) # load 0xeff77292c65cd5b6 from memory into f27
fmadd.s f30, f2, f19, f27, dyn # perform operation
fmadd.s f30, f2, f19, f27, rdn # perform operation
fmadd.s f30, f2, f19, f27, rmm # perform operation
fmadd.s f30, f2, f19, f27, rne # perform operation
fmadd.s f30, f2, f19, f27, rtz # perform operation
fmadd.s f30, f2, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x1951c52d9de491b # load x3 with value 0x1951c52d9de491b
sw x3, 0(x2) # store 0x1951c52d9de491b in memory
flw f27, 0(x2) # load 0x1951c52d9de491b from memory into f27
fmadd.s f5, f28, f20, f27, dyn # perform operation
fmadd.s f5, f28, f20, f27, rdn # perform operation
fmadd.s f5, f28, f20, f27, rmm # perform operation
fmadd.s f5, f28, f20, f27, rne # perform operation
fmadd.s f5, f28, f20, f27, rtz # perform operation
fmadd.s f5, f28, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f28, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xf2b19de8250f3c00 # load x3 with value 0xf2b19de8250f3c00
sw x3, 0(x2) # store 0xf2b19de8250f3c00 in memory
flw f22, 0(x2) # load 0xf2b19de8250f3c00 from memory into f22
fmadd.s f29, f18, f16, f22, dyn # perform operation
fmadd.s f29, f18, f16, f22, rdn # perform operation
fmadd.s f29, f18, f16, f22, rmm # perform operation
fmadd.s f29, f18, f16, f22, rne # perform operation
fmadd.s f29, f18, f16, f22, rtz # perform operation
fmadd.s f29, f18, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0xc05e50836dd50922 # load x3 with value 0xc05e50836dd50922
sw x3, 0(x2) # store 0xc05e50836dd50922 in memory
flw f11, 0(x2) # load 0xc05e50836dd50922 from memory into f11
fmadd.s f28, f17, f24, f11, dyn # perform operation
fmadd.s f28, f17, f24, f11, rdn # perform operation
fmadd.s f28, f17, f24, f11, rmm # perform operation
fmadd.s f28, f17, f24, f11, rne # perform operation
fmadd.s f28, f17, f24, f11, rtz # perform operation
fmadd.s f28, f17, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x6e1be691eaa1d2a7 # load x3 with value 0x6e1be691eaa1d2a7
sw x3, 0(x2) # store 0x6e1be691eaa1d2a7 in memory
flw f12, 0(x2) # load 0x6e1be691eaa1d2a7 from memory into f12
fmadd.s f14, f18, f1, f12, dyn # perform operation
fmadd.s f14, f18, f1, f12, rdn # perform operation
fmadd.s f14, f18, f1, f12, rmm # perform operation
fmadd.s f14, f18, f1, f12, rne # perform operation
fmadd.s f14, f18, f1, f12, rtz # perform operation
fmadd.s f14, f18, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xdd7d60db52656199 # load x3 with value 0xdd7d60db52656199
sw x3, 0(x2) # store 0xdd7d60db52656199 in memory
flw f16, 0(x2) # load 0xdd7d60db52656199 from memory into f16
fmadd.s f31, f7, f26, f16, dyn # perform operation
fmadd.s f31, f7, f26, f16, rdn # perform operation
fmadd.s f31, f7, f26, f16, rmm # perform operation
fmadd.s f31, f7, f26, f16, rne # perform operation
fmadd.s f31, f7, f26, f16, rtz # perform operation
fmadd.s f31, f7, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f7, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f7, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f7, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f7, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f7, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xf96a1eaf1eb804eb # load x3 with value 0xf96a1eaf1eb804eb
sw x3, 0(x2) # store 0xf96a1eaf1eb804eb in memory
flw f21, 0(x2) # load 0xf96a1eaf1eb804eb from memory into f21
fmadd.s f23, f3, f19, f21, dyn # perform operation
fmadd.s f23, f3, f19, f21, rdn # perform operation
fmadd.s f23, f3, f19, f21, rmm # perform operation
fmadd.s f23, f3, f19, f21, rne # perform operation
fmadd.s f23, f3, f19, f21, rtz # perform operation
fmadd.s f23, f3, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f19, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x56707e0deea43cc8 # load x3 with value 0x56707e0deea43cc8
sw x3, 0(x2) # store 0x56707e0deea43cc8 in memory
flw f5, 0(x2) # load 0x56707e0deea43cc8 from memory into f5
fmadd.s f22, f18, f27, f5, dyn # perform operation
fmadd.s f22, f18, f27, f5, rdn # perform operation
fmadd.s f22, f18, f27, f5, rmm # perform operation
fmadd.s f22, f18, f27, f5, rne # perform operation
fmadd.s f22, f18, f27, f5, rtz # perform operation
fmadd.s f22, f18, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xe058631589c0eb81 # load x3 with value 0xe058631589c0eb81
sw x3, 0(x2) # store 0xe058631589c0eb81 in memory
flw f7, 0(x2) # load 0xe058631589c0eb81 from memory into f7
fmadd.s f17, f1, f20, f7, dyn # perform operation
fmadd.s f17, f1, f20, f7, rdn # perform operation
fmadd.s f17, f1, f20, f7, rmm # perform operation
fmadd.s f17, f1, f20, f7, rne # perform operation
fmadd.s f17, f1, f20, f7, rtz # perform operation
fmadd.s f17, f1, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x4437d473590e334 # load x3 with value 0x4437d473590e334
sw x3, 0(x2) # store 0x4437d473590e334 in memory
flw f10, 0(x2) # load 0x4437d473590e334 from memory into f10
fmadd.s f26, f22, f25, f10, dyn # perform operation
fmadd.s f26, f22, f25, f10, rdn # perform operation
fmadd.s f26, f22, f25, f10, rmm # perform operation
fmadd.s f26, f22, f25, f10, rne # perform operation
fmadd.s f26, f22, f25, f10, rtz # perform operation
fmadd.s f26, f22, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x3b3bfe23e76e3701 # load x3 with value 0x3b3bfe23e76e3701
sw x3, 0(x2) # store 0x3b3bfe23e76e3701 in memory
flw f30, 0(x2) # load 0x3b3bfe23e76e3701 from memory into f30
fmadd.s f5, f14, f6, f30, dyn # perform operation
fmadd.s f5, f14, f6, f30, rdn # perform operation
fmadd.s f5, f14, f6, f30, rmm # perform operation
fmadd.s f5, f14, f6, f30, rne # perform operation
fmadd.s f5, f14, f6, f30, rtz # perform operation
fmadd.s f5, f14, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f14, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0xb188bbf4987eefc6 # load x3 with value 0xb188bbf4987eefc6
sw x3, 0(x2) # store 0xb188bbf4987eefc6 in memory
flw f20, 0(x2) # load 0xb188bbf4987eefc6 from memory into f20
fmadd.s f12, f28, f26, f20, dyn # perform operation
fmadd.s f12, f28, f26, f20, rdn # perform operation
fmadd.s f12, f28, f26, f20, rmm # perform operation
fmadd.s f12, f28, f26, f20, rne # perform operation
fmadd.s f12, f28, f26, f20, rtz # perform operation
fmadd.s f12, f28, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f28, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x8962ec58f9bf90ee # load x3 with value 0x8962ec58f9bf90ee
sw x3, 0(x2) # store 0x8962ec58f9bf90ee in memory
flw f5, 0(x2) # load 0x8962ec58f9bf90ee from memory into f5
fmadd.s f10, f9, f29, f5, dyn # perform operation
fmadd.s f10, f9, f29, f5, rdn # perform operation
fmadd.s f10, f9, f29, f5, rmm # perform operation
fmadd.s f10, f9, f29, f5, rne # perform operation
fmadd.s f10, f9, f29, f5, rtz # perform operation
fmadd.s f10, f9, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xa0f0c8b4496f0070 # load x3 with value 0xa0f0c8b4496f0070
sw x3, 0(x2) # store 0xa0f0c8b4496f0070 in memory
flw f18, 0(x2) # load 0xa0f0c8b4496f0070 from memory into f18
fmadd.s f1, f21, f28, f18, dyn # perform operation
fmadd.s f1, f21, f28, f18, rdn # perform operation
fmadd.s f1, f21, f28, f18, rmm # perform operation
fmadd.s f1, f21, f28, f18, rne # perform operation
fmadd.s f1, f21, f28, f18, rtz # perform operation
fmadd.s f1, f21, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x791c2f46aef5521a # load x3 with value 0x791c2f46aef5521a
sw x3, 0(x2) # store 0x791c2f46aef5521a in memory
flw f12, 0(x2) # load 0x791c2f46aef5521a from memory into f12
fmadd.s f9, f26, f28, f12, dyn # perform operation
fmadd.s f9, f26, f28, f12, rdn # perform operation
fmadd.s f9, f26, f28, f12, rmm # perform operation
fmadd.s f9, f26, f28, f12, rne # perform operation
fmadd.s f9, f26, f28, f12, rtz # perform operation
fmadd.s f9, f26, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xcc4ebc30ec86cd1a # load x3 with value 0xcc4ebc30ec86cd1a
sw x3, 0(x2) # store 0xcc4ebc30ec86cd1a in memory
flw f24, 0(x2) # load 0xcc4ebc30ec86cd1a from memory into f24
fmadd.s f10, f12, f11, f24, dyn # perform operation
fmadd.s f10, f12, f11, f24, rdn # perform operation
fmadd.s f10, f12, f11, f24, rmm # perform operation
fmadd.s f10, f12, f11, f24, rne # perform operation
fmadd.s f10, f12, f11, f24, rtz # perform operation
fmadd.s f10, f12, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xdbfc1f0ad924877 # load x3 with value 0xdbfc1f0ad924877
sw x3, 0(x2) # store 0xdbfc1f0ad924877 in memory
flw f24, 0(x2) # load 0xdbfc1f0ad924877 from memory into f24
fmadd.s f17, f14, f8, f24, dyn # perform operation
fmadd.s f17, f14, f8, f24, rdn # perform operation
fmadd.s f17, f14, f8, f24, rmm # perform operation
fmadd.s f17, f14, f8, f24, rne # perform operation
fmadd.s f17, f14, f8, f24, rtz # perform operation
fmadd.s f17, f14, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xc0b1963cc232e008 # load x3 with value 0xc0b1963cc232e008
sw x3, 0(x2) # store 0xc0b1963cc232e008 in memory
flw f23, 0(x2) # load 0xc0b1963cc232e008 from memory into f23
fmadd.s f19, f13, f10, f23, dyn # perform operation
fmadd.s f19, f13, f10, f23, rdn # perform operation
fmadd.s f19, f13, f10, f23, rmm # perform operation
fmadd.s f19, f13, f10, f23, rne # perform operation
fmadd.s f19, f13, f10, f23, rtz # perform operation
fmadd.s f19, f13, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f13, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x3d2259de98cd2500 # load x3 with value 0x3d2259de98cd2500
sw x3, 0(x2) # store 0x3d2259de98cd2500 in memory
flw f27, 0(x2) # load 0x3d2259de98cd2500 from memory into f27
fmadd.s f11, f16, f18, f27, dyn # perform operation
fmadd.s f11, f16, f18, f27, rdn # perform operation
fmadd.s f11, f16, f18, f27, rmm # perform operation
fmadd.s f11, f16, f18, f27, rne # perform operation
fmadd.s f11, f16, f18, f27, rtz # perform operation
fmadd.s f11, f16, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xe008ec0b6f41f37c # load x3 with value 0xe008ec0b6f41f37c
sw x3, 0(x2) # store 0xe008ec0b6f41f37c in memory
flw f20, 0(x2) # load 0xe008ec0b6f41f37c from memory into f20
fmadd.s f30, f21, f23, f20, dyn # perform operation
fmadd.s f30, f21, f23, f20, rdn # perform operation
fmadd.s f30, f21, f23, f20, rmm # perform operation
fmadd.s f30, f21, f23, f20, rne # perform operation
fmadd.s f30, f21, f23, f20, rtz # perform operation
fmadd.s f30, f21, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x261c1eca86b3915f # load x3 with value 0x261c1eca86b3915f
sw x3, 0(x2) # store 0x261c1eca86b3915f in memory
flw f24, 0(x2) # load 0x261c1eca86b3915f from memory into f24
fmadd.s f5, f22, f14, f24, dyn # perform operation
fmadd.s f5, f22, f14, f24, rdn # perform operation
fmadd.s f5, f22, f14, f24, rmm # perform operation
fmadd.s f5, f22, f14, f24, rne # perform operation
fmadd.s f5, f22, f14, f24, rtz # perform operation
fmadd.s f5, f22, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x481d51715197667 # load x3 with value 0x481d51715197667
sw x3, 0(x2) # store 0x481d51715197667 in memory
flw f30, 0(x2) # load 0x481d51715197667 from memory into f30
fmadd.s f12, f24, f8, f30, dyn # perform operation
fmadd.s f12, f24, f8, f30, rdn # perform operation
fmadd.s f12, f24, f8, f30, rmm # perform operation
fmadd.s f12, f24, f8, f30, rne # perform operation
fmadd.s f12, f24, f8, f30, rtz # perform operation
fmadd.s f12, f24, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f24, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f24, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f24, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f24, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f24, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x5796795893bde1be # load x3 with value 0x5796795893bde1be
sw x3, 0(x2) # store 0x5796795893bde1be in memory
flw f29, 0(x2) # load 0x5796795893bde1be from memory into f29
fmadd.s f1, f8, f3, f29, dyn # perform operation
fmadd.s f1, f8, f3, f29, rdn # perform operation
fmadd.s f1, f8, f3, f29, rmm # perform operation
fmadd.s f1, f8, f3, f29, rne # perform operation
fmadd.s f1, f8, f3, f29, rtz # perform operation
fmadd.s f1, f8, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f8, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f8, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x86aca1d6915a0211 # load x3 with value 0x86aca1d6915a0211
sw x3, 0(x2) # store 0x86aca1d6915a0211 in memory
flw f22, 0(x2) # load 0x86aca1d6915a0211 from memory into f22
fmadd.s f10, f11, f5, f22, dyn # perform operation
fmadd.s f10, f11, f5, f22, rdn # perform operation
fmadd.s f10, f11, f5, f22, rmm # perform operation
fmadd.s f10, f11, f5, f22, rne # perform operation
fmadd.s f10, f11, f5, f22, rtz # perform operation
fmadd.s f10, f11, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f11, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xb023a47367791a60 # load x3 with value 0xb023a47367791a60
sw x3, 0(x2) # store 0xb023a47367791a60 in memory
flw f10, 0(x2) # load 0xb023a47367791a60 from memory into f10
fmadd.s f12, f31, f8, f10, dyn # perform operation
fmadd.s f12, f31, f8, f10, rdn # perform operation
fmadd.s f12, f31, f8, f10, rmm # perform operation
fmadd.s f12, f31, f8, f10, rne # perform operation
fmadd.s f12, f31, f8, f10, rtz # perform operation
fmadd.s f12, f31, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x3676a67980933cbc # load x3 with value 0x3676a67980933cbc
sw x3, 0(x2) # store 0x3676a67980933cbc in memory
flw f18, 0(x2) # load 0x3676a67980933cbc from memory into f18
fmadd.s f23, f22, f2, f18, dyn # perform operation
fmadd.s f23, f22, f2, f18, rdn # perform operation
fmadd.s f23, f22, f2, f18, rmm # perform operation
fmadd.s f23, f22, f2, f18, rne # perform operation
fmadd.s f23, f22, f2, f18, rtz # perform operation
fmadd.s f23, f22, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x5f40212073d88168 # load x3 with value 0x5f40212073d88168
sw x3, 0(x2) # store 0x5f40212073d88168 in memory
flw f1, 0(x2) # load 0x5f40212073d88168 from memory into f1
fmadd.s f22, f15, f21, f1, dyn # perform operation
fmadd.s f22, f15, f21, f1, rdn # perform operation
fmadd.s f22, f15, f21, f1, rmm # perform operation
fmadd.s f22, f15, f21, f1, rne # perform operation
fmadd.s f22, f15, f21, f1, rtz # perform operation
fmadd.s f22, f15, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x72eb4951bccda38d # load x3 with value 0x72eb4951bccda38d
sw x3, 0(x2) # store 0x72eb4951bccda38d in memory
flw f14, 0(x2) # load 0x72eb4951bccda38d from memory into f14
fmadd.s f10, f29, f12, f14, dyn # perform operation
fmadd.s f10, f29, f12, f14, rdn # perform operation
fmadd.s f10, f29, f12, f14, rmm # perform operation
fmadd.s f10, f29, f12, f14, rne # perform operation
fmadd.s f10, f29, f12, f14, rtz # perform operation
fmadd.s f10, f29, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f29, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f29, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f29, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f29, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f29, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x2f324ec020529ac0 # load x3 with value 0x2f324ec020529ac0
sw x3, 0(x2) # store 0x2f324ec020529ac0 in memory
flw f27, 0(x2) # load 0x2f324ec020529ac0 from memory into f27
fmadd.s f19, f11, f28, f27, dyn # perform operation
fmadd.s f19, f11, f28, f27, rdn # perform operation
fmadd.s f19, f11, f28, f27, rmm # perform operation
fmadd.s f19, f11, f28, f27, rne # perform operation
fmadd.s f19, f11, f28, f27, rtz # perform operation
fmadd.s f19, f11, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xa0716693548b0745 # load x3 with value 0xa0716693548b0745
sw x3, 0(x2) # store 0xa0716693548b0745 in memory
flw f24, 0(x2) # load 0xa0716693548b0745 from memory into f24
fmadd.s f11, f18, f14, f24, dyn # perform operation
fmadd.s f11, f18, f14, f24, rdn # perform operation
fmadd.s f11, f18, f14, f24, rmm # perform operation
fmadd.s f11, f18, f14, f24, rne # perform operation
fmadd.s f11, f18, f14, f24, rtz # perform operation
fmadd.s f11, f18, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f18, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f18, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xc8bf3a1296b874b2 # load x3 with value 0xc8bf3a1296b874b2
sw x3, 0(x2) # store 0xc8bf3a1296b874b2 in memory
flw f19, 0(x2) # load 0xc8bf3a1296b874b2 from memory into f19
fmadd.s f30, f8, f23, f19, dyn # perform operation
fmadd.s f30, f8, f23, f19, rdn # perform operation
fmadd.s f30, f8, f23, f19, rmm # perform operation
fmadd.s f30, f8, f23, f19, rne # perform operation
fmadd.s f30, f8, f23, f19, rtz # perform operation
fmadd.s f30, f8, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x14c42a5ae2335f5d # load x3 with value 0x14c42a5ae2335f5d
sw x3, 0(x2) # store 0x14c42a5ae2335f5d in memory
flw f6, 0(x2) # load 0x14c42a5ae2335f5d from memory into f6
fmadd.s f2, f10, f26, f6, dyn # perform operation
fmadd.s f2, f10, f26, f6, rdn # perform operation
fmadd.s f2, f10, f26, f6, rmm # perform operation
fmadd.s f2, f10, f26, f6, rne # perform operation
fmadd.s f2, f10, f26, f6, rtz # perform operation
fmadd.s f2, f10, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x33ec6a3c2a50e5d4 # load x3 with value 0x33ec6a3c2a50e5d4
sw x3, 0(x2) # store 0x33ec6a3c2a50e5d4 in memory
flw f13, 0(x2) # load 0x33ec6a3c2a50e5d4 from memory into f13
fmadd.s f3, f1, f23, f13, dyn # perform operation
fmadd.s f3, f1, f23, f13, rdn # perform operation
fmadd.s f3, f1, f23, f13, rmm # perform operation
fmadd.s f3, f1, f23, f13, rne # perform operation
fmadd.s f3, f1, f23, f13, rtz # perform operation
fmadd.s f3, f1, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xa3c407aa34961900 # load x3 with value 0xa3c407aa34961900
sw x3, 0(x2) # store 0xa3c407aa34961900 in memory
flw f3, 0(x2) # load 0xa3c407aa34961900 from memory into f3
fmadd.s f14, f2, f21, f3, dyn # perform operation
fmadd.s f14, f2, f21, f3, rdn # perform operation
fmadd.s f14, f2, f21, f3, rmm # perform operation
fmadd.s f14, f2, f21, f3, rne # perform operation
fmadd.s f14, f2, f21, f3, rtz # perform operation
fmadd.s f14, f2, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x9ef118627d4289d8 # load x3 with value 0x9ef118627d4289d8
sw x3, 0(x2) # store 0x9ef118627d4289d8 in memory
flw f12, 0(x2) # load 0x9ef118627d4289d8 from memory into f12
fmadd.s f19, f1, f31, f12, dyn # perform operation
fmadd.s f19, f1, f31, f12, rdn # perform operation
fmadd.s f19, f1, f31, f12, rmm # perform operation
fmadd.s f19, f1, f31, f12, rne # perform operation
fmadd.s f19, f1, f31, f12, rtz # perform operation
fmadd.s f19, f1, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x4f81a2dcdf3700df # load x3 with value 0x4f81a2dcdf3700df
sw x3, 0(x2) # store 0x4f81a2dcdf3700df in memory
flw f6, 0(x2) # load 0x4f81a2dcdf3700df from memory into f6
fmadd.s f5, f22, f14, f6, dyn # perform operation
fmadd.s f5, f22, f14, f6, rdn # perform operation
fmadd.s f5, f22, f14, f6, rmm # perform operation
fmadd.s f5, f22, f14, f6, rne # perform operation
fmadd.s f5, f22, f14, f6, rtz # perform operation
fmadd.s f5, f22, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x84f327771d731d13 # load x3 with value 0x84f327771d731d13
sw x3, 0(x2) # store 0x84f327771d731d13 in memory
flw f26, 0(x2) # load 0x84f327771d731d13 from memory into f26
fmadd.s f20, f6, f23, f26, dyn # perform operation
fmadd.s f20, f6, f23, f26, rdn # perform operation
fmadd.s f20, f6, f23, f26, rmm # perform operation
fmadd.s f20, f6, f23, f26, rne # perform operation
fmadd.s f20, f6, f23, f26, rtz # perform operation
fmadd.s f20, f6, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f6, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f6, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f6, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f6, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f6, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x5b56c998d312f934 # load x3 with value 0x5b56c998d312f934
sw x3, 0(x2) # store 0x5b56c998d312f934 in memory
flw f23, 0(x2) # load 0x5b56c998d312f934 from memory into f23
fmadd.s f26, f10, f1, f23, dyn # perform operation
fmadd.s f26, f10, f1, f23, rdn # perform operation
fmadd.s f26, f10, f1, f23, rmm # perform operation
fmadd.s f26, f10, f1, f23, rne # perform operation
fmadd.s f26, f10, f1, f23, rtz # perform operation
fmadd.s f26, f10, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f10, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x52f1a1ff4c6850e9 # load x3 with value 0x52f1a1ff4c6850e9
sw x3, 0(x2) # store 0x52f1a1ff4c6850e9 in memory
flw f14, 0(x2) # load 0x52f1a1ff4c6850e9 from memory into f14
fmadd.s f11, f29, f16, f14, dyn # perform operation
fmadd.s f11, f29, f16, f14, rdn # perform operation
fmadd.s f11, f29, f16, f14, rmm # perform operation
fmadd.s f11, f29, f16, f14, rne # perform operation
fmadd.s f11, f29, f16, f14, rtz # perform operation
fmadd.s f11, f29, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f29, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f29, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x20bc537c710a6ecd # load x3 with value 0x20bc537c710a6ecd
sw x3, 0(x2) # store 0x20bc537c710a6ecd in memory
flw f16, 0(x2) # load 0x20bc537c710a6ecd from memory into f16
fmadd.s f22, f26, f1, f16, dyn # perform operation
fmadd.s f22, f26, f1, f16, rdn # perform operation
fmadd.s f22, f26, f1, f16, rmm # perform operation
fmadd.s f22, f26, f1, f16, rne # perform operation
fmadd.s f22, f26, f1, f16, rtz # perform operation
fmadd.s f22, f26, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xa3c46c93a2c1993e # load x3 with value 0xa3c46c93a2c1993e
sw x3, 0(x2) # store 0xa3c46c93a2c1993e in memory
flw f18, 0(x2) # load 0xa3c46c93a2c1993e from memory into f18
fmadd.s f27, f30, f26, f18, dyn # perform operation
fmadd.s f27, f30, f26, f18, rdn # perform operation
fmadd.s f27, f30, f26, f18, rmm # perform operation
fmadd.s f27, f30, f26, f18, rne # perform operation
fmadd.s f27, f30, f26, f18, rtz # perform operation
fmadd.s f27, f30, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x20a9f48f5e4a2825 # load x3 with value 0x20a9f48f5e4a2825
sw x3, 0(x2) # store 0x20a9f48f5e4a2825 in memory
flw f6, 0(x2) # load 0x20a9f48f5e4a2825 from memory into f6
fmadd.s f20, f23, f3, f6, dyn # perform operation
fmadd.s f20, f23, f3, f6, rdn # perform operation
fmadd.s f20, f23, f3, f6, rmm # perform operation
fmadd.s f20, f23, f3, f6, rne # perform operation
fmadd.s f20, f23, f3, f6, rtz # perform operation
fmadd.s f20, f23, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x2c5da96d9dd73362 # load x3 with value 0x2c5da96d9dd73362
sw x3, 0(x2) # store 0x2c5da96d9dd73362 in memory
flw f2, 0(x2) # load 0x2c5da96d9dd73362 from memory into f2
fmadd.s f24, f19, f18, f2, dyn # perform operation
fmadd.s f24, f19, f18, f2, rdn # perform operation
fmadd.s f24, f19, f18, f2, rmm # perform operation
fmadd.s f24, f19, f18, f2, rne # perform operation
fmadd.s f24, f19, f18, f2, rtz # perform operation
fmadd.s f24, f19, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x923b39bc8dc489c0 # load x3 with value 0x923b39bc8dc489c0
sw x3, 0(x2) # store 0x923b39bc8dc489c0 in memory
flw f5, 0(x2) # load 0x923b39bc8dc489c0 from memory into f5
fmadd.s f30, f11, f21, f5, dyn # perform operation
fmadd.s f30, f11, f21, f5, rdn # perform operation
fmadd.s f30, f11, f21, f5, rmm # perform operation
fmadd.s f30, f11, f21, f5, rne # perform operation
fmadd.s f30, f11, f21, f5, rtz # perform operation
fmadd.s f30, f11, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f21, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x1e5528d327450622 # load x3 with value 0x1e5528d327450622
sw x3, 0(x2) # store 0x1e5528d327450622 in memory
flw f2, 0(x2) # load 0x1e5528d327450622 from memory into f2
fmadd.s f10, f23, f31, f2, dyn # perform operation
fmadd.s f10, f23, f31, f2, rdn # perform operation
fmadd.s f10, f23, f31, f2, rmm # perform operation
fmadd.s f10, f23, f31, f2, rne # perform operation
fmadd.s f10, f23, f31, f2, rtz # perform operation
fmadd.s f10, f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0x9f8a3965a6c429cc # load x3 with value 0x9f8a3965a6c429cc
sw x3, 0(x2) # store 0x9f8a3965a6c429cc in memory
flw f27, 0(x2) # load 0x9f8a3965a6c429cc from memory into f27
fmadd.s f21, f25, f10, f27, dyn # perform operation
fmadd.s f21, f25, f10, f27, rdn # perform operation
fmadd.s f21, f25, f10, f27, rmm # perform operation
fmadd.s f21, f25, f10, f27, rne # perform operation
fmadd.s f21, f25, f10, f27, rtz # perform operation
fmadd.s f21, f25, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f25, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f25, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f25, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f25, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f25, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xad90349bfb4f9d4f # load x3 with value 0xad90349bfb4f9d4f
sw x3, 0(x2) # store 0xad90349bfb4f9d4f in memory
flw f5, 0(x2) # load 0xad90349bfb4f9d4f from memory into f5
fmadd.s f9, f20, f30, f5, dyn # perform operation
fmadd.s f9, f20, f30, f5, rdn # perform operation
fmadd.s f9, f20, f30, f5, rmm # perform operation
fmadd.s f9, f20, f30, f5, rne # perform operation
fmadd.s f9, f20, f30, f5, rtz # perform operation
fmadd.s f9, f20, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x81ceef467032071f # load x3 with value 0x81ceef467032071f
sw x3, 0(x2) # store 0x81ceef467032071f in memory
flw f23, 0(x2) # load 0x81ceef467032071f from memory into f23
fmadd.s f20, f31, f10, f23, dyn # perform operation
fmadd.s f20, f31, f10, f23, rdn # perform operation
fmadd.s f20, f31, f10, f23, rmm # perform operation
fmadd.s f20, f31, f10, f23, rne # perform operation
fmadd.s f20, f31, f10, f23, rtz # perform operation
fmadd.s f20, f31, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f31, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f31, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xa1aa07e940a0976e # load x3 with value 0xa1aa07e940a0976e
sw x3, 0(x2) # store 0xa1aa07e940a0976e in memory
flw f11, 0(x2) # load 0xa1aa07e940a0976e from memory into f11
fmadd.s f31, f15, f9, f11, dyn # perform operation
fmadd.s f31, f15, f9, f11, rdn # perform operation
fmadd.s f31, f15, f9, f11, rmm # perform operation
fmadd.s f31, f15, f9, f11, rne # perform operation
fmadd.s f31, f15, f9, f11, rtz # perform operation
fmadd.s f31, f15, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f15, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f15, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x1c7d6fa0ffd4c3bb # load x3 with value 0x1c7d6fa0ffd4c3bb
sw x3, 0(x2) # store 0x1c7d6fa0ffd4c3bb in memory
flw f28, 0(x2) # load 0x1c7d6fa0ffd4c3bb from memory into f28
fmadd.s f9, f26, f6, f28, dyn # perform operation
fmadd.s f9, f26, f6, f28, rdn # perform operation
fmadd.s f9, f26, f6, f28, rmm # perform operation
fmadd.s f9, f26, f6, f28, rne # perform operation
fmadd.s f9, f26, f6, f28, rtz # perform operation
fmadd.s f9, f26, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x49689f086109d129 # load x3 with value 0x49689f086109d129
sw x3, 0(x2) # store 0x49689f086109d129 in memory
flw f30, 0(x2) # load 0x49689f086109d129 from memory into f30
fmadd.s f13, f9, f12, f30, dyn # perform operation
fmadd.s f13, f9, f12, f30, rdn # perform operation
fmadd.s f13, f9, f12, f30, rmm # perform operation
fmadd.s f13, f9, f12, f30, rne # perform operation
fmadd.s f13, f9, f12, f30, rtz # perform operation
fmadd.s f13, f9, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x71a375a0df578a15 # load x3 with value 0x71a375a0df578a15
sw x3, 0(x2) # store 0x71a375a0df578a15 in memory
flw f13, 0(x2) # load 0x71a375a0df578a15 from memory into f13
fmadd.s f24, f23, f1, f13, dyn # perform operation
fmadd.s f24, f23, f1, f13, rdn # perform operation
fmadd.s f24, f23, f1, f13, rmm # perform operation
fmadd.s f24, f23, f1, f13, rne # perform operation
fmadd.s f24, f23, f1, f13, rtz # perform operation
fmadd.s f24, f23, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x8a1762277e71f5bc # load x3 with value 0x8a1762277e71f5bc
sw x3, 0(x2) # store 0x8a1762277e71f5bc in memory
flw f18, 0(x2) # load 0x8a1762277e71f5bc from memory into f18
fmadd.s f2, f31, f22, f18, dyn # perform operation
fmadd.s f2, f31, f22, f18, rdn # perform operation
fmadd.s f2, f31, f22, f18, rmm # perform operation
fmadd.s f2, f31, f22, f18, rne # perform operation
fmadd.s f2, f31, f22, f18, rtz # perform operation
fmadd.s f2, f31, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xd4b44666f87fc4fb # load x3 with value 0xd4b44666f87fc4fb
sw x3, 0(x2) # store 0xd4b44666f87fc4fb in memory
flw f8, 0(x2) # load 0xd4b44666f87fc4fb from memory into f8
fmadd.s f5, f24, f1, f8, dyn # perform operation
fmadd.s f5, f24, f1, f8, rdn # perform operation
fmadd.s f5, f24, f1, f8, rmm # perform operation
fmadd.s f5, f24, f1, f8, rne # perform operation
fmadd.s f5, f24, f1, f8, rtz # perform operation
fmadd.s f5, f24, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0xe50ec0d9828a6fa7 # load x3 with value 0xe50ec0d9828a6fa7
sw x3, 0(x2) # store 0xe50ec0d9828a6fa7 in memory
flw f22, 0(x2) # load 0xe50ec0d9828a6fa7 from memory into f22
fmadd.s f10, f30, f11, f22, dyn # perform operation
fmadd.s f10, f30, f11, f22, rdn # perform operation
fmadd.s f10, f30, f11, f22, rmm # perform operation
fmadd.s f10, f30, f11, f22, rne # perform operation
fmadd.s f10, f30, f11, f22, rtz # perform operation
fmadd.s f10, f30, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x54194aedee79b28c # load x3 with value 0x54194aedee79b28c
sw x3, 0(x2) # store 0x54194aedee79b28c in memory
flw f6, 0(x2) # load 0x54194aedee79b28c from memory into f6
fmadd.s f29, f11, f31, f6, dyn # perform operation
fmadd.s f29, f11, f31, f6, rdn # perform operation
fmadd.s f29, f11, f31, f6, rmm # perform operation
fmadd.s f29, f11, f31, f6, rne # perform operation
fmadd.s f29, f11, f31, f6, rtz # perform operation
fmadd.s f29, f11, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x7e181bb18ab872ec # load x3 with value 0x7e181bb18ab872ec
sw x3, 0(x2) # store 0x7e181bb18ab872ec in memory
flw f2, 0(x2) # load 0x7e181bb18ab872ec from memory into f2
fmadd.s f11, f28, f19, f2, dyn # perform operation
fmadd.s f11, f28, f19, f2, rdn # perform operation
fmadd.s f11, f28, f19, f2, rmm # perform operation
fmadd.s f11, f28, f19, f2, rne # perform operation
fmadd.s f11, f28, f19, f2, rtz # perform operation
fmadd.s f11, f28, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x21f69f96148e5639 # load x3 with value 0x21f69f96148e5639
sw x3, 0(x2) # store 0x21f69f96148e5639 in memory
flw f13, 0(x2) # load 0x21f69f96148e5639 from memory into f13
fmadd.s f19, f30, f17, f13, dyn # perform operation
fmadd.s f19, f30, f17, f13, rdn # perform operation
fmadd.s f19, f30, f17, f13, rmm # perform operation
fmadd.s f19, f30, f17, f13, rne # perform operation
fmadd.s f19, f30, f17, f13, rtz # perform operation
fmadd.s f19, f30, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xb317e130ad130f60 # load x3 with value 0xb317e130ad130f60
sw x3, 0(x2) # store 0xb317e130ad130f60 in memory
flw f21, 0(x2) # load 0xb317e130ad130f60 from memory into f21
fmadd.s f11, f23, f19, f21, dyn # perform operation
fmadd.s f11, f23, f19, f21, rdn # perform operation
fmadd.s f11, f23, f19, f21, rmm # perform operation
fmadd.s f11, f23, f19, f21, rne # perform operation
fmadd.s f11, f23, f19, f21, rtz # perform operation
fmadd.s f11, f23, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f19, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x74432e610dfe44d6 # load x3 with value 0x74432e610dfe44d6
sw x3, 0(x2) # store 0x74432e610dfe44d6 in memory
flw f2, 0(x2) # load 0x74432e610dfe44d6 from memory into f2
fmadd.s f31, f5, f13, f2, dyn # perform operation
fmadd.s f31, f5, f13, f2, rdn # perform operation
fmadd.s f31, f5, f13, f2, rmm # perform operation
fmadd.s f31, f5, f13, f2, rne # perform operation
fmadd.s f31, f5, f13, f2, rtz # perform operation
fmadd.s f31, f5, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x313fe423bdb99019 # load x3 with value 0x313fe423bdb99019
sw x3, 0(x2) # store 0x313fe423bdb99019 in memory
flw f16, 0(x2) # load 0x313fe423bdb99019 from memory into f16
fmadd.s f25, f12, f7, f16, dyn # perform operation
fmadd.s f25, f12, f7, f16, rdn # perform operation
fmadd.s f25, f12, f7, f16, rmm # perform operation
fmadd.s f25, f12, f7, f16, rne # perform operation
fmadd.s f25, f12, f7, f16, rtz # perform operation
fmadd.s f25, f12, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f12, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f12, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0xc2fd5787d07223b4 # load x3 with value 0xc2fd5787d07223b4
sw x3, 0(x2) # store 0xc2fd5787d07223b4 in memory
flw f16, 0(x2) # load 0xc2fd5787d07223b4 from memory into f16
fmadd.s f30, f13, f20, f16, dyn # perform operation
fmadd.s f30, f13, f20, f16, rdn # perform operation
fmadd.s f30, f13, f20, f16, rmm # perform operation
fmadd.s f30, f13, f20, f16, rne # perform operation
fmadd.s f30, f13, f20, f16, rtz # perform operation
fmadd.s f30, f13, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x21b84f80c3e6d213 # load x3 with value 0x21b84f80c3e6d213
sw x3, 0(x2) # store 0x21b84f80c3e6d213 in memory
flw f8, 0(x2) # load 0x21b84f80c3e6d213 from memory into f8
fmadd.s f31, f19, f21, f8, dyn # perform operation
fmadd.s f31, f19, f21, f8, rdn # perform operation
fmadd.s f31, f19, f21, f8, rmm # perform operation
fmadd.s f31, f19, f21, f8, rne # perform operation
fmadd.s f31, f19, f21, f8, rtz # perform operation
fmadd.s f31, f19, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x8d3ffbf8df06088d # load x3 with value 0x8d3ffbf8df06088d
sw x3, 0(x2) # store 0x8d3ffbf8df06088d in memory
flw f24, 0(x2) # load 0x8d3ffbf8df06088d from memory into f24
fmadd.s f16, f3, f6, f24, dyn # perform operation
fmadd.s f16, f3, f6, f24, rdn # perform operation
fmadd.s f16, f3, f6, f24, rmm # perform operation
fmadd.s f16, f3, f6, f24, rne # perform operation
fmadd.s f16, f3, f6, f24, rtz # perform operation
fmadd.s f16, f3, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0xdc45c066d58c5f00 # load x3 with value 0xdc45c066d58c5f00
sw x3, 0(x2) # store 0xdc45c066d58c5f00 in memory
flw f14, 0(x2) # load 0xdc45c066d58c5f00 from memory into f14
fmadd.s f28, f16, f24, f14, dyn # perform operation
fmadd.s f28, f16, f24, f14, rdn # perform operation
fmadd.s f28, f16, f24, f14, rmm # perform operation
fmadd.s f28, f16, f24, f14, rne # perform operation
fmadd.s f28, f16, f24, f14, rtz # perform operation
fmadd.s f28, f16, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x70d6466ed12fd305 # load x3 with value 0x70d6466ed12fd305
sw x3, 0(x2) # store 0x70d6466ed12fd305 in memory
flw f5, 0(x2) # load 0x70d6466ed12fd305 from memory into f5
fmadd.s f31, f7, f16, f5, dyn # perform operation
fmadd.s f31, f7, f16, f5, rdn # perform operation
fmadd.s f31, f7, f16, f5, rmm # perform operation
fmadd.s f31, f7, f16, f5, rne # perform operation
fmadd.s f31, f7, f16, f5, rtz # perform operation
fmadd.s f31, f7, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f7, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f7, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f7, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f7, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f7, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x4248fb8aacfbb0d0 # load x3 with value 0x4248fb8aacfbb0d0
sw x3, 0(x2) # store 0x4248fb8aacfbb0d0 in memory
flw f20, 0(x2) # load 0x4248fb8aacfbb0d0 from memory into f20
fmadd.s f13, f26, f25, f20, dyn # perform operation
fmadd.s f13, f26, f25, f20, rdn # perform operation
fmadd.s f13, f26, f25, f20, rmm # perform operation
fmadd.s f13, f26, f25, f20, rne # perform operation
fmadd.s f13, f26, f25, f20, rtz # perform operation
fmadd.s f13, f26, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x1e3f68337eb0a475 # load x3 with value 0x1e3f68337eb0a475
sw x3, 0(x2) # store 0x1e3f68337eb0a475 in memory
flw f21, 0(x2) # load 0x1e3f68337eb0a475 from memory into f21
fmadd.s f10, f6, f14, f21, dyn # perform operation
fmadd.s f10, f6, f14, f21, rdn # perform operation
fmadd.s f10, f6, f14, f21, rmm # perform operation
fmadd.s f10, f6, f14, f21, rne # perform operation
fmadd.s f10, f6, f14, f21, rtz # perform operation
fmadd.s f10, f6, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x6823e11106efe7c2 # load x3 with value 0x6823e11106efe7c2
sw x3, 0(x2) # store 0x6823e11106efe7c2 in memory
flw f19, 0(x2) # load 0x6823e11106efe7c2 from memory into f19
fmadd.s f8, f16, f28, f19, dyn # perform operation
fmadd.s f8, f16, f28, f19, rdn # perform operation
fmadd.s f8, f16, f28, f19, rmm # perform operation
fmadd.s f8, f16, f28, f19, rne # perform operation
fmadd.s f8, f16, f28, f19, rtz # perform operation
fmadd.s f8, f16, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x119cd5bc613da762 # load x3 with value 0x119cd5bc613da762
sw x3, 0(x2) # store 0x119cd5bc613da762 in memory
flw f22, 0(x2) # load 0x119cd5bc613da762 from memory into f22
fmadd.s f11, f28, f9, f22, dyn # perform operation
fmadd.s f11, f28, f9, f22, rdn # perform operation
fmadd.s f11, f28, f9, f22, rmm # perform operation
fmadd.s f11, f28, f9, f22, rne # perform operation
fmadd.s f11, f28, f9, f22, rtz # perform operation
fmadd.s f11, f28, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x994f67cb1149d717 # load x3 with value 0x994f67cb1149d717
sw x3, 0(x2) # store 0x994f67cb1149d717 in memory
flw f15, 0(x2) # load 0x994f67cb1149d717 from memory into f15
fmadd.s f17, f24, f27, f15, dyn # perform operation
fmadd.s f17, f24, f27, f15, rdn # perform operation
fmadd.s f17, f24, f27, f15, rmm # perform operation
fmadd.s f17, f24, f27, f15, rne # perform operation
fmadd.s f17, f24, f27, f15, rtz # perform operation
fmadd.s f17, f24, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0xb8f7fb0be0c6f88d # load x3 with value 0xb8f7fb0be0c6f88d
sw x3, 0(x2) # store 0xb8f7fb0be0c6f88d in memory
flw f21, 0(x2) # load 0xb8f7fb0be0c6f88d from memory into f21
fmadd.s f11, f8, f16, f21, dyn # perform operation
fmadd.s f11, f8, f16, f21, rdn # perform operation
fmadd.s f11, f8, f16, f21, rmm # perform operation
fmadd.s f11, f8, f16, f21, rne # perform operation
fmadd.s f11, f8, f16, f21, rtz # perform operation
fmadd.s f11, f8, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x83e062582c6f409b # load x3 with value 0x83e062582c6f409b
sw x3, 0(x2) # store 0x83e062582c6f409b in memory
flw f28, 0(x2) # load 0x83e062582c6f409b from memory into f28
fmadd.s f20, f22, f15, f28, dyn # perform operation
fmadd.s f20, f22, f15, f28, rdn # perform operation
fmadd.s f20, f22, f15, f28, rmm # perform operation
fmadd.s f20, f22, f15, f28, rne # perform operation
fmadd.s f20, f22, f15, f28, rtz # perform operation
fmadd.s f20, f22, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f22, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f22, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xb252a010cf399a5e # load x3 with value 0xb252a010cf399a5e
sw x3, 0(x2) # store 0xb252a010cf399a5e in memory
flw f10, 0(x2) # load 0xb252a010cf399a5e from memory into f10
fmadd.s f28, f31, f7, f10, dyn # perform operation
fmadd.s f28, f31, f7, f10, rdn # perform operation
fmadd.s f28, f31, f7, f10, rmm # perform operation
fmadd.s f28, f31, f7, f10, rne # perform operation
fmadd.s f28, f31, f7, f10, rtz # perform operation
fmadd.s f28, f31, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f31, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f31, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f31, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f31, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f31, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x9f1617af440b51f1 # load x3 with value 0x9f1617af440b51f1
sw x3, 0(x2) # store 0x9f1617af440b51f1 in memory
flw f18, 0(x2) # load 0x9f1617af440b51f1 from memory into f18
fmadd.s f17, f25, f6, f18, dyn # perform operation
fmadd.s f17, f25, f6, f18, rdn # perform operation
fmadd.s f17, f25, f6, f18, rmm # perform operation
fmadd.s f17, f25, f6, f18, rne # perform operation
fmadd.s f17, f25, f6, f18, rtz # perform operation
fmadd.s f17, f25, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x4b513ab76ea169be # load x3 with value 0x4b513ab76ea169be
sw x3, 0(x2) # store 0x4b513ab76ea169be in memory
flw f7, 0(x2) # load 0x4b513ab76ea169be from memory into f7
fmadd.s f11, f16, f29, f7, dyn # perform operation
fmadd.s f11, f16, f29, f7, rdn # perform operation
fmadd.s f11, f16, f29, f7, rmm # perform operation
fmadd.s f11, f16, f29, f7, rne # perform operation
fmadd.s f11, f16, f29, f7, rtz # perform operation
fmadd.s f11, f16, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x52f16cb296ecec74 # load x3 with value 0x52f16cb296ecec74
sw x3, 0(x2) # store 0x52f16cb296ecec74 in memory
flw f1, 0(x2) # load 0x52f16cb296ecec74 from memory into f1
fmadd.s f30, f20, f7, f1, dyn # perform operation
fmadd.s f30, f20, f7, f1, rdn # perform operation
fmadd.s f30, f20, f7, f1, rmm # perform operation
fmadd.s f30, f20, f7, f1, rne # perform operation
fmadd.s f30, f20, f7, f1, rtz # perform operation
fmadd.s f30, f20, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x9d6abce43b3def72 # load x3 with value 0x9d6abce43b3def72
sw x3, 0(x2) # store 0x9d6abce43b3def72 in memory
flw f22, 0(x2) # load 0x9d6abce43b3def72 from memory into f22
fmadd.s f26, f3, f25, f22, dyn # perform operation
fmadd.s f26, f3, f25, f22, rdn # perform operation
fmadd.s f26, f3, f25, f22, rmm # perform operation
fmadd.s f26, f3, f25, f22, rne # perform operation
fmadd.s f26, f3, f25, f22, rtz # perform operation
fmadd.s f26, f3, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x8be1b18315fb866c # load x3 with value 0x8be1b18315fb866c
sw x3, 0(x2) # store 0x8be1b18315fb866c in memory
flw f9, 0(x2) # load 0x8be1b18315fb866c from memory into f9
fmadd.s f7, f24, f14, f9, dyn # perform operation
fmadd.s f7, f24, f14, f9, rdn # perform operation
fmadd.s f7, f24, f14, f9, rmm # perform operation
fmadd.s f7, f24, f14, f9, rne # perform operation
fmadd.s f7, f24, f14, f9, rtz # perform operation
fmadd.s f7, f24, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f24, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xfb1a8b3e207ee459 # load x3 with value 0xfb1a8b3e207ee459
sw x3, 0(x2) # store 0xfb1a8b3e207ee459 in memory
flw f8, 0(x2) # load 0xfb1a8b3e207ee459 from memory into f8
fmadd.s f23, f12, f17, f8, dyn # perform operation
fmadd.s f23, f12, f17, f8, rdn # perform operation
fmadd.s f23, f12, f17, f8, rmm # perform operation
fmadd.s f23, f12, f17, f8, rne # perform operation
fmadd.s f23, f12, f17, f8, rtz # perform operation
fmadd.s f23, f12, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x8befa3eaebd2f388 # load x3 with value 0x8befa3eaebd2f388
sw x3, 0(x2) # store 0x8befa3eaebd2f388 in memory
flw f2, 0(x2) # load 0x8befa3eaebd2f388 from memory into f2
fmadd.s f25, f15, f21, f2, dyn # perform operation
fmadd.s f25, f15, f21, f2, rdn # perform operation
fmadd.s f25, f15, f21, f2, rmm # perform operation
fmadd.s f25, f15, f21, f2, rne # perform operation
fmadd.s f25, f15, f21, f2, rtz # perform operation
fmadd.s f25, f15, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x11ef2d209b0fcbc7 # load x3 with value 0x11ef2d209b0fcbc7
sw x3, 0(x2) # store 0x11ef2d209b0fcbc7 in memory
flw f13, 0(x2) # load 0x11ef2d209b0fcbc7 from memory into f13
fmadd.s f16, f7, f25, f13, dyn # perform operation
fmadd.s f16, f7, f25, f13, rdn # perform operation
fmadd.s f16, f7, f25, f13, rmm # perform operation
fmadd.s f16, f7, f25, f13, rne # perform operation
fmadd.s f16, f7, f25, f13, rtz # perform operation
fmadd.s f16, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f7, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x72c89ed0ae57fe86 # load x3 with value 0x72c89ed0ae57fe86
sw x3, 0(x2) # store 0x72c89ed0ae57fe86 in memory
flw f30, 0(x2) # load 0x72c89ed0ae57fe86 from memory into f30
fmadd.s f22, f5, f20, f30, dyn # perform operation
fmadd.s f22, f5, f20, f30, rdn # perform operation
fmadd.s f22, f5, f20, f30, rmm # perform operation
fmadd.s f22, f5, f20, f30, rne # perform operation
fmadd.s f22, f5, f20, f30, rtz # perform operation
fmadd.s f22, f5, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xde192af1387ae7b2 # load x3 with value 0xde192af1387ae7b2
sw x3, 0(x2) # store 0xde192af1387ae7b2 in memory
flw f2, 0(x2) # load 0xde192af1387ae7b2 from memory into f2
fmadd.s f28, f14, f9, f2, dyn # perform operation
fmadd.s f28, f14, f9, f2, rdn # perform operation
fmadd.s f28, f14, f9, f2, rmm # perform operation
fmadd.s f28, f14, f9, f2, rne # perform operation
fmadd.s f28, f14, f9, f2, rtz # perform operation
fmadd.s f28, f14, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x5d5b340adcb29f95 # load x3 with value 0x5d5b340adcb29f95
sw x3, 0(x2) # store 0x5d5b340adcb29f95 in memory
flw f29, 0(x2) # load 0x5d5b340adcb29f95 from memory into f29
fmadd.s f17, f15, f20, f29, dyn # perform operation
fmadd.s f17, f15, f20, f29, rdn # perform operation
fmadd.s f17, f15, f20, f29, rmm # perform operation
fmadd.s f17, f15, f20, f29, rne # perform operation
fmadd.s f17, f15, f20, f29, rtz # perform operation
fmadd.s f17, f15, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f15, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f15, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f15, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f15, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f15, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x833d18683c6880f6 # load x3 with value 0x833d18683c6880f6
sw x3, 0(x2) # store 0x833d18683c6880f6 in memory
flw f23, 0(x2) # load 0x833d18683c6880f6 from memory into f23
fmadd.s f9, f8, f14, f23, dyn # perform operation
fmadd.s f9, f8, f14, f23, rdn # perform operation
fmadd.s f9, f8, f14, f23, rmm # perform operation
fmadd.s f9, f8, f14, f23, rne # perform operation
fmadd.s f9, f8, f14, f23, rtz # perform operation
fmadd.s f9, f8, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0xfb59d79b3851dc6b # load x3 with value 0xfb59d79b3851dc6b
sw x3, 0(x2) # store 0xfb59d79b3851dc6b in memory
flw f12, 0(x2) # load 0xfb59d79b3851dc6b from memory into f12
fmadd.s f3, f1, f22, f12, dyn # perform operation
fmadd.s f3, f1, f22, f12, rdn # perform operation
fmadd.s f3, f1, f22, f12, rmm # perform operation
fmadd.s f3, f1, f22, f12, rne # perform operation
fmadd.s f3, f1, f22, f12, rtz # perform operation
fmadd.s f3, f1, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x4a6a46f9cb2b2aca # load x3 with value 0x4a6a46f9cb2b2aca
sw x3, 0(x2) # store 0x4a6a46f9cb2b2aca in memory
flw f25, 0(x2) # load 0x4a6a46f9cb2b2aca from memory into f25
fmadd.s f30, f8, f20, f25, dyn # perform operation
fmadd.s f30, f8, f20, f25, rdn # perform operation
fmadd.s f30, f8, f20, f25, rmm # perform operation
fmadd.s f30, f8, f20, f25, rne # perform operation
fmadd.s f30, f8, f20, f25, rtz # perform operation
fmadd.s f30, f8, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x7c77188d649b4be4 # load x3 with value 0x7c77188d649b4be4
sw x3, 0(x2) # store 0x7c77188d649b4be4 in memory
flw f22, 0(x2) # load 0x7c77188d649b4be4 from memory into f22
fmadd.s f24, f28, f23, f22, dyn # perform operation
fmadd.s f24, f28, f23, f22, rdn # perform operation
fmadd.s f24, f28, f23, f22, rmm # perform operation
fmadd.s f24, f28, f23, f22, rne # perform operation
fmadd.s f24, f28, f23, f22, rtz # perform operation
fmadd.s f24, f28, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x10db2a295976e643 # load x3 with value 0x10db2a295976e643
sw x3, 0(x2) # store 0x10db2a295976e643 in memory
flw f27, 0(x2) # load 0x10db2a295976e643 from memory into f27
fmadd.s f6, f1, f3, f27, dyn # perform operation
fmadd.s f6, f1, f3, f27, rdn # perform operation
fmadd.s f6, f1, f3, f27, rmm # perform operation
fmadd.s f6, f1, f3, f27, rne # perform operation
fmadd.s f6, f1, f3, f27, rtz # perform operation
fmadd.s f6, f1, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xe00f3665d5b682fc # load x3 with value 0xe00f3665d5b682fc
sw x3, 0(x2) # store 0xe00f3665d5b682fc in memory
flw f27, 0(x2) # load 0xe00f3665d5b682fc from memory into f27
fmadd.s f5, f12, f10, f27, dyn # perform operation
fmadd.s f5, f12, f10, f27, rdn # perform operation
fmadd.s f5, f12, f10, f27, rmm # perform operation
fmadd.s f5, f12, f10, f27, rne # perform operation
fmadd.s f5, f12, f10, f27, rtz # perform operation
fmadd.s f5, f12, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f12, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f12, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f12, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f12, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f12, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x9a3b24885e70415 # load x3 with value 0x9a3b24885e70415
sw x3, 0(x2) # store 0x9a3b24885e70415 in memory
flw f5, 0(x2) # load 0x9a3b24885e70415 from memory into f5
fmadd.s f6, f11, f13, f5, dyn # perform operation
fmadd.s f6, f11, f13, f5, rdn # perform operation
fmadd.s f6, f11, f13, f5, rmm # perform operation
fmadd.s f6, f11, f13, f5, rne # perform operation
fmadd.s f6, f11, f13, f5, rtz # perform operation
fmadd.s f6, f11, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f11, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x54bd2dda2138345c # load x3 with value 0x54bd2dda2138345c
sw x3, 0(x2) # store 0x54bd2dda2138345c in memory
flw f27, 0(x2) # load 0x54bd2dda2138345c from memory into f27
fmadd.s f2, f12, f20, f27, dyn # perform operation
fmadd.s f2, f12, f20, f27, rdn # perform operation
fmadd.s f2, f12, f20, f27, rmm # perform operation
fmadd.s f2, f12, f20, f27, rne # perform operation
fmadd.s f2, f12, f20, f27, rtz # perform operation
fmadd.s f2, f12, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f12, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f12, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f12, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f12, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f12, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xc8d961053b3afaa7 # load x3 with value 0xc8d961053b3afaa7
sw x3, 0(x2) # store 0xc8d961053b3afaa7 in memory
flw f14, 0(x2) # load 0xc8d961053b3afaa7 from memory into f14
fmadd.s f7, f28, f11, f14, dyn # perform operation
fmadd.s f7, f28, f11, f14, rdn # perform operation
fmadd.s f7, f28, f11, f14, rmm # perform operation
fmadd.s f7, f28, f11, f14, rne # perform operation
fmadd.s f7, f28, f11, f14, rtz # perform operation
fmadd.s f7, f28, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f28, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xc3bbcfe5c40d6d40 # load x3 with value 0xc3bbcfe5c40d6d40
sw x3, 0(x2) # store 0xc3bbcfe5c40d6d40 in memory
flw f11, 0(x2) # load 0xc3bbcfe5c40d6d40 from memory into f11
fmadd.s f12, f27, f22, f11, dyn # perform operation
fmadd.s f12, f27, f22, f11, rdn # perform operation
fmadd.s f12, f27, f22, f11, rmm # perform operation
fmadd.s f12, f27, f22, f11, rne # perform operation
fmadd.s f12, f27, f22, f11, rtz # perform operation
fmadd.s f12, f27, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f27, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xa2193335fea6660d # load x3 with value 0xa2193335fea6660d
sw x3, 0(x2) # store 0xa2193335fea6660d in memory
flw f13, 0(x2) # load 0xa2193335fea6660d from memory into f13
fmadd.s f30, f9, f18, f13, dyn # perform operation
fmadd.s f30, f9, f18, f13, rdn # perform operation
fmadd.s f30, f9, f18, f13, rmm # perform operation
fmadd.s f30, f9, f18, f13, rne # perform operation
fmadd.s f30, f9, f18, f13, rtz # perform operation
fmadd.s f30, f9, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f9, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f9, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xbfc66abb7dcba143 # load x3 with value 0xbfc66abb7dcba143
sw x3, 0(x2) # store 0xbfc66abb7dcba143 in memory
flw f30, 0(x2) # load 0xbfc66abb7dcba143 from memory into f30
fmadd.s f16, f6, f23, f30, dyn # perform operation
fmadd.s f16, f6, f23, f30, rdn # perform operation
fmadd.s f16, f6, f23, f30, rmm # perform operation
fmadd.s f16, f6, f23, f30, rne # perform operation
fmadd.s f16, f6, f23, f30, rtz # perform operation
fmadd.s f16, f6, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f6, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0xf50292dc202b525 # load x3 with value 0xf50292dc202b525
sw x3, 0(x2) # store 0xf50292dc202b525 in memory
flw f28, 0(x2) # load 0xf50292dc202b525 from memory into f28
fmadd.s f17, f8, f21, f28, dyn # perform operation
fmadd.s f17, f8, f21, f28, rdn # perform operation
fmadd.s f17, f8, f21, f28, rmm # perform operation
fmadd.s f17, f8, f21, f28, rne # perform operation
fmadd.s f17, f8, f21, f28, rtz # perform operation
fmadd.s f17, f8, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x9dcc8356df2beb # load x3 with value 0x9dcc8356df2beb
sw x3, 0(x2) # store 0x9dcc8356df2beb in memory
flw f22, 0(x2) # load 0x9dcc8356df2beb from memory into f22
fmadd.s f15, f21, f10, f22, dyn # perform operation
fmadd.s f15, f21, f10, f22, rdn # perform operation
fmadd.s f15, f21, f10, f22, rmm # perform operation
fmadd.s f15, f21, f10, f22, rne # perform operation
fmadd.s f15, f21, f10, f22, rtz # perform operation
fmadd.s f15, f21, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x1b69a94562e44192 # load x3 with value 0x1b69a94562e44192
sw x3, 0(x2) # store 0x1b69a94562e44192 in memory
flw f11, 0(x2) # load 0x1b69a94562e44192 from memory into f11
fmadd.s f26, f28, f25, f11, dyn # perform operation
fmadd.s f26, f28, f25, f11, rdn # perform operation
fmadd.s f26, f28, f25, f11, rmm # perform operation
fmadd.s f26, f28, f25, f11, rne # perform operation
fmadd.s f26, f28, f25, f11, rtz # perform operation
fmadd.s f26, f28, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x1fe8e3a44edc9e07 # load x3 with value 0x1fe8e3a44edc9e07
sw x3, 0(x2) # store 0x1fe8e3a44edc9e07 in memory
flw f5, 0(x2) # load 0x1fe8e3a44edc9e07 from memory into f5
fmadd.s f17, f31, f10, f5, dyn # perform operation
fmadd.s f17, f31, f10, f5, rdn # perform operation
fmadd.s f17, f31, f10, f5, rmm # perform operation
fmadd.s f17, f31, f10, f5, rne # perform operation
fmadd.s f17, f31, f10, f5, rtz # perform operation
fmadd.s f17, f31, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f31, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f31, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x26cae676988885d5 # load x3 with value 0x26cae676988885d5
sw x3, 0(x2) # store 0x26cae676988885d5 in memory
flw f7, 0(x2) # load 0x26cae676988885d5 from memory into f7
fmadd.s f22, f8, f30, f7, dyn # perform operation
fmadd.s f22, f8, f30, f7, rdn # perform operation
fmadd.s f22, f8, f30, f7, rmm # perform operation
fmadd.s f22, f8, f30, f7, rne # perform operation
fmadd.s f22, f8, f30, f7, rtz # perform operation
fmadd.s f22, f8, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x95bc7d172881d7b4 # load x3 with value 0x95bc7d172881d7b4
sw x3, 0(x2) # store 0x95bc7d172881d7b4 in memory
flw f12, 0(x2) # load 0x95bc7d172881d7b4 from memory into f12
fmadd.s f16, f5, f23, f12, dyn # perform operation
fmadd.s f16, f5, f23, f12, rdn # perform operation
fmadd.s f16, f5, f23, f12, rmm # perform operation
fmadd.s f16, f5, f23, f12, rne # perform operation
fmadd.s f16, f5, f23, f12, rtz # perform operation
fmadd.s f16, f5, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0xada523026593893f # load x3 with value 0xada523026593893f
sw x3, 0(x2) # store 0xada523026593893f in memory
flw f3, 0(x2) # load 0xada523026593893f from memory into f3
fmadd.s f20, f26, f28, f3, dyn # perform operation
fmadd.s f20, f26, f28, f3, rdn # perform operation
fmadd.s f20, f26, f28, f3, rmm # perform operation
fmadd.s f20, f26, f28, f3, rne # perform operation
fmadd.s f20, f26, f28, f3, rtz # perform operation
fmadd.s f20, f26, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x1175af2a92b5aca3 # load x3 with value 0x1175af2a92b5aca3
sw x3, 0(x2) # store 0x1175af2a92b5aca3 in memory
flw f19, 0(x2) # load 0x1175af2a92b5aca3 from memory into f19
fmadd.s f11, f24, f16, f19, dyn # perform operation
fmadd.s f11, f24, f16, f19, rdn # perform operation
fmadd.s f11, f24, f16, f19, rmm # perform operation
fmadd.s f11, f24, f16, f19, rne # perform operation
fmadd.s f11, f24, f16, f19, rtz # perform operation
fmadd.s f11, f24, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x8c2d9567695fb060 # load x3 with value 0x8c2d9567695fb060
sw x3, 0(x2) # store 0x8c2d9567695fb060 in memory
flw f25, 0(x2) # load 0x8c2d9567695fb060 from memory into f25
fmadd.s f16, f5, f14, f25, dyn # perform operation
fmadd.s f16, f5, f14, f25, rdn # perform operation
fmadd.s f16, f5, f14, f25, rmm # perform operation
fmadd.s f16, f5, f14, f25, rne # perform operation
fmadd.s f16, f5, f14, f25, rtz # perform operation
fmadd.s f16, f5, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f14, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x3daf2e1906bd5f4d # load x3 with value 0x3daf2e1906bd5f4d
sw x3, 0(x2) # store 0x3daf2e1906bd5f4d in memory
flw f23, 0(x2) # load 0x3daf2e1906bd5f4d from memory into f23
fmadd.s f8, f21, f24, f23, dyn # perform operation
fmadd.s f8, f21, f24, f23, rdn # perform operation
fmadd.s f8, f21, f24, f23, rmm # perform operation
fmadd.s f8, f21, f24, f23, rne # perform operation
fmadd.s f8, f21, f24, f23, rtz # perform operation
fmadd.s f8, f21, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xa2b46cecdd402b72 # load x3 with value 0xa2b46cecdd402b72
sw x3, 0(x2) # store 0xa2b46cecdd402b72 in memory
flw f25, 0(x2) # load 0xa2b46cecdd402b72 from memory into f25
fmadd.s f2, f5, f27, f25, dyn # perform operation
fmadd.s f2, f5, f27, f25, rdn # perform operation
fmadd.s f2, f5, f27, f25, rmm # perform operation
fmadd.s f2, f5, f27, f25, rne # perform operation
fmadd.s f2, f5, f27, f25, rtz # perform operation
fmadd.s f2, f5, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xe3604346a1dfe8fd # load x3 with value 0xe3604346a1dfe8fd
sw x3, 0(x2) # store 0xe3604346a1dfe8fd in memory
flw f29, 0(x2) # load 0xe3604346a1dfe8fd from memory into f29
fmadd.s f2, f27, f1, f29, dyn # perform operation
fmadd.s f2, f27, f1, f29, rdn # perform operation
fmadd.s f2, f27, f1, f29, rmm # perform operation
fmadd.s f2, f27, f1, f29, rne # perform operation
fmadd.s f2, f27, f1, f29, rtz # perform operation
fmadd.s f2, f27, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xb5817fa597060a29 # load x3 with value 0xb5817fa597060a29
sw x3, 0(x2) # store 0xb5817fa597060a29 in memory
flw f8, 0(x2) # load 0xb5817fa597060a29 from memory into f8
fmadd.s f3, f22, f20, f8, dyn # perform operation
fmadd.s f3, f22, f20, f8, rdn # perform operation
fmadd.s f3, f22, f20, f8, rmm # perform operation
fmadd.s f3, f22, f20, f8, rne # perform operation
fmadd.s f3, f22, f20, f8, rtz # perform operation
fmadd.s f3, f22, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f22, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f22, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f22, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f22, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f22, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x33a1e085cfc0d092 # load x3 with value 0x33a1e085cfc0d092
sw x3, 0(x2) # store 0x33a1e085cfc0d092 in memory
flw f21, 0(x2) # load 0x33a1e085cfc0d092 from memory into f21
fmadd.s f28, f8, f3, f21, dyn # perform operation
fmadd.s f28, f8, f3, f21, rdn # perform operation
fmadd.s f28, f8, f3, f21, rmm # perform operation
fmadd.s f28, f8, f3, f21, rne # perform operation
fmadd.s f28, f8, f3, f21, rtz # perform operation
fmadd.s f28, f8, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x16d7800bb9d4e54 # load x3 with value 0x16d7800bb9d4e54
sw x3, 0(x2) # store 0x16d7800bb9d4e54 in memory
flw f2, 0(x2) # load 0x16d7800bb9d4e54 from memory into f2
fmadd.s f7, f9, f8, f2, dyn # perform operation
fmadd.s f7, f9, f8, f2, rdn # perform operation
fmadd.s f7, f9, f8, f2, rmm # perform operation
fmadd.s f7, f9, f8, f2, rne # perform operation
fmadd.s f7, f9, f8, f2, rtz # perform operation
fmadd.s f7, f9, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x531606b279b93904 # load x3 with value 0x531606b279b93904
sw x3, 0(x2) # store 0x531606b279b93904 in memory
flw f29, 0(x2) # load 0x531606b279b93904 from memory into f29
fmadd.s f14, f9, f22, f29, dyn # perform operation
fmadd.s f14, f9, f22, f29, rdn # perform operation
fmadd.s f14, f9, f22, f29, rmm # perform operation
fmadd.s f14, f9, f22, f29, rne # perform operation
fmadd.s f14, f9, f22, f29, rtz # perform operation
fmadd.s f14, f9, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xfe5c7be4d90b978d # load x3 with value 0xfe5c7be4d90b978d
sw x3, 0(x2) # store 0xfe5c7be4d90b978d in memory
flw f19, 0(x2) # load 0xfe5c7be4d90b978d from memory into f19
fmadd.s f7, f12, f1, f19, dyn # perform operation
fmadd.s f7, f12, f1, f19, rdn # perform operation
fmadd.s f7, f12, f1, f19, rmm # perform operation
fmadd.s f7, f12, f1, f19, rne # perform operation
fmadd.s f7, f12, f1, f19, rtz # perform operation
fmadd.s f7, f12, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x4e6f2410d12eff56 # load x3 with value 0x4e6f2410d12eff56
sw x3, 0(x2) # store 0x4e6f2410d12eff56 in memory
flw f30, 0(x2) # load 0x4e6f2410d12eff56 from memory into f30
fmadd.s f5, f31, f27, f30, dyn # perform operation
fmadd.s f5, f31, f27, f30, rdn # perform operation
fmadd.s f5, f31, f27, f30, rmm # perform operation
fmadd.s f5, f31, f27, f30, rne # perform operation
fmadd.s f5, f31, f27, f30, rtz # perform operation
fmadd.s f5, f31, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f31, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xab2ac0f95466d924 # load x3 with value 0xab2ac0f95466d924
sw x3, 0(x2) # store 0xab2ac0f95466d924 in memory
flw f2, 0(x2) # load 0xab2ac0f95466d924 from memory into f2
fmadd.s f22, f27, f20, f2, dyn # perform operation
fmadd.s f22, f27, f20, f2, rdn # perform operation
fmadd.s f22, f27, f20, f2, rmm # perform operation
fmadd.s f22, f27, f20, f2, rne # perform operation
fmadd.s f22, f27, f20, f2, rtz # perform operation
fmadd.s f22, f27, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f27, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f27, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x9148505472f74009 # load x3 with value 0x9148505472f74009
sw x3, 0(x2) # store 0x9148505472f74009 in memory
flw f22, 0(x2) # load 0x9148505472f74009 from memory into f22
fmadd.s f13, f23, f2, f22, dyn # perform operation
fmadd.s f13, f23, f2, f22, rdn # perform operation
fmadd.s f13, f23, f2, f22, rmm # perform operation
fmadd.s f13, f23, f2, f22, rne # perform operation
fmadd.s f13, f23, f2, f22, rtz # perform operation
fmadd.s f13, f23, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f23, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xb27339c8e6319f72 # load x3 with value 0xb27339c8e6319f72
sw x3, 0(x2) # store 0xb27339c8e6319f72 in memory
flw f25, 0(x2) # load 0xb27339c8e6319f72 from memory into f25
fmadd.s f9, f15, f27, f25, dyn # perform operation
fmadd.s f9, f15, f27, f25, rdn # perform operation
fmadd.s f9, f15, f27, f25, rmm # perform operation
fmadd.s f9, f15, f27, f25, rne # perform operation
fmadd.s f9, f15, f27, f25, rtz # perform operation
fmadd.s f9, f15, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x8cc7249b30df6810 # load x3 with value 0x8cc7249b30df6810
sw x3, 0(x2) # store 0x8cc7249b30df6810 in memory
flw f20, 0(x2) # load 0x8cc7249b30df6810 from memory into f20
fmadd.s f9, f15, f6, f20, dyn # perform operation
fmadd.s f9, f15, f6, f20, rdn # perform operation
fmadd.s f9, f15, f6, f20, rmm # perform operation
fmadd.s f9, f15, f6, f20, rne # perform operation
fmadd.s f9, f15, f6, f20, rtz # perform operation
fmadd.s f9, f15, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0xd6fafd45787abc7e # load x3 with value 0xd6fafd45787abc7e
sw x3, 0(x2) # store 0xd6fafd45787abc7e in memory
flw f26, 0(x2) # load 0xd6fafd45787abc7e from memory into f26
fmadd.s f23, f5, f8, f26, dyn # perform operation
fmadd.s f23, f5, f8, f26, rdn # perform operation
fmadd.s f23, f5, f8, f26, rmm # perform operation
fmadd.s f23, f5, f8, f26, rne # perform operation
fmadd.s f23, f5, f8, f26, rtz # perform operation
fmadd.s f23, f5, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xcef57439458c0fbc # load x3 with value 0xcef57439458c0fbc
sw x3, 0(x2) # store 0xcef57439458c0fbc in memory
flw f30, 0(x2) # load 0xcef57439458c0fbc from memory into f30
fmadd.s f13, f24, f29, f30, dyn # perform operation
fmadd.s f13, f24, f29, f30, rdn # perform operation
fmadd.s f13, f24, f29, f30, rmm # perform operation
fmadd.s f13, f24, f29, f30, rne # perform operation
fmadd.s f13, f24, f29, f30, rtz # perform operation
fmadd.s f13, f24, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f24, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xf6dfb4b4fa8a33de # load x3 with value 0xf6dfb4b4fa8a33de
sw x3, 0(x2) # store 0xf6dfb4b4fa8a33de in memory
flw f31, 0(x2) # load 0xf6dfb4b4fa8a33de from memory into f31
fmadd.s f3, f13, f19, f31, dyn # perform operation
fmadd.s f3, f13, f19, f31, rdn # perform operation
fmadd.s f3, f13, f19, f31, rmm # perform operation
fmadd.s f3, f13, f19, f31, rne # perform operation
fmadd.s f3, f13, f19, f31, rtz # perform operation
fmadd.s f3, f13, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x5f2d4f5b90482550 # load x3 with value 0x5f2d4f5b90482550
sw x3, 0(x2) # store 0x5f2d4f5b90482550 in memory
flw f14, 0(x2) # load 0x5f2d4f5b90482550 from memory into f14
fmadd.s f6, f29, f31, f14, dyn # perform operation
fmadd.s f6, f29, f31, f14, rdn # perform operation
fmadd.s f6, f29, f31, f14, rmm # perform operation
fmadd.s f6, f29, f31, f14, rne # perform operation
fmadd.s f6, f29, f31, f14, rtz # perform operation
fmadd.s f6, f29, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x9645a7e522af2505 # load x3 with value 0x9645a7e522af2505
sw x3, 0(x2) # store 0x9645a7e522af2505 in memory
flw f10, 0(x2) # load 0x9645a7e522af2505 from memory into f10
fmadd.s f8, f11, f18, f10, dyn # perform operation
fmadd.s f8, f11, f18, f10, rdn # perform operation
fmadd.s f8, f11, f18, f10, rmm # perform operation
fmadd.s f8, f11, f18, f10, rne # perform operation
fmadd.s f8, f11, f18, f10, rtz # perform operation
fmadd.s f8, f11, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xeda2dc24224b2e8b # load x3 with value 0xeda2dc24224b2e8b
sw x3, 0(x2) # store 0xeda2dc24224b2e8b in memory
flw f1, 0(x2) # load 0xeda2dc24224b2e8b from memory into f1
fmadd.s f5, f29, f20, f1, dyn # perform operation
fmadd.s f5, f29, f20, f1, rdn # perform operation
fmadd.s f5, f29, f20, f1, rmm # perform operation
fmadd.s f5, f29, f20, f1, rne # perform operation
fmadd.s f5, f29, f20, f1, rtz # perform operation
fmadd.s f5, f29, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xdb912ced67979a14 # load x3 with value 0xdb912ced67979a14
sw x3, 0(x2) # store 0xdb912ced67979a14 in memory
flw f11, 0(x2) # load 0xdb912ced67979a14 from memory into f11
fmadd.s f10, f17, f25, f11, dyn # perform operation
fmadd.s f10, f17, f25, f11, rdn # perform operation
fmadd.s f10, f17, f25, f11, rmm # perform operation
fmadd.s f10, f17, f25, f11, rne # perform operation
fmadd.s f10, f17, f25, f11, rtz # perform operation
fmadd.s f10, f17, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x1a5949977c85e78a # load x3 with value 0x1a5949977c85e78a
sw x3, 0(x2) # store 0x1a5949977c85e78a in memory
flw f2, 0(x2) # load 0x1a5949977c85e78a from memory into f2
fmadd.s f10, f7, f19, f2, dyn # perform operation
fmadd.s f10, f7, f19, f2, rdn # perform operation
fmadd.s f10, f7, f19, f2, rmm # perform operation
fmadd.s f10, f7, f19, f2, rne # perform operation
fmadd.s f10, f7, f19, f2, rtz # perform operation
fmadd.s f10, f7, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x78fc947d39bb0231 # load x3 with value 0x78fc947d39bb0231
sw x3, 0(x2) # store 0x78fc947d39bb0231 in memory
flw f24, 0(x2) # load 0x78fc947d39bb0231 from memory into f24
fmadd.s f20, f18, f23, f24, dyn # perform operation
fmadd.s f20, f18, f23, f24, rdn # perform operation
fmadd.s f20, f18, f23, f24, rmm # perform operation
fmadd.s f20, f18, f23, f24, rne # perform operation
fmadd.s f20, f18, f23, f24, rtz # perform operation
fmadd.s f20, f18, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x2c94169b2b61f16d # load x3 with value 0x2c94169b2b61f16d
sw x3, 0(x2) # store 0x2c94169b2b61f16d in memory
flw f20, 0(x2) # load 0x2c94169b2b61f16d from memory into f20
fmadd.s f28, f24, f29, f20, dyn # perform operation
fmadd.s f28, f24, f29, f20, rdn # perform operation
fmadd.s f28, f24, f29, f20, rmm # perform operation
fmadd.s f28, f24, f29, f20, rne # perform operation
fmadd.s f28, f24, f29, f20, rtz # perform operation
fmadd.s f28, f24, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x5f611e81b15a29ad # load x3 with value 0x5f611e81b15a29ad
sw x3, 0(x2) # store 0x5f611e81b15a29ad in memory
flw f19, 0(x2) # load 0x5f611e81b15a29ad from memory into f19
fmadd.s f13, f15, f20, f19, dyn # perform operation
fmadd.s f13, f15, f20, f19, rdn # perform operation
fmadd.s f13, f15, f20, f19, rmm # perform operation
fmadd.s f13, f15, f20, f19, rne # perform operation
fmadd.s f13, f15, f20, f19, rtz # perform operation
fmadd.s f13, f15, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f15, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f15, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x9f917ae9428eb87e # load x3 with value 0x9f917ae9428eb87e
sw x3, 0(x2) # store 0x9f917ae9428eb87e in memory
flw f12, 0(x2) # load 0x9f917ae9428eb87e from memory into f12
fmadd.s f2, f24, f14, f12, dyn # perform operation
fmadd.s f2, f24, f14, f12, rdn # perform operation
fmadd.s f2, f24, f14, f12, rmm # perform operation
fmadd.s f2, f24, f14, f12, rne # perform operation
fmadd.s f2, f24, f14, f12, rtz # perform operation
fmadd.s f2, f24, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f24, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f24, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0xd9f5b64f424f93e2 # load x3 with value 0xd9f5b64f424f93e2
sw x3, 0(x2) # store 0xd9f5b64f424f93e2 in memory
flw f8, 0(x2) # load 0xd9f5b64f424f93e2 from memory into f8
fmadd.s f16, f21, f12, f8, dyn # perform operation
fmadd.s f16, f21, f12, f8, rdn # perform operation
fmadd.s f16, f21, f12, f8, rmm # perform operation
fmadd.s f16, f21, f12, f8, rne # perform operation
fmadd.s f16, f21, f12, f8, rtz # perform operation
fmadd.s f16, f21, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x86c7b9702c080c17 # load x3 with value 0x86c7b9702c080c17
sw x3, 0(x2) # store 0x86c7b9702c080c17 in memory
flw f22, 0(x2) # load 0x86c7b9702c080c17 from memory into f22
fmadd.s f21, f15, f17, f22, dyn # perform operation
fmadd.s f21, f15, f17, f22, rdn # perform operation
fmadd.s f21, f15, f17, f22, rmm # perform operation
fmadd.s f21, f15, f17, f22, rne # perform operation
fmadd.s f21, f15, f17, f22, rtz # perform operation
fmadd.s f21, f15, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f15, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xbafeed5ef759d842 # load x3 with value 0xbafeed5ef759d842
sw x3, 0(x2) # store 0xbafeed5ef759d842 in memory
flw f10, 0(x2) # load 0xbafeed5ef759d842 from memory into f10
fmadd.s f31, f9, f19, f10, dyn # perform operation
fmadd.s f31, f9, f19, f10, rdn # perform operation
fmadd.s f31, f9, f19, f10, rmm # perform operation
fmadd.s f31, f9, f19, f10, rne # perform operation
fmadd.s f31, f9, f19, f10, rtz # perform operation
fmadd.s f31, f9, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xc6db346436c9d6a1 # load x3 with value 0xc6db346436c9d6a1
sw x3, 0(x2) # store 0xc6db346436c9d6a1 in memory
flw f13, 0(x2) # load 0xc6db346436c9d6a1 from memory into f13
fmadd.s f19, f7, f11, f13, dyn # perform operation
fmadd.s f19, f7, f11, f13, rdn # perform operation
fmadd.s f19, f7, f11, f13, rmm # perform operation
fmadd.s f19, f7, f11, f13, rne # perform operation
fmadd.s f19, f7, f11, f13, rtz # perform operation
fmadd.s f19, f7, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x856481a7b18e7a30 # load x3 with value 0x856481a7b18e7a30
sw x3, 0(x2) # store 0x856481a7b18e7a30 in memory
flw f22, 0(x2) # load 0x856481a7b18e7a30 from memory into f22
fmadd.s f10, f5, f9, f22, dyn # perform operation
fmadd.s f10, f5, f9, f22, rdn # perform operation
fmadd.s f10, f5, f9, f22, rmm # perform operation
fmadd.s f10, f5, f9, f22, rne # perform operation
fmadd.s f10, f5, f9, f22, rtz # perform operation
fmadd.s f10, f5, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f5, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f5, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x6e37fafd6031cd1a # load x3 with value 0x6e37fafd6031cd1a
sw x3, 0(x2) # store 0x6e37fafd6031cd1a in memory
flw f19, 0(x2) # load 0x6e37fafd6031cd1a from memory into f19
fmadd.s f28, f3, f31, f19, dyn # perform operation
fmadd.s f28, f3, f31, f19, rdn # perform operation
fmadd.s f28, f3, f31, f19, rmm # perform operation
fmadd.s f28, f3, f31, f19, rne # perform operation
fmadd.s f28, f3, f31, f19, rtz # perform operation
fmadd.s f28, f3, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xdb4a0dbb5c4800b # load x3 with value 0xdb4a0dbb5c4800b
sw x3, 0(x2) # store 0xdb4a0dbb5c4800b in memory
flw f30, 0(x2) # load 0xdb4a0dbb5c4800b from memory into f30
fmadd.s f28, f20, f24, f30, dyn # perform operation
fmadd.s f28, f20, f24, f30, rdn # perform operation
fmadd.s f28, f20, f24, f30, rmm # perform operation
fmadd.s f28, f20, f24, f30, rne # perform operation
fmadd.s f28, f20, f24, f30, rtz # perform operation
fmadd.s f28, f20, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x8b7889d9e9b1d9d3 # load x3 with value 0x8b7889d9e9b1d9d3
sw x3, 0(x2) # store 0x8b7889d9e9b1d9d3 in memory
flw f27, 0(x2) # load 0x8b7889d9e9b1d9d3 from memory into f27
fmadd.s f6, f20, f9, f27, dyn # perform operation
fmadd.s f6, f20, f9, f27, rdn # perform operation
fmadd.s f6, f20, f9, f27, rmm # perform operation
fmadd.s f6, f20, f9, f27, rne # perform operation
fmadd.s f6, f20, f9, f27, rtz # perform operation
fmadd.s f6, f20, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xd68595267b4dda9b # load x3 with value 0xd68595267b4dda9b
sw x3, 0(x2) # store 0xd68595267b4dda9b in memory
flw f13, 0(x2) # load 0xd68595267b4dda9b from memory into f13
fmadd.s f7, f11, f16, f13, dyn # perform operation
fmadd.s f7, f11, f16, f13, rdn # perform operation
fmadd.s f7, f11, f16, f13, rmm # perform operation
fmadd.s f7, f11, f16, f13, rne # perform operation
fmadd.s f7, f11, f16, f13, rtz # perform operation
fmadd.s f7, f11, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x2db3288cc4aa8ced # load x3 with value 0x2db3288cc4aa8ced
sw x3, 0(x2) # store 0x2db3288cc4aa8ced in memory
flw f24, 0(x2) # load 0x2db3288cc4aa8ced from memory into f24
fmadd.s f2, f6, f11, f24, dyn # perform operation
fmadd.s f2, f6, f11, f24, rdn # perform operation
fmadd.s f2, f6, f11, f24, rmm # perform operation
fmadd.s f2, f6, f11, f24, rne # perform operation
fmadd.s f2, f6, f11, f24, rtz # perform operation
fmadd.s f2, f6, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f6, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f6, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f6, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f6, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f6, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x932ac28f5e681785 # load x3 with value 0x932ac28f5e681785
sw x3, 0(x2) # store 0x932ac28f5e681785 in memory
flw f15, 0(x2) # load 0x932ac28f5e681785 from memory into f15
fmadd.s f27, f26, f21, f15, dyn # perform operation
fmadd.s f27, f26, f21, f15, rdn # perform operation
fmadd.s f27, f26, f21, f15, rmm # perform operation
fmadd.s f27, f26, f21, f15, rne # perform operation
fmadd.s f27, f26, f21, f15, rtz # perform operation
fmadd.s f27, f26, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x3e24167c2f791de0 # load x3 with value 0x3e24167c2f791de0
sw x3, 0(x2) # store 0x3e24167c2f791de0 in memory
flw f5, 0(x2) # load 0x3e24167c2f791de0 from memory into f5
fmadd.s f18, f25, f16, f5, dyn # perform operation
fmadd.s f18, f25, f16, f5, rdn # perform operation
fmadd.s f18, f25, f16, f5, rmm # perform operation
fmadd.s f18, f25, f16, f5, rne # perform operation
fmadd.s f18, f25, f16, f5, rtz # perform operation
fmadd.s f18, f25, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x321ab8136bef04c5 # load x3 with value 0x321ab8136bef04c5
sw x3, 0(x2) # store 0x321ab8136bef04c5 in memory
flw f14, 0(x2) # load 0x321ab8136bef04c5 from memory into f14
fmadd.s f6, f11, f30, f14, dyn # perform operation
fmadd.s f6, f11, f30, f14, rdn # perform operation
fmadd.s f6, f11, f30, f14, rmm # perform operation
fmadd.s f6, f11, f30, f14, rne # perform operation
fmadd.s f6, f11, f30, f14, rtz # perform operation
fmadd.s f6, f11, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f11, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f11, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f11, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f11, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f11, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x1a818e9a27525d2 # load x3 with value 0x1a818e9a27525d2
sw x3, 0(x2) # store 0x1a818e9a27525d2 in memory
flw f11, 0(x2) # load 0x1a818e9a27525d2 from memory into f11
fmadd.s f28, f9, f25, f11, dyn # perform operation
fmadd.s f28, f9, f25, f11, rdn # perform operation
fmadd.s f28, f9, f25, f11, rmm # perform operation
fmadd.s f28, f9, f25, f11, rne # perform operation
fmadd.s f28, f9, f25, f11, rtz # perform operation
fmadd.s f28, f9, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xc923dbadbbd4986e # load x3 with value 0xc923dbadbbd4986e
sw x3, 0(x2) # store 0xc923dbadbbd4986e in memory
flw f31, 0(x2) # load 0xc923dbadbbd4986e from memory into f31
fmadd.s f18, f16, f9, f31, dyn # perform operation
fmadd.s f18, f16, f9, f31, rdn # perform operation
fmadd.s f18, f16, f9, f31, rmm # perform operation
fmadd.s f18, f16, f9, f31, rne # perform operation
fmadd.s f18, f16, f9, f31, rtz # perform operation
fmadd.s f18, f16, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x696ac9b02d3bc4f4 # load x3 with value 0x696ac9b02d3bc4f4
sw x3, 0(x2) # store 0x696ac9b02d3bc4f4 in memory
flw f28, 0(x2) # load 0x696ac9b02d3bc4f4 from memory into f28
fmadd.s f17, f2, f19, f28, dyn # perform operation
fmadd.s f17, f2, f19, f28, rdn # perform operation
fmadd.s f17, f2, f19, f28, rmm # perform operation
fmadd.s f17, f2, f19, f28, rne # perform operation
fmadd.s f17, f2, f19, f28, rtz # perform operation
fmadd.s f17, f2, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xd5dc4a600cfeb011 # load x3 with value 0xd5dc4a600cfeb011
sw x3, 0(x2) # store 0xd5dc4a600cfeb011 in memory
flw f14, 0(x2) # load 0xd5dc4a600cfeb011 from memory into f14
fmadd.s f9, f27, f18, f14, dyn # perform operation
fmadd.s f9, f27, f18, f14, rdn # perform operation
fmadd.s f9, f27, f18, f14, rmm # perform operation
fmadd.s f9, f27, f18, f14, rne # perform operation
fmadd.s f9, f27, f18, f14, rtz # perform operation
fmadd.s f9, f27, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xdd8a5a1bfbd3e0e9 # load x3 with value 0xdd8a5a1bfbd3e0e9
sw x3, 0(x2) # store 0xdd8a5a1bfbd3e0e9 in memory
flw f24, 0(x2) # load 0xdd8a5a1bfbd3e0e9 from memory into f24
fmadd.s f11, f16, f31, f24, dyn # perform operation
fmadd.s f11, f16, f31, f24, rdn # perform operation
fmadd.s f11, f16, f31, f24, rmm # perform operation
fmadd.s f11, f16, f31, f24, rne # perform operation
fmadd.s f11, f16, f31, f24, rtz # perform operation
fmadd.s f11, f16, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xd15c0822017301c8 # load x3 with value 0xd15c0822017301c8
sw x3, 0(x2) # store 0xd15c0822017301c8 in memory
flw f10, 0(x2) # load 0xd15c0822017301c8 from memory into f10
fmadd.s f7, f1, f13, f10, dyn # perform operation
fmadd.s f7, f1, f13, f10, rdn # perform operation
fmadd.s f7, f1, f13, f10, rmm # perform operation
fmadd.s f7, f1, f13, f10, rne # perform operation
fmadd.s f7, f1, f13, f10, rtz # perform operation
fmadd.s f7, f1, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x9b0691bdf592dedd # load x3 with value 0x9b0691bdf592dedd
sw x3, 0(x2) # store 0x9b0691bdf592dedd in memory
flw f11, 0(x2) # load 0x9b0691bdf592dedd from memory into f11
fmadd.s f22, f19, f5, f11, dyn # perform operation
fmadd.s f22, f19, f5, f11, rdn # perform operation
fmadd.s f22, f19, f5, f11, rmm # perform operation
fmadd.s f22, f19, f5, f11, rne # perform operation
fmadd.s f22, f19, f5, f11, rtz # perform operation
fmadd.s f22, f19, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x860d1cededf579a9 # load x3 with value 0x860d1cededf579a9
sw x3, 0(x2) # store 0x860d1cededf579a9 in memory
flw f15, 0(x2) # load 0x860d1cededf579a9 from memory into f15
fmadd.s f11, f16, f25, f15, dyn # perform operation
fmadd.s f11, f16, f25, f15, rdn # perform operation
fmadd.s f11, f16, f25, f15, rmm # perform operation
fmadd.s f11, f16, f25, f15, rne # perform operation
fmadd.s f11, f16, f25, f15, rtz # perform operation
fmadd.s f11, f16, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xf4798826f7d9ec72 # load x3 with value 0xf4798826f7d9ec72
sw x3, 0(x2) # store 0xf4798826f7d9ec72 in memory
flw f7, 0(x2) # load 0xf4798826f7d9ec72 from memory into f7
fmadd.s f17, f3, f21, f7, dyn # perform operation
fmadd.s f17, f3, f21, f7, rdn # perform operation
fmadd.s f17, f3, f21, f7, rmm # perform operation
fmadd.s f17, f3, f21, f7, rne # perform operation
fmadd.s f17, f3, f21, f7, rtz # perform operation
fmadd.s f17, f3, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0xb755d90bca9d6d2a # load x3 with value 0xb755d90bca9d6d2a
sw x3, 0(x2) # store 0xb755d90bca9d6d2a in memory
flw f27, 0(x2) # load 0xb755d90bca9d6d2a from memory into f27
fmadd.s f1, f28, f20, f27, dyn # perform operation
fmadd.s f1, f28, f20, f27, rdn # perform operation
fmadd.s f1, f28, f20, f27, rmm # perform operation
fmadd.s f1, f28, f20, f27, rne # perform operation
fmadd.s f1, f28, f20, f27, rtz # perform operation
fmadd.s f1, f28, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xfc855be74174d48f # load x3 with value 0xfc855be74174d48f
sw x3, 0(x2) # store 0xfc855be74174d48f in memory
flw f11, 0(x2) # load 0xfc855be74174d48f from memory into f11
fmadd.s f25, f15, f1, f11, dyn # perform operation
fmadd.s f25, f15, f1, f11, rdn # perform operation
fmadd.s f25, f15, f1, f11, rmm # perform operation
fmadd.s f25, f15, f1, f11, rne # perform operation
fmadd.s f25, f15, f1, f11, rtz # perform operation
fmadd.s f25, f15, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0x6e4583a08cfc6089 # load x3 with value 0x6e4583a08cfc6089
sw x3, 0(x2) # store 0x6e4583a08cfc6089 in memory
flw f15, 0(x2) # load 0x6e4583a08cfc6089 from memory into f15
fmadd.s f6, f19, f1, f15, dyn # perform operation
fmadd.s f6, f19, f1, f15, rdn # perform operation
fmadd.s f6, f19, f1, f15, rmm # perform operation
fmadd.s f6, f19, f1, f15, rne # perform operation
fmadd.s f6, f19, f1, f15, rtz # perform operation
fmadd.s f6, f19, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x88ad3e0f8b4dde69 # load x3 with value 0x88ad3e0f8b4dde69
sw x3, 0(x2) # store 0x88ad3e0f8b4dde69 in memory
flw f16, 0(x2) # load 0x88ad3e0f8b4dde69 from memory into f16
fmadd.s f17, f7, f18, f16, dyn # perform operation
fmadd.s f17, f7, f18, f16, rdn # perform operation
fmadd.s f17, f7, f18, f16, rmm # perform operation
fmadd.s f17, f7, f18, f16, rne # perform operation
fmadd.s f17, f7, f18, f16, rtz # perform operation
fmadd.s f17, f7, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f7, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x3227f0fc5d15e412 # load x3 with value 0x3227f0fc5d15e412
sw x3, 0(x2) # store 0x3227f0fc5d15e412 in memory
flw f23, 0(x2) # load 0x3227f0fc5d15e412 from memory into f23
fmadd.s f24, f19, f28, f23, dyn # perform operation
fmadd.s f24, f19, f28, f23, rdn # perform operation
fmadd.s f24, f19, f28, f23, rmm # perform operation
fmadd.s f24, f19, f28, f23, rne # perform operation
fmadd.s f24, f19, f28, f23, rtz # perform operation
fmadd.s f24, f19, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xf1075d2d8aa63e35 # load x3 with value 0xf1075d2d8aa63e35
sw x3, 0(x2) # store 0xf1075d2d8aa63e35 in memory
flw f8, 0(x2) # load 0xf1075d2d8aa63e35 from memory into f8
fmadd.s f13, f6, f12, f8, dyn # perform operation
fmadd.s f13, f6, f12, f8, rdn # perform operation
fmadd.s f13, f6, f12, f8, rmm # perform operation
fmadd.s f13, f6, f12, f8, rne # perform operation
fmadd.s f13, f6, f12, f8, rtz # perform operation
fmadd.s f13, f6, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xf17dcb344a6698a4 # load x3 with value 0xf17dcb344a6698a4
sw x3, 0(x2) # store 0xf17dcb344a6698a4 in memory
flw f21, 0(x2) # load 0xf17dcb344a6698a4 from memory into f21
fmadd.s f30, f15, f24, f21, dyn # perform operation
fmadd.s f30, f15, f24, f21, rdn # perform operation
fmadd.s f30, f15, f24, f21, rmm # perform operation
fmadd.s f30, f15, f24, f21, rne # perform operation
fmadd.s f30, f15, f24, f21, rtz # perform operation
fmadd.s f30, f15, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f15, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0xefaf599d9577e50d # load x3 with value 0xefaf599d9577e50d
sw x3, 0(x2) # store 0xefaf599d9577e50d in memory
flw f29, 0(x2) # load 0xefaf599d9577e50d from memory into f29
fmadd.s f18, f7, f10, f29, dyn # perform operation
fmadd.s f18, f7, f10, f29, rdn # perform operation
fmadd.s f18, f7, f10, f29, rmm # perform operation
fmadd.s f18, f7, f10, f29, rne # perform operation
fmadd.s f18, f7, f10, f29, rtz # perform operation
fmadd.s f18, f7, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xb35a51822af9d653 # load x3 with value 0xb35a51822af9d653
sw x3, 0(x2) # store 0xb35a51822af9d653 in memory
flw f2, 0(x2) # load 0xb35a51822af9d653 from memory into f2
fmadd.s f8, f17, f14, f2, dyn # perform operation
fmadd.s f8, f17, f14, f2, rdn # perform operation
fmadd.s f8, f17, f14, f2, rmm # perform operation
fmadd.s f8, f17, f14, f2, rne # perform operation
fmadd.s f8, f17, f14, f2, rtz # perform operation
fmadd.s f8, f17, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f17, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xd4b0da69be4ec8bc # load x3 with value 0xd4b0da69be4ec8bc
sw x3, 0(x2) # store 0xd4b0da69be4ec8bc in memory
flw f17, 0(x2) # load 0xd4b0da69be4ec8bc from memory into f17
fmadd.s f14, f27, f16, f17, dyn # perform operation
fmadd.s f14, f27, f16, f17, rdn # perform operation
fmadd.s f14, f27, f16, f17, rmm # perform operation
fmadd.s f14, f27, f16, f17, rne # perform operation
fmadd.s f14, f27, f16, f17, rtz # perform operation
fmadd.s f14, f27, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f27, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f27, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xb09d5f9e3a35c62e # load x3 with value 0xb09d5f9e3a35c62e
sw x3, 0(x2) # store 0xb09d5f9e3a35c62e in memory
flw f16, 0(x2) # load 0xb09d5f9e3a35c62e from memory into f16
fmadd.s f2, f21, f8, f16, dyn # perform operation
fmadd.s f2, f21, f8, f16, rdn # perform operation
fmadd.s f2, f21, f8, f16, rmm # perform operation
fmadd.s f2, f21, f8, f16, rne # perform operation
fmadd.s f2, f21, f8, f16, rtz # perform operation
fmadd.s f2, f21, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f8, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x4556f1447f52aac0 # load x3 with value 0x4556f1447f52aac0
sw x3, 0(x2) # store 0x4556f1447f52aac0 in memory
flw f8, 0(x2) # load 0x4556f1447f52aac0 from memory into f8
fmadd.s f29, f22, f14, f8, dyn # perform operation
fmadd.s f29, f22, f14, f8, rdn # perform operation
fmadd.s f29, f22, f14, f8, rmm # perform operation
fmadd.s f29, f22, f14, f8, rne # perform operation
fmadd.s f29, f22, f14, f8, rtz # perform operation
fmadd.s f29, f22, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f22, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f22, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f22, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f22, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f22, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xd92b184a873f0215 # load x3 with value 0xd92b184a873f0215
sw x3, 0(x2) # store 0xd92b184a873f0215 in memory
flw f21, 0(x2) # load 0xd92b184a873f0215 from memory into f21
fmadd.s f28, f23, f18, f21, dyn # perform operation
fmadd.s f28, f23, f18, f21, rdn # perform operation
fmadd.s f28, f23, f18, f21, rmm # perform operation
fmadd.s f28, f23, f18, f21, rne # perform operation
fmadd.s f28, f23, f18, f21, rtz # perform operation
fmadd.s f28, f23, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x229f727698ec6ff # load x3 with value 0x229f727698ec6ff
sw x3, 0(x2) # store 0x229f727698ec6ff in memory
flw f16, 0(x2) # load 0x229f727698ec6ff from memory into f16
fmadd.s f5, f13, f30, f16, dyn # perform operation
fmadd.s f5, f13, f30, f16, rdn # perform operation
fmadd.s f5, f13, f30, f16, rmm # perform operation
fmadd.s f5, f13, f30, f16, rne # perform operation
fmadd.s f5, f13, f30, f16, rtz # perform operation
fmadd.s f5, f13, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0xd5c74bffd35195f7 # load x3 with value 0xd5c74bffd35195f7
sw x3, 0(x2) # store 0xd5c74bffd35195f7 in memory
flw f1, 0(x2) # load 0xd5c74bffd35195f7 from memory into f1
fmadd.s f7, f15, f14, f1, dyn # perform operation
fmadd.s f7, f15, f14, f1, rdn # perform operation
fmadd.s f7, f15, f14, f1, rmm # perform operation
fmadd.s f7, f15, f14, f1, rne # perform operation
fmadd.s f7, f15, f14, f1, rtz # perform operation
fmadd.s f7, f15, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x813383e00657be2b # load x3 with value 0x813383e00657be2b
sw x3, 0(x2) # store 0x813383e00657be2b in memory
flw f31, 0(x2) # load 0x813383e00657be2b from memory into f31
fmadd.s f24, f6, f12, f31, dyn # perform operation
fmadd.s f24, f6, f12, f31, rdn # perform operation
fmadd.s f24, f6, f12, f31, rmm # perform operation
fmadd.s f24, f6, f12, f31, rne # perform operation
fmadd.s f24, f6, f12, f31, rtz # perform operation
fmadd.s f24, f6, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xb6bf0c7a3f00048d # load x3 with value 0xb6bf0c7a3f00048d
sw x3, 0(x2) # store 0xb6bf0c7a3f00048d in memory
flw f9, 0(x2) # load 0xb6bf0c7a3f00048d from memory into f9
fmadd.s f7, f27, f21, f9, dyn # perform operation
fmadd.s f7, f27, f21, f9, rdn # perform operation
fmadd.s f7, f27, f21, f9, rmm # perform operation
fmadd.s f7, f27, f21, f9, rne # perform operation
fmadd.s f7, f27, f21, f9, rtz # perform operation
fmadd.s f7, f27, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xb0f1b2e45344b8b1 # load x3 with value 0xb0f1b2e45344b8b1
sw x3, 0(x2) # store 0xb0f1b2e45344b8b1 in memory
flw f15, 0(x2) # load 0xb0f1b2e45344b8b1 from memory into f15
fmadd.s f8, f19, f5, f15, dyn # perform operation
fmadd.s f8, f19, f5, f15, rdn # perform operation
fmadd.s f8, f19, f5, f15, rmm # perform operation
fmadd.s f8, f19, f5, f15, rne # perform operation
fmadd.s f8, f19, f5, f15, rtz # perform operation
fmadd.s f8, f19, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x687bd2cabeff2116 # load x3 with value 0x687bd2cabeff2116
sw x3, 0(x2) # store 0x687bd2cabeff2116 in memory
flw f14, 0(x2) # load 0x687bd2cabeff2116 from memory into f14
fmadd.s f15, f20, f5, f14, dyn # perform operation
fmadd.s f15, f20, f5, f14, rdn # perform operation
fmadd.s f15, f20, f5, f14, rmm # perform operation
fmadd.s f15, f20, f5, f14, rne # perform operation
fmadd.s f15, f20, f5, f14, rtz # perform operation
fmadd.s f15, f20, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xbb1b2562c6400ecf # load x3 with value 0xbb1b2562c6400ecf
sw x3, 0(x2) # store 0xbb1b2562c6400ecf in memory
flw f6, 0(x2) # load 0xbb1b2562c6400ecf from memory into f6
fmadd.s f16, f13, f15, f6, dyn # perform operation
fmadd.s f16, f13, f15, f6, rdn # perform operation
fmadd.s f16, f13, f15, f6, rmm # perform operation
fmadd.s f16, f13, f15, f6, rne # perform operation
fmadd.s f16, f13, f15, f6, rtz # perform operation
fmadd.s f16, f13, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f13, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f13, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x80548693a3b7be8 # load x3 with value 0x80548693a3b7be8
sw x3, 0(x2) # store 0x80548693a3b7be8 in memory
flw f16, 0(x2) # load 0x80548693a3b7be8 from memory into f16
fmadd.s f12, f5, f13, f16, dyn # perform operation
fmadd.s f12, f5, f13, f16, rdn # perform operation
fmadd.s f12, f5, f13, f16, rmm # perform operation
fmadd.s f12, f5, f13, f16, rne # perform operation
fmadd.s f12, f5, f13, f16, rtz # perform operation
fmadd.s f12, f5, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x3ed855f1eb84b509 # load x3 with value 0x3ed855f1eb84b509
sw x3, 0(x2) # store 0x3ed855f1eb84b509 in memory
flw f2, 0(x2) # load 0x3ed855f1eb84b509 from memory into f2
fmadd.s f12, f18, f11, f2, dyn # perform operation
fmadd.s f12, f18, f11, f2, rdn # perform operation
fmadd.s f12, f18, f11, f2, rmm # perform operation
fmadd.s f12, f18, f11, f2, rne # perform operation
fmadd.s f12, f18, f11, f2, rtz # perform operation
fmadd.s f12, f18, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x1b5eddd72a0bd6fc # load x3 with value 0x1b5eddd72a0bd6fc
sw x3, 0(x2) # store 0x1b5eddd72a0bd6fc in memory
flw f22, 0(x2) # load 0x1b5eddd72a0bd6fc from memory into f22
fmadd.s f20, f6, f3, f22, dyn # perform operation
fmadd.s f20, f6, f3, f22, rdn # perform operation
fmadd.s f20, f6, f3, f22, rmm # perform operation
fmadd.s f20, f6, f3, f22, rne # perform operation
fmadd.s f20, f6, f3, f22, rtz # perform operation
fmadd.s f20, f6, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f6, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f6, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f6, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f6, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f6, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x905eef79278ce65d # load x3 with value 0x905eef79278ce65d
sw x3, 0(x2) # store 0x905eef79278ce65d in memory
flw f13, 0(x2) # load 0x905eef79278ce65d from memory into f13
fmadd.s f23, f5, f19, f13, dyn # perform operation
fmadd.s f23, f5, f19, f13, rdn # perform operation
fmadd.s f23, f5, f19, f13, rmm # perform operation
fmadd.s f23, f5, f19, f13, rne # perform operation
fmadd.s f23, f5, f19, f13, rtz # perform operation
fmadd.s f23, f5, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x7c0a6e095bb9e4d # load x3 with value 0x7c0a6e095bb9e4d
sw x3, 0(x2) # store 0x7c0a6e095bb9e4d in memory
flw f24, 0(x2) # load 0x7c0a6e095bb9e4d from memory into f24
fmadd.s f1, f26, f5, f24, dyn # perform operation
fmadd.s f1, f26, f5, f24, rdn # perform operation
fmadd.s f1, f26, f5, f24, rmm # perform operation
fmadd.s f1, f26, f5, f24, rne # perform operation
fmadd.s f1, f26, f5, f24, rtz # perform operation
fmadd.s f1, f26, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f26, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x678c5cd08f6eaa82 # load x3 with value 0x678c5cd08f6eaa82
sw x3, 0(x2) # store 0x678c5cd08f6eaa82 in memory
flw f25, 0(x2) # load 0x678c5cd08f6eaa82 from memory into f25
fmadd.s f13, f22, f27, f25, dyn # perform operation
fmadd.s f13, f22, f27, f25, rdn # perform operation
fmadd.s f13, f22, f27, f25, rmm # perform operation
fmadd.s f13, f22, f27, f25, rne # perform operation
fmadd.s f13, f22, f27, f25, rtz # perform operation
fmadd.s f13, f22, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f22, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f22, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x44deb391f3c85a3c # load x3 with value 0x44deb391f3c85a3c
sw x3, 0(x2) # store 0x44deb391f3c85a3c in memory
flw f20, 0(x2) # load 0x44deb391f3c85a3c from memory into f20
fmadd.s f1, f5, f14, f20, dyn # perform operation
fmadd.s f1, f5, f14, f20, rdn # perform operation
fmadd.s f1, f5, f14, f20, rmm # perform operation
fmadd.s f1, f5, f14, f20, rne # perform operation
fmadd.s f1, f5, f14, f20, rtz # perform operation
fmadd.s f1, f5, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x89a46e65de316c65 # load x3 with value 0x89a46e65de316c65
sw x3, 0(x2) # store 0x89a46e65de316c65 in memory
flw f19, 0(x2) # load 0x89a46e65de316c65 from memory into f19
fmadd.s f11, f23, f25, f19, dyn # perform operation
fmadd.s f11, f23, f25, f19, rdn # perform operation
fmadd.s f11, f23, f25, f19, rmm # perform operation
fmadd.s f11, f23, f25, f19, rne # perform operation
fmadd.s f11, f23, f25, f19, rtz # perform operation
fmadd.s f11, f23, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x62ea38bb00c08ffa # load x3 with value 0x62ea38bb00c08ffa
sw x3, 0(x2) # store 0x62ea38bb00c08ffa in memory
flw f1, 0(x2) # load 0x62ea38bb00c08ffa from memory into f1
fmadd.s f28, f15, f21, f1, dyn # perform operation
fmadd.s f28, f15, f21, f1, rdn # perform operation
fmadd.s f28, f15, f21, f1, rmm # perform operation
fmadd.s f28, f15, f21, f1, rne # perform operation
fmadd.s f28, f15, f21, f1, rtz # perform operation
fmadd.s f28, f15, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f15, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f15, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xe6b8177544034aa4 # load x3 with value 0xe6b8177544034aa4
sw x3, 0(x2) # store 0xe6b8177544034aa4 in memory
flw f26, 0(x2) # load 0xe6b8177544034aa4 from memory into f26
fmadd.s f1, f12, f24, f26, dyn # perform operation
fmadd.s f1, f12, f24, f26, rdn # perform operation
fmadd.s f1, f12, f24, f26, rmm # perform operation
fmadd.s f1, f12, f24, f26, rne # perform operation
fmadd.s f1, f12, f24, f26, rtz # perform operation
fmadd.s f1, f12, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f12, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0xb06a3bffa6345c70 # load x3 with value 0xb06a3bffa6345c70
sw x3, 0(x2) # store 0xb06a3bffa6345c70 in memory
flw f23, 0(x2) # load 0xb06a3bffa6345c70 from memory into f23
fmadd.s f16, f15, f12, f23, dyn # perform operation
fmadd.s f16, f15, f12, f23, rdn # perform operation
fmadd.s f16, f15, f12, f23, rmm # perform operation
fmadd.s f16, f15, f12, f23, rne # perform operation
fmadd.s f16, f15, f12, f23, rtz # perform operation
fmadd.s f16, f15, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f15, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f15, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f15, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f15, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f15, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xd0d91d874873288b # load x3 with value 0xd0d91d874873288b
sw x3, 0(x2) # store 0xd0d91d874873288b in memory
flw f26, 0(x2) # load 0xd0d91d874873288b from memory into f26
fmadd.s f30, f8, f6, f26, dyn # perform operation
fmadd.s f30, f8, f6, f26, rdn # perform operation
fmadd.s f30, f8, f6, f26, rmm # perform operation
fmadd.s f30, f8, f6, f26, rne # perform operation
fmadd.s f30, f8, f6, f26, rtz # perform operation
fmadd.s f30, f8, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f6, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xa345ab03d6d02874 # load x3 with value 0xa345ab03d6d02874
sw x3, 0(x2) # store 0xa345ab03d6d02874 in memory
flw f5, 0(x2) # load 0xa345ab03d6d02874 from memory into f5
fmadd.s f29, f8, f31, f5, dyn # perform operation
fmadd.s f29, f8, f31, f5, rdn # perform operation
fmadd.s f29, f8, f31, f5, rmm # perform operation
fmadd.s f29, f8, f31, f5, rne # perform operation
fmadd.s f29, f8, f31, f5, rtz # perform operation
fmadd.s f29, f8, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f8, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f8, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x2a1ac9ede743c0a9 # load x3 with value 0x2a1ac9ede743c0a9
sw x3, 0(x2) # store 0x2a1ac9ede743c0a9 in memory
flw f5, 0(x2) # load 0x2a1ac9ede743c0a9 from memory into f5
fmadd.s f3, f16, f23, f5, dyn # perform operation
fmadd.s f3, f16, f23, f5, rdn # perform operation
fmadd.s f3, f16, f23, f5, rmm # perform operation
fmadd.s f3, f16, f23, f5, rne # perform operation
fmadd.s f3, f16, f23, f5, rtz # perform operation
fmadd.s f3, f16, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x4b8c0208e945cebf # load x3 with value 0x4b8c0208e945cebf
sw x3, 0(x2) # store 0x4b8c0208e945cebf in memory
flw f3, 0(x2) # load 0x4b8c0208e945cebf from memory into f3
fmadd.s f11, f15, f22, f3, dyn # perform operation
fmadd.s f11, f15, f22, f3, rdn # perform operation
fmadd.s f11, f15, f22, f3, rmm # perform operation
fmadd.s f11, f15, f22, f3, rne # perform operation
fmadd.s f11, f15, f22, f3, rtz # perform operation
fmadd.s f11, f15, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f15, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f15, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0xae7c45a9e5d42719 # load x3 with value 0xae7c45a9e5d42719
sw x3, 0(x2) # store 0xae7c45a9e5d42719 in memory
flw f7, 0(x2) # load 0xae7c45a9e5d42719 from memory into f7
fmadd.s f6, f29, f19, f7, dyn # perform operation
fmadd.s f6, f29, f19, f7, rdn # perform operation
fmadd.s f6, f29, f19, f7, rmm # perform operation
fmadd.s f6, f29, f19, f7, rne # perform operation
fmadd.s f6, f29, f19, f7, rtz # perform operation
fmadd.s f6, f29, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x41f8b8cb14c041f0 # load x3 with value 0x41f8b8cb14c041f0
sw x3, 0(x2) # store 0x41f8b8cb14c041f0 in memory
flw f6, 0(x2) # load 0x41f8b8cb14c041f0 from memory into f6
fmadd.s f27, f20, f9, f6, dyn # perform operation
fmadd.s f27, f20, f9, f6, rdn # perform operation
fmadd.s f27, f20, f9, f6, rmm # perform operation
fmadd.s f27, f20, f9, f6, rne # perform operation
fmadd.s f27, f20, f9, f6, rtz # perform operation
fmadd.s f27, f20, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xc76eb961b5af111b # load x3 with value 0xc76eb961b5af111b
sw x3, 0(x2) # store 0xc76eb961b5af111b in memory
flw f18, 0(x2) # load 0xc76eb961b5af111b from memory into f18
fmadd.s f29, f19, f8, f18, dyn # perform operation
fmadd.s f29, f19, f8, f18, rdn # perform operation
fmadd.s f29, f19, f8, f18, rmm # perform operation
fmadd.s f29, f19, f8, f18, rne # perform operation
fmadd.s f29, f19, f8, f18, rtz # perform operation
fmadd.s f29, f19, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f19, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f19, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f19, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f19, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f19, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0xd1575f752141c320 # load x3 with value 0xd1575f752141c320
sw x3, 0(x2) # store 0xd1575f752141c320 in memory
flw f23, 0(x2) # load 0xd1575f752141c320 from memory into f23
fmadd.s f10, f21, f30, f23, dyn # perform operation
fmadd.s f10, f21, f30, f23, rdn # perform operation
fmadd.s f10, f21, f30, f23, rmm # perform operation
fmadd.s f10, f21, f30, f23, rne # perform operation
fmadd.s f10, f21, f30, f23, rtz # perform operation
fmadd.s f10, f21, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f21, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x48564043bdaaf209 # load x3 with value 0x48564043bdaaf209
sw x3, 0(x2) # store 0x48564043bdaaf209 in memory
flw f8, 0(x2) # load 0x48564043bdaaf209 from memory into f8
fmadd.s f16, f12, f20, f8, dyn # perform operation
fmadd.s f16, f12, f20, f8, rdn # perform operation
fmadd.s f16, f12, f20, f8, rmm # perform operation
fmadd.s f16, f12, f20, f8, rne # perform operation
fmadd.s f16, f12, f20, f8, rtz # perform operation
fmadd.s f16, f12, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xf892c5979a093f09 # load x3 with value 0xf892c5979a093f09
sw x3, 0(x2) # store 0xf892c5979a093f09 in memory
flw f13, 0(x2) # load 0xf892c5979a093f09 from memory into f13
fmadd.s f31, f11, f7, f13, dyn # perform operation
fmadd.s f31, f11, f7, f13, rdn # perform operation
fmadd.s f31, f11, f7, f13, rmm # perform operation
fmadd.s f31, f11, f7, f13, rne # perform operation
fmadd.s f31, f11, f7, f13, rtz # perform operation
fmadd.s f31, f11, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f11, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f11, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f11, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f11, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f11, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x7566d8c5b55855e1 # load x3 with value 0x7566d8c5b55855e1
sw x3, 0(x2) # store 0x7566d8c5b55855e1 in memory
flw f27, 0(x2) # load 0x7566d8c5b55855e1 from memory into f27
fmadd.s f5, f29, f25, f27, dyn # perform operation
fmadd.s f5, f29, f25, f27, rdn # perform operation
fmadd.s f5, f29, f25, f27, rmm # perform operation
fmadd.s f5, f29, f25, f27, rne # perform operation
fmadd.s f5, f29, f25, f27, rtz # perform operation
fmadd.s f5, f29, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xbfda004c8495bb7c # load x3 with value 0xbfda004c8495bb7c
sw x3, 0(x2) # store 0xbfda004c8495bb7c in memory
flw f13, 0(x2) # load 0xbfda004c8495bb7c from memory into f13
fmadd.s f20, f1, f11, f13, dyn # perform operation
fmadd.s f20, f1, f11, f13, rdn # perform operation
fmadd.s f20, f1, f11, f13, rmm # perform operation
fmadd.s f20, f1, f11, f13, rne # perform operation
fmadd.s f20, f1, f11, f13, rtz # perform operation
fmadd.s f20, f1, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x8372fbe275b883ca # load x3 with value 0x8372fbe275b883ca
sw x3, 0(x2) # store 0x8372fbe275b883ca in memory
flw f22, 0(x2) # load 0x8372fbe275b883ca from memory into f22
fmadd.s f13, f29, f12, f22, dyn # perform operation
fmadd.s f13, f29, f12, f22, rdn # perform operation
fmadd.s f13, f29, f12, f22, rmm # perform operation
fmadd.s f13, f29, f12, f22, rne # perform operation
fmadd.s f13, f29, f12, f22, rtz # perform operation
fmadd.s f13, f29, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xc384884b8f3991f1 # load x3 with value 0xc384884b8f3991f1
sw x3, 0(x2) # store 0xc384884b8f3991f1 in memory
flw f12, 0(x2) # load 0xc384884b8f3991f1 from memory into f12
fmadd.s f28, f20, f21, f12, dyn # perform operation
fmadd.s f28, f20, f21, f12, rdn # perform operation
fmadd.s f28, f20, f21, f12, rmm # perform operation
fmadd.s f28, f20, f21, f12, rne # perform operation
fmadd.s f28, f20, f21, f12, rtz # perform operation
fmadd.s f28, f20, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xd0bf553aef2e2762 # load x3 with value 0xd0bf553aef2e2762
sw x3, 0(x2) # store 0xd0bf553aef2e2762 in memory
flw f30, 0(x2) # load 0xd0bf553aef2e2762 from memory into f30
fmadd.s f11, f3, f2, f30, dyn # perform operation
fmadd.s f11, f3, f2, f30, rdn # perform operation
fmadd.s f11, f3, f2, f30, rmm # perform operation
fmadd.s f11, f3, f2, f30, rne # perform operation
fmadd.s f11, f3, f2, f30, rtz # perform operation
fmadd.s f11, f3, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f3, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x676d38445123a3bf # load x3 with value 0x676d38445123a3bf
sw x3, 0(x2) # store 0x676d38445123a3bf in memory
flw f9, 0(x2) # load 0x676d38445123a3bf from memory into f9
fmadd.s f16, f17, f19, f9, dyn # perform operation
fmadd.s f16, f17, f19, f9, rdn # perform operation
fmadd.s f16, f17, f19, f9, rmm # perform operation
fmadd.s f16, f17, f19, f9, rne # perform operation
fmadd.s f16, f17, f19, f9, rtz # perform operation
fmadd.s f16, f17, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x9f91712c5beed78a # load x3 with value 0x9f91712c5beed78a
sw x3, 0(x2) # store 0x9f91712c5beed78a in memory
flw f25, 0(x2) # load 0x9f91712c5beed78a from memory into f25
fmadd.s f26, f15, f21, f25, dyn # perform operation
fmadd.s f26, f15, f21, f25, rdn # perform operation
fmadd.s f26, f15, f21, f25, rmm # perform operation
fmadd.s f26, f15, f21, f25, rne # perform operation
fmadd.s f26, f15, f21, f25, rtz # perform operation
fmadd.s f26, f15, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f15, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f15, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x3b0ec413da141d95 # load x3 with value 0x3b0ec413da141d95
sw x3, 0(x2) # store 0x3b0ec413da141d95 in memory
flw f30, 0(x2) # load 0x3b0ec413da141d95 from memory into f30
fmadd.s f15, f3, f1, f30, dyn # perform operation
fmadd.s f15, f3, f1, f30, rdn # perform operation
fmadd.s f15, f3, f1, f30, rmm # perform operation
fmadd.s f15, f3, f1, f30, rne # perform operation
fmadd.s f15, f3, f1, f30, rtz # perform operation
fmadd.s f15, f3, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f3, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0xcb6e916271791893 # load x3 with value 0xcb6e916271791893
sw x3, 0(x2) # store 0xcb6e916271791893 in memory
flw f23, 0(x2) # load 0xcb6e916271791893 from memory into f23
fmadd.s f19, f22, f1, f23, dyn # perform operation
fmadd.s f19, f22, f1, f23, rdn # perform operation
fmadd.s f19, f22, f1, f23, rmm # perform operation
fmadd.s f19, f22, f1, f23, rne # perform operation
fmadd.s f19, f22, f1, f23, rtz # perform operation
fmadd.s f19, f22, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x2cb33f63411ef274 # load x3 with value 0x2cb33f63411ef274
sw x3, 0(x2) # store 0x2cb33f63411ef274 in memory
flw f13, 0(x2) # load 0x2cb33f63411ef274 from memory into f13
fmadd.s f21, f6, f18, f13, dyn # perform operation
fmadd.s f21, f6, f18, f13, rdn # perform operation
fmadd.s f21, f6, f18, f13, rmm # perform operation
fmadd.s f21, f6, f18, f13, rne # perform operation
fmadd.s f21, f6, f18, f13, rtz # perform operation
fmadd.s f21, f6, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f6, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xa278dc087e802697 # load x3 with value 0xa278dc087e802697
sw x3, 0(x2) # store 0xa278dc087e802697 in memory
flw f22, 0(x2) # load 0xa278dc087e802697 from memory into f22
fmadd.s f11, f16, f23, f22, dyn # perform operation
fmadd.s f11, f16, f23, f22, rdn # perform operation
fmadd.s f11, f16, f23, f22, rmm # perform operation
fmadd.s f11, f16, f23, f22, rne # perform operation
fmadd.s f11, f16, f23, f22, rtz # perform operation
fmadd.s f11, f16, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xa47550a14370548d # load x3 with value 0xa47550a14370548d
sw x3, 0(x2) # store 0xa47550a14370548d in memory
flw f26, 0(x2) # load 0xa47550a14370548d from memory into f26
fmadd.s f1, f15, f3, f26, dyn # perform operation
fmadd.s f1, f15, f3, f26, rdn # perform operation
fmadd.s f1, f15, f3, f26, rmm # perform operation
fmadd.s f1, f15, f3, f26, rne # perform operation
fmadd.s f1, f15, f3, f26, rtz # perform operation
fmadd.s f1, f15, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x1dbf7799cd3fd889 # load x3 with value 0x1dbf7799cd3fd889
sw x3, 0(x2) # store 0x1dbf7799cd3fd889 in memory
flw f17, 0(x2) # load 0x1dbf7799cd3fd889 from memory into f17
fmadd.s f20, f25, f10, f17, dyn # perform operation
fmadd.s f20, f25, f10, f17, rdn # perform operation
fmadd.s f20, f25, f10, f17, rmm # perform operation
fmadd.s f20, f25, f10, f17, rne # perform operation
fmadd.s f20, f25, f10, f17, rtz # perform operation
fmadd.s f20, f25, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0xce7cb7ffccb63a33 # load x3 with value 0xce7cb7ffccb63a33
sw x3, 0(x2) # store 0xce7cb7ffccb63a33 in memory
flw f12, 0(x2) # load 0xce7cb7ffccb63a33 from memory into f12
fmadd.s f5, f21, f24, f12, dyn # perform operation
fmadd.s f5, f21, f24, f12, rdn # perform operation
fmadd.s f5, f21, f24, f12, rmm # perform operation
fmadd.s f5, f21, f24, f12, rne # perform operation
fmadd.s f5, f21, f24, f12, rtz # perform operation
fmadd.s f5, f21, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f21, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xad6edbb91440ec9f # load x3 with value 0xad6edbb91440ec9f
sw x3, 0(x2) # store 0xad6edbb91440ec9f in memory
flw f7, 0(x2) # load 0xad6edbb91440ec9f from memory into f7
fmadd.s f26, f27, f23, f7, dyn # perform operation
fmadd.s f26, f27, f23, f7, rdn # perform operation
fmadd.s f26, f27, f23, f7, rmm # perform operation
fmadd.s f26, f27, f23, f7, rne # perform operation
fmadd.s f26, f27, f23, f7, rtz # perform operation
fmadd.s f26, f27, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x9598eca5438e7938 # load x3 with value 0x9598eca5438e7938
sw x3, 0(x2) # store 0x9598eca5438e7938 in memory
flw f21, 0(x2) # load 0x9598eca5438e7938 from memory into f21
fmadd.s f1, f14, f12, f21, dyn # perform operation
fmadd.s f1, f14, f12, f21, rdn # perform operation
fmadd.s f1, f14, f12, f21, rmm # perform operation
fmadd.s f1, f14, f12, f21, rne # perform operation
fmadd.s f1, f14, f12, f21, rtz # perform operation
fmadd.s f1, f14, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xa1fea3f9aa4af4dc # load x3 with value 0xa1fea3f9aa4af4dc
sw x3, 0(x2) # store 0xa1fea3f9aa4af4dc in memory
flw f1, 0(x2) # load 0xa1fea3f9aa4af4dc from memory into f1
fmadd.s f31, f21, f10, f1, dyn # perform operation
fmadd.s f31, f21, f10, f1, rdn # perform operation
fmadd.s f31, f21, f10, f1, rmm # perform operation
fmadd.s f31, f21, f10, f1, rne # perform operation
fmadd.s f31, f21, f10, f1, rtz # perform operation
fmadd.s f31, f21, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f21, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xd781f7c792307ea6 # load x3 with value 0xd781f7c792307ea6
sw x3, 0(x2) # store 0xd781f7c792307ea6 in memory
flw f8, 0(x2) # load 0xd781f7c792307ea6 from memory into f8
fmadd.s f31, f12, f7, f8, dyn # perform operation
fmadd.s f31, f12, f7, f8, rdn # perform operation
fmadd.s f31, f12, f7, f8, rmm # perform operation
fmadd.s f31, f12, f7, f8, rne # perform operation
fmadd.s f31, f12, f7, f8, rtz # perform operation
fmadd.s f31, f12, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f12, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f12, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x9546dd675fd7a3ba # load x3 with value 0x9546dd675fd7a3ba
sw x3, 0(x2) # store 0x9546dd675fd7a3ba in memory
flw f14, 0(x2) # load 0x9546dd675fd7a3ba from memory into f14
fmadd.s f15, f1, f25, f14, dyn # perform operation
fmadd.s f15, f1, f25, f14, rdn # perform operation
fmadd.s f15, f1, f25, f14, rmm # perform operation
fmadd.s f15, f1, f25, f14, rne # perform operation
fmadd.s f15, f1, f25, f14, rtz # perform operation
fmadd.s f15, f1, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xa4b35c5ae1c0d1be # load x3 with value 0xa4b35c5ae1c0d1be
sw x3, 0(x2) # store 0xa4b35c5ae1c0d1be in memory
flw f21, 0(x2) # load 0xa4b35c5ae1c0d1be from memory into f21
fmadd.s f17, f19, f10, f21, dyn # perform operation
fmadd.s f17, f19, f10, f21, rdn # perform operation
fmadd.s f17, f19, f10, f21, rmm # perform operation
fmadd.s f17, f19, f10, f21, rne # perform operation
fmadd.s f17, f19, f10, f21, rtz # perform operation
fmadd.s f17, f19, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x2866a26c60094f3 # load x3 with value 0x2866a26c60094f3
sw x3, 0(x2) # store 0x2866a26c60094f3 in memory
flw f16, 0(x2) # load 0x2866a26c60094f3 from memory into f16
fmadd.s f30, f25, f27, f16, dyn # perform operation
fmadd.s f30, f25, f27, f16, rdn # perform operation
fmadd.s f30, f25, f27, f16, rmm # perform operation
fmadd.s f30, f25, f27, f16, rne # perform operation
fmadd.s f30, f25, f27, f16, rtz # perform operation
fmadd.s f30, f25, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f25, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x72c38b5714d2b242 # load x3 with value 0x72c38b5714d2b242
sw x3, 0(x2) # store 0x72c38b5714d2b242 in memory
flw f24, 0(x2) # load 0x72c38b5714d2b242 from memory into f24
fmadd.s f16, f21, f19, f24, dyn # perform operation
fmadd.s f16, f21, f19, f24, rdn # perform operation
fmadd.s f16, f21, f19, f24, rmm # perform operation
fmadd.s f16, f21, f19, f24, rne # perform operation
fmadd.s f16, f21, f19, f24, rtz # perform operation
fmadd.s f16, f21, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x37afda3ed6713470 # load x3 with value 0x37afda3ed6713470
sw x3, 0(x2) # store 0x37afda3ed6713470 in memory
flw f13, 0(x2) # load 0x37afda3ed6713470 from memory into f13
fmadd.s f12, f17, f24, f13, dyn # perform operation
fmadd.s f12, f17, f24, f13, rdn # perform operation
fmadd.s f12, f17, f24, f13, rmm # perform operation
fmadd.s f12, f17, f24, f13, rne # perform operation
fmadd.s f12, f17, f24, f13, rtz # perform operation
fmadd.s f12, f17, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x63331bf183392b8c # load x3 with value 0x63331bf183392b8c
sw x3, 0(x2) # store 0x63331bf183392b8c in memory
flw f29, 0(x2) # load 0x63331bf183392b8c from memory into f29
fmadd.s f20, f1, f2, f29, dyn # perform operation
fmadd.s f20, f1, f2, f29, rdn # perform operation
fmadd.s f20, f1, f2, f29, rmm # perform operation
fmadd.s f20, f1, f2, f29, rne # perform operation
fmadd.s f20, f1, f2, f29, rtz # perform operation
fmadd.s f20, f1, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xf5f9826950659860 # load x3 with value 0xf5f9826950659860
sw x3, 0(x2) # store 0xf5f9826950659860 in memory
flw f19, 0(x2) # load 0xf5f9826950659860 from memory into f19
fmadd.s f28, f21, f12, f19, dyn # perform operation
fmadd.s f28, f21, f12, f19, rdn # perform operation
fmadd.s f28, f21, f12, f19, rmm # perform operation
fmadd.s f28, f21, f12, f19, rne # perform operation
fmadd.s f28, f21, f12, f19, rtz # perform operation
fmadd.s f28, f21, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f21, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x4aa7474c2cdd1f39 # load x3 with value 0x4aa7474c2cdd1f39
sw x3, 0(x2) # store 0x4aa7474c2cdd1f39 in memory
flw f7, 0(x2) # load 0x4aa7474c2cdd1f39 from memory into f7
fmadd.s f1, f16, f30, f7, dyn # perform operation
fmadd.s f1, f16, f30, f7, rdn # perform operation
fmadd.s f1, f16, f30, f7, rmm # perform operation
fmadd.s f1, f16, f30, f7, rne # perform operation
fmadd.s f1, f16, f30, f7, rtz # perform operation
fmadd.s f1, f16, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f16, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x28970d92d26dc32 # load x3 with value 0x28970d92d26dc32
sw x3, 0(x2) # store 0x28970d92d26dc32 in memory
flw f3, 0(x2) # load 0x28970d92d26dc32 from memory into f3
fmadd.s f16, f31, f6, f3, dyn # perform operation
fmadd.s f16, f31, f6, f3, rdn # perform operation
fmadd.s f16, f31, f6, f3, rmm # perform operation
fmadd.s f16, f31, f6, f3, rne # perform operation
fmadd.s f16, f31, f6, f3, rtz # perform operation
fmadd.s f16, f31, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x6c572454e8429b22 # load x3 with value 0x6c572454e8429b22
sw x3, 0(x2) # store 0x6c572454e8429b22 in memory
flw f8, 0(x2) # load 0x6c572454e8429b22 from memory into f8
fmadd.s f22, f30, f16, f8, dyn # perform operation
fmadd.s f22, f30, f16, f8, rdn # perform operation
fmadd.s f22, f30, f16, f8, rmm # perform operation
fmadd.s f22, f30, f16, f8, rne # perform operation
fmadd.s f22, f30, f16, f8, rtz # perform operation
fmadd.s f22, f30, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xd7ed2e95b3edb92a # load x3 with value 0xd7ed2e95b3edb92a
sw x3, 0(x2) # store 0xd7ed2e95b3edb92a in memory
flw f29, 0(x2) # load 0xd7ed2e95b3edb92a from memory into f29
fmadd.s f25, f15, f13, f29, dyn # perform operation
fmadd.s f25, f15, f13, f29, rdn # perform operation
fmadd.s f25, f15, f13, f29, rmm # perform operation
fmadd.s f25, f15, f13, f29, rne # perform operation
fmadd.s f25, f15, f13, f29, rtz # perform operation
fmadd.s f25, f15, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0xc35361ef8393881c # load x3 with value 0xc35361ef8393881c
sw x3, 0(x2) # store 0xc35361ef8393881c in memory
flw f29, 0(x2) # load 0xc35361ef8393881c from memory into f29
fmadd.s f9, f23, f30, f29, dyn # perform operation
fmadd.s f9, f23, f30, f29, rdn # perform operation
fmadd.s f9, f23, f30, f29, rmm # perform operation
fmadd.s f9, f23, f30, f29, rne # perform operation
fmadd.s f9, f23, f30, f29, rtz # perform operation
fmadd.s f9, f23, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x6fc4efaa420c9457 # load x3 with value 0x6fc4efaa420c9457
sw x3, 0(x2) # store 0x6fc4efaa420c9457 in memory
flw f27, 0(x2) # load 0x6fc4efaa420c9457 from memory into f27
fmadd.s f24, f19, f25, f27, dyn # perform operation
fmadd.s f24, f19, f25, f27, rdn # perform operation
fmadd.s f24, f19, f25, f27, rmm # perform operation
fmadd.s f24, f19, f25, f27, rne # perform operation
fmadd.s f24, f19, f25, f27, rtz # perform operation
fmadd.s f24, f19, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xf8f96984fbeaf766 # load x3 with value 0xf8f96984fbeaf766
sw x3, 0(x2) # store 0xf8f96984fbeaf766 in memory
flw f1, 0(x2) # load 0xf8f96984fbeaf766 from memory into f1
fmadd.s f3, f9, f21, f1, dyn # perform operation
fmadd.s f3, f9, f21, f1, rdn # perform operation
fmadd.s f3, f9, f21, f1, rmm # perform operation
fmadd.s f3, f9, f21, f1, rne # perform operation
fmadd.s f3, f9, f21, f1, rtz # perform operation
fmadd.s f3, f9, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f9, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f9, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x33848c076410ea8c # load x3 with value 0x33848c076410ea8c
sw x3, 0(x2) # store 0x33848c076410ea8c in memory
flw f31, 0(x2) # load 0x33848c076410ea8c from memory into f31
fmadd.s f5, f10, f7, f31, dyn # perform operation
fmadd.s f5, f10, f7, f31, rdn # perform operation
fmadd.s f5, f10, f7, f31, rmm # perform operation
fmadd.s f5, f10, f7, f31, rne # perform operation
fmadd.s f5, f10, f7, f31, rtz # perform operation
fmadd.s f5, f10, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xf94c32161dc61e7e # load x3 with value 0xf94c32161dc61e7e
sw x3, 0(x2) # store 0xf94c32161dc61e7e in memory
flw f2, 0(x2) # load 0xf94c32161dc61e7e from memory into f2
fmadd.s f18, f19, f30, f2, dyn # perform operation
fmadd.s f18, f19, f30, f2, rdn # perform operation
fmadd.s f18, f19, f30, f2, rmm # perform operation
fmadd.s f18, f19, f30, f2, rne # perform operation
fmadd.s f18, f19, f30, f2, rtz # perform operation
fmadd.s f18, f19, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x602edd3b8a4b85c3 # load x3 with value 0x602edd3b8a4b85c3
sw x3, 0(x2) # store 0x602edd3b8a4b85c3 in memory
flw f24, 0(x2) # load 0x602edd3b8a4b85c3 from memory into f24
fmadd.s f22, f14, f8, f24, dyn # perform operation
fmadd.s f22, f14, f8, f24, rdn # perform operation
fmadd.s f22, f14, f8, f24, rmm # perform operation
fmadd.s f22, f14, f8, f24, rne # perform operation
fmadd.s f22, f14, f8, f24, rtz # perform operation
fmadd.s f22, f14, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f14, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f14, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x5e1a669acdd7ed2a # load x3 with value 0x5e1a669acdd7ed2a
sw x3, 0(x2) # store 0x5e1a669acdd7ed2a in memory
flw f15, 0(x2) # load 0x5e1a669acdd7ed2a from memory into f15
fmadd.s f29, f21, f24, f15, dyn # perform operation
fmadd.s f29, f21, f24, f15, rdn # perform operation
fmadd.s f29, f21, f24, f15, rmm # perform operation
fmadd.s f29, f21, f24, f15, rne # perform operation
fmadd.s f29, f21, f24, f15, rtz # perform operation
fmadd.s f29, f21, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f21, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f21, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f21, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f21, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f21, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0xcb5fe8c47cae2d31 # load x3 with value 0xcb5fe8c47cae2d31
sw x3, 0(x2) # store 0xcb5fe8c47cae2d31 in memory
flw f11, 0(x2) # load 0xcb5fe8c47cae2d31 from memory into f11
fmadd.s f20, f27, f25, f11, dyn # perform operation
fmadd.s f20, f27, f25, f11, rdn # perform operation
fmadd.s f20, f27, f25, f11, rmm # perform operation
fmadd.s f20, f27, f25, f11, rne # perform operation
fmadd.s f20, f27, f25, f11, rtz # perform operation
fmadd.s f20, f27, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xca9ddc9c5cb8d470 # load x3 with value 0xca9ddc9c5cb8d470
sw x3, 0(x2) # store 0xca9ddc9c5cb8d470 in memory
flw f14, 0(x2) # load 0xca9ddc9c5cb8d470 from memory into f14
fmadd.s f12, f21, f18, f14, dyn # perform operation
fmadd.s f12, f21, f18, f14, rdn # perform operation
fmadd.s f12, f21, f18, f14, rmm # perform operation
fmadd.s f12, f21, f18, f14, rne # perform operation
fmadd.s f12, f21, f18, f14, rtz # perform operation
fmadd.s f12, f21, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x53309b2e7a1d1cc8 # load x3 with value 0x53309b2e7a1d1cc8
sw x3, 0(x2) # store 0x53309b2e7a1d1cc8 in memory
flw f10, 0(x2) # load 0x53309b2e7a1d1cc8 from memory into f10
fmadd.s f8, f6, f22, f10, dyn # perform operation
fmadd.s f8, f6, f22, f10, rdn # perform operation
fmadd.s f8, f6, f22, f10, rmm # perform operation
fmadd.s f8, f6, f22, f10, rne # perform operation
fmadd.s f8, f6, f22, f10, rtz # perform operation
fmadd.s f8, f6, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f6, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x7338023514427e40 # load x3 with value 0x7338023514427e40
sw x3, 0(x2) # store 0x7338023514427e40 in memory
flw f18, 0(x2) # load 0x7338023514427e40 from memory into f18
fmadd.s f20, f12, f15, f18, dyn # perform operation
fmadd.s f20, f12, f15, f18, rdn # perform operation
fmadd.s f20, f12, f15, f18, rmm # perform operation
fmadd.s f20, f12, f15, f18, rne # perform operation
fmadd.s f20, f12, f15, f18, rtz # perform operation
fmadd.s f20, f12, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x19a48e18a5dc6a46 # load x3 with value 0x19a48e18a5dc6a46
sw x3, 0(x2) # store 0x19a48e18a5dc6a46 in memory
flw f16, 0(x2) # load 0x19a48e18a5dc6a46 from memory into f16
fmadd.s f19, f8, f6, f16, dyn # perform operation
fmadd.s f19, f8, f6, f16, rdn # perform operation
fmadd.s f19, f8, f6, f16, rmm # perform operation
fmadd.s f19, f8, f6, f16, rne # perform operation
fmadd.s f19, f8, f6, f16, rtz # perform operation
fmadd.s f19, f8, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xd894a95b8f99ef81 # load x3 with value 0xd894a95b8f99ef81
sw x3, 0(x2) # store 0xd894a95b8f99ef81 in memory
flw f3, 0(x2) # load 0xd894a95b8f99ef81 from memory into f3
fmadd.s f28, f19, f7, f3, dyn # perform operation
fmadd.s f28, f19, f7, f3, rdn # perform operation
fmadd.s f28, f19, f7, f3, rmm # perform operation
fmadd.s f28, f19, f7, f3, rne # perform operation
fmadd.s f28, f19, f7, f3, rtz # perform operation
fmadd.s f28, f19, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x932653c324b3df3 # load x3 with value 0x932653c324b3df3
sw x3, 0(x2) # store 0x932653c324b3df3 in memory
flw f11, 0(x2) # load 0x932653c324b3df3 from memory into f11
fmadd.s f30, f29, f17, f11, dyn # perform operation
fmadd.s f30, f29, f17, f11, rdn # perform operation
fmadd.s f30, f29, f17, f11, rmm # perform operation
fmadd.s f30, f29, f17, f11, rne # perform operation
fmadd.s f30, f29, f17, f11, rtz # perform operation
fmadd.s f30, f29, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f29, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f29, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f29, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f29, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f29, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x5d9760ae8a3b9527 # load x3 with value 0x5d9760ae8a3b9527
sw x3, 0(x2) # store 0x5d9760ae8a3b9527 in memory
flw f21, 0(x2) # load 0x5d9760ae8a3b9527 from memory into f21
fmadd.s f2, f3, f24, f21, dyn # perform operation
fmadd.s f2, f3, f24, f21, rdn # perform operation
fmadd.s f2, f3, f24, f21, rmm # perform operation
fmadd.s f2, f3, f24, f21, rne # perform operation
fmadd.s f2, f3, f24, f21, rtz # perform operation
fmadd.s f2, f3, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x8df9c59df68b9210 # load x3 with value 0x8df9c59df68b9210
sw x3, 0(x2) # store 0x8df9c59df68b9210 in memory
flw f11, 0(x2) # load 0x8df9c59df68b9210 from memory into f11
fmadd.s f22, f2, f17, f11, dyn # perform operation
fmadd.s f22, f2, f17, f11, rdn # perform operation
fmadd.s f22, f2, f17, f11, rmm # perform operation
fmadd.s f22, f2, f17, f11, rne # perform operation
fmadd.s f22, f2, f17, f11, rtz # perform operation
fmadd.s f22, f2, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x2b110583e893a887 # load x3 with value 0x2b110583e893a887
sw x3, 0(x2) # store 0x2b110583e893a887 in memory
flw f13, 0(x2) # load 0x2b110583e893a887 from memory into f13
fmadd.s f22, f11, f28, f13, dyn # perform operation
fmadd.s f22, f11, f28, f13, rdn # perform operation
fmadd.s f22, f11, f28, f13, rmm # perform operation
fmadd.s f22, f11, f28, f13, rne # perform operation
fmadd.s f22, f11, f28, f13, rtz # perform operation
fmadd.s f22, f11, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f11, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f11, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xf2aa3c0545ca5cdc # load x3 with value 0xf2aa3c0545ca5cdc
sw x3, 0(x2) # store 0xf2aa3c0545ca5cdc in memory
flw f24, 0(x2) # load 0xf2aa3c0545ca5cdc from memory into f24
fmadd.s f3, f20, f14, f24, dyn # perform operation
fmadd.s f3, f20, f14, f24, rdn # perform operation
fmadd.s f3, f20, f14, f24, rmm # perform operation
fmadd.s f3, f20, f14, f24, rne # perform operation
fmadd.s f3, f20, f14, f24, rtz # perform operation
fmadd.s f3, f20, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xaeb4ad27fd4aa6ef # load x3 with value 0xaeb4ad27fd4aa6ef
sw x3, 0(x2) # store 0xaeb4ad27fd4aa6ef in memory
flw f1, 0(x2) # load 0xaeb4ad27fd4aa6ef from memory into f1
fmadd.s f17, f21, f7, f1, dyn # perform operation
fmadd.s f17, f21, f7, f1, rdn # perform operation
fmadd.s f17, f21, f7, f1, rmm # perform operation
fmadd.s f17, f21, f7, f1, rne # perform operation
fmadd.s f17, f21, f7, f1, rtz # perform operation
fmadd.s f17, f21, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x3f143c67d259a19c # load x3 with value 0x3f143c67d259a19c
sw x3, 0(x2) # store 0x3f143c67d259a19c in memory
flw f20, 0(x2) # load 0x3f143c67d259a19c from memory into f20
fmadd.s f13, f8, f15, f20, dyn # perform operation
fmadd.s f13, f8, f15, f20, rdn # perform operation
fmadd.s f13, f8, f15, f20, rmm # perform operation
fmadd.s f13, f8, f15, f20, rne # perform operation
fmadd.s f13, f8, f15, f20, rtz # perform operation
fmadd.s f13, f8, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x20a18bbe337eb85c # load x3 with value 0x20a18bbe337eb85c
sw x3, 0(x2) # store 0x20a18bbe337eb85c in memory
flw f6, 0(x2) # load 0x20a18bbe337eb85c from memory into f6
fmadd.s f22, f18, f7, f6, dyn # perform operation
fmadd.s f22, f18, f7, f6, rdn # perform operation
fmadd.s f22, f18, f7, f6, rmm # perform operation
fmadd.s f22, f18, f7, f6, rne # perform operation
fmadd.s f22, f18, f7, f6, rtz # perform operation
fmadd.s f22, f18, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x3166efc5de37c39d # load x3 with value 0x3166efc5de37c39d
sw x3, 0(x2) # store 0x3166efc5de37c39d in memory
flw f28, 0(x2) # load 0x3166efc5de37c39d from memory into f28
fmadd.s f18, f15, f25, f28, dyn # perform operation
fmadd.s f18, f15, f25, f28, rdn # perform operation
fmadd.s f18, f15, f25, f28, rmm # perform operation
fmadd.s f18, f15, f25, f28, rne # perform operation
fmadd.s f18, f15, f25, f28, rtz # perform operation
fmadd.s f18, f15, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x2ac1ec9eb72e4ed8 # load x3 with value 0x2ac1ec9eb72e4ed8
sw x3, 0(x2) # store 0x2ac1ec9eb72e4ed8 in memory
flw f30, 0(x2) # load 0x2ac1ec9eb72e4ed8 from memory into f30
fmadd.s f19, f17, f14, f30, dyn # perform operation
fmadd.s f19, f17, f14, f30, rdn # perform operation
fmadd.s f19, f17, f14, f30, rmm # perform operation
fmadd.s f19, f17, f14, f30, rne # perform operation
fmadd.s f19, f17, f14, f30, rtz # perform operation
fmadd.s f19, f17, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f17, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x6515dc45555b6652 # load x3 with value 0x6515dc45555b6652
sw x3, 0(x2) # store 0x6515dc45555b6652 in memory
flw f18, 0(x2) # load 0x6515dc45555b6652 from memory into f18
fmadd.s f26, f22, f8, f18, dyn # perform operation
fmadd.s f26, f22, f8, f18, rdn # perform operation
fmadd.s f26, f22, f8, f18, rmm # perform operation
fmadd.s f26, f22, f8, f18, rne # perform operation
fmadd.s f26, f22, f8, f18, rtz # perform operation
fmadd.s f26, f22, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x62cab11739c9a457 # load x3 with value 0x62cab11739c9a457
sw x3, 0(x2) # store 0x62cab11739c9a457 in memory
flw f20, 0(x2) # load 0x62cab11739c9a457 from memory into f20
fmadd.s f19, f21, f2, f20, dyn # perform operation
fmadd.s f19, f21, f2, f20, rdn # perform operation
fmadd.s f19, f21, f2, f20, rmm # perform operation
fmadd.s f19, f21, f2, f20, rne # perform operation
fmadd.s f19, f21, f2, f20, rtz # perform operation
fmadd.s f19, f21, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f21, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xbb3ecff4427e26ff # load x3 with value 0xbb3ecff4427e26ff
sw x3, 0(x2) # store 0xbb3ecff4427e26ff in memory
flw f1, 0(x2) # load 0xbb3ecff4427e26ff from memory into f1
fmadd.s f21, f22, f3, f1, dyn # perform operation
fmadd.s f21, f22, f3, f1, rdn # perform operation
fmadd.s f21, f22, f3, f1, rmm # perform operation
fmadd.s f21, f22, f3, f1, rne # perform operation
fmadd.s f21, f22, f3, f1, rtz # perform operation
fmadd.s f21, f22, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f22, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f22, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f22, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f22, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f22, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x9ceee4d8ae328ecd # load x3 with value 0x9ceee4d8ae328ecd
sw x3, 0(x2) # store 0x9ceee4d8ae328ecd in memory
flw f23, 0(x2) # load 0x9ceee4d8ae328ecd from memory into f23
fmadd.s f5, f18, f1, f23, dyn # perform operation
fmadd.s f5, f18, f1, f23, rdn # perform operation
fmadd.s f5, f18, f1, f23, rmm # perform operation
fmadd.s f5, f18, f1, f23, rne # perform operation
fmadd.s f5, f18, f1, f23, rtz # perform operation
fmadd.s f5, f18, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x47ff996ac96a5011 # load x3 with value 0x47ff996ac96a5011
sw x3, 0(x2) # store 0x47ff996ac96a5011 in memory
flw f2, 0(x2) # load 0x47ff996ac96a5011 from memory into f2
fmadd.s f21, f13, f22, f2, dyn # perform operation
fmadd.s f21, f13, f22, f2, rdn # perform operation
fmadd.s f21, f13, f22, f2, rmm # perform operation
fmadd.s f21, f13, f22, f2, rne # perform operation
fmadd.s f21, f13, f22, f2, rtz # perform operation
fmadd.s f21, f13, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x1e179d466fe04c15 # load x3 with value 0x1e179d466fe04c15
sw x3, 0(x2) # store 0x1e179d466fe04c15 in memory
flw f9, 0(x2) # load 0x1e179d466fe04c15 from memory into f9
fmadd.s f23, f27, f8, f9, dyn # perform operation
fmadd.s f23, f27, f8, f9, rdn # perform operation
fmadd.s f23, f27, f8, f9, rmm # perform operation
fmadd.s f23, f27, f8, f9, rne # perform operation
fmadd.s f23, f27, f8, f9, rtz # perform operation
fmadd.s f23, f27, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f27, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x794a4d58159d6bf3 # load x3 with value 0x794a4d58159d6bf3
sw x3, 0(x2) # store 0x794a4d58159d6bf3 in memory
flw f9, 0(x2) # load 0x794a4d58159d6bf3 from memory into f9
fmadd.s f17, f29, f26, f9, dyn # perform operation
fmadd.s f17, f29, f26, f9, rdn # perform operation
fmadd.s f17, f29, f26, f9, rmm # perform operation
fmadd.s f17, f29, f26, f9, rne # perform operation
fmadd.s f17, f29, f26, f9, rtz # perform operation
fmadd.s f17, f29, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xe986fa8e5cba55d2 # load x3 with value 0xe986fa8e5cba55d2
sw x3, 0(x2) # store 0xe986fa8e5cba55d2 in memory
flw f26, 0(x2) # load 0xe986fa8e5cba55d2 from memory into f26
fmadd.s f22, f5, f10, f26, dyn # perform operation
fmadd.s f22, f5, f10, f26, rdn # perform operation
fmadd.s f22, f5, f10, f26, rmm # perform operation
fmadd.s f22, f5, f10, f26, rne # perform operation
fmadd.s f22, f5, f10, f26, rtz # perform operation
fmadd.s f22, f5, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x5807da5963d0c601 # load x3 with value 0x5807da5963d0c601
sw x3, 0(x2) # store 0x5807da5963d0c601 in memory
flw f7, 0(x2) # load 0x5807da5963d0c601 from memory into f7
fmadd.s f30, f14, f8, f7, dyn # perform operation
fmadd.s f30, f14, f8, f7, rdn # perform operation
fmadd.s f30, f14, f8, f7, rmm # perform operation
fmadd.s f30, f14, f8, f7, rne # perform operation
fmadd.s f30, f14, f8, f7, rtz # perform operation
fmadd.s f30, f14, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f14, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xea54d6f081377f1e # load x3 with value 0xea54d6f081377f1e
sw x3, 0(x2) # store 0xea54d6f081377f1e in memory
flw f20, 0(x2) # load 0xea54d6f081377f1e from memory into f20
fmadd.s f11, f19, f1, f20, dyn # perform operation
fmadd.s f11, f19, f1, f20, rdn # perform operation
fmadd.s f11, f19, f1, f20, rmm # perform operation
fmadd.s f11, f19, f1, f20, rne # perform operation
fmadd.s f11, f19, f1, f20, rtz # perform operation
fmadd.s f11, f19, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xb87880ea42f232bb # load x3 with value 0xb87880ea42f232bb
sw x3, 0(x2) # store 0xb87880ea42f232bb in memory
flw f28, 0(x2) # load 0xb87880ea42f232bb from memory into f28
fmadd.s f29, f31, f15, f28, dyn # perform operation
fmadd.s f29, f31, f15, f28, rdn # perform operation
fmadd.s f29, f31, f15, f28, rmm # perform operation
fmadd.s f29, f31, f15, f28, rne # perform operation
fmadd.s f29, f31, f15, f28, rtz # perform operation
fmadd.s f29, f31, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x8706aa09321b461a # load x3 with value 0x8706aa09321b461a
sw x3, 0(x2) # store 0x8706aa09321b461a in memory
flw f8, 0(x2) # load 0x8706aa09321b461a from memory into f8
fmadd.s f7, f11, f2, f8, dyn # perform operation
fmadd.s f7, f11, f2, f8, rdn # perform operation
fmadd.s f7, f11, f2, f8, rmm # perform operation
fmadd.s f7, f11, f2, f8, rne # perform operation
fmadd.s f7, f11, f2, f8, rtz # perform operation
fmadd.s f7, f11, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x3ec5e2d6aa9b5f0f # load x3 with value 0x3ec5e2d6aa9b5f0f
sw x3, 0(x2) # store 0x3ec5e2d6aa9b5f0f in memory
flw f31, 0(x2) # load 0x3ec5e2d6aa9b5f0f from memory into f31
fmadd.s f27, f1, f17, f31, dyn # perform operation
fmadd.s f27, f1, f17, f31, rdn # perform operation
fmadd.s f27, f1, f17, f31, rmm # perform operation
fmadd.s f27, f1, f17, f31, rne # perform operation
fmadd.s f27, f1, f17, f31, rtz # perform operation
fmadd.s f27, f1, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0xa762699e1625104e # load x3 with value 0xa762699e1625104e
sw x3, 0(x2) # store 0xa762699e1625104e in memory
flw f13, 0(x2) # load 0xa762699e1625104e from memory into f13
fmadd.s f6, f23, f8, f13, dyn # perform operation
fmadd.s f6, f23, f8, f13, rdn # perform operation
fmadd.s f6, f23, f8, f13, rmm # perform operation
fmadd.s f6, f23, f8, f13, rne # perform operation
fmadd.s f6, f23, f8, f13, rtz # perform operation
fmadd.s f6, f23, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f23, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x4e5217f5f6dd21b # load x3 with value 0x4e5217f5f6dd21b
sw x3, 0(x2) # store 0x4e5217f5f6dd21b in memory
flw f26, 0(x2) # load 0x4e5217f5f6dd21b from memory into f26
fmadd.s f24, f29, f19, f26, dyn # perform operation
fmadd.s f24, f29, f19, f26, rdn # perform operation
fmadd.s f24, f29, f19, f26, rmm # perform operation
fmadd.s f24, f29, f19, f26, rne # perform operation
fmadd.s f24, f29, f19, f26, rtz # perform operation
fmadd.s f24, f29, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f29, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f29, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f29, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f29, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f29, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xc718b01b3d22f4f7 # load x3 with value 0xc718b01b3d22f4f7
sw x3, 0(x2) # store 0xc718b01b3d22f4f7 in memory
flw f12, 0(x2) # load 0xc718b01b3d22f4f7 from memory into f12
fmadd.s f27, f1, f8, f12, dyn # perform operation
fmadd.s f27, f1, f8, f12, rdn # perform operation
fmadd.s f27, f1, f8, f12, rmm # perform operation
fmadd.s f27, f1, f8, f12, rne # perform operation
fmadd.s f27, f1, f8, f12, rtz # perform operation
fmadd.s f27, f1, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x204a9458c3439af3 # load x3 with value 0x204a9458c3439af3
sw x3, 0(x2) # store 0x204a9458c3439af3 in memory
flw f20, 0(x2) # load 0x204a9458c3439af3 from memory into f20
fmadd.s f3, f5, f25, f20, dyn # perform operation
fmadd.s f3, f5, f25, f20, rdn # perform operation
fmadd.s f3, f5, f25, f20, rmm # perform operation
fmadd.s f3, f5, f25, f20, rne # perform operation
fmadd.s f3, f5, f25, f20, rtz # perform operation
fmadd.s f3, f5, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f5, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f5, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x1742eefbda5b1230 # load x3 with value 0x1742eefbda5b1230
sw x3, 0(x2) # store 0x1742eefbda5b1230 in memory
flw f7, 0(x2) # load 0x1742eefbda5b1230 from memory into f7
fmadd.s f16, f30, f21, f7, dyn # perform operation
fmadd.s f16, f30, f21, f7, rdn # perform operation
fmadd.s f16, f30, f21, f7, rmm # perform operation
fmadd.s f16, f30, f21, f7, rne # perform operation
fmadd.s f16, f30, f21, f7, rtz # perform operation
fmadd.s f16, f30, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f30, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xc942bfbcb6d234ed # load x3 with value 0xc942bfbcb6d234ed
sw x3, 0(x2) # store 0xc942bfbcb6d234ed in memory
flw f2, 0(x2) # load 0xc942bfbcb6d234ed from memory into f2
fmadd.s f3, f13, f28, f2, dyn # perform operation
fmadd.s f3, f13, f28, f2, rdn # perform operation
fmadd.s f3, f13, f28, f2, rmm # perform operation
fmadd.s f3, f13, f28, f2, rne # perform operation
fmadd.s f3, f13, f28, f2, rtz # perform operation
fmadd.s f3, f13, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x8d07d059357b949c # load x3 with value 0x8d07d059357b949c
sw x3, 0(x2) # store 0x8d07d059357b949c in memory
flw f27, 0(x2) # load 0x8d07d059357b949c from memory into f27
fmadd.s f3, f23, f25, f27, dyn # perform operation
fmadd.s f3, f23, f25, f27, rdn # perform operation
fmadd.s f3, f23, f25, f27, rmm # perform operation
fmadd.s f3, f23, f25, f27, rne # perform operation
fmadd.s f3, f23, f25, f27, rtz # perform operation
fmadd.s f3, f23, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x44acdbfca8f5c997 # load x3 with value 0x44acdbfca8f5c997
sw x3, 0(x2) # store 0x44acdbfca8f5c997 in memory
flw f20, 0(x2) # load 0x44acdbfca8f5c997 from memory into f20
fmadd.s f13, f8, f18, f20, dyn # perform operation
fmadd.s f13, f8, f18, f20, rdn # perform operation
fmadd.s f13, f8, f18, f20, rmm # perform operation
fmadd.s f13, f8, f18, f20, rne # perform operation
fmadd.s f13, f8, f18, f20, rtz # perform operation
fmadd.s f13, f8, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x5acc1b74dfeaa2f9 # load x3 with value 0x5acc1b74dfeaa2f9
sw x3, 0(x2) # store 0x5acc1b74dfeaa2f9 in memory
flw f14, 0(x2) # load 0x5acc1b74dfeaa2f9 from memory into f14
fmadd.s f12, f15, f6, f14, dyn # perform operation
fmadd.s f12, f15, f6, f14, rdn # perform operation
fmadd.s f12, f15, f6, f14, rmm # perform operation
fmadd.s f12, f15, f6, f14, rne # perform operation
fmadd.s f12, f15, f6, f14, rtz # perform operation
fmadd.s f12, f15, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x250b4b5bdbdec9f1 # load x3 with value 0x250b4b5bdbdec9f1
sw x3, 0(x2) # store 0x250b4b5bdbdec9f1 in memory
flw f5, 0(x2) # load 0x250b4b5bdbdec9f1 from memory into f5
fmadd.s f31, f21, f3, f5, dyn # perform operation
fmadd.s f31, f21, f3, f5, rdn # perform operation
fmadd.s f31, f21, f3, f5, rmm # perform operation
fmadd.s f31, f21, f3, f5, rne # perform operation
fmadd.s f31, f21, f3, f5, rtz # perform operation
fmadd.s f31, f21, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f21, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f21, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f21, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f21, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f21, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xb6956c6f1d5b32be # load x3 with value 0xb6956c6f1d5b32be
sw x3, 0(x2) # store 0xb6956c6f1d5b32be in memory
flw f14, 0(x2) # load 0xb6956c6f1d5b32be from memory into f14
fmadd.s f18, f6, f13, f14, dyn # perform operation
fmadd.s f18, f6, f13, f14, rdn # perform operation
fmadd.s f18, f6, f13, f14, rmm # perform operation
fmadd.s f18, f6, f13, f14, rne # perform operation
fmadd.s f18, f6, f13, f14, rtz # perform operation
fmadd.s f18, f6, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f13, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x571029ff316e06a6 # load x3 with value 0x571029ff316e06a6
sw x3, 0(x2) # store 0x571029ff316e06a6 in memory
flw f24, 0(x2) # load 0x571029ff316e06a6 from memory into f24
fmadd.s f7, f26, f15, f24, dyn # perform operation
fmadd.s f7, f26, f15, f24, rdn # perform operation
fmadd.s f7, f26, f15, f24, rmm # perform operation
fmadd.s f7, f26, f15, f24, rne # perform operation
fmadd.s f7, f26, f15, f24, rtz # perform operation
fmadd.s f7, f26, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f26, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f26, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0xd2fed4bdf9340bc # load x3 with value 0xd2fed4bdf9340bc
sw x3, 0(x2) # store 0xd2fed4bdf9340bc in memory
flw f20, 0(x2) # load 0xd2fed4bdf9340bc from memory into f20
fmadd.s f12, f22, f28, f20, dyn # perform operation
fmadd.s f12, f22, f28, f20, rdn # perform operation
fmadd.s f12, f22, f28, f20, rmm # perform operation
fmadd.s f12, f22, f28, f20, rne # perform operation
fmadd.s f12, f22, f28, f20, rtz # perform operation
fmadd.s f12, f22, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x6addb85c446c9ba4 # load x3 with value 0x6addb85c446c9ba4
sw x3, 0(x2) # store 0x6addb85c446c9ba4 in memory
flw f17, 0(x2) # load 0x6addb85c446c9ba4 from memory into f17
fmadd.s f5, f25, f14, f17, dyn # perform operation
fmadd.s f5, f25, f14, f17, rdn # perform operation
fmadd.s f5, f25, f14, f17, rmm # perform operation
fmadd.s f5, f25, f14, f17, rne # perform operation
fmadd.s f5, f25, f14, f17, rtz # perform operation
fmadd.s f5, f25, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xd18666f1a748d25d # load x3 with value 0xd18666f1a748d25d
sw x3, 0(x2) # store 0xd18666f1a748d25d in memory
flw f20, 0(x2) # load 0xd18666f1a748d25d from memory into f20
fmadd.s f12, f30, f5, f20, dyn # perform operation
fmadd.s f12, f30, f5, f20, rdn # perform operation
fmadd.s f12, f30, f5, f20, rmm # perform operation
fmadd.s f12, f30, f5, f20, rne # perform operation
fmadd.s f12, f30, f5, f20, rtz # perform operation
fmadd.s f12, f30, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f30, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x1f1b37c490fd7920 # load x3 with value 0x1f1b37c490fd7920
sw x3, 0(x2) # store 0x1f1b37c490fd7920 in memory
flw f15, 0(x2) # load 0x1f1b37c490fd7920 from memory into f15
fmadd.s f9, f12, f21, f15, dyn # perform operation
fmadd.s f9, f12, f21, f15, rdn # perform operation
fmadd.s f9, f12, f21, f15, rmm # perform operation
fmadd.s f9, f12, f21, f15, rne # perform operation
fmadd.s f9, f12, f21, f15, rtz # perform operation
fmadd.s f9, f12, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f12, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x6920a4d68c282305 # load x3 with value 0x6920a4d68c282305
sw x3, 0(x2) # store 0x6920a4d68c282305 in memory
flw f27, 0(x2) # load 0x6920a4d68c282305 from memory into f27
fmadd.s f17, f3, f20, f27, dyn # perform operation
fmadd.s f17, f3, f20, f27, rdn # perform operation
fmadd.s f17, f3, f20, f27, rmm # perform operation
fmadd.s f17, f3, f20, f27, rne # perform operation
fmadd.s f17, f3, f20, f27, rtz # perform operation
fmadd.s f17, f3, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xdce4b0ac089e57f2 # load x3 with value 0xdce4b0ac089e57f2
sw x3, 0(x2) # store 0xdce4b0ac089e57f2 in memory
flw f1, 0(x2) # load 0xdce4b0ac089e57f2 from memory into f1
fmadd.s f15, f18, f28, f1, dyn # perform operation
fmadd.s f15, f18, f28, f1, rdn # perform operation
fmadd.s f15, f18, f28, f1, rmm # perform operation
fmadd.s f15, f18, f28, f1, rne # perform operation
fmadd.s f15, f18, f28, f1, rtz # perform operation
fmadd.s f15, f18, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x17b93d8d7a3d9be5 # load x3 with value 0x17b93d8d7a3d9be5
sw x3, 0(x2) # store 0x17b93d8d7a3d9be5 in memory
flw f31, 0(x2) # load 0x17b93d8d7a3d9be5 from memory into f31
fmadd.s f1, f3, f9, f31, dyn # perform operation
fmadd.s f1, f3, f9, f31, rdn # perform operation
fmadd.s f1, f3, f9, f31, rmm # perform operation
fmadd.s f1, f3, f9, f31, rne # perform operation
fmadd.s f1, f3, f9, f31, rtz # perform operation
fmadd.s f1, f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f3, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x3f480ce9038ad8e6 # load x3 with value 0x3f480ce9038ad8e6
sw x3, 0(x2) # store 0x3f480ce9038ad8e6 in memory
flw f9, 0(x2) # load 0x3f480ce9038ad8e6 from memory into f9
fmadd.s f16, f7, f21, f9, dyn # perform operation
fmadd.s f16, f7, f21, f9, rdn # perform operation
fmadd.s f16, f7, f21, f9, rmm # perform operation
fmadd.s f16, f7, f21, f9, rne # perform operation
fmadd.s f16, f7, f21, f9, rtz # perform operation
fmadd.s f16, f7, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f7, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f7, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x9468dba5d47c34ee # load x3 with value 0x9468dba5d47c34ee
sw x3, 0(x2) # store 0x9468dba5d47c34ee in memory
flw f7, 0(x2) # load 0x9468dba5d47c34ee from memory into f7
fmadd.s f10, f6, f26, f7, dyn # perform operation
fmadd.s f10, f6, f26, f7, rdn # perform operation
fmadd.s f10, f6, f26, f7, rmm # perform operation
fmadd.s f10, f6, f26, f7, rne # perform operation
fmadd.s f10, f6, f26, f7, rtz # perform operation
fmadd.s f10, f6, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0xd1f35f732bb72c9b # load x3 with value 0xd1f35f732bb72c9b
sw x3, 0(x2) # store 0xd1f35f732bb72c9b in memory
flw f13, 0(x2) # load 0xd1f35f732bb72c9b from memory into f13
fmadd.s f14, f10, f17, f13, dyn # perform operation
fmadd.s f14, f10, f17, f13, rdn # perform operation
fmadd.s f14, f10, f17, f13, rmm # perform operation
fmadd.s f14, f10, f17, f13, rne # perform operation
fmadd.s f14, f10, f17, f13, rtz # perform operation
fmadd.s f14, f10, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xc93a5253df46c68b # load x3 with value 0xc93a5253df46c68b
sw x3, 0(x2) # store 0xc93a5253df46c68b in memory
flw f15, 0(x2) # load 0xc93a5253df46c68b from memory into f15
fmadd.s f10, f7, f29, f15, dyn # perform operation
fmadd.s f10, f7, f29, f15, rdn # perform operation
fmadd.s f10, f7, f29, f15, rmm # perform operation
fmadd.s f10, f7, f29, f15, rne # perform operation
fmadd.s f10, f7, f29, f15, rtz # perform operation
fmadd.s f10, f7, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xc6f23362d7762515 # load x3 with value 0xc6f23362d7762515
sw x3, 0(x2) # store 0xc6f23362d7762515 in memory
flw f20, 0(x2) # load 0xc6f23362d7762515 from memory into f20
fmadd.s f17, f12, f27, f20, dyn # perform operation
fmadd.s f17, f12, f27, f20, rdn # perform operation
fmadd.s f17, f12, f27, f20, rmm # perform operation
fmadd.s f17, f12, f27, f20, rne # perform operation
fmadd.s f17, f12, f27, f20, rtz # perform operation
fmadd.s f17, f12, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f12, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f12, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x3156996048450238 # load x3 with value 0x3156996048450238
sw x3, 0(x2) # store 0x3156996048450238 in memory
flw f2, 0(x2) # load 0x3156996048450238 from memory into f2
fmadd.s f6, f18, f20, f2, dyn # perform operation
fmadd.s f6, f18, f20, f2, rdn # perform operation
fmadd.s f6, f18, f20, f2, rmm # perform operation
fmadd.s f6, f18, f20, f2, rne # perform operation
fmadd.s f6, f18, f20, f2, rtz # perform operation
fmadd.s f6, f18, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xc9d0703c696b64e3 # load x3 with value 0xc9d0703c696b64e3
sw x3, 0(x2) # store 0xc9d0703c696b64e3 in memory
flw f25, 0(x2) # load 0xc9d0703c696b64e3 from memory into f25
fmadd.s f23, f26, f12, f25, dyn # perform operation
fmadd.s f23, f26, f12, f25, rdn # perform operation
fmadd.s f23, f26, f12, f25, rmm # perform operation
fmadd.s f23, f26, f12, f25, rne # perform operation
fmadd.s f23, f26, f12, f25, rtz # perform operation
fmadd.s f23, f26, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x8a237ca09e2192ff # load x3 with value 0x8a237ca09e2192ff
sw x3, 0(x2) # store 0x8a237ca09e2192ff in memory
flw f1, 0(x2) # load 0x8a237ca09e2192ff from memory into f1
fmadd.s f14, f6, f20, f1, dyn # perform operation
fmadd.s f14, f6, f20, f1, rdn # perform operation
fmadd.s f14, f6, f20, f1, rmm # perform operation
fmadd.s f14, f6, f20, f1, rne # perform operation
fmadd.s f14, f6, f20, f1, rtz # perform operation
fmadd.s f14, f6, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x2979beed957bdd18 # load x3 with value 0x2979beed957bdd18
sw x3, 0(x2) # store 0x2979beed957bdd18 in memory
flw f11, 0(x2) # load 0x2979beed957bdd18 from memory into f11
fmadd.s f21, f15, f25, f11, dyn # perform operation
fmadd.s f21, f15, f25, f11, rdn # perform operation
fmadd.s f21, f15, f25, f11, rmm # perform operation
fmadd.s f21, f15, f25, f11, rne # perform operation
fmadd.s f21, f15, f25, f11, rtz # perform operation
fmadd.s f21, f15, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f15, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f15, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x1c75a353206392c # load x3 with value 0x1c75a353206392c
sw x3, 0(x2) # store 0x1c75a353206392c in memory
flw f1, 0(x2) # load 0x1c75a353206392c from memory into f1
fmadd.s f10, f7, f18, f1, dyn # perform operation
fmadd.s f10, f7, f18, f1, rdn # perform operation
fmadd.s f10, f7, f18, f1, rmm # perform operation
fmadd.s f10, f7, f18, f1, rne # perform operation
fmadd.s f10, f7, f18, f1, rtz # perform operation
fmadd.s f10, f7, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x888b6741e684c240 # load x3 with value 0x888b6741e684c240
sw x3, 0(x2) # store 0x888b6741e684c240 in memory
flw f30, 0(x2) # load 0x888b6741e684c240 from memory into f30
fmadd.s f13, f26, f3, f30, dyn # perform operation
fmadd.s f13, f26, f3, f30, rdn # perform operation
fmadd.s f13, f26, f3, f30, rmm # perform operation
fmadd.s f13, f26, f3, f30, rne # perform operation
fmadd.s f13, f26, f3, f30, rtz # perform operation
fmadd.s f13, f26, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xb5de671a5baf82fb # load x3 with value 0xb5de671a5baf82fb
sw x3, 0(x2) # store 0xb5de671a5baf82fb in memory
flw f2, 0(x2) # load 0xb5de671a5baf82fb from memory into f2
fmadd.s f25, f29, f27, f2, dyn # perform operation
fmadd.s f25, f29, f27, f2, rdn # perform operation
fmadd.s f25, f29, f27, f2, rmm # perform operation
fmadd.s f25, f29, f27, f2, rne # perform operation
fmadd.s f25, f29, f27, f2, rtz # perform operation
fmadd.s f25, f29, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f29, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f29, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f29, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f29, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f29, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xe2a822901748a355 # load x3 with value 0xe2a822901748a355
sw x3, 0(x2) # store 0xe2a822901748a355 in memory
flw f2, 0(x2) # load 0xe2a822901748a355 from memory into f2
fmadd.s f1, f11, f23, f2, dyn # perform operation
fmadd.s f1, f11, f23, f2, rdn # perform operation
fmadd.s f1, f11, f23, f2, rmm # perform operation
fmadd.s f1, f11, f23, f2, rne # perform operation
fmadd.s f1, f11, f23, f2, rtz # perform operation
fmadd.s f1, f11, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f11, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xa21d5eb565e4cf18 # load x3 with value 0xa21d5eb565e4cf18
sw x3, 0(x2) # store 0xa21d5eb565e4cf18 in memory
flw f5, 0(x2) # load 0xa21d5eb565e4cf18 from memory into f5
fmadd.s f2, f17, f30, f5, dyn # perform operation
fmadd.s f2, f17, f30, f5, rdn # perform operation
fmadd.s f2, f17, f30, f5, rmm # perform operation
fmadd.s f2, f17, f30, f5, rne # perform operation
fmadd.s f2, f17, f30, f5, rtz # perform operation
fmadd.s f2, f17, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x3a2be4f6623c2f2b # load x3 with value 0x3a2be4f6623c2f2b
sw x3, 0(x2) # store 0x3a2be4f6623c2f2b in memory
flw f23, 0(x2) # load 0x3a2be4f6623c2f2b from memory into f23
fmadd.s f21, f11, f5, f23, dyn # perform operation
fmadd.s f21, f11, f5, f23, rdn # perform operation
fmadd.s f21, f11, f5, f23, rmm # perform operation
fmadd.s f21, f11, f5, f23, rne # perform operation
fmadd.s f21, f11, f5, f23, rtz # perform operation
fmadd.s f21, f11, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x598b0c45236dfedd # load x3 with value 0x598b0c45236dfedd
sw x3, 0(x2) # store 0x598b0c45236dfedd in memory
flw f29, 0(x2) # load 0x598b0c45236dfedd from memory into f29
fmadd.s f12, f31, f22, f29, dyn # perform operation
fmadd.s f12, f31, f22, f29, rdn # perform operation
fmadd.s f12, f31, f22, f29, rmm # perform operation
fmadd.s f12, f31, f22, f29, rne # perform operation
fmadd.s f12, f31, f22, f29, rtz # perform operation
fmadd.s f12, f31, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xefc64932f642887d # load x3 with value 0xefc64932f642887d
sw x3, 0(x2) # store 0xefc64932f642887d in memory
flw f27, 0(x2) # load 0xefc64932f642887d from memory into f27
fmadd.s f21, f3, f28, f27, dyn # perform operation
fmadd.s f21, f3, f28, f27, rdn # perform operation
fmadd.s f21, f3, f28, f27, rmm # perform operation
fmadd.s f21, f3, f28, f27, rne # perform operation
fmadd.s f21, f3, f28, f27, rtz # perform operation
fmadd.s f21, f3, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x573e9d933a4931be # load x3 with value 0x573e9d933a4931be
sw x3, 0(x2) # store 0x573e9d933a4931be in memory
flw f17, 0(x2) # load 0x573e9d933a4931be from memory into f17
fmadd.s f9, f13, f31, f17, dyn # perform operation
fmadd.s f9, f13, f31, f17, rdn # perform operation
fmadd.s f9, f13, f31, f17, rmm # perform operation
fmadd.s f9, f13, f31, f17, rne # perform operation
fmadd.s f9, f13, f31, f17, rtz # perform operation
fmadd.s f9, f13, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x728e9bd9d57a1af4 # load x3 with value 0x728e9bd9d57a1af4
sw x3, 0(x2) # store 0x728e9bd9d57a1af4 in memory
flw f24, 0(x2) # load 0x728e9bd9d57a1af4 from memory into f24
fmadd.s f15, f6, f1, f24, dyn # perform operation
fmadd.s f15, f6, f1, f24, rdn # perform operation
fmadd.s f15, f6, f1, f24, rmm # perform operation
fmadd.s f15, f6, f1, f24, rne # perform operation
fmadd.s f15, f6, f1, f24, rtz # perform operation
fmadd.s f15, f6, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f6, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f6, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x59bb9b618037bc57 # load x3 with value 0x59bb9b618037bc57
sw x3, 0(x2) # store 0x59bb9b618037bc57 in memory
flw f6, 0(x2) # load 0x59bb9b618037bc57 from memory into f6
fmadd.s f25, f11, f17, f6, dyn # perform operation
fmadd.s f25, f11, f17, f6, rdn # perform operation
fmadd.s f25, f11, f17, f6, rmm # perform operation
fmadd.s f25, f11, f17, f6, rne # perform operation
fmadd.s f25, f11, f17, f6, rtz # perform operation
fmadd.s f25, f11, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f11, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f11, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f11, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f11, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f11, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x6a665b50ecc33614 # load x3 with value 0x6a665b50ecc33614
sw x3, 0(x2) # store 0x6a665b50ecc33614 in memory
flw f5, 0(x2) # load 0x6a665b50ecc33614 from memory into f5
fmadd.s f24, f11, f1, f5, dyn # perform operation
fmadd.s f24, f11, f1, f5, rdn # perform operation
fmadd.s f24, f11, f1, f5, rmm # perform operation
fmadd.s f24, f11, f1, f5, rne # perform operation
fmadd.s f24, f11, f1, f5, rtz # perform operation
fmadd.s f24, f11, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f1, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x1a4743cdb69f3697 # load x3 with value 0x1a4743cdb69f3697
sw x3, 0(x2) # store 0x1a4743cdb69f3697 in memory
flw f28, 0(x2) # load 0x1a4743cdb69f3697 from memory into f28
fmadd.s f17, f8, f23, f28, dyn # perform operation
fmadd.s f17, f8, f23, f28, rdn # perform operation
fmadd.s f17, f8, f23, f28, rmm # perform operation
fmadd.s f17, f8, f23, f28, rne # perform operation
fmadd.s f17, f8, f23, f28, rtz # perform operation
fmadd.s f17, f8, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xb64a0dedb7770119 # load x3 with value 0xb64a0dedb7770119
sw x3, 0(x2) # store 0xb64a0dedb7770119 in memory
flw f22, 0(x2) # load 0xb64a0dedb7770119 from memory into f22
fmadd.s f21, f12, f14, f22, dyn # perform operation
fmadd.s f21, f12, f14, f22, rdn # perform operation
fmadd.s f21, f12, f14, f22, rmm # perform operation
fmadd.s f21, f12, f14, f22, rne # perform operation
fmadd.s f21, f12, f14, f22, rtz # perform operation
fmadd.s f21, f12, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f12, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x8420f2c187700730 # load x3 with value 0x8420f2c187700730
sw x3, 0(x2) # store 0x8420f2c187700730 in memory
flw f29, 0(x2) # load 0x8420f2c187700730 from memory into f29
fmadd.s f27, f12, f1, f29, dyn # perform operation
fmadd.s f27, f12, f1, f29, rdn # perform operation
fmadd.s f27, f12, f1, f29, rmm # perform operation
fmadd.s f27, f12, f1, f29, rne # perform operation
fmadd.s f27, f12, f1, f29, rtz # perform operation
fmadd.s f27, f12, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f12, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f12, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x6e1249b5db377a4b # load x3 with value 0x6e1249b5db377a4b
sw x3, 0(x2) # store 0x6e1249b5db377a4b in memory
flw f14, 0(x2) # load 0x6e1249b5db377a4b from memory into f14
fmadd.s f27, f31, f17, f14, dyn # perform operation
fmadd.s f27, f31, f17, f14, rdn # perform operation
fmadd.s f27, f31, f17, f14, rmm # perform operation
fmadd.s f27, f31, f17, f14, rne # perform operation
fmadd.s f27, f31, f17, f14, rtz # perform operation
fmadd.s f27, f31, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xfd2e61adf80dd0d4 # load x3 with value 0xfd2e61adf80dd0d4
sw x3, 0(x2) # store 0xfd2e61adf80dd0d4 in memory
flw f15, 0(x2) # load 0xfd2e61adf80dd0d4 from memory into f15
fmadd.s f24, f1, f7, f15, dyn # perform operation
fmadd.s f24, f1, f7, f15, rdn # perform operation
fmadd.s f24, f1, f7, f15, rmm # perform operation
fmadd.s f24, f1, f7, f15, rne # perform operation
fmadd.s f24, f1, f7, f15, rtz # perform operation
fmadd.s f24, f1, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0xa84b4178f2dceb50 # load x3 with value 0xa84b4178f2dceb50
sw x3, 0(x2) # store 0xa84b4178f2dceb50 in memory
flw f8, 0(x2) # load 0xa84b4178f2dceb50 from memory into f8
fmadd.s f30, f18, f21, f8, dyn # perform operation
fmadd.s f30, f18, f21, f8, rdn # perform operation
fmadd.s f30, f18, f21, f8, rmm # perform operation
fmadd.s f30, f18, f21, f8, rne # perform operation
fmadd.s f30, f18, f21, f8, rtz # perform operation
fmadd.s f30, f18, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x3ee87d3658cef3eb # load x3 with value 0x3ee87d3658cef3eb
sw x3, 0(x2) # store 0x3ee87d3658cef3eb in memory
flw f9, 0(x2) # load 0x3ee87d3658cef3eb from memory into f9
fmadd.s f22, f15, f13, f9, dyn # perform operation
fmadd.s f22, f15, f13, f9, rdn # perform operation
fmadd.s f22, f15, f13, f9, rmm # perform operation
fmadd.s f22, f15, f13, f9, rne # perform operation
fmadd.s f22, f15, f13, f9, rtz # perform operation
fmadd.s f22, f15, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x6cff28bde4ddfd93 # load x3 with value 0x6cff28bde4ddfd93
sw x3, 0(x2) # store 0x6cff28bde4ddfd93 in memory
flw f27, 0(x2) # load 0x6cff28bde4ddfd93 from memory into f27
fmadd.s f10, f19, f13, f27, dyn # perform operation
fmadd.s f10, f19, f13, f27, rdn # perform operation
fmadd.s f10, f19, f13, f27, rmm # perform operation
fmadd.s f10, f19, f13, f27, rne # perform operation
fmadd.s f10, f19, f13, f27, rtz # perform operation
fmadd.s f10, f19, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f19, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f19, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x3f7437d73b76aa0e # load x3 with value 0x3f7437d73b76aa0e
sw x3, 0(x2) # store 0x3f7437d73b76aa0e in memory
flw f7, 0(x2) # load 0x3f7437d73b76aa0e from memory into f7
fmadd.s f12, f14, f21, f7, dyn # perform operation
fmadd.s f12, f14, f21, f7, rdn # perform operation
fmadd.s f12, f14, f21, f7, rmm # perform operation
fmadd.s f12, f14, f21, f7, rne # perform operation
fmadd.s f12, f14, f21, f7, rtz # perform operation
fmadd.s f12, f14, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xe1850dae31970301 # load x3 with value 0xe1850dae31970301
sw x3, 0(x2) # store 0xe1850dae31970301 in memory
flw f17, 0(x2) # load 0xe1850dae31970301 from memory into f17
fmadd.s f9, f8, f27, f17, dyn # perform operation
fmadd.s f9, f8, f27, f17, rdn # perform operation
fmadd.s f9, f8, f27, f17, rmm # perform operation
fmadd.s f9, f8, f27, f17, rne # perform operation
fmadd.s f9, f8, f27, f17, rtz # perform operation
fmadd.s f9, f8, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xd701a92901aa5e91 # load x3 with value 0xd701a92901aa5e91
sw x3, 0(x2) # store 0xd701a92901aa5e91 in memory
flw f3, 0(x2) # load 0xd701a92901aa5e91 from memory into f3
fmadd.s f18, f20, f9, f3, dyn # perform operation
fmadd.s f18, f20, f9, f3, rdn # perform operation
fmadd.s f18, f20, f9, f3, rmm # perform operation
fmadd.s f18, f20, f9, f3, rne # perform operation
fmadd.s f18, f20, f9, f3, rtz # perform operation
fmadd.s f18, f20, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x6543a54d63789eec # load x3 with value 0x6543a54d63789eec
sw x3, 0(x2) # store 0x6543a54d63789eec in memory
flw f17, 0(x2) # load 0x6543a54d63789eec from memory into f17
fmadd.s f7, f22, f15, f17, dyn # perform operation
fmadd.s f7, f22, f15, f17, rdn # perform operation
fmadd.s f7, f22, f15, f17, rmm # perform operation
fmadd.s f7, f22, f15, f17, rne # perform operation
fmadd.s f7, f22, f15, f17, rtz # perform operation
fmadd.s f7, f22, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x561e340105918b54 # load x3 with value 0x561e340105918b54
sw x3, 0(x2) # store 0x561e340105918b54 in memory
flw f7, 0(x2) # load 0x561e340105918b54 from memory into f7
fmadd.s f17, f19, f15, f7, dyn # perform operation
fmadd.s f17, f19, f15, f7, rdn # perform operation
fmadd.s f17, f19, f15, f7, rmm # perform operation
fmadd.s f17, f19, f15, f7, rne # perform operation
fmadd.s f17, f19, f15, f7, rtz # perform operation
fmadd.s f17, f19, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0xb5369a45acb3c5eb # load x3 with value 0xb5369a45acb3c5eb
sw x3, 0(x2) # store 0xb5369a45acb3c5eb in memory
flw f27, 0(x2) # load 0xb5369a45acb3c5eb from memory into f27
fmadd.s f28, f8, f1, f27, dyn # perform operation
fmadd.s f28, f8, f1, f27, rdn # perform operation
fmadd.s f28, f8, f1, f27, rmm # perform operation
fmadd.s f28, f8, f1, f27, rne # perform operation
fmadd.s f28, f8, f1, f27, rtz # perform operation
fmadd.s f28, f8, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x1f46ae4d0aa99487 # load x3 with value 0x1f46ae4d0aa99487
sw x3, 0(x2) # store 0x1f46ae4d0aa99487 in memory
flw f1, 0(x2) # load 0x1f46ae4d0aa99487 from memory into f1
fmadd.s f21, f2, f28, f1, dyn # perform operation
fmadd.s f21, f2, f28, f1, rdn # perform operation
fmadd.s f21, f2, f28, f1, rmm # perform operation
fmadd.s f21, f2, f28, f1, rne # perform operation
fmadd.s f21, f2, f28, f1, rtz # perform operation
fmadd.s f21, f2, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x9367a80785119d4a # load x3 with value 0x9367a80785119d4a
sw x3, 0(x2) # store 0x9367a80785119d4a in memory
flw f8, 0(x2) # load 0x9367a80785119d4a from memory into f8
fmadd.s f28, f16, f1, f8, dyn # perform operation
fmadd.s f28, f16, f1, f8, rdn # perform operation
fmadd.s f28, f16, f1, f8, rmm # perform operation
fmadd.s f28, f16, f1, f8, rne # perform operation
fmadd.s f28, f16, f1, f8, rtz # perform operation
fmadd.s f28, f16, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x22f66f4626b729d4 # load x3 with value 0x22f66f4626b729d4
sw x3, 0(x2) # store 0x22f66f4626b729d4 in memory
flw f1, 0(x2) # load 0x22f66f4626b729d4 from memory into f1
fmadd.s f31, f5, f16, f1, dyn # perform operation
fmadd.s f31, f5, f16, f1, rdn # perform operation
fmadd.s f31, f5, f16, f1, rmm # perform operation
fmadd.s f31, f5, f16, f1, rne # perform operation
fmadd.s f31, f5, f16, f1, rtz # perform operation
fmadd.s f31, f5, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f16, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x55da0b09ee760011 # load x3 with value 0x55da0b09ee760011
sw x3, 0(x2) # store 0x55da0b09ee760011 in memory
flw f18, 0(x2) # load 0x55da0b09ee760011 from memory into f18
fmadd.s f11, f15, f9, f18, dyn # perform operation
fmadd.s f11, f15, f9, f18, rdn # perform operation
fmadd.s f11, f15, f9, f18, rmm # perform operation
fmadd.s f11, f15, f9, f18, rne # perform operation
fmadd.s f11, f15, f9, f18, rtz # perform operation
fmadd.s f11, f15, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f15, f9, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0xc52e1f12c5aa3a30 # load x3 with value 0xc52e1f12c5aa3a30
sw x3, 0(x2) # store 0xc52e1f12c5aa3a30 in memory
flw f29, 0(x2) # load 0xc52e1f12c5aa3a30 from memory into f29
fmadd.s f18, f12, f5, f29, dyn # perform operation
fmadd.s f18, f12, f5, f29, rdn # perform operation
fmadd.s f18, f12, f5, f29, rmm # perform operation
fmadd.s f18, f12, f5, f29, rne # perform operation
fmadd.s f18, f12, f5, f29, rtz # perform operation
fmadd.s f18, f12, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x2bd51f66d7451318 # load x3 with value 0x2bd51f66d7451318
sw x3, 0(x2) # store 0x2bd51f66d7451318 in memory
flw f20, 0(x2) # load 0x2bd51f66d7451318 from memory into f20
fmadd.s f28, f13, f24, f20, dyn # perform operation
fmadd.s f28, f13, f24, f20, rdn # perform operation
fmadd.s f28, f13, f24, f20, rmm # perform operation
fmadd.s f28, f13, f24, f20, rne # perform operation
fmadd.s f28, f13, f24, f20, rtz # perform operation
fmadd.s f28, f13, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f24, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xf43c140734e06b2d # load x3 with value 0xf43c140734e06b2d
sw x3, 0(x2) # store 0xf43c140734e06b2d in memory
flw f11, 0(x2) # load 0xf43c140734e06b2d from memory into f11
fmadd.s f14, f6, f21, f11, dyn # perform operation
fmadd.s f14, f6, f21, f11, rdn # perform operation
fmadd.s f14, f6, f21, f11, rmm # perform operation
fmadd.s f14, f6, f21, f11, rne # perform operation
fmadd.s f14, f6, f21, f11, rtz # perform operation
fmadd.s f14, f6, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x1b9c1e3a1eaf9b3 # load x3 with value 0x1b9c1e3a1eaf9b3
sw x3, 0(x2) # store 0x1b9c1e3a1eaf9b3 in memory
flw f16, 0(x2) # load 0x1b9c1e3a1eaf9b3 from memory into f16
fmadd.s f17, f14, f13, f16, dyn # perform operation
fmadd.s f17, f14, f13, f16, rdn # perform operation
fmadd.s f17, f14, f13, f16, rmm # perform operation
fmadd.s f17, f14, f13, f16, rne # perform operation
fmadd.s f17, f14, f13, f16, rtz # perform operation
fmadd.s f17, f14, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x52a4649c16ce56e5 # load x3 with value 0x52a4649c16ce56e5
sw x3, 0(x2) # store 0x52a4649c16ce56e5 in memory
flw f24, 0(x2) # load 0x52a4649c16ce56e5 from memory into f24
fmadd.s f18, f12, f15, f24, dyn # perform operation
fmadd.s f18, f12, f15, f24, rdn # perform operation
fmadd.s f18, f12, f15, f24, rmm # perform operation
fmadd.s f18, f12, f15, f24, rne # perform operation
fmadd.s f18, f12, f15, f24, rtz # perform operation
fmadd.s f18, f12, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x832d84d6f978161e # load x3 with value 0x832d84d6f978161e
sw x3, 0(x2) # store 0x832d84d6f978161e in memory
flw f2, 0(x2) # load 0x832d84d6f978161e from memory into f2
fmadd.s f8, f22, f7, f2, dyn # perform operation
fmadd.s f8, f22, f7, f2, rdn # perform operation
fmadd.s f8, f22, f7, f2, rmm # perform operation
fmadd.s f8, f22, f7, f2, rne # perform operation
fmadd.s f8, f22, f7, f2, rtz # perform operation
fmadd.s f8, f22, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x6a9c4ae1c4dd9e # load x3 with value 0x6a9c4ae1c4dd9e
sw x3, 0(x2) # store 0x6a9c4ae1c4dd9e in memory
flw f6, 0(x2) # load 0x6a9c4ae1c4dd9e from memory into f6
fmadd.s f7, f20, f16, f6, dyn # perform operation
fmadd.s f7, f20, f16, f6, rdn # perform operation
fmadd.s f7, f20, f16, f6, rmm # perform operation
fmadd.s f7, f20, f16, f6, rne # perform operation
fmadd.s f7, f20, f16, f6, rtz # perform operation
fmadd.s f7, f20, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x71d9df1afd02d360 # load x3 with value 0x71d9df1afd02d360
sw x3, 0(x2) # store 0x71d9df1afd02d360 in memory
flw f16, 0(x2) # load 0x71d9df1afd02d360 from memory into f16
fmadd.s f29, f7, f25, f16, dyn # perform operation
fmadd.s f29, f7, f25, f16, rdn # perform operation
fmadd.s f29, f7, f25, f16, rmm # perform operation
fmadd.s f29, f7, f25, f16, rne # perform operation
fmadd.s f29, f7, f25, f16, rtz # perform operation
fmadd.s f29, f7, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x9a68216e25781d92 # load x3 with value 0x9a68216e25781d92
sw x3, 0(x2) # store 0x9a68216e25781d92 in memory
flw f14, 0(x2) # load 0x9a68216e25781d92 from memory into f14
fmadd.s f29, f3, f5, f14, dyn # perform operation
fmadd.s f29, f3, f5, f14, rdn # perform operation
fmadd.s f29, f3, f5, f14, rmm # perform operation
fmadd.s f29, f3, f5, f14, rne # perform operation
fmadd.s f29, f3, f5, f14, rtz # perform operation
fmadd.s f29, f3, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f3, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f3, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0xf3457170d05da96a # load x3 with value 0xf3457170d05da96a
sw x3, 0(x2) # store 0xf3457170d05da96a in memory
flw f23, 0(x2) # load 0xf3457170d05da96a from memory into f23
fmadd.s f18, f21, f20, f23, dyn # perform operation
fmadd.s f18, f21, f20, f23, rdn # perform operation
fmadd.s f18, f21, f20, f23, rmm # perform operation
fmadd.s f18, f21, f20, f23, rne # perform operation
fmadd.s f18, f21, f20, f23, rtz # perform operation
fmadd.s f18, f21, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x5a034b839427f918 # load x3 with value 0x5a034b839427f918
sw x3, 0(x2) # store 0x5a034b839427f918 in memory
flw f12, 0(x2) # load 0x5a034b839427f918 from memory into f12
fmadd.s f17, f16, f27, f12, dyn # perform operation
fmadd.s f17, f16, f27, f12, rdn # perform operation
fmadd.s f17, f16, f27, f12, rmm # perform operation
fmadd.s f17, f16, f27, f12, rne # perform operation
fmadd.s f17, f16, f27, f12, rtz # perform operation
fmadd.s f17, f16, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x293961aa17029f2 # load x3 with value 0x293961aa17029f2
sw x3, 0(x2) # store 0x293961aa17029f2 in memory
flw f20, 0(x2) # load 0x293961aa17029f2 from memory into f20
fmadd.s f30, f21, f8, f20, dyn # perform operation
fmadd.s f30, f21, f8, f20, rdn # perform operation
fmadd.s f30, f21, f8, f20, rmm # perform operation
fmadd.s f30, f21, f8, f20, rne # perform operation
fmadd.s f30, f21, f8, f20, rtz # perform operation
fmadd.s f30, f21, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0xe7beda82c4783523 # load x3 with value 0xe7beda82c4783523
sw x3, 0(x2) # store 0xe7beda82c4783523 in memory
flw f2, 0(x2) # load 0xe7beda82c4783523 from memory into f2
fmadd.s f29, f24, f30, f2, dyn # perform operation
fmadd.s f29, f24, f30, f2, rdn # perform operation
fmadd.s f29, f24, f30, f2, rmm # perform operation
fmadd.s f29, f24, f30, f2, rne # perform operation
fmadd.s f29, f24, f30, f2, rtz # perform operation
fmadd.s f29, f24, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f24, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f24, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f24, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f24, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f24, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xa7d9cfde0008e5cc # load x3 with value 0xa7d9cfde0008e5cc
sw x3, 0(x2) # store 0xa7d9cfde0008e5cc in memory
flw f30, 0(x2) # load 0xa7d9cfde0008e5cc from memory into f30
fmadd.s f19, f12, f27, f30, dyn # perform operation
fmadd.s f19, f12, f27, f30, rdn # perform operation
fmadd.s f19, f12, f27, f30, rmm # perform operation
fmadd.s f19, f12, f27, f30, rne # perform operation
fmadd.s f19, f12, f27, f30, rtz # perform operation
fmadd.s f19, f12, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f12, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f12, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f12, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f12, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f12, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x3f663fa194a302e2 # load x3 with value 0x3f663fa194a302e2
sw x3, 0(x2) # store 0x3f663fa194a302e2 in memory
flw f10, 0(x2) # load 0x3f663fa194a302e2 from memory into f10
fmadd.s f8, f14, f20, f10, dyn # perform operation
fmadd.s f8, f14, f20, f10, rdn # perform operation
fmadd.s f8, f14, f20, f10, rmm # perform operation
fmadd.s f8, f14, f20, f10, rne # perform operation
fmadd.s f8, f14, f20, f10, rtz # perform operation
fmadd.s f8, f14, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x845812ee13343fe2 # load x3 with value 0x845812ee13343fe2
sw x3, 0(x2) # store 0x845812ee13343fe2 in memory
flw f14, 0(x2) # load 0x845812ee13343fe2 from memory into f14
fmadd.s f29, f23, f21, f14, dyn # perform operation
fmadd.s f29, f23, f21, f14, rdn # perform operation
fmadd.s f29, f23, f21, f14, rmm # perform operation
fmadd.s f29, f23, f21, f14, rne # perform operation
fmadd.s f29, f23, f21, f14, rtz # perform operation
fmadd.s f29, f23, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f23, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x165a8f848d1425e2 # load x3 with value 0x165a8f848d1425e2
sw x3, 0(x2) # store 0x165a8f848d1425e2 in memory
flw f29, 0(x2) # load 0x165a8f848d1425e2 from memory into f29
fmadd.s f1, f2, f3, f29, dyn # perform operation
fmadd.s f1, f2, f3, f29, rdn # perform operation
fmadd.s f1, f2, f3, f29, rmm # perform operation
fmadd.s f1, f2, f3, f29, rne # perform operation
fmadd.s f1, f2, f3, f29, rtz # perform operation
fmadd.s f1, f2, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x18b6ea36906fbbe3 # load x3 with value 0x18b6ea36906fbbe3
sw x3, 0(x2) # store 0x18b6ea36906fbbe3 in memory
flw f31, 0(x2) # load 0x18b6ea36906fbbe3 from memory into f31
fmadd.s f30, f20, f29, f31, dyn # perform operation
fmadd.s f30, f20, f29, f31, rdn # perform operation
fmadd.s f30, f20, f29, f31, rmm # perform operation
fmadd.s f30, f20, f29, f31, rne # perform operation
fmadd.s f30, f20, f29, f31, rtz # perform operation
fmadd.s f30, f20, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x465dd31db663372d # load x3 with value 0x465dd31db663372d
sw x3, 0(x2) # store 0x465dd31db663372d in memory
flw f16, 0(x2) # load 0x465dd31db663372d from memory into f16
fmadd.s f5, f28, f13, f16, dyn # perform operation
fmadd.s f5, f28, f13, f16, rdn # perform operation
fmadd.s f5, f28, f13, f16, rmm # perform operation
fmadd.s f5, f28, f13, f16, rne # perform operation
fmadd.s f5, f28, f13, f16, rtz # perform operation
fmadd.s f5, f28, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f28, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x67e979ac7ef8dcb0 # load x3 with value 0x67e979ac7ef8dcb0
sw x3, 0(x2) # store 0x67e979ac7ef8dcb0 in memory
flw f3, 0(x2) # load 0x67e979ac7ef8dcb0 from memory into f3
fmadd.s f2, f23, f24, f3, dyn # perform operation
fmadd.s f2, f23, f24, f3, rdn # perform operation
fmadd.s f2, f23, f24, f3, rmm # perform operation
fmadd.s f2, f23, f24, f3, rne # perform operation
fmadd.s f2, f23, f24, f3, rtz # perform operation
fmadd.s f2, f23, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f23, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x17514c3f958c8370 # load x3 with value 0x17514c3f958c8370
sw x3, 0(x2) # store 0x17514c3f958c8370 in memory
flw f13, 0(x2) # load 0x17514c3f958c8370 from memory into f13
fmadd.s f31, f17, f19, f13, dyn # perform operation
fmadd.s f31, f17, f19, f13, rdn # perform operation
fmadd.s f31, f17, f19, f13, rmm # perform operation
fmadd.s f31, f17, f19, f13, rne # perform operation
fmadd.s f31, f17, f19, f13, rtz # perform operation
fmadd.s f31, f17, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f17, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f17, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x1ef88e11fd46a5a6 # load x3 with value 0x1ef88e11fd46a5a6
sw x3, 0(x2) # store 0x1ef88e11fd46a5a6 in memory
flw f2, 0(x2) # load 0x1ef88e11fd46a5a6 from memory into f2
fmadd.s f17, f19, f16, f2, dyn # perform operation
fmadd.s f17, f19, f16, f2, rdn # perform operation
fmadd.s f17, f19, f16, f2, rmm # perform operation
fmadd.s f17, f19, f16, f2, rne # perform operation
fmadd.s f17, f19, f16, f2, rtz # perform operation
fmadd.s f17, f19, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0xbe0bde0a9c672046 # load x3 with value 0xbe0bde0a9c672046
sw x3, 0(x2) # store 0xbe0bde0a9c672046 in memory
flw f18, 0(x2) # load 0xbe0bde0a9c672046 from memory into f18
fmadd.s f12, f19, f28, f18, dyn # perform operation
fmadd.s f12, f19, f28, f18, rdn # perform operation
fmadd.s f12, f19, f28, f18, rmm # perform operation
fmadd.s f12, f19, f28, f18, rne # perform operation
fmadd.s f12, f19, f28, f18, rtz # perform operation
fmadd.s f12, f19, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xd2d5fddb6eac3712 # load x3 with value 0xd2d5fddb6eac3712
sw x3, 0(x2) # store 0xd2d5fddb6eac3712 in memory
flw f15, 0(x2) # load 0xd2d5fddb6eac3712 from memory into f15
fmadd.s f9, f8, f25, f15, dyn # perform operation
fmadd.s f9, f8, f25, f15, rdn # perform operation
fmadd.s f9, f8, f25, f15, rmm # perform operation
fmadd.s f9, f8, f25, f15, rne # perform operation
fmadd.s f9, f8, f25, f15, rtz # perform operation
fmadd.s f9, f8, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0xaf6e8d955d7bf577 # load x3 with value 0xaf6e8d955d7bf577
sw x3, 0(x2) # store 0xaf6e8d955d7bf577 in memory
flw f11, 0(x2) # load 0xaf6e8d955d7bf577 from memory into f11
fmadd.s f16, f14, f18, f11, dyn # perform operation
fmadd.s f16, f14, f18, f11, rdn # perform operation
fmadd.s f16, f14, f18, f11, rmm # perform operation
fmadd.s f16, f14, f18, f11, rne # perform operation
fmadd.s f16, f14, f18, f11, rtz # perform operation
fmadd.s f16, f14, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x35384dd9de5a3567 # load x3 with value 0x35384dd9de5a3567
sw x3, 0(x2) # store 0x35384dd9de5a3567 in memory
flw f21, 0(x2) # load 0x35384dd9de5a3567 from memory into f21
fmadd.s f18, f7, f23, f21, dyn # perform operation
fmadd.s f18, f7, f23, f21, rdn # perform operation
fmadd.s f18, f7, f23, f21, rmm # perform operation
fmadd.s f18, f7, f23, f21, rne # perform operation
fmadd.s f18, f7, f23, f21, rtz # perform operation
fmadd.s f18, f7, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xb11e72a224ade1ca # load x3 with value 0xb11e72a224ade1ca
sw x3, 0(x2) # store 0xb11e72a224ade1ca in memory
flw f31, 0(x2) # load 0xb11e72a224ade1ca from memory into f31
fmadd.s f6, f21, f1, f31, dyn # perform operation
fmadd.s f6, f21, f1, f31, rdn # perform operation
fmadd.s f6, f21, f1, f31, rmm # perform operation
fmadd.s f6, f21, f1, f31, rne # perform operation
fmadd.s f6, f21, f1, f31, rtz # perform operation
fmadd.s f6, f21, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0xc3d0ea14558445 # load x3 with value 0xc3d0ea14558445
sw x3, 0(x2) # store 0xc3d0ea14558445 in memory
flw f6, 0(x2) # load 0xc3d0ea14558445 from memory into f6
fmadd.s f23, f25, f26, f6, dyn # perform operation
fmadd.s f23, f25, f26, f6, rdn # perform operation
fmadd.s f23, f25, f26, f6, rmm # perform operation
fmadd.s f23, f25, f26, f6, rne # perform operation
fmadd.s f23, f25, f26, f6, rtz # perform operation
fmadd.s f23, f25, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f25, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f25, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x5d9b4d4eaeb094f0 # load x3 with value 0x5d9b4d4eaeb094f0
sw x3, 0(x2) # store 0x5d9b4d4eaeb094f0 in memory
flw f13, 0(x2) # load 0x5d9b4d4eaeb094f0 from memory into f13
fmadd.s f18, f29, f26, f13, dyn # perform operation
fmadd.s f18, f29, f26, f13, rdn # perform operation
fmadd.s f18, f29, f26, f13, rmm # perform operation
fmadd.s f18, f29, f26, f13, rne # perform operation
fmadd.s f18, f29, f26, f13, rtz # perform operation
fmadd.s f18, f29, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x5cd6b6c9744ad6cd # load x3 with value 0x5cd6b6c9744ad6cd
sw x3, 0(x2) # store 0x5cd6b6c9744ad6cd in memory
flw f31, 0(x2) # load 0x5cd6b6c9744ad6cd from memory into f31
fmadd.s f30, f24, f25, f31, dyn # perform operation
fmadd.s f30, f24, f25, f31, rdn # perform operation
fmadd.s f30, f24, f25, f31, rmm # perform operation
fmadd.s f30, f24, f25, f31, rne # perform operation
fmadd.s f30, f24, f25, f31, rtz # perform operation
fmadd.s f30, f24, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f24, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f24, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xe49c84a3293ae8e7 # load x3 with value 0xe49c84a3293ae8e7
sw x3, 0(x2) # store 0xe49c84a3293ae8e7 in memory
flw f2, 0(x2) # load 0xe49c84a3293ae8e7 from memory into f2
fmadd.s f16, f18, f27, f2, dyn # perform operation
fmadd.s f16, f18, f27, f2, rdn # perform operation
fmadd.s f16, f18, f27, f2, rmm # perform operation
fmadd.s f16, f18, f27, f2, rne # perform operation
fmadd.s f16, f18, f27, f2, rtz # perform operation
fmadd.s f16, f18, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f18, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0xb0294815b69233ff # load x3 with value 0xb0294815b69233ff
sw x3, 0(x2) # store 0xb0294815b69233ff in memory
flw f21, 0(x2) # load 0xb0294815b69233ff from memory into f21
fmadd.s f14, f15, f9, f21, dyn # perform operation
fmadd.s f14, f15, f9, f21, rdn # perform operation
fmadd.s f14, f15, f9, f21, rmm # perform operation
fmadd.s f14, f15, f9, f21, rne # perform operation
fmadd.s f14, f15, f9, f21, rtz # perform operation
fmadd.s f14, f15, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f15, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f15, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x40cee66530911805 # load x3 with value 0x40cee66530911805
sw x3, 0(x2) # store 0x40cee66530911805 in memory
flw f21, 0(x2) # load 0x40cee66530911805 from memory into f21
fmadd.s f23, f26, f6, f21, dyn # perform operation
fmadd.s f23, f26, f6, f21, rdn # perform operation
fmadd.s f23, f26, f6, f21, rmm # perform operation
fmadd.s f23, f26, f6, f21, rne # perform operation
fmadd.s f23, f26, f6, f21, rtz # perform operation
fmadd.s f23, f26, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xe0e71f44dce49bd9 # load x3 with value 0xe0e71f44dce49bd9
sw x3, 0(x2) # store 0xe0e71f44dce49bd9 in memory
flw f12, 0(x2) # load 0xe0e71f44dce49bd9 from memory into f12
fmadd.s f19, f1, f18, f12, dyn # perform operation
fmadd.s f19, f1, f18, f12, rdn # perform operation
fmadd.s f19, f1, f18, f12, rmm # perform operation
fmadd.s f19, f1, f18, f12, rne # perform operation
fmadd.s f19, f1, f18, f12, rtz # perform operation
fmadd.s f19, f1, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x82c986e151ba84ac # load x3 with value 0x82c986e151ba84ac
sw x3, 0(x2) # store 0x82c986e151ba84ac in memory
flw f2, 0(x2) # load 0x82c986e151ba84ac from memory into f2
fmadd.s f22, f17, f19, f2, dyn # perform operation
fmadd.s f22, f17, f19, f2, rdn # perform operation
fmadd.s f22, f17, f19, f2, rmm # perform operation
fmadd.s f22, f17, f19, f2, rne # perform operation
fmadd.s f22, f17, f19, f2, rtz # perform operation
fmadd.s f22, f17, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f19, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xd245b9d699d27124 # load x3 with value 0xd245b9d699d27124
sw x3, 0(x2) # store 0xd245b9d699d27124 in memory
flw f19, 0(x2) # load 0xd245b9d699d27124 from memory into f19
fmadd.s f22, f18, f6, f19, dyn # perform operation
fmadd.s f22, f18, f6, f19, rdn # perform operation
fmadd.s f22, f18, f6, f19, rmm # perform operation
fmadd.s f22, f18, f6, f19, rne # perform operation
fmadd.s f22, f18, f6, f19, rtz # perform operation
fmadd.s f22, f18, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xc33083e3d6be65b4 # load x3 with value 0xc33083e3d6be65b4
sw x3, 0(x2) # store 0xc33083e3d6be65b4 in memory
flw f24, 0(x2) # load 0xc33083e3d6be65b4 from memory into f24
fmadd.s f31, f30, f28, f24, dyn # perform operation
fmadd.s f31, f30, f28, f24, rdn # perform operation
fmadd.s f31, f30, f28, f24, rmm # perform operation
fmadd.s f31, f30, f28, f24, rne # perform operation
fmadd.s f31, f30, f28, f24, rtz # perform operation
fmadd.s f31, f30, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f30, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f30, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x460b44298e019e7a # load x3 with value 0x460b44298e019e7a
sw x3, 0(x2) # store 0x460b44298e019e7a in memory
flw f9, 0(x2) # load 0x460b44298e019e7a from memory into f9
fmadd.s f13, f6, f10, f9, dyn # perform operation
fmadd.s f13, f6, f10, f9, rdn # perform operation
fmadd.s f13, f6, f10, f9, rmm # perform operation
fmadd.s f13, f6, f10, f9, rne # perform operation
fmadd.s f13, f6, f10, f9, rtz # perform operation
fmadd.s f13, f6, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f10, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x8d8aca22c220023c # load x3 with value 0x8d8aca22c220023c
sw x3, 0(x2) # store 0x8d8aca22c220023c in memory
flw f29, 0(x2) # load 0x8d8aca22c220023c from memory into f29
fmadd.s f17, f21, f22, f29, dyn # perform operation
fmadd.s f17, f21, f22, f29, rdn # perform operation
fmadd.s f17, f21, f22, f29, rmm # perform operation
fmadd.s f17, f21, f22, f29, rne # perform operation
fmadd.s f17, f21, f22, f29, rtz # perform operation
fmadd.s f17, f21, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0xe8eea03c460864e7 # load x3 with value 0xe8eea03c460864e7
sw x3, 0(x2) # store 0xe8eea03c460864e7 in memory
flw f23, 0(x2) # load 0xe8eea03c460864e7 from memory into f23
fmadd.s f17, f16, f26, f23, dyn # perform operation
fmadd.s f17, f16, f26, f23, rdn # perform operation
fmadd.s f17, f16, f26, f23, rmm # perform operation
fmadd.s f17, f16, f26, f23, rne # perform operation
fmadd.s f17, f16, f26, f23, rtz # perform operation
fmadd.s f17, f16, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f26, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x206a117ca5d5d529 # load x3 with value 0x206a117ca5d5d529
sw x3, 0(x2) # store 0x206a117ca5d5d529 in memory
flw f18, 0(x2) # load 0x206a117ca5d5d529 from memory into f18
fmadd.s f10, f6, f24, f18, dyn # perform operation
fmadd.s f10, f6, f24, f18, rdn # perform operation
fmadd.s f10, f6, f24, f18, rmm # perform operation
fmadd.s f10, f6, f24, f18, rne # perform operation
fmadd.s f10, f6, f24, f18, rtz # perform operation
fmadd.s f10, f6, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xb1a0ee44d5964d62 # load x3 with value 0xb1a0ee44d5964d62
sw x3, 0(x2) # store 0xb1a0ee44d5964d62 in memory
flw f8, 0(x2) # load 0xb1a0ee44d5964d62 from memory into f8
fmadd.s f16, f20, f2, f8, dyn # perform operation
fmadd.s f16, f20, f2, f8, rdn # perform operation
fmadd.s f16, f20, f2, f8, rmm # perform operation
fmadd.s f16, f20, f2, f8, rne # perform operation
fmadd.s f16, f20, f2, f8, rtz # perform operation
fmadd.s f16, f20, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xc1f4d3dd4298b09c # load x3 with value 0xc1f4d3dd4298b09c
sw x3, 0(x2) # store 0xc1f4d3dd4298b09c in memory
flw f3, 0(x2) # load 0xc1f4d3dd4298b09c from memory into f3
fmadd.s f7, f24, f23, f3, dyn # perform operation
fmadd.s f7, f24, f23, f3, rdn # perform operation
fmadd.s f7, f24, f23, f3, rmm # perform operation
fmadd.s f7, f24, f23, f3, rne # perform operation
fmadd.s f7, f24, f23, f3, rtz # perform operation
fmadd.s f7, f24, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f24, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f24, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xfa58b371e7580b9f # load x3 with value 0xfa58b371e7580b9f
sw x3, 0(x2) # store 0xfa58b371e7580b9f in memory
flw f2, 0(x2) # load 0xfa58b371e7580b9f from memory into f2
fmadd.s f29, f10, f20, f2, dyn # perform operation
fmadd.s f29, f10, f20, f2, rdn # perform operation
fmadd.s f29, f10, f20, f2, rmm # perform operation
fmadd.s f29, f10, f20, f2, rne # perform operation
fmadd.s f29, f10, f20, f2, rtz # perform operation
fmadd.s f29, f10, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xea3ab82beffe909e # load x3 with value 0xea3ab82beffe909e
sw x3, 0(x2) # store 0xea3ab82beffe909e in memory
flw f13, 0(x2) # load 0xea3ab82beffe909e from memory into f13
fmadd.s f18, f2, f24, f13, dyn # perform operation
fmadd.s f18, f2, f24, f13, rdn # perform operation
fmadd.s f18, f2, f24, f13, rmm # perform operation
fmadd.s f18, f2, f24, f13, rne # perform operation
fmadd.s f18, f2, f24, f13, rtz # perform operation
fmadd.s f18, f2, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f24, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xc0ed4eca110448c3 # load x3 with value 0xc0ed4eca110448c3
sw x3, 0(x2) # store 0xc0ed4eca110448c3 in memory
flw f14, 0(x2) # load 0xc0ed4eca110448c3 from memory into f14
fmadd.s f17, f21, f26, f14, dyn # perform operation
fmadd.s f17, f21, f26, f14, rdn # perform operation
fmadd.s f17, f21, f26, f14, rmm # perform operation
fmadd.s f17, f21, f26, f14, rne # perform operation
fmadd.s f17, f21, f26, f14, rtz # perform operation
fmadd.s f17, f21, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x7db851d244b78076 # load x3 with value 0x7db851d244b78076
sw x3, 0(x2) # store 0x7db851d244b78076 in memory
flw f12, 0(x2) # load 0x7db851d244b78076 from memory into f12
fmadd.s f17, f24, f29, f12, dyn # perform operation
fmadd.s f17, f24, f29, f12, rdn # perform operation
fmadd.s f17, f24, f29, f12, rmm # perform operation
fmadd.s f17, f24, f29, f12, rne # perform operation
fmadd.s f17, f24, f29, f12, rtz # perform operation
fmadd.s f17, f24, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x5c113e6babe8bf5f # load x3 with value 0x5c113e6babe8bf5f
sw x3, 0(x2) # store 0x5c113e6babe8bf5f in memory
flw f30, 0(x2) # load 0x5c113e6babe8bf5f from memory into f30
fmadd.s f25, f24, f29, f30, dyn # perform operation
fmadd.s f25, f24, f29, f30, rdn # perform operation
fmadd.s f25, f24, f29, f30, rmm # perform operation
fmadd.s f25, f24, f29, f30, rne # perform operation
fmadd.s f25, f24, f29, f30, rtz # perform operation
fmadd.s f25, f24, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f24, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x9194e71a9b0f7fc4 # load x3 with value 0x9194e71a9b0f7fc4
sw x3, 0(x2) # store 0x9194e71a9b0f7fc4 in memory
flw f30, 0(x2) # load 0x9194e71a9b0f7fc4 from memory into f30
fmadd.s f5, f29, f28, f30, dyn # perform operation
fmadd.s f5, f29, f28, f30, rdn # perform operation
fmadd.s f5, f29, f28, f30, rmm # perform operation
fmadd.s f5, f29, f28, f30, rne # perform operation
fmadd.s f5, f29, f28, f30, rtz # perform operation
fmadd.s f5, f29, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0xdd257f54e4f7b71e # load x3 with value 0xdd257f54e4f7b71e
sw x3, 0(x2) # store 0xdd257f54e4f7b71e in memory
flw f6, 0(x2) # load 0xdd257f54e4f7b71e from memory into f6
fmadd.s f8, f18, f22, f6, dyn # perform operation
fmadd.s f8, f18, f22, f6, rdn # perform operation
fmadd.s f8, f18, f22, f6, rmm # perform operation
fmadd.s f8, f18, f22, f6, rne # perform operation
fmadd.s f8, f18, f22, f6, rtz # perform operation
fmadd.s f8, f18, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f18, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f18, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f18, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f18, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f18, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x6a149564b10991ea # load x3 with value 0x6a149564b10991ea
sw x3, 0(x2) # store 0x6a149564b10991ea in memory
flw f7, 0(x2) # load 0x6a149564b10991ea from memory into f7
fmadd.s f15, f23, f17, f7, dyn # perform operation
fmadd.s f15, f23, f17, f7, rdn # perform operation
fmadd.s f15, f23, f17, f7, rmm # perform operation
fmadd.s f15, f23, f17, f7, rne # perform operation
fmadd.s f15, f23, f17, f7, rtz # perform operation
fmadd.s f15, f23, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x2d6be886d7f7afe9 # load x3 with value 0x2d6be886d7f7afe9
sw x3, 0(x2) # store 0x2d6be886d7f7afe9 in memory
flw f6, 0(x2) # load 0x2d6be886d7f7afe9 from memory into f6
fmadd.s f22, f9, f16, f6, dyn # perform operation
fmadd.s f22, f9, f16, f6, rdn # perform operation
fmadd.s f22, f9, f16, f6, rmm # perform operation
fmadd.s f22, f9, f16, f6, rne # perform operation
fmadd.s f22, f9, f16, f6, rtz # perform operation
fmadd.s f22, f9, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f9, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f9, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x99793fd500284c7c # load x3 with value 0x99793fd500284c7c
sw x3, 0(x2) # store 0x99793fd500284c7c in memory
flw f1, 0(x2) # load 0x99793fd500284c7c from memory into f1
fmadd.s f18, f19, f14, f1, dyn # perform operation
fmadd.s f18, f19, f14, f1, rdn # perform operation
fmadd.s f18, f19, f14, f1, rmm # perform operation
fmadd.s f18, f19, f14, f1, rne # perform operation
fmadd.s f18, f19, f14, f1, rtz # perform operation
fmadd.s f18, f19, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xb2c0d799963e3cf # load x3 with value 0xb2c0d799963e3cf
sw x3, 0(x2) # store 0xb2c0d799963e3cf in memory
flw f24, 0(x2) # load 0xb2c0d799963e3cf from memory into f24
fmadd.s f7, f3, f8, f24, dyn # perform operation
fmadd.s f7, f3, f8, f24, rdn # perform operation
fmadd.s f7, f3, f8, f24, rmm # perform operation
fmadd.s f7, f3, f8, f24, rne # perform operation
fmadd.s f7, f3, f8, f24, rtz # perform operation
fmadd.s f7, f3, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x3acafffca2741426 # load x3 with value 0x3acafffca2741426
sw x3, 0(x2) # store 0x3acafffca2741426 in memory
flw f28, 0(x2) # load 0x3acafffca2741426 from memory into f28
fmadd.s f5, f15, f26, f28, dyn # perform operation
fmadd.s f5, f15, f26, f28, rdn # perform operation
fmadd.s f5, f15, f26, f28, rmm # perform operation
fmadd.s f5, f15, f26, f28, rne # perform operation
fmadd.s f5, f15, f26, f28, rtz # perform operation
fmadd.s f5, f15, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0xd1c387f17d929e22 # load x3 with value 0xd1c387f17d929e22
sw x3, 0(x2) # store 0xd1c387f17d929e22 in memory
flw f6, 0(x2) # load 0xd1c387f17d929e22 from memory into f6
fmadd.s f27, f1, f26, f6, dyn # perform operation
fmadd.s f27, f1, f26, f6, rdn # perform operation
fmadd.s f27, f1, f26, f6, rmm # perform operation
fmadd.s f27, f1, f26, f6, rne # perform operation
fmadd.s f27, f1, f26, f6, rtz # perform operation
fmadd.s f27, f1, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x3c4c645fcd0b6738 # load x3 with value 0x3c4c645fcd0b6738
sw x3, 0(x2) # store 0x3c4c645fcd0b6738 in memory
flw f1, 0(x2) # load 0x3c4c645fcd0b6738 from memory into f1
fmadd.s f18, f10, f30, f1, dyn # perform operation
fmadd.s f18, f10, f30, f1, rdn # perform operation
fmadd.s f18, f10, f30, f1, rmm # perform operation
fmadd.s f18, f10, f30, f1, rne # perform operation
fmadd.s f18, f10, f30, f1, rtz # perform operation
fmadd.s f18, f10, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f10, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xd6648455293d3603 # load x3 with value 0xd6648455293d3603
sw x3, 0(x2) # store 0xd6648455293d3603 in memory
flw f28, 0(x2) # load 0xd6648455293d3603 from memory into f28
fmadd.s f14, f3, f8, f28, dyn # perform operation
fmadd.s f14, f3, f8, f28, rdn # perform operation
fmadd.s f14, f3, f8, f28, rmm # perform operation
fmadd.s f14, f3, f8, f28, rne # perform operation
fmadd.s f14, f3, f8, f28, rtz # perform operation
fmadd.s f14, f3, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f8, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x57475ac375297098 # load x3 with value 0x57475ac375297098
sw x3, 0(x2) # store 0x57475ac375297098 in memory
flw f18, 0(x2) # load 0x57475ac375297098 from memory into f18
fmadd.s f23, f5, f22, f18, dyn # perform operation
fmadd.s f23, f5, f22, f18, rdn # perform operation
fmadd.s f23, f5, f22, f18, rmm # perform operation
fmadd.s f23, f5, f22, f18, rne # perform operation
fmadd.s f23, f5, f22, f18, rtz # perform operation
fmadd.s f23, f5, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x2ef4f16c17c03049 # load x3 with value 0x2ef4f16c17c03049
sw x3, 0(x2) # store 0x2ef4f16c17c03049 in memory
flw f21, 0(x2) # load 0x2ef4f16c17c03049 from memory into f21
fmadd.s f19, f17, f15, f21, dyn # perform operation
fmadd.s f19, f17, f15, f21, rdn # perform operation
fmadd.s f19, f17, f15, f21, rmm # perform operation
fmadd.s f19, f17, f15, f21, rne # perform operation
fmadd.s f19, f17, f15, f21, rtz # perform operation
fmadd.s f19, f17, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f17, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f17, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xd26550da679633f9 # load x3 with value 0xd26550da679633f9
sw x3, 0(x2) # store 0xd26550da679633f9 in memory
flw f6, 0(x2) # load 0xd26550da679633f9 from memory into f6
fmadd.s f2, f21, f28, f6, dyn # perform operation
fmadd.s f2, f21, f28, f6, rdn # perform operation
fmadd.s f2, f21, f28, f6, rmm # perform operation
fmadd.s f2, f21, f28, f6, rne # perform operation
fmadd.s f2, f21, f28, f6, rtz # perform operation
fmadd.s f2, f21, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xaf1a82bae66def2f # load x3 with value 0xaf1a82bae66def2f
sw x3, 0(x2) # store 0xaf1a82bae66def2f in memory
flw f31, 0(x2) # load 0xaf1a82bae66def2f from memory into f31
fmadd.s f9, f23, f10, f31, dyn # perform operation
fmadd.s f9, f23, f10, f31, rdn # perform operation
fmadd.s f9, f23, f10, f31, rmm # perform operation
fmadd.s f9, f23, f10, f31, rne # perform operation
fmadd.s f9, f23, f10, f31, rtz # perform operation
fmadd.s f9, f23, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0xf9d16f7cd424618 # load x3 with value 0xf9d16f7cd424618
sw x3, 0(x2) # store 0xf9d16f7cd424618 in memory
flw f2, 0(x2) # load 0xf9d16f7cd424618 from memory into f2
fmadd.s f6, f29, f8, f2, dyn # perform operation
fmadd.s f6, f29, f8, f2, rdn # perform operation
fmadd.s f6, f29, f8, f2, rmm # perform operation
fmadd.s f6, f29, f8, f2, rne # perform operation
fmadd.s f6, f29, f8, f2, rtz # perform operation
fmadd.s f6, f29, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x19090d37f12d825e # load x3 with value 0x19090d37f12d825e
sw x3, 0(x2) # store 0x19090d37f12d825e in memory
flw f30, 0(x2) # load 0x19090d37f12d825e from memory into f30
fmadd.s f3, f31, f24, f30, dyn # perform operation
fmadd.s f3, f31, f24, f30, rdn # perform operation
fmadd.s f3, f31, f24, f30, rmm # perform operation
fmadd.s f3, f31, f24, f30, rne # perform operation
fmadd.s f3, f31, f24, f30, rtz # perform operation
fmadd.s f3, f31, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x52807adbb3c08c3f # load x3 with value 0x52807adbb3c08c3f
sw x3, 0(x2) # store 0x52807adbb3c08c3f in memory
flw f22, 0(x2) # load 0x52807adbb3c08c3f from memory into f22
fmadd.s f18, f8, f2, f22, dyn # perform operation
fmadd.s f18, f8, f2, f22, rdn # perform operation
fmadd.s f18, f8, f2, f22, rmm # perform operation
fmadd.s f18, f8, f2, f22, rne # perform operation
fmadd.s f18, f8, f2, f22, rtz # perform operation
fmadd.s f18, f8, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f8, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f8, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x907caab13b67bcbf # load x3 with value 0x907caab13b67bcbf
sw x3, 0(x2) # store 0x907caab13b67bcbf in memory
flw f21, 0(x2) # load 0x907caab13b67bcbf from memory into f21
fmadd.s f5, f10, f1, f21, dyn # perform operation
fmadd.s f5, f10, f1, f21, rdn # perform operation
fmadd.s f5, f10, f1, f21, rmm # perform operation
fmadd.s f5, f10, f1, f21, rne # perform operation
fmadd.s f5, f10, f1, f21, rtz # perform operation
fmadd.s f5, f10, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xc95f6d3b4b694449 # load x3 with value 0xc95f6d3b4b694449
sw x3, 0(x2) # store 0xc95f6d3b4b694449 in memory
flw f6, 0(x2) # load 0xc95f6d3b4b694449 from memory into f6
fmadd.s f12, f26, f21, f6, dyn # perform operation
fmadd.s f12, f26, f21, f6, rdn # perform operation
fmadd.s f12, f26, f21, f6, rmm # perform operation
fmadd.s f12, f26, f21, f6, rne # perform operation
fmadd.s f12, f26, f21, f6, rtz # perform operation
fmadd.s f12, f26, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x5638499ac4279295 # load x3 with value 0x5638499ac4279295
sw x3, 0(x2) # store 0x5638499ac4279295 in memory
flw f9, 0(x2) # load 0x5638499ac4279295 from memory into f9
fmadd.s f29, f10, f14, f9, dyn # perform operation
fmadd.s f29, f10, f14, f9, rdn # perform operation
fmadd.s f29, f10, f14, f9, rmm # perform operation
fmadd.s f29, f10, f14, f9, rne # perform operation
fmadd.s f29, f10, f14, f9, rtz # perform operation
fmadd.s f29, f10, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x48a1086dd7088287 # load x3 with value 0x48a1086dd7088287
sw x3, 0(x2) # store 0x48a1086dd7088287 in memory
flw f26, 0(x2) # load 0x48a1086dd7088287 from memory into f26
fmadd.s f15, f2, f20, f26, dyn # perform operation
fmadd.s f15, f2, f20, f26, rdn # perform operation
fmadd.s f15, f2, f20, f26, rmm # perform operation
fmadd.s f15, f2, f20, f26, rne # perform operation
fmadd.s f15, f2, f20, f26, rtz # perform operation
fmadd.s f15, f2, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x1dab0f493eba6032 # load x3 with value 0x1dab0f493eba6032
sw x3, 0(x2) # store 0x1dab0f493eba6032 in memory
flw f14, 0(x2) # load 0x1dab0f493eba6032 from memory into f14
fmadd.s f22, f5, f21, f14, dyn # perform operation
fmadd.s f22, f5, f21, f14, rdn # perform operation
fmadd.s f22, f5, f21, f14, rmm # perform operation
fmadd.s f22, f5, f21, f14, rne # perform operation
fmadd.s f22, f5, f21, f14, rtz # perform operation
fmadd.s f22, f5, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x5e2992946cd3893e # load x3 with value 0x5e2992946cd3893e
sw x3, 0(x2) # store 0x5e2992946cd3893e in memory
flw f8, 0(x2) # load 0x5e2992946cd3893e from memory into f8
fmadd.s f25, f23, f7, f8, dyn # perform operation
fmadd.s f25, f23, f7, f8, rdn # perform operation
fmadd.s f25, f23, f7, f8, rmm # perform operation
fmadd.s f25, f23, f7, f8, rne # perform operation
fmadd.s f25, f23, f7, f8, rtz # perform operation
fmadd.s f25, f23, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x1d264ea675a92266 # load x3 with value 0x1d264ea675a92266
sw x3, 0(x2) # store 0x1d264ea675a92266 in memory
flw f29, 0(x2) # load 0x1d264ea675a92266 from memory into f29
fmadd.s f3, f11, f30, f29, dyn # perform operation
fmadd.s f3, f11, f30, f29, rdn # perform operation
fmadd.s f3, f11, f30, f29, rmm # perform operation
fmadd.s f3, f11, f30, f29, rne # perform operation
fmadd.s f3, f11, f30, f29, rtz # perform operation
fmadd.s f3, f11, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f11, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xd477b54483d86754 # load x3 with value 0xd477b54483d86754
sw x3, 0(x2) # store 0xd477b54483d86754 in memory
flw f22, 0(x2) # load 0xd477b54483d86754 from memory into f22
fmadd.s f28, f25, f24, f22, dyn # perform operation
fmadd.s f28, f25, f24, f22, rdn # perform operation
fmadd.s f28, f25, f24, f22, rmm # perform operation
fmadd.s f28, f25, f24, f22, rne # perform operation
fmadd.s f28, f25, f24, f22, rtz # perform operation
fmadd.s f28, f25, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x2c8728aefe536274 # load x3 with value 0x2c8728aefe536274
sw x3, 0(x2) # store 0x2c8728aefe536274 in memory
flw f14, 0(x2) # load 0x2c8728aefe536274 from memory into f14
fmadd.s f25, f31, f23, f14, dyn # perform operation
fmadd.s f25, f31, f23, f14, rdn # perform operation
fmadd.s f25, f31, f23, f14, rmm # perform operation
fmadd.s f25, f31, f23, f14, rne # perform operation
fmadd.s f25, f31, f23, f14, rtz # perform operation
fmadd.s f25, f31, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x8b6dd7a0380697f3 # load x3 with value 0x8b6dd7a0380697f3
sw x3, 0(x2) # store 0x8b6dd7a0380697f3 in memory
flw f9, 0(x2) # load 0x8b6dd7a0380697f3 from memory into f9
fmadd.s f14, f3, f21, f9, dyn # perform operation
fmadd.s f14, f3, f21, f9, rdn # perform operation
fmadd.s f14, f3, f21, f9, rmm # perform operation
fmadd.s f14, f3, f21, f9, rne # perform operation
fmadd.s f14, f3, f21, f9, rtz # perform operation
fmadd.s f14, f3, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x22f560f0a1d949a1 # load x3 with value 0x22f560f0a1d949a1
sw x3, 0(x2) # store 0x22f560f0a1d949a1 in memory
flw f26, 0(x2) # load 0x22f560f0a1d949a1 from memory into f26
fmadd.s f2, f17, f3, f26, dyn # perform operation
fmadd.s f2, f17, f3, f26, rdn # perform operation
fmadd.s f2, f17, f3, f26, rmm # perform operation
fmadd.s f2, f17, f3, f26, rne # perform operation
fmadd.s f2, f17, f3, f26, rtz # perform operation
fmadd.s f2, f17, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xa17600b978ca7e88 # load x3 with value 0xa17600b978ca7e88
sw x3, 0(x2) # store 0xa17600b978ca7e88 in memory
flw f29, 0(x2) # load 0xa17600b978ca7e88 from memory into f29
fmadd.s f8, f11, f2, f29, dyn # perform operation
fmadd.s f8, f11, f2, f29, rdn # perform operation
fmadd.s f8, f11, f2, f29, rmm # perform operation
fmadd.s f8, f11, f2, f29, rne # perform operation
fmadd.s f8, f11, f2, f29, rtz # perform operation
fmadd.s f8, f11, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0xdc0e903c865a6eb8 # load x3 with value 0xdc0e903c865a6eb8
sw x3, 0(x2) # store 0xdc0e903c865a6eb8 in memory
flw f16, 0(x2) # load 0xdc0e903c865a6eb8 from memory into f16
fmadd.s f5, f13, f3, f16, dyn # perform operation
fmadd.s f5, f13, f3, f16, rdn # perform operation
fmadd.s f5, f13, f3, f16, rmm # perform operation
fmadd.s f5, f13, f3, f16, rne # perform operation
fmadd.s f5, f13, f3, f16, rtz # perform operation
fmadd.s f5, f13, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xaf1515ccf966cfff # load x3 with value 0xaf1515ccf966cfff
sw x3, 0(x2) # store 0xaf1515ccf966cfff in memory
flw f26, 0(x2) # load 0xaf1515ccf966cfff from memory into f26
fmadd.s f25, f15, f21, f26, dyn # perform operation
fmadd.s f25, f15, f21, f26, rdn # perform operation
fmadd.s f25, f15, f21, f26, rmm # perform operation
fmadd.s f25, f15, f21, f26, rne # perform operation
fmadd.s f25, f15, f21, f26, rtz # perform operation
fmadd.s f25, f15, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x8a71420cf23a794c # load x3 with value 0x8a71420cf23a794c
sw x3, 0(x2) # store 0x8a71420cf23a794c in memory
flw f30, 0(x2) # load 0x8a71420cf23a794c from memory into f30
fmadd.s f15, f24, f2, f30, dyn # perform operation
fmadd.s f15, f24, f2, f30, rdn # perform operation
fmadd.s f15, f24, f2, f30, rmm # perform operation
fmadd.s f15, f24, f2, f30, rne # perform operation
fmadd.s f15, f24, f2, f30, rtz # perform operation
fmadd.s f15, f24, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f24, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0xb363c3de863d3247 # load x3 with value 0xb363c3de863d3247
sw x3, 0(x2) # store 0xb363c3de863d3247 in memory
flw f22, 0(x2) # load 0xb363c3de863d3247 from memory into f22
fmadd.s f25, f1, f17, f22, dyn # perform operation
fmadd.s f25, f1, f17, f22, rdn # perform operation
fmadd.s f25, f1, f17, f22, rmm # perform operation
fmadd.s f25, f1, f17, f22, rne # perform operation
fmadd.s f25, f1, f17, f22, rtz # perform operation
fmadd.s f25, f1, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x72d5c13b2334ccb2 # load x3 with value 0x72d5c13b2334ccb2
sw x3, 0(x2) # store 0x72d5c13b2334ccb2 in memory
flw f6, 0(x2) # load 0x72d5c13b2334ccb2 from memory into f6
fmadd.s f15, f12, f11, f6, dyn # perform operation
fmadd.s f15, f12, f11, f6, rdn # perform operation
fmadd.s f15, f12, f11, f6, rmm # perform operation
fmadd.s f15, f12, f11, f6, rne # perform operation
fmadd.s f15, f12, f11, f6, rtz # perform operation
fmadd.s f15, f12, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x5ae902a21f1796e0 # load x3 with value 0x5ae902a21f1796e0
sw x3, 0(x2) # store 0x5ae902a21f1796e0 in memory
flw f10, 0(x2) # load 0x5ae902a21f1796e0 from memory into f10
fmadd.s f23, f20, f5, f10, dyn # perform operation
fmadd.s f23, f20, f5, f10, rdn # perform operation
fmadd.s f23, f20, f5, f10, rmm # perform operation
fmadd.s f23, f20, f5, f10, rne # perform operation
fmadd.s f23, f20, f5, f10, rtz # perform operation
fmadd.s f23, f20, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x78f098f4e92d73e1 # load x3 with value 0x78f098f4e92d73e1
sw x3, 0(x2) # store 0x78f098f4e92d73e1 in memory
flw f2, 0(x2) # load 0x78f098f4e92d73e1 from memory into f2
fmadd.s f13, f21, f30, f2, dyn # perform operation
fmadd.s f13, f21, f30, f2, rdn # perform operation
fmadd.s f13, f21, f30, f2, rmm # perform operation
fmadd.s f13, f21, f30, f2, rne # perform operation
fmadd.s f13, f21, f30, f2, rtz # perform operation
fmadd.s f13, f21, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x4791ac57a1bbef35 # load x3 with value 0x4791ac57a1bbef35
sw x3, 0(x2) # store 0x4791ac57a1bbef35 in memory
flw f24, 0(x2) # load 0x4791ac57a1bbef35 from memory into f24
fmadd.s f3, f2, f1, f24, dyn # perform operation
fmadd.s f3, f2, f1, f24, rdn # perform operation
fmadd.s f3, f2, f1, f24, rmm # perform operation
fmadd.s f3, f2, f1, f24, rne # perform operation
fmadd.s f3, f2, f1, f24, rtz # perform operation
fmadd.s f3, f2, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x50f352808d9b8c43 # load x3 with value 0x50f352808d9b8c43
sw x3, 0(x2) # store 0x50f352808d9b8c43 in memory
flw f12, 0(x2) # load 0x50f352808d9b8c43 from memory into f12
fmadd.s f11, f24, f3, f12, dyn # perform operation
fmadd.s f11, f24, f3, f12, rdn # perform operation
fmadd.s f11, f24, f3, f12, rmm # perform operation
fmadd.s f11, f24, f3, f12, rne # perform operation
fmadd.s f11, f24, f3, f12, rtz # perform operation
fmadd.s f11, f24, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xc9b2ca2c41915255 # load x3 with value 0xc9b2ca2c41915255
sw x3, 0(x2) # store 0xc9b2ca2c41915255 in memory
flw f17, 0(x2) # load 0xc9b2ca2c41915255 from memory into f17
fmadd.s f25, f14, f7, f17, dyn # perform operation
fmadd.s f25, f14, f7, f17, rdn # perform operation
fmadd.s f25, f14, f7, f17, rmm # perform operation
fmadd.s f25, f14, f7, f17, rne # perform operation
fmadd.s f25, f14, f7, f17, rtz # perform operation
fmadd.s f25, f14, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x65206c311f88fda5 # load x3 with value 0x65206c311f88fda5
sw x3, 0(x2) # store 0x65206c311f88fda5 in memory
flw f14, 0(x2) # load 0x65206c311f88fda5 from memory into f14
fmadd.s f11, f8, f3, f14, dyn # perform operation
fmadd.s f11, f8, f3, f14, rdn # perform operation
fmadd.s f11, f8, f3, f14, rmm # perform operation
fmadd.s f11, f8, f3, f14, rne # perform operation
fmadd.s f11, f8, f3, f14, rtz # perform operation
fmadd.s f11, f8, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x1e03aec7b68f0d5d # load x3 with value 0x1e03aec7b68f0d5d
sw x3, 0(x2) # store 0x1e03aec7b68f0d5d in memory
flw f10, 0(x2) # load 0x1e03aec7b68f0d5d from memory into f10
fmadd.s f22, f13, f8, f10, dyn # perform operation
fmadd.s f22, f13, f8, f10, rdn # perform operation
fmadd.s f22, f13, f8, f10, rmm # perform operation
fmadd.s f22, f13, f8, f10, rne # perform operation
fmadd.s f22, f13, f8, f10, rtz # perform operation
fmadd.s f22, f13, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f13, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f13, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xae4d9ca1d2137944 # load x3 with value 0xae4d9ca1d2137944
sw x3, 0(x2) # store 0xae4d9ca1d2137944 in memory
flw f19, 0(x2) # load 0xae4d9ca1d2137944 from memory into f19
fmadd.s f3, f31, f22, f19, dyn # perform operation
fmadd.s f3, f31, f22, f19, rdn # perform operation
fmadd.s f3, f31, f22, f19, rmm # perform operation
fmadd.s f3, f31, f22, f19, rne # perform operation
fmadd.s f3, f31, f22, f19, rtz # perform operation
fmadd.s f3, f31, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x4a5bf60a52784a56 # load x3 with value 0x4a5bf60a52784a56
sw x3, 0(x2) # store 0x4a5bf60a52784a56 in memory
flw f27, 0(x2) # load 0x4a5bf60a52784a56 from memory into f27
fmadd.s f10, f6, f8, f27, dyn # perform operation
fmadd.s f10, f6, f8, f27, rdn # perform operation
fmadd.s f10, f6, f8, f27, rmm # perform operation
fmadd.s f10, f6, f8, f27, rne # perform operation
fmadd.s f10, f6, f8, f27, rtz # perform operation
fmadd.s f10, f6, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xfeb6f261277d1cd7 # load x3 with value 0xfeb6f261277d1cd7
sw x3, 0(x2) # store 0xfeb6f261277d1cd7 in memory
flw f31, 0(x2) # load 0xfeb6f261277d1cd7 from memory into f31
fmadd.s f2, f20, f5, f31, dyn # perform operation
fmadd.s f2, f20, f5, f31, rdn # perform operation
fmadd.s f2, f20, f5, f31, rmm # perform operation
fmadd.s f2, f20, f5, f31, rne # perform operation
fmadd.s f2, f20, f5, f31, rtz # perform operation
fmadd.s f2, f20, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x57ced4a07a0620ea # load x3 with value 0x57ced4a07a0620ea
sw x3, 0(x2) # store 0x57ced4a07a0620ea in memory
flw f18, 0(x2) # load 0x57ced4a07a0620ea from memory into f18
fmadd.s f30, f29, f5, f18, dyn # perform operation
fmadd.s f30, f29, f5, f18, rdn # perform operation
fmadd.s f30, f29, f5, f18, rmm # perform operation
fmadd.s f30, f29, f5, f18, rne # perform operation
fmadd.s f30, f29, f5, f18, rtz # perform operation
fmadd.s f30, f29, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f29, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f29, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f29, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f29, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f29, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x37ff1d91430a6094 # load x3 with value 0x37ff1d91430a6094
sw x3, 0(x2) # store 0x37ff1d91430a6094 in memory
flw f28, 0(x2) # load 0x37ff1d91430a6094 from memory into f28
fmadd.s f22, f10, f23, f28, dyn # perform operation
fmadd.s f22, f10, f23, f28, rdn # perform operation
fmadd.s f22, f10, f23, f28, rmm # perform operation
fmadd.s f22, f10, f23, f28, rne # perform operation
fmadd.s f22, f10, f23, f28, rtz # perform operation
fmadd.s f22, f10, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x5eb53291a07ba826 # load x3 with value 0x5eb53291a07ba826
sw x3, 0(x2) # store 0x5eb53291a07ba826 in memory
flw f21, 0(x2) # load 0x5eb53291a07ba826 from memory into f21
fmadd.s f23, f18, f1, f21, dyn # perform operation
fmadd.s f23, f18, f1, f21, rdn # perform operation
fmadd.s f23, f18, f1, f21, rmm # perform operation
fmadd.s f23, f18, f1, f21, rne # perform operation
fmadd.s f23, f18, f1, f21, rtz # perform operation
fmadd.s f23, f18, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x234d42055f4f0882 # load x3 with value 0x234d42055f4f0882
sw x3, 0(x2) # store 0x234d42055f4f0882 in memory
flw f22, 0(x2) # load 0x234d42055f4f0882 from memory into f22
fmadd.s f17, f6, f18, f22, dyn # perform operation
fmadd.s f17, f6, f18, f22, rdn # perform operation
fmadd.s f17, f6, f18, f22, rmm # perform operation
fmadd.s f17, f6, f18, f22, rne # perform operation
fmadd.s f17, f6, f18, f22, rtz # perform operation
fmadd.s f17, f6, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x8eb1b353d881c48b # load x3 with value 0x8eb1b353d881c48b
sw x3, 0(x2) # store 0x8eb1b353d881c48b in memory
flw f28, 0(x2) # load 0x8eb1b353d881c48b from memory into f28
fmadd.s f13, f5, f24, f28, dyn # perform operation
fmadd.s f13, f5, f24, f28, rdn # perform operation
fmadd.s f13, f5, f24, f28, rmm # perform operation
fmadd.s f13, f5, f24, f28, rne # perform operation
fmadd.s f13, f5, f24, f28, rtz # perform operation
fmadd.s f13, f5, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f5, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xc2d417963030dfb7 # load x3 with value 0xc2d417963030dfb7
sw x3, 0(x2) # store 0xc2d417963030dfb7 in memory
flw f26, 0(x2) # load 0xc2d417963030dfb7 from memory into f26
fmadd.s f21, f3, f23, f26, dyn # perform operation
fmadd.s f21, f3, f23, f26, rdn # perform operation
fmadd.s f21, f3, f23, f26, rmm # perform operation
fmadd.s f21, f3, f23, f26, rne # perform operation
fmadd.s f21, f3, f23, f26, rtz # perform operation
fmadd.s f21, f3, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xe8172d520b25247b # load x3 with value 0xe8172d520b25247b
sw x3, 0(x2) # store 0xe8172d520b25247b in memory
flw f25, 0(x2) # load 0xe8172d520b25247b from memory into f25
fmadd.s f13, f3, f6, f25, dyn # perform operation
fmadd.s f13, f3, f6, f25, rdn # perform operation
fmadd.s f13, f3, f6, f25, rmm # perform operation
fmadd.s f13, f3, f6, f25, rne # perform operation
fmadd.s f13, f3, f6, f25, rtz # perform operation
fmadd.s f13, f3, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f3, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f3, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f3, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f3, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f3, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x8fea5776033c8af1 # load x3 with value 0x8fea5776033c8af1
sw x3, 0(x2) # store 0x8fea5776033c8af1 in memory
flw f7, 0(x2) # load 0x8fea5776033c8af1 from memory into f7
fmadd.s f31, f20, f17, f7, dyn # perform operation
fmadd.s f31, f20, f17, f7, rdn # perform operation
fmadd.s f31, f20, f17, f7, rmm # perform operation
fmadd.s f31, f20, f17, f7, rne # perform operation
fmadd.s f31, f20, f17, f7, rtz # perform operation
fmadd.s f31, f20, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0xc9a6079ffe96fadb # load x3 with value 0xc9a6079ffe96fadb
sw x3, 0(x2) # store 0xc9a6079ffe96fadb in memory
flw f30, 0(x2) # load 0xc9a6079ffe96fadb from memory into f30
fmadd.s f19, f27, f24, f30, dyn # perform operation
fmadd.s f19, f27, f24, f30, rdn # perform operation
fmadd.s f19, f27, f24, f30, rmm # perform operation
fmadd.s f19, f27, f24, f30, rne # perform operation
fmadd.s f19, f27, f24, f30, rtz # perform operation
fmadd.s f19, f27, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x6d4a2b72007303b6 # load x3 with value 0x6d4a2b72007303b6
sw x3, 0(x2) # store 0x6d4a2b72007303b6 in memory
flw f2, 0(x2) # load 0x6d4a2b72007303b6 from memory into f2
fmadd.s f8, f29, f30, f2, dyn # perform operation
fmadd.s f8, f29, f30, f2, rdn # perform operation
fmadd.s f8, f29, f30, f2, rmm # perform operation
fmadd.s f8, f29, f30, f2, rne # perform operation
fmadd.s f8, f29, f30, f2, rtz # perform operation
fmadd.s f8, f29, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f29, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f29, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x91f5a1f081597281 # load x3 with value 0x91f5a1f081597281
sw x3, 0(x2) # store 0x91f5a1f081597281 in memory
flw f8, 0(x2) # load 0x91f5a1f081597281 from memory into f8
fmadd.s f14, f13, f5, f8, dyn # perform operation
fmadd.s f14, f13, f5, f8, rdn # perform operation
fmadd.s f14, f13, f5, f8, rmm # perform operation
fmadd.s f14, f13, f5, f8, rne # perform operation
fmadd.s f14, f13, f5, f8, rtz # perform operation
fmadd.s f14, f13, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x866b00fbfddef6b0 # load x3 with value 0x866b00fbfddef6b0
sw x3, 0(x2) # store 0x866b00fbfddef6b0 in memory
flw f27, 0(x2) # load 0x866b00fbfddef6b0 from memory into f27
fmadd.s f1, f7, f30, f27, dyn # perform operation
fmadd.s f1, f7, f30, f27, rdn # perform operation
fmadd.s f1, f7, f30, f27, rmm # perform operation
fmadd.s f1, f7, f30, f27, rne # perform operation
fmadd.s f1, f7, f30, f27, rtz # perform operation
fmadd.s f1, f7, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xd7c86cc6ec11fe42 # load x3 with value 0xd7c86cc6ec11fe42
sw x3, 0(x2) # store 0xd7c86cc6ec11fe42 in memory
flw f20, 0(x2) # load 0xd7c86cc6ec11fe42 from memory into f20
fmadd.s f23, f1, f31, f20, dyn # perform operation
fmadd.s f23, f1, f31, f20, rdn # perform operation
fmadd.s f23, f1, f31, f20, rmm # perform operation
fmadd.s f23, f1, f31, f20, rne # perform operation
fmadd.s f23, f1, f31, f20, rtz # perform operation
fmadd.s f23, f1, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xf7c088adeacc3ae9 # load x3 with value 0xf7c088adeacc3ae9
sw x3, 0(x2) # store 0xf7c088adeacc3ae9 in memory
flw f28, 0(x2) # load 0xf7c088adeacc3ae9 from memory into f28
fmadd.s f27, f6, f5, f28, dyn # perform operation
fmadd.s f27, f6, f5, f28, rdn # perform operation
fmadd.s f27, f6, f5, f28, rmm # perform operation
fmadd.s f27, f6, f5, f28, rne # perform operation
fmadd.s f27, f6, f5, f28, rtz # perform operation
fmadd.s f27, f6, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f6, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f6, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0xfcc3d8b8e830a68 # load x3 with value 0xfcc3d8b8e830a68
sw x3, 0(x2) # store 0xfcc3d8b8e830a68 in memory
flw f26, 0(x2) # load 0xfcc3d8b8e830a68 from memory into f26
fmadd.s f8, f10, f2, f26, dyn # perform operation
fmadd.s f8, f10, f2, f26, rdn # perform operation
fmadd.s f8, f10, f2, f26, rmm # perform operation
fmadd.s f8, f10, f2, f26, rne # perform operation
fmadd.s f8, f10, f2, f26, rtz # perform operation
fmadd.s f8, f10, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f10, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0xcf7bd7cce01adfec # load x3 with value 0xcf7bd7cce01adfec
sw x3, 0(x2) # store 0xcf7bd7cce01adfec in memory
flw f18, 0(x2) # load 0xcf7bd7cce01adfec from memory into f18
fmadd.s f31, f26, f23, f18, dyn # perform operation
fmadd.s f31, f26, f23, f18, rdn # perform operation
fmadd.s f31, f26, f23, f18, rmm # perform operation
fmadd.s f31, f26, f23, f18, rne # perform operation
fmadd.s f31, f26, f23, f18, rtz # perform operation
fmadd.s f31, f26, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f26, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f26, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f26, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f26, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f26, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x29f937fae37afafe # load x3 with value 0x29f937fae37afafe
sw x3, 0(x2) # store 0x29f937fae37afafe in memory
flw f9, 0(x2) # load 0x29f937fae37afafe from memory into f9
fmadd.s f20, f23, f17, f9, dyn # perform operation
fmadd.s f20, f23, f17, f9, rdn # perform operation
fmadd.s f20, f23, f17, f9, rmm # perform operation
fmadd.s f20, f23, f17, f9, rne # perform operation
fmadd.s f20, f23, f17, f9, rtz # perform operation
fmadd.s f20, f23, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xe50711b47db005a9 # load x3 with value 0xe50711b47db005a9
sw x3, 0(x2) # store 0xe50711b47db005a9 in memory
flw f2, 0(x2) # load 0xe50711b47db005a9 from memory into f2
fmadd.s f17, f8, f23, f2, dyn # perform operation
fmadd.s f17, f8, f23, f2, rdn # perform operation
fmadd.s f17, f8, f23, f2, rmm # perform operation
fmadd.s f17, f8, f23, f2, rne # perform operation
fmadd.s f17, f8, f23, f2, rtz # perform operation
fmadd.s f17, f8, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0xa9f3ab9c3b1b0d44 # load x3 with value 0xa9f3ab9c3b1b0d44
sw x3, 0(x2) # store 0xa9f3ab9c3b1b0d44 in memory
flw f11, 0(x2) # load 0xa9f3ab9c3b1b0d44 from memory into f11
fmadd.s f24, f27, f8, f11, dyn # perform operation
fmadd.s f24, f27, f8, f11, rdn # perform operation
fmadd.s f24, f27, f8, f11, rmm # perform operation
fmadd.s f24, f27, f8, f11, rne # perform operation
fmadd.s f24, f27, f8, f11, rtz # perform operation
fmadd.s f24, f27, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x1104e6c585bba253 # load x3 with value 0x1104e6c585bba253
sw x3, 0(x2) # store 0x1104e6c585bba253 in memory
flw f22, 0(x2) # load 0x1104e6c585bba253 from memory into f22
fmadd.s f19, f20, f7, f22, dyn # perform operation
fmadd.s f19, f20, f7, f22, rdn # perform operation
fmadd.s f19, f20, f7, f22, rmm # perform operation
fmadd.s f19, f20, f7, f22, rne # perform operation
fmadd.s f19, f20, f7, f22, rtz # perform operation
fmadd.s f19, f20, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xd15d8711ec044d28 # load x3 with value 0xd15d8711ec044d28
sw x3, 0(x2) # store 0xd15d8711ec044d28 in memory
flw f19, 0(x2) # load 0xd15d8711ec044d28 from memory into f19
fmadd.s f22, f17, f30, f19, dyn # perform operation
fmadd.s f22, f17, f30, f19, rdn # perform operation
fmadd.s f22, f17, f30, f19, rmm # perform operation
fmadd.s f22, f17, f30, f19, rne # perform operation
fmadd.s f22, f17, f30, f19, rtz # perform operation
fmadd.s f22, f17, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x12be0fc400826ec3 # load x3 with value 0x12be0fc400826ec3
sw x3, 0(x2) # store 0x12be0fc400826ec3 in memory
flw f29, 0(x2) # load 0x12be0fc400826ec3 from memory into f29
fmadd.s f23, f18, f17, f29, dyn # perform operation
fmadd.s f23, f18, f17, f29, rdn # perform operation
fmadd.s f23, f18, f17, f29, rmm # perform operation
fmadd.s f23, f18, f17, f29, rne # perform operation
fmadd.s f23, f18, f17, f29, rtz # perform operation
fmadd.s f23, f18, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x821fbec58c49cb9c # load x3 with value 0x821fbec58c49cb9c
sw x3, 0(x2) # store 0x821fbec58c49cb9c in memory
flw f29, 0(x2) # load 0x821fbec58c49cb9c from memory into f29
fmadd.s f16, f23, f1, f29, dyn # perform operation
fmadd.s f16, f23, f1, f29, rdn # perform operation
fmadd.s f16, f23, f1, f29, rmm # perform operation
fmadd.s f16, f23, f1, f29, rne # perform operation
fmadd.s f16, f23, f1, f29, rtz # perform operation
fmadd.s f16, f23, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x5cbf9a78de07a90e # load x3 with value 0x5cbf9a78de07a90e
sw x3, 0(x2) # store 0x5cbf9a78de07a90e in memory
flw f18, 0(x2) # load 0x5cbf9a78de07a90e from memory into f18
fmadd.s f3, f19, f10, f18, dyn # perform operation
fmadd.s f3, f19, f10, f18, rdn # perform operation
fmadd.s f3, f19, f10, f18, rmm # perform operation
fmadd.s f3, f19, f10, f18, rne # perform operation
fmadd.s f3, f19, f10, f18, rtz # perform operation
fmadd.s f3, f19, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f19, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x1b58fa80d8400a9f # load x3 with value 0x1b58fa80d8400a9f
sw x3, 0(x2) # store 0x1b58fa80d8400a9f in memory
flw f30, 0(x2) # load 0x1b58fa80d8400a9f from memory into f30
fmadd.s f9, f6, f23, f30, dyn # perform operation
fmadd.s f9, f6, f23, f30, rdn # perform operation
fmadd.s f9, f6, f23, f30, rmm # perform operation
fmadd.s f9, f6, f23, f30, rne # perform operation
fmadd.s f9, f6, f23, f30, rtz # perform operation
fmadd.s f9, f6, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x30809346550e25df # load x3 with value 0x30809346550e25df
sw x3, 0(x2) # store 0x30809346550e25df in memory
flw f18, 0(x2) # load 0x30809346550e25df from memory into f18
fmadd.s f21, f27, f11, f18, dyn # perform operation
fmadd.s f21, f27, f11, f18, rdn # perform operation
fmadd.s f21, f27, f11, f18, rmm # perform operation
fmadd.s f21, f27, f11, f18, rne # perform operation
fmadd.s f21, f27, f11, f18, rtz # perform operation
fmadd.s f21, f27, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x228af5c7b737ace5 # load x3 with value 0x228af5c7b737ace5
sw x3, 0(x2) # store 0x228af5c7b737ace5 in memory
flw f3, 0(x2) # load 0x228af5c7b737ace5 from memory into f3
fmadd.s f18, f27, f9, f3, dyn # perform operation
fmadd.s f18, f27, f9, f3, rdn # perform operation
fmadd.s f18, f27, f9, f3, rmm # perform operation
fmadd.s f18, f27, f9, f3, rne # perform operation
fmadd.s f18, f27, f9, f3, rtz # perform operation
fmadd.s f18, f27, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f27, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f27, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f27, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f27, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f27, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x67e0a26dbd10ee75 # load x3 with value 0x67e0a26dbd10ee75
sw x3, 0(x2) # store 0x67e0a26dbd10ee75 in memory
flw f27, 0(x2) # load 0x67e0a26dbd10ee75 from memory into f27
fmadd.s f21, f28, f17, f27, dyn # perform operation
fmadd.s f21, f28, f17, f27, rdn # perform operation
fmadd.s f21, f28, f17, f27, rmm # perform operation
fmadd.s f21, f28, f17, f27, rne # perform operation
fmadd.s f21, f28, f17, f27, rtz # perform operation
fmadd.s f21, f28, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f28, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f28, f17, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x7c62c68dc031f766 # load x3 with value 0x7c62c68dc031f766
sw x3, 0(x2) # store 0x7c62c68dc031f766 in memory
flw f20, 0(x2) # load 0x7c62c68dc031f766 from memory into f20
fmadd.s f8, f21, f16, f20, dyn # perform operation
fmadd.s f8, f21, f16, f20, rdn # perform operation
fmadd.s f8, f21, f16, f20, rmm # perform operation
fmadd.s f8, f21, f16, f20, rne # perform operation
fmadd.s f8, f21, f16, f20, rtz # perform operation
fmadd.s f8, f21, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x1768dd5e27002a61 # load x3 with value 0x1768dd5e27002a61
sw x3, 0(x2) # store 0x1768dd5e27002a61 in memory
flw f14, 0(x2) # load 0x1768dd5e27002a61 from memory into f14
fmadd.s f16, f28, f23, f14, dyn # perform operation
fmadd.s f16, f28, f23, f14, rdn # perform operation
fmadd.s f16, f28, f23, f14, rmm # perform operation
fmadd.s f16, f28, f23, f14, rne # perform operation
fmadd.s f16, f28, f23, f14, rtz # perform operation
fmadd.s f16, f28, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f28, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x2e23fe6a2b45a7f1 # load x3 with value 0x2e23fe6a2b45a7f1
sw x3, 0(x2) # store 0x2e23fe6a2b45a7f1 in memory
flw f31, 0(x2) # load 0x2e23fe6a2b45a7f1 from memory into f31
fmadd.s f25, f7, f11, f31, dyn # perform operation
fmadd.s f25, f7, f11, f31, rdn # perform operation
fmadd.s f25, f7, f11, f31, rmm # perform operation
fmadd.s f25, f7, f11, f31, rne # perform operation
fmadd.s f25, f7, f11, f31, rtz # perform operation
fmadd.s f25, f7, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xe9a7bcf1e4149b72 # load x3 with value 0xe9a7bcf1e4149b72
sw x3, 0(x2) # store 0xe9a7bcf1e4149b72 in memory
flw f17, 0(x2) # load 0xe9a7bcf1e4149b72 from memory into f17
fmadd.s f29, f21, f9, f17, dyn # perform operation
fmadd.s f29, f21, f9, f17, rdn # perform operation
fmadd.s f29, f21, f9, f17, rmm # perform operation
fmadd.s f29, f21, f9, f17, rne # perform operation
fmadd.s f29, f21, f9, f17, rtz # perform operation
fmadd.s f29, f21, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f21, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x7d3563515fd203a9 # load x3 with value 0x7d3563515fd203a9
sw x3, 0(x2) # store 0x7d3563515fd203a9 in memory
flw f6, 0(x2) # load 0x7d3563515fd203a9 from memory into f6
fmadd.s f3, f12, f16, f6, dyn # perform operation
fmadd.s f3, f12, f16, f6, rdn # perform operation
fmadd.s f3, f12, f16, f6, rmm # perform operation
fmadd.s f3, f12, f16, f6, rne # perform operation
fmadd.s f3, f12, f16, f6, rtz # perform operation
fmadd.s f3, f12, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xb3691f924cdf52fc # load x3 with value 0xb3691f924cdf52fc
sw x3, 0(x2) # store 0xb3691f924cdf52fc in memory
flw f7, 0(x2) # load 0xb3691f924cdf52fc from memory into f7
fmadd.s f16, f5, f29, f7, dyn # perform operation
fmadd.s f16, f5, f29, f7, rdn # perform operation
fmadd.s f16, f5, f29, f7, rmm # perform operation
fmadd.s f16, f5, f29, f7, rne # perform operation
fmadd.s f16, f5, f29, f7, rtz # perform operation
fmadd.s f16, f5, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x212dcdc4476051f9 # load x3 with value 0x212dcdc4476051f9
sw x3, 0(x2) # store 0x212dcdc4476051f9 in memory
flw f6, 0(x2) # load 0x212dcdc4476051f9 from memory into f6
fmadd.s f17, f2, f19, f6, dyn # perform operation
fmadd.s f17, f2, f19, f6, rdn # perform operation
fmadd.s f17, f2, f19, f6, rmm # perform operation
fmadd.s f17, f2, f19, f6, rne # perform operation
fmadd.s f17, f2, f19, f6, rtz # perform operation
fmadd.s f17, f2, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0xc0b45b7b066bd005 # load x3 with value 0xc0b45b7b066bd005
sw x3, 0(x2) # store 0xc0b45b7b066bd005 in memory
flw f21, 0(x2) # load 0xc0b45b7b066bd005 from memory into f21
fmadd.s f29, f23, f15, f21, dyn # perform operation
fmadd.s f29, f23, f15, f21, rdn # perform operation
fmadd.s f29, f23, f15, f21, rmm # perform operation
fmadd.s f29, f23, f15, f21, rne # perform operation
fmadd.s f29, f23, f15, f21, rtz # perform operation
fmadd.s f29, f23, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f23, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f23, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f23, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f23, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f23, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xa2071942e43c794a # load x3 with value 0xa2071942e43c794a
sw x3, 0(x2) # store 0xa2071942e43c794a in memory
flw f9, 0(x2) # load 0xa2071942e43c794a from memory into f9
fmadd.s f15, f23, f18, f9, dyn # perform operation
fmadd.s f15, f23, f18, f9, rdn # perform operation
fmadd.s f15, f23, f18, f9, rmm # perform operation
fmadd.s f15, f23, f18, f9, rne # perform operation
fmadd.s f15, f23, f18, f9, rtz # perform operation
fmadd.s f15, f23, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0xf50bcb8b95f2523e # load x3 with value 0xf50bcb8b95f2523e
sw x3, 0(x2) # store 0xf50bcb8b95f2523e in memory
flw f14, 0(x2) # load 0xf50bcb8b95f2523e from memory into f14
fmadd.s f1, f19, f28, f14, dyn # perform operation
fmadd.s f1, f19, f28, f14, rdn # perform operation
fmadd.s f1, f19, f28, f14, rmm # perform operation
fmadd.s f1, f19, f28, f14, rne # perform operation
fmadd.s f1, f19, f28, f14, rtz # perform operation
fmadd.s f1, f19, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f28, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x1b0e69607a6794d9 # load x3 with value 0x1b0e69607a6794d9
sw x3, 0(x2) # store 0x1b0e69607a6794d9 in memory
flw f8, 0(x2) # load 0x1b0e69607a6794d9 from memory into f8
fmadd.s f27, f3, f7, f8, dyn # perform operation
fmadd.s f27, f3, f7, f8, rdn # perform operation
fmadd.s f27, f3, f7, f8, rmm # perform operation
fmadd.s f27, f3, f7, f8, rne # perform operation
fmadd.s f27, f3, f7, f8, rtz # perform operation
fmadd.s f27, f3, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x8f9560de52278ea # load x3 with value 0x8f9560de52278ea
sw x3, 0(x2) # store 0x8f9560de52278ea in memory
flw f24, 0(x2) # load 0x8f9560de52278ea from memory into f24
fmadd.s f13, f28, f2, f24, dyn # perform operation
fmadd.s f13, f28, f2, f24, rdn # perform operation
fmadd.s f13, f28, f2, f24, rmm # perform operation
fmadd.s f13, f28, f2, f24, rne # perform operation
fmadd.s f13, f28, f2, f24, rtz # perform operation
fmadd.s f13, f28, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x3a86777d27a4a2d2 # load x3 with value 0x3a86777d27a4a2d2
sw x3, 0(x2) # store 0x3a86777d27a4a2d2 in memory
flw f17, 0(x2) # load 0x3a86777d27a4a2d2 from memory into f17
fmadd.s f25, f13, f6, f17, dyn # perform operation
fmadd.s f25, f13, f6, f17, rdn # perform operation
fmadd.s f25, f13, f6, f17, rmm # perform operation
fmadd.s f25, f13, f6, f17, rne # perform operation
fmadd.s f25, f13, f6, f17, rtz # perform operation
fmadd.s f25, f13, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x79b65799d3f5a7eb # load x3 with value 0x79b65799d3f5a7eb
sw x3, 0(x2) # store 0x79b65799d3f5a7eb in memory
flw f16, 0(x2) # load 0x79b65799d3f5a7eb from memory into f16
fmadd.s f31, f20, f1, f16, dyn # perform operation
fmadd.s f31, f20, f1, f16, rdn # perform operation
fmadd.s f31, f20, f1, f16, rmm # perform operation
fmadd.s f31, f20, f1, f16, rne # perform operation
fmadd.s f31, f20, f1, f16, rtz # perform operation
fmadd.s f31, f20, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x104fa6abcabb02eb # load x3 with value 0x104fa6abcabb02eb
sw x3, 0(x2) # store 0x104fa6abcabb02eb in memory
flw f23, 0(x2) # load 0x104fa6abcabb02eb from memory into f23
fmadd.s f29, f24, f13, f23, dyn # perform operation
fmadd.s f29, f24, f13, f23, rdn # perform operation
fmadd.s f29, f24, f13, f23, rmm # perform operation
fmadd.s f29, f24, f13, f23, rne # perform operation
fmadd.s f29, f24, f13, f23, rtz # perform operation
fmadd.s f29, f24, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f24, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f24, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x537b51e257981788 # load x3 with value 0x537b51e257981788
sw x3, 0(x2) # store 0x537b51e257981788 in memory
flw f16, 0(x2) # load 0x537b51e257981788 from memory into f16
fmadd.s f7, f15, f21, f16, dyn # perform operation
fmadd.s f7, f15, f21, f16, rdn # perform operation
fmadd.s f7, f15, f21, f16, rmm # perform operation
fmadd.s f7, f15, f21, f16, rne # perform operation
fmadd.s f7, f15, f21, f16, rtz # perform operation
fmadd.s f7, f15, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x7da1e23bf4913639 # load x3 with value 0x7da1e23bf4913639
sw x3, 0(x2) # store 0x7da1e23bf4913639 in memory
flw f7, 0(x2) # load 0x7da1e23bf4913639 from memory into f7
fmadd.s f30, f1, f20, f7, dyn # perform operation
fmadd.s f30, f1, f20, f7, rdn # perform operation
fmadd.s f30, f1, f20, f7, rmm # perform operation
fmadd.s f30, f1, f20, f7, rne # perform operation
fmadd.s f30, f1, f20, f7, rtz # perform operation
fmadd.s f30, f1, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f1, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xbb058385ce2419cf # load x3 with value 0xbb058385ce2419cf
sw x3, 0(x2) # store 0xbb058385ce2419cf in memory
flw f15, 0(x2) # load 0xbb058385ce2419cf from memory into f15
fmadd.s f27, f3, f20, f15, dyn # perform operation
fmadd.s f27, f3, f20, f15, rdn # perform operation
fmadd.s f27, f3, f20, f15, rmm # perform operation
fmadd.s f27, f3, f20, f15, rne # perform operation
fmadd.s f27, f3, f20, f15, rtz # perform operation
fmadd.s f27, f3, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xaf7335667c2e5e4e # load x3 with value 0xaf7335667c2e5e4e
sw x3, 0(x2) # store 0xaf7335667c2e5e4e in memory
flw f23, 0(x2) # load 0xaf7335667c2e5e4e from memory into f23
fmadd.s f2, f13, f12, f23, dyn # perform operation
fmadd.s f2, f13, f12, f23, rdn # perform operation
fmadd.s f2, f13, f12, f23, rmm # perform operation
fmadd.s f2, f13, f12, f23, rne # perform operation
fmadd.s f2, f13, f12, f23, rtz # perform operation
fmadd.s f2, f13, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x2a59e6004ed7e4f5 # load x3 with value 0x2a59e6004ed7e4f5
sw x3, 0(x2) # store 0x2a59e6004ed7e4f5 in memory
flw f9, 0(x2) # load 0x2a59e6004ed7e4f5 from memory into f9
fmadd.s f24, f1, f5, f9, dyn # perform operation
fmadd.s f24, f1, f5, f9, rdn # perform operation
fmadd.s f24, f1, f5, f9, rmm # perform operation
fmadd.s f24, f1, f5, f9, rne # perform operation
fmadd.s f24, f1, f5, f9, rtz # perform operation
fmadd.s f24, f1, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x64f0ff50e245e79 # load x3 with value 0x64f0ff50e245e79
sw x3, 0(x2) # store 0x64f0ff50e245e79 in memory
flw f5, 0(x2) # load 0x64f0ff50e245e79 from memory into f5
fmadd.s f13, f11, f9, f5, dyn # perform operation
fmadd.s f13, f11, f9, f5, rdn # perform operation
fmadd.s f13, f11, f9, f5, rmm # perform operation
fmadd.s f13, f11, f9, f5, rne # perform operation
fmadd.s f13, f11, f9, f5, rtz # perform operation
fmadd.s f13, f11, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x69b9ae0aecca6097 # load x3 with value 0x69b9ae0aecca6097
sw x3, 0(x2) # store 0x69b9ae0aecca6097 in memory
flw f31, 0(x2) # load 0x69b9ae0aecca6097 from memory into f31
fmadd.s f19, f15, f11, f31, dyn # perform operation
fmadd.s f19, f15, f11, f31, rdn # perform operation
fmadd.s f19, f15, f11, f31, rmm # perform operation
fmadd.s f19, f15, f11, f31, rne # perform operation
fmadd.s f19, f15, f11, f31, rtz # perform operation
fmadd.s f19, f15, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f15, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x83898c69a90db192 # load x3 with value 0x83898c69a90db192
sw x3, 0(x2) # store 0x83898c69a90db192 in memory
flw f6, 0(x2) # load 0x83898c69a90db192 from memory into f6
fmadd.s f9, f17, f1, f6, dyn # perform operation
fmadd.s f9, f17, f1, f6, rdn # perform operation
fmadd.s f9, f17, f1, f6, rmm # perform operation
fmadd.s f9, f17, f1, f6, rne # perform operation
fmadd.s f9, f17, f1, f6, rtz # perform operation
fmadd.s f9, f17, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f17, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f17, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x6119d25a6442cfe1 # load x3 with value 0x6119d25a6442cfe1
sw x3, 0(x2) # store 0x6119d25a6442cfe1 in memory
flw f10, 0(x2) # load 0x6119d25a6442cfe1 from memory into f10
fmadd.s f19, f28, f31, f10, dyn # perform operation
fmadd.s f19, f28, f31, f10, rdn # perform operation
fmadd.s f19, f28, f31, f10, rmm # perform operation
fmadd.s f19, f28, f31, f10, rne # perform operation
fmadd.s f19, f28, f31, f10, rtz # perform operation
fmadd.s f19, f28, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0xf81139697b3d1890 # load x3 with value 0xf81139697b3d1890
sw x3, 0(x2) # store 0xf81139697b3d1890 in memory
flw f31, 0(x2) # load 0xf81139697b3d1890 from memory into f31
fmadd.s f8, f17, f30, f31, dyn # perform operation
fmadd.s f8, f17, f30, f31, rdn # perform operation
fmadd.s f8, f17, f30, f31, rmm # perform operation
fmadd.s f8, f17, f30, f31, rne # perform operation
fmadd.s f8, f17, f30, f31, rtz # perform operation
fmadd.s f8, f17, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f17, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f17, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x2ab34f3286d03fb0 # load x3 with value 0x2ab34f3286d03fb0
sw x3, 0(x2) # store 0x2ab34f3286d03fb0 in memory
flw f14, 0(x2) # load 0x2ab34f3286d03fb0 from memory into f14
fmadd.s f23, f1, f3, f14, dyn # perform operation
fmadd.s f23, f1, f3, f14, rdn # perform operation
fmadd.s f23, f1, f3, f14, rmm # perform operation
fmadd.s f23, f1, f3, f14, rne # perform operation
fmadd.s f23, f1, f3, f14, rtz # perform operation
fmadd.s f23, f1, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0xf2d1367db28c079f # load x3 with value 0xf2d1367db28c079f
sw x3, 0(x2) # store 0xf2d1367db28c079f in memory
flw f25, 0(x2) # load 0xf2d1367db28c079f from memory into f25
fmadd.s f8, f24, f3, f25, dyn # perform operation
fmadd.s f8, f24, f3, f25, rdn # perform operation
fmadd.s f8, f24, f3, f25, rmm # perform operation
fmadd.s f8, f24, f3, f25, rne # perform operation
fmadd.s f8, f24, f3, f25, rtz # perform operation
fmadd.s f8, f24, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x850bd9e60b3edf69 # load x3 with value 0x850bd9e60b3edf69
sw x3, 0(x2) # store 0x850bd9e60b3edf69 in memory
flw f31, 0(x2) # load 0x850bd9e60b3edf69 from memory into f31
fmadd.s f6, f15, f11, f31, dyn # perform operation
fmadd.s f6, f15, f11, f31, rdn # perform operation
fmadd.s f6, f15, f11, f31, rmm # perform operation
fmadd.s f6, f15, f11, f31, rne # perform operation
fmadd.s f6, f15, f11, f31, rtz # perform operation
fmadd.s f6, f15, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x991e2edd03b4ad2a # load x3 with value 0x991e2edd03b4ad2a
sw x3, 0(x2) # store 0x991e2edd03b4ad2a in memory
flw f2, 0(x2) # load 0x991e2edd03b4ad2a from memory into f2
fmadd.s f27, f3, f22, f2, dyn # perform operation
fmadd.s f27, f3, f22, f2, rdn # perform operation
fmadd.s f27, f3, f22, f2, rmm # perform operation
fmadd.s f27, f3, f22, f2, rne # perform operation
fmadd.s f27, f3, f22, f2, rtz # perform operation
fmadd.s f27, f3, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xe7b243b4119e5cb0 # load x3 with value 0xe7b243b4119e5cb0
sw x3, 0(x2) # store 0xe7b243b4119e5cb0 in memory
flw f9, 0(x2) # load 0xe7b243b4119e5cb0 from memory into f9
fmadd.s f26, f17, f21, f9, dyn # perform operation
fmadd.s f26, f17, f21, f9, rdn # perform operation
fmadd.s f26, f17, f21, f9, rmm # perform operation
fmadd.s f26, f17, f21, f9, rne # perform operation
fmadd.s f26, f17, f21, f9, rtz # perform operation
fmadd.s f26, f17, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xcdabd99ff2bd41ed # load x3 with value 0xcdabd99ff2bd41ed
sw x3, 0(x2) # store 0xcdabd99ff2bd41ed in memory
flw f31, 0(x2) # load 0xcdabd99ff2bd41ed from memory into f31
fmadd.s f26, f30, f11, f31, dyn # perform operation
fmadd.s f26, f30, f11, f31, rdn # perform operation
fmadd.s f26, f30, f11, f31, rmm # perform operation
fmadd.s f26, f30, f11, f31, rne # perform operation
fmadd.s f26, f30, f11, f31, rtz # perform operation
fmadd.s f26, f30, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x5ef90c32b0b1c199 # load x3 with value 0x5ef90c32b0b1c199
sw x3, 0(x2) # store 0x5ef90c32b0b1c199 in memory
flw f7, 0(x2) # load 0x5ef90c32b0b1c199 from memory into f7
fmadd.s f24, f27, f21, f7, dyn # perform operation
fmadd.s f24, f27, f21, f7, rdn # perform operation
fmadd.s f24, f27, f21, f7, rmm # perform operation
fmadd.s f24, f27, f21, f7, rne # perform operation
fmadd.s f24, f27, f21, f7, rtz # perform operation
fmadd.s f24, f27, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xa2aa730017654d50 # load x3 with value 0xa2aa730017654d50
sw x3, 0(x2) # store 0xa2aa730017654d50 in memory
flw f6, 0(x2) # load 0xa2aa730017654d50 from memory into f6
fmadd.s f1, f15, f11, f6, dyn # perform operation
fmadd.s f1, f15, f11, f6, rdn # perform operation
fmadd.s f1, f15, f11, f6, rmm # perform operation
fmadd.s f1, f15, f11, f6, rne # perform operation
fmadd.s f1, f15, f11, f6, rtz # perform operation
fmadd.s f1, f15, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x980eb11cced7d55d # load x3 with value 0x980eb11cced7d55d
sw x3, 0(x2) # store 0x980eb11cced7d55d in memory
flw f20, 0(x2) # load 0x980eb11cced7d55d from memory into f20
fmadd.s f21, f13, f3, f20, dyn # perform operation
fmadd.s f21, f13, f3, f20, rdn # perform operation
fmadd.s f21, f13, f3, f20, rmm # perform operation
fmadd.s f21, f13, f3, f20, rne # perform operation
fmadd.s f21, f13, f3, f20, rtz # perform operation
fmadd.s f21, f13, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x18c74d2d8575bf50 # load x3 with value 0x18c74d2d8575bf50
sw x3, 0(x2) # store 0x18c74d2d8575bf50 in memory
flw f9, 0(x2) # load 0x18c74d2d8575bf50 from memory into f9
fmadd.s f15, f2, f13, f9, dyn # perform operation
fmadd.s f15, f2, f13, f9, rdn # perform operation
fmadd.s f15, f2, f13, f9, rmm # perform operation
fmadd.s f15, f2, f13, f9, rne # perform operation
fmadd.s f15, f2, f13, f9, rtz # perform operation
fmadd.s f15, f2, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x20a0a579268c5086 # load x3 with value 0x20a0a579268c5086
sw x3, 0(x2) # store 0x20a0a579268c5086 in memory
flw f21, 0(x2) # load 0x20a0a579268c5086 from memory into f21
fmadd.s f7, f9, f18, f21, dyn # perform operation
fmadd.s f7, f9, f18, f21, rdn # perform operation
fmadd.s f7, f9, f18, f21, rmm # perform operation
fmadd.s f7, f9, f18, f21, rne # perform operation
fmadd.s f7, f9, f18, f21, rtz # perform operation
fmadd.s f7, f9, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0x2acf388b4573deab # load x3 with value 0x2acf388b4573deab
sw x3, 0(x2) # store 0x2acf388b4573deab in memory
flw f19, 0(x2) # load 0x2acf388b4573deab from memory into f19
fmadd.s f11, f2, f3, f19, dyn # perform operation
fmadd.s f11, f2, f3, f19, rdn # perform operation
fmadd.s f11, f2, f3, f19, rmm # perform operation
fmadd.s f11, f2, f3, f19, rne # perform operation
fmadd.s f11, f2, f3, f19, rtz # perform operation
fmadd.s f11, f2, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f2, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0xb4d065e74c1a1b3f # load x3 with value 0xb4d065e74c1a1b3f
sw x3, 0(x2) # store 0xb4d065e74c1a1b3f in memory
flw f26, 0(x2) # load 0xb4d065e74c1a1b3f from memory into f26
fmadd.s f24, f28, f21, f26, dyn # perform operation
fmadd.s f24, f28, f21, f26, rdn # perform operation
fmadd.s f24, f28, f21, f26, rmm # perform operation
fmadd.s f24, f28, f21, f26, rne # perform operation
fmadd.s f24, f28, f21, f26, rtz # perform operation
fmadd.s f24, f28, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xbb45d720eab11be6 # load x3 with value 0xbb45d720eab11be6
sw x3, 0(x2) # store 0xbb45d720eab11be6 in memory
flw f6, 0(x2) # load 0xbb45d720eab11be6 from memory into f6
fmadd.s f3, f11, f5, f6, dyn # perform operation
fmadd.s f3, f11, f5, f6, rdn # perform operation
fmadd.s f3, f11, f5, f6, rmm # perform operation
fmadd.s f3, f11, f5, f6, rne # perform operation
fmadd.s f3, f11, f5, f6, rtz # perform operation
fmadd.s f3, f11, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f11, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f11, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x7fec3c112b83620c # load x3 with value 0x7fec3c112b83620c
sw x3, 0(x2) # store 0x7fec3c112b83620c in memory
flw f12, 0(x2) # load 0x7fec3c112b83620c from memory into f12
fmadd.s f15, f1, f13, f12, dyn # perform operation
fmadd.s f15, f1, f13, f12, rdn # perform operation
fmadd.s f15, f1, f13, f12, rmm # perform operation
fmadd.s f15, f1, f13, f12, rne # perform operation
fmadd.s f15, f1, f13, f12, rtz # perform operation
fmadd.s f15, f1, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xa4be368a5e6d1efd # load x3 with value 0xa4be368a5e6d1efd
sw x3, 0(x2) # store 0xa4be368a5e6d1efd in memory
flw f20, 0(x2) # load 0xa4be368a5e6d1efd from memory into f20
fmadd.s f23, f5, f29, f20, dyn # perform operation
fmadd.s f23, f5, f29, f20, rdn # perform operation
fmadd.s f23, f5, f29, f20, rmm # perform operation
fmadd.s f23, f5, f29, f20, rne # perform operation
fmadd.s f23, f5, f29, f20, rtz # perform operation
fmadd.s f23, f5, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xc6caadd5d23c3167 # load x3 with value 0xc6caadd5d23c3167
sw x3, 0(x2) # store 0xc6caadd5d23c3167 in memory
flw f13, 0(x2) # load 0xc6caadd5d23c3167 from memory into f13
fmadd.s f25, f28, f26, f13, dyn # perform operation
fmadd.s f25, f28, f26, f13, rdn # perform operation
fmadd.s f25, f28, f26, f13, rmm # perform operation
fmadd.s f25, f28, f26, f13, rne # perform operation
fmadd.s f25, f28, f26, f13, rtz # perform operation
fmadd.s f25, f28, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f28, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f28, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x682cc11b389cd92 # load x3 with value 0x682cc11b389cd92
sw x3, 0(x2) # store 0x682cc11b389cd92 in memory
flw f16, 0(x2) # load 0x682cc11b389cd92 from memory into f16
fmadd.s f2, f13, f25, f16, dyn # perform operation
fmadd.s f2, f13, f25, f16, rdn # perform operation
fmadd.s f2, f13, f25, f16, rmm # perform operation
fmadd.s f2, f13, f25, f16, rne # perform operation
fmadd.s f2, f13, f25, f16, rtz # perform operation
fmadd.s f2, f13, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x8689b83825d9d358 # load x3 with value 0x8689b83825d9d358
sw x3, 0(x2) # store 0x8689b83825d9d358 in memory
flw f6, 0(x2) # load 0x8689b83825d9d358 from memory into f6
fmadd.s f27, f31, f3, f6, dyn # perform operation
fmadd.s f27, f31, f3, f6, rdn # perform operation
fmadd.s f27, f31, f3, f6, rmm # perform operation
fmadd.s f27, f31, f3, f6, rne # perform operation
fmadd.s f27, f31, f3, f6, rtz # perform operation
fmadd.s f27, f31, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0x82b50a7132ec4dcc # load x3 with value 0x82b50a7132ec4dcc
sw x3, 0(x2) # store 0x82b50a7132ec4dcc in memory
flw f24, 0(x2) # load 0x82b50a7132ec4dcc from memory into f24
fmadd.s f10, f21, f17, f24, dyn # perform operation
fmadd.s f10, f21, f17, f24, rdn # perform operation
fmadd.s f10, f21, f17, f24, rmm # perform operation
fmadd.s f10, f21, f17, f24, rne # perform operation
fmadd.s f10, f21, f17, f24, rtz # perform operation
fmadd.s f10, f21, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f21, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f21, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f21, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f21, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f21, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x3352b1164e6365f5 # load x3 with value 0x3352b1164e6365f5
sw x3, 0(x2) # store 0x3352b1164e6365f5 in memory
flw f7, 0(x2) # load 0x3352b1164e6365f5 from memory into f7
fmadd.s f22, f13, f10, f7, dyn # perform operation
fmadd.s f22, f13, f10, f7, rdn # perform operation
fmadd.s f22, f13, f10, f7, rmm # perform operation
fmadd.s f22, f13, f10, f7, rne # perform operation
fmadd.s f22, f13, f10, f7, rtz # perform operation
fmadd.s f22, f13, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f13, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xdf2e952e6c42216c # load x3 with value 0xdf2e952e6c42216c
sw x3, 0(x2) # store 0xdf2e952e6c42216c in memory
flw f15, 0(x2) # load 0xdf2e952e6c42216c from memory into f15
fmadd.s f31, f14, f25, f15, dyn # perform operation
fmadd.s f31, f14, f25, f15, rdn # perform operation
fmadd.s f31, f14, f25, f15, rmm # perform operation
fmadd.s f31, f14, f25, f15, rne # perform operation
fmadd.s f31, f14, f25, f15, rtz # perform operation
fmadd.s f31, f14, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f14, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f14, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x204a2aab24428d59 # load x3 with value 0x204a2aab24428d59
sw x3, 0(x2) # store 0x204a2aab24428d59 in memory
flw f22, 0(x2) # load 0x204a2aab24428d59 from memory into f22
fmadd.s f11, f13, f24, f22, dyn # perform operation
fmadd.s f11, f13, f24, f22, rdn # perform operation
fmadd.s f11, f13, f24, f22, rmm # perform operation
fmadd.s f11, f13, f24, f22, rne # perform operation
fmadd.s f11, f13, f24, f22, rtz # perform operation
fmadd.s f11, f13, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f13, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f13, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xa2b8680743c9270d # load x3 with value 0xa2b8680743c9270d
sw x3, 0(x2) # store 0xa2b8680743c9270d in memory
flw f11, 0(x2) # load 0xa2b8680743c9270d from memory into f11
fmadd.s f10, f19, f6, f11, dyn # perform operation
fmadd.s f10, f19, f6, f11, rdn # perform operation
fmadd.s f10, f19, f6, f11, rmm # perform operation
fmadd.s f10, f19, f6, f11, rne # perform operation
fmadd.s f10, f19, f6, f11, rtz # perform operation
fmadd.s f10, f19, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f19, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x60c86bb52aed46a8 # load x3 with value 0x60c86bb52aed46a8
sw x3, 0(x2) # store 0x60c86bb52aed46a8 in memory
flw f22, 0(x2) # load 0x60c86bb52aed46a8 from memory into f22
fmadd.s f27, f26, f15, f22, dyn # perform operation
fmadd.s f27, f26, f15, f22, rdn # perform operation
fmadd.s f27, f26, f15, f22, rmm # perform operation
fmadd.s f27, f26, f15, f22, rne # perform operation
fmadd.s f27, f26, f15, f22, rtz # perform operation
fmadd.s f27, f26, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xfe3fb81b9c85b36a # load x3 with value 0xfe3fb81b9c85b36a
sw x3, 0(x2) # store 0xfe3fb81b9c85b36a in memory
flw f26, 0(x2) # load 0xfe3fb81b9c85b36a from memory into f26
fmadd.s f14, f25, f18, f26, dyn # perform operation
fmadd.s f14, f25, f18, f26, rdn # perform operation
fmadd.s f14, f25, f18, f26, rmm # perform operation
fmadd.s f14, f25, f18, f26, rne # perform operation
fmadd.s f14, f25, f18, f26, rtz # perform operation
fmadd.s f14, f25, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x660fa1710d3ae9cb # load x3 with value 0x660fa1710d3ae9cb
sw x3, 0(x2) # store 0x660fa1710d3ae9cb in memory
flw f31, 0(x2) # load 0x660fa1710d3ae9cb from memory into f31
fmadd.s f18, f23, f12, f31, dyn # perform operation
fmadd.s f18, f23, f12, f31, rdn # perform operation
fmadd.s f18, f23, f12, f31, rmm # perform operation
fmadd.s f18, f23, f12, f31, rne # perform operation
fmadd.s f18, f23, f12, f31, rtz # perform operation
fmadd.s f18, f23, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x8575cfefc23dddee # load x3 with value 0x8575cfefc23dddee
sw x3, 0(x2) # store 0x8575cfefc23dddee in memory
flw f25, 0(x2) # load 0x8575cfefc23dddee from memory into f25
fmadd.s f18, f23, f16, f25, dyn # perform operation
fmadd.s f18, f23, f16, f25, rdn # perform operation
fmadd.s f18, f23, f16, f25, rmm # perform operation
fmadd.s f18, f23, f16, f25, rne # perform operation
fmadd.s f18, f23, f16, f25, rtz # perform operation
fmadd.s f18, f23, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x277bf13ee2361bef # load x3 with value 0x277bf13ee2361bef
sw x3, 0(x2) # store 0x277bf13ee2361bef in memory
flw f28, 0(x2) # load 0x277bf13ee2361bef from memory into f28
fmadd.s f15, f12, f13, f28, dyn # perform operation
fmadd.s f15, f12, f13, f28, rdn # perform operation
fmadd.s f15, f12, f13, f28, rmm # perform operation
fmadd.s f15, f12, f13, f28, rne # perform operation
fmadd.s f15, f12, f13, f28, rtz # perform operation
fmadd.s f15, f12, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xa7c06a85110670d5 # load x3 with value 0xa7c06a85110670d5
sw x3, 0(x2) # store 0xa7c06a85110670d5 in memory
flw f15, 0(x2) # load 0xa7c06a85110670d5 from memory into f15
fmadd.s f3, f29, f19, f15, dyn # perform operation
fmadd.s f3, f29, f19, f15, rdn # perform operation
fmadd.s f3, f29, f19, f15, rmm # perform operation
fmadd.s f3, f29, f19, f15, rne # perform operation
fmadd.s f3, f29, f19, f15, rtz # perform operation
fmadd.s f3, f29, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f29, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f29, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0xc2146c9228173efb # load x3 with value 0xc2146c9228173efb
sw x3, 0(x2) # store 0xc2146c9228173efb in memory
flw f1, 0(x2) # load 0xc2146c9228173efb from memory into f1
fmadd.s f10, f30, f18, f1, dyn # perform operation
fmadd.s f10, f30, f18, f1, rdn # perform operation
fmadd.s f10, f30, f18, f1, rmm # perform operation
fmadd.s f10, f30, f18, f1, rne # perform operation
fmadd.s f10, f30, f18, f1, rtz # perform operation
fmadd.s f10, f30, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xc9dec49aad43ae01 # load x3 with value 0xc9dec49aad43ae01
sw x3, 0(x2) # store 0xc9dec49aad43ae01 in memory
flw f16, 0(x2) # load 0xc9dec49aad43ae01 from memory into f16
fmadd.s f1, f5, f2, f16, dyn # perform operation
fmadd.s f1, f5, f2, f16, rdn # perform operation
fmadd.s f1, f5, f2, f16, rmm # perform operation
fmadd.s f1, f5, f2, f16, rne # perform operation
fmadd.s f1, f5, f2, f16, rtz # perform operation
fmadd.s f1, f5, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x27293212dd752671 # load x3 with value 0x27293212dd752671
sw x3, 0(x2) # store 0x27293212dd752671 in memory
flw f10, 0(x2) # load 0x27293212dd752671 from memory into f10
fmadd.s f1, f8, f15, f10, dyn # perform operation
fmadd.s f1, f8, f15, f10, rdn # perform operation
fmadd.s f1, f8, f15, f10, rmm # perform operation
fmadd.s f1, f8, f15, f10, rne # perform operation
fmadd.s f1, f8, f15, f10, rtz # perform operation
fmadd.s f1, f8, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f8, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f8, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f8, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f8, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f8, f15, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0xe43ae54f6882beb4 # load x3 with value 0xe43ae54f6882beb4
sw x3, 0(x2) # store 0xe43ae54f6882beb4 in memory
flw f2, 0(x2) # load 0xe43ae54f6882beb4 from memory into f2
fmadd.s f5, f26, f20, f2, dyn # perform operation
fmadd.s f5, f26, f20, f2, rdn # perform operation
fmadd.s f5, f26, f20, f2, rmm # perform operation
fmadd.s f5, f26, f20, f2, rne # perform operation
fmadd.s f5, f26, f20, f2, rtz # perform operation
fmadd.s f5, f26, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x7cd85b56e248a50a # load x3 with value 0x7cd85b56e248a50a
sw x3, 0(x2) # store 0x7cd85b56e248a50a in memory
flw f26, 0(x2) # load 0x7cd85b56e248a50a from memory into f26
fmadd.s f1, f2, f10, f26, dyn # perform operation
fmadd.s f1, f2, f10, f26, rdn # perform operation
fmadd.s f1, f2, f10, f26, rmm # perform operation
fmadd.s f1, f2, f10, f26, rne # perform operation
fmadd.s f1, f2, f10, f26, rtz # perform operation
fmadd.s f1, f2, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x679ed80f6f07643b # load x3 with value 0x679ed80f6f07643b
sw x3, 0(x2) # store 0x679ed80f6f07643b in memory
flw f23, 0(x2) # load 0x679ed80f6f07643b from memory into f23
fmadd.s f21, f5, f25, f23, dyn # perform operation
fmadd.s f21, f5, f25, f23, rdn # perform operation
fmadd.s f21, f5, f25, f23, rmm # perform operation
fmadd.s f21, f5, f25, f23, rne # perform operation
fmadd.s f21, f5, f25, f23, rtz # perform operation
fmadd.s f21, f5, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xd479c9675e247e0c # load x3 with value 0xd479c9675e247e0c
sw x3, 0(x2) # store 0xd479c9675e247e0c in memory
flw f12, 0(x2) # load 0xd479c9675e247e0c from memory into f12
fmadd.s f1, f5, f30, f12, dyn # perform operation
fmadd.s f1, f5, f30, f12, rdn # perform operation
fmadd.s f1, f5, f30, f12, rmm # perform operation
fmadd.s f1, f5, f30, f12, rne # perform operation
fmadd.s f1, f5, f30, f12, rtz # perform operation
fmadd.s f1, f5, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f30, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xb17874042ed7ddbc # load x3 with value 0xb17874042ed7ddbc
sw x3, 0(x2) # store 0xb17874042ed7ddbc in memory
flw f15, 0(x2) # load 0xb17874042ed7ddbc from memory into f15
fmadd.s f26, f24, f2, f15, dyn # perform operation
fmadd.s f26, f24, f2, f15, rdn # perform operation
fmadd.s f26, f24, f2, f15, rmm # perform operation
fmadd.s f26, f24, f2, f15, rne # perform operation
fmadd.s f26, f24, f2, f15, rtz # perform operation
fmadd.s f26, f24, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f24, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f24, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x43712ba69822232b # load x3 with value 0x43712ba69822232b
sw x3, 0(x2) # store 0x43712ba69822232b in memory
flw f28, 0(x2) # load 0x43712ba69822232b from memory into f28
fmadd.s f11, f23, f7, f28, dyn # perform operation
fmadd.s f11, f23, f7, f28, rdn # perform operation
fmadd.s f11, f23, f7, f28, rmm # perform operation
fmadd.s f11, f23, f7, f28, rne # perform operation
fmadd.s f11, f23, f7, f28, rtz # perform operation
fmadd.s f11, f23, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xa5535dd3a7611bb0 # load x3 with value 0xa5535dd3a7611bb0
sw x3, 0(x2) # store 0xa5535dd3a7611bb0 in memory
flw f5, 0(x2) # load 0xa5535dd3a7611bb0 from memory into f5
fmadd.s f28, f16, f20, f5, dyn # perform operation
fmadd.s f28, f16, f20, f5, rdn # perform operation
fmadd.s f28, f16, f20, f5, rmm # perform operation
fmadd.s f28, f16, f20, f5, rne # perform operation
fmadd.s f28, f16, f20, f5, rtz # perform operation
fmadd.s f28, f16, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x2eea64683c2d6879 # load x3 with value 0x2eea64683c2d6879
sw x3, 0(x2) # store 0x2eea64683c2d6879 in memory
flw f5, 0(x2) # load 0x2eea64683c2d6879 from memory into f5
fmadd.s f7, f27, f20, f5, dyn # perform operation
fmadd.s f7, f27, f20, f5, rdn # perform operation
fmadd.s f7, f27, f20, f5, rmm # perform operation
fmadd.s f7, f27, f20, f5, rne # perform operation
fmadd.s f7, f27, f20, f5, rtz # perform operation
fmadd.s f7, f27, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0xce6a5a94a2276995 # load x3 with value 0xce6a5a94a2276995
sw x3, 0(x2) # store 0xce6a5a94a2276995 in memory
flw f3, 0(x2) # load 0xce6a5a94a2276995 from memory into f3
fmadd.s f23, f1, f29, f3, dyn # perform operation
fmadd.s f23, f1, f29, f3, rdn # perform operation
fmadd.s f23, f1, f29, f3, rmm # perform operation
fmadd.s f23, f1, f29, f3, rne # perform operation
fmadd.s f23, f1, f29, f3, rtz # perform operation
fmadd.s f23, f1, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0xba68408c4f694b5a # load x3 with value 0xba68408c4f694b5a
sw x3, 0(x2) # store 0xba68408c4f694b5a in memory
flw f26, 0(x2) # load 0xba68408c4f694b5a from memory into f26
fmadd.s f30, f29, f12, f26, dyn # perform operation
fmadd.s f30, f29, f12, f26, rdn # perform operation
fmadd.s f30, f29, f12, f26, rmm # perform operation
fmadd.s f30, f29, f12, f26, rne # perform operation
fmadd.s f30, f29, f12, f26, rtz # perform operation
fmadd.s f30, f29, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f29, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f29, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f29, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f29, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f29, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x21c3fec6d345c66 # load x3 with value 0x21c3fec6d345c66
sw x3, 0(x2) # store 0x21c3fec6d345c66 in memory
flw f30, 0(x2) # load 0x21c3fec6d345c66 from memory into f30
fmadd.s f22, f3, f2, f30, dyn # perform operation
fmadd.s f22, f3, f2, f30, rdn # perform operation
fmadd.s f22, f3, f2, f30, rmm # perform operation
fmadd.s f22, f3, f2, f30, rne # perform operation
fmadd.s f22, f3, f2, f30, rtz # perform operation
fmadd.s f22, f3, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f3, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f3, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x1c659fecac61ca1c # load x3 with value 0x1c659fecac61ca1c
sw x3, 0(x2) # store 0x1c659fecac61ca1c in memory
flw f21, 0(x2) # load 0x1c659fecac61ca1c from memory into f21
fmadd.s f6, f13, f3, f21, dyn # perform operation
fmadd.s f6, f13, f3, f21, rdn # perform operation
fmadd.s f6, f13, f3, f21, rmm # perform operation
fmadd.s f6, f13, f3, f21, rne # perform operation
fmadd.s f6, f13, f3, f21, rtz # perform operation
fmadd.s f6, f13, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x2637815da14ca10b # load x3 with value 0x2637815da14ca10b
sw x3, 0(x2) # store 0x2637815da14ca10b in memory
flw f13, 0(x2) # load 0x2637815da14ca10b from memory into f13
fmadd.s f27, f15, f18, f13, dyn # perform operation
fmadd.s f27, f15, f18, f13, rdn # perform operation
fmadd.s f27, f15, f18, f13, rmm # perform operation
fmadd.s f27, f15, f18, f13, rne # perform operation
fmadd.s f27, f15, f18, f13, rtz # perform operation
fmadd.s f27, f15, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f15, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x98382fd54fabcc32 # load x3 with value 0x98382fd54fabcc32
sw x3, 0(x2) # store 0x98382fd54fabcc32 in memory
flw f20, 0(x2) # load 0x98382fd54fabcc32 from memory into f20
fmadd.s f11, f18, f10, f20, dyn # perform operation
fmadd.s f11, f18, f10, f20, rdn # perform operation
fmadd.s f11, f18, f10, f20, rmm # perform operation
fmadd.s f11, f18, f10, f20, rne # perform operation
fmadd.s f11, f18, f10, f20, rtz # perform operation
fmadd.s f11, f18, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f18, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f18, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f18, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f18, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f18, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x7b3fb7ab74a7bc92 # load x3 with value 0x7b3fb7ab74a7bc92
sw x3, 0(x2) # store 0x7b3fb7ab74a7bc92 in memory
flw f26, 0(x2) # load 0x7b3fb7ab74a7bc92 from memory into f26
fmadd.s f27, f10, f28, f26, dyn # perform operation
fmadd.s f27, f10, f28, f26, rdn # perform operation
fmadd.s f27, f10, f28, f26, rmm # perform operation
fmadd.s f27, f10, f28, f26, rne # perform operation
fmadd.s f27, f10, f28, f26, rtz # perform operation
fmadd.s f27, f10, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x54ec20ee8d93a865 # load x3 with value 0x54ec20ee8d93a865
sw x3, 0(x2) # store 0x54ec20ee8d93a865 in memory
flw f23, 0(x2) # load 0x54ec20ee8d93a865 from memory into f23
fmadd.s f12, f26, f15, f23, dyn # perform operation
fmadd.s f12, f26, f15, f23, rdn # perform operation
fmadd.s f12, f26, f15, f23, rmm # perform operation
fmadd.s f12, f26, f15, f23, rne # perform operation
fmadd.s f12, f26, f15, f23, rtz # perform operation
fmadd.s f12, f26, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x13d9c24e2aea6146 # load x3 with value 0x13d9c24e2aea6146
sw x3, 0(x2) # store 0x13d9c24e2aea6146 in memory
flw f18, 0(x2) # load 0x13d9c24e2aea6146 from memory into f18
fmadd.s f1, f19, f10, f18, dyn # perform operation
fmadd.s f1, f19, f10, f18, rdn # perform operation
fmadd.s f1, f19, f10, f18, rmm # perform operation
fmadd.s f1, f19, f10, f18, rne # perform operation
fmadd.s f1, f19, f10, f18, rtz # perform operation
fmadd.s f1, f19, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xf5b80a077fb36f0a # load x3 with value 0xf5b80a077fb36f0a
sw x3, 0(x2) # store 0xf5b80a077fb36f0a in memory
flw f18, 0(x2) # load 0xf5b80a077fb36f0a from memory into f18
fmadd.s f6, f23, f27, f18, dyn # perform operation
fmadd.s f6, f23, f27, f18, rdn # perform operation
fmadd.s f6, f23, f27, f18, rmm # perform operation
fmadd.s f6, f23, f27, f18, rne # perform operation
fmadd.s f6, f23, f27, f18, rtz # perform operation
fmadd.s f6, f23, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f23, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f23, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f23, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f23, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f23, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x4bd05f72b975346c # load x3 with value 0x4bd05f72b975346c
sw x3, 0(x2) # store 0x4bd05f72b975346c in memory
flw f20, 0(x2) # load 0x4bd05f72b975346c from memory into f20
fmadd.s f10, f2, f28, f20, dyn # perform operation
fmadd.s f10, f2, f28, f20, rdn # perform operation
fmadd.s f10, f2, f28, f20, rmm # perform operation
fmadd.s f10, f2, f28, f20, rne # perform operation
fmadd.s f10, f2, f28, f20, rtz # perform operation
fmadd.s f10, f2, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f2, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x2a6544394eb5cada # load x3 with value 0x2a6544394eb5cada
sw x3, 0(x2) # store 0x2a6544394eb5cada in memory
flw f26, 0(x2) # load 0x2a6544394eb5cada from memory into f26
fmadd.s f15, f13, f24, f26, dyn # perform operation
fmadd.s f15, f13, f24, f26, rdn # perform operation
fmadd.s f15, f13, f24, f26, rmm # perform operation
fmadd.s f15, f13, f24, f26, rne # perform operation
fmadd.s f15, f13, f24, f26, rtz # perform operation
fmadd.s f15, f13, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f13, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f13, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f13, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f13, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f13, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x2bad2c0ee203c0bc # load x3 with value 0x2bad2c0ee203c0bc
sw x3, 0(x2) # store 0x2bad2c0ee203c0bc in memory
flw f2, 0(x2) # load 0x2bad2c0ee203c0bc from memory into f2
fmadd.s f18, f5, f6, f2, dyn # perform operation
fmadd.s f18, f5, f6, f2, rdn # perform operation
fmadd.s f18, f5, f6, f2, rmm # perform operation
fmadd.s f18, f5, f6, f2, rne # perform operation
fmadd.s f18, f5, f6, f2, rtz # perform operation
fmadd.s f18, f5, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f5, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x16ab8653f53ad271 # load x3 with value 0x16ab8653f53ad271
sw x3, 0(x2) # store 0x16ab8653f53ad271 in memory
flw f2, 0(x2) # load 0x16ab8653f53ad271 from memory into f2
fmadd.s f6, f26, f24, f2, dyn # perform operation
fmadd.s f6, f26, f24, f2, rdn # perform operation
fmadd.s f6, f26, f24, f2, rmm # perform operation
fmadd.s f6, f26, f24, f2, rne # perform operation
fmadd.s f6, f26, f24, f2, rtz # perform operation
fmadd.s f6, f26, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f26, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x4784f2ddecc50d17 # load x3 with value 0x4784f2ddecc50d17
sw x3, 0(x2) # store 0x4784f2ddecc50d17 in memory
flw f17, 0(x2) # load 0x4784f2ddecc50d17 from memory into f17
fmadd.s f8, f30, f7, f17, dyn # perform operation
fmadd.s f8, f30, f7, f17, rdn # perform operation
fmadd.s f8, f30, f7, f17, rmm # perform operation
fmadd.s f8, f30, f7, f17, rne # perform operation
fmadd.s f8, f30, f7, f17, rtz # perform operation
fmadd.s f8, f30, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f30, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f30, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x7410f53096431944 # load x3 with value 0x7410f53096431944
sw x3, 0(x2) # store 0x7410f53096431944 in memory
flw f19, 0(x2) # load 0x7410f53096431944 from memory into f19
fmadd.s f17, f24, f25, f19, dyn # perform operation
fmadd.s f17, f24, f25, f19, rdn # perform operation
fmadd.s f17, f24, f25, f19, rmm # perform operation
fmadd.s f17, f24, f25, f19, rne # perform operation
fmadd.s f17, f24, f25, f19, rtz # perform operation
fmadd.s f17, f24, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x8237a3740541d05f # load x3 with value 0x8237a3740541d05f
sw x3, 0(x2) # store 0x8237a3740541d05f in memory
flw f30, 0(x2) # load 0x8237a3740541d05f from memory into f30
fmadd.s f20, f12, f11, f30, dyn # perform operation
fmadd.s f20, f12, f11, f30, rdn # perform operation
fmadd.s f20, f12, f11, f30, rmm # perform operation
fmadd.s f20, f12, f11, f30, rne # perform operation
fmadd.s f20, f12, f11, f30, rtz # perform operation
fmadd.s f20, f12, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0xa7a69ed5c3bb8a31 # load x3 with value 0xa7a69ed5c3bb8a31
sw x3, 0(x2) # store 0xa7a69ed5c3bb8a31 in memory
flw f20, 0(x2) # load 0xa7a69ed5c3bb8a31 from memory into f20
fmadd.s f10, f11, f26, f20, dyn # perform operation
fmadd.s f10, f11, f26, f20, rdn # perform operation
fmadd.s f10, f11, f26, f20, rmm # perform operation
fmadd.s f10, f11, f26, f20, rne # perform operation
fmadd.s f10, f11, f26, f20, rtz # perform operation
fmadd.s f10, f11, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f11, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f11, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f11, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f11, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f11, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x3c5982407aff1940 # load x3 with value 0x3c5982407aff1940
sw x3, 0(x2) # store 0x3c5982407aff1940 in memory
flw f11, 0(x2) # load 0x3c5982407aff1940 from memory into f11
fmadd.s f3, f16, f7, f11, dyn # perform operation
fmadd.s f3, f16, f7, f11, rdn # perform operation
fmadd.s f3, f16, f7, f11, rmm # perform operation
fmadd.s f3, f16, f7, f11, rne # perform operation
fmadd.s f3, f16, f7, f11, rtz # perform operation
fmadd.s f3, f16, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xd546cba51f20abfa # load x3 with value 0xd546cba51f20abfa
sw x3, 0(x2) # store 0xd546cba51f20abfa in memory
flw f20, 0(x2) # load 0xd546cba51f20abfa from memory into f20
fmadd.s f28, f15, f29, f20, dyn # perform operation
fmadd.s f28, f15, f29, f20, rdn # perform operation
fmadd.s f28, f15, f29, f20, rmm # perform operation
fmadd.s f28, f15, f29, f20, rne # perform operation
fmadd.s f28, f15, f29, f20, rtz # perform operation
fmadd.s f28, f15, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f15, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f15, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xf99ebabf9bf50c60 # load x3 with value 0xf99ebabf9bf50c60
sw x3, 0(x2) # store 0xf99ebabf9bf50c60 in memory
flw f8, 0(x2) # load 0xf99ebabf9bf50c60 from memory into f8
fmadd.s f2, f21, f15, f8, dyn # perform operation
fmadd.s f2, f21, f15, f8, rdn # perform operation
fmadd.s f2, f21, f15, f8, rmm # perform operation
fmadd.s f2, f21, f15, f8, rne # perform operation
fmadd.s f2, f21, f15, f8, rtz # perform operation
fmadd.s f2, f21, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x236d0310069d435d # load x3 with value 0x236d0310069d435d
sw x3, 0(x2) # store 0x236d0310069d435d in memory
flw f1, 0(x2) # load 0x236d0310069d435d from memory into f1
fmadd.s f3, f9, f19, f1, dyn # perform operation
fmadd.s f3, f9, f19, f1, rdn # perform operation
fmadd.s f3, f9, f19, f1, rmm # perform operation
fmadd.s f3, f9, f19, f1, rne # perform operation
fmadd.s f3, f9, f19, f1, rtz # perform operation
fmadd.s f3, f9, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f9, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f9, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x3c11be18071f9085 # load x3 with value 0x3c11be18071f9085
sw x3, 0(x2) # store 0x3c11be18071f9085 in memory
flw f6, 0(x2) # load 0x3c11be18071f9085 from memory into f6
fmadd.s f8, f31, f2, f6, dyn # perform operation
fmadd.s f8, f31, f2, f6, rdn # perform operation
fmadd.s f8, f31, f2, f6, rmm # perform operation
fmadd.s f8, f31, f2, f6, rne # perform operation
fmadd.s f8, f31, f2, f6, rtz # perform operation
fmadd.s f8, f31, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x89694f21dbce3ecf # load x3 with value 0x89694f21dbce3ecf
sw x3, 0(x2) # store 0x89694f21dbce3ecf in memory
flw f7, 0(x2) # load 0x89694f21dbce3ecf from memory into f7
fmadd.s f10, f21, f31, f7, dyn # perform operation
fmadd.s f10, f21, f31, f7, rdn # perform operation
fmadd.s f10, f21, f31, f7, rmm # perform operation
fmadd.s f10, f21, f31, f7, rne # perform operation
fmadd.s f10, f21, f31, f7, rtz # perform operation
fmadd.s f10, f21, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f21, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x35099edfd4709c50 # load x3 with value 0x35099edfd4709c50
sw x3, 0(x2) # store 0x35099edfd4709c50 in memory
flw f18, 0(x2) # load 0x35099edfd4709c50 from memory into f18
fmadd.s f14, f28, f1, f18, dyn # perform operation
fmadd.s f14, f28, f1, f18, rdn # perform operation
fmadd.s f14, f28, f1, f18, rmm # perform operation
fmadd.s f14, f28, f1, f18, rne # perform operation
fmadd.s f14, f28, f1, f18, rtz # perform operation
fmadd.s f14, f28, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x7d26f5922d01f3f8 # load x3 with value 0x7d26f5922d01f3f8
sw x3, 0(x2) # store 0x7d26f5922d01f3f8 in memory
flw f17, 0(x2) # load 0x7d26f5922d01f3f8 from memory into f17
fmadd.s f5, f19, f13, f17, dyn # perform operation
fmadd.s f5, f19, f13, f17, rdn # perform operation
fmadd.s f5, f19, f13, f17, rmm # perform operation
fmadd.s f5, f19, f13, f17, rne # perform operation
fmadd.s f5, f19, f13, f17, rtz # perform operation
fmadd.s f5, f19, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0xdf5edc3b2fdc0e2 # load x3 with value 0xdf5edc3b2fdc0e2
sw x3, 0(x2) # store 0xdf5edc3b2fdc0e2 in memory
flw f5, 0(x2) # load 0xdf5edc3b2fdc0e2 from memory into f5
fmadd.s f6, f13, f14, f5, dyn # perform operation
fmadd.s f6, f13, f14, f5, rdn # perform operation
fmadd.s f6, f13, f14, f5, rmm # perform operation
fmadd.s f6, f13, f14, f5, rne # perform operation
fmadd.s f6, f13, f14, f5, rtz # perform operation
fmadd.s f6, f13, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x2c3f5e7ec422b316 # load x3 with value 0x2c3f5e7ec422b316
sw x3, 0(x2) # store 0x2c3f5e7ec422b316 in memory
flw f6, 0(x2) # load 0x2c3f5e7ec422b316 from memory into f6
fmadd.s f19, f25, f16, f6, dyn # perform operation
fmadd.s f19, f25, f16, f6, rdn # perform operation
fmadd.s f19, f25, f16, f6, rmm # perform operation
fmadd.s f19, f25, f16, f6, rne # perform operation
fmadd.s f19, f25, f16, f6, rtz # perform operation
fmadd.s f19, f25, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f25, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f25, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x9e0ab16873eab6ad # load x3 with value 0x9e0ab16873eab6ad
sw x3, 0(x2) # store 0x9e0ab16873eab6ad in memory
flw f3, 0(x2) # load 0x9e0ab16873eab6ad from memory into f3
fmadd.s f29, f10, f27, f3, dyn # perform operation
fmadd.s f29, f10, f27, f3, rdn # perform operation
fmadd.s f29, f10, f27, f3, rmm # perform operation
fmadd.s f29, f10, f27, f3, rne # perform operation
fmadd.s f29, f10, f27, f3, rtz # perform operation
fmadd.s f29, f10, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x9b308e28ac832308 # load x3 with value 0x9b308e28ac832308
sw x3, 0(x2) # store 0x9b308e28ac832308 in memory
flw f24, 0(x2) # load 0x9b308e28ac832308 from memory into f24
fmadd.s f12, f22, f18, f24, dyn # perform operation
fmadd.s f12, f22, f18, f24, rdn # perform operation
fmadd.s f12, f22, f18, f24, rmm # perform operation
fmadd.s f12, f22, f18, f24, rne # perform operation
fmadd.s f12, f22, f18, f24, rtz # perform operation
fmadd.s f12, f22, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xbc8fa615fb48000e # load x3 with value 0xbc8fa615fb48000e
sw x3, 0(x2) # store 0xbc8fa615fb48000e in memory
flw f3, 0(x2) # load 0xbc8fa615fb48000e from memory into f3
fmadd.s f5, f19, f16, f3, dyn # perform operation
fmadd.s f5, f19, f16, f3, rdn # perform operation
fmadd.s f5, f19, f16, f3, rmm # perform operation
fmadd.s f5, f19, f16, f3, rne # perform operation
fmadd.s f5, f19, f16, f3, rtz # perform operation
fmadd.s f5, f19, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xd38abbbd8df86c7b # load x3 with value 0xd38abbbd8df86c7b
sw x3, 0(x2) # store 0xd38abbbd8df86c7b in memory
flw f25, 0(x2) # load 0xd38abbbd8df86c7b from memory into f25
fmadd.s f18, f9, f7, f25, dyn # perform operation
fmadd.s f18, f9, f7, f25, rdn # perform operation
fmadd.s f18, f9, f7, f25, rmm # perform operation
fmadd.s f18, f9, f7, f25, rne # perform operation
fmadd.s f18, f9, f7, f25, rtz # perform operation
fmadd.s f18, f9, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f9, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xf8b59eb0cbddd132 # load x3 with value 0xf8b59eb0cbddd132
sw x3, 0(x2) # store 0xf8b59eb0cbddd132 in memory
flw f19, 0(x2) # load 0xf8b59eb0cbddd132 from memory into f19
fmadd.s f27, f24, f20, f19, dyn # perform operation
fmadd.s f27, f24, f20, f19, rdn # perform operation
fmadd.s f27, f24, f20, f19, rmm # perform operation
fmadd.s f27, f24, f20, f19, rne # perform operation
fmadd.s f27, f24, f20, f19, rtz # perform operation
fmadd.s f27, f24, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x50ab465f7de811e6 # load x3 with value 0x50ab465f7de811e6
sw x3, 0(x2) # store 0x50ab465f7de811e6 in memory
flw f30, 0(x2) # load 0x50ab465f7de811e6 from memory into f30
fmadd.s f14, f11, f21, f30, dyn # perform operation
fmadd.s f14, f11, f21, f30, rdn # perform operation
fmadd.s f14, f11, f21, f30, rmm # perform operation
fmadd.s f14, f11, f21, f30, rne # perform operation
fmadd.s f14, f11, f21, f30, rtz # perform operation
fmadd.s f14, f11, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x735145a037ad39c3 # load x3 with value 0x735145a037ad39c3
sw x3, 0(x2) # store 0x735145a037ad39c3 in memory
flw f8, 0(x2) # load 0x735145a037ad39c3 from memory into f8
fmadd.s f31, f6, f19, f8, dyn # perform operation
fmadd.s f31, f6, f19, f8, rdn # perform operation
fmadd.s f31, f6, f19, f8, rmm # perform operation
fmadd.s f31, f6, f19, f8, rne # perform operation
fmadd.s f31, f6, f19, f8, rtz # perform operation
fmadd.s f31, f6, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x7ebad82fcf2f41c1 # load x3 with value 0x7ebad82fcf2f41c1
sw x3, 0(x2) # store 0x7ebad82fcf2f41c1 in memory
flw f8, 0(x2) # load 0x7ebad82fcf2f41c1 from memory into f8
fmadd.s f19, f14, f13, f8, dyn # perform operation
fmadd.s f19, f14, f13, f8, rdn # perform operation
fmadd.s f19, f14, f13, f8, rmm # perform operation
fmadd.s f19, f14, f13, f8, rne # perform operation
fmadd.s f19, f14, f13, f8, rtz # perform operation
fmadd.s f19, f14, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f14, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f14, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f14, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f14, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f14, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0xb35b84c50e9b2ed6 # load x3 with value 0xb35b84c50e9b2ed6
sw x3, 0(x2) # store 0xb35b84c50e9b2ed6 in memory
flw f20, 0(x2) # load 0xb35b84c50e9b2ed6 from memory into f20
fmadd.s f19, f2, f28, f20, dyn # perform operation
fmadd.s f19, f2, f28, f20, rdn # perform operation
fmadd.s f19, f2, f28, f20, rmm # perform operation
fmadd.s f19, f2, f28, f20, rne # perform operation
fmadd.s f19, f2, f28, f20, rtz # perform operation
fmadd.s f19, f2, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f2, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x4dfe010c22e6f845 # load x3 with value 0x4dfe010c22e6f845
sw x3, 0(x2) # store 0x4dfe010c22e6f845 in memory
flw f29, 0(x2) # load 0x4dfe010c22e6f845 from memory into f29
fmadd.s f18, f30, f8, f29, dyn # perform operation
fmadd.s f18, f30, f8, f29, rdn # perform operation
fmadd.s f18, f30, f8, f29, rmm # perform operation
fmadd.s f18, f30, f8, f29, rne # perform operation
fmadd.s f18, f30, f8, f29, rtz # perform operation
fmadd.s f18, f30, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f30, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f30, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f30, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f30, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f30, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xd0f1a81281263c66 # load x3 with value 0xd0f1a81281263c66
sw x3, 0(x2) # store 0xd0f1a81281263c66 in memory
flw f10, 0(x2) # load 0xd0f1a81281263c66 from memory into f10
fmadd.s f17, f2, f27, f10, dyn # perform operation
fmadd.s f17, f2, f27, f10, rdn # perform operation
fmadd.s f17, f2, f27, f10, rmm # perform operation
fmadd.s f17, f2, f27, f10, rne # perform operation
fmadd.s f17, f2, f27, f10, rtz # perform operation
fmadd.s f17, f2, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xb42e0c621330a547 # load x3 with value 0xb42e0c621330a547
sw x3, 0(x2) # store 0xb42e0c621330a547 in memory
flw f22, 0(x2) # load 0xb42e0c621330a547 from memory into f22
fmadd.s f24, f23, f25, f22, dyn # perform operation
fmadd.s f24, f23, f25, f22, rdn # perform operation
fmadd.s f24, f23, f25, f22, rmm # perform operation
fmadd.s f24, f23, f25, f22, rne # perform operation
fmadd.s f24, f23, f25, f22, rtz # perform operation
fmadd.s f24, f23, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xdb0078b79bcc1ab2 # load x3 with value 0xdb0078b79bcc1ab2
sw x3, 0(x2) # store 0xdb0078b79bcc1ab2 in memory
flw f11, 0(x2) # load 0xdb0078b79bcc1ab2 from memory into f11
fmadd.s f3, f1, f9, f11, dyn # perform operation
fmadd.s f3, f1, f9, f11, rdn # perform operation
fmadd.s f3, f1, f9, f11, rmm # perform operation
fmadd.s f3, f1, f9, f11, rne # perform operation
fmadd.s f3, f1, f9, f11, rtz # perform operation
fmadd.s f3, f1, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x77b87a3c9e933678 # load x3 with value 0x77b87a3c9e933678
sw x3, 0(x2) # store 0x77b87a3c9e933678 in memory
flw f9, 0(x2) # load 0x77b87a3c9e933678 from memory into f9
fmadd.s f27, f13, f8, f9, dyn # perform operation
fmadd.s f27, f13, f8, f9, rdn # perform operation
fmadd.s f27, f13, f8, f9, rmm # perform operation
fmadd.s f27, f13, f8, f9, rne # perform operation
fmadd.s f27, f13, f8, f9, rtz # perform operation
fmadd.s f27, f13, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f13, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f13, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f13, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f13, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f13, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0xf0a8e84fcb3b318a # load x3 with value 0xf0a8e84fcb3b318a
sw x3, 0(x2) # store 0xf0a8e84fcb3b318a in memory
flw f30, 0(x2) # load 0xf0a8e84fcb3b318a from memory into f30
fmadd.s f29, f11, f22, f30, dyn # perform operation
fmadd.s f29, f11, f22, f30, rdn # perform operation
fmadd.s f29, f11, f22, f30, rmm # perform operation
fmadd.s f29, f11, f22, f30, rne # perform operation
fmadd.s f29, f11, f22, f30, rtz # perform operation
fmadd.s f29, f11, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0xaf7019781ecdd24b # load x3 with value 0xaf7019781ecdd24b
sw x3, 0(x2) # store 0xaf7019781ecdd24b in memory
flw f29, 0(x2) # load 0xaf7019781ecdd24b from memory into f29
fmadd.s f11, f9, f17, f29, dyn # perform operation
fmadd.s f11, f9, f17, f29, rdn # perform operation
fmadd.s f11, f9, f17, f29, rmm # perform operation
fmadd.s f11, f9, f17, f29, rne # perform operation
fmadd.s f11, f9, f17, f29, rtz # perform operation
fmadd.s f11, f9, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f9, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f9, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f9, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f9, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f9, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xd919dca6b5ba36f8 # load x3 with value 0xd919dca6b5ba36f8
sw x3, 0(x2) # store 0xd919dca6b5ba36f8 in memory
flw f6, 0(x2) # load 0xd919dca6b5ba36f8 from memory into f6
fmadd.s f13, f3, f19, f6, dyn # perform operation
fmadd.s f13, f3, f19, f6, rdn # perform operation
fmadd.s f13, f3, f19, f6, rmm # perform operation
fmadd.s f13, f3, f19, f6, rne # perform operation
fmadd.s f13, f3, f19, f6, rtz # perform operation
fmadd.s f13, f3, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f3, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x8cfc6e7af41b628a # load x3 with value 0x8cfc6e7af41b628a
sw x3, 0(x2) # store 0x8cfc6e7af41b628a in memory
flw f19, 0(x2) # load 0x8cfc6e7af41b628a from memory into f19
fmadd.s f16, f18, f31, f19, dyn # perform operation
fmadd.s f16, f18, f31, f19, rdn # perform operation
fmadd.s f16, f18, f31, f19, rmm # perform operation
fmadd.s f16, f18, f31, f19, rne # perform operation
fmadd.s f16, f18, f31, f19, rtz # perform operation
fmadd.s f16, f18, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f18, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f18, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f18, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f18, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f18, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x80c331c1d5e63b83 # load x3 with value 0x80c331c1d5e63b83
sw x3, 0(x2) # store 0x80c331c1d5e63b83 in memory
flw f1, 0(x2) # load 0x80c331c1d5e63b83 from memory into f1
fmadd.s f27, f7, f26, f1, dyn # perform operation
fmadd.s f27, f7, f26, f1, rdn # perform operation
fmadd.s f27, f7, f26, f1, rmm # perform operation
fmadd.s f27, f7, f26, f1, rne # perform operation
fmadd.s f27, f7, f26, f1, rtz # perform operation
fmadd.s f27, f7, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f7, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f7, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xe590c5a42a56aea8 # load x3 with value 0xe590c5a42a56aea8
sw x3, 0(x2) # store 0xe590c5a42a56aea8 in memory
flw f23, 0(x2) # load 0xe590c5a42a56aea8 from memory into f23
fmadd.s f22, f2, f5, f23, dyn # perform operation
fmadd.s f22, f2, f5, f23, rdn # perform operation
fmadd.s f22, f2, f5, f23, rmm # perform operation
fmadd.s f22, f2, f5, f23, rne # perform operation
fmadd.s f22, f2, f5, f23, rtz # perform operation
fmadd.s f22, f2, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xe3a0e1e33112185b # load x3 with value 0xe3a0e1e33112185b
sw x3, 0(x2) # store 0xe3a0e1e33112185b in memory
flw f1, 0(x2) # load 0xe3a0e1e33112185b from memory into f1
fmadd.s f16, f15, f19, f1, dyn # perform operation
fmadd.s f16, f15, f19, f1, rdn # perform operation
fmadd.s f16, f15, f19, f1, rmm # perform operation
fmadd.s f16, f15, f19, f1, rne # perform operation
fmadd.s f16, f15, f19, f1, rtz # perform operation
fmadd.s f16, f15, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f15, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f15, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f15, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f15, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f15, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xcdf0e07646c973d5 # load x3 with value 0xcdf0e07646c973d5
sw x3, 0(x2) # store 0xcdf0e07646c973d5 in memory
flw f30, 0(x2) # load 0xcdf0e07646c973d5 from memory into f30
fmadd.s f9, f16, f18, f30, dyn # perform operation
fmadd.s f9, f16, f18, f30, rdn # perform operation
fmadd.s f9, f16, f18, f30, rmm # perform operation
fmadd.s f9, f16, f18, f30, rne # perform operation
fmadd.s f9, f16, f18, f30, rtz # perform operation
fmadd.s f9, f16, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x64c3c051c7508d20 # load x3 with value 0x64c3c051c7508d20
sw x3, 0(x2) # store 0x64c3c051c7508d20 in memory
flw f3, 0(x2) # load 0x64c3c051c7508d20 from memory into f3
fmadd.s f2, f30, f22, f3, dyn # perform operation
fmadd.s f2, f30, f22, f3, rdn # perform operation
fmadd.s f2, f30, f22, f3, rmm # perform operation
fmadd.s f2, f30, f22, f3, rne # perform operation
fmadd.s f2, f30, f22, f3, rtz # perform operation
fmadd.s f2, f30, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f30, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f30, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f30, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f30, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f30, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xbf6a05191fe2c958 # load x3 with value 0xbf6a05191fe2c958
sw x3, 0(x2) # store 0xbf6a05191fe2c958 in memory
flw f5, 0(x2) # load 0xbf6a05191fe2c958 from memory into f5
fmadd.s f2, f17, f3, f5, dyn # perform operation
fmadd.s f2, f17, f3, f5, rdn # perform operation
fmadd.s f2, f17, f3, f5, rmm # perform operation
fmadd.s f2, f17, f3, f5, rne # perform operation
fmadd.s f2, f17, f3, f5, rtz # perform operation
fmadd.s f2, f17, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xd7edd2d4e87b0554 # load x3 with value 0xd7edd2d4e87b0554
sw x3, 0(x2) # store 0xd7edd2d4e87b0554 in memory
flw f14, 0(x2) # load 0xd7edd2d4e87b0554 from memory into f14
fmadd.s f21, f9, f3, f14, dyn # perform operation
fmadd.s f21, f9, f3, f14, rdn # perform operation
fmadd.s f21, f9, f3, f14, rmm # perform operation
fmadd.s f21, f9, f3, f14, rne # perform operation
fmadd.s f21, f9, f3, f14, rtz # perform operation
fmadd.s f21, f9, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f9, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f9, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x265670191d72f4d6 # load x3 with value 0x265670191d72f4d6
sw x3, 0(x2) # store 0x265670191d72f4d6 in memory
flw f8, 0(x2) # load 0x265670191d72f4d6 from memory into f8
fmadd.s f9, f13, f1, f8, dyn # perform operation
fmadd.s f9, f13, f1, f8, rdn # perform operation
fmadd.s f9, f13, f1, f8, rmm # perform operation
fmadd.s f9, f13, f1, f8, rne # perform operation
fmadd.s f9, f13, f1, f8, rtz # perform operation
fmadd.s f9, f13, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x6cb992b7a33ce83b # load x3 with value 0x6cb992b7a33ce83b
sw x3, 0(x2) # store 0x6cb992b7a33ce83b in memory
flw f14, 0(x2) # load 0x6cb992b7a33ce83b from memory into f14
fmadd.s f27, f2, f11, f14, dyn # perform operation
fmadd.s f27, f2, f11, f14, rdn # perform operation
fmadd.s f27, f2, f11, f14, rmm # perform operation
fmadd.s f27, f2, f11, f14, rne # perform operation
fmadd.s f27, f2, f11, f14, rtz # perform operation
fmadd.s f27, f2, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x3a6bb44eeba396b8 # load x3 with value 0x3a6bb44eeba396b8
sw x3, 0(x2) # store 0x3a6bb44eeba396b8 in memory
flw f14, 0(x2) # load 0x3a6bb44eeba396b8 from memory into f14
fmadd.s f21, f30, f9, f14, dyn # perform operation
fmadd.s f21, f30, f9, f14, rdn # perform operation
fmadd.s f21, f30, f9, f14, rmm # perform operation
fmadd.s f21, f30, f9, f14, rne # perform operation
fmadd.s f21, f30, f9, f14, rtz # perform operation
fmadd.s f21, f30, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f30, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f30, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xe6f663b6aaf53e18 # load x3 with value 0xe6f663b6aaf53e18
sw x3, 0(x2) # store 0xe6f663b6aaf53e18 in memory
flw f17, 0(x2) # load 0xe6f663b6aaf53e18 from memory into f17
fmadd.s f9, f1, f23, f17, dyn # perform operation
fmadd.s f9, f1, f23, f17, rdn # perform operation
fmadd.s f9, f1, f23, f17, rmm # perform operation
fmadd.s f9, f1, f23, f17, rne # perform operation
fmadd.s f9, f1, f23, f17, rtz # perform operation
fmadd.s f9, f1, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x60f0031f7227d534 # load x3 with value 0x60f0031f7227d534
sw x3, 0(x2) # store 0x60f0031f7227d534 in memory
flw f19, 0(x2) # load 0x60f0031f7227d534 from memory into f19
fmadd.s f28, f3, f21, f19, dyn # perform operation
fmadd.s f28, f3, f21, f19, rdn # perform operation
fmadd.s f28, f3, f21, f19, rmm # perform operation
fmadd.s f28, f3, f21, f19, rne # perform operation
fmadd.s f28, f3, f21, f19, rtz # perform operation
fmadd.s f28, f3, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f21, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xe0102fe9e1bfe811 # load x3 with value 0xe0102fe9e1bfe811
sw x3, 0(x2) # store 0xe0102fe9e1bfe811 in memory
flw f26, 0(x2) # load 0xe0102fe9e1bfe811 from memory into f26
fmadd.s f30, f1, f24, f26, dyn # perform operation
fmadd.s f30, f1, f24, f26, rdn # perform operation
fmadd.s f30, f1, f24, f26, rmm # perform operation
fmadd.s f30, f1, f24, f26, rne # perform operation
fmadd.s f30, f1, f24, f26, rtz # perform operation
fmadd.s f30, f1, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f1, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xf268997872d6ff64 # load x3 with value 0xf268997872d6ff64
sw x3, 0(x2) # store 0xf268997872d6ff64 in memory
flw f30, 0(x2) # load 0xf268997872d6ff64 from memory into f30
fmadd.s f19, f22, f25, f30, dyn # perform operation
fmadd.s f19, f22, f25, f30, rdn # perform operation
fmadd.s f19, f22, f25, f30, rmm # perform operation
fmadd.s f19, f22, f25, f30, rne # perform operation
fmadd.s f19, f22, f25, f30, rtz # perform operation
fmadd.s f19, f22, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x34f0111d1749d74d # load x3 with value 0x34f0111d1749d74d
sw x3, 0(x2) # store 0x34f0111d1749d74d in memory
flw f29, 0(x2) # load 0x34f0111d1749d74d from memory into f29
fmadd.s f16, f15, f10, f29, dyn # perform operation
fmadd.s f16, f15, f10, f29, rdn # perform operation
fmadd.s f16, f15, f10, f29, rmm # perform operation
fmadd.s f16, f15, f10, f29, rne # perform operation
fmadd.s f16, f15, f10, f29, rtz # perform operation
fmadd.s f16, f15, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f15, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x325890982f15ede4 # load x3 with value 0x325890982f15ede4
sw x3, 0(x2) # store 0x325890982f15ede4 in memory
flw f19, 0(x2) # load 0x325890982f15ede4 from memory into f19
fmadd.s f28, f1, f7, f19, dyn # perform operation
fmadd.s f28, f1, f7, f19, rdn # perform operation
fmadd.s f28, f1, f7, f19, rmm # perform operation
fmadd.s f28, f1, f7, f19, rne # perform operation
fmadd.s f28, f1, f7, f19, rtz # perform operation
fmadd.s f28, f1, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x932f1251cb803b66 # load x3 with value 0x932f1251cb803b66
sw x3, 0(x2) # store 0x932f1251cb803b66 in memory
flw f27, 0(x2) # load 0x932f1251cb803b66 from memory into f27
fmadd.s f1, f19, f6, f27, dyn # perform operation
fmadd.s f1, f19, f6, f27, rdn # perform operation
fmadd.s f1, f19, f6, f27, rmm # perform operation
fmadd.s f1, f19, f6, f27, rne # perform operation
fmadd.s f1, f19, f6, f27, rtz # perform operation
fmadd.s f1, f19, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x6925db7750218db5 # load x3 with value 0x6925db7750218db5
sw x3, 0(x2) # store 0x6925db7750218db5 in memory
flw f1, 0(x2) # load 0x6925db7750218db5 from memory into f1
fmadd.s f10, f7, f22, f1, dyn # perform operation
fmadd.s f10, f7, f22, f1, rdn # perform operation
fmadd.s f10, f7, f22, f1, rmm # perform operation
fmadd.s f10, f7, f22, f1, rne # perform operation
fmadd.s f10, f7, f22, f1, rtz # perform operation
fmadd.s f10, f7, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x9d81945c31e191b8 # load x3 with value 0x9d81945c31e191b8
sw x3, 0(x2) # store 0x9d81945c31e191b8 in memory
flw f5, 0(x2) # load 0x9d81945c31e191b8 from memory into f5
fmadd.s f27, f15, f10, f5, dyn # perform operation
fmadd.s f27, f15, f10, f5, rdn # perform operation
fmadd.s f27, f15, f10, f5, rmm # perform operation
fmadd.s f27, f15, f10, f5, rne # perform operation
fmadd.s f27, f15, f10, f5, rtz # perform operation
fmadd.s f27, f15, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f15, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f15, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x1ff1fa6af37e46ec # load x3 with value 0x1ff1fa6af37e46ec
sw x3, 0(x2) # store 0x1ff1fa6af37e46ec in memory
flw f19, 0(x2) # load 0x1ff1fa6af37e46ec from memory into f19
fmadd.s f11, f30, f23, f19, dyn # perform operation
fmadd.s f11, f30, f23, f19, rdn # perform operation
fmadd.s f11, f30, f23, f19, rmm # perform operation
fmadd.s f11, f30, f23, f19, rne # perform operation
fmadd.s f11, f30, f23, f19, rtz # perform operation
fmadd.s f11, f30, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xa7a4592d7b603fc # load x3 with value 0xa7a4592d7b603fc
sw x3, 0(x2) # store 0xa7a4592d7b603fc in memory
flw f17, 0(x2) # load 0xa7a4592d7b603fc from memory into f17
fmadd.s f1, f7, f18, f17, dyn # perform operation
fmadd.s f1, f7, f18, f17, rdn # perform operation
fmadd.s f1, f7, f18, f17, rmm # perform operation
fmadd.s f1, f7, f18, f17, rne # perform operation
fmadd.s f1, f7, f18, f17, rtz # perform operation
fmadd.s f1, f7, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x70a53a62f106cc57 # load x3 with value 0x70a53a62f106cc57
sw x3, 0(x2) # store 0x70a53a62f106cc57 in memory
flw f28, 0(x2) # load 0x70a53a62f106cc57 from memory into f28
fmadd.s f3, f7, f18, f28, dyn # perform operation
fmadd.s f3, f7, f18, f28, rdn # perform operation
fmadd.s f3, f7, f18, f28, rmm # perform operation
fmadd.s f3, f7, f18, f28, rne # perform operation
fmadd.s f3, f7, f18, f28, rtz # perform operation
fmadd.s f3, f7, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x752a86dca75bcc7e # load x3 with value 0x752a86dca75bcc7e
sw x3, 0(x2) # store 0x752a86dca75bcc7e in memory
flw f16, 0(x2) # load 0x752a86dca75bcc7e from memory into f16
fmadd.s f25, f20, f13, f16, dyn # perform operation
fmadd.s f25, f20, f13, f16, rdn # perform operation
fmadd.s f25, f20, f13, f16, rmm # perform operation
fmadd.s f25, f20, f13, f16, rne # perform operation
fmadd.s f25, f20, f13, f16, rtz # perform operation
fmadd.s f25, f20, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x1d2d4ffd8175c6c8 # load x3 with value 0x1d2d4ffd8175c6c8
sw x3, 0(x2) # store 0x1d2d4ffd8175c6c8 in memory
flw f9, 0(x2) # load 0x1d2d4ffd8175c6c8 from memory into f9
fmadd.s f11, f22, f28, f9, dyn # perform operation
fmadd.s f11, f22, f28, f9, rdn # perform operation
fmadd.s f11, f22, f28, f9, rmm # perform operation
fmadd.s f11, f22, f28, f9, rne # perform operation
fmadd.s f11, f22, f28, f9, rtz # perform operation
fmadd.s f11, f22, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f22, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f22, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f22, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f22, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f22, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xa1f5b1d14c5109ba # load x3 with value 0xa1f5b1d14c5109ba
sw x3, 0(x2) # store 0xa1f5b1d14c5109ba in memory
flw f12, 0(x2) # load 0xa1f5b1d14c5109ba from memory into f12
fmadd.s f20, f17, f10, f12, dyn # perform operation
fmadd.s f20, f17, f10, f12, rdn # perform operation
fmadd.s f20, f17, f10, f12, rmm # perform operation
fmadd.s f20, f17, f10, f12, rne # perform operation
fmadd.s f20, f17, f10, f12, rtz # perform operation
fmadd.s f20, f17, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f17, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f17, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xbfeb8fde8941e152 # load x3 with value 0xbfeb8fde8941e152
sw x3, 0(x2) # store 0xbfeb8fde8941e152 in memory
flw f22, 0(x2) # load 0xbfeb8fde8941e152 from memory into f22
fmadd.s f31, f10, f21, f22, dyn # perform operation
fmadd.s f31, f10, f21, f22, rdn # perform operation
fmadd.s f31, f10, f21, f22, rmm # perform operation
fmadd.s f31, f10, f21, f22, rne # perform operation
fmadd.s f31, f10, f21, f22, rtz # perform operation
fmadd.s f31, f10, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f10, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xb9cb1091cd10593c # load x3 with value 0xb9cb1091cd10593c
sw x3, 0(x2) # store 0xb9cb1091cd10593c in memory
flw f28, 0(x2) # load 0xb9cb1091cd10593c from memory into f28
fmadd.s f14, f19, f27, f28, dyn # perform operation
fmadd.s f14, f19, f27, f28, rdn # perform operation
fmadd.s f14, f19, f27, f28, rmm # perform operation
fmadd.s f14, f19, f27, f28, rne # perform operation
fmadd.s f14, f19, f27, f28, rtz # perform operation
fmadd.s f14, f19, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f19, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f19, f27, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x59fb9bc5f712315b # load x3 with value 0x59fb9bc5f712315b
sw x3, 0(x2) # store 0x59fb9bc5f712315b in memory
flw f7, 0(x2) # load 0x59fb9bc5f712315b from memory into f7
fmadd.s f18, f21, f10, f7, dyn # perform operation
fmadd.s f18, f21, f10, f7, rdn # perform operation
fmadd.s f18, f21, f10, f7, rmm # perform operation
fmadd.s f18, f21, f10, f7, rne # perform operation
fmadd.s f18, f21, f10, f7, rtz # perform operation
fmadd.s f18, f21, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xcac24cf2618e6b54 # load x3 with value 0xcac24cf2618e6b54
sw x3, 0(x2) # store 0xcac24cf2618e6b54 in memory
flw f6, 0(x2) # load 0xcac24cf2618e6b54 from memory into f6
fmadd.s f21, f1, f12, f6, dyn # perform operation
fmadd.s f21, f1, f12, f6, rdn # perform operation
fmadd.s f21, f1, f12, f6, rmm # perform operation
fmadd.s f21, f1, f12, f6, rne # perform operation
fmadd.s f21, f1, f12, f6, rtz # perform operation
fmadd.s f21, f1, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xfc41335c9fac5425 # load x3 with value 0xfc41335c9fac5425
sw x3, 0(x2) # store 0xfc41335c9fac5425 in memory
flw f23, 0(x2) # load 0xfc41335c9fac5425 from memory into f23
fmadd.s f10, f19, f12, f23, dyn # perform operation
fmadd.s f10, f19, f12, f23, rdn # perform operation
fmadd.s f10, f19, f12, f23, rmm # perform operation
fmadd.s f10, f19, f12, f23, rne # perform operation
fmadd.s f10, f19, f12, f23, rtz # perform operation
fmadd.s f10, f19, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f19, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x2d6f5242d8ccfa22 # load x3 with value 0x2d6f5242d8ccfa22
sw x3, 0(x2) # store 0x2d6f5242d8ccfa22 in memory
flw f3, 0(x2) # load 0x2d6f5242d8ccfa22 from memory into f3
fmadd.s f23, f25, f20, f3, dyn # perform operation
fmadd.s f23, f25, f20, f3, rdn # perform operation
fmadd.s f23, f25, f20, f3, rmm # perform operation
fmadd.s f23, f25, f20, f3, rne # perform operation
fmadd.s f23, f25, f20, f3, rtz # perform operation
fmadd.s f23, f25, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f25, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f25, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f25, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f25, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f25, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x17ecb02bec5396ba # load x3 with value 0x17ecb02bec5396ba
sw x3, 0(x2) # store 0x17ecb02bec5396ba in memory
flw f18, 0(x2) # load 0x17ecb02bec5396ba from memory into f18
fmadd.s f23, f14, f28, f18, dyn # perform operation
fmadd.s f23, f14, f28, f18, rdn # perform operation
fmadd.s f23, f14, f28, f18, rmm # perform operation
fmadd.s f23, f14, f28, f18, rne # perform operation
fmadd.s f23, f14, f28, f18, rtz # perform operation
fmadd.s f23, f14, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f14, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x3d8376cb1a47df46 # load x3 with value 0x3d8376cb1a47df46
sw x3, 0(x2) # store 0x3d8376cb1a47df46 in memory
flw f7, 0(x2) # load 0x3d8376cb1a47df46 from memory into f7
fmadd.s f10, f31, f21, f7, dyn # perform operation
fmadd.s f10, f31, f21, f7, rdn # perform operation
fmadd.s f10, f31, f21, f7, rmm # perform operation
fmadd.s f10, f31, f21, f7, rne # perform operation
fmadd.s f10, f31, f21, f7, rtz # perform operation
fmadd.s f10, f31, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f31, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f31, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f31, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f31, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f31, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xaea3d38bc0e36dc # load x3 with value 0xaea3d38bc0e36dc
sw x3, 0(x2) # store 0xaea3d38bc0e36dc in memory
flw f28, 0(x2) # load 0xaea3d38bc0e36dc from memory into f28
fmadd.s f14, f5, f11, f28, dyn # perform operation
fmadd.s f14, f5, f11, f28, rdn # perform operation
fmadd.s f14, f5, f11, f28, rmm # perform operation
fmadd.s f14, f5, f11, f28, rne # perform operation
fmadd.s f14, f5, f11, f28, rtz # perform operation
fmadd.s f14, f5, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xd0fecc34aaac1218 # load x3 with value 0xd0fecc34aaac1218
sw x3, 0(x2) # store 0xd0fecc34aaac1218 in memory
flw f5, 0(x2) # load 0xd0fecc34aaac1218 from memory into f5
fmadd.s f11, f23, f8, f5, dyn # perform operation
fmadd.s f11, f23, f8, f5, rdn # perform operation
fmadd.s f11, f23, f8, f5, rmm # perform operation
fmadd.s f11, f23, f8, f5, rne # perform operation
fmadd.s f11, f23, f8, f5, rtz # perform operation
fmadd.s f11, f23, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xf3ce457f3656d362 # load x3 with value 0xf3ce457f3656d362
sw x3, 0(x2) # store 0xf3ce457f3656d362 in memory
flw f9, 0(x2) # load 0xf3ce457f3656d362 from memory into f9
fmadd.s f24, f6, f11, f9, dyn # perform operation
fmadd.s f24, f6, f11, f9, rdn # perform operation
fmadd.s f24, f6, f11, f9, rmm # perform operation
fmadd.s f24, f6, f11, f9, rne # perform operation
fmadd.s f24, f6, f11, f9, rtz # perform operation
fmadd.s f24, f6, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xdb60e5ac4f81aff # load x3 with value 0xdb60e5ac4f81aff
sw x3, 0(x2) # store 0xdb60e5ac4f81aff in memory
flw f21, 0(x2) # load 0xdb60e5ac4f81aff from memory into f21
fmadd.s f22, f1, f3, f21, dyn # perform operation
fmadd.s f22, f1, f3, f21, rdn # perform operation
fmadd.s f22, f1, f3, f21, rmm # perform operation
fmadd.s f22, f1, f3, f21, rne # perform operation
fmadd.s f22, f1, f3, f21, rtz # perform operation
fmadd.s f22, f1, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x4abac810401597ec # load x3 with value 0x4abac810401597ec
sw x3, 0(x2) # store 0x4abac810401597ec in memory
flw f14, 0(x2) # load 0x4abac810401597ec from memory into f14
fmadd.s f26, f17, f9, f14, dyn # perform operation
fmadd.s f26, f17, f9, f14, rdn # perform operation
fmadd.s f26, f17, f9, f14, rmm # perform operation
fmadd.s f26, f17, f9, f14, rne # perform operation
fmadd.s f26, f17, f9, f14, rtz # perform operation
fmadd.s f26, f17, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xc39b87e7f7c50ffb # load x3 with value 0xc39b87e7f7c50ffb
sw x3, 0(x2) # store 0xc39b87e7f7c50ffb in memory
flw f31, 0(x2) # load 0xc39b87e7f7c50ffb from memory into f31
fmadd.s f21, f18, f3, f31, dyn # perform operation
fmadd.s f21, f18, f3, f31, rdn # perform operation
fmadd.s f21, f18, f3, f31, rmm # perform operation
fmadd.s f21, f18, f3, f31, rne # perform operation
fmadd.s f21, f18, f3, f31, rtz # perform operation
fmadd.s f21, f18, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f18, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f18, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f18, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f18, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f18, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xe82ec630389f05a1 # load x3 with value 0xe82ec630389f05a1
sw x3, 0(x2) # store 0xe82ec630389f05a1 in memory
flw f19, 0(x2) # load 0xe82ec630389f05a1 from memory into f19
fmadd.s f29, f25, f23, f19, dyn # perform operation
fmadd.s f29, f25, f23, f19, rdn # perform operation
fmadd.s f29, f25, f23, f19, rmm # perform operation
fmadd.s f29, f25, f23, f19, rne # perform operation
fmadd.s f29, f25, f23, f19, rtz # perform operation
fmadd.s f29, f25, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f25, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f25, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f25, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f25, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f25, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x5a6d9dde2770d383 # load x3 with value 0x5a6d9dde2770d383
sw x3, 0(x2) # store 0x5a6d9dde2770d383 in memory
flw f11, 0(x2) # load 0x5a6d9dde2770d383 from memory into f11
fmadd.s f15, f31, f24, f11, dyn # perform operation
fmadd.s f15, f31, f24, f11, rdn # perform operation
fmadd.s f15, f31, f24, f11, rmm # perform operation
fmadd.s f15, f31, f24, f11, rne # perform operation
fmadd.s f15, f31, f24, f11, rtz # perform operation
fmadd.s f15, f31, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f31, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f31, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x5ad9a62ab1aa520a # load x3 with value 0x5ad9a62ab1aa520a
sw x3, 0(x2) # store 0x5ad9a62ab1aa520a in memory
flw f9, 0(x2) # load 0x5ad9a62ab1aa520a from memory into f9
fmadd.s f30, f11, f1, f9, dyn # perform operation
fmadd.s f30, f11, f1, f9, rdn # perform operation
fmadd.s f30, f11, f1, f9, rmm # perform operation
fmadd.s f30, f11, f1, f9, rne # perform operation
fmadd.s f30, f11, f1, f9, rtz # perform operation
fmadd.s f30, f11, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0xc8e326bd27c597c0 # load x3 with value 0xc8e326bd27c597c0
sw x3, 0(x2) # store 0xc8e326bd27c597c0 in memory
flw f23, 0(x2) # load 0xc8e326bd27c597c0 from memory into f23
fmadd.s f7, f2, f13, f23, dyn # perform operation
fmadd.s f7, f2, f13, f23, rdn # perform operation
fmadd.s f7, f2, f13, f23, rmm # perform operation
fmadd.s f7, f2, f13, f23, rne # perform operation
fmadd.s f7, f2, f13, f23, rtz # perform operation
fmadd.s f7, f2, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0xe8e98e9fb8456902 # load x3 with value 0xe8e98e9fb8456902
sw x3, 0(x2) # store 0xe8e98e9fb8456902 in memory
flw f27, 0(x2) # load 0xe8e98e9fb8456902 from memory into f27
fmadd.s f22, f18, f26, f27, dyn # perform operation
fmadd.s f22, f18, f26, f27, rdn # perform operation
fmadd.s f22, f18, f26, f27, rmm # perform operation
fmadd.s f22, f18, f26, f27, rne # perform operation
fmadd.s f22, f18, f26, f27, rtz # perform operation
fmadd.s f22, f18, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xacf366a9269ee343 # load x3 with value 0xacf366a9269ee343
sw x3, 0(x2) # store 0xacf366a9269ee343 in memory
flw f19, 0(x2) # load 0xacf366a9269ee343 from memory into f19
fmadd.s f17, f18, f2, f19, dyn # perform operation
fmadd.s f17, f18, f2, f19, rdn # perform operation
fmadd.s f17, f18, f2, f19, rmm # perform operation
fmadd.s f17, f18, f2, f19, rne # perform operation
fmadd.s f17, f18, f2, f19, rtz # perform operation
fmadd.s f17, f18, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xb3fa405b878360cc # load x3 with value 0xb3fa405b878360cc
sw x3, 0(x2) # store 0xb3fa405b878360cc in memory
flw f18, 0(x2) # load 0xb3fa405b878360cc from memory into f18
fmadd.s f14, f31, f7, f18, dyn # perform operation
fmadd.s f14, f31, f7, f18, rdn # perform operation
fmadd.s f14, f31, f7, f18, rmm # perform operation
fmadd.s f14, f31, f7, f18, rne # perform operation
fmadd.s f14, f31, f7, f18, rtz # perform operation
fmadd.s f14, f31, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f31, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f31, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x628f8c7ae1b049d1 # load x3 with value 0x628f8c7ae1b049d1
sw x3, 0(x2) # store 0x628f8c7ae1b049d1 in memory
flw f13, 0(x2) # load 0x628f8c7ae1b049d1 from memory into f13
fmadd.s f22, f17, f11, f13, dyn # perform operation
fmadd.s f22, f17, f11, f13, rdn # perform operation
fmadd.s f22, f17, f11, f13, rmm # perform operation
fmadd.s f22, f17, f11, f13, rne # perform operation
fmadd.s f22, f17, f11, f13, rtz # perform operation
fmadd.s f22, f17, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x66835854aef32614 # load x3 with value 0x66835854aef32614
sw x3, 0(x2) # store 0x66835854aef32614 in memory
flw f21, 0(x2) # load 0x66835854aef32614 from memory into f21
fmadd.s f9, f20, f5, f21, dyn # perform operation
fmadd.s f9, f20, f5, f21, rdn # perform operation
fmadd.s f9, f20, f5, f21, rmm # perform operation
fmadd.s f9, f20, f5, f21, rne # perform operation
fmadd.s f9, f20, f5, f21, rtz # perform operation
fmadd.s f9, f20, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0xb96f26307b692c39 # load x3 with value 0xb96f26307b692c39
sw x3, 0(x2) # store 0xb96f26307b692c39 in memory
flw f5, 0(x2) # load 0xb96f26307b692c39 from memory into f5
fmadd.s f17, f27, f12, f5, dyn # perform operation
fmadd.s f17, f27, f12, f5, rdn # perform operation
fmadd.s f17, f27, f12, f5, rmm # perform operation
fmadd.s f17, f27, f12, f5, rne # perform operation
fmadd.s f17, f27, f12, f5, rtz # perform operation
fmadd.s f17, f27, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f27, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xa57744a69e3e5481 # load x3 with value 0xa57744a69e3e5481
sw x3, 0(x2) # store 0xa57744a69e3e5481 in memory
flw f15, 0(x2) # load 0xa57744a69e3e5481 from memory into f15
fmadd.s f26, f27, f17, f15, dyn # perform operation
fmadd.s f26, f27, f17, f15, rdn # perform operation
fmadd.s f26, f27, f17, f15, rmm # perform operation
fmadd.s f26, f27, f17, f15, rne # perform operation
fmadd.s f26, f27, f17, f15, rtz # perform operation
fmadd.s f26, f27, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xa08fcf7bc2ec2fed # load x3 with value 0xa08fcf7bc2ec2fed
sw x3, 0(x2) # store 0xa08fcf7bc2ec2fed in memory
flw f22, 0(x2) # load 0xa08fcf7bc2ec2fed from memory into f22
fmadd.s f8, f26, f11, f22, dyn # perform operation
fmadd.s f8, f26, f11, f22, rdn # perform operation
fmadd.s f8, f26, f11, f22, rmm # perform operation
fmadd.s f8, f26, f11, f22, rne # perform operation
fmadd.s f8, f26, f11, f22, rtz # perform operation
fmadd.s f8, f26, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xe583f3ef9b3373a5 # load x3 with value 0xe583f3ef9b3373a5
sw x3, 0(x2) # store 0xe583f3ef9b3373a5 in memory
flw f1, 0(x2) # load 0xe583f3ef9b3373a5 from memory into f1
fmadd.s f3, f27, f11, f1, dyn # perform operation
fmadd.s f3, f27, f11, f1, rdn # perform operation
fmadd.s f3, f27, f11, f1, rmm # perform operation
fmadd.s f3, f27, f11, f1, rne # perform operation
fmadd.s f3, f27, f11, f1, rtz # perform operation
fmadd.s f3, f27, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f27, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f27, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f27, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f27, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f27, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x57b93ede00f5192e # load x3 with value 0x57b93ede00f5192e
sw x3, 0(x2) # store 0x57b93ede00f5192e in memory
flw f12, 0(x2) # load 0x57b93ede00f5192e from memory into f12
fmadd.s f19, f8, f14, f12, dyn # perform operation
fmadd.s f19, f8, f14, f12, rdn # perform operation
fmadd.s f19, f8, f14, f12, rmm # perform operation
fmadd.s f19, f8, f14, f12, rne # perform operation
fmadd.s f19, f8, f14, f12, rtz # perform operation
fmadd.s f19, f8, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0x4df6613279f04dc7 # load x3 with value 0x4df6613279f04dc7
sw x3, 0(x2) # store 0x4df6613279f04dc7 in memory
flw f29, 0(x2) # load 0x4df6613279f04dc7 from memory into f29
fmadd.s f28, f20, f11, f29, dyn # perform operation
fmadd.s f28, f20, f11, f29, rdn # perform operation
fmadd.s f28, f20, f11, f29, rmm # perform operation
fmadd.s f28, f20, f11, f29, rne # perform operation
fmadd.s f28, f20, f11, f29, rtz # perform operation
fmadd.s f28, f20, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x4dfec54121c0efe # load x3 with value 0x4dfec54121c0efe
sw x3, 0(x2) # store 0x4dfec54121c0efe in memory
flw f21, 0(x2) # load 0x4dfec54121c0efe from memory into f21
fmadd.s f25, f12, f16, f21, dyn # perform operation
fmadd.s f25, f12, f16, f21, rdn # perform operation
fmadd.s f25, f12, f16, f21, rmm # perform operation
fmadd.s f25, f12, f16, f21, rne # perform operation
fmadd.s f25, f12, f16, f21, rtz # perform operation
fmadd.s f25, f12, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f12, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f12, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x4b28bb61c1b4bfdb # load x3 with value 0x4b28bb61c1b4bfdb
sw x3, 0(x2) # store 0x4b28bb61c1b4bfdb in memory
flw f26, 0(x2) # load 0x4b28bb61c1b4bfdb from memory into f26
fmadd.s f1, f21, f3, f26, dyn # perform operation
fmadd.s f1, f21, f3, f26, rdn # perform operation
fmadd.s f1, f21, f3, f26, rmm # perform operation
fmadd.s f1, f21, f3, f26, rne # perform operation
fmadd.s f1, f21, f3, f26, rtz # perform operation
fmadd.s f1, f21, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xdb478538417387b6 # load x3 with value 0xdb478538417387b6
sw x3, 0(x2) # store 0xdb478538417387b6 in memory
flw f3, 0(x2) # load 0xdb478538417387b6 from memory into f3
fmadd.s f1, f15, f19, f3, dyn # perform operation
fmadd.s f1, f15, f19, f3, rdn # perform operation
fmadd.s f1, f15, f19, f3, rmm # perform operation
fmadd.s f1, f15, f19, f3, rne # perform operation
fmadd.s f1, f15, f19, f3, rtz # perform operation
fmadd.s f1, f15, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xe1411128264fed07 # load x3 with value 0xe1411128264fed07
sw x3, 0(x2) # store 0xe1411128264fed07 in memory
flw f26, 0(x2) # load 0xe1411128264fed07 from memory into f26
fmadd.s f9, f12, f29, f26, dyn # perform operation
fmadd.s f9, f12, f29, f26, rdn # perform operation
fmadd.s f9, f12, f29, f26, rmm # perform operation
fmadd.s f9, f12, f29, f26, rne # perform operation
fmadd.s f9, f12, f29, f26, rtz # perform operation
fmadd.s f9, f12, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f12, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f12, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x1ef7732a8a1cfe62 # load x3 with value 0x1ef7732a8a1cfe62
sw x3, 0(x2) # store 0x1ef7732a8a1cfe62 in memory
flw f23, 0(x2) # load 0x1ef7732a8a1cfe62 from memory into f23
fmadd.s f30, f11, f6, f23, dyn # perform operation
fmadd.s f30, f11, f6, f23, rdn # perform operation
fmadd.s f30, f11, f6, f23, rmm # perform operation
fmadd.s f30, f11, f6, f23, rne # perform operation
fmadd.s f30, f11, f6, f23, rtz # perform operation
fmadd.s f30, f11, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x8bba68453501cd47 # load x3 with value 0x8bba68453501cd47
sw x3, 0(x2) # store 0x8bba68453501cd47 in memory
flw f18, 0(x2) # load 0x8bba68453501cd47 from memory into f18
fmadd.s f20, f14, f30, f18, dyn # perform operation
fmadd.s f20, f14, f30, f18, rdn # perform operation
fmadd.s f20, f14, f30, f18, rmm # perform operation
fmadd.s f20, f14, f30, f18, rne # perform operation
fmadd.s f20, f14, f30, f18, rtz # perform operation
fmadd.s f20, f14, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f14, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f14, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x70fdf9977668319c # load x3 with value 0x70fdf9977668319c
sw x3, 0(x2) # store 0x70fdf9977668319c in memory
flw f20, 0(x2) # load 0x70fdf9977668319c from memory into f20
fmadd.s f10, f27, f31, f20, dyn # perform operation
fmadd.s f10, f27, f31, f20, rdn # perform operation
fmadd.s f10, f27, f31, f20, rmm # perform operation
fmadd.s f10, f27, f31, f20, rne # perform operation
fmadd.s f10, f27, f31, f20, rtz # perform operation
fmadd.s f10, f27, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f27, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f27, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x832a01a1526cab1b # load x3 with value 0x832a01a1526cab1b
sw x3, 0(x2) # store 0x832a01a1526cab1b in memory
flw f19, 0(x2) # load 0x832a01a1526cab1b from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmadd.s f13, f22, f19, f17, dyn # perform operation
fmadd.s f13, f22, f19, f17, rdn # perform operation
fmadd.s f13, f22, f19, f17, rmm # perform operation
fmadd.s f13, f22, f19, f17, rne # perform operation
fmadd.s f13, f22, f19, f17, rtz # perform operation
fmadd.s f13, f22, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f22, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f22, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f22, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f22, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f22, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xa864ca5d1a20bbf8 # load x3 with value 0xa864ca5d1a20bbf8
sw x3, 0(x2) # store 0xa864ca5d1a20bbf8 in memory
flw f11, 0(x2) # load 0xa864ca5d1a20bbf8 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmadd.s f26, f22, f11, f28, dyn # perform operation
fmadd.s f26, f22, f11, f28, rdn # perform operation
fmadd.s f26, f22, f11, f28, rmm # perform operation
fmadd.s f26, f22, f11, f28, rne # perform operation
fmadd.s f26, f22, f11, f28, rtz # perform operation
fmadd.s f26, f22, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x740418f488cac93c # load x3 with value 0x740418f488cac93c
sw x3, 0(x2) # store 0x740418f488cac93c in memory
flw f22, 0(x2) # load 0x740418f488cac93c from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f2, f8, f22, f23, dyn # perform operation
fmadd.s f2, f8, f22, f23, rdn # perform operation
fmadd.s f2, f8, f22, f23, rmm # perform operation
fmadd.s f2, f8, f22, f23, rne # perform operation
fmadd.s f2, f8, f22, f23, rtz # perform operation
fmadd.s f2, f8, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x33658b62b58bab9d # load x3 with value 0x33658b62b58bab9d
sw x3, 0(x2) # store 0x33658b62b58bab9d in memory
flw f11, 0(x2) # load 0x33658b62b58bab9d from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmadd.s f20, f27, f11, f23, dyn # perform operation
fmadd.s f20, f27, f11, f23, rdn # perform operation
fmadd.s f20, f27, f11, f23, rmm # perform operation
fmadd.s f20, f27, f11, f23, rne # perform operation
fmadd.s f20, f27, f11, f23, rtz # perform operation
fmadd.s f20, f27, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xbe6283953ace9ac6 # load x3 with value 0xbe6283953ace9ac6
sw x3, 0(x2) # store 0xbe6283953ace9ac6 in memory
flw f10, 0(x2) # load 0xbe6283953ace9ac6 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmadd.s f31, f24, f10, f8, dyn # perform operation
fmadd.s f31, f24, f10, f8, rdn # perform operation
fmadd.s f31, f24, f10, f8, rmm # perform operation
fmadd.s f31, f24, f10, f8, rne # perform operation
fmadd.s f31, f24, f10, f8, rtz # perform operation
fmadd.s f31, f24, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x1f15672e5d2ffb8f # load x3 with value 0x1f15672e5d2ffb8f
sw x3, 0(x2) # store 0x1f15672e5d2ffb8f in memory
flw f20, 0(x2) # load 0x1f15672e5d2ffb8f from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmadd.s f16, f11, f20, f29, dyn # perform operation
fmadd.s f16, f11, f20, f29, rdn # perform operation
fmadd.s f16, f11, f20, f29, rmm # perform operation
fmadd.s f16, f11, f20, f29, rne # perform operation
fmadd.s f16, f11, f20, f29, rtz # perform operation
fmadd.s f16, f11, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x1197cc0391e43d7a # load x3 with value 0x1197cc0391e43d7a
sw x3, 0(x2) # store 0x1197cc0391e43d7a in memory
flw f12, 0(x2) # load 0x1197cc0391e43d7a from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fmadd.s f9, f23, f12, f8, dyn # perform operation
fmadd.s f9, f23, f12, f8, rdn # perform operation
fmadd.s f9, f23, f12, f8, rmm # perform operation
fmadd.s f9, f23, f12, f8, rne # perform operation
fmadd.s f9, f23, f12, f8, rtz # perform operation
fmadd.s f9, f23, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xa7fae334f4d7fcca # load x3 with value 0xa7fae334f4d7fcca
sw x3, 0(x2) # store 0xa7fae334f4d7fcca in memory
flw f11, 0(x2) # load 0xa7fae334f4d7fcca from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmadd.s f10, f29, f11, f25, dyn # perform operation
fmadd.s f10, f29, f11, f25, rdn # perform operation
fmadd.s f10, f29, f11, f25, rmm # perform operation
fmadd.s f10, f29, f11, f25, rne # perform operation
fmadd.s f10, f29, f11, f25, rtz # perform operation
fmadd.s f10, f29, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f29, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f29, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x8ac1895671098d9a # load x3 with value 0x8ac1895671098d9a
sw x3, 0(x2) # store 0x8ac1895671098d9a in memory
flw f10, 0(x2) # load 0x8ac1895671098d9a from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmadd.s f7, f20, f10, f22, dyn # perform operation
fmadd.s f7, f20, f10, f22, rdn # perform operation
fmadd.s f7, f20, f10, f22, rmm # perform operation
fmadd.s f7, f20, f10, f22, rne # perform operation
fmadd.s f7, f20, f10, f22, rtz # perform operation
fmadd.s f7, f20, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f10, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xd6c7ac679c46945 # load x3 with value 0xd6c7ac679c46945
sw x3, 0(x2) # store 0xd6c7ac679c46945 in memory
flw f8, 0(x2) # load 0xd6c7ac679c46945 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f12, f26, f8, f22, dyn # perform operation
fmadd.s f12, f26, f8, f22, rdn # perform operation
fmadd.s f12, f26, f8, f22, rmm # perform operation
fmadd.s f12, f26, f8, f22, rne # perform operation
fmadd.s f12, f26, f8, f22, rtz # perform operation
fmadd.s f12, f26, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x7a73c081e6c5d149 # load x3 with value 0x7a73c081e6c5d149
sw x3, 0(x2) # store 0x7a73c081e6c5d149 in memory
flw f11, 0(x2) # load 0x7a73c081e6c5d149 from memory into f11
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmadd.s f12, f22, f11, f20, dyn # perform operation
fmadd.s f12, f22, f11, f20, rdn # perform operation
fmadd.s f12, f22, f11, f20, rmm # perform operation
fmadd.s f12, f22, f11, f20, rne # perform operation
fmadd.s f12, f22, f11, f20, rtz # perform operation
fmadd.s f12, f22, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xf56a2767c8752791 # load x3 with value 0xf56a2767c8752791
sw x3, 0(x2) # store 0xf56a2767c8752791 in memory
flw f9, 0(x2) # load 0xf56a2767c8752791 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f17, f19, f9, f5, dyn # perform operation
fmadd.s f17, f19, f9, f5, rdn # perform operation
fmadd.s f17, f19, f9, f5, rmm # perform operation
fmadd.s f17, f19, f9, f5, rne # perform operation
fmadd.s f17, f19, f9, f5, rtz # perform operation
fmadd.s f17, f19, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x60642e7d44e67293 # load x3 with value 0x60642e7d44e67293
sw x3, 0(x2) # store 0x60642e7d44e67293 in memory
flw f25, 0(x2) # load 0x60642e7d44e67293 from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmadd.s f27, f1, f25, f5, dyn # perform operation
fmadd.s f27, f1, f25, f5, rdn # perform operation
fmadd.s f27, f1, f25, f5, rmm # perform operation
fmadd.s f27, f1, f25, f5, rne # perform operation
fmadd.s f27, f1, f25, f5, rtz # perform operation
fmadd.s f27, f1, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f25, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x3e2e590735936a74 # load x3 with value 0x3e2e590735936a74
sw x3, 0(x2) # store 0x3e2e590735936a74 in memory
flw f17, 0(x2) # load 0x3e2e590735936a74 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmadd.s f7, f9, f17, f18, dyn # perform operation
fmadd.s f7, f9, f17, f18, rdn # perform operation
fmadd.s f7, f9, f17, f18, rmm # perform operation
fmadd.s f7, f9, f17, f18, rne # perform operation
fmadd.s f7, f9, f17, f18, rtz # perform operation
fmadd.s f7, f9, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f17, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x745319e1db6fd8aa # load x3 with value 0x745319e1db6fd8aa
sw x3, 0(x2) # store 0x745319e1db6fd8aa in memory
flw f17, 0(x2) # load 0x745319e1db6fd8aa from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmadd.s f31, f30, f17, f15, dyn # perform operation
fmadd.s f31, f30, f17, f15, rdn # perform operation
fmadd.s f31, f30, f17, f15, rmm # perform operation
fmadd.s f31, f30, f17, f15, rne # perform operation
fmadd.s f31, f30, f17, f15, rtz # perform operation
fmadd.s f31, f30, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f30, f17, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xe65e86d61aaf3537 # load x3 with value 0xe65e86d61aaf3537
sw x3, 0(x2) # store 0xe65e86d61aaf3537 in memory
flw f20, 0(x2) # load 0xe65e86d61aaf3537 from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmadd.s f9, f10, f20, f3, dyn # perform operation
fmadd.s f9, f10, f20, f3, rdn # perform operation
fmadd.s f9, f10, f20, f3, rmm # perform operation
fmadd.s f9, f10, f20, f3, rne # perform operation
fmadd.s f9, f10, f20, f3, rtz # perform operation
fmadd.s f9, f10, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f10, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f10, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x340f78b8db45b606 # load x3 with value 0x340f78b8db45b606
sw x3, 0(x2) # store 0x340f78b8db45b606 in memory
flw f28, 0(x2) # load 0x340f78b8db45b606 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmadd.s f24, f29, f28, f21, dyn # perform operation
fmadd.s f24, f29, f28, f21, rdn # perform operation
fmadd.s f24, f29, f28, f21, rmm # perform operation
fmadd.s f24, f29, f28, f21, rne # perform operation
fmadd.s f24, f29, f28, f21, rtz # perform operation
fmadd.s f24, f29, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f29, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f29, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xa99db8f885e90524 # load x3 with value 0xa99db8f885e90524
sw x3, 0(x2) # store 0xa99db8f885e90524 in memory
flw f28, 0(x2) # load 0xa99db8f885e90524 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fmadd.s f31, f10, f28, f18, dyn # perform operation
fmadd.s f31, f10, f28, f18, rdn # perform operation
fmadd.s f31, f10, f28, f18, rmm # perform operation
fmadd.s f31, f10, f28, f18, rne # perform operation
fmadd.s f31, f10, f28, f18, rtz # perform operation
fmadd.s f31, f10, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f10, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f10, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f10, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f10, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f10, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x2f0575ad02800c37 # load x3 with value 0x2f0575ad02800c37
sw x3, 0(x2) # store 0x2f0575ad02800c37 in memory
flw f13, 0(x2) # load 0x2f0575ad02800c37 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmadd.s f27, f20, f13, f29, dyn # perform operation
fmadd.s f27, f20, f13, f29, rdn # perform operation
fmadd.s f27, f20, f13, f29, rmm # perform operation
fmadd.s f27, f20, f13, f29, rne # perform operation
fmadd.s f27, f20, f13, f29, rtz # perform operation
fmadd.s f27, f20, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xf7c74d1e3c3413ee # load x3 with value 0xf7c74d1e3c3413ee
sw x3, 0(x2) # store 0xf7c74d1e3c3413ee in memory
flw f8, 0(x2) # load 0xf7c74d1e3c3413ee from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmadd.s f28, f23, f8, f19, dyn # perform operation
fmadd.s f28, f23, f8, f19, rdn # perform operation
fmadd.s f28, f23, f8, f19, rmm # perform operation
fmadd.s f28, f23, f8, f19, rne # perform operation
fmadd.s f28, f23, f8, f19, rtz # perform operation
fmadd.s f28, f23, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xbdb562d52ae3e595 # load x3 with value 0xbdb562d52ae3e595
sw x3, 0(x2) # store 0xbdb562d52ae3e595 in memory
flw f6, 0(x2) # load 0xbdb562d52ae3e595 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmadd.s f3, f7, f6, f18, dyn # perform operation
fmadd.s f3, f7, f6, f18, rdn # perform operation
fmadd.s f3, f7, f6, f18, rmm # perform operation
fmadd.s f3, f7, f6, f18, rne # perform operation
fmadd.s f3, f7, f6, f18, rtz # perform operation
fmadd.s f3, f7, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x315054aeeb78a94 # load x3 with value 0x315054aeeb78a94
sw x3, 0(x2) # store 0x315054aeeb78a94 in memory
flw f5, 0(x2) # load 0x315054aeeb78a94 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f20, f6, f5, f7, dyn # perform operation
fmadd.s f20, f6, f5, f7, rdn # perform operation
fmadd.s f20, f6, f5, f7, rmm # perform operation
fmadd.s f20, f6, f5, f7, rne # perform operation
fmadd.s f20, f6, f5, f7, rtz # perform operation
fmadd.s f20, f6, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f6, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f6, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f6, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f6, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f6, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x8675d03416aafb06 # load x3 with value 0x8675d03416aafb06
sw x3, 0(x2) # store 0x8675d03416aafb06 in memory
flw f23, 0(x2) # load 0x8675d03416aafb06 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fmadd.s f2, f31, f23, f16, dyn # perform operation
fmadd.s f2, f31, f23, f16, rdn # perform operation
fmadd.s f2, f31, f23, f16, rmm # perform operation
fmadd.s f2, f31, f23, f16, rne # perform operation
fmadd.s f2, f31, f23, f16, rtz # perform operation
fmadd.s f2, f31, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x864c921e69485dbe # load x3 with value 0x864c921e69485dbe
sw x3, 0(x2) # store 0x864c921e69485dbe in memory
flw f6, 0(x2) # load 0x864c921e69485dbe from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmadd.s f10, f28, f6, f17, dyn # perform operation
fmadd.s f10, f28, f6, f17, rdn # perform operation
fmadd.s f10, f28, f6, f17, rmm # perform operation
fmadd.s f10, f28, f6, f17, rne # perform operation
fmadd.s f10, f28, f6, f17, rtz # perform operation
fmadd.s f10, f28, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0xe8fa295609cfefcf # load x3 with value 0xe8fa295609cfefcf
sw x3, 0(x2) # store 0xe8fa295609cfefcf in memory
flw f6, 0(x2) # load 0xe8fa295609cfefcf from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fmadd.s f20, f23, f6, f31, dyn # perform operation
fmadd.s f20, f23, f6, f31, rdn # perform operation
fmadd.s f20, f23, f6, f31, rmm # perform operation
fmadd.s f20, f23, f6, f31, rne # perform operation
fmadd.s f20, f23, f6, f31, rtz # perform operation
fmadd.s f20, f23, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x1766f6ee1380361a # load x3 with value 0x1766f6ee1380361a
sw x3, 0(x2) # store 0x1766f6ee1380361a in memory
flw f2, 0(x2) # load 0x1766f6ee1380361a from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fmadd.s f30, f16, f2, f1, dyn # perform operation
fmadd.s f30, f16, f2, f1, rdn # perform operation
fmadd.s f30, f16, f2, f1, rmm # perform operation
fmadd.s f30, f16, f2, f1, rne # perform operation
fmadd.s f30, f16, f2, f1, rtz # perform operation
fmadd.s f30, f16, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f16, f2, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0xceb4922baaaa89fe # load x3 with value 0xceb4922baaaa89fe
sw x3, 0(x2) # store 0xceb4922baaaa89fe in memory
flw f22, 0(x2) # load 0xceb4922baaaa89fe from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f8, f11, f22, f6, dyn # perform operation
fmadd.s f8, f11, f22, f6, rdn # perform operation
fmadd.s f8, f11, f22, f6, rmm # perform operation
fmadd.s f8, f11, f22, f6, rne # perform operation
fmadd.s f8, f11, f22, f6, rtz # perform operation
fmadd.s f8, f11, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f22, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x75b462a22f9bec41 # load x3 with value 0x75b462a22f9bec41
sw x3, 0(x2) # store 0x75b462a22f9bec41 in memory
flw f16, 0(x2) # load 0x75b462a22f9bec41 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmadd.s f12, f26, f16, f22, dyn # perform operation
fmadd.s f12, f26, f16, f22, rdn # perform operation
fmadd.s f12, f26, f16, f22, rmm # perform operation
fmadd.s f12, f26, f16, f22, rne # perform operation
fmadd.s f12, f26, f16, f22, rtz # perform operation
fmadd.s f12, f26, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x5a6573a8ee8d4964 # load x3 with value 0x5a6573a8ee8d4964
sw x3, 0(x2) # store 0x5a6573a8ee8d4964 in memory
flw f12, 0(x2) # load 0x5a6573a8ee8d4964 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmadd.s f3, f26, f12, f2, dyn # perform operation
fmadd.s f3, f26, f12, f2, rdn # perform operation
fmadd.s f3, f26, f12, f2, rmm # perform operation
fmadd.s f3, f26, f12, f2, rne # perform operation
fmadd.s f3, f26, f12, f2, rtz # perform operation
fmadd.s f3, f26, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f26, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f26, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f26, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f26, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f26, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0xaecda4eba4203dd6 # load x3 with value 0xaecda4eba4203dd6
sw x3, 0(x2) # store 0xaecda4eba4203dd6 in memory
flw f29, 0(x2) # load 0xaecda4eba4203dd6 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmadd.s f23, f1, f29, f30, dyn # perform operation
fmadd.s f23, f1, f29, f30, rdn # perform operation
fmadd.s f23, f1, f29, f30, rmm # perform operation
fmadd.s f23, f1, f29, f30, rne # perform operation
fmadd.s f23, f1, f29, f30, rtz # perform operation
fmadd.s f23, f1, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x12ac7de796413d5a # load x3 with value 0x12ac7de796413d5a
sw x3, 0(x2) # store 0x12ac7de796413d5a in memory
flw f15, 0(x2) # load 0x12ac7de796413d5a from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f17, f11, f15, f23, dyn # perform operation
fmadd.s f17, f11, f15, f23, rdn # perform operation
fmadd.s f17, f11, f15, f23, rmm # perform operation
fmadd.s f17, f11, f15, f23, rne # perform operation
fmadd.s f17, f11, f15, f23, rtz # perform operation
fmadd.s f17, f11, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f11, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f11, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f11, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f11, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f11, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xae1836a47d4abfc9 # load x3 with value 0xae1836a47d4abfc9
sw x3, 0(x2) # store 0xae1836a47d4abfc9 in memory
flw f19, 0(x2) # load 0xae1836a47d4abfc9 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmadd.s f22, f3, f19, f9, dyn # perform operation
fmadd.s f22, f3, f19, f9, rdn # perform operation
fmadd.s f22, f3, f19, f9, rmm # perform operation
fmadd.s f22, f3, f19, f9, rne # perform operation
fmadd.s f22, f3, f19, f9, rtz # perform operation
fmadd.s f22, f3, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f3, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x7324ca8dc8b50bf5 # load x3 with value 0x7324ca8dc8b50bf5
sw x3, 0(x2) # store 0x7324ca8dc8b50bf5 in memory
flw f20, 0(x2) # load 0x7324ca8dc8b50bf5 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmadd.s f24, f19, f20, f2, dyn # perform operation
fmadd.s f24, f19, f20, f2, rdn # perform operation
fmadd.s f24, f19, f20, f2, rmm # perform operation
fmadd.s f24, f19, f20, f2, rne # perform operation
fmadd.s f24, f19, f20, f2, rtz # perform operation
fmadd.s f24, f19, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xc5c42e31abfe08be # load x3 with value 0xc5c42e31abfe08be
sw x3, 0(x2) # store 0xc5c42e31abfe08be in memory
flw f12, 0(x2) # load 0xc5c42e31abfe08be from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmadd.s f5, f6, f12, f19, dyn # perform operation
fmadd.s f5, f6, f12, f19, rdn # perform operation
fmadd.s f5, f6, f12, f19, rmm # perform operation
fmadd.s f5, f6, f12, f19, rne # perform operation
fmadd.s f5, f6, f12, f19, rtz # perform operation
fmadd.s f5, f6, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f6, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f6, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f6, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f6, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f6, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x8444a59cca53d28e # load x3 with value 0x8444a59cca53d28e
sw x3, 0(x2) # store 0x8444a59cca53d28e in memory
flw f11, 0(x2) # load 0x8444a59cca53d28e from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmadd.s f12, f28, f11, f17, dyn # perform operation
fmadd.s f12, f28, f11, f17, rdn # perform operation
fmadd.s f12, f28, f11, f17, rmm # perform operation
fmadd.s f12, f28, f11, f17, rne # perform operation
fmadd.s f12, f28, f11, f17, rtz # perform operation
fmadd.s f12, f28, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f28, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f28, f11, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0xaa274037ccd7bee3 # load x3 with value 0xaa274037ccd7bee3
sw x3, 0(x2) # store 0xaa274037ccd7bee3 in memory
flw f9, 0(x2) # load 0xaa274037ccd7bee3 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmadd.s f30, f19, f9, f15, dyn # perform operation
fmadd.s f30, f19, f9, f15, rdn # perform operation
fmadd.s f30, f19, f9, f15, rmm # perform operation
fmadd.s f30, f19, f9, f15, rne # perform operation
fmadd.s f30, f19, f9, f15, rtz # perform operation
fmadd.s f30, f19, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f9, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x1197c43f2dfccb21 # load x3 with value 0x1197c43f2dfccb21
sw x3, 0(x2) # store 0x1197c43f2dfccb21 in memory
flw f26, 0(x2) # load 0x1197c43f2dfccb21 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmadd.s f24, f22, f26, f19, dyn # perform operation
fmadd.s f24, f22, f26, f19, rdn # perform operation
fmadd.s f24, f22, f26, f19, rmm # perform operation
fmadd.s f24, f22, f26, f19, rne # perform operation
fmadd.s f24, f22, f26, f19, rtz # perform operation
fmadd.s f24, f22, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0xc4672b78ccfff81d # load x3 with value 0xc4672b78ccfff81d
sw x3, 0(x2) # store 0xc4672b78ccfff81d in memory
flw f16, 0(x2) # load 0xc4672b78ccfff81d from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f7, f20, f16, f11, dyn # perform operation
fmadd.s f7, f20, f16, f11, rdn # perform operation
fmadd.s f7, f20, f16, f11, rmm # perform operation
fmadd.s f7, f20, f16, f11, rne # perform operation
fmadd.s f7, f20, f16, f11, rtz # perform operation
fmadd.s f7, f20, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x9ee2a4db504efc9a # load x3 with value 0x9ee2a4db504efc9a
sw x3, 0(x2) # store 0x9ee2a4db504efc9a in memory
flw f26, 0(x2) # load 0x9ee2a4db504efc9a from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmadd.s f30, f27, f26, f6, dyn # perform operation
fmadd.s f30, f27, f26, f6, rdn # perform operation
fmadd.s f30, f27, f26, f6, rmm # perform operation
fmadd.s f30, f27, f26, f6, rne # perform operation
fmadd.s f30, f27, f26, f6, rtz # perform operation
fmadd.s f30, f27, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x150aa02b6ea07309 # load x3 with value 0x150aa02b6ea07309
sw x3, 0(x2) # store 0x150aa02b6ea07309 in memory
flw f15, 0(x2) # load 0x150aa02b6ea07309 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fmadd.s f10, f11, f15, f13, dyn # perform operation
fmadd.s f10, f11, f15, f13, rdn # perform operation
fmadd.s f10, f11, f15, f13, rmm # perform operation
fmadd.s f10, f11, f15, f13, rne # perform operation
fmadd.s f10, f11, f15, f13, rtz # perform operation
fmadd.s f10, f11, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f11, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f11, f15, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x89b6c7bf8fb65444 # load x3 with value 0x89b6c7bf8fb65444
sw x3, 0(x2) # store 0x89b6c7bf8fb65444 in memory
flw f26, 0(x2) # load 0x89b6c7bf8fb65444 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmadd.s f24, f18, f26, f2, dyn # perform operation
fmadd.s f24, f18, f26, f2, rdn # perform operation
fmadd.s f24, f18, f26, f2, rmm # perform operation
fmadd.s f24, f18, f26, f2, rne # perform operation
fmadd.s f24, f18, f26, f2, rtz # perform operation
fmadd.s f24, f18, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f18, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f18, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x2dc2a4918d4bb9d2 # load x3 with value 0x2dc2a4918d4bb9d2
sw x3, 0(x2) # store 0x2dc2a4918d4bb9d2 in memory
flw f16, 0(x2) # load 0x2dc2a4918d4bb9d2 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmadd.s f23, f11, f16, f1, dyn # perform operation
fmadd.s f23, f11, f16, f1, rdn # perform operation
fmadd.s f23, f11, f16, f1, rmm # perform operation
fmadd.s f23, f11, f16, f1, rne # perform operation
fmadd.s f23, f11, f16, f1, rtz # perform operation
fmadd.s f23, f11, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x9951e2f47236eb36 # load x3 with value 0x9951e2f47236eb36
sw x3, 0(x2) # store 0x9951e2f47236eb36 in memory
flw f14, 0(x2) # load 0x9951e2f47236eb36 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmadd.s f9, f20, f14, f16, dyn # perform operation
fmadd.s f9, f20, f14, f16, rdn # perform operation
fmadd.s f9, f20, f14, f16, rmm # perform operation
fmadd.s f9, f20, f14, f16, rne # perform operation
fmadd.s f9, f20, f14, f16, rtz # perform operation
fmadd.s f9, f20, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x611359bb9e999a52 # load x3 with value 0x611359bb9e999a52
sw x3, 0(x2) # store 0x611359bb9e999a52 in memory
flw f27, 0(x2) # load 0x611359bb9e999a52 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmadd.s f7, f25, f27, f5, dyn # perform operation
fmadd.s f7, f25, f27, f5, rdn # perform operation
fmadd.s f7, f25, f27, f5, rmm # perform operation
fmadd.s f7, f25, f27, f5, rne # perform operation
fmadd.s f7, f25, f27, f5, rtz # perform operation
fmadd.s f7, f25, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xf6c731eed4ee7374 # load x3 with value 0xf6c731eed4ee7374
sw x3, 0(x2) # store 0xf6c731eed4ee7374 in memory
flw f12, 0(x2) # load 0xf6c731eed4ee7374 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmadd.s f22, f2, f12, f13, dyn # perform operation
fmadd.s f22, f2, f12, f13, rdn # perform operation
fmadd.s f22, f2, f12, f13, rmm # perform operation
fmadd.s f22, f2, f12, f13, rne # perform operation
fmadd.s f22, f2, f12, f13, rtz # perform operation
fmadd.s f22, f2, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x34ae119075a39bcc # load x3 with value 0x34ae119075a39bcc
sw x3, 0(x2) # store 0x34ae119075a39bcc in memory
flw f20, 0(x2) # load 0x34ae119075a39bcc from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmadd.s f19, f6, f20, f11, dyn # perform operation
fmadd.s f19, f6, f20, f11, rdn # perform operation
fmadd.s f19, f6, f20, f11, rmm # perform operation
fmadd.s f19, f6, f20, f11, rne # perform operation
fmadd.s f19, f6, f20, f11, rtz # perform operation
fmadd.s f19, f6, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f6, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f6, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x9c370d9a3bff20bd # load x3 with value 0x9c370d9a3bff20bd
sw x3, 0(x2) # store 0x9c370d9a3bff20bd in memory
flw f9, 0(x2) # load 0x9c370d9a3bff20bd from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmadd.s f3, f16, f9, f13, dyn # perform operation
fmadd.s f3, f16, f9, f13, rdn # perform operation
fmadd.s f3, f16, f9, f13, rmm # perform operation
fmadd.s f3, f16, f9, f13, rne # perform operation
fmadd.s f3, f16, f9, f13, rtz # perform operation
fmadd.s f3, f16, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x227b6285995a806c # load x3 with value 0x227b6285995a806c
sw x3, 0(x2) # store 0x227b6285995a806c in memory
flw f8, 0(x2) # load 0x227b6285995a806c from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmadd.s f24, f1, f8, f10, dyn # perform operation
fmadd.s f24, f1, f8, f10, rdn # perform operation
fmadd.s f24, f1, f8, f10, rmm # perform operation
fmadd.s f24, f1, f8, f10, rne # perform operation
fmadd.s f24, f1, f8, f10, rtz # perform operation
fmadd.s f24, f1, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x95494cfd1fc844e0 # load x3 with value 0x95494cfd1fc844e0
sw x3, 0(x2) # store 0x95494cfd1fc844e0 in memory
flw f27, 0(x2) # load 0x95494cfd1fc844e0 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmadd.s f24, f3, f27, f9, dyn # perform operation
fmadd.s f24, f3, f27, f9, rdn # perform operation
fmadd.s f24, f3, f27, f9, rmm # perform operation
fmadd.s f24, f3, f27, f9, rne # perform operation
fmadd.s f24, f3, f27, f9, rtz # perform operation
fmadd.s f24, f3, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f3, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f3, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x57c7026e86a58b8f # load x3 with value 0x57c7026e86a58b8f
sw x3, 0(x2) # store 0x57c7026e86a58b8f in memory
flw f5, 0(x2) # load 0x57c7026e86a58b8f from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmadd.s f18, f12, f5, f9, dyn # perform operation
fmadd.s f18, f12, f5, f9, rdn # perform operation
fmadd.s f18, f12, f5, f9, rmm # perform operation
fmadd.s f18, f12, f5, f9, rne # perform operation
fmadd.s f18, f12, f5, f9, rtz # perform operation
fmadd.s f18, f12, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0xf3f6fbfe6dec54f2 # load x3 with value 0xf3f6fbfe6dec54f2
sw x3, 0(x2) # store 0xf3f6fbfe6dec54f2 in memory
flw f12, 0(x2) # load 0xf3f6fbfe6dec54f2 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fmadd.s f22, f25, f12, f2, dyn # perform operation
fmadd.s f22, f25, f12, f2, rdn # perform operation
fmadd.s f22, f25, f12, f2, rmm # perform operation
fmadd.s f22, f25, f12, f2, rne # perform operation
fmadd.s f22, f25, f12, f2, rtz # perform operation
fmadd.s f22, f25, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f25, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f25, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0x915153f1bbab186 # load x3 with value 0x915153f1bbab186
sw x3, 0(x2) # store 0x915153f1bbab186 in memory
flw f10, 0(x2) # load 0x915153f1bbab186 from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmadd.s f13, f2, f10, f20, dyn # perform operation
fmadd.s f13, f2, f10, f20, rdn # perform operation
fmadd.s f13, f2, f10, f20, rmm # perform operation
fmadd.s f13, f2, f10, f20, rne # perform operation
fmadd.s f13, f2, f10, f20, rtz # perform operation
fmadd.s f13, f2, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x2befdb7579f48e31 # load x3 with value 0x2befdb7579f48e31
sw x3, 0(x2) # store 0x2befdb7579f48e31 in memory
flw f23, 0(x2) # load 0x2befdb7579f48e31 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fmadd.s f15, f22, f23, f26, dyn # perform operation
fmadd.s f15, f22, f23, f26, rdn # perform operation
fmadd.s f15, f22, f23, f26, rmm # perform operation
fmadd.s f15, f22, f23, f26, rne # perform operation
fmadd.s f15, f22, f23, f26, rtz # perform operation
fmadd.s f15, f22, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xa011e126ca1e7bc0 # load x3 with value 0xa011e126ca1e7bc0
sw x3, 0(x2) # store 0xa011e126ca1e7bc0 in memory
flw f26, 0(x2) # load 0xa011e126ca1e7bc0 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fmadd.s f24, f8, f26, f27, dyn # perform operation
fmadd.s f24, f8, f26, f27, rdn # perform operation
fmadd.s f24, f8, f26, f27, rmm # perform operation
fmadd.s f24, f8, f26, f27, rne # perform operation
fmadd.s f24, f8, f26, f27, rtz # perform operation
fmadd.s f24, f8, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x2e67f850addd5ff4 # load x3 with value 0x2e67f850addd5ff4
sw x3, 0(x2) # store 0x2e67f850addd5ff4 in memory
flw f22, 0(x2) # load 0x2e67f850addd5ff4 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f7, f15, f22, f31, dyn # perform operation
fmadd.s f7, f15, f22, f31, rdn # perform operation
fmadd.s f7, f15, f22, f31, rmm # perform operation
fmadd.s f7, f15, f22, f31, rne # perform operation
fmadd.s f7, f15, f22, f31, rtz # perform operation
fmadd.s f7, f15, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xd89c7cc88f5777a9 # load x3 with value 0xd89c7cc88f5777a9
sw x3, 0(x2) # store 0xd89c7cc88f5777a9 in memory
flw f28, 0(x2) # load 0xd89c7cc88f5777a9 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f13, f21, f28, f15, dyn # perform operation
fmadd.s f13, f21, f28, f15, rdn # perform operation
fmadd.s f13, f21, f28, f15, rmm # perform operation
fmadd.s f13, f21, f28, f15, rne # perform operation
fmadd.s f13, f21, f28, f15, rtz # perform operation
fmadd.s f13, f21, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0xb5696b7ed97624f # load x3 with value 0xb5696b7ed97624f
sw x3, 0(x2) # store 0xb5696b7ed97624f in memory
flw f1, 0(x2) # load 0xb5696b7ed97624f from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmadd.s f18, f10, f1, f20, dyn # perform operation
fmadd.s f18, f10, f1, f20, rdn # perform operation
fmadd.s f18, f10, f1, f20, rmm # perform operation
fmadd.s f18, f10, f1, f20, rne # perform operation
fmadd.s f18, f10, f1, f20, rtz # perform operation
fmadd.s f18, f10, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f10, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f10, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x9cb73eea5610d674 # load x3 with value 0x9cb73eea5610d674
sw x3, 0(x2) # store 0x9cb73eea5610d674 in memory
flw f8, 0(x2) # load 0x9cb73eea5610d674 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f3, f1, f8, f7, dyn # perform operation
fmadd.s f3, f1, f8, f7, rdn # perform operation
fmadd.s f3, f1, f8, f7, rmm # perform operation
fmadd.s f3, f1, f8, f7, rne # perform operation
fmadd.s f3, f1, f8, f7, rtz # perform operation
fmadd.s f3, f1, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x8ac7478ebc822760 # load x3 with value 0x8ac7478ebc822760
sw x3, 0(x2) # store 0x8ac7478ebc822760 in memory
flw f18, 0(x2) # load 0x8ac7478ebc822760 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f12, f6, f18, f5, dyn # perform operation
fmadd.s f12, f6, f18, f5, rdn # perform operation
fmadd.s f12, f6, f18, f5, rmm # perform operation
fmadd.s f12, f6, f18, f5, rne # perform operation
fmadd.s f12, f6, f18, f5, rtz # perform operation
fmadd.s f12, f6, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f6, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f6, f18, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x872b19f9d5a9adbd # load x3 with value 0x872b19f9d5a9adbd
sw x3, 0(x2) # store 0x872b19f9d5a9adbd in memory
flw f20, 0(x2) # load 0x872b19f9d5a9adbd from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f14, f3, f20, f27, dyn # perform operation
fmadd.s f14, f3, f20, f27, rdn # perform operation
fmadd.s f14, f3, f20, f27, rmm # perform operation
fmadd.s f14, f3, f20, f27, rne # perform operation
fmadd.s f14, f3, f20, f27, rtz # perform operation
fmadd.s f14, f3, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f20, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x94a673647e4eab34 # load x3 with value 0x94a673647e4eab34
sw x3, 0(x2) # store 0x94a673647e4eab34 in memory
flw f7, 0(x2) # load 0x94a673647e4eab34 from memory into f7
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmadd.s f24, f9, f7, f20, dyn # perform operation
fmadd.s f24, f9, f7, f20, rdn # perform operation
fmadd.s f24, f9, f7, f20, rmm # perform operation
fmadd.s f24, f9, f7, f20, rne # perform operation
fmadd.s f24, f9, f7, f20, rtz # perform operation
fmadd.s f24, f9, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x4e6957d38819e45b # load x3 with value 0x4e6957d38819e45b
sw x3, 0(x2) # store 0x4e6957d38819e45b in memory
flw f20, 0(x2) # load 0x4e6957d38819e45b from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmadd.s f10, f12, f20, f28, dyn # perform operation
fmadd.s f10, f12, f20, f28, rdn # perform operation
fmadd.s f10, f12, f20, f28, rmm # perform operation
fmadd.s f10, f12, f20, f28, rne # perform operation
fmadd.s f10, f12, f20, f28, rtz # perform operation
fmadd.s f10, f12, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x14cf88c713787340 # load x3 with value 0x14cf88c713787340
sw x3, 0(x2) # store 0x14cf88c713787340 in memory
flw f29, 0(x2) # load 0x14cf88c713787340 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmadd.s f12, f11, f29, f21, dyn # perform operation
fmadd.s f12, f11, f29, f21, rdn # perform operation
fmadd.s f12, f11, f29, f21, rmm # perform operation
fmadd.s f12, f11, f29, f21, rne # perform operation
fmadd.s f12, f11, f29, f21, rtz # perform operation
fmadd.s f12, f11, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f11, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f11, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x26c0a41039447920 # load x3 with value 0x26c0a41039447920
sw x3, 0(x2) # store 0x26c0a41039447920 in memory
flw f22, 0(x2) # load 0x26c0a41039447920 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmadd.s f3, f1, f22, f18, dyn # perform operation
fmadd.s f3, f1, f22, f18, rdn # perform operation
fmadd.s f3, f1, f22, f18, rmm # perform operation
fmadd.s f3, f1, f22, f18, rne # perform operation
fmadd.s f3, f1, f22, f18, rtz # perform operation
fmadd.s f3, f1, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x6fb8ee1b62055e3d # load x3 with value 0x6fb8ee1b62055e3d
sw x3, 0(x2) # store 0x6fb8ee1b62055e3d in memory
flw f1, 0(x2) # load 0x6fb8ee1b62055e3d from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f31, f2, f1, f3, dyn # perform operation
fmadd.s f31, f2, f1, f3, rdn # perform operation
fmadd.s f31, f2, f1, f3, rmm # perform operation
fmadd.s f31, f2, f1, f3, rne # perform operation
fmadd.s f31, f2, f1, f3, rtz # perform operation
fmadd.s f31, f2, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x261c46519e86bdb3 # load x3 with value 0x261c46519e86bdb3
sw x3, 0(x2) # store 0x261c46519e86bdb3 in memory
flw f29, 0(x2) # load 0x261c46519e86bdb3 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fmadd.s f7, f25, f29, f6, dyn # perform operation
fmadd.s f7, f25, f29, f6, rdn # perform operation
fmadd.s f7, f25, f29, f6, rmm # perform operation
fmadd.s f7, f25, f29, f6, rne # perform operation
fmadd.s f7, f25, f29, f6, rtz # perform operation
fmadd.s f7, f25, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f29, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xbf1269c77b5130f9 # load x3 with value 0xbf1269c77b5130f9
sw x3, 0(x2) # store 0xbf1269c77b5130f9 in memory
flw f27, 0(x2) # load 0xbf1269c77b5130f9 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fmadd.s f21, f6, f27, f18, dyn # perform operation
fmadd.s f21, f6, f27, f18, rdn # perform operation
fmadd.s f21, f6, f27, f18, rmm # perform operation
fmadd.s f21, f6, f27, f18, rne # perform operation
fmadd.s f21, f6, f27, f18, rtz # perform operation
fmadd.s f21, f6, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f6, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x757b20aced958bed # load x3 with value 0x757b20aced958bed
sw x3, 0(x2) # store 0x757b20aced958bed in memory
flw f24, 0(x2) # load 0x757b20aced958bed from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f7, f30, f24, f5, dyn # perform operation
fmadd.s f7, f30, f24, f5, rdn # perform operation
fmadd.s f7, f30, f24, f5, rmm # perform operation
fmadd.s f7, f30, f24, f5, rne # perform operation
fmadd.s f7, f30, f24, f5, rtz # perform operation
fmadd.s f7, f30, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f30, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f30, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x35cf4052c51ce31a # load x3 with value 0x35cf4052c51ce31a
sw x3, 0(x2) # store 0x35cf4052c51ce31a in memory
flw f19, 0(x2) # load 0x35cf4052c51ce31a from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmadd.s f28, f13, f19, f27, dyn # perform operation
fmadd.s f28, f13, f19, f27, rdn # perform operation
fmadd.s f28, f13, f19, f27, rmm # perform operation
fmadd.s f28, f13, f19, f27, rne # perform operation
fmadd.s f28, f13, f19, f27, rtz # perform operation
fmadd.s f28, f13, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x80452ffd0c58f422 # load x3 with value 0x80452ffd0c58f422
sw x3, 0(x2) # store 0x80452ffd0c58f422 in memory
flw f11, 0(x2) # load 0x80452ffd0c58f422 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmadd.s f13, f9, f11, f10, dyn # perform operation
fmadd.s f13, f9, f11, f10, rdn # perform operation
fmadd.s f13, f9, f11, f10, rmm # perform operation
fmadd.s f13, f9, f11, f10, rne # perform operation
fmadd.s f13, f9, f11, f10, rtz # perform operation
fmadd.s f13, f9, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x9131741d8c30ae78 # load x3 with value 0x9131741d8c30ae78
sw x3, 0(x2) # store 0x9131741d8c30ae78 in memory
flw f9, 0(x2) # load 0x9131741d8c30ae78 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f27, f14, f9, f5, dyn # perform operation
fmadd.s f27, f14, f9, f5, rdn # perform operation
fmadd.s f27, f14, f9, f5, rmm # perform operation
fmadd.s f27, f14, f9, f5, rne # perform operation
fmadd.s f27, f14, f9, f5, rtz # perform operation
fmadd.s f27, f14, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f9, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x525ef43bd5b27017 # load x3 with value 0x525ef43bd5b27017
sw x3, 0(x2) # store 0x525ef43bd5b27017 in memory
flw f24, 0(x2) # load 0x525ef43bd5b27017 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmadd.s f20, f27, f24, f3, dyn # perform operation
fmadd.s f20, f27, f24, f3, rdn # perform operation
fmadd.s f20, f27, f24, f3, rmm # perform operation
fmadd.s f20, f27, f24, f3, rne # perform operation
fmadd.s f20, f27, f24, f3, rtz # perform operation
fmadd.s f20, f27, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x8be0a870d71bfbb8 # load x3 with value 0x8be0a870d71bfbb8
sw x3, 0(x2) # store 0x8be0a870d71bfbb8 in memory
flw f12, 0(x2) # load 0x8be0a870d71bfbb8 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmadd.s f13, f18, f12, f8, dyn # perform operation
fmadd.s f13, f18, f12, f8, rdn # perform operation
fmadd.s f13, f18, f12, f8, rmm # perform operation
fmadd.s f13, f18, f12, f8, rne # perform operation
fmadd.s f13, f18, f12, f8, rtz # perform operation
fmadd.s f13, f18, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0xa00952ca24dd5fa7 # load x3 with value 0xa00952ca24dd5fa7
sw x3, 0(x2) # store 0xa00952ca24dd5fa7 in memory
flw f13, 0(x2) # load 0xa00952ca24dd5fa7 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fmadd.s f1, f21, f13, f9, dyn # perform operation
fmadd.s f1, f21, f13, f9, rdn # perform operation
fmadd.s f1, f21, f13, f9, rmm # perform operation
fmadd.s f1, f21, f13, f9, rne # perform operation
fmadd.s f1, f21, f13, f9, rtz # perform operation
fmadd.s f1, f21, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xe9866e92a0808f25 # load x3 with value 0xe9866e92a0808f25
sw x3, 0(x2) # store 0xe9866e92a0808f25 in memory
flw f30, 0(x2) # load 0xe9866e92a0808f25 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmadd.s f17, f28, f30, f24, dyn # perform operation
fmadd.s f17, f28, f30, f24, rdn # perform operation
fmadd.s f17, f28, f30, f24, rmm # perform operation
fmadd.s f17, f28, f30, f24, rne # perform operation
fmadd.s f17, f28, f30, f24, rtz # perform operation
fmadd.s f17, f28, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f30, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xe6f257ed01d81900 # load x3 with value 0xe6f257ed01d81900
sw x3, 0(x2) # store 0xe6f257ed01d81900 in memory
flw f19, 0(x2) # load 0xe6f257ed01d81900 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fmadd.s f3, f11, f19, f5, dyn # perform operation
fmadd.s f3, f11, f19, f5, rdn # perform operation
fmadd.s f3, f11, f19, f5, rmm # perform operation
fmadd.s f3, f11, f19, f5, rne # perform operation
fmadd.s f3, f11, f19, f5, rtz # perform operation
fmadd.s f3, f11, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f11, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f11, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x60dbd0e05bb59b16 # load x3 with value 0x60dbd0e05bb59b16
sw x3, 0(x2) # store 0x60dbd0e05bb59b16 in memory
flw f6, 0(x2) # load 0x60dbd0e05bb59b16 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmadd.s f22, f9, f6, f8, dyn # perform operation
fmadd.s f22, f9, f6, f8, rdn # perform operation
fmadd.s f22, f9, f6, f8, rmm # perform operation
fmadd.s f22, f9, f6, f8, rne # perform operation
fmadd.s f22, f9, f6, f8, rtz # perform operation
fmadd.s f22, f9, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f9, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xa832645dc96eeddf # load x3 with value 0xa832645dc96eeddf
sw x3, 0(x2) # store 0xa832645dc96eeddf in memory
flw f26, 0(x2) # load 0xa832645dc96eeddf from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmadd.s f6, f24, f26, f2, dyn # perform operation
fmadd.s f6, f24, f26, f2, rdn # perform operation
fmadd.s f6, f24, f26, f2, rmm # perform operation
fmadd.s f6, f24, f26, f2, rne # perform operation
fmadd.s f6, f24, f26, f2, rtz # perform operation
fmadd.s f6, f24, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f24, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f24, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0xafbb0c3d92cb2c19 # load x3 with value 0xafbb0c3d92cb2c19
sw x3, 0(x2) # store 0xafbb0c3d92cb2c19 in memory
flw f14, 0(x2) # load 0xafbb0c3d92cb2c19 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fmadd.s f2, f29, f14, f7, dyn # perform operation
fmadd.s f2, f29, f14, f7, rdn # perform operation
fmadd.s f2, f29, f14, f7, rmm # perform operation
fmadd.s f2, f29, f14, f7, rne # perform operation
fmadd.s f2, f29, f14, f7, rtz # perform operation
fmadd.s f2, f29, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f14, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0xbdaa74f0d6f31044 # load x3 with value 0xbdaa74f0d6f31044
sw x3, 0(x2) # store 0xbdaa74f0d6f31044 in memory
flw f7, 0(x2) # load 0xbdaa74f0d6f31044 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmadd.s f15, f22, f7, f17, dyn # perform operation
fmadd.s f15, f22, f7, f17, rdn # perform operation
fmadd.s f15, f22, f7, f17, rmm # perform operation
fmadd.s f15, f22, f7, f17, rne # perform operation
fmadd.s f15, f22, f7, f17, rtz # perform operation
fmadd.s f15, f22, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0xbcfc240e9ea8537b # load x3 with value 0xbcfc240e9ea8537b
sw x3, 0(x2) # store 0xbcfc240e9ea8537b in memory
flw f31, 0(x2) # load 0xbcfc240e9ea8537b from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmadd.s f6, f7, f31, f5, dyn # perform operation
fmadd.s f6, f7, f31, f5, rdn # perform operation
fmadd.s f6, f7, f31, f5, rmm # perform operation
fmadd.s f6, f7, f31, f5, rne # perform operation
fmadd.s f6, f7, f31, f5, rtz # perform operation
fmadd.s f6, f7, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xfc6d548f77355c22 # load x3 with value 0xfc6d548f77355c22
sw x3, 0(x2) # store 0xfc6d548f77355c22 in memory
flw f15, 0(x2) # load 0xfc6d548f77355c22 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fmadd.s f31, f25, f15, f24, dyn # perform operation
fmadd.s f31, f25, f15, f24, rdn # perform operation
fmadd.s f31, f25, f15, f24, rmm # perform operation
fmadd.s f31, f25, f15, f24, rne # perform operation
fmadd.s f31, f25, f15, f24, rtz # perform operation
fmadd.s f31, f25, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f25, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f25, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f25, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f25, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f25, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xa0ebc253024820d4 # load x3 with value 0xa0ebc253024820d4
sw x3, 0(x2) # store 0xa0ebc253024820d4 in memory
flw f21, 0(x2) # load 0xa0ebc253024820d4 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f25, f28, f21, f9, dyn # perform operation
fmadd.s f25, f28, f21, f9, rdn # perform operation
fmadd.s f25, f28, f21, f9, rmm # perform operation
fmadd.s f25, f28, f21, f9, rne # perform operation
fmadd.s f25, f28, f21, f9, rtz # perform operation
fmadd.s f25, f28, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f28, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f28, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x783d340a71bf3fbb # load x3 with value 0x783d340a71bf3fbb
sw x3, 0(x2) # store 0x783d340a71bf3fbb in memory
flw f30, 0(x2) # load 0x783d340a71bf3fbb from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f16, f27, f30, f13, dyn # perform operation
fmadd.s f16, f27, f30, f13, rdn # perform operation
fmadd.s f16, f27, f30, f13, rmm # perform operation
fmadd.s f16, f27, f30, f13, rne # perform operation
fmadd.s f16, f27, f30, f13, rtz # perform operation
fmadd.s f16, f27, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f27, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f27, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x68aab230f30a10a2 # load x3 with value 0x68aab230f30a10a2
sw x3, 0(x2) # store 0x68aab230f30a10a2 in memory
flw f9, 0(x2) # load 0x68aab230f30a10a2 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmadd.s f29, f5, f9, f1, dyn # perform operation
fmadd.s f29, f5, f9, f1, rdn # perform operation
fmadd.s f29, f5, f9, f1, rmm # perform operation
fmadd.s f29, f5, f9, f1, rne # perform operation
fmadd.s f29, f5, f9, f1, rtz # perform operation
fmadd.s f29, f5, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x84ef35247c317d21 # load x3 with value 0x84ef35247c317d21
sw x3, 0(x2) # store 0x84ef35247c317d21 in memory
flw f29, 0(x2) # load 0x84ef35247c317d21 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmadd.s f9, f30, f29, f10, dyn # perform operation
fmadd.s f9, f30, f29, f10, rdn # perform operation
fmadd.s f9, f30, f29, f10, rmm # perform operation
fmadd.s f9, f30, f29, f10, rne # perform operation
fmadd.s f9, f30, f29, f10, rtz # perform operation
fmadd.s f9, f30, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x2b8fdd275e2c35f5 # load x3 with value 0x2b8fdd275e2c35f5
sw x3, 0(x2) # store 0x2b8fdd275e2c35f5 in memory
flw f26, 0(x2) # load 0x2b8fdd275e2c35f5 from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f14, f10, f26, f20, dyn # perform operation
fmadd.s f14, f10, f26, f20, rdn # perform operation
fmadd.s f14, f10, f26, f20, rmm # perform operation
fmadd.s f14, f10, f26, f20, rne # perform operation
fmadd.s f14, f10, f26, f20, rtz # perform operation
fmadd.s f14, f10, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0xd8a5cdfb420a9603 # load x3 with value 0xd8a5cdfb420a9603
sw x3, 0(x2) # store 0xd8a5cdfb420a9603 in memory
flw f2, 0(x2) # load 0xd8a5cdfb420a9603 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
fmadd.s f21, f11, f2, f6, dyn # perform operation
fmadd.s f21, f11, f2, f6, rdn # perform operation
fmadd.s f21, f11, f2, f6, rmm # perform operation
fmadd.s f21, f11, f2, f6, rne # perform operation
fmadd.s f21, f11, f2, f6, rtz # perform operation
fmadd.s f21, f11, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xdb65ed291913a625 # load x3 with value 0xdb65ed291913a625
sw x3, 0(x2) # store 0xdb65ed291913a625 in memory
flw f2, 0(x2) # load 0xdb65ed291913a625 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f31, f29, f2, f3, dyn # perform operation
fmadd.s f31, f29, f2, f3, rdn # perform operation
fmadd.s f31, f29, f2, f3, rmm # perform operation
fmadd.s f31, f29, f2, f3, rne # perform operation
fmadd.s f31, f29, f2, f3, rtz # perform operation
fmadd.s f31, f29, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f29, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xa56b361c11c5ae85 # load x3 with value 0xa56b361c11c5ae85
sw x3, 0(x2) # store 0xa56b361c11c5ae85 in memory
flw f9, 0(x2) # load 0xa56b361c11c5ae85 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f7, f10, f9, f6, dyn # perform operation
fmadd.s f7, f10, f9, f6, rdn # perform operation
fmadd.s f7, f10, f9, f6, rmm # perform operation
fmadd.s f7, f10, f9, f6, rne # perform operation
fmadd.s f7, f10, f9, f6, rtz # perform operation
fmadd.s f7, f10, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x440fc4d7ddf48577 # load x3 with value 0x440fc4d7ddf48577
sw x3, 0(x2) # store 0x440fc4d7ddf48577 in memory
flw f1, 0(x2) # load 0x440fc4d7ddf48577 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmadd.s f27, f12, f1, f14, dyn # perform operation
fmadd.s f27, f12, f1, f14, rdn # perform operation
fmadd.s f27, f12, f1, f14, rmm # perform operation
fmadd.s f27, f12, f1, f14, rne # perform operation
fmadd.s f27, f12, f1, f14, rtz # perform operation
fmadd.s f27, f12, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f12, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0xd684b7b0be69444f # load x3 with value 0xd684b7b0be69444f
sw x3, 0(x2) # store 0xd684b7b0be69444f in memory
flw f14, 0(x2) # load 0xd684b7b0be69444f from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fmadd.s f25, f9, f14, f24, dyn # perform operation
fmadd.s f25, f9, f14, f24, rdn # perform operation
fmadd.s f25, f9, f14, f24, rmm # perform operation
fmadd.s f25, f9, f14, f24, rne # perform operation
fmadd.s f25, f9, f14, f24, rtz # perform operation
fmadd.s f25, f9, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f9, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f9, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0xf8abb7fde114b2b # load x3 with value 0xf8abb7fde114b2b
sw x3, 0(x2) # store 0xf8abb7fde114b2b in memory
flw f2, 0(x2) # load 0xf8abb7fde114b2b from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fmadd.s f22, f15, f2, f26, dyn # perform operation
fmadd.s f22, f15, f2, f26, rdn # perform operation
fmadd.s f22, f15, f2, f26, rmm # perform operation
fmadd.s f22, f15, f2, f26, rne # perform operation
fmadd.s f22, f15, f2, f26, rtz # perform operation
fmadd.s f22, f15, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xe94a4923fb52cc9b # load x3 with value 0xe94a4923fb52cc9b
sw x3, 0(x2) # store 0xe94a4923fb52cc9b in memory
flw f22, 0(x2) # load 0xe94a4923fb52cc9b from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f28, f7, f22, f18, dyn # perform operation
fmadd.s f28, f7, f22, f18, rdn # perform operation
fmadd.s f28, f7, f22, f18, rmm # perform operation
fmadd.s f28, f7, f22, f18, rne # perform operation
fmadd.s f28, f7, f22, f18, rtz # perform operation
fmadd.s f28, f7, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f7, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xe51a7e9cfc8762a5 # load x3 with value 0xe51a7e9cfc8762a5
sw x3, 0(x2) # store 0xe51a7e9cfc8762a5 in memory
flw f9, 0(x2) # load 0xe51a7e9cfc8762a5 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fmadd.s f14, f1, f9, f16, dyn # perform operation
fmadd.s f14, f1, f9, f16, rdn # perform operation
fmadd.s f14, f1, f9, f16, rmm # perform operation
fmadd.s f14, f1, f9, f16, rne # perform operation
fmadd.s f14, f1, f9, f16, rtz # perform operation
fmadd.s f14, f1, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0xe17674287e7ddf59 # load x3 with value 0xe17674287e7ddf59
sw x3, 0(x2) # store 0xe17674287e7ddf59 in memory
flw f30, 0(x2) # load 0xe17674287e7ddf59 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fmadd.s f9, f27, f30, f22, dyn # perform operation
fmadd.s f9, f27, f30, f22, rdn # perform operation
fmadd.s f9, f27, f30, f22, rmm # perform operation
fmadd.s f9, f27, f30, f22, rne # perform operation
fmadd.s f9, f27, f30, f22, rtz # perform operation
fmadd.s f9, f27, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f30, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x3d4f07ab98ab4e2e # load x3 with value 0x3d4f07ab98ab4e2e
sw x3, 0(x2) # store 0x3d4f07ab98ab4e2e in memory
flw f31, 0(x2) # load 0x3d4f07ab98ab4e2e from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmadd.s f12, f20, f31, f25, dyn # perform operation
fmadd.s f12, f20, f31, f25, rdn # perform operation
fmadd.s f12, f20, f31, f25, rmm # perform operation
fmadd.s f12, f20, f31, f25, rne # perform operation
fmadd.s f12, f20, f31, f25, rtz # perform operation
fmadd.s f12, f20, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f20, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f20, f31, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0x7daec1bc83a0e5d6 # load x3 with value 0x7daec1bc83a0e5d6
sw x3, 0(x2) # store 0x7daec1bc83a0e5d6 in memory
flw f7, 0(x2) # load 0x7daec1bc83a0e5d6 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmadd.s f31, f19, f7, f5, dyn # perform operation
fmadd.s f31, f19, f7, f5, rdn # perform operation
fmadd.s f31, f19, f7, f5, rmm # perform operation
fmadd.s f31, f19, f7, f5, rne # perform operation
fmadd.s f31, f19, f7, f5, rtz # perform operation
fmadd.s f31, f19, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f7, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xc36addf59cf29dd7 # load x3 with value 0xc36addf59cf29dd7
sw x3, 0(x2) # store 0xc36addf59cf29dd7 in memory
flw f2, 0(x2) # load 0xc36addf59cf29dd7 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fmadd.s f24, f28, f2, f23, dyn # perform operation
fmadd.s f24, f28, f2, f23, rdn # perform operation
fmadd.s f24, f28, f2, f23, rmm # perform operation
fmadd.s f24, f28, f2, f23, rne # perform operation
fmadd.s f24, f28, f2, f23, rtz # perform operation
fmadd.s f24, f28, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0xe846d9a14b1df224 # load x3 with value 0xe846d9a14b1df224
sw x3, 0(x2) # store 0xe846d9a14b1df224 in memory
flw f13, 0(x2) # load 0xe846d9a14b1df224 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmadd.s f30, f23, f13, f27, dyn # perform operation
fmadd.s f30, f23, f13, f27, rdn # perform operation
fmadd.s f30, f23, f13, f27, rmm # perform operation
fmadd.s f30, f23, f13, f27, rne # perform operation
fmadd.s f30, f23, f13, f27, rtz # perform operation
fmadd.s f30, f23, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f23, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x844390e6da7bba62 # load x3 with value 0x844390e6da7bba62
sw x3, 0(x2) # store 0x844390e6da7bba62 in memory
flw f14, 0(x2) # load 0x844390e6da7bba62 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f2, f8, f14, f25, dyn # perform operation
fmadd.s f2, f8, f14, f25, rdn # perform operation
fmadd.s f2, f8, f14, f25, rmm # perform operation
fmadd.s f2, f8, f14, f25, rne # perform operation
fmadd.s f2, f8, f14, f25, rtz # perform operation
fmadd.s f2, f8, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x13eb0a6fe003bc4a # load x3 with value 0x13eb0a6fe003bc4a
sw x3, 0(x2) # store 0x13eb0a6fe003bc4a in memory
flw f27, 0(x2) # load 0x13eb0a6fe003bc4a from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f28, f24, f27, f14, dyn # perform operation
fmadd.s f28, f24, f27, f14, rdn # perform operation
fmadd.s f28, f24, f27, f14, rmm # perform operation
fmadd.s f28, f24, f27, f14, rne # perform operation
fmadd.s f28, f24, f27, f14, rtz # perform operation
fmadd.s f28, f24, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x9707138c8c9eb99b # load x3 with value 0x9707138c8c9eb99b
sw x3, 0(x2) # store 0x9707138c8c9eb99b in memory
flw f26, 0(x2) # load 0x9707138c8c9eb99b from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f17, f10, f26, f8, dyn # perform operation
fmadd.s f17, f10, f26, f8, rdn # perform operation
fmadd.s f17, f10, f26, f8, rmm # perform operation
fmadd.s f17, f10, f26, f8, rne # perform operation
fmadd.s f17, f10, f26, f8, rtz # perform operation
fmadd.s f17, f10, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f26, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x8e578b161c3ac70a # load x3 with value 0x8e578b161c3ac70a
sw x3, 0(x2) # store 0x8e578b161c3ac70a in memory
flw f20, 0(x2) # load 0x8e578b161c3ac70a from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmadd.s f7, f17, f20, f1, dyn # perform operation
fmadd.s f7, f17, f20, f1, rdn # perform operation
fmadd.s f7, f17, f20, f1, rmm # perform operation
fmadd.s f7, f17, f20, f1, rne # perform operation
fmadd.s f7, f17, f20, f1, rtz # perform operation
fmadd.s f7, f17, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xc6a207d0f751d720 # load x3 with value 0xc6a207d0f751d720
sw x3, 0(x2) # store 0xc6a207d0f751d720 in memory
flw f9, 0(x2) # load 0xc6a207d0f751d720 from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f3, f22, f9, f2, dyn # perform operation
fmadd.s f3, f22, f9, f2, rdn # perform operation
fmadd.s f3, f22, f9, f2, rmm # perform operation
fmadd.s f3, f22, f9, f2, rne # perform operation
fmadd.s f3, f22, f9, f2, rtz # perform operation
fmadd.s f3, f22, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f22, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f22, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x2717db419a3a53f9 # load x3 with value 0x2717db419a3a53f9
sw x3, 0(x2) # store 0x2717db419a3a53f9 in memory
flw f18, 0(x2) # load 0x2717db419a3a53f9 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fmadd.s f5, f29, f18, f20, dyn # perform operation
fmadd.s f5, f29, f18, f20, rdn # perform operation
fmadd.s f5, f29, f18, f20, rmm # perform operation
fmadd.s f5, f29, f18, f20, rne # perform operation
fmadd.s f5, f29, f18, f20, rtz # perform operation
fmadd.s f5, f29, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f18, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x497e76536557585e # load x3 with value 0x497e76536557585e
sw x3, 0(x2) # store 0x497e76536557585e in memory
flw f30, 0(x2) # load 0x497e76536557585e from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
fmadd.s f13, f31, f30, f25, dyn # perform operation
fmadd.s f13, f31, f30, f25, rdn # perform operation
fmadd.s f13, f31, f30, f25, rmm # perform operation
fmadd.s f13, f31, f30, f25, rne # perform operation
fmadd.s f13, f31, f30, f25, rtz # perform operation
fmadd.s f13, f31, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f31, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x5201bd7736d4b647 # load x3 with value 0x5201bd7736d4b647
sw x3, 0(x2) # store 0x5201bd7736d4b647 in memory
flw f14, 0(x2) # load 0x5201bd7736d4b647 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmadd.s f24, f28, f14, f31, dyn # perform operation
fmadd.s f24, f28, f14, f31, rdn # perform operation
fmadd.s f24, f28, f14, f31, rmm # perform operation
fmadd.s f24, f28, f14, f31, rne # perform operation
fmadd.s f24, f28, f14, f31, rtz # perform operation
fmadd.s f24, f28, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x23f41e1524010563 # load x3 with value 0x23f41e1524010563
sw x3, 0(x2) # store 0x23f41e1524010563 in memory
flw f15, 0(x2) # load 0x23f41e1524010563 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmadd.s f22, f21, f15, f8, dyn # perform operation
fmadd.s f22, f21, f15, f8, rdn # perform operation
fmadd.s f22, f21, f15, f8, rmm # perform operation
fmadd.s f22, f21, f15, f8, rne # perform operation
fmadd.s f22, f21, f15, f8, rtz # perform operation
fmadd.s f22, f21, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x11093207a4120b0d # load x3 with value 0x11093207a4120b0d
sw x3, 0(x2) # store 0x11093207a4120b0d in memory
flw f5, 0(x2) # load 0x11093207a4120b0d from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
fmadd.s f6, f8, f5, f7, dyn # perform operation
fmadd.s f6, f8, f5, f7, rdn # perform operation
fmadd.s f6, f8, f5, f7, rmm # perform operation
fmadd.s f6, f8, f5, f7, rne # perform operation
fmadd.s f6, f8, f5, f7, rtz # perform operation
fmadd.s f6, f8, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f8, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x17f5d5d682e7df2f # load x3 with value 0x17f5d5d682e7df2f
sw x3, 0(x2) # store 0x17f5d5d682e7df2f in memory
flw f7, 0(x2) # load 0x17f5d5d682e7df2f from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmadd.s f17, f2, f7, f23, dyn # perform operation
fmadd.s f17, f2, f7, f23, rdn # perform operation
fmadd.s f17, f2, f7, f23, rmm # perform operation
fmadd.s f17, f2, f7, f23, rne # perform operation
fmadd.s f17, f2, f7, f23, rtz # perform operation
fmadd.s f17, f2, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x18085abc23b6d6b6 # load x3 with value 0x18085abc23b6d6b6
sw x3, 0(x2) # store 0x18085abc23b6d6b6 in memory
flw f31, 0(x2) # load 0x18085abc23b6d6b6 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fmadd.s f23, f29, f31, f10, dyn # perform operation
fmadd.s f23, f29, f31, f10, rdn # perform operation
fmadd.s f23, f29, f31, f10, rmm # perform operation
fmadd.s f23, f29, f31, f10, rne # perform operation
fmadd.s f23, f29, f31, f10, rtz # perform operation
fmadd.s f23, f29, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xe6383c4d92e0d0b3 # load x3 with value 0xe6383c4d92e0d0b3
sw x3, 0(x2) # store 0xe6383c4d92e0d0b3 in memory
flw f29, 0(x2) # load 0xe6383c4d92e0d0b3 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmadd.s f21, f22, f29, f30, dyn # perform operation
fmadd.s f21, f22, f29, f30, rdn # perform operation
fmadd.s f21, f22, f29, f30, rmm # perform operation
fmadd.s f21, f22, f29, f30, rne # perform operation
fmadd.s f21, f22, f29, f30, rtz # perform operation
fmadd.s f21, f22, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f22, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f22, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f22, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f22, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f22, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x4b349f892b8e8dc4 # load x3 with value 0x4b349f892b8e8dc4
sw x3, 0(x2) # store 0x4b349f892b8e8dc4 in memory
flw f29, 0(x2) # load 0x4b349f892b8e8dc4 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmadd.s f13, f21, f29, f10, dyn # perform operation
fmadd.s f13, f21, f29, f10, rdn # perform operation
fmadd.s f13, f21, f29, f10, rmm # perform operation
fmadd.s f13, f21, f29, f10, rne # perform operation
fmadd.s f13, f21, f29, f10, rtz # perform operation
fmadd.s f13, f21, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f29, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0xb5e6ef7c3f4155bd # load x3 with value 0xb5e6ef7c3f4155bd
sw x3, 0(x2) # store 0xb5e6ef7c3f4155bd in memory
flw f25, 0(x2) # load 0xb5e6ef7c3f4155bd from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmadd.s f6, f8, f25, f19, dyn # perform operation
fmadd.s f6, f8, f25, f19, rdn # perform operation
fmadd.s f6, f8, f25, f19, rmm # perform operation
fmadd.s f6, f8, f25, f19, rne # perform operation
fmadd.s f6, f8, f25, f19, rtz # perform operation
fmadd.s f6, f8, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f8, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f8, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f8, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f8, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f8, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xc11b3ebace7824f0 # load x3 with value 0xc11b3ebace7824f0
sw x3, 0(x2) # store 0xc11b3ebace7824f0 in memory
flw f20, 0(x2) # load 0xc11b3ebace7824f0 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmadd.s f27, f18, f20, f12, dyn # perform operation
fmadd.s f27, f18, f20, f12, rdn # perform operation
fmadd.s f27, f18, f20, f12, rmm # perform operation
fmadd.s f27, f18, f20, f12, rne # perform operation
fmadd.s f27, f18, f20, f12, rtz # perform operation
fmadd.s f27, f18, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f20, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x51f6b4d9034d7c07 # load x3 with value 0x51f6b4d9034d7c07
sw x3, 0(x2) # store 0x51f6b4d9034d7c07 in memory
flw f10, 0(x2) # load 0x51f6b4d9034d7c07 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fmadd.s f28, f3, f10, f24, dyn # perform operation
fmadd.s f28, f3, f10, f24, rdn # perform operation
fmadd.s f28, f3, f10, f24, rmm # perform operation
fmadd.s f28, f3, f10, f24, rne # perform operation
fmadd.s f28, f3, f10, f24, rtz # perform operation
fmadd.s f28, f3, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x732fb2b2641d0bd6 # load x3 with value 0x732fb2b2641d0bd6
sw x3, 0(x2) # store 0x732fb2b2641d0bd6 in memory
flw f30, 0(x2) # load 0x732fb2b2641d0bd6 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmadd.s f8, f10, f30, f15, dyn # perform operation
fmadd.s f8, f10, f30, f15, rdn # perform operation
fmadd.s f8, f10, f30, f15, rmm # perform operation
fmadd.s f8, f10, f30, f15, rne # perform operation
fmadd.s f8, f10, f30, f15, rtz # perform operation
fmadd.s f8, f10, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f10, f30, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x38a49e0554db225e # load x3 with value 0x38a49e0554db225e
sw x3, 0(x2) # store 0x38a49e0554db225e in memory
flw f24, 0(x2) # load 0x38a49e0554db225e from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f19, f3, f24, f18, dyn # perform operation
fmadd.s f19, f3, f24, f18, rdn # perform operation
fmadd.s f19, f3, f24, f18, rmm # perform operation
fmadd.s f19, f3, f24, f18, rne # perform operation
fmadd.s f19, f3, f24, f18, rtz # perform operation
fmadd.s f19, f3, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f24, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xb7732b3d63409f14 # load x3 with value 0xb7732b3d63409f14
sw x3, 0(x2) # store 0xb7732b3d63409f14 in memory
flw f9, 0(x2) # load 0xb7732b3d63409f14 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmadd.s f14, f23, f9, f18, dyn # perform operation
fmadd.s f14, f23, f9, f18, rdn # perform operation
fmadd.s f14, f23, f9, f18, rmm # perform operation
fmadd.s f14, f23, f9, f18, rne # perform operation
fmadd.s f14, f23, f9, f18, rtz # perform operation
fmadd.s f14, f23, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f23, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xc6cac31f56fd8a53 # load x3 with value 0xc6cac31f56fd8a53
sw x3, 0(x2) # store 0xc6cac31f56fd8a53 in memory
flw f29, 0(x2) # load 0xc6cac31f56fd8a53 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fmadd.s f23, f3, f29, f18, dyn # perform operation
fmadd.s f23, f3, f29, f18, rdn # perform operation
fmadd.s f23, f3, f29, f18, rmm # perform operation
fmadd.s f23, f3, f29, f18, rne # perform operation
fmadd.s f23, f3, f29, f18, rtz # perform operation
fmadd.s f23, f3, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x2d9eaae481a29be6 # load x3 with value 0x2d9eaae481a29be6
sw x3, 0(x2) # store 0x2d9eaae481a29be6 in memory
flw f11, 0(x2) # load 0x2d9eaae481a29be6 from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmadd.s f15, f10, f11, f25, dyn # perform operation
fmadd.s f15, f10, f11, f25, rdn # perform operation
fmadd.s f15, f10, f11, f25, rmm # perform operation
fmadd.s f15, f10, f11, f25, rne # perform operation
fmadd.s f15, f10, f11, f25, rtz # perform operation
fmadd.s f15, f10, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xd1a444d585ec946e # load x3 with value 0xd1a444d585ec946e
sw x3, 0(x2) # store 0xd1a444d585ec946e in memory
flw f7, 0(x2) # load 0xd1a444d585ec946e from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmadd.s f15, f27, f7, f20, dyn # perform operation
fmadd.s f15, f27, f7, f20, rdn # perform operation
fmadd.s f15, f27, f7, f20, rmm # perform operation
fmadd.s f15, f27, f7, f20, rne # perform operation
fmadd.s f15, f27, f7, f20, rtz # perform operation
fmadd.s f15, f27, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xdbd6e470f382729b # load x3 with value 0xdbd6e470f382729b
sw x3, 0(x2) # store 0xdbd6e470f382729b in memory
flw f8, 0(x2) # load 0xdbd6e470f382729b from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f29, f13, f8, f7, dyn # perform operation
fmadd.s f29, f13, f8, f7, rdn # perform operation
fmadd.s f29, f13, f8, f7, rmm # perform operation
fmadd.s f29, f13, f8, f7, rne # perform operation
fmadd.s f29, f13, f8, f7, rtz # perform operation
fmadd.s f29, f13, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f13, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f13, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xd68b8c6b8eedd33d # load x3 with value 0xd68b8c6b8eedd33d
sw x3, 0(x2) # store 0xd68b8c6b8eedd33d in memory
flw f24, 0(x2) # load 0xd68b8c6b8eedd33d from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmadd.s f12, f27, f24, f6, dyn # perform operation
fmadd.s f12, f27, f24, f6, rdn # perform operation
fmadd.s f12, f27, f24, f6, rmm # perform operation
fmadd.s f12, f27, f24, f6, rne # perform operation
fmadd.s f12, f27, f24, f6, rtz # perform operation
fmadd.s f12, f27, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f27, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f27, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f27, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f27, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f27, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xf00f935b31b97d9 # load x3 with value 0xf00f935b31b97d9
sw x3, 0(x2) # store 0xf00f935b31b97d9 in memory
flw f27, 0(x2) # load 0xf00f935b31b97d9 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f17, f24, f27, f14, dyn # perform operation
fmadd.s f17, f24, f27, f14, rdn # perform operation
fmadd.s f17, f24, f27, f14, rmm # perform operation
fmadd.s f17, f24, f27, f14, rne # perform operation
fmadd.s f17, f24, f27, f14, rtz # perform operation
fmadd.s f17, f24, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x9908d00344fd0582 # load x3 with value 0x9908d00344fd0582
sw x3, 0(x2) # store 0x9908d00344fd0582 in memory
flw f5, 0(x2) # load 0x9908d00344fd0582 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fmadd.s f26, f2, f5, f23, dyn # perform operation
fmadd.s f26, f2, f5, f23, rdn # perform operation
fmadd.s f26, f2, f5, f23, rmm # perform operation
fmadd.s f26, f2, f5, f23, rne # perform operation
fmadd.s f26, f2, f5, f23, rtz # perform operation
fmadd.s f26, f2, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f2, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f2, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x1d545960db6a4439 # load x3 with value 0x1d545960db6a4439
sw x3, 0(x2) # store 0x1d545960db6a4439 in memory
flw f5, 0(x2) # load 0x1d545960db6a4439 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmadd.s f14, f27, f5, f7, dyn # perform operation
fmadd.s f14, f27, f5, f7, rdn # perform operation
fmadd.s f14, f27, f5, f7, rmm # perform operation
fmadd.s f14, f27, f5, f7, rne # perform operation
fmadd.s f14, f27, f5, f7, rtz # perform operation
fmadd.s f14, f27, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f27, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f27, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xcc0e6af321f10632 # load x3 with value 0xcc0e6af321f10632
sw x3, 0(x2) # store 0xcc0e6af321f10632 in memory
flw f3, 0(x2) # load 0xcc0e6af321f10632 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f14, f2, f3, f25, dyn # perform operation
fmadd.s f14, f2, f3, f25, rdn # perform operation
fmadd.s f14, f2, f3, f25, rmm # perform operation
fmadd.s f14, f2, f3, f25, rne # perform operation
fmadd.s f14, f2, f3, f25, rtz # perform operation
fmadd.s f14, f2, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f3, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xf0fe7bb271407b76 # load x3 with value 0xf0fe7bb271407b76
sw x3, 0(x2) # store 0xf0fe7bb271407b76 in memory
flw f25, 0(x2) # load 0xf0fe7bb271407b76 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f26, f24, f25, f21, dyn # perform operation
fmadd.s f26, f24, f25, f21, rdn # perform operation
fmadd.s f26, f24, f25, f21, rmm # perform operation
fmadd.s f26, f24, f25, f21, rne # perform operation
fmadd.s f26, f24, f25, f21, rtz # perform operation
fmadd.s f26, f24, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f24, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f24, f25, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xe12cc78bf3c2499 # load x3 with value 0xe12cc78bf3c2499
sw x3, 0(x2) # store 0xe12cc78bf3c2499 in memory
flw f29, 0(x2) # load 0xe12cc78bf3c2499 from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmadd.s f6, f18, f29, f28, dyn # perform operation
fmadd.s f6, f18, f29, f28, rdn # perform operation
fmadd.s f6, f18, f29, f28, rmm # perform operation
fmadd.s f6, f18, f29, f28, rne # perform operation
fmadd.s f6, f18, f29, f28, rtz # perform operation
fmadd.s f6, f18, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x2049267c433459a4 # load x3 with value 0x2049267c433459a4
sw x3, 0(x2) # store 0x2049267c433459a4 in memory
flw f22, 0(x2) # load 0x2049267c433459a4 from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fmadd.s f23, f29, f22, f20, dyn # perform operation
fmadd.s f23, f29, f22, f20, rdn # perform operation
fmadd.s f23, f29, f22, f20, rmm # perform operation
fmadd.s f23, f29, f22, f20, rne # perform operation
fmadd.s f23, f29, f22, f20, rtz # perform operation
fmadd.s f23, f29, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x713735585ee2136a # load x3 with value 0x713735585ee2136a
sw x3, 0(x2) # store 0x713735585ee2136a in memory
flw f26, 0(x2) # load 0x713735585ee2136a from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fmadd.s f20, f9, f26, f24, dyn # perform operation
fmadd.s f20, f9, f26, f24, rdn # perform operation
fmadd.s f20, f9, f26, f24, rmm # perform operation
fmadd.s f20, f9, f26, f24, rne # perform operation
fmadd.s f20, f9, f26, f24, rtz # perform operation
fmadd.s f20, f9, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xf7395946252a97d1 # load x3 with value 0xf7395946252a97d1
sw x3, 0(x2) # store 0xf7395946252a97d1 in memory
flw f18, 0(x2) # load 0xf7395946252a97d1 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmadd.s f8, f19, f18, f1, dyn # perform operation
fmadd.s f8, f19, f18, f1, rdn # perform operation
fmadd.s f8, f19, f18, f1, rmm # perform operation
fmadd.s f8, f19, f18, f1, rne # perform operation
fmadd.s f8, f19, f18, f1, rtz # perform operation
fmadd.s f8, f19, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f18, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0xa5ef6f9562dbab58 # load x3 with value 0xa5ef6f9562dbab58
sw x3, 0(x2) # store 0xa5ef6f9562dbab58 in memory
flw f3, 0(x2) # load 0xa5ef6f9562dbab58 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fmadd.s f28, f29, f3, f7, dyn # perform operation
fmadd.s f28, f29, f3, f7, rdn # perform operation
fmadd.s f28, f29, f3, f7, rmm # perform operation
fmadd.s f28, f29, f3, f7, rne # perform operation
fmadd.s f28, f29, f3, f7, rtz # perform operation
fmadd.s f28, f29, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0xe4ded5a0a94daff4 # load x3 with value 0xe4ded5a0a94daff4
sw x3, 0(x2) # store 0xe4ded5a0a94daff4 in memory
flw f3, 0(x2) # load 0xe4ded5a0a94daff4 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmadd.s f28, f25, f3, f17, dyn # perform operation
fmadd.s f28, f25, f3, f17, rdn # perform operation
fmadd.s f28, f25, f3, f17, rmm # perform operation
fmadd.s f28, f25, f3, f17, rne # perform operation
fmadd.s f28, f25, f3, f17, rtz # perform operation
fmadd.s f28, f25, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x1edb44b588002ef1 # load x3 with value 0x1edb44b588002ef1
sw x3, 0(x2) # store 0x1edb44b588002ef1 in memory
flw f29, 0(x2) # load 0x1edb44b588002ef1 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fmadd.s f17, f28, f29, f16, dyn # perform operation
fmadd.s f17, f28, f29, f16, rdn # perform operation
fmadd.s f17, f28, f29, f16, rmm # perform operation
fmadd.s f17, f28, f29, f16, rne # perform operation
fmadd.s f17, f28, f29, f16, rtz # perform operation
fmadd.s f17, f28, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x2d4c01a310dbab59 # load x3 with value 0x2d4c01a310dbab59
sw x3, 0(x2) # store 0x2d4c01a310dbab59 in memory
flw f26, 0(x2) # load 0x2d4c01a310dbab59 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fmadd.s f2, f1, f26, f3, dyn # perform operation
fmadd.s f2, f1, f26, f3, rdn # perform operation
fmadd.s f2, f1, f26, f3, rmm # perform operation
fmadd.s f2, f1, f26, f3, rne # perform operation
fmadd.s f2, f1, f26, f3, rtz # perform operation
fmadd.s f2, f1, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f1, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f1, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x68ccd698d921c2cb # load x3 with value 0x68ccd698d921c2cb
sw x3, 0(x2) # store 0x68ccd698d921c2cb in memory
flw f23, 0(x2) # load 0x68ccd698d921c2cb from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fmadd.s f18, f24, f23, f1, dyn # perform operation
fmadd.s f18, f24, f23, f1, rdn # perform operation
fmadd.s f18, f24, f23, f1, rmm # perform operation
fmadd.s f18, f24, f23, f1, rne # perform operation
fmadd.s f18, f24, f23, f1, rtz # perform operation
fmadd.s f18, f24, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f24, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f24, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f24, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f24, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f24, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x60122562fc6e13f6 # load x3 with value 0x60122562fc6e13f6
sw x3, 0(x2) # store 0x60122562fc6e13f6 in memory
flw f13, 0(x2) # load 0x60122562fc6e13f6 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f24, f5, f13, f15, dyn # perform operation
fmadd.s f24, f5, f13, f15, rdn # perform operation
fmadd.s f24, f5, f13, f15, rmm # perform operation
fmadd.s f24, f5, f13, f15, rne # perform operation
fmadd.s f24, f5, f13, f15, rtz # perform operation
fmadd.s f24, f5, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f5, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f5, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f5, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f5, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f5, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x4cebbd9cffa76bfb # load x3 with value 0x4cebbd9cffa76bfb
sw x3, 0(x2) # store 0x4cebbd9cffa76bfb in memory
flw f16, 0(x2) # load 0x4cebbd9cffa76bfb from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmadd.s f24, f27, f16, f30, dyn # perform operation
fmadd.s f24, f27, f16, f30, rdn # perform operation
fmadd.s f24, f27, f16, f30, rmm # perform operation
fmadd.s f24, f27, f16, f30, rne # perform operation
fmadd.s f24, f27, f16, f30, rtz # perform operation
fmadd.s f24, f27, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xa2090f92b094566a # load x3 with value 0xa2090f92b094566a
sw x3, 0(x2) # store 0xa2090f92b094566a in memory
flw f29, 0(x2) # load 0xa2090f92b094566a from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmadd.s f26, f20, f29, f21, dyn # perform operation
fmadd.s f26, f20, f29, f21, rdn # perform operation
fmadd.s f26, f20, f29, f21, rmm # perform operation
fmadd.s f26, f20, f29, f21, rne # perform operation
fmadd.s f26, f20, f29, f21, rtz # perform operation
fmadd.s f26, f20, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x11b29f405e153c84 # load x3 with value 0x11b29f405e153c84
sw x3, 0(x2) # store 0x11b29f405e153c84 in memory
flw f2, 0(x2) # load 0x11b29f405e153c84 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmadd.s f17, f5, f2, f19, dyn # perform operation
fmadd.s f17, f5, f2, f19, rdn # perform operation
fmadd.s f17, f5, f2, f19, rmm # perform operation
fmadd.s f17, f5, f2, f19, rne # perform operation
fmadd.s f17, f5, f2, f19, rtz # perform operation
fmadd.s f17, f5, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xc0cda6f8d4b66935 # load x3 with value 0xc0cda6f8d4b66935
sw x3, 0(x2) # store 0xc0cda6f8d4b66935 in memory
flw f20, 0(x2) # load 0xc0cda6f8d4b66935 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmadd.s f31, f9, f20, f1, dyn # perform operation
fmadd.s f31, f9, f20, f1, rdn # perform operation
fmadd.s f31, f9, f20, f1, rmm # perform operation
fmadd.s f31, f9, f20, f1, rne # perform operation
fmadd.s f31, f9, f20, f1, rtz # perform operation
fmadd.s f31, f9, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x18e8a849d353014 # load x3 with value 0x18e8a849d353014
sw x3, 0(x2) # store 0x18e8a849d353014 in memory
flw f29, 0(x2) # load 0x18e8a849d353014 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmadd.s f22, f30, f29, f23, dyn # perform operation
fmadd.s f22, f30, f29, f23, rdn # perform operation
fmadd.s f22, f30, f29, f23, rmm # perform operation
fmadd.s f22, f30, f29, f23, rne # perform operation
fmadd.s f22, f30, f29, f23, rtz # perform operation
fmadd.s f22, f30, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xa9fc1679716fba5f # load x3 with value 0xa9fc1679716fba5f
sw x3, 0(x2) # store 0xa9fc1679716fba5f in memory
flw f12, 0(x2) # load 0xa9fc1679716fba5f from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmadd.s f11, f20, f12, f31, dyn # perform operation
fmadd.s f11, f20, f12, f31, rdn # perform operation
fmadd.s f11, f20, f12, f31, rmm # perform operation
fmadd.s f11, f20, f12, f31, rne # perform operation
fmadd.s f11, f20, f12, f31, rtz # perform operation
fmadd.s f11, f20, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f20, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f20, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f20, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f20, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f20, f12, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x6a94e129e3be1eaf # load x3 with value 0x6a94e129e3be1eaf
sw x3, 0(x2) # store 0x6a94e129e3be1eaf in memory
flw f29, 0(x2) # load 0x6a94e129e3be1eaf from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmadd.s f21, f27, f29, f3, dyn # perform operation
fmadd.s f21, f27, f29, f3, rdn # perform operation
fmadd.s f21, f27, f29, f3, rmm # perform operation
fmadd.s f21, f27, f29, f3, rne # perform operation
fmadd.s f21, f27, f29, f3, rtz # perform operation
fmadd.s f21, f27, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f29, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xeef8317f55e9d3c1 # load x3 with value 0xeef8317f55e9d3c1
sw x3, 0(x2) # store 0xeef8317f55e9d3c1 in memory
flw f6, 0(x2) # load 0xeef8317f55e9d3c1 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmadd.s f29, f26, f6, f31, dyn # perform operation
fmadd.s f29, f26, f6, f31, rdn # perform operation
fmadd.s f29, f26, f6, f31, rmm # perform operation
fmadd.s f29, f26, f6, f31, rne # perform operation
fmadd.s f29, f26, f6, f31, rtz # perform operation
fmadd.s f29, f26, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f26, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xfa8852d075fe51e0 # load x3 with value 0xfa8852d075fe51e0
sw x3, 0(x2) # store 0xfa8852d075fe51e0 in memory
flw f23, 0(x2) # load 0xfa8852d075fe51e0 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f16, f28, f23, f3, dyn # perform operation
fmadd.s f16, f28, f23, f3, rdn # perform operation
fmadd.s f16, f28, f23, f3, rmm # perform operation
fmadd.s f16, f28, f23, f3, rne # perform operation
fmadd.s f16, f28, f23, f3, rtz # perform operation
fmadd.s f16, f28, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f28, f23, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xfeab77c25de627cd # load x3 with value 0xfeab77c25de627cd
sw x3, 0(x2) # store 0xfeab77c25de627cd in memory
flw f3, 0(x2) # load 0xfeab77c25de627cd from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f26, f23, f3, f11, dyn # perform operation
fmadd.s f26, f23, f3, f11, rdn # perform operation
fmadd.s f26, f23, f3, f11, rmm # perform operation
fmadd.s f26, f23, f3, f11, rne # perform operation
fmadd.s f26, f23, f3, f11, rtz # perform operation
fmadd.s f26, f23, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0xdc9bc2831197d32f # load x3 with value 0xdc9bc2831197d32f
sw x3, 0(x2) # store 0xdc9bc2831197d32f in memory
flw f16, 0(x2) # load 0xdc9bc2831197d32f from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmadd.s f22, f13, f16, f11, dyn # perform operation
fmadd.s f22, f13, f16, f11, rdn # perform operation
fmadd.s f22, f13, f16, f11, rmm # perform operation
fmadd.s f22, f13, f16, f11, rne # perform operation
fmadd.s f22, f13, f16, f11, rtz # perform operation
fmadd.s f22, f13, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f13, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f13, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f13, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f13, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f13, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x9232462e62d001ff # load x3 with value 0x9232462e62d001ff
sw x3, 0(x2) # store 0x9232462e62d001ff in memory
flw f8, 0(x2) # load 0x9232462e62d001ff from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fmadd.s f1, f7, f8, f31, dyn # perform operation
fmadd.s f1, f7, f8, f31, rdn # perform operation
fmadd.s f1, f7, f8, f31, rmm # perform operation
fmadd.s f1, f7, f8, f31, rne # perform operation
fmadd.s f1, f7, f8, f31, rtz # perform operation
fmadd.s f1, f7, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x84ebb19defd9f939 # load x3 with value 0x84ebb19defd9f939
sw x3, 0(x2) # store 0x84ebb19defd9f939 in memory
flw f17, 0(x2) # load 0x84ebb19defd9f939 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fmadd.s f23, f30, f17, f1, dyn # perform operation
fmadd.s f23, f30, f17, f1, rdn # perform operation
fmadd.s f23, f30, f17, f1, rmm # perform operation
fmadd.s f23, f30, f17, f1, rne # perform operation
fmadd.s f23, f30, f17, f1, rtz # perform operation
fmadd.s f23, f30, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f30, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f30, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x22e61ea4dffe47c5 # load x3 with value 0x22e61ea4dffe47c5
sw x3, 0(x2) # store 0x22e61ea4dffe47c5 in memory
flw f15, 0(x2) # load 0x22e61ea4dffe47c5 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmadd.s f9, f23, f15, f18, dyn # perform operation
fmadd.s f9, f23, f15, f18, rdn # perform operation
fmadd.s f9, f23, f15, f18, rmm # perform operation
fmadd.s f9, f23, f15, f18, rne # perform operation
fmadd.s f9, f23, f15, f18, rtz # perform operation
fmadd.s f9, f23, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x3ae7e741715a6c1c # load x3 with value 0x3ae7e741715a6c1c
sw x3, 0(x2) # store 0x3ae7e741715a6c1c in memory
flw f3, 0(x2) # load 0x3ae7e741715a6c1c from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmadd.s f16, f13, f3, f9, dyn # perform operation
fmadd.s f16, f13, f3, f9, rdn # perform operation
fmadd.s f16, f13, f3, f9, rmm # perform operation
fmadd.s f16, f13, f3, f9, rne # perform operation
fmadd.s f16, f13, f3, f9, rtz # perform operation
fmadd.s f16, f13, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f13, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x1ada1fff7259d915 # load x3 with value 0x1ada1fff7259d915
sw x3, 0(x2) # store 0x1ada1fff7259d915 in memory
flw f5, 0(x2) # load 0x1ada1fff7259d915 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmadd.s f31, f20, f5, f23, dyn # perform operation
fmadd.s f31, f20, f5, f23, rdn # perform operation
fmadd.s f31, f20, f5, f23, rmm # perform operation
fmadd.s f31, f20, f5, f23, rne # perform operation
fmadd.s f31, f20, f5, f23, rtz # perform operation
fmadd.s f31, f20, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x201ad88aab4083b5 # load x3 with value 0x201ad88aab4083b5
sw x3, 0(x2) # store 0x201ad88aab4083b5 in memory
flw f22, 0(x2) # load 0x201ad88aab4083b5 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmadd.s f23, f13, f22, f31, dyn # perform operation
fmadd.s f23, f13, f22, f31, rdn # perform operation
fmadd.s f23, f13, f22, f31, rmm # perform operation
fmadd.s f23, f13, f22, f31, rne # perform operation
fmadd.s f23, f13, f22, f31, rtz # perform operation
fmadd.s f23, f13, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0xe4a7a6cee66c2449 # load x3 with value 0xe4a7a6cee66c2449
sw x3, 0(x2) # store 0xe4a7a6cee66c2449 in memory
flw f14, 0(x2) # load 0xe4a7a6cee66c2449 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmadd.s f18, f28, f14, f11, dyn # perform operation
fmadd.s f18, f28, f14, f11, rdn # perform operation
fmadd.s f18, f28, f14, f11, rmm # perform operation
fmadd.s f18, f28, f14, f11, rne # perform operation
fmadd.s f18, f28, f14, f11, rtz # perform operation
fmadd.s f18, f28, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f14, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0xcd5cf2aa77540e93 # load x3 with value 0xcd5cf2aa77540e93
sw x3, 0(x2) # store 0xcd5cf2aa77540e93 in memory
flw f10, 0(x2) # load 0xcd5cf2aa77540e93 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmadd.s f29, f31, f10, f15, dyn # perform operation
fmadd.s f29, f31, f10, f15, rdn # perform operation
fmadd.s f29, f31, f10, f15, rmm # perform operation
fmadd.s f29, f31, f10, f15, rne # perform operation
fmadd.s f29, f31, f10, f15, rtz # perform operation
fmadd.s f29, f31, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xe65c6a7d2d62f9f8 # load x3 with value 0xe65c6a7d2d62f9f8
sw x3, 0(x2) # store 0xe65c6a7d2d62f9f8 in memory
flw f17, 0(x2) # load 0xe65c6a7d2d62f9f8 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fmadd.s f19, f27, f17, f29, dyn # perform operation
fmadd.s f19, f27, f17, f29, rdn # perform operation
fmadd.s f19, f27, f17, f29, rmm # perform operation
fmadd.s f19, f27, f17, f29, rne # perform operation
fmadd.s f19, f27, f17, f29, rtz # perform operation
fmadd.s f19, f27, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x96047c797d65672e # load x3 with value 0x96047c797d65672e
sw x3, 0(x2) # store 0x96047c797d65672e in memory
flw f27, 0(x2) # load 0x96047c797d65672e from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmadd.s f15, f3, f27, f10, dyn # perform operation
fmadd.s f15, f3, f27, f10, rdn # perform operation
fmadd.s f15, f3, f27, f10, rmm # perform operation
fmadd.s f15, f3, f27, f10, rne # perform operation
fmadd.s f15, f3, f27, f10, rtz # perform operation
fmadd.s f15, f3, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f3, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f3, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f3, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f3, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f3, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x453fea34987fe36f # load x3 with value 0x453fea34987fe36f
sw x3, 0(x2) # store 0x453fea34987fe36f in memory
flw f28, 0(x2) # load 0x453fea34987fe36f from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmadd.s f5, f24, f28, f8, dyn # perform operation
fmadd.s f5, f24, f28, f8, rdn # perform operation
fmadd.s f5, f24, f28, f8, rmm # perform operation
fmadd.s f5, f24, f28, f8, rne # perform operation
fmadd.s f5, f24, f28, f8, rtz # perform operation
fmadd.s f5, f24, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x16b2be42f15f7392 # load x3 with value 0x16b2be42f15f7392
sw x3, 0(x2) # store 0x16b2be42f15f7392 in memory
flw f13, 0(x2) # load 0x16b2be42f15f7392 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fmadd.s f11, f29, f13, f22, dyn # perform operation
fmadd.s f11, f29, f13, f22, rdn # perform operation
fmadd.s f11, f29, f13, f22, rmm # perform operation
fmadd.s f11, f29, f13, f22, rne # perform operation
fmadd.s f11, f29, f13, f22, rtz # perform operation
fmadd.s f11, f29, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f29, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x77ae184a40f9f317 # load x3 with value 0x77ae184a40f9f317
sw x3, 0(x2) # store 0x77ae184a40f9f317 in memory
flw f11, 0(x2) # load 0x77ae184a40f9f317 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmadd.s f31, f13, f11, f8, dyn # perform operation
fmadd.s f31, f13, f11, f8, rdn # perform operation
fmadd.s f31, f13, f11, f8, rmm # perform operation
fmadd.s f31, f13, f11, f8, rne # perform operation
fmadd.s f31, f13, f11, f8, rtz # perform operation
fmadd.s f31, f13, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f13, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f13, f11, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0xb6b321003ebd12d # load x3 with value 0xb6b321003ebd12d
sw x3, 0(x2) # store 0xb6b321003ebd12d in memory
flw f31, 0(x2) # load 0xb6b321003ebd12d from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmadd.s f15, f10, f31, f5, dyn # perform operation
fmadd.s f15, f10, f31, f5, rdn # perform operation
fmadd.s f15, f10, f31, f5, rmm # perform operation
fmadd.s f15, f10, f31, f5, rne # perform operation
fmadd.s f15, f10, f31, f5, rtz # perform operation
fmadd.s f15, f10, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x8a074b60bdf90aef # load x3 with value 0x8a074b60bdf90aef
sw x3, 0(x2) # store 0x8a074b60bdf90aef in memory
flw f14, 0(x2) # load 0x8a074b60bdf90aef from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fmadd.s f2, f23, f14, f16, dyn # perform operation
fmadd.s f2, f23, f14, f16, rdn # perform operation
fmadd.s f2, f23, f14, f16, rmm # perform operation
fmadd.s f2, f23, f14, f16, rne # perform operation
fmadd.s f2, f23, f14, f16, rtz # perform operation
fmadd.s f2, f23, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f23, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f23, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xc0ff42c3e694ec55 # load x3 with value 0xc0ff42c3e694ec55
sw x3, 0(x2) # store 0xc0ff42c3e694ec55 in memory
flw f28, 0(x2) # load 0xc0ff42c3e694ec55 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fmadd.s f13, f23, f28, f20, dyn # perform operation
fmadd.s f13, f23, f28, f20, rdn # perform operation
fmadd.s f13, f23, f28, f20, rmm # perform operation
fmadd.s f13, f23, f28, f20, rne # perform operation
fmadd.s f13, f23, f28, f20, rtz # perform operation
fmadd.s f13, f23, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f23, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xb3e7eb153dd7826d # load x3 with value 0xb3e7eb153dd7826d
sw x3, 0(x2) # store 0xb3e7eb153dd7826d in memory
flw f17, 0(x2) # load 0xb3e7eb153dd7826d from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmadd.s f13, f25, f17, f9, dyn # perform operation
fmadd.s f13, f25, f17, f9, rdn # perform operation
fmadd.s f13, f25, f17, f9, rmm # perform operation
fmadd.s f13, f25, f17, f9, rne # perform operation
fmadd.s f13, f25, f17, f9, rtz # perform operation
fmadd.s f13, f25, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f25, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f25, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xf88ec1eaec2bd4fc # load x3 with value 0xf88ec1eaec2bd4fc
sw x3, 0(x2) # store 0xf88ec1eaec2bd4fc in memory
flw f26, 0(x2) # load 0xf88ec1eaec2bd4fc from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmadd.s f1, f10, f26, f7, dyn # perform operation
fmadd.s f1, f10, f26, f7, rdn # perform operation
fmadd.s f1, f10, f26, f7, rmm # perform operation
fmadd.s f1, f10, f26, f7, rne # perform operation
fmadd.s f1, f10, f26, f7, rtz # perform operation
fmadd.s f1, f10, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f10, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f10, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x1443665dc0e4fc31 # load x3 with value 0x1443665dc0e4fc31
sw x3, 0(x2) # store 0x1443665dc0e4fc31 in memory
flw f10, 0(x2) # load 0x1443665dc0e4fc31 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmadd.s f25, f2, f10, f29, dyn # perform operation
fmadd.s f25, f2, f10, f29, rdn # perform operation
fmadd.s f25, f2, f10, f29, rmm # perform operation
fmadd.s f25, f2, f10, f29, rne # perform operation
fmadd.s f25, f2, f10, f29, rtz # perform operation
fmadd.s f25, f2, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xfd0a66d7ef5adf49 # load x3 with value 0xfd0a66d7ef5adf49
sw x3, 0(x2) # store 0xfd0a66d7ef5adf49 in memory
flw f10, 0(x2) # load 0xfd0a66d7ef5adf49 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f9, f2, f10, f18, dyn # perform operation
fmadd.s f9, f2, f10, f18, rdn # perform operation
fmadd.s f9, f2, f10, f18, rmm # perform operation
fmadd.s f9, f2, f10, f18, rne # perform operation
fmadd.s f9, f2, f10, f18, rtz # perform operation
fmadd.s f9, f2, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f10, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x9617a6fbe5695022 # load x3 with value 0x9617a6fbe5695022
sw x3, 0(x2) # store 0x9617a6fbe5695022 in memory
flw f15, 0(x2) # load 0x9617a6fbe5695022 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f23, f27, f15, f19, dyn # perform operation
fmadd.s f23, f27, f15, f19, rdn # perform operation
fmadd.s f23, f27, f15, f19, rmm # perform operation
fmadd.s f23, f27, f15, f19, rne # perform operation
fmadd.s f23, f27, f15, f19, rtz # perform operation
fmadd.s f23, f27, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f27, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f27, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x64ac327c0074848b # load x3 with value 0x64ac327c0074848b
sw x3, 0(x2) # store 0x64ac327c0074848b in memory
flw f3, 0(x2) # load 0x64ac327c0074848b from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmadd.s f7, f10, f3, f8, dyn # perform operation
fmadd.s f7, f10, f3, f8, rdn # perform operation
fmadd.s f7, f10, f3, f8, rmm # perform operation
fmadd.s f7, f10, f3, f8, rne # perform operation
fmadd.s f7, f10, f3, f8, rtz # perform operation
fmadd.s f7, f10, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xaa15572b974b7177 # load x3 with value 0xaa15572b974b7177
sw x3, 0(x2) # store 0xaa15572b974b7177 in memory
flw f20, 0(x2) # load 0xaa15572b974b7177 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmadd.s f29, f23, f20, f1, dyn # perform operation
fmadd.s f29, f23, f20, f1, rdn # perform operation
fmadd.s f29, f23, f20, f1, rmm # perform operation
fmadd.s f29, f23, f20, f1, rne # perform operation
fmadd.s f29, f23, f20, f1, rtz # perform operation
fmadd.s f29, f23, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f23, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f23, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xa94f3be445fd43d5 # load x3 with value 0xa94f3be445fd43d5
sw x3, 0(x2) # store 0xa94f3be445fd43d5 in memory
flw f13, 0(x2) # load 0xa94f3be445fd43d5 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmadd.s f2, f31, f13, f24, dyn # perform operation
fmadd.s f2, f31, f13, f24, rdn # perform operation
fmadd.s f2, f31, f13, f24, rmm # perform operation
fmadd.s f2, f31, f13, f24, rne # perform operation
fmadd.s f2, f31, f13, f24, rtz # perform operation
fmadd.s f2, f31, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x2b6cf2789951d719 # load x3 with value 0x2b6cf2789951d719
sw x3, 0(x2) # store 0x2b6cf2789951d719 in memory
flw f5, 0(x2) # load 0x2b6cf2789951d719 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fmadd.s f13, f18, f5, f2, dyn # perform operation
fmadd.s f13, f18, f5, f2, rdn # perform operation
fmadd.s f13, f18, f5, f2, rmm # perform operation
fmadd.s f13, f18, f5, f2, rne # perform operation
fmadd.s f13, f18, f5, f2, rtz # perform operation
fmadd.s f13, f18, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xecb67d58628d625c # load x3 with value 0xecb67d58628d625c
sw x3, 0(x2) # store 0xecb67d58628d625c in memory
flw f11, 0(x2) # load 0xecb67d58628d625c from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmadd.s f1, f2, f11, f7, dyn # perform operation
fmadd.s f1, f2, f11, f7, rdn # perform operation
fmadd.s f1, f2, f11, f7, rmm # perform operation
fmadd.s f1, f2, f11, f7, rne # perform operation
fmadd.s f1, f2, f11, f7, rtz # perform operation
fmadd.s f1, f2, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xf1d89a06c884338f # load x3 with value 0xf1d89a06c884338f
sw x3, 0(x2) # store 0xf1d89a06c884338f in memory
flw f9, 0(x2) # load 0xf1d89a06c884338f from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f6, f2, f9, f1, dyn # perform operation
fmadd.s f6, f2, f9, f1, rdn # perform operation
fmadd.s f6, f2, f9, f1, rmm # perform operation
fmadd.s f6, f2, f9, f1, rne # perform operation
fmadd.s f6, f2, f9, f1, rtz # perform operation
fmadd.s f6, f2, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f2, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x9bf594aa63933f3b # load x3 with value 0x9bf594aa63933f3b
sw x3, 0(x2) # store 0x9bf594aa63933f3b in memory
flw f24, 0(x2) # load 0x9bf594aa63933f3b from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmadd.s f13, f19, f24, f9, dyn # perform operation
fmadd.s f13, f19, f24, f9, rdn # perform operation
fmadd.s f13, f19, f24, f9, rmm # perform operation
fmadd.s f13, f19, f24, f9, rne # perform operation
fmadd.s f13, f19, f24, f9, rtz # perform operation
fmadd.s f13, f19, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x54a9b0c38299921b # load x3 with value 0x54a9b0c38299921b
sw x3, 0(x2) # store 0x54a9b0c38299921b in memory
flw f16, 0(x2) # load 0x54a9b0c38299921b from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmadd.s f3, f6, f16, f23, dyn # perform operation
fmadd.s f3, f6, f16, f23, rdn # perform operation
fmadd.s f3, f6, f16, f23, rmm # perform operation
fmadd.s f3, f6, f16, f23, rne # perform operation
fmadd.s f3, f6, f16, f23, rtz # perform operation
fmadd.s f3, f6, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x8e3e3f174f72506e # load x3 with value 0x8e3e3f174f72506e
sw x3, 0(x2) # store 0x8e3e3f174f72506e in memory
flw f19, 0(x2) # load 0x8e3e3f174f72506e from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmadd.s f12, f31, f19, f13, dyn # perform operation
fmadd.s f12, f31, f19, f13, rdn # perform operation
fmadd.s f12, f31, f19, f13, rmm # perform operation
fmadd.s f12, f31, f19, f13, rne # perform operation
fmadd.s f12, f31, f19, f13, rtz # perform operation
fmadd.s f12, f31, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x9608e18be549874e # load x3 with value 0x9608e18be549874e
sw x3, 0(x2) # store 0x9608e18be549874e in memory
flw f24, 0(x2) # load 0x9608e18be549874e from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fmadd.s f17, f28, f24, f9, dyn # perform operation
fmadd.s f17, f28, f24, f9, rdn # perform operation
fmadd.s f17, f28, f24, f9, rmm # perform operation
fmadd.s f17, f28, f24, f9, rne # perform operation
fmadd.s f17, f28, f24, f9, rtz # perform operation
fmadd.s f17, f28, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x663ea1f34b1a7474 # load x3 with value 0x663ea1f34b1a7474
sw x3, 0(x2) # store 0x663ea1f34b1a7474 in memory
flw f25, 0(x2) # load 0x663ea1f34b1a7474 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmadd.s f13, f14, f25, f6, dyn # perform operation
fmadd.s f13, f14, f25, f6, rdn # perform operation
fmadd.s f13, f14, f25, f6, rmm # perform operation
fmadd.s f13, f14, f25, f6, rne # perform operation
fmadd.s f13, f14, f25, f6, rtz # perform operation
fmadd.s f13, f14, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xfd9ca3b420b51361 # load x3 with value 0xfd9ca3b420b51361
sw x3, 0(x2) # store 0xfd9ca3b420b51361 in memory
flw f22, 0(x2) # load 0xfd9ca3b420b51361 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmadd.s f19, f7, f22, f5, dyn # perform operation
fmadd.s f19, f7, f22, f5, rdn # perform operation
fmadd.s f19, f7, f22, f5, rmm # perform operation
fmadd.s f19, f7, f22, f5, rne # perform operation
fmadd.s f19, f7, f22, f5, rtz # perform operation
fmadd.s f19, f7, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x98c9927ff4c679ef # load x3 with value 0x98c9927ff4c679ef
sw x3, 0(x2) # store 0x98c9927ff4c679ef in memory
flw f20, 0(x2) # load 0x98c9927ff4c679ef from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmadd.s f14, f25, f20, f31, dyn # perform operation
fmadd.s f14, f25, f20, f31, rdn # perform operation
fmadd.s f14, f25, f20, f31, rmm # perform operation
fmadd.s f14, f25, f20, f31, rne # perform operation
fmadd.s f14, f25, f20, f31, rtz # perform operation
fmadd.s f14, f25, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0xa71f9c14ef0be558 # load x3 with value 0xa71f9c14ef0be558
sw x3, 0(x2) # store 0xa71f9c14ef0be558 in memory
flw f11, 0(x2) # load 0xa71f9c14ef0be558 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmadd.s f6, f1, f11, f7, dyn # perform operation
fmadd.s f6, f1, f11, f7, rdn # perform operation
fmadd.s f6, f1, f11, f7, rmm # perform operation
fmadd.s f6, f1, f11, f7, rne # perform operation
fmadd.s f6, f1, f11, f7, rtz # perform operation
fmadd.s f6, f1, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0xd15b016bea77b70a # load x3 with value 0xd15b016bea77b70a
sw x3, 0(x2) # store 0xd15b016bea77b70a in memory
flw f11, 0(x2) # load 0xd15b016bea77b70a from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmadd.s f27, f1, f11, f25, dyn # perform operation
fmadd.s f27, f1, f11, f25, rdn # perform operation
fmadd.s f27, f1, f11, f25, rmm # perform operation
fmadd.s f27, f1, f11, f25, rne # perform operation
fmadd.s f27, f1, f11, f25, rtz # perform operation
fmadd.s f27, f1, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f11, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0xf4bbdf6ffdf912bc # load x3 with value 0xf4bbdf6ffdf912bc
sw x3, 0(x2) # store 0xf4bbdf6ffdf912bc in memory
flw f17, 0(x2) # load 0xf4bbdf6ffdf912bc from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fmadd.s f25, f6, f17, f23, dyn # perform operation
fmadd.s f25, f6, f17, f23, rdn # perform operation
fmadd.s f25, f6, f17, f23, rmm # perform operation
fmadd.s f25, f6, f17, f23, rne # perform operation
fmadd.s f25, f6, f17, f23, rtz # perform operation
fmadd.s f25, f6, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x5e163dfe2888c43f # load x3 with value 0x5e163dfe2888c43f
sw x3, 0(x2) # store 0x5e163dfe2888c43f in memory
flw f10, 0(x2) # load 0x5e163dfe2888c43f from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fmadd.s f8, f2, f10, f1, dyn # perform operation
fmadd.s f8, f2, f10, f1, rdn # perform operation
fmadd.s f8, f2, f10, f1, rmm # perform operation
fmadd.s f8, f2, f10, f1, rne # perform operation
fmadd.s f8, f2, f10, f1, rtz # perform operation
fmadd.s f8, f2, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xe16087d76c959dd3 # load x3 with value 0xe16087d76c959dd3
sw x3, 0(x2) # store 0xe16087d76c959dd3 in memory
flw f25, 0(x2) # load 0xe16087d76c959dd3 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmadd.s f1, f14, f25, f16, dyn # perform operation
fmadd.s f1, f14, f25, f16, rdn # perform operation
fmadd.s f1, f14, f25, f16, rmm # perform operation
fmadd.s f1, f14, f25, f16, rne # perform operation
fmadd.s f1, f14, f25, f16, rtz # perform operation
fmadd.s f1, f14, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x49e55fcd7869bf32 # load x3 with value 0x49e55fcd7869bf32
sw x3, 0(x2) # store 0x49e55fcd7869bf32 in memory
flw f22, 0(x2) # load 0x49e55fcd7869bf32 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
fmadd.s f2, f19, f22, f28, dyn # perform operation
fmadd.s f2, f19, f22, f28, rdn # perform operation
fmadd.s f2, f19, f22, f28, rmm # perform operation
fmadd.s f2, f19, f22, f28, rne # perform operation
fmadd.s f2, f19, f22, f28, rtz # perform operation
fmadd.s f2, f19, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f19, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f19, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f19, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f19, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f19, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xcdb3dcaf2fc72538 # load x3 with value 0xcdb3dcaf2fc72538
sw x3, 0(x2) # store 0xcdb3dcaf2fc72538 in memory
flw f24, 0(x2) # load 0xcdb3dcaf2fc72538 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmadd.s f16, f3, f24, f9, dyn # perform operation
fmadd.s f16, f3, f24, f9, rdn # perform operation
fmadd.s f16, f3, f24, f9, rmm # perform operation
fmadd.s f16, f3, f24, f9, rne # perform operation
fmadd.s f16, f3, f24, f9, rtz # perform operation
fmadd.s f16, f3, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x4517384e9d6a84d0 # load x3 with value 0x4517384e9d6a84d0
sw x3, 0(x2) # store 0x4517384e9d6a84d0 in memory
flw f2, 0(x2) # load 0x4517384e9d6a84d0 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmadd.s f3, f26, f2, f7, dyn # perform operation
fmadd.s f3, f26, f2, f7, rdn # perform operation
fmadd.s f3, f26, f2, f7, rmm # perform operation
fmadd.s f3, f26, f2, f7, rne # perform operation
fmadd.s f3, f26, f2, f7, rtz # perform operation
fmadd.s f3, f26, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f26, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f26, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f26, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f26, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f26, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x6f7654b1db1ddeef # load x3 with value 0x6f7654b1db1ddeef
sw x3, 0(x2) # store 0x6f7654b1db1ddeef in memory
flw f5, 0(x2) # load 0x6f7654b1db1ddeef from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fmadd.s f28, f14, f5, f31, dyn # perform operation
fmadd.s f28, f14, f5, f31, rdn # perform operation
fmadd.s f28, f14, f5, f31, rmm # perform operation
fmadd.s f28, f14, f5, f31, rne # perform operation
fmadd.s f28, f14, f5, f31, rtz # perform operation
fmadd.s f28, f14, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f5, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x1d0c09ebf35ba7c1 # load x3 with value 0x1d0c09ebf35ba7c1
sw x3, 0(x2) # store 0x1d0c09ebf35ba7c1 in memory
flw f7, 0(x2) # load 0x1d0c09ebf35ba7c1 from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmadd.s f23, f17, f7, f28, dyn # perform operation
fmadd.s f23, f17, f7, f28, rdn # perform operation
fmadd.s f23, f17, f7, f28, rmm # perform operation
fmadd.s f23, f17, f7, f28, rne # perform operation
fmadd.s f23, f17, f7, f28, rtz # perform operation
fmadd.s f23, f17, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x1e6fda32e90b96ab # load x3 with value 0x1e6fda32e90b96ab
sw x3, 0(x2) # store 0x1e6fda32e90b96ab in memory
flw f26, 0(x2) # load 0x1e6fda32e90b96ab from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmadd.s f6, f1, f26, f17, dyn # perform operation
fmadd.s f6, f1, f26, f17, rdn # perform operation
fmadd.s f6, f1, f26, f17, rmm # perform operation
fmadd.s f6, f1, f26, f17, rne # perform operation
fmadd.s f6, f1, f26, f17, rtz # perform operation
fmadd.s f6, f1, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xd8eeb55dfcdf0ff9 # load x3 with value 0xd8eeb55dfcdf0ff9
sw x3, 0(x2) # store 0xd8eeb55dfcdf0ff9 in memory
flw f6, 0(x2) # load 0xd8eeb55dfcdf0ff9 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fmadd.s f1, f16, f6, f21, dyn # perform operation
fmadd.s f1, f16, f6, f21, rdn # perform operation
fmadd.s f1, f16, f6, f21, rmm # perform operation
fmadd.s f1, f16, f6, f21, rne # perform operation
fmadd.s f1, f16, f6, f21, rtz # perform operation
fmadd.s f1, f16, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f16, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xdda69ed9171c7422 # load x3 with value 0xdda69ed9171c7422
sw x3, 0(x2) # store 0xdda69ed9171c7422 in memory
flw f7, 0(x2) # load 0xdda69ed9171c7422 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmadd.s f25, f16, f7, f23, dyn # perform operation
fmadd.s f25, f16, f7, f23, rdn # perform operation
fmadd.s f25, f16, f7, f23, rmm # perform operation
fmadd.s f25, f16, f7, f23, rne # perform operation
fmadd.s f25, f16, f7, f23, rtz # perform operation
fmadd.s f25, f16, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f16, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f16, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x9e3d8384a58b99f9 # load x3 with value 0x9e3d8384a58b99f9
sw x3, 0(x2) # store 0x9e3d8384a58b99f9 in memory
flw f6, 0(x2) # load 0x9e3d8384a58b99f9 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fmadd.s f23, f2, f6, f29, dyn # perform operation
fmadd.s f23, f2, f6, f29, rdn # perform operation
fmadd.s f23, f2, f6, f29, rmm # perform operation
fmadd.s f23, f2, f6, f29, rne # perform operation
fmadd.s f23, f2, f6, f29, rtz # perform operation
fmadd.s f23, f2, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f2, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x1077c0f817bfd41e # load x3 with value 0x1077c0f817bfd41e
sw x3, 0(x2) # store 0x1077c0f817bfd41e in memory
flw f11, 0(x2) # load 0x1077c0f817bfd41e from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmadd.s f29, f28, f11, f26, dyn # perform operation
fmadd.s f29, f28, f11, f26, rdn # perform operation
fmadd.s f29, f28, f11, f26, rmm # perform operation
fmadd.s f29, f28, f11, f26, rne # perform operation
fmadd.s f29, f28, f11, f26, rtz # perform operation
fmadd.s f29, f28, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f28, f11, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xd02f9423d46481a1 # load x3 with value 0xd02f9423d46481a1
sw x3, 0(x2) # store 0xd02f9423d46481a1 in memory
flw f21, 0(x2) # load 0xd02f9423d46481a1 from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmadd.s f10, f17, f21, f16, dyn # perform operation
fmadd.s f10, f17, f21, f16, rdn # perform operation
fmadd.s f10, f17, f21, f16, rmm # perform operation
fmadd.s f10, f17, f21, f16, rne # perform operation
fmadd.s f10, f17, f21, f16, rtz # perform operation
fmadd.s f10, f17, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f21, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x9f35ee56a80ddfc # load x3 with value 0x9f35ee56a80ddfc
sw x3, 0(x2) # store 0x9f35ee56a80ddfc in memory
flw f23, 0(x2) # load 0x9f35ee56a80ddfc from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fmadd.s f9, f24, f23, f14, dyn # perform operation
fmadd.s f9, f24, f23, f14, rdn # perform operation
fmadd.s f9, f24, f23, f14, rmm # perform operation
fmadd.s f9, f24, f23, f14, rne # perform operation
fmadd.s f9, f24, f23, f14, rtz # perform operation
fmadd.s f9, f24, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xba65ac2843981b89 # load x3 with value 0xba65ac2843981b89
sw x3, 0(x2) # store 0xba65ac2843981b89 in memory
flw f22, 0(x2) # load 0xba65ac2843981b89 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
fmadd.s f27, f14, f22, f8, dyn # perform operation
fmadd.s f27, f14, f22, f8, rdn # perform operation
fmadd.s f27, f14, f22, f8, rmm # perform operation
fmadd.s f27, f14, f22, f8, rne # perform operation
fmadd.s f27, f14, f22, f8, rtz # perform operation
fmadd.s f27, f14, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x79de636729855b5b # load x3 with value 0x79de636729855b5b
sw x3, 0(x2) # store 0x79de636729855b5b in memory
flw f2, 0(x2) # load 0x79de636729855b5b from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fmadd.s f27, f25, f2, f11, dyn # perform operation
fmadd.s f27, f25, f2, f11, rdn # perform operation
fmadd.s f27, f25, f2, f11, rmm # perform operation
fmadd.s f27, f25, f2, f11, rne # perform operation
fmadd.s f27, f25, f2, f11, rtz # perform operation
fmadd.s f27, f25, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xd008599d34ca1cf6 # load x3 with value 0xd008599d34ca1cf6
sw x3, 0(x2) # store 0xd008599d34ca1cf6 in memory
flw f25, 0(x2) # load 0xd008599d34ca1cf6 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmadd.s f10, f15, f25, f29, dyn # perform operation
fmadd.s f10, f15, f25, f29, rdn # perform operation
fmadd.s f10, f15, f25, f29, rmm # perform operation
fmadd.s f10, f15, f25, f29, rne # perform operation
fmadd.s f10, f15, f25, f29, rtz # perform operation
fmadd.s f10, f15, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f15, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f15, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xbd0b728620a4d3b7 # load x3 with value 0xbd0b728620a4d3b7
sw x3, 0(x2) # store 0xbd0b728620a4d3b7 in memory
flw f17, 0(x2) # load 0xbd0b728620a4d3b7 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f8, f19, f17, f24, dyn # perform operation
fmadd.s f8, f19, f17, f24, rdn # perform operation
fmadd.s f8, f19, f17, f24, rmm # perform operation
fmadd.s f8, f19, f17, f24, rne # perform operation
fmadd.s f8, f19, f17, f24, rtz # perform operation
fmadd.s f8, f19, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x56092ec93171ee33 # load x3 with value 0x56092ec93171ee33
sw x3, 0(x2) # store 0x56092ec93171ee33 in memory
flw f23, 0(x2) # load 0x56092ec93171ee33 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fmadd.s f9, f30, f23, f10, dyn # perform operation
fmadd.s f9, f30, f23, f10, rdn # perform operation
fmadd.s f9, f30, f23, f10, rmm # perform operation
fmadd.s f9, f30, f23, f10, rne # perform operation
fmadd.s f9, f30, f23, f10, rtz # perform operation
fmadd.s f9, f30, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xa05eac171129cf82 # load x3 with value 0xa05eac171129cf82
sw x3, 0(x2) # store 0xa05eac171129cf82 in memory
flw f15, 0(x2) # load 0xa05eac171129cf82 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmadd.s f10, f24, f15, f19, dyn # perform operation
fmadd.s f10, f24, f15, f19, rdn # perform operation
fmadd.s f10, f24, f15, f19, rmm # perform operation
fmadd.s f10, f24, f15, f19, rne # perform operation
fmadd.s f10, f24, f15, f19, rtz # perform operation
fmadd.s f10, f24, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x126a6d5804a6224e # load x3 with value 0x126a6d5804a6224e
sw x3, 0(x2) # store 0x126a6d5804a6224e in memory
flw f25, 0(x2) # load 0x126a6d5804a6224e from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fmadd.s f11, f24, f25, f12, dyn # perform operation
fmadd.s f11, f24, f25, f12, rdn # perform operation
fmadd.s f11, f24, f25, f12, rmm # perform operation
fmadd.s f11, f24, f25, f12, rne # perform operation
fmadd.s f11, f24, f25, f12, rtz # perform operation
fmadd.s f11, f24, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x79670bd9e9a5b384 # load x3 with value 0x79670bd9e9a5b384
sw x3, 0(x2) # store 0x79670bd9e9a5b384 in memory
flw f1, 0(x2) # load 0x79670bd9e9a5b384 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fmadd.s f5, f18, f1, f9, dyn # perform operation
fmadd.s f5, f18, f1, f9, rdn # perform operation
fmadd.s f5, f18, f1, f9, rmm # perform operation
fmadd.s f5, f18, f1, f9, rne # perform operation
fmadd.s f5, f18, f1, f9, rtz # perform operation
fmadd.s f5, f18, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0xbaffe511bbd2fdb9 # load x3 with value 0xbaffe511bbd2fdb9
sw x3, 0(x2) # store 0xbaffe511bbd2fdb9 in memory
flw f14, 0(x2) # load 0xbaffe511bbd2fdb9 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fmadd.s f31, f12, f14, f27, dyn # perform operation
fmadd.s f31, f12, f14, f27, rdn # perform operation
fmadd.s f31, f12, f14, f27, rmm # perform operation
fmadd.s f31, f12, f14, f27, rne # perform operation
fmadd.s f31, f12, f14, f27, rtz # perform operation
fmadd.s f31, f12, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f12, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xe61c4311b5a0a417 # load x3 with value 0xe61c4311b5a0a417
sw x3, 0(x2) # store 0xe61c4311b5a0a417 in memory
flw f20, 0(x2) # load 0xe61c4311b5a0a417 from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f27, f22, f20, f31, dyn # perform operation
fmadd.s f27, f22, f20, f31, rdn # perform operation
fmadd.s f27, f22, f20, f31, rmm # perform operation
fmadd.s f27, f22, f20, f31, rne # perform operation
fmadd.s f27, f22, f20, f31, rtz # perform operation
fmadd.s f27, f22, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f22, f20, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xfe53ff5069048a81 # load x3 with value 0xfe53ff5069048a81
sw x3, 0(x2) # store 0xfe53ff5069048a81 in memory
flw f29, 0(x2) # load 0xfe53ff5069048a81 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmadd.s f30, f9, f29, f8, dyn # perform operation
fmadd.s f30, f9, f29, f8, rdn # perform operation
fmadd.s f30, f9, f29, f8, rmm # perform operation
fmadd.s f30, f9, f29, f8, rne # perform operation
fmadd.s f30, f9, f29, f8, rtz # perform operation
fmadd.s f30, f9, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f9, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xb0e1233f3567195e # load x3 with value 0xb0e1233f3567195e
sw x3, 0(x2) # store 0xb0e1233f3567195e in memory
flw f25, 0(x2) # load 0xb0e1233f3567195e from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmadd.s f29, f31, f25, f16, dyn # perform operation
fmadd.s f29, f31, f25, f16, rdn # perform operation
fmadd.s f29, f31, f25, f16, rmm # perform operation
fmadd.s f29, f31, f25, f16, rne # perform operation
fmadd.s f29, f31, f25, f16, rtz # perform operation
fmadd.s f29, f31, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xced5e1f5bbdc9a42 # load x3 with value 0xced5e1f5bbdc9a42
sw x3, 0(x2) # store 0xced5e1f5bbdc9a42 in memory
flw f13, 0(x2) # load 0xced5e1f5bbdc9a42 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmadd.s f18, f22, f13, f7, dyn # perform operation
fmadd.s f18, f22, f13, f7, rdn # perform operation
fmadd.s f18, f22, f13, f7, rmm # perform operation
fmadd.s f18, f22, f13, f7, rne # perform operation
fmadd.s f18, f22, f13, f7, rtz # perform operation
fmadd.s f18, f22, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f22, f13, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x657e62a180714edc # load x3 with value 0x657e62a180714edc
sw x3, 0(x2) # store 0x657e62a180714edc in memory
flw f21, 0(x2) # load 0x657e62a180714edc from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fmadd.s f15, f12, f21, f16, dyn # perform operation
fmadd.s f15, f12, f21, f16, rdn # perform operation
fmadd.s f15, f12, f21, f16, rmm # perform operation
fmadd.s f15, f12, f21, f16, rne # perform operation
fmadd.s f15, f12, f21, f16, rtz # perform operation
fmadd.s f15, f12, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f21, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xe41cea90ee6e773b # load x3 with value 0xe41cea90ee6e773b
sw x3, 0(x2) # store 0xe41cea90ee6e773b in memory
flw f28, 0(x2) # load 0xe41cea90ee6e773b from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmadd.s f23, f19, f28, f22, dyn # perform operation
fmadd.s f23, f19, f28, f22, rdn # perform operation
fmadd.s f23, f19, f28, f22, rmm # perform operation
fmadd.s f23, f19, f28, f22, rne # perform operation
fmadd.s f23, f19, f28, f22, rtz # perform operation
fmadd.s f23, f19, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x66441dad5b60a024 # load x3 with value 0x66441dad5b60a024
sw x3, 0(x2) # store 0x66441dad5b60a024 in memory
flw f1, 0(x2) # load 0x66441dad5b60a024 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmadd.s f26, f7, f1, f15, dyn # perform operation
fmadd.s f26, f7, f1, f15, rdn # perform operation
fmadd.s f26, f7, f1, f15, rmm # perform operation
fmadd.s f26, f7, f1, f15, rne # perform operation
fmadd.s f26, f7, f1, f15, rtz # perform operation
fmadd.s f26, f7, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f7, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f7, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x6edc5fca5a79e587 # load x3 with value 0x6edc5fca5a79e587
sw x3, 0(x2) # store 0x6edc5fca5a79e587 in memory
flw f11, 0(x2) # load 0x6edc5fca5a79e587 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fmadd.s f27, f30, f11, f22, dyn # perform operation
fmadd.s f27, f30, f11, f22, rdn # perform operation
fmadd.s f27, f30, f11, f22, rmm # perform operation
fmadd.s f27, f30, f11, f22, rne # perform operation
fmadd.s f27, f30, f11, f22, rtz # perform operation
fmadd.s f27, f30, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xdd3e5c95f9909030 # load x3 with value 0xdd3e5c95f9909030
sw x3, 0(x2) # store 0xdd3e5c95f9909030 in memory
flw f21, 0(x2) # load 0xdd3e5c95f9909030 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmadd.s f5, f3, f21, f11, dyn # perform operation
fmadd.s f5, f3, f21, f11, rdn # perform operation
fmadd.s f5, f3, f21, f11, rmm # perform operation
fmadd.s f5, f3, f21, f11, rne # perform operation
fmadd.s f5, f3, f21, f11, rtz # perform operation
fmadd.s f5, f3, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x3545ce699e51eecf # load x3 with value 0x3545ce699e51eecf
sw x3, 0(x2) # store 0x3545ce699e51eecf in memory
flw f15, 0(x2) # load 0x3545ce699e51eecf from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fmadd.s f11, f12, f15, f23, dyn # perform operation
fmadd.s f11, f12, f15, f23, rdn # perform operation
fmadd.s f11, f12, f15, f23, rmm # perform operation
fmadd.s f11, f12, f15, f23, rne # perform operation
fmadd.s f11, f12, f15, f23, rtz # perform operation
fmadd.s f11, f12, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f12, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f12, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x5ded4058525ae211 # load x3 with value 0x5ded4058525ae211
sw x3, 0(x2) # store 0x5ded4058525ae211 in memory
flw f27, 0(x2) # load 0x5ded4058525ae211 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fmadd.s f11, f26, f27, f15, dyn # perform operation
fmadd.s f11, f26, f27, f15, rdn # perform operation
fmadd.s f11, f26, f27, f15, rmm # perform operation
fmadd.s f11, f26, f27, f15, rne # perform operation
fmadd.s f11, f26, f27, f15, rtz # perform operation
fmadd.s f11, f26, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f26, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f26, f27, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x473ef6d18abbb5fb # load x3 with value 0x473ef6d18abbb5fb
sw x3, 0(x2) # store 0x473ef6d18abbb5fb in memory
flw f20, 0(x2) # load 0x473ef6d18abbb5fb from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmadd.s f11, f24, f20, f18, dyn # perform operation
fmadd.s f11, f24, f20, f18, rdn # perform operation
fmadd.s f11, f24, f20, f18, rmm # perform operation
fmadd.s f11, f24, f20, f18, rne # perform operation
fmadd.s f11, f24, f20, f18, rtz # perform operation
fmadd.s f11, f24, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x8bdf958e17dd8dd3 # load x3 with value 0x8bdf958e17dd8dd3
sw x3, 0(x2) # store 0x8bdf958e17dd8dd3 in memory
flw f11, 0(x2) # load 0x8bdf958e17dd8dd3 from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmadd.s f15, f16, f11, f22, dyn # perform operation
fmadd.s f15, f16, f11, f22, rdn # perform operation
fmadd.s f15, f16, f11, f22, rmm # perform operation
fmadd.s f15, f16, f11, f22, rne # perform operation
fmadd.s f15, f16, f11, f22, rtz # perform operation
fmadd.s f15, f16, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x4698bd3bd0e590ff # load x3 with value 0x4698bd3bd0e590ff
sw x3, 0(x2) # store 0x4698bd3bd0e590ff in memory
flw f24, 0(x2) # load 0x4698bd3bd0e590ff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fmadd.s f5, f16, f24, f21, dyn # perform operation
fmadd.s f5, f16, f24, f21, rdn # perform operation
fmadd.s f5, f16, f24, f21, rmm # perform operation
fmadd.s f5, f16, f24, f21, rne # perform operation
fmadd.s f5, f16, f24, f21, rtz # perform operation
fmadd.s f5, f16, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f16, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f16, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x396f0e9baa23d20e # load x3 with value 0x396f0e9baa23d20e
sw x3, 0(x2) # store 0x396f0e9baa23d20e in memory
flw f10, 0(x2) # load 0x396f0e9baa23d20e from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmadd.s f25, f9, f10, f3, dyn # perform operation
fmadd.s f25, f9, f10, f3, rdn # perform operation
fmadd.s f25, f9, f10, f3, rmm # perform operation
fmadd.s f25, f9, f10, f3, rne # perform operation
fmadd.s f25, f9, f10, f3, rtz # perform operation
fmadd.s f25, f9, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f9, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f9, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f9, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f9, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f9, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x9c358b1652f4642c # load x3 with value 0x9c358b1652f4642c
sw x3, 0(x2) # store 0x9c358b1652f4642c in memory
flw f19, 0(x2) # load 0x9c358b1652f4642c from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fmadd.s f13, f14, f19, f2, dyn # perform operation
fmadd.s f13, f14, f19, f2, rdn # perform operation
fmadd.s f13, f14, f19, f2, rmm # perform operation
fmadd.s f13, f14, f19, f2, rne # perform operation
fmadd.s f13, f14, f19, f2, rtz # perform operation
fmadd.s f13, f14, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x9b2ce90b707b7ba0 # load x3 with value 0x9b2ce90b707b7ba0
sw x3, 0(x2) # store 0x9b2ce90b707b7ba0 in memory
flw f7, 0(x2) # load 0x9b2ce90b707b7ba0 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fmadd.s f19, f18, f7, f2, dyn # perform operation
fmadd.s f19, f18, f7, f2, rdn # perform operation
fmadd.s f19, f18, f7, f2, rmm # perform operation
fmadd.s f19, f18, f7, f2, rne # perform operation
fmadd.s f19, f18, f7, f2, rtz # perform operation
fmadd.s f19, f18, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f18, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f18, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x9f72a8b68d681a97 # load x3 with value 0x9f72a8b68d681a97
sw x3, 0(x2) # store 0x9f72a8b68d681a97 in memory
flw f25, 0(x2) # load 0x9f72a8b68d681a97 from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmadd.s f18, f16, f25, f26, dyn # perform operation
fmadd.s f18, f16, f25, f26, rdn # perform operation
fmadd.s f18, f16, f25, f26, rmm # perform operation
fmadd.s f18, f16, f25, f26, rne # perform operation
fmadd.s f18, f16, f25, f26, rtz # perform operation
fmadd.s f18, f16, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x32bd153a03a5ead0 # load x3 with value 0x32bd153a03a5ead0
sw x3, 0(x2) # store 0x32bd153a03a5ead0 in memory
flw f13, 0(x2) # load 0x32bd153a03a5ead0 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmadd.s f28, f30, f13, f12, dyn # perform operation
fmadd.s f28, f30, f13, f12, rdn # perform operation
fmadd.s f28, f30, f13, f12, rmm # perform operation
fmadd.s f28, f30, f13, f12, rne # perform operation
fmadd.s f28, f30, f13, f12, rtz # perform operation
fmadd.s f28, f30, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f30, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x2fdd616e6daaacd5 # load x3 with value 0x2fdd616e6daaacd5
sw x3, 0(x2) # store 0x2fdd616e6daaacd5 in memory
flw f31, 0(x2) # load 0x2fdd616e6daaacd5 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmadd.s f7, f22, f31, f25, dyn # perform operation
fmadd.s f7, f22, f31, f25, rdn # perform operation
fmadd.s f7, f22, f31, f25, rmm # perform operation
fmadd.s f7, f22, f31, f25, rne # perform operation
fmadd.s f7, f22, f31, f25, rtz # perform operation
fmadd.s f7, f22, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f31, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xeee0f7d9514df59c # load x3 with value 0xeee0f7d9514df59c
sw x3, 0(x2) # store 0xeee0f7d9514df59c in memory
flw f12, 0(x2) # load 0xeee0f7d9514df59c from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fmadd.s f18, f23, f12, f28, dyn # perform operation
fmadd.s f18, f23, f12, f28, rdn # perform operation
fmadd.s f18, f23, f12, f28, rmm # perform operation
fmadd.s f18, f23, f12, f28, rne # perform operation
fmadd.s f18, f23, f12, f28, rtz # perform operation
fmadd.s f18, f23, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xdca3f1b0f8621f29 # load x3 with value 0xdca3f1b0f8621f29
sw x3, 0(x2) # store 0xdca3f1b0f8621f29 in memory
flw f27, 0(x2) # load 0xdca3f1b0f8621f29 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fmadd.s f17, f2, f27, f10, dyn # perform operation
fmadd.s f17, f2, f27, f10, rdn # perform operation
fmadd.s f17, f2, f27, f10, rmm # perform operation
fmadd.s f17, f2, f27, f10, rne # perform operation
fmadd.s f17, f2, f27, f10, rtz # perform operation
fmadd.s f17, f2, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x27ea8469f517b76c # load x3 with value 0x27ea8469f517b76c
sw x3, 0(x2) # store 0x27ea8469f517b76c in memory
flw f9, 0(x2) # load 0x27ea8469f517b76c from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f20, f23, f9, f18, dyn # perform operation
fmadd.s f20, f23, f9, f18, rdn # perform operation
fmadd.s f20, f23, f9, f18, rmm # perform operation
fmadd.s f20, f23, f9, f18, rne # perform operation
fmadd.s f20, f23, f9, f18, rtz # perform operation
fmadd.s f20, f23, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x4f65596675c8586 # load x3 with value 0x4f65596675c8586
sw x3, 0(x2) # store 0x4f65596675c8586 in memory
flw f19, 0(x2) # load 0x4f65596675c8586 from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmadd.s f5, f24, f19, f17, dyn # perform operation
fmadd.s f5, f24, f19, f17, rdn # perform operation
fmadd.s f5, f24, f19, f17, rmm # perform operation
fmadd.s f5, f24, f19, f17, rne # perform operation
fmadd.s f5, f24, f19, f17, rtz # perform operation
fmadd.s f5, f24, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x96019c571e80bfe3 # load x3 with value 0x96019c571e80bfe3
sw x3, 0(x2) # store 0x96019c571e80bfe3 in memory
flw f14, 0(x2) # load 0x96019c571e80bfe3 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmadd.s f26, f12, f14, f10, dyn # perform operation
fmadd.s f26, f12, f14, f10, rdn # perform operation
fmadd.s f26, f12, f14, f10, rmm # perform operation
fmadd.s f26, f12, f14, f10, rne # perform operation
fmadd.s f26, f12, f14, f10, rtz # perform operation
fmadd.s f26, f12, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f12, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f12, f14, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x4fbb6171d0f65b27 # load x3 with value 0x4fbb6171d0f65b27
sw x3, 0(x2) # store 0x4fbb6171d0f65b27 in memory
flw f2, 0(x2) # load 0x4fbb6171d0f65b27 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fmadd.s f23, f6, f2, f29, dyn # perform operation
fmadd.s f23, f6, f2, f29, rdn # perform operation
fmadd.s f23, f6, f2, f29, rmm # perform operation
fmadd.s f23, f6, f2, f29, rne # perform operation
fmadd.s f23, f6, f2, f29, rtz # perform operation
fmadd.s f23, f6, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x2d53ef47d0759945 # load x3 with value 0x2d53ef47d0759945
sw x3, 0(x2) # store 0x2d53ef47d0759945 in memory
flw f21, 0(x2) # load 0x2d53ef47d0759945 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmadd.s f7, f27, f21, f22, dyn # perform operation
fmadd.s f7, f27, f21, f22, rdn # perform operation
fmadd.s f7, f27, f21, f22, rmm # perform operation
fmadd.s f7, f27, f21, f22, rne # perform operation
fmadd.s f7, f27, f21, f22, rtz # perform operation
fmadd.s f7, f27, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0xd4709d10cadd2f6b # load x3 with value 0xd4709d10cadd2f6b
sw x3, 0(x2) # store 0xd4709d10cadd2f6b in memory
flw f19, 0(x2) # load 0xd4709d10cadd2f6b from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmadd.s f18, f24, f19, f9, dyn # perform operation
fmadd.s f18, f24, f19, f9, rdn # perform operation
fmadd.s f18, f24, f19, f9, rmm # perform operation
fmadd.s f18, f24, f19, f9, rne # perform operation
fmadd.s f18, f24, f19, f9, rtz # perform operation
fmadd.s f18, f24, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f24, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f24, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x9cd5ef0247421be3 # load x3 with value 0x9cd5ef0247421be3
sw x3, 0(x2) # store 0x9cd5ef0247421be3 in memory
flw f21, 0(x2) # load 0x9cd5ef0247421be3 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmadd.s f14, f31, f21, f19, dyn # perform operation
fmadd.s f14, f31, f21, f19, rdn # perform operation
fmadd.s f14, f31, f21, f19, rmm # perform operation
fmadd.s f14, f31, f21, f19, rne # perform operation
fmadd.s f14, f31, f21, f19, rtz # perform operation
fmadd.s f14, f31, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f31, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f31, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x3f5781dcb5a6f9d4 # load x3 with value 0x3f5781dcb5a6f9d4
sw x3, 0(x2) # store 0x3f5781dcb5a6f9d4 in memory
flw f16, 0(x2) # load 0x3f5781dcb5a6f9d4 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fmadd.s f24, f25, f16, f11, dyn # perform operation
fmadd.s f24, f25, f16, f11, rdn # perform operation
fmadd.s f24, f25, f16, f11, rmm # perform operation
fmadd.s f24, f25, f16, f11, rne # perform operation
fmadd.s f24, f25, f16, f11, rtz # perform operation
fmadd.s f24, f25, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f25, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f25, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xc660ba754a170282 # load x3 with value 0xc660ba754a170282
sw x3, 0(x2) # store 0xc660ba754a170282 in memory
flw f25, 0(x2) # load 0xc660ba754a170282 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmadd.s f16, f26, f25, f1, dyn # perform operation
fmadd.s f16, f26, f25, f1, rdn # perform operation
fmadd.s f16, f26, f25, f1, rmm # perform operation
fmadd.s f16, f26, f25, f1, rne # perform operation
fmadd.s f16, f26, f25, f1, rtz # perform operation
fmadd.s f16, f26, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x85c058c2196248d2 # load x3 with value 0x85c058c2196248d2
sw x3, 0(x2) # store 0x85c058c2196248d2 in memory
flw f5, 0(x2) # load 0x85c058c2196248d2 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmadd.s f27, f11, f5, f22, dyn # perform operation
fmadd.s f27, f11, f5, f22, rdn # perform operation
fmadd.s f27, f11, f5, f22, rmm # perform operation
fmadd.s f27, f11, f5, f22, rne # perform operation
fmadd.s f27, f11, f5, f22, rtz # perform operation
fmadd.s f27, f11, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f5, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xee99811543cb01f9 # load x3 with value 0xee99811543cb01f9
sw x3, 0(x2) # store 0xee99811543cb01f9 in memory
flw f2, 0(x2) # load 0xee99811543cb01f9 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fmadd.s f22, f6, f2, f16, dyn # perform operation
fmadd.s f22, f6, f2, f16, rdn # perform operation
fmadd.s f22, f6, f2, f16, rmm # perform operation
fmadd.s f22, f6, f2, f16, rne # perform operation
fmadd.s f22, f6, f2, f16, rtz # perform operation
fmadd.s f22, f6, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x97570317c18a15e6 # load x3 with value 0x97570317c18a15e6
sw x3, 0(x2) # store 0x97570317c18a15e6 in memory
flw f18, 0(x2) # load 0x97570317c18a15e6 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmadd.s f2, f8, f18, f27, dyn # perform operation
fmadd.s f2, f8, f18, f27, rdn # perform operation
fmadd.s f2, f8, f18, f27, rmm # perform operation
fmadd.s f2, f8, f18, f27, rne # perform operation
fmadd.s f2, f8, f18, f27, rtz # perform operation
fmadd.s f2, f8, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f18, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xbcb50614f3a1bac # load x3 with value 0xbcb50614f3a1bac
sw x3, 0(x2) # store 0xbcb50614f3a1bac in memory
flw f1, 0(x2) # load 0xbcb50614f3a1bac from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fmadd.s f16, f21, f1, f19, dyn # perform operation
fmadd.s f16, f21, f1, f19, rdn # perform operation
fmadd.s f16, f21, f1, f19, rmm # perform operation
fmadd.s f16, f21, f1, f19, rne # perform operation
fmadd.s f16, f21, f1, f19, rtz # perform operation
fmadd.s f16, f21, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x365f0289030e1049 # load x3 with value 0x365f0289030e1049
sw x3, 0(x2) # store 0x365f0289030e1049 in memory
flw f13, 0(x2) # load 0x365f0289030e1049 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fmadd.s f11, f15, f13, f24, dyn # perform operation
fmadd.s f11, f15, f13, f24, rdn # perform operation
fmadd.s f11, f15, f13, f24, rmm # perform operation
fmadd.s f11, f15, f13, f24, rne # perform operation
fmadd.s f11, f15, f13, f24, rtz # perform operation
fmadd.s f11, f15, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f15, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f15, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f15, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f15, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f15, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x2318d1bb6bbbee3f # load x3 with value 0x2318d1bb6bbbee3f
sw x3, 0(x2) # store 0x2318d1bb6bbbee3f in memory
flw f14, 0(x2) # load 0x2318d1bb6bbbee3f from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmadd.s f18, f22, f14, f31, dyn # perform operation
fmadd.s f18, f22, f14, f31, rdn # perform operation
fmadd.s f18, f22, f14, f31, rmm # perform operation
fmadd.s f18, f22, f14, f31, rne # perform operation
fmadd.s f18, f22, f14, f31, rtz # perform operation
fmadd.s f18, f22, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f22, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f22, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f22, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f22, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f22, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x2ad213370647eb9f # load x3 with value 0x2ad213370647eb9f
sw x3, 0(x2) # store 0x2ad213370647eb9f in memory
flw f13, 0(x2) # load 0x2ad213370647eb9f from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmadd.s f31, f6, f13, f22, dyn # perform operation
fmadd.s f31, f6, f13, f22, rdn # perform operation
fmadd.s f31, f6, f13, f22, rmm # perform operation
fmadd.s f31, f6, f13, f22, rne # perform operation
fmadd.s f31, f6, f13, f22, rtz # perform operation
fmadd.s f31, f6, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0xe27f6df317f3ceac # load x3 with value 0xe27f6df317f3ceac
sw x3, 0(x2) # store 0xe27f6df317f3ceac in memory
flw f6, 0(x2) # load 0xe27f6df317f3ceac from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fmadd.s f26, f5, f6, f24, dyn # perform operation
fmadd.s f26, f5, f6, f24, rdn # perform operation
fmadd.s f26, f5, f6, f24, rmm # perform operation
fmadd.s f26, f5, f6, f24, rne # perform operation
fmadd.s f26, f5, f6, f24, rtz # perform operation
fmadd.s f26, f5, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xadca9018752fa35e # load x3 with value 0xadca9018752fa35e
sw x3, 0(x2) # store 0xadca9018752fa35e in memory
flw f13, 0(x2) # load 0xadca9018752fa35e from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f18, f15, f13, f31, dyn # perform operation
fmadd.s f18, f15, f13, f31, rdn # perform operation
fmadd.s f18, f15, f13, f31, rmm # perform operation
fmadd.s f18, f15, f13, f31, rne # perform operation
fmadd.s f18, f15, f13, f31, rtz # perform operation
fmadd.s f18, f15, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0xe940c587a206ab9a # load x3 with value 0xe940c587a206ab9a
sw x3, 0(x2) # store 0xe940c587a206ab9a in memory
flw f24, 0(x2) # load 0xe940c587a206ab9a from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmadd.s f6, f8, f24, f5, dyn # perform operation
fmadd.s f6, f8, f24, f5, rdn # perform operation
fmadd.s f6, f8, f24, f5, rmm # perform operation
fmadd.s f6, f8, f24, f5, rne # perform operation
fmadd.s f6, f8, f24, f5, rtz # perform operation
fmadd.s f6, f8, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f8, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f8, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xcf2421bc642a45b3 # load x3 with value 0xcf2421bc642a45b3
sw x3, 0(x2) # store 0xcf2421bc642a45b3 in memory
flw f3, 0(x2) # load 0xcf2421bc642a45b3 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmadd.s f9, f22, f3, f13, dyn # perform operation
fmadd.s f9, f22, f3, f13, rdn # perform operation
fmadd.s f9, f22, f3, f13, rmm # perform operation
fmadd.s f9, f22, f3, f13, rne # perform operation
fmadd.s f9, f22, f3, f13, rtz # perform operation
fmadd.s f9, f22, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f22, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f22, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x6a615d62736c72c # load x3 with value 0x6a615d62736c72c
sw x3, 0(x2) # store 0x6a615d62736c72c in memory
flw f18, 0(x2) # load 0x6a615d62736c72c from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmadd.s f16, f28, f18, f17, dyn # perform operation
fmadd.s f16, f28, f18, f17, rdn # perform operation
fmadd.s f16, f28, f18, f17, rmm # perform operation
fmadd.s f16, f28, f18, f17, rne # perform operation
fmadd.s f16, f28, f18, f17, rtz # perform operation
fmadd.s f16, f28, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f28, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x6cfb2a20602181d1 # load x3 with value 0x6cfb2a20602181d1
sw x3, 0(x2) # store 0x6cfb2a20602181d1 in memory
flw f29, 0(x2) # load 0x6cfb2a20602181d1 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmadd.s f13, f12, f29, f16, dyn # perform operation
fmadd.s f13, f12, f29, f16, rdn # perform operation
fmadd.s f13, f12, f29, f16, rmm # perform operation
fmadd.s f13, f12, f29, f16, rne # perform operation
fmadd.s f13, f12, f29, f16, rtz # perform operation
fmadd.s f13, f12, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f12, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f12, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f12, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f12, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f12, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x3f75512d4caa5488 # load x3 with value 0x3f75512d4caa5488
sw x3, 0(x2) # store 0x3f75512d4caa5488 in memory
flw f7, 0(x2) # load 0x3f75512d4caa5488 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmadd.s f17, f3, f7, f22, dyn # perform operation
fmadd.s f17, f3, f7, f22, rdn # perform operation
fmadd.s f17, f3, f7, f22, rmm # perform operation
fmadd.s f17, f3, f7, f22, rne # perform operation
fmadd.s f17, f3, f7, f22, rtz # perform operation
fmadd.s f17, f3, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x3fdd5d66eb70cc0f # load x3 with value 0x3fdd5d66eb70cc0f
sw x3, 0(x2) # store 0x3fdd5d66eb70cc0f in memory
flw f23, 0(x2) # load 0x3fdd5d66eb70cc0f from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fmadd.s f22, f1, f23, f29, dyn # perform operation
fmadd.s f22, f1, f23, f29, rdn # perform operation
fmadd.s f22, f1, f23, f29, rmm # perform operation
fmadd.s f22, f1, f23, f29, rne # perform operation
fmadd.s f22, f1, f23, f29, rtz # perform operation
fmadd.s f22, f1, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f23, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x449d5d72618259fa # load x3 with value 0x449d5d72618259fa
sw x3, 0(x2) # store 0x449d5d72618259fa in memory
flw f16, 0(x2) # load 0x449d5d72618259fa from memory into f16
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fmadd.s f27, f24, f16, f23, dyn # perform operation
fmadd.s f27, f24, f16, f23, rdn # perform operation
fmadd.s f27, f24, f16, f23, rmm # perform operation
fmadd.s f27, f24, f16, f23, rne # perform operation
fmadd.s f27, f24, f16, f23, rtz # perform operation
fmadd.s f27, f24, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xdcb28696c1bb5383 # load x3 with value 0xdcb28696c1bb5383
sw x3, 0(x2) # store 0xdcb28696c1bb5383 in memory
flw f21, 0(x2) # load 0xdcb28696c1bb5383 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fmadd.s f27, f8, f21, f5, dyn # perform operation
fmadd.s f27, f8, f21, f5, rdn # perform operation
fmadd.s f27, f8, f21, f5, rmm # perform operation
fmadd.s f27, f8, f21, f5, rne # perform operation
fmadd.s f27, f8, f21, f5, rtz # perform operation
fmadd.s f27, f8, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f8, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f8, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x81b7b10285f23d11 # load x3 with value 0x81b7b10285f23d11
sw x3, 0(x2) # store 0x81b7b10285f23d11 in memory
flw f24, 0(x2) # load 0x81b7b10285f23d11 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fmadd.s f27, f25, f24, f30, dyn # perform operation
fmadd.s f27, f25, f24, f30, rdn # perform operation
fmadd.s f27, f25, f24, f30, rmm # perform operation
fmadd.s f27, f25, f24, f30, rne # perform operation
fmadd.s f27, f25, f24, f30, rtz # perform operation
fmadd.s f27, f25, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x9b25417107b76531 # load x3 with value 0x9b25417107b76531
sw x3, 0(x2) # store 0x9b25417107b76531 in memory
flw f25, 0(x2) # load 0x9b25417107b76531 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmadd.s f8, f15, f25, f1, dyn # perform operation
fmadd.s f8, f15, f25, f1, rdn # perform operation
fmadd.s f8, f15, f25, f1, rmm # perform operation
fmadd.s f8, f15, f25, f1, rne # perform operation
fmadd.s f8, f15, f25, f1, rtz # perform operation
fmadd.s f8, f15, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f15, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0xb421a16eb2b08db5 # load x3 with value 0xb421a16eb2b08db5
sw x3, 0(x2) # store 0xb421a16eb2b08db5 in memory
flw f23, 0(x2) # load 0xb421a16eb2b08db5 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f10, f18, f23, f11, dyn # perform operation
fmadd.s f10, f18, f23, f11, rdn # perform operation
fmadd.s f10, f18, f23, f11, rmm # perform operation
fmadd.s f10, f18, f23, f11, rne # perform operation
fmadd.s f10, f18, f23, f11, rtz # perform operation
fmadd.s f10, f18, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xfb3561c3a70bd92f # load x3 with value 0xfb3561c3a70bd92f
sw x3, 0(x2) # store 0xfb3561c3a70bd92f in memory
flw f13, 0(x2) # load 0xfb3561c3a70bd92f from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fmadd.s f14, f1, f13, f25, dyn # perform operation
fmadd.s f14, f1, f13, f25, rdn # perform operation
fmadd.s f14, f1, f13, f25, rmm # perform operation
fmadd.s f14, f1, f13, f25, rne # perform operation
fmadd.s f14, f1, f13, f25, rtz # perform operation
fmadd.s f14, f1, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x402def4f8660b567 # load x3 with value 0x402def4f8660b567
sw x3, 0(x2) # store 0x402def4f8660b567 in memory
flw f19, 0(x2) # load 0x402def4f8660b567 from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fmadd.s f13, f14, f19, f2, dyn # perform operation
fmadd.s f13, f14, f19, f2, rdn # perform operation
fmadd.s f13, f14, f19, f2, rmm # perform operation
fmadd.s f13, f14, f19, f2, rne # perform operation
fmadd.s f13, f14, f19, f2, rtz # perform operation
fmadd.s f13, f14, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0xf7ebc7245a2804f7 # load x3 with value 0xf7ebc7245a2804f7
sw x3, 0(x2) # store 0xf7ebc7245a2804f7 in memory
flw f31, 0(x2) # load 0xf7ebc7245a2804f7 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fmadd.s f26, f28, f31, f30, dyn # perform operation
fmadd.s f26, f28, f31, f30, rdn # perform operation
fmadd.s f26, f28, f31, f30, rmm # perform operation
fmadd.s f26, f28, f31, f30, rne # perform operation
fmadd.s f26, f28, f31, f30, rtz # perform operation
fmadd.s f26, f28, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f31, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0xe6c4342523e8d458 # load x3 with value 0xe6c4342523e8d458
sw x3, 0(x2) # store 0xe6c4342523e8d458 in memory
flw f10, 0(x2) # load 0xe6c4342523e8d458 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f15, f2, f10, f14, dyn # perform operation
fmadd.s f15, f2, f10, f14, rdn # perform operation
fmadd.s f15, f2, f10, f14, rmm # perform operation
fmadd.s f15, f2, f10, f14, rne # perform operation
fmadd.s f15, f2, f10, f14, rtz # perform operation
fmadd.s f15, f2, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x7238ffa1fa06c593 # load x3 with value 0x7238ffa1fa06c593
sw x3, 0(x2) # store 0x7238ffa1fa06c593 in memory
flw f11, 0(x2) # load 0x7238ffa1fa06c593 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmadd.s f29, f13, f11, f18, dyn # perform operation
fmadd.s f29, f13, f11, f18, rdn # perform operation
fmadd.s f29, f13, f11, f18, rmm # perform operation
fmadd.s f29, f13, f11, f18, rne # perform operation
fmadd.s f29, f13, f11, f18, rtz # perform operation
fmadd.s f29, f13, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f13, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f13, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x442b99d29ad6a526 # load x3 with value 0x442b99d29ad6a526
sw x3, 0(x2) # store 0x442b99d29ad6a526 in memory
flw f15, 0(x2) # load 0x442b99d29ad6a526 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmadd.s f3, f9, f15, f28, dyn # perform operation
fmadd.s f3, f9, f15, f28, rdn # perform operation
fmadd.s f3, f9, f15, f28, rmm # perform operation
fmadd.s f3, f9, f15, f28, rne # perform operation
fmadd.s f3, f9, f15, f28, rtz # perform operation
fmadd.s f3, f9, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f9, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f9, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x4b29055b62e10670 # load x3 with value 0x4b29055b62e10670
sw x3, 0(x2) # store 0x4b29055b62e10670 in memory
flw f8, 0(x2) # load 0x4b29055b62e10670 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fmadd.s f10, f2, f8, f6, dyn # perform operation
fmadd.s f10, f2, f8, f6, rdn # perform operation
fmadd.s f10, f2, f8, f6, rmm # perform operation
fmadd.s f10, f2, f8, f6, rne # perform operation
fmadd.s f10, f2, f8, f6, rtz # perform operation
fmadd.s f10, f2, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f2, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f2, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x5aef7144706768dc # load x3 with value 0x5aef7144706768dc
sw x3, 0(x2) # store 0x5aef7144706768dc in memory
flw f29, 0(x2) # load 0x5aef7144706768dc from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f31, f23, f29, f21, dyn # perform operation
fmadd.s f31, f23, f29, f21, rdn # perform operation
fmadd.s f31, f23, f29, f21, rmm # perform operation
fmadd.s f31, f23, f29, f21, rne # perform operation
fmadd.s f31, f23, f29, f21, rtz # perform operation
fmadd.s f31, f23, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xe285f90fa25f7240 # load x3 with value 0xe285f90fa25f7240
sw x3, 0(x2) # store 0xe285f90fa25f7240 in memory
flw f5, 0(x2) # load 0xe285f90fa25f7240 from memory into f5
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f12, f1, f5, f26, dyn # perform operation
fmadd.s f12, f1, f5, f26, rdn # perform operation
fmadd.s f12, f1, f5, f26, rmm # perform operation
fmadd.s f12, f1, f5, f26, rne # perform operation
fmadd.s f12, f1, f5, f26, rtz # perform operation
fmadd.s f12, f1, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f1, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f1, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f1, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f1, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f1, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x921950cbdb789356 # load x3 with value 0x921950cbdb789356
sw x3, 0(x2) # store 0x921950cbdb789356 in memory
flw f30, 0(x2) # load 0x921950cbdb789356 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmadd.s f24, f23, f30, f15, dyn # perform operation
fmadd.s f24, f23, f30, f15, rdn # perform operation
fmadd.s f24, f23, f30, f15, rmm # perform operation
fmadd.s f24, f23, f30, f15, rne # perform operation
fmadd.s f24, f23, f30, f15, rtz # perform operation
fmadd.s f24, f23, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f30, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0xf94bd0456aee10ec # load x3 with value 0xf94bd0456aee10ec
sw x3, 0(x2) # store 0xf94bd0456aee10ec in memory
flw f9, 0(x2) # load 0xf94bd0456aee10ec from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fmadd.s f18, f13, f9, f16, dyn # perform operation
fmadd.s f18, f13, f9, f16, rdn # perform operation
fmadd.s f18, f13, f9, f16, rmm # perform operation
fmadd.s f18, f13, f9, f16, rne # perform operation
fmadd.s f18, f13, f9, f16, rtz # perform operation
fmadd.s f18, f13, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f13, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x1e802bfadcb8e7d7 # load x3 with value 0x1e802bfadcb8e7d7
sw x3, 0(x2) # store 0x1e802bfadcb8e7d7 in memory
flw f23, 0(x2) # load 0x1e802bfadcb8e7d7 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmadd.s f9, f7, f23, f15, dyn # perform operation
fmadd.s f9, f7, f23, f15, rdn # perform operation
fmadd.s f9, f7, f23, f15, rmm # perform operation
fmadd.s f9, f7, f23, f15, rne # perform operation
fmadd.s f9, f7, f23, f15, rtz # perform operation
fmadd.s f9, f7, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x2741bccee71c52b1 # load x3 with value 0x2741bccee71c52b1
sw x3, 0(x2) # store 0x2741bccee71c52b1 in memory
flw f24, 0(x2) # load 0x2741bccee71c52b1 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fmadd.s f23, f1, f24, f31, dyn # perform operation
fmadd.s f23, f1, f24, f31, rdn # perform operation
fmadd.s f23, f1, f24, f31, rmm # perform operation
fmadd.s f23, f1, f24, f31, rne # perform operation
fmadd.s f23, f1, f24, f31, rtz # perform operation
fmadd.s f23, f1, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xb7a7ea0e08048edf # load x3 with value 0xb7a7ea0e08048edf
sw x3, 0(x2) # store 0xb7a7ea0e08048edf in memory
flw f29, 0(x2) # load 0xb7a7ea0e08048edf from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmadd.s f18, f7, f29, f30, dyn # perform operation
fmadd.s f18, f7, f29, f30, rdn # perform operation
fmadd.s f18, f7, f29, f30, rmm # perform operation
fmadd.s f18, f7, f29, f30, rne # perform operation
fmadd.s f18, f7, f29, f30, rtz # perform operation
fmadd.s f18, f7, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x97c4d918bc3dd6f # load x3 with value 0x97c4d918bc3dd6f
sw x3, 0(x2) # store 0x97c4d918bc3dd6f in memory
flw f28, 0(x2) # load 0x97c4d918bc3dd6f from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fmadd.s f10, f9, f28, f16, dyn # perform operation
fmadd.s f10, f9, f28, f16, rdn # perform operation
fmadd.s f10, f9, f28, f16, rmm # perform operation
fmadd.s f10, f9, f28, f16, rne # perform operation
fmadd.s f10, f9, f28, f16, rtz # perform operation
fmadd.s f10, f9, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x50e8458fdf0cc10d # load x3 with value 0x50e8458fdf0cc10d
sw x3, 0(x2) # store 0x50e8458fdf0cc10d in memory
flw f1, 0(x2) # load 0x50e8458fdf0cc10d from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fmadd.s f17, f19, f1, f10, dyn # perform operation
fmadd.s f17, f19, f1, f10, rdn # perform operation
fmadd.s f17, f19, f1, f10, rmm # perform operation
fmadd.s f17, f19, f1, f10, rne # perform operation
fmadd.s f17, f19, f1, f10, rtz # perform operation
fmadd.s f17, f19, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x74320dd7889ad0af # load x3 with value 0x74320dd7889ad0af
sw x3, 0(x2) # store 0x74320dd7889ad0af in memory
flw f26, 0(x2) # load 0x74320dd7889ad0af from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmadd.s f3, f18, f26, f22, dyn # perform operation
fmadd.s f3, f18, f26, f22, rdn # perform operation
fmadd.s f3, f18, f26, f22, rmm # perform operation
fmadd.s f3, f18, f26, f22, rne # perform operation
fmadd.s f3, f18, f26, f22, rtz # perform operation
fmadd.s f3, f18, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f18, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x88f50b0b2809b581 # load x3 with value 0x88f50b0b2809b581
sw x3, 0(x2) # store 0x88f50b0b2809b581 in memory
flw f18, 0(x2) # load 0x88f50b0b2809b581 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f13, f2, f18, f15, dyn # perform operation
fmadd.s f13, f2, f18, f15, rdn # perform operation
fmadd.s f13, f2, f18, f15, rmm # perform operation
fmadd.s f13, f2, f18, f15, rne # perform operation
fmadd.s f13, f2, f18, f15, rtz # perform operation
fmadd.s f13, f2, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f18, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x181214f6bdf5fc0a # load x3 with value 0x181214f6bdf5fc0a
sw x3, 0(x2) # store 0x181214f6bdf5fc0a in memory
flw f6, 0(x2) # load 0x181214f6bdf5fc0a from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmadd.s f8, f23, f6, f30, dyn # perform operation
fmadd.s f8, f23, f6, f30, rdn # perform operation
fmadd.s f8, f23, f6, f30, rmm # perform operation
fmadd.s f8, f23, f6, f30, rne # perform operation
fmadd.s f8, f23, f6, f30, rtz # perform operation
fmadd.s f8, f23, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x27212704ff827ba8 # load x3 with value 0x27212704ff827ba8
sw x3, 0(x2) # store 0x27212704ff827ba8 in memory
flw f24, 0(x2) # load 0x27212704ff827ba8 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fmadd.s f19, f22, f24, f20, dyn # perform operation
fmadd.s f19, f22, f24, f20, rdn # perform operation
fmadd.s f19, f22, f24, f20, rmm # perform operation
fmadd.s f19, f22, f24, f20, rne # perform operation
fmadd.s f19, f22, f24, f20, rtz # perform operation
fmadd.s f19, f22, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xec2c151daab2ab4a # load x3 with value 0xec2c151daab2ab4a
sw x3, 0(x2) # store 0xec2c151daab2ab4a in memory
flw f26, 0(x2) # load 0xec2c151daab2ab4a from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmadd.s f20, f12, f26, f25, dyn # perform operation
fmadd.s f20, f12, f26, f25, rdn # perform operation
fmadd.s f20, f12, f26, f25, rmm # perform operation
fmadd.s f20, f12, f26, f25, rne # perform operation
fmadd.s f20, f12, f26, f25, rtz # perform operation
fmadd.s f20, f12, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0xa12f874c72b42495 # load x3 with value 0xa12f874c72b42495
sw x3, 0(x2) # store 0xa12f874c72b42495 in memory
flw f8, 0(x2) # load 0xa12f874c72b42495 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmadd.s f25, f27, f8, f11, dyn # perform operation
fmadd.s f25, f27, f8, f11, rdn # perform operation
fmadd.s f25, f27, f8, f11, rmm # perform operation
fmadd.s f25, f27, f8, f11, rne # perform operation
fmadd.s f25, f27, f8, f11, rtz # perform operation
fmadd.s f25, f27, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xa76260e19bbc9548 # load x3 with value 0xa76260e19bbc9548
sw x3, 0(x2) # store 0xa76260e19bbc9548 in memory
flw f8, 0(x2) # load 0xa76260e19bbc9548 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmadd.s f25, f12, f8, f17, dyn # perform operation
fmadd.s f25, f12, f8, f17, rdn # perform operation
fmadd.s f25, f12, f8, f17, rmm # perform operation
fmadd.s f25, f12, f8, f17, rne # perform operation
fmadd.s f25, f12, f8, f17, rtz # perform operation
fmadd.s f25, f12, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f12, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x6ced473fa7283e03 # load x3 with value 0x6ced473fa7283e03
sw x3, 0(x2) # store 0x6ced473fa7283e03 in memory
flw f28, 0(x2) # load 0x6ced473fa7283e03 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmadd.s f30, f5, f28, f11, dyn # perform operation
fmadd.s f30, f5, f28, f11, rdn # perform operation
fmadd.s f30, f5, f28, f11, rmm # perform operation
fmadd.s f30, f5, f28, f11, rne # perform operation
fmadd.s f30, f5, f28, f11, rtz # perform operation
fmadd.s f30, f5, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0xe2ffc78ee125db26 # load x3 with value 0xe2ffc78ee125db26
sw x3, 0(x2) # store 0xe2ffc78ee125db26 in memory
flw f28, 0(x2) # load 0xe2ffc78ee125db26 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmadd.s f16, f17, f28, f31, dyn # perform operation
fmadd.s f16, f17, f28, f31, rdn # perform operation
fmadd.s f16, f17, f28, f31, rmm # perform operation
fmadd.s f16, f17, f28, f31, rne # perform operation
fmadd.s f16, f17, f28, f31, rtz # perform operation
fmadd.s f16, f17, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0xc27892858ca837a0 # load x3 with value 0xc27892858ca837a0
sw x3, 0(x2) # store 0xc27892858ca837a0 in memory
flw f20, 0(x2) # load 0xc27892858ca837a0 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmadd.s f28, f1, f20, f10, dyn # perform operation
fmadd.s f28, f1, f20, f10, rdn # perform operation
fmadd.s f28, f1, f20, f10, rmm # perform operation
fmadd.s f28, f1, f20, f10, rne # perform operation
fmadd.s f28, f1, f20, f10, rtz # perform operation
fmadd.s f28, f1, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x8057ecca58f564b5 # load x3 with value 0x8057ecca58f564b5
sw x3, 0(x2) # store 0x8057ecca58f564b5 in memory
flw f7, 0(x2) # load 0x8057ecca58f564b5 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fmadd.s f19, f21, f7, f10, dyn # perform operation
fmadd.s f19, f21, f7, f10, rdn # perform operation
fmadd.s f19, f21, f7, f10, rmm # perform operation
fmadd.s f19, f21, f7, f10, rne # perform operation
fmadd.s f19, f21, f7, f10, rtz # perform operation
fmadd.s f19, f21, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f21, f7, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x8f2ae029f9ec5051 # load x3 with value 0x8f2ae029f9ec5051
sw x3, 0(x2) # store 0x8f2ae029f9ec5051 in memory
flw f21, 0(x2) # load 0x8f2ae029f9ec5051 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmadd.s f3, f17, f21, f25, dyn # perform operation
fmadd.s f3, f17, f21, f25, rdn # perform operation
fmadd.s f3, f17, f21, f25, rmm # perform operation
fmadd.s f3, f17, f21, f25, rne # perform operation
fmadd.s f3, f17, f21, f25, rtz # perform operation
fmadd.s f3, f17, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xd1726282a961889 # load x3 with value 0xd1726282a961889
sw x3, 0(x2) # store 0xd1726282a961889 in memory
flw f13, 0(x2) # load 0xd1726282a961889 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f23, f20, f13, f31, dyn # perform operation
fmadd.s f23, f20, f13, f31, rdn # perform operation
fmadd.s f23, f20, f13, f31, rmm # perform operation
fmadd.s f23, f20, f13, f31, rne # perform operation
fmadd.s f23, f20, f13, f31, rtz # perform operation
fmadd.s f23, f20, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f13, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xf1ae721889ce77e1 # load x3 with value 0xf1ae721889ce77e1
sw x3, 0(x2) # store 0xf1ae721889ce77e1 in memory
flw f31, 0(x2) # load 0xf1ae721889ce77e1 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmadd.s f1, f7, f31, f3, dyn # perform operation
fmadd.s f1, f7, f31, f3, rdn # perform operation
fmadd.s f1, f7, f31, f3, rmm # perform operation
fmadd.s f1, f7, f31, f3, rne # perform operation
fmadd.s f1, f7, f31, f3, rtz # perform operation
fmadd.s f1, f7, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x16ea7d51e28bd60c # load x3 with value 0x16ea7d51e28bd60c
sw x3, 0(x2) # store 0x16ea7d51e28bd60c in memory
flw f8, 0(x2) # load 0x16ea7d51e28bd60c from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmadd.s f12, f15, f8, f10, dyn # perform operation
fmadd.s f12, f15, f8, f10, rdn # perform operation
fmadd.s f12, f15, f8, f10, rmm # perform operation
fmadd.s f12, f15, f8, f10, rne # perform operation
fmadd.s f12, f15, f8, f10, rtz # perform operation
fmadd.s f12, f15, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0xe5e4d13069a67a41 # load x3 with value 0xe5e4d13069a67a41
sw x3, 0(x2) # store 0xe5e4d13069a67a41 in memory
flw f15, 0(x2) # load 0xe5e4d13069a67a41 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmadd.s f9, f1, f15, f29, dyn # perform operation
fmadd.s f9, f1, f15, f29, rdn # perform operation
fmadd.s f9, f1, f15, f29, rmm # perform operation
fmadd.s f9, f1, f15, f29, rne # perform operation
fmadd.s f9, f1, f15, f29, rtz # perform operation
fmadd.s f9, f1, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x6ef00f0fd9859c39 # load x3 with value 0x6ef00f0fd9859c39
sw x3, 0(x2) # store 0x6ef00f0fd9859c39 in memory
flw f14, 0(x2) # load 0x6ef00f0fd9859c39 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmadd.s f30, f18, f14, f16, dyn # perform operation
fmadd.s f30, f18, f14, f16, rdn # perform operation
fmadd.s f30, f18, f14, f16, rmm # perform operation
fmadd.s f30, f18, f14, f16, rne # perform operation
fmadd.s f30, f18, f14, f16, rtz # perform operation
fmadd.s f30, f18, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xd3bb8a90d932c3bd # load x3 with value 0xd3bb8a90d932c3bd
sw x3, 0(x2) # store 0xd3bb8a90d932c3bd in memory
flw f25, 0(x2) # load 0xd3bb8a90d932c3bd from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmadd.s f31, f20, f25, f13, dyn # perform operation
fmadd.s f31, f20, f25, f13, rdn # perform operation
fmadd.s f31, f20, f25, f13, rmm # perform operation
fmadd.s f31, f20, f25, f13, rne # perform operation
fmadd.s f31, f20, f25, f13, rtz # perform operation
fmadd.s f31, f20, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x8b4ecf61ad0f4f72 # load x3 with value 0x8b4ecf61ad0f4f72
sw x3, 0(x2) # store 0x8b4ecf61ad0f4f72 in memory
flw f2, 0(x2) # load 0x8b4ecf61ad0f4f72 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmadd.s f21, f3, f2, f19, dyn # perform operation
fmadd.s f21, f3, f2, f19, rdn # perform operation
fmadd.s f21, f3, f2, f19, rmm # perform operation
fmadd.s f21, f3, f2, f19, rne # perform operation
fmadd.s f21, f3, f2, f19, rtz # perform operation
fmadd.s f21, f3, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0xbd977a88d51ba903 # load x3 with value 0xbd977a88d51ba903
sw x3, 0(x2) # store 0xbd977a88d51ba903 in memory
flw f5, 0(x2) # load 0xbd977a88d51ba903 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmadd.s f22, f30, f5, f20, dyn # perform operation
fmadd.s f22, f30, f5, f20, rdn # perform operation
fmadd.s f22, f30, f5, f20, rmm # perform operation
fmadd.s f22, f30, f5, f20, rne # perform operation
fmadd.s f22, f30, f5, f20, rtz # perform operation
fmadd.s f22, f30, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x382ee0b61f43f396 # load x3 with value 0x382ee0b61f43f396
sw x3, 0(x2) # store 0x382ee0b61f43f396 in memory
flw f28, 0(x2) # load 0x382ee0b61f43f396 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmadd.s f9, f29, f28, f2, dyn # perform operation
fmadd.s f9, f29, f28, f2, rdn # perform operation
fmadd.s f9, f29, f28, f2, rmm # perform operation
fmadd.s f9, f29, f28, f2, rne # perform operation
fmadd.s f9, f29, f28, f2, rtz # perform operation
fmadd.s f9, f29, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f29, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f29, f28, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0xf5f9e03cb4d818e9 # load x3 with value 0xf5f9e03cb4d818e9
sw x3, 0(x2) # store 0xf5f9e03cb4d818e9 in memory
flw f23, 0(x2) # load 0xf5f9e03cb4d818e9 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmadd.s f1, f10, f23, f2, dyn # perform operation
fmadd.s f1, f10, f23, f2, rdn # perform operation
fmadd.s f1, f10, f23, f2, rmm # perform operation
fmadd.s f1, f10, f23, f2, rne # perform operation
fmadd.s f1, f10, f23, f2, rtz # perform operation
fmadd.s f1, f10, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f10, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f10, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xa94017d13b3a6ed # load x3 with value 0xa94017d13b3a6ed
sw x3, 0(x2) # store 0xa94017d13b3a6ed in memory
flw f16, 0(x2) # load 0xa94017d13b3a6ed from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fmadd.s f28, f24, f16, f21, dyn # perform operation
fmadd.s f28, f24, f16, f21, rdn # perform operation
fmadd.s f28, f24, f16, f21, rmm # perform operation
fmadd.s f28, f24, f16, f21, rne # perform operation
fmadd.s f28, f24, f16, f21, rtz # perform operation
fmadd.s f28, f24, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x6e5664addf8774b0 # load x3 with value 0x6e5664addf8774b0
sw x3, 0(x2) # store 0x6e5664addf8774b0 in memory
flw f2, 0(x2) # load 0x6e5664addf8774b0 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fmadd.s f6, f12, f2, f26, dyn # perform operation
fmadd.s f6, f12, f2, f26, rdn # perform operation
fmadd.s f6, f12, f2, f26, rmm # perform operation
fmadd.s f6, f12, f2, f26, rne # perform operation
fmadd.s f6, f12, f2, f26, rtz # perform operation
fmadd.s f6, f12, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f2, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0xe95337548d2921c3 # load x3 with value 0xe95337548d2921c3
sw x3, 0(x2) # store 0xe95337548d2921c3 in memory
flw f20, 0(x2) # load 0xe95337548d2921c3 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fmadd.s f29, f31, f20, f24, dyn # perform operation
fmadd.s f29, f31, f20, f24, rdn # perform operation
fmadd.s f29, f31, f20, f24, rmm # perform operation
fmadd.s f29, f31, f20, f24, rne # perform operation
fmadd.s f29, f31, f20, f24, rtz # perform operation
fmadd.s f29, f31, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0xfe5f8e02225c513c # load x3 with value 0xfe5f8e02225c513c
sw x3, 0(x2) # store 0xfe5f8e02225c513c in memory
flw f11, 0(x2) # load 0xfe5f8e02225c513c from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmadd.s f25, f1, f11, f24, dyn # perform operation
fmadd.s f25, f1, f11, f24, rdn # perform operation
fmadd.s f25, f1, f11, f24, rmm # perform operation
fmadd.s f25, f1, f11, f24, rne # perform operation
fmadd.s f25, f1, f11, f24, rtz # perform operation
fmadd.s f25, f1, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x6120f7f34c647bfe # load x3 with value 0x6120f7f34c647bfe
sw x3, 0(x2) # store 0x6120f7f34c647bfe in memory
flw f11, 0(x2) # load 0x6120f7f34c647bfe from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmadd.s f19, f9, f11, f7, dyn # perform operation
fmadd.s f19, f9, f11, f7, rdn # perform operation
fmadd.s f19, f9, f11, f7, rmm # perform operation
fmadd.s f19, f9, f11, f7, rne # perform operation
fmadd.s f19, f9, f11, f7, rtz # perform operation
fmadd.s f19, f9, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f11, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xdda1305c1f412744 # load x3 with value 0xdda1305c1f412744
sw x3, 0(x2) # store 0xdda1305c1f412744 in memory
flw f12, 0(x2) # load 0xdda1305c1f412744 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fmadd.s f23, f14, f12, f22, dyn # perform operation
fmadd.s f23, f14, f12, f22, rdn # perform operation
fmadd.s f23, f14, f12, f22, rmm # perform operation
fmadd.s f23, f14, f12, f22, rne # perform operation
fmadd.s f23, f14, f12, f22, rtz # perform operation
fmadd.s f23, f14, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f14, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xbddce3bc27174294 # load x3 with value 0xbddce3bc27174294
sw x3, 0(x2) # store 0xbddce3bc27174294 in memory
flw f11, 0(x2) # load 0xbddce3bc27174294 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f18, f29, f11, f10, dyn # perform operation
fmadd.s f18, f29, f11, f10, rdn # perform operation
fmadd.s f18, f29, f11, f10, rmm # perform operation
fmadd.s f18, f29, f11, f10, rne # perform operation
fmadd.s f18, f29, f11, f10, rtz # perform operation
fmadd.s f18, f29, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x4473f737e75b536 # load x3 with value 0x4473f737e75b536
sw x3, 0(x2) # store 0x4473f737e75b536 in memory
flw f29, 0(x2) # load 0x4473f737e75b536 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f19, f28, f29, f13, dyn # perform operation
fmadd.s f19, f28, f29, f13, rdn # perform operation
fmadd.s f19, f28, f29, f13, rmm # perform operation
fmadd.s f19, f28, f29, f13, rne # perform operation
fmadd.s f19, f28, f29, f13, rtz # perform operation
fmadd.s f19, f28, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f29, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xf167d4df8052b2f0 # load x3 with value 0xf167d4df8052b2f0
sw x3, 0(x2) # store 0xf167d4df8052b2f0 in memory
flw f1, 0(x2) # load 0xf167d4df8052b2f0 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmadd.s f2, f11, f1, f9, dyn # perform operation
fmadd.s f2, f11, f1, f9, rdn # perform operation
fmadd.s f2, f11, f1, f9, rmm # perform operation
fmadd.s f2, f11, f1, f9, rne # perform operation
fmadd.s f2, f11, f1, f9, rtz # perform operation
fmadd.s f2, f11, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f11, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x80516196629eeda3 # load x3 with value 0x80516196629eeda3
sw x3, 0(x2) # store 0x80516196629eeda3 in memory
flw f6, 0(x2) # load 0x80516196629eeda3 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmadd.s f12, f25, f6, f22, dyn # perform operation
fmadd.s f12, f25, f6, f22, rdn # perform operation
fmadd.s f12, f25, f6, f22, rmm # perform operation
fmadd.s f12, f25, f6, f22, rne # perform operation
fmadd.s f12, f25, f6, f22, rtz # perform operation
fmadd.s f12, f25, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x3cb27c0ec602f21a # load x3 with value 0x3cb27c0ec602f21a
sw x3, 0(x2) # store 0x3cb27c0ec602f21a in memory
flw f13, 0(x2) # load 0x3cb27c0ec602f21a from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmadd.s f5, f6, f13, f14, dyn # perform operation
fmadd.s f5, f6, f13, f14, rdn # perform operation
fmadd.s f5, f6, f13, f14, rmm # perform operation
fmadd.s f5, f6, f13, f14, rne # perform operation
fmadd.s f5, f6, f13, f14, rtz # perform operation
fmadd.s f5, f6, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f6, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f6, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x632727e77e809179 # load x3 with value 0x632727e77e809179
sw x3, 0(x2) # store 0x632727e77e809179 in memory
flw f12, 0(x2) # load 0x632727e77e809179 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmadd.s f30, f5, f12, f23, dyn # perform operation
fmadd.s f30, f5, f12, f23, rdn # perform operation
fmadd.s f30, f5, f12, f23, rmm # perform operation
fmadd.s f30, f5, f12, f23, rne # perform operation
fmadd.s f30, f5, f12, f23, rtz # perform operation
fmadd.s f30, f5, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x2599233484f3ec0f # load x3 with value 0x2599233484f3ec0f
sw x3, 0(x2) # store 0x2599233484f3ec0f in memory
flw f25, 0(x2) # load 0x2599233484f3ec0f from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f28, f3, f25, f12, dyn # perform operation
fmadd.s f28, f3, f25, f12, rdn # perform operation
fmadd.s f28, f3, f25, f12, rmm # perform operation
fmadd.s f28, f3, f25, f12, rne # perform operation
fmadd.s f28, f3, f25, f12, rtz # perform operation
fmadd.s f28, f3, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xcbb023399bd49a91 # load x3 with value 0xcbb023399bd49a91
sw x3, 0(x2) # store 0xcbb023399bd49a91 in memory
flw f20, 0(x2) # load 0xcbb023399bd49a91 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmadd.s f2, f14, f20, f26, dyn # perform operation
fmadd.s f2, f14, f20, f26, rdn # perform operation
fmadd.s f2, f14, f20, f26, rmm # perform operation
fmadd.s f2, f14, f20, f26, rne # perform operation
fmadd.s f2, f14, f20, f26, rtz # perform operation
fmadd.s f2, f14, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f14, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f14, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f14, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f14, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f14, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xef013c0cc8549f56 # load x3 with value 0xef013c0cc8549f56
sw x3, 0(x2) # store 0xef013c0cc8549f56 in memory
flw f12, 0(x2) # load 0xef013c0cc8549f56 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fmadd.s f1, f26, f12, f29, dyn # perform operation
fmadd.s f1, f26, f12, f29, rdn # perform operation
fmadd.s f1, f26, f12, f29, rmm # perform operation
fmadd.s f1, f26, f12, f29, rne # perform operation
fmadd.s f1, f26, f12, f29, rtz # perform operation
fmadd.s f1, f26, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f26, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f26, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f26, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f26, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f26, f12, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xca5d4916298db10c # load x3 with value 0xca5d4916298db10c
sw x3, 0(x2) # store 0xca5d4916298db10c in memory
flw f22, 0(x2) # load 0xca5d4916298db10c from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmadd.s f31, f1, f22, f29, dyn # perform operation
fmadd.s f31, f1, f22, f29, rdn # perform operation
fmadd.s f31, f1, f22, f29, rmm # perform operation
fmadd.s f31, f1, f22, f29, rne # perform operation
fmadd.s f31, f1, f22, f29, rtz # perform operation
fmadd.s f31, f1, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f1, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x27c66f205a2332be # load x3 with value 0x27c66f205a2332be
sw x3, 0(x2) # store 0x27c66f205a2332be in memory
flw f23, 0(x2) # load 0x27c66f205a2332be from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmadd.s f12, f19, f23, f6, dyn # perform operation
fmadd.s f12, f19, f23, f6, rdn # perform operation
fmadd.s f12, f19, f23, f6, rmm # perform operation
fmadd.s f12, f19, f23, f6, rne # perform operation
fmadd.s f12, f19, f23, f6, rtz # perform operation
fmadd.s f12, f19, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xd279f2aadf86856d # load x3 with value 0xd279f2aadf86856d
sw x3, 0(x2) # store 0xd279f2aadf86856d in memory
flw f1, 0(x2) # load 0xd279f2aadf86856d from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmadd.s f23, f8, f1, f14, dyn # perform operation
fmadd.s f23, f8, f1, f14, rdn # perform operation
fmadd.s f23, f8, f1, f14, rmm # perform operation
fmadd.s f23, f8, f1, f14, rne # perform operation
fmadd.s f23, f8, f1, f14, rtz # perform operation
fmadd.s f23, f8, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f8, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f8, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xb61445287128f71 # load x3 with value 0xb61445287128f71
sw x3, 0(x2) # store 0xb61445287128f71 in memory
flw f1, 0(x2) # load 0xb61445287128f71 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fmadd.s f30, f19, f1, f23, dyn # perform operation
fmadd.s f30, f19, f1, f23, rdn # perform operation
fmadd.s f30, f19, f1, f23, rmm # perform operation
fmadd.s f30, f19, f1, f23, rne # perform operation
fmadd.s f30, f19, f1, f23, rtz # perform operation
fmadd.s f30, f19, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xebb1c2e7647bf318 # load x3 with value 0xebb1c2e7647bf318
sw x3, 0(x2) # store 0xebb1c2e7647bf318 in memory
flw f9, 0(x2) # load 0xebb1c2e7647bf318 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmadd.s f26, f6, f9, f20, dyn # perform operation
fmadd.s f26, f6, f9, f20, rdn # perform operation
fmadd.s f26, f6, f9, f20, rmm # perform operation
fmadd.s f26, f6, f9, f20, rne # perform operation
fmadd.s f26, f6, f9, f20, rtz # perform operation
fmadd.s f26, f6, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f6, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f6, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xb3fe41d954cd0d41 # load x3 with value 0xb3fe41d954cd0d41
sw x3, 0(x2) # store 0xb3fe41d954cd0d41 in memory
flw f28, 0(x2) # load 0xb3fe41d954cd0d41 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmadd.s f17, f13, f28, f25, dyn # perform operation
fmadd.s f17, f13, f28, f25, rdn # perform operation
fmadd.s f17, f13, f28, f25, rmm # perform operation
fmadd.s f17, f13, f28, f25, rne # perform operation
fmadd.s f17, f13, f28, f25, rtz # perform operation
fmadd.s f17, f13, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f13, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xb287c48d05300a15 # load x3 with value 0xb287c48d05300a15
sw x3, 0(x2) # store 0xb287c48d05300a15 in memory
flw f17, 0(x2) # load 0xb287c48d05300a15 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fmadd.s f16, f14, f17, f23, dyn # perform operation
fmadd.s f16, f14, f17, f23, rdn # perform operation
fmadd.s f16, f14, f17, f23, rmm # perform operation
fmadd.s f16, f14, f17, f23, rne # perform operation
fmadd.s f16, f14, f17, f23, rtz # perform operation
fmadd.s f16, f14, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xc52e6eb8b4438f94 # load x3 with value 0xc52e6eb8b4438f94
sw x3, 0(x2) # store 0xc52e6eb8b4438f94 in memory
flw f14, 0(x2) # load 0xc52e6eb8b4438f94 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fmadd.s f24, f6, f14, f31, dyn # perform operation
fmadd.s f24, f6, f14, f31, rdn # perform operation
fmadd.s f24, f6, f14, f31, rmm # perform operation
fmadd.s f24, f6, f14, f31, rne # perform operation
fmadd.s f24, f6, f14, f31, rtz # perform operation
fmadd.s f24, f6, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xc628b30a6f008c93 # load x3 with value 0xc628b30a6f008c93
sw x3, 0(x2) # store 0xc628b30a6f008c93 in memory
flw f18, 0(x2) # load 0xc628b30a6f008c93 from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f1, f28, f18, f17, dyn # perform operation
fmadd.s f1, f28, f18, f17, rdn # perform operation
fmadd.s f1, f28, f18, f17, rmm # perform operation
fmadd.s f1, f28, f18, f17, rne # perform operation
fmadd.s f1, f28, f18, f17, rtz # perform operation
fmadd.s f1, f28, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xe1b135a99162f2b4 # load x3 with value 0xe1b135a99162f2b4
sw x3, 0(x2) # store 0xe1b135a99162f2b4 in memory
flw f22, 0(x2) # load 0xe1b135a99162f2b4 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fmadd.s f17, f30, f22, f23, dyn # perform operation
fmadd.s f17, f30, f22, f23, rdn # perform operation
fmadd.s f17, f30, f22, f23, rmm # perform operation
fmadd.s f17, f30, f22, f23, rne # perform operation
fmadd.s f17, f30, f22, f23, rtz # perform operation
fmadd.s f17, f30, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x66b0b6ea2bf420bb # load x3 with value 0x66b0b6ea2bf420bb
sw x3, 0(x2) # store 0x66b0b6ea2bf420bb in memory
flw f23, 0(x2) # load 0x66b0b6ea2bf420bb from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmadd.s f25, f28, f23, f13, dyn # perform operation
fmadd.s f25, f28, f23, f13, rdn # perform operation
fmadd.s f25, f28, f23, f13, rmm # perform operation
fmadd.s f25, f28, f23, f13, rne # perform operation
fmadd.s f25, f28, f23, f13, rtz # perform operation
fmadd.s f25, f28, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f28, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f28, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0xd4234bf06ead8e4 # load x3 with value 0xd4234bf06ead8e4
sw x3, 0(x2) # store 0xd4234bf06ead8e4 in memory
flw f25, 0(x2) # load 0xd4234bf06ead8e4 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmadd.s f21, f5, f25, f3, dyn # perform operation
fmadd.s f21, f5, f25, f3, rdn # perform operation
fmadd.s f21, f5, f25, f3, rmm # perform operation
fmadd.s f21, f5, f25, f3, rne # perform operation
fmadd.s f21, f5, f25, f3, rtz # perform operation
fmadd.s f21, f5, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x5bc6da8b4aa3f094 # load x3 with value 0x5bc6da8b4aa3f094
sw x3, 0(x2) # store 0x5bc6da8b4aa3f094 in memory
flw f6, 0(x2) # load 0x5bc6da8b4aa3f094 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmadd.s f7, f8, f6, f27, dyn # perform operation
fmadd.s f7, f8, f6, f27, rdn # perform operation
fmadd.s f7, f8, f6, f27, rmm # perform operation
fmadd.s f7, f8, f6, f27, rne # perform operation
fmadd.s f7, f8, f6, f27, rtz # perform operation
fmadd.s f7, f8, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x6fcc26acd6d6edfe # load x3 with value 0x6fcc26acd6d6edfe
sw x3, 0(x2) # store 0x6fcc26acd6d6edfe in memory
flw f16, 0(x2) # load 0x6fcc26acd6d6edfe from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fmadd.s f26, f13, f16, f31, dyn # perform operation
fmadd.s f26, f13, f16, f31, rdn # perform operation
fmadd.s f26, f13, f16, f31, rmm # perform operation
fmadd.s f26, f13, f16, f31, rne # perform operation
fmadd.s f26, f13, f16, f31, rtz # perform operation
fmadd.s f26, f13, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x2f2cc7cb249a25de # load x3 with value 0x2f2cc7cb249a25de
sw x3, 0(x2) # store 0x2f2cc7cb249a25de in memory
flw f26, 0(x2) # load 0x2f2cc7cb249a25de from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fmadd.s f3, f23, f26, f31, dyn # perform operation
fmadd.s f3, f23, f26, f31, rdn # perform operation
fmadd.s f3, f23, f26, f31, rmm # perform operation
fmadd.s f3, f23, f26, f31, rne # perform operation
fmadd.s f3, f23, f26, f31, rtz # perform operation
fmadd.s f3, f23, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f26, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x4b95d73519dd3609 # load x3 with value 0x4b95d73519dd3609
sw x3, 0(x2) # store 0x4b95d73519dd3609 in memory
flw f31, 0(x2) # load 0x4b95d73519dd3609 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fmadd.s f24, f10, f31, f19, dyn # perform operation
fmadd.s f24, f10, f31, f19, rdn # perform operation
fmadd.s f24, f10, f31, f19, rmm # perform operation
fmadd.s f24, f10, f31, f19, rne # perform operation
fmadd.s f24, f10, f31, f19, rtz # perform operation
fmadd.s f24, f10, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f10, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f10, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f10, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f10, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f10, f31, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xed2f637418220d96 # load x3 with value 0xed2f637418220d96
sw x3, 0(x2) # store 0xed2f637418220d96 in memory
flw f10, 0(x2) # load 0xed2f637418220d96 from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmadd.s f8, f12, f10, f11, dyn # perform operation
fmadd.s f8, f12, f10, f11, rdn # perform operation
fmadd.s f8, f12, f10, f11, rmm # perform operation
fmadd.s f8, f12, f10, f11, rne # perform operation
fmadd.s f8, f12, f10, f11, rtz # perform operation
fmadd.s f8, f12, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f12, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xe7c9f51cc96547f8 # load x3 with value 0xe7c9f51cc96547f8
sw x3, 0(x2) # store 0xe7c9f51cc96547f8 in memory
flw f27, 0(x2) # load 0xe7c9f51cc96547f8 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmadd.s f20, f8, f27, f30, dyn # perform operation
fmadd.s f20, f8, f27, f30, rdn # perform operation
fmadd.s f20, f8, f27, f30, rmm # perform operation
fmadd.s f20, f8, f27, f30, rne # perform operation
fmadd.s f20, f8, f27, f30, rtz # perform operation
fmadd.s f20, f8, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f8, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x545f9c66318e4a03 # load x3 with value 0x545f9c66318e4a03
sw x3, 0(x2) # store 0x545f9c66318e4a03 in memory
flw f8, 0(x2) # load 0x545f9c66318e4a03 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fmadd.s f28, f31, f8, f20, dyn # perform operation
fmadd.s f28, f31, f8, f20, rdn # perform operation
fmadd.s f28, f31, f8, f20, rmm # perform operation
fmadd.s f28, f31, f8, f20, rne # perform operation
fmadd.s f28, f31, f8, f20, rtz # perform operation
fmadd.s f28, f31, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f31, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f31, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f31, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f31, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f31, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xd18c7cc0c3935ffd # load x3 with value 0xd18c7cc0c3935ffd
sw x3, 0(x2) # store 0xd18c7cc0c3935ffd in memory
flw f31, 0(x2) # load 0xd18c7cc0c3935ffd from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmadd.s f26, f2, f31, f24, dyn # perform operation
fmadd.s f26, f2, f31, f24, rdn # perform operation
fmadd.s f26, f2, f31, f24, rmm # perform operation
fmadd.s f26, f2, f31, f24, rne # perform operation
fmadd.s f26, f2, f31, f24, rtz # perform operation
fmadd.s f26, f2, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f2, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x8cccf4edb979dea5 # load x3 with value 0x8cccf4edb979dea5
sw x3, 0(x2) # store 0x8cccf4edb979dea5 in memory
flw f18, 0(x2) # load 0x8cccf4edb979dea5 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fmadd.s f9, f13, f18, f8, dyn # perform operation
fmadd.s f9, f13, f18, f8, rdn # perform operation
fmadd.s f9, f13, f18, f8, rmm # perform operation
fmadd.s f9, f13, f18, f8, rne # perform operation
fmadd.s f9, f13, f18, f8, rtz # perform operation
fmadd.s f9, f13, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xab173572040baac1 # load x3 with value 0xab173572040baac1
sw x3, 0(x2) # store 0xab173572040baac1 in memory
flw f26, 0(x2) # load 0xab173572040baac1 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
fmadd.s f17, f7, f26, f8, dyn # perform operation
fmadd.s f17, f7, f26, f8, rdn # perform operation
fmadd.s f17, f7, f26, f8, rmm # perform operation
fmadd.s f17, f7, f26, f8, rne # perform operation
fmadd.s f17, f7, f26, f8, rtz # perform operation
fmadd.s f17, f7, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f7, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f7, f26, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x18ae281eb70b434 # load x3 with value 0x18ae281eb70b434
sw x3, 0(x2) # store 0x18ae281eb70b434 in memory
flw f24, 0(x2) # load 0x18ae281eb70b434 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fmadd.s f16, f29, f24, f6, dyn # perform operation
fmadd.s f16, f29, f24, f6, rdn # perform operation
fmadd.s f16, f29, f24, f6, rmm # perform operation
fmadd.s f16, f29, f24, f6, rne # perform operation
fmadd.s f16, f29, f24, f6, rtz # perform operation
fmadd.s f16, f29, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f29, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f29, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x489332d7b8266c0a # load x3 with value 0x489332d7b8266c0a
sw x3, 0(x2) # store 0x489332d7b8266c0a in memory
flw f21, 0(x2) # load 0x489332d7b8266c0a from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmadd.s f27, f25, f21, f28, dyn # perform operation
fmadd.s f27, f25, f21, f28, rdn # perform operation
fmadd.s f27, f25, f21, f28, rmm # perform operation
fmadd.s f27, f25, f21, f28, rne # perform operation
fmadd.s f27, f25, f21, f28, rtz # perform operation
fmadd.s f27, f25, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x94f920e1a562bc46 # load x3 with value 0x94f920e1a562bc46
sw x3, 0(x2) # store 0x94f920e1a562bc46 in memory
flw f18, 0(x2) # load 0x94f920e1a562bc46 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f21, f2, f18, f19, dyn # perform operation
fmadd.s f21, f2, f18, f19, rdn # perform operation
fmadd.s f21, f2, f18, f19, rmm # perform operation
fmadd.s f21, f2, f18, f19, rne # perform operation
fmadd.s f21, f2, f18, f19, rtz # perform operation
fmadd.s f21, f2, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x60c89c10dda889ac # load x3 with value 0x60c89c10dda889ac
sw x3, 0(x2) # store 0x60c89c10dda889ac in memory
flw f29, 0(x2) # load 0x60c89c10dda889ac from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fmadd.s f17, f3, f29, f7, dyn # perform operation
fmadd.s f17, f3, f29, f7, rdn # perform operation
fmadd.s f17, f3, f29, f7, rmm # perform operation
fmadd.s f17, f3, f29, f7, rne # perform operation
fmadd.s f17, f3, f29, f7, rtz # perform operation
fmadd.s f17, f3, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xe9acec5b3bf271d0 # load x3 with value 0xe9acec5b3bf271d0
sw x3, 0(x2) # store 0xe9acec5b3bf271d0 in memory
flw f21, 0(x2) # load 0xe9acec5b3bf271d0 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmadd.s f1, f18, f21, f5, dyn # perform operation
fmadd.s f1, f18, f21, f5, rdn # perform operation
fmadd.s f1, f18, f21, f5, rmm # perform operation
fmadd.s f1, f18, f21, f5, rne # perform operation
fmadd.s f1, f18, f21, f5, rtz # perform operation
fmadd.s f1, f18, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xfd357aaa3544fbb3 # load x3 with value 0xfd357aaa3544fbb3
sw x3, 0(x2) # store 0xfd357aaa3544fbb3 in memory
flw f22, 0(x2) # load 0xfd357aaa3544fbb3 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmadd.s f19, f26, f22, f31, dyn # perform operation
fmadd.s f19, f26, f22, f31, rdn # perform operation
fmadd.s f19, f26, f22, f31, rmm # perform operation
fmadd.s f19, f26, f22, f31, rne # perform operation
fmadd.s f19, f26, f22, f31, rtz # perform operation
fmadd.s f19, f26, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x8066ed275a280555 # load x3 with value 0x8066ed275a280555
sw x3, 0(x2) # store 0x8066ed275a280555 in memory
flw f28, 0(x2) # load 0x8066ed275a280555 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmadd.s f26, f23, f28, f25, dyn # perform operation
fmadd.s f26, f23, f28, f25, rdn # perform operation
fmadd.s f26, f23, f28, f25, rmm # perform operation
fmadd.s f26, f23, f28, f25, rne # perform operation
fmadd.s f26, f23, f28, f25, rtz # perform operation
fmadd.s f26, f23, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xc64c7f8a8a8470a8 # load x3 with value 0xc64c7f8a8a8470a8
sw x3, 0(x2) # store 0xc64c7f8a8a8470a8 in memory
flw f8, 0(x2) # load 0xc64c7f8a8a8470a8 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f17, f24, f8, f20, dyn # perform operation
fmadd.s f17, f24, f8, f20, rdn # perform operation
fmadd.s f17, f24, f8, f20, rmm # perform operation
fmadd.s f17, f24, f8, f20, rne # perform operation
fmadd.s f17, f24, f8, f20, rtz # perform operation
fmadd.s f17, f24, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0xa98b2100c0c8e9ec # load x3 with value 0xa98b2100c0c8e9ec
sw x3, 0(x2) # store 0xa98b2100c0c8e9ec in memory
flw f28, 0(x2) # load 0xa98b2100c0c8e9ec from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmadd.s f14, f2, f28, f20, dyn # perform operation
fmadd.s f14, f2, f28, f20, rdn # perform operation
fmadd.s f14, f2, f28, f20, rmm # perform operation
fmadd.s f14, f2, f28, f20, rne # perform operation
fmadd.s f14, f2, f28, f20, rtz # perform operation
fmadd.s f14, f2, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f28, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xe447f99d7461b348 # load x3 with value 0xe447f99d7461b348
sw x3, 0(x2) # store 0xe447f99d7461b348 in memory
flw f30, 0(x2) # load 0xe447f99d7461b348 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmadd.s f22, f6, f30, f9, dyn # perform operation
fmadd.s f22, f6, f30, f9, rdn # perform operation
fmadd.s f22, f6, f30, f9, rmm # perform operation
fmadd.s f22, f6, f30, f9, rne # perform operation
fmadd.s f22, f6, f30, f9, rtz # perform operation
fmadd.s f22, f6, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f30, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x131465353db30e6e # load x3 with value 0x131465353db30e6e
sw x3, 0(x2) # store 0x131465353db30e6e in memory
flw f14, 0(x2) # load 0x131465353db30e6e from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f25, f27, f14, f7, dyn # perform operation
fmadd.s f25, f27, f14, f7, rdn # perform operation
fmadd.s f25, f27, f14, f7, rmm # perform operation
fmadd.s f25, f27, f14, f7, rne # perform operation
fmadd.s f25, f27, f14, f7, rtz # perform operation
fmadd.s f25, f27, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f14, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x74621d1b9cae61c3 # load x3 with value 0x74621d1b9cae61c3
sw x3, 0(x2) # store 0x74621d1b9cae61c3 in memory
flw f11, 0(x2) # load 0x74621d1b9cae61c3 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f12, f2, f11, f22, dyn # perform operation
fmadd.s f12, f2, f11, f22, rdn # perform operation
fmadd.s f12, f2, f11, f22, rmm # perform operation
fmadd.s f12, f2, f11, f22, rne # perform operation
fmadd.s f12, f2, f11, f22, rtz # perform operation
fmadd.s f12, f2, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f2, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f2, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x5c2c2d2636b38c46 # load x3 with value 0x5c2c2d2636b38c46
sw x3, 0(x2) # store 0x5c2c2d2636b38c46 in memory
flw f15, 0(x2) # load 0x5c2c2d2636b38c46 from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmadd.s f31, f10, f15, f5, dyn # perform operation
fmadd.s f31, f10, f15, f5, rdn # perform operation
fmadd.s f31, f10, f15, f5, rmm # perform operation
fmadd.s f31, f10, f15, f5, rne # perform operation
fmadd.s f31, f10, f15, f5, rtz # perform operation
fmadd.s f31, f10, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f10, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f10, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x204e2a2808518c9c # load x3 with value 0x204e2a2808518c9c
sw x3, 0(x2) # store 0x204e2a2808518c9c in memory
flw f25, 0(x2) # load 0x204e2a2808518c9c from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fmadd.s f20, f15, f25, f1, dyn # perform operation
fmadd.s f20, f15, f25, f1, rdn # perform operation
fmadd.s f20, f15, f25, f1, rmm # perform operation
fmadd.s f20, f15, f25, f1, rne # perform operation
fmadd.s f20, f15, f25, f1, rtz # perform operation
fmadd.s f20, f15, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f15, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f15, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x6e6e3026c69fb82f # load x3 with value 0x6e6e3026c69fb82f
sw x3, 0(x2) # store 0x6e6e3026c69fb82f in memory
flw f10, 0(x2) # load 0x6e6e3026c69fb82f from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmadd.s f23, f26, f10, f1, dyn # perform operation
fmadd.s f23, f26, f10, f1, rdn # perform operation
fmadd.s f23, f26, f10, f1, rmm # perform operation
fmadd.s f23, f26, f10, f1, rne # perform operation
fmadd.s f23, f26, f10, f1, rtz # perform operation
fmadd.s f23, f26, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x9592ef6d7cd37c32 # load x3 with value 0x9592ef6d7cd37c32
sw x3, 0(x2) # store 0x9592ef6d7cd37c32 in memory
flw f6, 0(x2) # load 0x9592ef6d7cd37c32 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmadd.s f12, f7, f6, f29, dyn # perform operation
fmadd.s f12, f7, f6, f29, rdn # perform operation
fmadd.s f12, f7, f6, f29, rmm # perform operation
fmadd.s f12, f7, f6, f29, rne # perform operation
fmadd.s f12, f7, f6, f29, rtz # perform operation
fmadd.s f12, f7, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f7, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f7, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xe96abf103f269fa1 # load x3 with value 0xe96abf103f269fa1
sw x3, 0(x2) # store 0xe96abf103f269fa1 in memory
flw f22, 0(x2) # load 0xe96abf103f269fa1 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmadd.s f14, f3, f22, f11, dyn # perform operation
fmadd.s f14, f3, f22, f11, rdn # perform operation
fmadd.s f14, f3, f22, f11, rmm # perform operation
fmadd.s f14, f3, f22, f11, rne # perform operation
fmadd.s f14, f3, f22, f11, rtz # perform operation
fmadd.s f14, f3, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x9d25f36f67229feb # load x3 with value 0x9d25f36f67229feb
sw x3, 0(x2) # store 0x9d25f36f67229feb in memory
flw f29, 0(x2) # load 0x9d25f36f67229feb from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmadd.s f24, f28, f29, f7, dyn # perform operation
fmadd.s f24, f28, f29, f7, rdn # perform operation
fmadd.s f24, f28, f29, f7, rmm # perform operation
fmadd.s f24, f28, f29, f7, rne # perform operation
fmadd.s f24, f28, f29, f7, rtz # perform operation
fmadd.s f24, f28, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xfb47366ae60c0210 # load x3 with value 0xfb47366ae60c0210
sw x3, 0(x2) # store 0xfb47366ae60c0210 in memory
flw f2, 0(x2) # load 0xfb47366ae60c0210 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmadd.s f23, f31, f2, f14, dyn # perform operation
fmadd.s f23, f31, f2, f14, rdn # perform operation
fmadd.s f23, f31, f2, f14, rmm # perform operation
fmadd.s f23, f31, f2, f14, rne # perform operation
fmadd.s f23, f31, f2, f14, rtz # perform operation
fmadd.s f23, f31, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xc56cf4c062314584 # load x3 with value 0xc56cf4c062314584
sw x3, 0(x2) # store 0xc56cf4c062314584 in memory
flw f29, 0(x2) # load 0xc56cf4c062314584 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f12, f19, f29, f2, dyn # perform operation
fmadd.s f12, f19, f29, f2, rdn # perform operation
fmadd.s f12, f19, f29, f2, rmm # perform operation
fmadd.s f12, f19, f29, f2, rne # perform operation
fmadd.s f12, f19, f29, f2, rtz # perform operation
fmadd.s f12, f19, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f29, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0xb5eb11b85f846dd3 # load x3 with value 0xb5eb11b85f846dd3
sw x3, 0(x2) # store 0xb5eb11b85f846dd3 in memory
flw f23, 0(x2) # load 0xb5eb11b85f846dd3 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmadd.s f6, f16, f23, f30, dyn # perform operation
fmadd.s f6, f16, f23, f30, rdn # perform operation
fmadd.s f6, f16, f23, f30, rmm # perform operation
fmadd.s f6, f16, f23, f30, rne # perform operation
fmadd.s f6, f16, f23, f30, rtz # perform operation
fmadd.s f6, f16, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0xe75da09c4d6efbb # load x3 with value 0xe75da09c4d6efbb
sw x3, 0(x2) # store 0xe75da09c4d6efbb in memory
flw f1, 0(x2) # load 0xe75da09c4d6efbb from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fmadd.s f10, f30, f1, f8, dyn # perform operation
fmadd.s f10, f30, f1, f8, rdn # perform operation
fmadd.s f10, f30, f1, f8, rmm # perform operation
fmadd.s f10, f30, f1, f8, rne # perform operation
fmadd.s f10, f30, f1, f8, rtz # perform operation
fmadd.s f10, f30, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x42b298bca69fc8c4 # load x3 with value 0x42b298bca69fc8c4
sw x3, 0(x2) # store 0x42b298bca69fc8c4 in memory
flw f21, 0(x2) # load 0x42b298bca69fc8c4 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f20, f1, f21, f23, dyn # perform operation
fmadd.s f20, f1, f21, f23, rdn # perform operation
fmadd.s f20, f1, f21, f23, rmm # perform operation
fmadd.s f20, f1, f21, f23, rne # perform operation
fmadd.s f20, f1, f21, f23, rtz # perform operation
fmadd.s f20, f1, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0xdad0e51d58c43dbd # load x3 with value 0xdad0e51d58c43dbd
sw x3, 0(x2) # store 0xdad0e51d58c43dbd in memory
flw f22, 0(x2) # load 0xdad0e51d58c43dbd from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmadd.s f11, f8, f22, f19, dyn # perform operation
fmadd.s f11, f8, f22, f19, rdn # perform operation
fmadd.s f11, f8, f22, f19, rmm # perform operation
fmadd.s f11, f8, f22, f19, rne # perform operation
fmadd.s f11, f8, f22, f19, rtz # perform operation
fmadd.s f11, f8, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f22, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x65a35a8ba6088280 # load x3 with value 0x65a35a8ba6088280
sw x3, 0(x2) # store 0x65a35a8ba6088280 in memory
flw f6, 0(x2) # load 0x65a35a8ba6088280 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fmadd.s f28, f2, f6, f20, dyn # perform operation
fmadd.s f28, f2, f6, f20, rdn # perform operation
fmadd.s f28, f2, f6, f20, rmm # perform operation
fmadd.s f28, f2, f6, f20, rne # perform operation
fmadd.s f28, f2, f6, f20, rtz # perform operation
fmadd.s f28, f2, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x17fe1f49e930d2d9 # load x3 with value 0x17fe1f49e930d2d9
sw x3, 0(x2) # store 0x17fe1f49e930d2d9 in memory
flw f15, 0(x2) # load 0x17fe1f49e930d2d9 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmadd.s f27, f25, f15, f29, dyn # perform operation
fmadd.s f27, f25, f15, f29, rdn # perform operation
fmadd.s f27, f25, f15, f29, rmm # perform operation
fmadd.s f27, f25, f15, f29, rne # perform operation
fmadd.s f27, f25, f15, f29, rtz # perform operation
fmadd.s f27, f25, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xbe7bdf5979b7c837 # load x3 with value 0xbe7bdf5979b7c837
sw x3, 0(x2) # store 0xbe7bdf5979b7c837 in memory
flw f6, 0(x2) # load 0xbe7bdf5979b7c837 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmadd.s f7, f17, f6, f12, dyn # perform operation
fmadd.s f7, f17, f6, f12, rdn # perform operation
fmadd.s f7, f17, f6, f12, rmm # perform operation
fmadd.s f7, f17, f6, f12, rne # perform operation
fmadd.s f7, f17, f6, f12, rtz # perform operation
fmadd.s f7, f17, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f6, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x84405a811ac1f2e3 # load x3 with value 0x84405a811ac1f2e3
sw x3, 0(x2) # store 0x84405a811ac1f2e3 in memory
flw f7, 0(x2) # load 0x84405a811ac1f2e3 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fmadd.s f9, f3, f7, f29, dyn # perform operation
fmadd.s f9, f3, f7, f29, rdn # perform operation
fmadd.s f9, f3, f7, f29, rmm # perform operation
fmadd.s f9, f3, f7, f29, rne # perform operation
fmadd.s f9, f3, f7, f29, rtz # perform operation
fmadd.s f9, f3, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x298a5bfc38e94b8e # load x3 with value 0x298a5bfc38e94b8e
sw x3, 0(x2) # store 0x298a5bfc38e94b8e in memory
flw f16, 0(x2) # load 0x298a5bfc38e94b8e from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmadd.s f10, f14, f16, f23, dyn # perform operation
fmadd.s f10, f14, f16, f23, rdn # perform operation
fmadd.s f10, f14, f16, f23, rmm # perform operation
fmadd.s f10, f14, f16, f23, rne # perform operation
fmadd.s f10, f14, f16, f23, rtz # perform operation
fmadd.s f10, f14, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f14, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x88c2400a6d05e467 # load x3 with value 0x88c2400a6d05e467
sw x3, 0(x2) # store 0x88c2400a6d05e467 in memory
flw f29, 0(x2) # load 0x88c2400a6d05e467 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fmadd.s f12, f1, f29, f30, dyn # perform operation
fmadd.s f12, f1, f29, f30, rdn # perform operation
fmadd.s f12, f1, f29, f30, rmm # perform operation
fmadd.s f12, f1, f29, f30, rne # perform operation
fmadd.s f12, f1, f29, f30, rtz # perform operation
fmadd.s f12, f1, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f1, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f1, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x49c9b48767d1153e # load x3 with value 0x49c9b48767d1153e
sw x3, 0(x2) # store 0x49c9b48767d1153e in memory
flw f30, 0(x2) # load 0x49c9b48767d1153e from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f12, f25, f30, f27, dyn # perform operation
fmadd.s f12, f25, f30, f27, rdn # perform operation
fmadd.s f12, f25, f30, f27, rmm # perform operation
fmadd.s f12, f25, f30, f27, rne # perform operation
fmadd.s f12, f25, f30, f27, rtz # perform operation
fmadd.s f12, f25, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0xfe8ce08caab4189a # load x3 with value 0xfe8ce08caab4189a
sw x3, 0(x2) # store 0xfe8ce08caab4189a in memory
flw f28, 0(x2) # load 0xfe8ce08caab4189a from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmadd.s f31, f24, f28, f16, dyn # perform operation
fmadd.s f31, f24, f28, f16, rdn # perform operation
fmadd.s f31, f24, f28, f16, rmm # perform operation
fmadd.s f31, f24, f28, f16, rne # perform operation
fmadd.s f31, f24, f28, f16, rtz # perform operation
fmadd.s f31, f24, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f28, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0xa5486ceb9128a238 # load x3 with value 0xa5486ceb9128a238
sw x3, 0(x2) # store 0xa5486ceb9128a238 in memory
flw f11, 0(x2) # load 0xa5486ceb9128a238 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fmadd.s f31, f6, f11, f20, dyn # perform operation
fmadd.s f31, f6, f11, f20, rdn # perform operation
fmadd.s f31, f6, f11, f20, rmm # perform operation
fmadd.s f31, f6, f11, f20, rne # perform operation
fmadd.s f31, f6, f11, f20, rtz # perform operation
fmadd.s f31, f6, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xca8f6a7476f06125 # load x3 with value 0xca8f6a7476f06125
sw x3, 0(x2) # store 0xca8f6a7476f06125 in memory
flw f16, 0(x2) # load 0xca8f6a7476f06125 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f29, f2, f16, f18, dyn # perform operation
fmadd.s f29, f2, f16, f18, rdn # perform operation
fmadd.s f29, f2, f16, f18, rmm # perform operation
fmadd.s f29, f2, f16, f18, rne # perform operation
fmadd.s f29, f2, f16, f18, rtz # perform operation
fmadd.s f29, f2, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f16, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x556ca5db89faad32 # load x3 with value 0x556ca5db89faad32
sw x3, 0(x2) # store 0x556ca5db89faad32 in memory
flw f2, 0(x2) # load 0x556ca5db89faad32 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f30, f6, f2, f14, dyn # perform operation
fmadd.s f30, f6, f2, f14, rdn # perform operation
fmadd.s f30, f6, f2, f14, rmm # perform operation
fmadd.s f30, f6, f2, f14, rne # perform operation
fmadd.s f30, f6, f2, f14, rtz # perform operation
fmadd.s f30, f6, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f6, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f6, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x7415d52ea52fc57f # load x3 with value 0x7415d52ea52fc57f
sw x3, 0(x2) # store 0x7415d52ea52fc57f in memory
flw f27, 0(x2) # load 0x7415d52ea52fc57f from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmadd.s f9, f1, f27, f6, dyn # perform operation
fmadd.s f9, f1, f27, f6, rdn # perform operation
fmadd.s f9, f1, f27, f6, rmm # perform operation
fmadd.s f9, f1, f27, f6, rne # perform operation
fmadd.s f9, f1, f27, f6, rtz # perform operation
fmadd.s f9, f1, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xdd13212b75bb990c # load x3 with value 0xdd13212b75bb990c
sw x3, 0(x2) # store 0xdd13212b75bb990c in memory
flw f16, 0(x2) # load 0xdd13212b75bb990c from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fmadd.s f20, f25, f16, f15, dyn # perform operation
fmadd.s f20, f25, f16, f15, rdn # perform operation
fmadd.s f20, f25, f16, f15, rmm # perform operation
fmadd.s f20, f25, f16, f15, rne # perform operation
fmadd.s f20, f25, f16, f15, rtz # perform operation
fmadd.s f20, f25, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xa9ce403068821197 # load x3 with value 0xa9ce403068821197
sw x3, 0(x2) # store 0xa9ce403068821197 in memory
flw f23, 0(x2) # load 0xa9ce403068821197 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmadd.s f16, f31, f23, f24, dyn # perform operation
fmadd.s f16, f31, f23, f24, rdn # perform operation
fmadd.s f16, f31, f23, f24, rmm # perform operation
fmadd.s f16, f31, f23, f24, rne # perform operation
fmadd.s f16, f31, f23, f24, rtz # perform operation
fmadd.s f16, f31, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x760255cdc58c560b # load x3 with value 0x760255cdc58c560b
sw x3, 0(x2) # store 0x760255cdc58c560b in memory
flw f22, 0(x2) # load 0x760255cdc58c560b from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmadd.s f25, f20, f22, f26, dyn # perform operation
fmadd.s f25, f20, f22, f26, rdn # perform operation
fmadd.s f25, f20, f22, f26, rmm # perform operation
fmadd.s f25, f20, f22, f26, rne # perform operation
fmadd.s f25, f20, f22, f26, rtz # perform operation
fmadd.s f25, f20, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f22, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x9626a6e91d039220 # load x3 with value 0x9626a6e91d039220
sw x3, 0(x2) # store 0x9626a6e91d039220 in memory
flw f28, 0(x2) # load 0x9626a6e91d039220 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmadd.s f15, f17, f28, f27, dyn # perform operation
fmadd.s f15, f17, f28, f27, rdn # perform operation
fmadd.s f15, f17, f28, f27, rmm # perform operation
fmadd.s f15, f17, f28, f27, rne # perform operation
fmadd.s f15, f17, f28, f27, rtz # perform operation
fmadd.s f15, f17, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xf7c6210628d238ef # load x3 with value 0xf7c6210628d238ef
sw x3, 0(x2) # store 0xf7c6210628d238ef in memory
flw f30, 0(x2) # load 0xf7c6210628d238ef from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmadd.s f18, f1, f30, f20, dyn # perform operation
fmadd.s f18, f1, f30, f20, rdn # perform operation
fmadd.s f18, f1, f30, f20, rmm # perform operation
fmadd.s f18, f1, f30, f20, rne # perform operation
fmadd.s f18, f1, f30, f20, rtz # perform operation
fmadd.s f18, f1, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f30, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x4acb10b563928ffd # load x3 with value 0x4acb10b563928ffd
sw x3, 0(x2) # store 0x4acb10b563928ffd in memory
flw f13, 0(x2) # load 0x4acb10b563928ffd from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmadd.s f14, f16, f13, f15, dyn # perform operation
fmadd.s f14, f16, f13, f15, rdn # perform operation
fmadd.s f14, f16, f13, f15, rmm # perform operation
fmadd.s f14, f16, f13, f15, rne # perform operation
fmadd.s f14, f16, f13, f15, rtz # perform operation
fmadd.s f14, f16, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f16, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f16, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f16, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f16, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f16, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x531aa1f834486f9a # load x3 with value 0x531aa1f834486f9a
sw x3, 0(x2) # store 0x531aa1f834486f9a in memory
flw f2, 0(x2) # load 0x531aa1f834486f9a from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmadd.s f9, f28, f2, f25, dyn # perform operation
fmadd.s f9, f28, f2, f25, rdn # perform operation
fmadd.s f9, f28, f2, f25, rmm # perform operation
fmadd.s f9, f28, f2, f25, rne # perform operation
fmadd.s f9, f28, f2, f25, rtz # perform operation
fmadd.s f9, f28, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xc8adfe09d419b948 # load x3 with value 0xc8adfe09d419b948
sw x3, 0(x2) # store 0xc8adfe09d419b948 in memory
flw f22, 0(x2) # load 0xc8adfe09d419b948 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fmadd.s f16, f20, f22, f15, dyn # perform operation
fmadd.s f16, f20, f22, f15, rdn # perform operation
fmadd.s f16, f20, f22, f15, rmm # perform operation
fmadd.s f16, f20, f22, f15, rne # perform operation
fmadd.s f16, f20, f22, f15, rtz # perform operation
fmadd.s f16, f20, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x92f442452985f455 # load x3 with value 0x92f442452985f455
sw x3, 0(x2) # store 0x92f442452985f455 in memory
flw f1, 0(x2) # load 0x92f442452985f455 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmadd.s f3, f10, f1, f6, dyn # perform operation
fmadd.s f3, f10, f1, f6, rdn # perform operation
fmadd.s f3, f10, f1, f6, rmm # perform operation
fmadd.s f3, f10, f1, f6, rne # perform operation
fmadd.s f3, f10, f1, f6, rtz # perform operation
fmadd.s f3, f10, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x4cc0d642155b9bcc # load x3 with value 0x4cc0d642155b9bcc
sw x3, 0(x2) # store 0x4cc0d642155b9bcc in memory
flw f16, 0(x2) # load 0x4cc0d642155b9bcc from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fmadd.s f19, f28, f16, f10, dyn # perform operation
fmadd.s f19, f28, f16, f10, rdn # perform operation
fmadd.s f19, f28, f16, f10, rmm # perform operation
fmadd.s f19, f28, f16, f10, rne # perform operation
fmadd.s f19, f28, f16, f10, rtz # perform operation
fmadd.s f19, f28, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f16, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x89037dd1dcc214fb # load x3 with value 0x89037dd1dcc214fb
sw x3, 0(x2) # store 0x89037dd1dcc214fb in memory
flw f20, 0(x2) # load 0x89037dd1dcc214fb from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmadd.s f6, f25, f20, f9, dyn # perform operation
fmadd.s f6, f25, f20, f9, rdn # perform operation
fmadd.s f6, f25, f20, f9, rmm # perform operation
fmadd.s f6, f25, f20, f9, rne # perform operation
fmadd.s f6, f25, f20, f9, rtz # perform operation
fmadd.s f6, f25, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f25, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f25, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f25, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f25, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f25, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x8676923780fa8b3e # load x3 with value 0x8676923780fa8b3e
sw x3, 0(x2) # store 0x8676923780fa8b3e in memory
flw f5, 0(x2) # load 0x8676923780fa8b3e from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmadd.s f14, f19, f5, f9, dyn # perform operation
fmadd.s f14, f19, f5, f9, rdn # perform operation
fmadd.s f14, f19, f5, f9, rmm # perform operation
fmadd.s f14, f19, f5, f9, rne # perform operation
fmadd.s f14, f19, f5, f9, rtz # perform operation
fmadd.s f14, f19, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f19, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f19, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x28d98acdbbef79ba # load x3 with value 0x28d98acdbbef79ba
sw x3, 0(x2) # store 0x28d98acdbbef79ba in memory
flw f11, 0(x2) # load 0x28d98acdbbef79ba from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmadd.s f7, f20, f11, f9, dyn # perform operation
fmadd.s f7, f20, f11, f9, rdn # perform operation
fmadd.s f7, f20, f11, f9, rmm # perform operation
fmadd.s f7, f20, f11, f9, rne # perform operation
fmadd.s f7, f20, f11, f9, rtz # perform operation
fmadd.s f7, f20, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f11, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x4591087a70fce968 # load x3 with value 0x4591087a70fce968
sw x3, 0(x2) # store 0x4591087a70fce968 in memory
flw f13, 0(x2) # load 0x4591087a70fce968 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fmadd.s f24, f25, f13, f16, dyn # perform operation
fmadd.s f24, f25, f13, f16, rdn # perform operation
fmadd.s f24, f25, f13, f16, rmm # perform operation
fmadd.s f24, f25, f13, f16, rne # perform operation
fmadd.s f24, f25, f13, f16, rtz # perform operation
fmadd.s f24, f25, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f25, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f25, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f25, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f25, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f25, f13, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x59ce7cc54d708197 # load x3 with value 0x59ce7cc54d708197
sw x3, 0(x2) # store 0x59ce7cc54d708197 in memory
flw f15, 0(x2) # load 0x59ce7cc54d708197 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmadd.s f10, f20, f15, f26, dyn # perform operation
fmadd.s f10, f20, f15, f26, rdn # perform operation
fmadd.s f10, f20, f15, f26, rmm # perform operation
fmadd.s f10, f20, f15, f26, rne # perform operation
fmadd.s f10, f20, f15, f26, rtz # perform operation
fmadd.s f10, f20, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0xe8a07f58b11d8c3b # load x3 with value 0xe8a07f58b11d8c3b
sw x3, 0(x2) # store 0xe8a07f58b11d8c3b in memory
flw f16, 0(x2) # load 0xe8a07f58b11d8c3b from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmadd.s f14, f6, f16, f25, dyn # perform operation
fmadd.s f14, f6, f16, f25, rdn # perform operation
fmadd.s f14, f6, f16, f25, rmm # perform operation
fmadd.s f14, f6, f16, f25, rne # perform operation
fmadd.s f14, f6, f16, f25, rtz # perform operation
fmadd.s f14, f6, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f16, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x58465d745006a429 # load x3 with value 0x58465d745006a429
sw x3, 0(x2) # store 0x58465d745006a429 in memory
flw f17, 0(x2) # load 0x58465d745006a429 from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fmadd.s f14, f23, f17, f30, dyn # perform operation
fmadd.s f14, f23, f17, f30, rdn # perform operation
fmadd.s f14, f23, f17, f30, rmm # perform operation
fmadd.s f14, f23, f17, f30, rne # perform operation
fmadd.s f14, f23, f17, f30, rtz # perform operation
fmadd.s f14, f23, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f23, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f23, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x2ebfd310e31ec645 # load x3 with value 0x2ebfd310e31ec645
sw x3, 0(x2) # store 0x2ebfd310e31ec645 in memory
flw f23, 0(x2) # load 0x2ebfd310e31ec645 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fmadd.s f31, f1, f23, f19, dyn # perform operation
fmadd.s f31, f1, f23, f19, rdn # perform operation
fmadd.s f31, f1, f23, f19, rmm # perform operation
fmadd.s f31, f1, f23, f19, rne # perform operation
fmadd.s f31, f1, f23, f19, rtz # perform operation
fmadd.s f31, f1, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f1, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f1, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x2780209617dd6b60 # load x3 with value 0x2780209617dd6b60
sw x3, 0(x2) # store 0x2780209617dd6b60 in memory
flw f15, 0(x2) # load 0x2780209617dd6b60 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmadd.s f30, f22, f15, f3, dyn # perform operation
fmadd.s f30, f22, f15, f3, rdn # perform operation
fmadd.s f30, f22, f15, f3, rmm # perform operation
fmadd.s f30, f22, f15, f3, rne # perform operation
fmadd.s f30, f22, f15, f3, rtz # perform operation
fmadd.s f30, f22, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f22, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xa16944a62f87c9a7 # load x3 with value 0xa16944a62f87c9a7
sw x3, 0(x2) # store 0xa16944a62f87c9a7 in memory
flw f7, 0(x2) # load 0xa16944a62f87c9a7 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmadd.s f29, f31, f7, f28, dyn # perform operation
fmadd.s f29, f31, f7, f28, rdn # perform operation
fmadd.s f29, f31, f7, f28, rmm # perform operation
fmadd.s f29, f31, f7, f28, rne # perform operation
fmadd.s f29, f31, f7, f28, rtz # perform operation
fmadd.s f29, f31, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f7, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x55e516007c625d8c # load x3 with value 0x55e516007c625d8c
sw x3, 0(x2) # store 0x55e516007c625d8c in memory
flw f6, 0(x2) # load 0x55e516007c625d8c from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmadd.s f10, f9, f6, f5, dyn # perform operation
fmadd.s f10, f9, f6, f5, rdn # perform operation
fmadd.s f10, f9, f6, f5, rmm # perform operation
fmadd.s f10, f9, f6, f5, rne # perform operation
fmadd.s f10, f9, f6, f5, rtz # perform operation
fmadd.s f10, f9, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xc9b8f6afa1a980a5 # load x3 with value 0xc9b8f6afa1a980a5
sw x3, 0(x2) # store 0xc9b8f6afa1a980a5 in memory
flw f17, 0(x2) # load 0xc9b8f6afa1a980a5 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmadd.s f5, f27, f17, f16, dyn # perform operation
fmadd.s f5, f27, f17, f16, rdn # perform operation
fmadd.s f5, f27, f17, f16, rmm # perform operation
fmadd.s f5, f27, f17, f16, rne # perform operation
fmadd.s f5, f27, f17, f16, rtz # perform operation
fmadd.s f5, f27, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f27, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x676fbbda150fb59c # load x3 with value 0x676fbbda150fb59c
sw x3, 0(x2) # store 0x676fbbda150fb59c in memory
flw f2, 0(x2) # load 0x676fbbda150fb59c from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fmadd.s f7, f12, f2, f18, dyn # perform operation
fmadd.s f7, f12, f2, f18, rdn # perform operation
fmadd.s f7, f12, f2, f18, rmm # perform operation
fmadd.s f7, f12, f2, f18, rne # perform operation
fmadd.s f7, f12, f2, f18, rtz # perform operation
fmadd.s f7, f12, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xf084b0a15d1db705 # load x3 with value 0xf084b0a15d1db705
sw x3, 0(x2) # store 0xf084b0a15d1db705 in memory
flw f18, 0(x2) # load 0xf084b0a15d1db705 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fmadd.s f27, f2, f18, f19, dyn # perform operation
fmadd.s f27, f2, f18, f19, rdn # perform operation
fmadd.s f27, f2, f18, f19, rmm # perform operation
fmadd.s f27, f2, f18, f19, rne # perform operation
fmadd.s f27, f2, f18, f19, rtz # perform operation
fmadd.s f27, f2, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xc95088d05e2ebcb3 # load x3 with value 0xc95088d05e2ebcb3
sw x3, 0(x2) # store 0xc95088d05e2ebcb3 in memory
flw f5, 0(x2) # load 0xc95088d05e2ebcb3 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmadd.s f28, f23, f5, f15, dyn # perform operation
fmadd.s f28, f23, f5, f15, rdn # perform operation
fmadd.s f28, f23, f5, f15, rmm # perform operation
fmadd.s f28, f23, f5, f15, rne # perform operation
fmadd.s f28, f23, f5, f15, rtz # perform operation
fmadd.s f28, f23, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x7eb62a386d0ed3f1 # load x3 with value 0x7eb62a386d0ed3f1
sw x3, 0(x2) # store 0x7eb62a386d0ed3f1 in memory
flw f17, 0(x2) # load 0x7eb62a386d0ed3f1 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmadd.s f21, f13, f17, f28, dyn # perform operation
fmadd.s f21, f13, f17, f28, rdn # perform operation
fmadd.s f21, f13, f17, f28, rmm # perform operation
fmadd.s f21, f13, f17, f28, rne # perform operation
fmadd.s f21, f13, f17, f28, rtz # perform operation
fmadd.s f21, f13, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x61e4a0d74eb39a41 # load x3 with value 0x61e4a0d74eb39a41
sw x3, 0(x2) # store 0x61e4a0d74eb39a41 in memory
flw f22, 0(x2) # load 0x61e4a0d74eb39a41 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmadd.s f15, f6, f22, f20, dyn # perform operation
fmadd.s f15, f6, f22, f20, rdn # perform operation
fmadd.s f15, f6, f22, f20, rmm # perform operation
fmadd.s f15, f6, f22, f20, rne # perform operation
fmadd.s f15, f6, f22, f20, rtz # perform operation
fmadd.s f15, f6, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f6, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x98e49556c944b8aa # load x3 with value 0x98e49556c944b8aa
sw x3, 0(x2) # store 0x98e49556c944b8aa in memory
flw f9, 0(x2) # load 0x98e49556c944b8aa from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmadd.s f2, f21, f9, f11, dyn # perform operation
fmadd.s f2, f21, f9, f11, rdn # perform operation
fmadd.s f2, f21, f9, f11, rmm # perform operation
fmadd.s f2, f21, f9, f11, rne # perform operation
fmadd.s f2, f21, f9, f11, rtz # perform operation
fmadd.s f2, f21, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f9, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x25b2c50b3deb070e # load x3 with value 0x25b2c50b3deb070e
sw x3, 0(x2) # store 0x25b2c50b3deb070e in memory
flw f27, 0(x2) # load 0x25b2c50b3deb070e from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f20, f15, f27, f18, dyn # perform operation
fmadd.s f20, f15, f27, f18, rdn # perform operation
fmadd.s f20, f15, f27, f18, rmm # perform operation
fmadd.s f20, f15, f27, f18, rne # perform operation
fmadd.s f20, f15, f27, f18, rtz # perform operation
fmadd.s f20, f15, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f15, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f15, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f15, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f15, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f15, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0xd1d08dbf3ef0195a # load x3 with value 0xd1d08dbf3ef0195a
sw x3, 0(x2) # store 0xd1d08dbf3ef0195a in memory
flw f22, 0(x2) # load 0xd1d08dbf3ef0195a from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fmadd.s f31, f24, f22, f9, dyn # perform operation
fmadd.s f31, f24, f22, f9, rdn # perform operation
fmadd.s f31, f24, f22, f9, rmm # perform operation
fmadd.s f31, f24, f22, f9, rne # perform operation
fmadd.s f31, f24, f22, f9, rtz # perform operation
fmadd.s f31, f24, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x47632b1f879c934f # load x3 with value 0x47632b1f879c934f
sw x3, 0(x2) # store 0x47632b1f879c934f in memory
flw f26, 0(x2) # load 0x47632b1f879c934f from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f20, f7, f26, f5, dyn # perform operation
fmadd.s f20, f7, f26, f5, rdn # perform operation
fmadd.s f20, f7, f26, f5, rmm # perform operation
fmadd.s f20, f7, f26, f5, rne # perform operation
fmadd.s f20, f7, f26, f5, rtz # perform operation
fmadd.s f20, f7, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f7, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f7, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x29fd0dd0bcf15f3a # load x3 with value 0x29fd0dd0bcf15f3a
sw x3, 0(x2) # store 0x29fd0dd0bcf15f3a in memory
flw f29, 0(x2) # load 0x29fd0dd0bcf15f3a from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fmadd.s f16, f1, f29, f17, dyn # perform operation
fmadd.s f16, f1, f29, f17, rdn # perform operation
fmadd.s f16, f1, f29, f17, rmm # perform operation
fmadd.s f16, f1, f29, f17, rne # perform operation
fmadd.s f16, f1, f29, f17, rtz # perform operation
fmadd.s f16, f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f1, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xd37632b806cede0a # load x3 with value 0xd37632b806cede0a
sw x3, 0(x2) # store 0xd37632b806cede0a in memory
flw f15, 0(x2) # load 0xd37632b806cede0a from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmadd.s f6, f20, f15, f7, dyn # perform operation
fmadd.s f6, f20, f15, f7, rdn # perform operation
fmadd.s f6, f20, f15, f7, rmm # perform operation
fmadd.s f6, f20, f15, f7, rne # perform operation
fmadd.s f6, f20, f15, f7, rtz # perform operation
fmadd.s f6, f20, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xcc82c9a1d8faa7ed # load x3 with value 0xcc82c9a1d8faa7ed
sw x3, 0(x2) # store 0xcc82c9a1d8faa7ed in memory
flw f31, 0(x2) # load 0xcc82c9a1d8faa7ed from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmadd.s f24, f18, f31, f17, dyn # perform operation
fmadd.s f24, f18, f31, f17, rdn # perform operation
fmadd.s f24, f18, f31, f17, rmm # perform operation
fmadd.s f24, f18, f31, f17, rne # perform operation
fmadd.s f24, f18, f31, f17, rtz # perform operation
fmadd.s f24, f18, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f18, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x8ae5082d3bd4689e # load x3 with value 0x8ae5082d3bd4689e
sw x3, 0(x2) # store 0x8ae5082d3bd4689e in memory
flw f26, 0(x2) # load 0x8ae5082d3bd4689e from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmadd.s f3, f25, f26, f19, dyn # perform operation
fmadd.s f3, f25, f26, f19, rdn # perform operation
fmadd.s f3, f25, f26, f19, rmm # perform operation
fmadd.s f3, f25, f26, f19, rne # perform operation
fmadd.s f3, f25, f26, f19, rtz # perform operation
fmadd.s f3, f25, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f25, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x9aaceff28af6fafb # load x3 with value 0x9aaceff28af6fafb
sw x3, 0(x2) # store 0x9aaceff28af6fafb in memory
flw f7, 0(x2) # load 0x9aaceff28af6fafb from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmadd.s f11, f12, f7, f20, dyn # perform operation
fmadd.s f11, f12, f7, f20, rdn # perform operation
fmadd.s f11, f12, f7, f20, rmm # perform operation
fmadd.s f11, f12, f7, f20, rne # perform operation
fmadd.s f11, f12, f7, f20, rtz # perform operation
fmadd.s f11, f12, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f12, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f12, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f12, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f12, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f12, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x79a4135fbdfc283e # load x3 with value 0x79a4135fbdfc283e
sw x3, 0(x2) # store 0x79a4135fbdfc283e in memory
flw f2, 0(x2) # load 0x79a4135fbdfc283e from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmadd.s f3, f26, f2, f29, dyn # perform operation
fmadd.s f3, f26, f2, f29, rdn # perform operation
fmadd.s f3, f26, f2, f29, rmm # perform operation
fmadd.s f3, f26, f2, f29, rne # perform operation
fmadd.s f3, f26, f2, f29, rtz # perform operation
fmadd.s f3, f26, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f26, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x97bea87679d0c6c1 # load x3 with value 0x97bea87679d0c6c1
sw x3, 0(x2) # store 0x97bea87679d0c6c1 in memory
flw f7, 0(x2) # load 0x97bea87679d0c6c1 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmadd.s f13, f6, f7, f20, dyn # perform operation
fmadd.s f13, f6, f7, f20, rdn # perform operation
fmadd.s f13, f6, f7, f20, rmm # perform operation
fmadd.s f13, f6, f7, f20, rne # perform operation
fmadd.s f13, f6, f7, f20, rtz # perform operation
fmadd.s f13, f6, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x6f2cad3bc63d20d2 # load x3 with value 0x6f2cad3bc63d20d2
sw x3, 0(x2) # store 0x6f2cad3bc63d20d2 in memory
flw f20, 0(x2) # load 0x6f2cad3bc63d20d2 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fmadd.s f26, f7, f20, f16, dyn # perform operation
fmadd.s f26, f7, f20, f16, rdn # perform operation
fmadd.s f26, f7, f20, f16, rmm # perform operation
fmadd.s f26, f7, f20, f16, rne # perform operation
fmadd.s f26, f7, f20, f16, rtz # perform operation
fmadd.s f26, f7, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f7, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x164b9613be96c76a # load x3 with value 0x164b9613be96c76a
sw x3, 0(x2) # store 0x164b9613be96c76a in memory
flw f7, 0(x2) # load 0x164b9613be96c76a from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmadd.s f2, f5, f7, f26, dyn # perform operation
fmadd.s f2, f5, f7, f26, rdn # perform operation
fmadd.s f2, f5, f7, f26, rmm # perform operation
fmadd.s f2, f5, f7, f26, rne # perform operation
fmadd.s f2, f5, f7, f26, rtz # perform operation
fmadd.s f2, f5, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x245c815b3ab7ec6b # load x3 with value 0x245c815b3ab7ec6b
sw x3, 0(x2) # store 0x245c815b3ab7ec6b in memory
flw f28, 0(x2) # load 0x245c815b3ab7ec6b from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmadd.s f31, f21, f28, f6, dyn # perform operation
fmadd.s f31, f21, f28, f6, rdn # perform operation
fmadd.s f31, f21, f28, f6, rmm # perform operation
fmadd.s f31, f21, f28, f6, rne # perform operation
fmadd.s f31, f21, f28, f6, rtz # perform operation
fmadd.s f31, f21, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f21, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f21, f28, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x4376d81da6e1ebe3 # load x3 with value 0x4376d81da6e1ebe3
sw x3, 0(x2) # store 0x4376d81da6e1ebe3 in memory
flw f21, 0(x2) # load 0x4376d81da6e1ebe3 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fmadd.s f12, f11, f21, f27, dyn # perform operation
fmadd.s f12, f11, f21, f27, rdn # perform operation
fmadd.s f12, f11, f21, f27, rmm # perform operation
fmadd.s f12, f11, f21, f27, rne # perform operation
fmadd.s f12, f11, f21, f27, rtz # perform operation
fmadd.s f12, f11, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f11, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f11, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f11, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f11, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f11, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0xcdba9c8d15731ba9 # load x3 with value 0xcdba9c8d15731ba9
sw x3, 0(x2) # store 0xcdba9c8d15731ba9 in memory
flw f3, 0(x2) # load 0xcdba9c8d15731ba9 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f27, f24, f3, f23, dyn # perform operation
fmadd.s f27, f24, f3, f23, rdn # perform operation
fmadd.s f27, f24, f3, f23, rmm # perform operation
fmadd.s f27, f24, f3, f23, rne # perform operation
fmadd.s f27, f24, f3, f23, rtz # perform operation
fmadd.s f27, f24, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xc58403146ade3d67 # load x3 with value 0xc58403146ade3d67
sw x3, 0(x2) # store 0xc58403146ade3d67 in memory
flw f12, 0(x2) # load 0xc58403146ade3d67 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fmadd.s f8, f31, f12, f11, dyn # perform operation
fmadd.s f8, f31, f12, f11, rdn # perform operation
fmadd.s f8, f31, f12, f11, rmm # perform operation
fmadd.s f8, f31, f12, f11, rne # perform operation
fmadd.s f8, f31, f12, f11, rtz # perform operation
fmadd.s f8, f31, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xc3dc7d2c23d344d5 # load x3 with value 0xc3dc7d2c23d344d5
sw x3, 0(x2) # store 0xc3dc7d2c23d344d5 in memory
flw f24, 0(x2) # load 0xc3dc7d2c23d344d5 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fmadd.s f1, f27, f24, f25, dyn # perform operation
fmadd.s f1, f27, f24, f25, rdn # perform operation
fmadd.s f1, f27, f24, f25, rmm # perform operation
fmadd.s f1, f27, f24, f25, rne # perform operation
fmadd.s f1, f27, f24, f25, rtz # perform operation
fmadd.s f1, f27, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0xa005a4e6f22bc064 # load x3 with value 0xa005a4e6f22bc064
sw x3, 0(x2) # store 0xa005a4e6f22bc064 in memory
flw f12, 0(x2) # load 0xa005a4e6f22bc064 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmadd.s f17, f16, f12, f25, dyn # perform operation
fmadd.s f17, f16, f12, f25, rdn # perform operation
fmadd.s f17, f16, f12, f25, rmm # perform operation
fmadd.s f17, f16, f12, f25, rne # perform operation
fmadd.s f17, f16, f12, f25, rtz # perform operation
fmadd.s f17, f16, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x1f88935969502cad # load x3 with value 0x1f88935969502cad
sw x3, 0(x2) # store 0x1f88935969502cad in memory
flw f10, 0(x2) # load 0x1f88935969502cad from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmadd.s f19, f30, f10, f23, dyn # perform operation
fmadd.s f19, f30, f10, f23, rdn # perform operation
fmadd.s f19, f30, f10, f23, rmm # perform operation
fmadd.s f19, f30, f10, f23, rne # perform operation
fmadd.s f19, f30, f10, f23, rtz # perform operation
fmadd.s f19, f30, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f10, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x6db02c2cb966219e # load x3 with value 0x6db02c2cb966219e
sw x3, 0(x2) # store 0x6db02c2cb966219e in memory
flw f6, 0(x2) # load 0x6db02c2cb966219e from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmadd.s f30, f2, f6, f5, dyn # perform operation
fmadd.s f30, f2, f6, f5, rdn # perform operation
fmadd.s f30, f2, f6, f5, rmm # perform operation
fmadd.s f30, f2, f6, f5, rne # perform operation
fmadd.s f30, f2, f6, f5, rtz # perform operation
fmadd.s f30, f2, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x63d7e40a933e21f0 # load x3 with value 0x63d7e40a933e21f0
sw x3, 0(x2) # store 0x63d7e40a933e21f0 in memory
flw f26, 0(x2) # load 0x63d7e40a933e21f0 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmadd.s f31, f2, f26, f27, dyn # perform operation
fmadd.s f31, f2, f26, f27, rdn # perform operation
fmadd.s f31, f2, f26, f27, rmm # perform operation
fmadd.s f31, f2, f26, f27, rne # perform operation
fmadd.s f31, f2, f26, f27, rtz # perform operation
fmadd.s f31, f2, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x49fefbc8a90e15d3 # load x3 with value 0x49fefbc8a90e15d3
sw x3, 0(x2) # store 0x49fefbc8a90e15d3 in memory
flw f12, 0(x2) # load 0x49fefbc8a90e15d3 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fmadd.s f11, f20, f12, f10, dyn # perform operation
fmadd.s f11, f20, f12, f10, rdn # perform operation
fmadd.s f11, f20, f12, f10, rmm # perform operation
fmadd.s f11, f20, f12, f10, rne # perform operation
fmadd.s f11, f20, f12, f10, rtz # perform operation
fmadd.s f11, f20, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f20, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0xbffd34512577b0e7 # load x3 with value 0xbffd34512577b0e7
sw x3, 0(x2) # store 0xbffd34512577b0e7 in memory
flw f18, 0(x2) # load 0xbffd34512577b0e7 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmadd.s f3, f16, f18, f17, dyn # perform operation
fmadd.s f3, f16, f18, f17, rdn # perform operation
fmadd.s f3, f16, f18, f17, rmm # perform operation
fmadd.s f3, f16, f18, f17, rne # perform operation
fmadd.s f3, f16, f18, f17, rtz # perform operation
fmadd.s f3, f16, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x28bbe5e4e5f87fae # load x3 with value 0x28bbe5e4e5f87fae
sw x3, 0(x2) # store 0x28bbe5e4e5f87fae in memory
flw f10, 0(x2) # load 0x28bbe5e4e5f87fae from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmadd.s f17, f30, f10, f5, dyn # perform operation
fmadd.s f17, f30, f10, f5, rdn # perform operation
fmadd.s f17, f30, f10, f5, rmm # perform operation
fmadd.s f17, f30, f10, f5, rne # perform operation
fmadd.s f17, f30, f10, f5, rtz # perform operation
fmadd.s f17, f30, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x14d521b05b4c4085 # load x3 with value 0x14d521b05b4c4085
sw x3, 0(x2) # store 0x14d521b05b4c4085 in memory
flw f28, 0(x2) # load 0x14d521b05b4c4085 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmadd.s f20, f8, f28, f13, dyn # perform operation
fmadd.s f20, f8, f28, f13, rdn # perform operation
fmadd.s f20, f8, f28, f13, rmm # perform operation
fmadd.s f20, f8, f28, f13, rne # perform operation
fmadd.s f20, f8, f28, f13, rtz # perform operation
fmadd.s f20, f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f8, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x365b999d0fb36589 # load x3 with value 0x365b999d0fb36589
sw x3, 0(x2) # store 0x365b999d0fb36589 in memory
flw f21, 0(x2) # load 0x365b999d0fb36589 from memory into f21
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f6, f30, f21, f9, dyn # perform operation
fmadd.s f6, f30, f21, f9, rdn # perform operation
fmadd.s f6, f30, f21, f9, rmm # perform operation
fmadd.s f6, f30, f21, f9, rne # perform operation
fmadd.s f6, f30, f21, f9, rtz # perform operation
fmadd.s f6, f30, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f30, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f30, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f30, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f30, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f30, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xafb8e79385f6f42 # load x3 with value 0xafb8e79385f6f42
sw x3, 0(x2) # store 0xafb8e79385f6f42 in memory
flw f22, 0(x2) # load 0xafb8e79385f6f42 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmadd.s f12, f24, f22, f1, dyn # perform operation
fmadd.s f12, f24, f22, f1, rdn # perform operation
fmadd.s f12, f24, f22, f1, rmm # perform operation
fmadd.s f12, f24, f22, f1, rne # perform operation
fmadd.s f12, f24, f22, f1, rtz # perform operation
fmadd.s f12, f24, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f24, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f24, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f24, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f24, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f24, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x545ea528a8c1fc2b # load x3 with value 0x545ea528a8c1fc2b
sw x3, 0(x2) # store 0x545ea528a8c1fc2b in memory
flw f24, 0(x2) # load 0x545ea528a8c1fc2b from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmadd.s f15, f19, f24, f16, dyn # perform operation
fmadd.s f15, f19, f24, f16, rdn # perform operation
fmadd.s f15, f19, f24, f16, rmm # perform operation
fmadd.s f15, f19, f24, f16, rne # perform operation
fmadd.s f15, f19, f24, f16, rtz # perform operation
fmadd.s f15, f19, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f19, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x79a6cb8758ac575a # load x3 with value 0x79a6cb8758ac575a
sw x3, 0(x2) # store 0x79a6cb8758ac575a in memory
flw f19, 0(x2) # load 0x79a6cb8758ac575a from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f1, f27, f19, f11, dyn # perform operation
fmadd.s f1, f27, f19, f11, rdn # perform operation
fmadd.s f1, f27, f19, f11, rmm # perform operation
fmadd.s f1, f27, f19, f11, rne # perform operation
fmadd.s f1, f27, f19, f11, rtz # perform operation
fmadd.s f1, f27, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xc8af8cb25f2877c5 # load x3 with value 0xc8af8cb25f2877c5
sw x3, 0(x2) # store 0xc8af8cb25f2877c5 in memory
flw f13, 0(x2) # load 0xc8af8cb25f2877c5 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmadd.s f5, f31, f13, f7, dyn # perform operation
fmadd.s f5, f31, f13, f7, rdn # perform operation
fmadd.s f5, f31, f13, f7, rmm # perform operation
fmadd.s f5, f31, f13, f7, rne # perform operation
fmadd.s f5, f31, f13, f7, rtz # perform operation
fmadd.s f5, f31, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f31, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f31, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f31, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f31, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f31, f13, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x57f88af71d438df6 # load x3 with value 0x57f88af71d438df6
sw x3, 0(x2) # store 0x57f88af71d438df6 in memory
flw f25, 0(x2) # load 0x57f88af71d438df6 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmadd.s f14, f8, f25, f6, dyn # perform operation
fmadd.s f14, f8, f25, f6, rdn # perform operation
fmadd.s f14, f8, f25, f6, rmm # perform operation
fmadd.s f14, f8, f25, f6, rne # perform operation
fmadd.s f14, f8, f25, f6, rtz # perform operation
fmadd.s f14, f8, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x8f88339347e51679 # load x3 with value 0x8f88339347e51679
sw x3, 0(x2) # store 0x8f88339347e51679 in memory
flw f26, 0(x2) # load 0x8f88339347e51679 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmadd.s f28, f6, f26, f14, dyn # perform operation
fmadd.s f28, f6, f26, f14, rdn # perform operation
fmadd.s f28, f6, f26, f14, rmm # perform operation
fmadd.s f28, f6, f26, f14, rne # perform operation
fmadd.s f28, f6, f26, f14, rtz # perform operation
fmadd.s f28, f6, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f6, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xa05ce048696160ca # load x3 with value 0xa05ce048696160ca
sw x3, 0(x2) # store 0xa05ce048696160ca in memory
flw f7, 0(x2) # load 0xa05ce048696160ca from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fmadd.s f28, f24, f7, f11, dyn # perform operation
fmadd.s f28, f24, f7, f11, rdn # perform operation
fmadd.s f28, f24, f7, f11, rmm # perform operation
fmadd.s f28, f24, f7, f11, rne # perform operation
fmadd.s f28, f24, f7, f11, rtz # perform operation
fmadd.s f28, f24, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x5ad655e050e780b4 # load x3 with value 0x5ad655e050e780b4
sw x3, 0(x2) # store 0x5ad655e050e780b4 in memory
flw f23, 0(x2) # load 0x5ad655e050e780b4 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmadd.s f25, f19, f23, f30, dyn # perform operation
fmadd.s f25, f19, f23, f30, rdn # perform operation
fmadd.s f25, f19, f23, f30, rmm # perform operation
fmadd.s f25, f19, f23, f30, rne # perform operation
fmadd.s f25, f19, f23, f30, rtz # perform operation
fmadd.s f25, f19, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f19, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f19, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xffb4db19d1073854 # load x3 with value 0xffb4db19d1073854
sw x3, 0(x2) # store 0xffb4db19d1073854 in memory
flw f23, 0(x2) # load 0xffb4db19d1073854 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmadd.s f18, f29, f23, f1, dyn # perform operation
fmadd.s f18, f29, f23, f1, rdn # perform operation
fmadd.s f18, f29, f23, f1, rmm # perform operation
fmadd.s f18, f29, f23, f1, rne # perform operation
fmadd.s f18, f29, f23, f1, rtz # perform operation
fmadd.s f18, f29, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x86b6f98990a940d6 # load x3 with value 0x86b6f98990a940d6
sw x3, 0(x2) # store 0x86b6f98990a940d6 in memory
flw f6, 0(x2) # load 0x86b6f98990a940d6 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmadd.s f12, f14, f6, f5, dyn # perform operation
fmadd.s f12, f14, f6, f5, rdn # perform operation
fmadd.s f12, f14, f6, f5, rmm # perform operation
fmadd.s f12, f14, f6, f5, rne # perform operation
fmadd.s f12, f14, f6, f5, rtz # perform operation
fmadd.s f12, f14, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f6, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x9e9fc5c4c4de5dcb # load x3 with value 0x9e9fc5c4c4de5dcb
sw x3, 0(x2) # store 0x9e9fc5c4c4de5dcb in memory
flw f13, 0(x2) # load 0x9e9fc5c4c4de5dcb from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fmadd.s f6, f20, f13, f18, dyn # perform operation
fmadd.s f6, f20, f13, f18, rdn # perform operation
fmadd.s f6, f20, f13, f18, rmm # perform operation
fmadd.s f6, f20, f13, f18, rne # perform operation
fmadd.s f6, f20, f13, f18, rtz # perform operation
fmadd.s f6, f20, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x4ab8b340fdc70aa0 # load x3 with value 0x4ab8b340fdc70aa0
sw x3, 0(x2) # store 0x4ab8b340fdc70aa0 in memory
flw f13, 0(x2) # load 0x4ab8b340fdc70aa0 from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmadd.s f1, f28, f13, f20, dyn # perform operation
fmadd.s f1, f28, f13, f20, rdn # perform operation
fmadd.s f1, f28, f13, f20, rmm # perform operation
fmadd.s f1, f28, f13, f20, rne # perform operation
fmadd.s f1, f28, f13, f20, rtz # perform operation
fmadd.s f1, f28, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x101ab16f9bd241e7 # load x3 with value 0x101ab16f9bd241e7
sw x3, 0(x2) # store 0x101ab16f9bd241e7 in memory
flw f20, 0(x2) # load 0x101ab16f9bd241e7 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fmadd.s f9, f5, f20, f23, dyn # perform operation
fmadd.s f9, f5, f20, f23, rdn # perform operation
fmadd.s f9, f5, f20, f23, rmm # perform operation
fmadd.s f9, f5, f20, f23, rne # perform operation
fmadd.s f9, f5, f20, f23, rtz # perform operation
fmadd.s f9, f5, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f5, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f5, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xe3b4fb7104e02ff4 # load x3 with value 0xe3b4fb7104e02ff4
sw x3, 0(x2) # store 0xe3b4fb7104e02ff4 in memory
flw f26, 0(x2) # load 0xe3b4fb7104e02ff4 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmadd.s f21, f3, f26, f23, dyn # perform operation
fmadd.s f21, f3, f26, f23, rdn # perform operation
fmadd.s f21, f3, f26, f23, rmm # perform operation
fmadd.s f21, f3, f26, f23, rne # perform operation
fmadd.s f21, f3, f26, f23, rtz # perform operation
fmadd.s f21, f3, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xd2b3fd250ff192ec # load x3 with value 0xd2b3fd250ff192ec
sw x3, 0(x2) # store 0xd2b3fd250ff192ec in memory
flw f19, 0(x2) # load 0xd2b3fd250ff192ec from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fmadd.s f17, f8, f19, f20, dyn # perform operation
fmadd.s f17, f8, f19, f20, rdn # perform operation
fmadd.s f17, f8, f19, f20, rmm # perform operation
fmadd.s f17, f8, f19, f20, rne # perform operation
fmadd.s f17, f8, f19, f20, rtz # perform operation
fmadd.s f17, f8, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x825415bec26143f5 # load x3 with value 0x825415bec26143f5
sw x3, 0(x2) # store 0x825415bec26143f5 in memory
flw f30, 0(x2) # load 0x825415bec26143f5 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fmadd.s f11, f14, f30, f13, dyn # perform operation
fmadd.s f11, f14, f30, f13, rdn # perform operation
fmadd.s f11, f14, f30, f13, rmm # perform operation
fmadd.s f11, f14, f30, f13, rne # perform operation
fmadd.s f11, f14, f30, f13, rtz # perform operation
fmadd.s f11, f14, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x552e0c1cbe53287e # load x3 with value 0x552e0c1cbe53287e
sw x3, 0(x2) # store 0x552e0c1cbe53287e in memory
flw f14, 0(x2) # load 0x552e0c1cbe53287e from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f7, f11, f14, f23, dyn # perform operation
fmadd.s f7, f11, f14, f23, rdn # perform operation
fmadd.s f7, f11, f14, f23, rmm # perform operation
fmadd.s f7, f11, f14, f23, rne # perform operation
fmadd.s f7, f11, f14, f23, rtz # perform operation
fmadd.s f7, f11, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x778255b79d719b95 # load x3 with value 0x778255b79d719b95
sw x3, 0(x2) # store 0x778255b79d719b95 in memory
flw f7, 0(x2) # load 0x778255b79d719b95 from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmadd.s f6, f5, f7, f21, dyn # perform operation
fmadd.s f6, f5, f7, f21, rdn # perform operation
fmadd.s f6, f5, f7, f21, rmm # perform operation
fmadd.s f6, f5, f7, f21, rne # perform operation
fmadd.s f6, f5, f7, f21, rtz # perform operation
fmadd.s f6, f5, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x1f4bf52d587a62c3 # load x3 with value 0x1f4bf52d587a62c3
sw x3, 0(x2) # store 0x1f4bf52d587a62c3 in memory
flw f29, 0(x2) # load 0x1f4bf52d587a62c3 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fmadd.s f12, f18, f29, f20, dyn # perform operation
fmadd.s f12, f18, f29, f20, rdn # perform operation
fmadd.s f12, f18, f29, f20, rmm # perform operation
fmadd.s f12, f18, f29, f20, rne # perform operation
fmadd.s f12, f18, f29, f20, rtz # perform operation
fmadd.s f12, f18, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x52f5cf68b976cdb2 # load x3 with value 0x52f5cf68b976cdb2
sw x3, 0(x2) # store 0x52f5cf68b976cdb2 in memory
flw f8, 0(x2) # load 0x52f5cf68b976cdb2 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmadd.s f16, f31, f8, f17, dyn # perform operation
fmadd.s f16, f31, f8, f17, rdn # perform operation
fmadd.s f16, f31, f8, f17, rmm # perform operation
fmadd.s f16, f31, f8, f17, rne # perform operation
fmadd.s f16, f31, f8, f17, rtz # perform operation
fmadd.s f16, f31, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x79e9ac9e4b58da8a # load x3 with value 0x79e9ac9e4b58da8a
sw x3, 0(x2) # store 0x79e9ac9e4b58da8a in memory
flw f30, 0(x2) # load 0x79e9ac9e4b58da8a from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmadd.s f22, f8, f30, f18, dyn # perform operation
fmadd.s f22, f8, f30, f18, rdn # perform operation
fmadd.s f22, f8, f30, f18, rmm # perform operation
fmadd.s f22, f8, f30, f18, rne # perform operation
fmadd.s f22, f8, f30, f18, rtz # perform operation
fmadd.s f22, f8, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x7e62e6141415ef27 # load x3 with value 0x7e62e6141415ef27
sw x3, 0(x2) # store 0x7e62e6141415ef27 in memory
flw f7, 0(x2) # load 0x7e62e6141415ef27 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmadd.s f24, f18, f7, f26, dyn # perform operation
fmadd.s f24, f18, f7, f26, rdn # perform operation
fmadd.s f24, f18, f7, f26, rmm # perform operation
fmadd.s f24, f18, f7, f26, rne # perform operation
fmadd.s f24, f18, f7, f26, rtz # perform operation
fmadd.s f24, f18, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f18, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f18, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f18, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f18, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f18, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x50b30482c38805b1 # load x3 with value 0x50b30482c38805b1
sw x3, 0(x2) # store 0x50b30482c38805b1 in memory
flw f29, 0(x2) # load 0x50b30482c38805b1 from memory into f29
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmadd.s f13, f6, f29, f22, dyn # perform operation
fmadd.s f13, f6, f29, f22, rdn # perform operation
fmadd.s f13, f6, f29, f22, rmm # perform operation
fmadd.s f13, f6, f29, f22, rne # perform operation
fmadd.s f13, f6, f29, f22, rtz # perform operation
fmadd.s f13, f6, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x42299e3c156fbc9 # load x3 with value 0x42299e3c156fbc9
sw x3, 0(x2) # store 0x42299e3c156fbc9 in memory
flw f7, 0(x2) # load 0x42299e3c156fbc9 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmadd.s f2, f28, f7, f16, dyn # perform operation
fmadd.s f2, f28, f7, f16, rdn # perform operation
fmadd.s f2, f28, f7, f16, rmm # perform operation
fmadd.s f2, f28, f7, f16, rne # perform operation
fmadd.s f2, f28, f7, f16, rtz # perform operation
fmadd.s f2, f28, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f7, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x3963a5644fe7ea93 # load x3 with value 0x3963a5644fe7ea93
sw x3, 0(x2) # store 0x3963a5644fe7ea93 in memory
flw f29, 0(x2) # load 0x3963a5644fe7ea93 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmadd.s f1, f25, f29, f20, dyn # perform operation
fmadd.s f1, f25, f29, f20, rdn # perform operation
fmadd.s f1, f25, f29, f20, rmm # perform operation
fmadd.s f1, f25, f29, f20, rne # perform operation
fmadd.s f1, f25, f29, f20, rtz # perform operation
fmadd.s f1, f25, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f25, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f25, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xdb3e02765f4e79a0 # load x3 with value 0xdb3e02765f4e79a0
sw x3, 0(x2) # store 0xdb3e02765f4e79a0 in memory
flw f2, 0(x2) # load 0xdb3e02765f4e79a0 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fmadd.s f18, f23, f2, f14, dyn # perform operation
fmadd.s f18, f23, f2, f14, rdn # perform operation
fmadd.s f18, f23, f2, f14, rmm # perform operation
fmadd.s f18, f23, f2, f14, rne # perform operation
fmadd.s f18, f23, f2, f14, rtz # perform operation
fmadd.s f18, f23, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x42f69580c522ed9c # load x3 with value 0x42f69580c522ed9c
sw x3, 0(x2) # store 0x42f69580c522ed9c in memory
flw f27, 0(x2) # load 0x42f69580c522ed9c from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f29, f12, f27, f6, dyn # perform operation
fmadd.s f29, f12, f27, f6, rdn # perform operation
fmadd.s f29, f12, f27, f6, rmm # perform operation
fmadd.s f29, f12, f27, f6, rne # perform operation
fmadd.s f29, f12, f27, f6, rtz # perform operation
fmadd.s f29, f12, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x642515afb3078ab4 # load x3 with value 0x642515afb3078ab4
sw x3, 0(x2) # store 0x642515afb3078ab4 in memory
flw f26, 0(x2) # load 0x642515afb3078ab4 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fmadd.s f24, f9, f26, f6, dyn # perform operation
fmadd.s f24, f9, f26, f6, rdn # perform operation
fmadd.s f24, f9, f26, f6, rmm # perform operation
fmadd.s f24, f9, f26, f6, rne # perform operation
fmadd.s f24, f9, f26, f6, rtz # perform operation
fmadd.s f24, f9, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x274bd7028169f135 # load x3 with value 0x274bd7028169f135
sw x3, 0(x2) # store 0x274bd7028169f135 in memory
flw f16, 0(x2) # load 0x274bd7028169f135 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fmadd.s f8, f18, f16, f12, dyn # perform operation
fmadd.s f8, f18, f16, f12, rdn # perform operation
fmadd.s f8, f18, f16, f12, rmm # perform operation
fmadd.s f8, f18, f16, f12, rne # perform operation
fmadd.s f8, f18, f16, f12, rtz # perform operation
fmadd.s f8, f18, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f18, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f18, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x8bebc5e271487e33 # load x3 with value 0x8bebc5e271487e33
sw x3, 0(x2) # store 0x8bebc5e271487e33 in memory
flw f1, 0(x2) # load 0x8bebc5e271487e33 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f26, f30, f1, f20, dyn # perform operation
fmadd.s f26, f30, f1, f20, rdn # perform operation
fmadd.s f26, f30, f1, f20, rmm # perform operation
fmadd.s f26, f30, f1, f20, rne # perform operation
fmadd.s f26, f30, f1, f20, rtz # perform operation
fmadd.s f26, f30, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x86230709d6d927d8 # load x3 with value 0x86230709d6d927d8
sw x3, 0(x2) # store 0x86230709d6d927d8 in memory
flw f22, 0(x2) # load 0x86230709d6d927d8 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fmadd.s f5, f8, f22, f27, dyn # perform operation
fmadd.s f5, f8, f22, f27, rdn # perform operation
fmadd.s f5, f8, f22, f27, rmm # perform operation
fmadd.s f5, f8, f22, f27, rne # perform operation
fmadd.s f5, f8, f22, f27, rtz # perform operation
fmadd.s f5, f8, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f8, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f8, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f8, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f8, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f8, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x2019d4cddea08b2c # load x3 with value 0x2019d4cddea08b2c
sw x3, 0(x2) # store 0x2019d4cddea08b2c in memory
flw f17, 0(x2) # load 0x2019d4cddea08b2c from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f21, f8, f17, f14, dyn # perform operation
fmadd.s f21, f8, f17, f14, rdn # perform operation
fmadd.s f21, f8, f17, f14, rmm # perform operation
fmadd.s f21, f8, f17, f14, rne # perform operation
fmadd.s f21, f8, f17, f14, rtz # perform operation
fmadd.s f21, f8, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x8c5dd1cf41636ad # load x3 with value 0x8c5dd1cf41636ad
sw x3, 0(x2) # store 0x8c5dd1cf41636ad in memory
flw f15, 0(x2) # load 0x8c5dd1cf41636ad from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fmadd.s f13, f14, f15, f22, dyn # perform operation
fmadd.s f13, f14, f15, f22, rdn # perform operation
fmadd.s f13, f14, f15, f22, rmm # perform operation
fmadd.s f13, f14, f15, f22, rne # perform operation
fmadd.s f13, f14, f15, f22, rtz # perform operation
fmadd.s f13, f14, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x51746cffe28d5bd7 # load x3 with value 0x51746cffe28d5bd7
sw x3, 0(x2) # store 0x51746cffe28d5bd7 in memory
flw f17, 0(x2) # load 0x51746cffe28d5bd7 from memory into f17
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fmadd.s f12, f5, f17, f24, dyn # perform operation
fmadd.s f12, f5, f17, f24, rdn # perform operation
fmadd.s f12, f5, f17, f24, rmm # perform operation
fmadd.s f12, f5, f17, f24, rne # perform operation
fmadd.s f12, f5, f17, f24, rtz # perform operation
fmadd.s f12, f5, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xd3e572467977d32c # load x3 with value 0xd3e572467977d32c
sw x3, 0(x2) # store 0xd3e572467977d32c in memory
flw f15, 0(x2) # load 0xd3e572467977d32c from memory into f15
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmadd.s f6, f3, f15, f7, dyn # perform operation
fmadd.s f6, f3, f15, f7, rdn # perform operation
fmadd.s f6, f3, f15, f7, rmm # perform operation
fmadd.s f6, f3, f15, f7, rne # perform operation
fmadd.s f6, f3, f15, f7, rtz # perform operation
fmadd.s f6, f3, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x62e85be5217c7330 # load x3 with value 0x62e85be5217c7330
sw x3, 0(x2) # store 0x62e85be5217c7330 in memory
flw f20, 0(x2) # load 0x62e85be5217c7330 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmadd.s f30, f10, f20, f2, dyn # perform operation
fmadd.s f30, f10, f20, f2, rdn # perform operation
fmadd.s f30, f10, f20, f2, rmm # perform operation
fmadd.s f30, f10, f20, f2, rne # perform operation
fmadd.s f30, f10, f20, f2, rtz # perform operation
fmadd.s f30, f10, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f10, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x1ab6d6b26f144e2e # load x3 with value 0x1ab6d6b26f144e2e
sw x3, 0(x2) # store 0x1ab6d6b26f144e2e in memory
flw f8, 0(x2) # load 0x1ab6d6b26f144e2e from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fmadd.s f20, f19, f8, f15, dyn # perform operation
fmadd.s f20, f19, f8, f15, rdn # perform operation
fmadd.s f20, f19, f8, f15, rmm # perform operation
fmadd.s f20, f19, f8, f15, rne # perform operation
fmadd.s f20, f19, f8, f15, rtz # perform operation
fmadd.s f20, f19, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f19, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x478236a3b7216fcb # load x3 with value 0x478236a3b7216fcb
sw x3, 0(x2) # store 0x478236a3b7216fcb in memory
flw f25, 0(x2) # load 0x478236a3b7216fcb from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fmadd.s f22, f1, f25, f17, dyn # perform operation
fmadd.s f22, f1, f25, f17, rdn # perform operation
fmadd.s f22, f1, f25, f17, rmm # perform operation
fmadd.s f22, f1, f25, f17, rne # perform operation
fmadd.s f22, f1, f25, f17, rtz # perform operation
fmadd.s f22, f1, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xba077b4f51771f96 # load x3 with value 0xba077b4f51771f96
sw x3, 0(x2) # store 0xba077b4f51771f96 in memory
flw f28, 0(x2) # load 0xba077b4f51771f96 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fmadd.s f16, f29, f28, f19, dyn # perform operation
fmadd.s f16, f29, f28, f19, rdn # perform operation
fmadd.s f16, f29, f28, f19, rmm # perform operation
fmadd.s f16, f29, f28, f19, rne # perform operation
fmadd.s f16, f29, f28, f19, rtz # perform operation
fmadd.s f16, f29, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f29, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f29, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f29, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f29, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f29, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x2d094598fe81ee2c # load x3 with value 0x2d094598fe81ee2c
sw x3, 0(x2) # store 0x2d094598fe81ee2c in memory
flw f21, 0(x2) # load 0x2d094598fe81ee2c from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fmadd.s f1, f20, f21, f14, dyn # perform operation
fmadd.s f1, f20, f21, f14, rdn # perform operation
fmadd.s f1, f20, f21, f14, rmm # perform operation
fmadd.s f1, f20, f21, f14, rne # perform operation
fmadd.s f1, f20, f21, f14, rtz # perform operation
fmadd.s f1, f20, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xf52ad2f5856079d6 # load x3 with value 0xf52ad2f5856079d6
sw x3, 0(x2) # store 0xf52ad2f5856079d6 in memory
flw f21, 0(x2) # load 0xf52ad2f5856079d6 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmadd.s f22, f20, f21, f14, dyn # perform operation
fmadd.s f22, f20, f21, f14, rdn # perform operation
fmadd.s f22, f20, f21, f14, rmm # perform operation
fmadd.s f22, f20, f21, f14, rne # perform operation
fmadd.s f22, f20, f21, f14, rtz # perform operation
fmadd.s f22, f20, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xbcdae9593811af5c # load x3 with value 0xbcdae9593811af5c
sw x3, 0(x2) # store 0xbcdae9593811af5c in memory
flw f30, 0(x2) # load 0xbcdae9593811af5c from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmadd.s f27, f5, f30, f12, dyn # perform operation
fmadd.s f27, f5, f30, f12, rdn # perform operation
fmadd.s f27, f5, f30, f12, rmm # perform operation
fmadd.s f27, f5, f30, f12, rne # perform operation
fmadd.s f27, f5, f30, f12, rtz # perform operation
fmadd.s f27, f5, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f5, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x480a0ec349d17407 # load x3 with value 0x480a0ec349d17407
sw x3, 0(x2) # store 0x480a0ec349d17407 in memory
flw f19, 0(x2) # load 0x480a0ec349d17407 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmadd.s f16, f3, f19, f6, dyn # perform operation
fmadd.s f16, f3, f19, f6, rdn # perform operation
fmadd.s f16, f3, f19, f6, rmm # perform operation
fmadd.s f16, f3, f19, f6, rne # perform operation
fmadd.s f16, f3, f19, f6, rtz # perform operation
fmadd.s f16, f3, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x1bb012d46b5ab310 # load x3 with value 0x1bb012d46b5ab310
sw x3, 0(x2) # store 0x1bb012d46b5ab310 in memory
flw f21, 0(x2) # load 0x1bb012d46b5ab310 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fmadd.s f23, f27, f21, f30, dyn # perform operation
fmadd.s f23, f27, f21, f30, rdn # perform operation
fmadd.s f23, f27, f21, f30, rmm # perform operation
fmadd.s f23, f27, f21, f30, rne # perform operation
fmadd.s f23, f27, f21, f30, rtz # perform operation
fmadd.s f23, f27, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f27, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f27, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xc99cf8067bb97a4b # load x3 with value 0xc99cf8067bb97a4b
sw x3, 0(x2) # store 0xc99cf8067bb97a4b in memory
flw f23, 0(x2) # load 0xc99cf8067bb97a4b from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f13, f14, f23, f5, dyn # perform operation
fmadd.s f13, f14, f23, f5, rdn # perform operation
fmadd.s f13, f14, f23, f5, rmm # perform operation
fmadd.s f13, f14, f23, f5, rne # perform operation
fmadd.s f13, f14, f23, f5, rtz # perform operation
fmadd.s f13, f14, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x2e83fa70282fc7d6 # load x3 with value 0x2e83fa70282fc7d6
sw x3, 0(x2) # store 0x2e83fa70282fc7d6 in memory
flw f3, 0(x2) # load 0x2e83fa70282fc7d6 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmadd.s f1, f17, f3, f5, dyn # perform operation
fmadd.s f1, f17, f3, f5, rdn # perform operation
fmadd.s f1, f17, f3, f5, rmm # perform operation
fmadd.s f1, f17, f3, f5, rne # perform operation
fmadd.s f1, f17, f3, f5, rtz # perform operation
fmadd.s f1, f17, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0xeaa07292b326e7e3 # load x3 with value 0xeaa07292b326e7e3
sw x3, 0(x2) # store 0xeaa07292b326e7e3 in memory
flw f2, 0(x2) # load 0xeaa07292b326e7e3 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
fmadd.s f24, f28, f2, f12, dyn # perform operation
fmadd.s f24, f28, f2, f12, rdn # perform operation
fmadd.s f24, f28, f2, f12, rmm # perform operation
fmadd.s f24, f28, f2, f12, rne # perform operation
fmadd.s f24, f28, f2, f12, rtz # perform operation
fmadd.s f24, f28, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x89b4f599978813f1 # load x3 with value 0x89b4f599978813f1
sw x3, 0(x2) # store 0x89b4f599978813f1 in memory
flw f19, 0(x2) # load 0x89b4f599978813f1 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmadd.s f16, f10, f19, f30, dyn # perform operation
fmadd.s f16, f10, f19, f30, rdn # perform operation
fmadd.s f16, f10, f19, f30, rmm # perform operation
fmadd.s f16, f10, f19, f30, rne # perform operation
fmadd.s f16, f10, f19, f30, rtz # perform operation
fmadd.s f16, f10, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f10, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f10, f19, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x13de6dd62116eaa3 # load x3 with value 0x13de6dd62116eaa3
sw x3, 0(x2) # store 0x13de6dd62116eaa3 in memory
flw f20, 0(x2) # load 0x13de6dd62116eaa3 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fmadd.s f28, f26, f20, f24, dyn # perform operation
fmadd.s f28, f26, f20, f24, rdn # perform operation
fmadd.s f28, f26, f20, f24, rmm # perform operation
fmadd.s f28, f26, f20, f24, rne # perform operation
fmadd.s f28, f26, f20, f24, rtz # perform operation
fmadd.s f28, f26, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f26, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f26, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x1f48fca84f6341fd # load x3 with value 0x1f48fca84f6341fd
sw x3, 0(x2) # store 0x1f48fca84f6341fd in memory
flw f31, 0(x2) # load 0x1f48fca84f6341fd from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmadd.s f23, f6, f31, f14, dyn # perform operation
fmadd.s f23, f6, f31, f14, rdn # perform operation
fmadd.s f23, f6, f31, f14, rmm # perform operation
fmadd.s f23, f6, f31, f14, rne # perform operation
fmadd.s f23, f6, f31, f14, rtz # perform operation
fmadd.s f23, f6, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f31, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x3f5b5355af279aa8 # load x3 with value 0x3f5b5355af279aa8
sw x3, 0(x2) # store 0x3f5b5355af279aa8 in memory
flw f7, 0(x2) # load 0x3f5b5355af279aa8 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmadd.s f14, f25, f7, f18, dyn # perform operation
fmadd.s f14, f25, f7, f18, rdn # perform operation
fmadd.s f14, f25, f7, f18, rmm # perform operation
fmadd.s f14, f25, f7, f18, rne # perform operation
fmadd.s f14, f25, f7, f18, rtz # perform operation
fmadd.s f14, f25, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x4ba261a7abe43452 # load x3 with value 0x4ba261a7abe43452
sw x3, 0(x2) # store 0x4ba261a7abe43452 in memory
flw f14, 0(x2) # load 0x4ba261a7abe43452 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmadd.s f27, f29, f14, f17, dyn # perform operation
fmadd.s f27, f29, f14, f17, rdn # perform operation
fmadd.s f27, f29, f14, f17, rmm # perform operation
fmadd.s f27, f29, f14, f17, rne # perform operation
fmadd.s f27, f29, f14, f17, rtz # perform operation
fmadd.s f27, f29, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f29, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f29, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f29, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f29, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f29, f14, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x66ae79dcc411c7d0 # load x3 with value 0x66ae79dcc411c7d0
sw x3, 0(x2) # store 0x66ae79dcc411c7d0 in memory
flw f22, 0(x2) # load 0x66ae79dcc411c7d0 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmadd.s f11, f14, f22, f25, dyn # perform operation
fmadd.s f11, f14, f22, f25, rdn # perform operation
fmadd.s f11, f14, f22, f25, rmm # perform operation
fmadd.s f11, f14, f22, f25, rne # perform operation
fmadd.s f11, f14, f22, f25, rtz # perform operation
fmadd.s f11, f14, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x408d605cbba53f13 # load x3 with value 0x408d605cbba53f13
sw x3, 0(x2) # store 0x408d605cbba53f13 in memory
flw f3, 0(x2) # load 0x408d605cbba53f13 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmadd.s f31, f6, f3, f10, dyn # perform operation
fmadd.s f31, f6, f3, f10, rdn # perform operation
fmadd.s f31, f6, f3, f10, rmm # perform operation
fmadd.s f31, f6, f3, f10, rne # perform operation
fmadd.s f31, f6, f3, f10, rtz # perform operation
fmadd.s f31, f6, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x41802a694bce7251 # load x3 with value 0x41802a694bce7251
sw x3, 0(x2) # store 0x41802a694bce7251 in memory
flw f18, 0(x2) # load 0x41802a694bce7251 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fmadd.s f24, f7, f18, f10, dyn # perform operation
fmadd.s f24, f7, f18, f10, rdn # perform operation
fmadd.s f24, f7, f18, f10, rmm # perform operation
fmadd.s f24, f7, f18, f10, rne # perform operation
fmadd.s f24, f7, f18, f10, rtz # perform operation
fmadd.s f24, f7, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x1455da54ee416581 # load x3 with value 0x1455da54ee416581
sw x3, 0(x2) # store 0x1455da54ee416581 in memory
flw f31, 0(x2) # load 0x1455da54ee416581 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fmadd.s f29, f21, f31, f20, dyn # perform operation
fmadd.s f29, f21, f31, f20, rdn # perform operation
fmadd.s f29, f21, f31, f20, rmm # perform operation
fmadd.s f29, f21, f31, f20, rne # perform operation
fmadd.s f29, f21, f31, f20, rtz # perform operation
fmadd.s f29, f21, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f21, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f21, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xc7410aa91240a30a # load x3 with value 0xc7410aa91240a30a
sw x3, 0(x2) # store 0xc7410aa91240a30a in memory
flw f25, 0(x2) # load 0xc7410aa91240a30a from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmadd.s f31, f13, f25, f18, dyn # perform operation
fmadd.s f31, f13, f25, f18, rdn # perform operation
fmadd.s f31, f13, f25, f18, rmm # perform operation
fmadd.s f31, f13, f25, f18, rne # perform operation
fmadd.s f31, f13, f25, f18, rtz # perform operation
fmadd.s f31, f13, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f13, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x48d22c5e45d1a9a6 # load x3 with value 0x48d22c5e45d1a9a6
sw x3, 0(x2) # store 0x48d22c5e45d1a9a6 in memory
flw f18, 0(x2) # load 0x48d22c5e45d1a9a6 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fmadd.s f20, f14, f18, f25, dyn # perform operation
fmadd.s f20, f14, f18, f25, rdn # perform operation
fmadd.s f20, f14, f18, f25, rmm # perform operation
fmadd.s f20, f14, f18, f25, rne # perform operation
fmadd.s f20, f14, f18, f25, rtz # perform operation
fmadd.s f20, f14, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f14, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f14, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x4e2f840f865bf129 # load x3 with value 0x4e2f840f865bf129
sw x3, 0(x2) # store 0x4e2f840f865bf129 in memory
flw f9, 0(x2) # load 0x4e2f840f865bf129 from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmadd.s f22, f26, f9, f16, dyn # perform operation
fmadd.s f22, f26, f9, f16, rdn # perform operation
fmadd.s f22, f26, f9, f16, rmm # perform operation
fmadd.s f22, f26, f9, f16, rne # perform operation
fmadd.s f22, f26, f9, f16, rtz # perform operation
fmadd.s f22, f26, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x769209057a0e8e70 # load x3 with value 0x769209057a0e8e70
sw x3, 0(x2) # store 0x769209057a0e8e70 in memory
flw f18, 0(x2) # load 0x769209057a0e8e70 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmadd.s f20, f15, f18, f11, dyn # perform operation
fmadd.s f20, f15, f18, f11, rdn # perform operation
fmadd.s f20, f15, f18, f11, rmm # perform operation
fmadd.s f20, f15, f18, f11, rne # perform operation
fmadd.s f20, f15, f18, f11, rtz # perform operation
fmadd.s f20, f15, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f15, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f15, f18, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xd06c165b36daf11a # load x3 with value 0xd06c165b36daf11a
sw x3, 0(x2) # store 0xd06c165b36daf11a in memory
flw f19, 0(x2) # load 0xd06c165b36daf11a from memory into f19
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fmadd.s f10, f21, f19, f22, dyn # perform operation
fmadd.s f10, f21, f19, f22, rdn # perform operation
fmadd.s f10, f21, f19, f22, rmm # perform operation
fmadd.s f10, f21, f19, f22, rne # perform operation
fmadd.s f10, f21, f19, f22, rtz # perform operation
fmadd.s f10, f21, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f21, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x2010bbd946e49feb # load x3 with value 0x2010bbd946e49feb
sw x3, 0(x2) # store 0x2010bbd946e49feb in memory
flw f5, 0(x2) # load 0x2010bbd946e49feb from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmadd.s f30, f15, f5, f8, dyn # perform operation
fmadd.s f30, f15, f5, f8, rdn # perform operation
fmadd.s f30, f15, f5, f8, rmm # perform operation
fmadd.s f30, f15, f5, f8, rne # perform operation
fmadd.s f30, f15, f5, f8, rtz # perform operation
fmadd.s f30, f15, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f15, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f15, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xdfcbed8f8d7b6f1d # load x3 with value 0xdfcbed8f8d7b6f1d
sw x3, 0(x2) # store 0xdfcbed8f8d7b6f1d in memory
flw f24, 0(x2) # load 0xdfcbed8f8d7b6f1d from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmadd.s f27, f30, f24, f8, dyn # perform operation
fmadd.s f27, f30, f24, f8, rdn # perform operation
fmadd.s f27, f30, f24, f8, rmm # perform operation
fmadd.s f27, f30, f24, f8, rne # perform operation
fmadd.s f27, f30, f24, f8, rtz # perform operation
fmadd.s f27, f30, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x312e7204addde1c2 # load x3 with value 0x312e7204addde1c2
sw x3, 0(x2) # store 0x312e7204addde1c2 in memory
flw f11, 0(x2) # load 0x312e7204addde1c2 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fmadd.s f22, f26, f11, f31, dyn # perform operation
fmadd.s f22, f26, f11, f31, rdn # perform operation
fmadd.s f22, f26, f11, f31, rmm # perform operation
fmadd.s f22, f26, f11, f31, rne # perform operation
fmadd.s f22, f26, f11, f31, rtz # perform operation
fmadd.s f22, f26, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x1c4f685b9fb59ffa # load x3 with value 0x1c4f685b9fb59ffa
sw x3, 0(x2) # store 0x1c4f685b9fb59ffa in memory
flw f15, 0(x2) # load 0x1c4f685b9fb59ffa from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fmadd.s f26, f28, f15, f8, dyn # perform operation
fmadd.s f26, f28, f15, f8, rdn # perform operation
fmadd.s f26, f28, f15, f8, rmm # perform operation
fmadd.s f26, f28, f15, f8, rne # perform operation
fmadd.s f26, f28, f15, f8, rtz # perform operation
fmadd.s f26, f28, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0xe8e84ccf85b74c40 # load x3 with value 0xe8e84ccf85b74c40
sw x3, 0(x2) # store 0xe8e84ccf85b74c40 in memory
flw f17, 0(x2) # load 0xe8e84ccf85b74c40 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmadd.s f2, f27, f17, f21, dyn # perform operation
fmadd.s f2, f27, f17, f21, rdn # perform operation
fmadd.s f2, f27, f17, f21, rmm # perform operation
fmadd.s f2, f27, f17, f21, rne # perform operation
fmadd.s f2, f27, f17, f21, rtz # perform operation
fmadd.s f2, f27, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x988b18a379d37df3 # load x3 with value 0x988b18a379d37df3
sw x3, 0(x2) # store 0x988b18a379d37df3 in memory
flw f25, 0(x2) # load 0x988b18a379d37df3 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmadd.s f23, f2, f25, f29, dyn # perform operation
fmadd.s f23, f2, f25, f29, rdn # perform operation
fmadd.s f23, f2, f25, f29, rmm # perform operation
fmadd.s f23, f2, f25, f29, rne # perform operation
fmadd.s f23, f2, f25, f29, rtz # perform operation
fmadd.s f23, f2, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f2, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x86d03a73262160 # load x3 with value 0x86d03a73262160
sw x3, 0(x2) # store 0x86d03a73262160 in memory
flw f31, 0(x2) # load 0x86d03a73262160 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmadd.s f24, f22, f31, f2, dyn # perform operation
fmadd.s f24, f22, f31, f2, rdn # perform operation
fmadd.s f24, f22, f31, f2, rmm # perform operation
fmadd.s f24, f22, f31, f2, rne # perform operation
fmadd.s f24, f22, f31, f2, rtz # perform operation
fmadd.s f24, f22, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x26845bd5fbbf1a17 # load x3 with value 0x26845bd5fbbf1a17
sw x3, 0(x2) # store 0x26845bd5fbbf1a17 in memory
flw f9, 0(x2) # load 0x26845bd5fbbf1a17 from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmadd.s f20, f25, f9, f6, dyn # perform operation
fmadd.s f20, f25, f9, f6, rdn # perform operation
fmadd.s f20, f25, f9, f6, rmm # perform operation
fmadd.s f20, f25, f9, f6, rne # perform operation
fmadd.s f20, f25, f9, f6, rtz # perform operation
fmadd.s f20, f25, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x639658348cc68638 # load x3 with value 0x639658348cc68638
sw x3, 0(x2) # store 0x639658348cc68638 in memory
flw f30, 0(x2) # load 0x639658348cc68638 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fmadd.s f21, f1, f30, f6, dyn # perform operation
fmadd.s f21, f1, f30, f6, rdn # perform operation
fmadd.s f21, f1, f30, f6, rmm # perform operation
fmadd.s f21, f1, f30, f6, rne # perform operation
fmadd.s f21, f1, f30, f6, rtz # perform operation
fmadd.s f21, f1, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x123b4965e6839398 # load x3 with value 0x123b4965e6839398
sw x3, 0(x2) # store 0x123b4965e6839398 in memory
flw f25, 0(x2) # load 0x123b4965e6839398 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f21, f6, f25, f7, dyn # perform operation
fmadd.s f21, f6, f25, f7, rdn # perform operation
fmadd.s f21, f6, f25, f7, rmm # perform operation
fmadd.s f21, f6, f25, f7, rne # perform operation
fmadd.s f21, f6, f25, f7, rtz # perform operation
fmadd.s f21, f6, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f6, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f6, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f6, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f6, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f6, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x38aba7b585cd3c80 # load x3 with value 0x38aba7b585cd3c80
sw x3, 0(x2) # store 0x38aba7b585cd3c80 in memory
flw f20, 0(x2) # load 0x38aba7b585cd3c80 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fmadd.s f10, f17, f20, f9, dyn # perform operation
fmadd.s f10, f17, f20, f9, rdn # perform operation
fmadd.s f10, f17, f20, f9, rmm # perform operation
fmadd.s f10, f17, f20, f9, rne # perform operation
fmadd.s f10, f17, f20, f9, rtz # perform operation
fmadd.s f10, f17, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x6cbc3671f005e391 # load x3 with value 0x6cbc3671f005e391
sw x3, 0(x2) # store 0x6cbc3671f005e391 in memory
flw f26, 0(x2) # load 0x6cbc3671f005e391 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmadd.s f12, f28, f26, f10, dyn # perform operation
fmadd.s f12, f28, f26, f10, rdn # perform operation
fmadd.s f12, f28, f26, f10, rmm # perform operation
fmadd.s f12, f28, f26, f10, rne # perform operation
fmadd.s f12, f28, f26, f10, rtz # perform operation
fmadd.s f12, f28, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f28, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f28, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f28, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f28, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f28, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x9608e795ccf902ea # load x3 with value 0x9608e795ccf902ea
sw x3, 0(x2) # store 0x9608e795ccf902ea in memory
flw f9, 0(x2) # load 0x9608e795ccf902ea from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmadd.s f18, f29, f9, f28, dyn # perform operation
fmadd.s f18, f29, f9, f28, rdn # perform operation
fmadd.s f18, f29, f9, f28, rmm # perform operation
fmadd.s f18, f29, f9, f28, rne # perform operation
fmadd.s f18, f29, f9, f28, rtz # perform operation
fmadd.s f18, f29, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x89ebba3ce623aa12 # load x3 with value 0x89ebba3ce623aa12
sw x3, 0(x2) # store 0x89ebba3ce623aa12 in memory
flw f9, 0(x2) # load 0x89ebba3ce623aa12 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fmadd.s f29, f7, f9, f14, dyn # perform operation
fmadd.s f29, f7, f9, f14, rdn # perform operation
fmadd.s f29, f7, f9, f14, rmm # perform operation
fmadd.s f29, f7, f9, f14, rne # perform operation
fmadd.s f29, f7, f9, f14, rtz # perform operation
fmadd.s f29, f7, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xe5aa74f22b56cb37 # load x3 with value 0xe5aa74f22b56cb37
sw x3, 0(x2) # store 0xe5aa74f22b56cb37 in memory
flw f23, 0(x2) # load 0xe5aa74f22b56cb37 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmadd.s f12, f7, f23, f17, dyn # perform operation
fmadd.s f12, f7, f23, f17, rdn # perform operation
fmadd.s f12, f7, f23, f17, rmm # perform operation
fmadd.s f12, f7, f23, f17, rne # perform operation
fmadd.s f12, f7, f23, f17, rtz # perform operation
fmadd.s f12, f7, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f7, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x2ccce3a07bab980f # load x3 with value 0x2ccce3a07bab980f
sw x3, 0(x2) # store 0x2ccce3a07bab980f in memory
flw f15, 0(x2) # load 0x2ccce3a07bab980f from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmadd.s f6, f3, f15, f23, dyn # perform operation
fmadd.s f6, f3, f15, f23, rdn # perform operation
fmadd.s f6, f3, f15, f23, rmm # perform operation
fmadd.s f6, f3, f15, f23, rne # perform operation
fmadd.s f6, f3, f15, f23, rtz # perform operation
fmadd.s f6, f3, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x6c77c4a53c86a5ae # load x3 with value 0x6c77c4a53c86a5ae
sw x3, 0(x2) # store 0x6c77c4a53c86a5ae in memory
flw f18, 0(x2) # load 0x6c77c4a53c86a5ae from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmadd.s f26, f29, f18, f19, dyn # perform operation
fmadd.s f26, f29, f18, f19, rdn # perform operation
fmadd.s f26, f29, f18, f19, rmm # perform operation
fmadd.s f26, f29, f18, f19, rne # perform operation
fmadd.s f26, f29, f18, f19, rtz # perform operation
fmadd.s f26, f29, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x20f00502808a9ca8 # load x3 with value 0x20f00502808a9ca8
sw x3, 0(x2) # store 0x20f00502808a9ca8 in memory
flw f22, 0(x2) # load 0x20f00502808a9ca8 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmadd.s f25, f11, f22, f1, dyn # perform operation
fmadd.s f25, f11, f22, f1, rdn # perform operation
fmadd.s f25, f11, f22, f1, rmm # perform operation
fmadd.s f25, f11, f22, f1, rne # perform operation
fmadd.s f25, f11, f22, f1, rtz # perform operation
fmadd.s f25, f11, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f11, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f11, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x4dc96d630eca7634 # load x3 with value 0x4dc96d630eca7634
sw x3, 0(x2) # store 0x4dc96d630eca7634 in memory
flw f12, 0(x2) # load 0x4dc96d630eca7634 from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fmadd.s f22, f21, f12, f26, dyn # perform operation
fmadd.s f22, f21, f12, f26, rdn # perform operation
fmadd.s f22, f21, f12, f26, rmm # perform operation
fmadd.s f22, f21, f12, f26, rne # perform operation
fmadd.s f22, f21, f12, f26, rtz # perform operation
fmadd.s f22, f21, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x33af9182083dc003 # load x3 with value 0x33af9182083dc003
sw x3, 0(x2) # store 0x33af9182083dc003 in memory
flw f18, 0(x2) # load 0x33af9182083dc003 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f14, f28, f18, f19, dyn # perform operation
fmadd.s f14, f28, f18, f19, rdn # perform operation
fmadd.s f14, f28, f18, f19, rmm # perform operation
fmadd.s f14, f28, f18, f19, rne # perform operation
fmadd.s f14, f28, f18, f19, rtz # perform operation
fmadd.s f14, f28, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0xbbb91b471d612b41 # load x3 with value 0xbbb91b471d612b41
sw x3, 0(x2) # store 0xbbb91b471d612b41 in memory
flw f2, 0(x2) # load 0xbbb91b471d612b41 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fmadd.s f18, f16, f2, f24, dyn # perform operation
fmadd.s f18, f16, f2, f24, rdn # perform operation
fmadd.s f18, f16, f2, f24, rmm # perform operation
fmadd.s f18, f16, f2, f24, rne # perform operation
fmadd.s f18, f16, f2, f24, rtz # perform operation
fmadd.s f18, f16, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xa66a6df4b3b462c2 # load x3 with value 0xa66a6df4b3b462c2
sw x3, 0(x2) # store 0xa66a6df4b3b462c2 in memory
flw f9, 0(x2) # load 0xa66a6df4b3b462c2 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fmadd.s f18, f28, f9, f20, dyn # perform operation
fmadd.s f18, f28, f9, f20, rdn # perform operation
fmadd.s f18, f28, f9, f20, rmm # perform operation
fmadd.s f18, f28, f9, f20, rne # perform operation
fmadd.s f18, f28, f9, f20, rtz # perform operation
fmadd.s f18, f28, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x68d16e6f89b3d185 # load x3 with value 0x68d16e6f89b3d185
sw x3, 0(x2) # store 0x68d16e6f89b3d185 in memory
flw f27, 0(x2) # load 0x68d16e6f89b3d185 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f11, f24, f27, f9, dyn # perform operation
fmadd.s f11, f24, f27, f9, rdn # perform operation
fmadd.s f11, f24, f27, f9, rmm # perform operation
fmadd.s f11, f24, f27, f9, rne # perform operation
fmadd.s f11, f24, f27, f9, rtz # perform operation
fmadd.s f11, f24, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xcfefc8d95cac6247 # load x3 with value 0xcfefc8d95cac6247
sw x3, 0(x2) # store 0xcfefc8d95cac6247 in memory
flw f22, 0(x2) # load 0xcfefc8d95cac6247 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fmadd.s f18, f25, f22, f2, dyn # perform operation
fmadd.s f18, f25, f22, f2, rdn # perform operation
fmadd.s f18, f25, f22, f2, rmm # perform operation
fmadd.s f18, f25, f22, f2, rne # perform operation
fmadd.s f18, f25, f22, f2, rtz # perform operation
fmadd.s f18, f25, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x6390c36f51517909 # load x3 with value 0x6390c36f51517909
sw x3, 0(x2) # store 0x6390c36f51517909 in memory
flw f23, 0(x2) # load 0x6390c36f51517909 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f6, f11, f23, f20, dyn # perform operation
fmadd.s f6, f11, f23, f20, rdn # perform operation
fmadd.s f6, f11, f23, f20, rmm # perform operation
fmadd.s f6, f11, f23, f20, rne # perform operation
fmadd.s f6, f11, f23, f20, rtz # perform operation
fmadd.s f6, f11, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f11, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0xc676ac072411a67c # load x3 with value 0xc676ac072411a67c
sw x3, 0(x2) # store 0xc676ac072411a67c in memory
flw f3, 0(x2) # load 0xc676ac072411a67c from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f16, f17, f3, f18, dyn # perform operation
fmadd.s f16, f17, f3, f18, rdn # perform operation
fmadd.s f16, f17, f3, f18, rmm # perform operation
fmadd.s f16, f17, f3, f18, rne # perform operation
fmadd.s f16, f17, f3, f18, rtz # perform operation
fmadd.s f16, f17, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x1b45df962d37e19f # load x3 with value 0x1b45df962d37e19f
sw x3, 0(x2) # store 0x1b45df962d37e19f in memory
flw f7, 0(x2) # load 0x1b45df962d37e19f from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmadd.s f14, f30, f7, f27, dyn # perform operation
fmadd.s f14, f30, f7, f27, rdn # perform operation
fmadd.s f14, f30, f7, f27, rmm # perform operation
fmadd.s f14, f30, f7, f27, rne # perform operation
fmadd.s f14, f30, f7, f27, rtz # perform operation
fmadd.s f14, f30, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f30, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f30, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f30, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f30, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f30, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xddcbc80d1ebf4371 # load x3 with value 0xddcbc80d1ebf4371
sw x3, 0(x2) # store 0xddcbc80d1ebf4371 in memory
flw f7, 0(x2) # load 0xddcbc80d1ebf4371 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmadd.s f5, f28, f7, f1, dyn # perform operation
fmadd.s f5, f28, f7, f1, rdn # perform operation
fmadd.s f5, f28, f7, f1, rmm # perform operation
fmadd.s f5, f28, f7, f1, rne # perform operation
fmadd.s f5, f28, f7, f1, rtz # perform operation
fmadd.s f5, f28, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f28, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f28, f7, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x912cc2edb82aa4be # load x3 with value 0x912cc2edb82aa4be
sw x3, 0(x2) # store 0x912cc2edb82aa4be in memory
flw f3, 0(x2) # load 0x912cc2edb82aa4be from memory into f3
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmadd.s f7, f8, f3, f2, dyn # perform operation
fmadd.s f7, f8, f3, f2, rdn # perform operation
fmadd.s f7, f8, f3, f2, rmm # perform operation
fmadd.s f7, f8, f3, f2, rne # perform operation
fmadd.s f7, f8, f3, f2, rtz # perform operation
fmadd.s f7, f8, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0xcf6fc1d98a0ef83e # load x3 with value 0xcf6fc1d98a0ef83e
sw x3, 0(x2) # store 0xcf6fc1d98a0ef83e in memory
flw f24, 0(x2) # load 0xcf6fc1d98a0ef83e from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmadd.s f15, f12, f24, f3, dyn # perform operation
fmadd.s f15, f12, f24, f3, rdn # perform operation
fmadd.s f15, f12, f24, f3, rmm # perform operation
fmadd.s f15, f12, f24, f3, rne # perform operation
fmadd.s f15, f12, f24, f3, rtz # perform operation
fmadd.s f15, f12, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x1f20fddcc0fabfda # load x3 with value 0x1f20fddcc0fabfda
sw x3, 0(x2) # store 0x1f20fddcc0fabfda in memory
flw f24, 0(x2) # load 0x1f20fddcc0fabfda from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f25, f27, f24, f12, dyn # perform operation
fmadd.s f25, f27, f24, f12, rdn # perform operation
fmadd.s f25, f27, f24, f12, rmm # perform operation
fmadd.s f25, f27, f24, f12, rne # perform operation
fmadd.s f25, f27, f24, f12, rtz # perform operation
fmadd.s f25, f27, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x19d35c2610039848 # load x3 with value 0x19d35c2610039848
sw x3, 0(x2) # store 0x19d35c2610039848 in memory
flw f22, 0(x2) # load 0x19d35c2610039848 from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmadd.s f27, f31, f22, f9, dyn # perform operation
fmadd.s f27, f31, f22, f9, rdn # perform operation
fmadd.s f27, f31, f22, f9, rmm # perform operation
fmadd.s f27, f31, f22, f9, rne # perform operation
fmadd.s f27, f31, f22, f9, rtz # perform operation
fmadd.s f27, f31, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x42d6161076c20255 # load x3 with value 0x42d6161076c20255
sw x3, 0(x2) # store 0x42d6161076c20255 in memory
flw f18, 0(x2) # load 0x42d6161076c20255 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmadd.s f29, f16, f18, f7, dyn # perform operation
fmadd.s f29, f16, f18, f7, rdn # perform operation
fmadd.s f29, f16, f18, f7, rmm # perform operation
fmadd.s f29, f16, f18, f7, rne # perform operation
fmadd.s f29, f16, f18, f7, rtz # perform operation
fmadd.s f29, f16, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f16, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f16, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x4280b8d94bb07ad6 # load x3 with value 0x4280b8d94bb07ad6
sw x3, 0(x2) # store 0x4280b8d94bb07ad6 in memory
flw f7, 0(x2) # load 0x4280b8d94bb07ad6 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f5, f15, f7, f14, dyn # perform operation
fmadd.s f5, f15, f7, f14, rdn # perform operation
fmadd.s f5, f15, f7, f14, rmm # perform operation
fmadd.s f5, f15, f7, f14, rne # perform operation
fmadd.s f5, f15, f7, f14, rtz # perform operation
fmadd.s f5, f15, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xc27bbf4de66bb49 # load x3 with value 0xc27bbf4de66bb49
sw x3, 0(x2) # store 0xc27bbf4de66bb49 in memory
flw f24, 0(x2) # load 0xc27bbf4de66bb49 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f27, f1, f24, f8, dyn # perform operation
fmadd.s f27, f1, f24, f8, rdn # perform operation
fmadd.s f27, f1, f24, f8, rmm # perform operation
fmadd.s f27, f1, f24, f8, rne # perform operation
fmadd.s f27, f1, f24, f8, rtz # perform operation
fmadd.s f27, f1, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x1c2f35b8bfa3ded6 # load x3 with value 0x1c2f35b8bfa3ded6
sw x3, 0(x2) # store 0x1c2f35b8bfa3ded6 in memory
flw f17, 0(x2) # load 0x1c2f35b8bfa3ded6 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmadd.s f13, f29, f17, f9, dyn # perform operation
fmadd.s f13, f29, f17, f9, rdn # perform operation
fmadd.s f13, f29, f17, f9, rmm # perform operation
fmadd.s f13, f29, f17, f9, rne # perform operation
fmadd.s f13, f29, f17, f9, rtz # perform operation
fmadd.s f13, f29, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7d0c91e7c0931a3e # load x3 with value 0x7d0c91e7c0931a3e
sw x3, 0(x2) # store 0x7d0c91e7c0931a3e in memory
flw f11, 0(x2) # load 0x7d0c91e7c0931a3e from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmadd.s f21, f9, f11, f10, dyn # perform operation
fmadd.s f21, f9, f11, f10, rdn # perform operation
fmadd.s f21, f9, f11, f10, rmm # perform operation
fmadd.s f21, f9, f11, f10, rne # perform operation
fmadd.s f21, f9, f11, f10, rtz # perform operation
fmadd.s f21, f9, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f9, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f9, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xa838d62f7290adcc # load x3 with value 0xa838d62f7290adcc
sw x3, 0(x2) # store 0xa838d62f7290adcc in memory
flw f7, 0(x2) # load 0xa838d62f7290adcc from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f28, f5, f7, f12, dyn # perform operation
fmadd.s f28, f5, f7, f12, rdn # perform operation
fmadd.s f28, f5, f7, f12, rmm # perform operation
fmadd.s f28, f5, f7, f12, rne # perform operation
fmadd.s f28, f5, f7, f12, rtz # perform operation
fmadd.s f28, f5, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f5, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f5, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x7fefaa3c528d5039 # load x3 with value 0x7fefaa3c528d5039
sw x3, 0(x2) # store 0x7fefaa3c528d5039 in memory
flw f13, 0(x2) # load 0x7fefaa3c528d5039 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmadd.s f19, f16, f13, f10, dyn # perform operation
fmadd.s f19, f16, f13, f10, rdn # perform operation
fmadd.s f19, f16, f13, f10, rmm # perform operation
fmadd.s f19, f16, f13, f10, rne # perform operation
fmadd.s f19, f16, f13, f10, rtz # perform operation
fmadd.s f19, f16, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0xa0fe31f6e2c34d9 # load x3 with value 0xa0fe31f6e2c34d9
sw x3, 0(x2) # store 0xa0fe31f6e2c34d9 in memory
flw f19, 0(x2) # load 0xa0fe31f6e2c34d9 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmadd.s f29, f9, f19, f24, dyn # perform operation
fmadd.s f29, f9, f19, f24, rdn # perform operation
fmadd.s f29, f9, f19, f24, rmm # perform operation
fmadd.s f29, f9, f19, f24, rne # perform operation
fmadd.s f29, f9, f19, f24, rtz # perform operation
fmadd.s f29, f9, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f9, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f9, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x6865195f8753e92e # load x3 with value 0x6865195f8753e92e
sw x3, 0(x2) # store 0x6865195f8753e92e in memory
flw f8, 0(x2) # load 0x6865195f8753e92e from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fmadd.s f29, f3, f8, f6, dyn # perform operation
fmadd.s f29, f3, f8, f6, rdn # perform operation
fmadd.s f29, f3, f8, f6, rmm # perform operation
fmadd.s f29, f3, f8, f6, rne # perform operation
fmadd.s f29, f3, f8, f6, rtz # perform operation
fmadd.s f29, f3, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f3, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f3, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f3, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f3, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f3, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x628991e2d2bb525a # load x3 with value 0x628991e2d2bb525a
sw x3, 0(x2) # store 0x628991e2d2bb525a in memory
flw f30, 0(x2) # load 0x628991e2d2bb525a from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fmadd.s f23, f7, f30, f21, dyn # perform operation
fmadd.s f23, f7, f30, f21, rdn # perform operation
fmadd.s f23, f7, f30, f21, rmm # perform operation
fmadd.s f23, f7, f30, f21, rne # perform operation
fmadd.s f23, f7, f30, f21, rtz # perform operation
fmadd.s f23, f7, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x19eeca2af055f868 # load x3 with value 0x19eeca2af055f868
sw x3, 0(x2) # store 0x19eeca2af055f868 in memory
flw f27, 0(x2) # load 0x19eeca2af055f868 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fmadd.s f29, f8, f27, f7, dyn # perform operation
fmadd.s f29, f8, f27, f7, rdn # perform operation
fmadd.s f29, f8, f27, f7, rmm # perform operation
fmadd.s f29, f8, f27, f7, rne # perform operation
fmadd.s f29, f8, f27, f7, rtz # perform operation
fmadd.s f29, f8, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f8, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f8, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xdde1bd27d72d77c0 # load x3 with value 0xdde1bd27d72d77c0
sw x3, 0(x2) # store 0xdde1bd27d72d77c0 in memory
flw f10, 0(x2) # load 0xdde1bd27d72d77c0 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fmadd.s f17, f14, f10, f28, dyn # perform operation
fmadd.s f17, f14, f10, f28, rdn # perform operation
fmadd.s f17, f14, f10, f28, rmm # perform operation
fmadd.s f17, f14, f10, f28, rne # perform operation
fmadd.s f17, f14, f10, f28, rtz # perform operation
fmadd.s f17, f14, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f10, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xd6af9a9aef2aa502 # load x3 with value 0xd6af9a9aef2aa502
sw x3, 0(x2) # store 0xd6af9a9aef2aa502 in memory
flw f2, 0(x2) # load 0xd6af9a9aef2aa502 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f29, f7, f2, f6, dyn # perform operation
fmadd.s f29, f7, f2, f6, rdn # perform operation
fmadd.s f29, f7, f2, f6, rmm # perform operation
fmadd.s f29, f7, f2, f6, rne # perform operation
fmadd.s f29, f7, f2, f6, rtz # perform operation
fmadd.s f29, f7, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f2, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xcf849149a1408797 # load x3 with value 0xcf849149a1408797
sw x3, 0(x2) # store 0xcf849149a1408797 in memory
flw f9, 0(x2) # load 0xcf849149a1408797 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fmadd.s f12, f14, f9, f26, dyn # perform operation
fmadd.s f12, f14, f9, f26, rdn # perform operation
fmadd.s f12, f14, f9, f26, rmm # perform operation
fmadd.s f12, f14, f9, f26, rne # perform operation
fmadd.s f12, f14, f9, f26, rtz # perform operation
fmadd.s f12, f14, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x8d26e47ab8c1fdb2 # load x3 with value 0x8d26e47ab8c1fdb2
sw x3, 0(x2) # store 0x8d26e47ab8c1fdb2 in memory
flw f20, 0(x2) # load 0x8d26e47ab8c1fdb2 from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f9, f10, f20, f23, dyn # perform operation
fmadd.s f9, f10, f20, f23, rdn # perform operation
fmadd.s f9, f10, f20, f23, rmm # perform operation
fmadd.s f9, f10, f20, f23, rne # perform operation
fmadd.s f9, f10, f20, f23, rtz # perform operation
fmadd.s f9, f10, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f10, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f10, f20, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x595cf04a9b139f5 # load x3 with value 0x595cf04a9b139f5
sw x3, 0(x2) # store 0x595cf04a9b139f5 in memory
flw f29, 0(x2) # load 0x595cf04a9b139f5 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f19, f5, f29, f15, dyn # perform operation
fmadd.s f19, f5, f29, f15, rdn # perform operation
fmadd.s f19, f5, f29, f15, rmm # perform operation
fmadd.s f19, f5, f29, f15, rne # perform operation
fmadd.s f19, f5, f29, f15, rtz # perform operation
fmadd.s f19, f5, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f5, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x7d46614209a4efef # load x3 with value 0x7d46614209a4efef
sw x3, 0(x2) # store 0x7d46614209a4efef in memory
flw f16, 0(x2) # load 0x7d46614209a4efef from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmadd.s f23, f29, f16, f20, dyn # perform operation
fmadd.s f23, f29, f16, f20, rdn # perform operation
fmadd.s f23, f29, f16, f20, rmm # perform operation
fmadd.s f23, f29, f16, f20, rne # perform operation
fmadd.s f23, f29, f16, f20, rtz # perform operation
fmadd.s f23, f29, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x5ed63d8b5f583869 # load x3 with value 0x5ed63d8b5f583869
sw x3, 0(x2) # store 0x5ed63d8b5f583869 in memory
flw f3, 0(x2) # load 0x5ed63d8b5f583869 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmadd.s f8, f14, f3, f30, dyn # perform operation
fmadd.s f8, f14, f3, f30, rdn # perform operation
fmadd.s f8, f14, f3, f30, rmm # perform operation
fmadd.s f8, f14, f3, f30, rne # perform operation
fmadd.s f8, f14, f3, f30, rtz # perform operation
fmadd.s f8, f14, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x17a8a5722090f6d3 # load x3 with value 0x17a8a5722090f6d3
sw x3, 0(x2) # store 0x17a8a5722090f6d3 in memory
flw f29, 0(x2) # load 0x17a8a5722090f6d3 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmadd.s f30, f7, f29, f23, dyn # perform operation
fmadd.s f30, f7, f29, f23, rdn # perform operation
fmadd.s f30, f7, f29, f23, rmm # perform operation
fmadd.s f30, f7, f29, f23, rne # perform operation
fmadd.s f30, f7, f29, f23, rtz # perform operation
fmadd.s f30, f7, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f7, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f7, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x776201873a853859 # load x3 with value 0x776201873a853859
sw x3, 0(x2) # store 0x776201873a853859 in memory
flw f10, 0(x2) # load 0x776201873a853859 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmadd.s f28, f24, f10, f1, dyn # perform operation
fmadd.s f28, f24, f10, f1, rdn # perform operation
fmadd.s f28, f24, f10, f1, rmm # perform operation
fmadd.s f28, f24, f10, f1, rne # perform operation
fmadd.s f28, f24, f10, f1, rtz # perform operation
fmadd.s f28, f24, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xb272ed6ca7e9de5e # load x3 with value 0xb272ed6ca7e9de5e
sw x3, 0(x2) # store 0xb272ed6ca7e9de5e in memory
flw f24, 0(x2) # load 0xb272ed6ca7e9de5e from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmadd.s f7, f14, f24, f16, dyn # perform operation
fmadd.s f7, f14, f24, f16, rdn # perform operation
fmadd.s f7, f14, f24, f16, rmm # perform operation
fmadd.s f7, f14, f24, f16, rne # perform operation
fmadd.s f7, f14, f24, f16, rtz # perform operation
fmadd.s f7, f14, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f14, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f14, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0xde8fa4b878c4e577 # load x3 with value 0xde8fa4b878c4e577
sw x3, 0(x2) # store 0xde8fa4b878c4e577 in memory
flw f27, 0(x2) # load 0xde8fa4b878c4e577 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f21, f1, f27, f24, dyn # perform operation
fmadd.s f21, f1, f27, f24, rdn # perform operation
fmadd.s f21, f1, f27, f24, rmm # perform operation
fmadd.s f21, f1, f27, f24, rne # perform operation
fmadd.s f21, f1, f27, f24, rtz # perform operation
fmadd.s f21, f1, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f27, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x69589f6097862beb # load x3 with value 0x69589f6097862beb
sw x3, 0(x2) # store 0x69589f6097862beb in memory
flw f6, 0(x2) # load 0x69589f6097862beb from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmadd.s f12, f26, f6, f8, dyn # perform operation
fmadd.s f12, f26, f6, f8, rdn # perform operation
fmadd.s f12, f26, f6, f8, rmm # perform operation
fmadd.s f12, f26, f6, f8, rne # perform operation
fmadd.s f12, f26, f6, f8, rtz # perform operation
fmadd.s f12, f26, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x78184fe70f54fa84 # load x3 with value 0x78184fe70f54fa84
sw x3, 0(x2) # store 0x78184fe70f54fa84 in memory
flw f13, 0(x2) # load 0x78184fe70f54fa84 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmadd.s f7, f30, f13, f19, dyn # perform operation
fmadd.s f7, f30, f13, f19, rdn # perform operation
fmadd.s f7, f30, f13, f19, rmm # perform operation
fmadd.s f7, f30, f13, f19, rne # perform operation
fmadd.s f7, f30, f13, f19, rtz # perform operation
fmadd.s f7, f30, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f30, f13, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x3f2798ee9d91c9e2 # load x3 with value 0x3f2798ee9d91c9e2
sw x3, 0(x2) # store 0x3f2798ee9d91c9e2 in memory
flw f2, 0(x2) # load 0x3f2798ee9d91c9e2 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmadd.s f21, f14, f2, f15, dyn # perform operation
fmadd.s f21, f14, f2, f15, rdn # perform operation
fmadd.s f21, f14, f2, f15, rmm # perform operation
fmadd.s f21, f14, f2, f15, rne # perform operation
fmadd.s f21, f14, f2, f15, rtz # perform operation
fmadd.s f21, f14, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xd13928b4597021f6 # load x3 with value 0xd13928b4597021f6
sw x3, 0(x2) # store 0xd13928b4597021f6 in memory
flw f24, 0(x2) # load 0xd13928b4597021f6 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
fmadd.s f25, f14, f24, f19, dyn # perform operation
fmadd.s f25, f14, f24, f19, rdn # perform operation
fmadd.s f25, f14, f24, f19, rmm # perform operation
fmadd.s f25, f14, f24, f19, rne # perform operation
fmadd.s f25, f14, f24, f19, rtz # perform operation
fmadd.s f25, f14, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f24, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0xa60955a1fcb44fba # load x3 with value 0xa60955a1fcb44fba
sw x3, 0(x2) # store 0xa60955a1fcb44fba in memory
flw f25, 0(x2) # load 0xa60955a1fcb44fba from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmadd.s f14, f9, f25, f3, dyn # perform operation
fmadd.s f14, f9, f25, f3, rdn # perform operation
fmadd.s f14, f9, f25, f3, rmm # perform operation
fmadd.s f14, f9, f25, f3, rne # perform operation
fmadd.s f14, f9, f25, f3, rtz # perform operation
fmadd.s f14, f9, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x71ef5c974d3acbc4 # load x3 with value 0x71ef5c974d3acbc4
sw x3, 0(x2) # store 0x71ef5c974d3acbc4 in memory
flw f28, 0(x2) # load 0x71ef5c974d3acbc4 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmadd.s f11, f3, f28, f19, dyn # perform operation
fmadd.s f11, f3, f28, f19, rdn # perform operation
fmadd.s f11, f3, f28, f19, rmm # perform operation
fmadd.s f11, f3, f28, f19, rne # perform operation
fmadd.s f11, f3, f28, f19, rtz # perform operation
fmadd.s f11, f3, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f3, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f3, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xaca354686e77816b # load x3 with value 0xaca354686e77816b
sw x3, 0(x2) # store 0xaca354686e77816b in memory
flw f1, 0(x2) # load 0xaca354686e77816b from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmadd.s f12, f24, f1, f8, dyn # perform operation
fmadd.s f12, f24, f1, f8, rdn # perform operation
fmadd.s f12, f24, f1, f8, rmm # perform operation
fmadd.s f12, f24, f1, f8, rne # perform operation
fmadd.s f12, f24, f1, f8, rtz # perform operation
fmadd.s f12, f24, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f24, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f24, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x3c7274a4dd95de27 # load x3 with value 0x3c7274a4dd95de27
sw x3, 0(x2) # store 0x3c7274a4dd95de27 in memory
flw f24, 0(x2) # load 0x3c7274a4dd95de27 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fmadd.s f7, f20, f24, f18, dyn # perform operation
fmadd.s f7, f20, f24, f18, rdn # perform operation
fmadd.s f7, f20, f24, f18, rmm # perform operation
fmadd.s f7, f20, f24, f18, rne # perform operation
fmadd.s f7, f20, f24, f18, rtz # perform operation
fmadd.s f7, f20, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f24, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x5d0e6d90b6c46755 # load x3 with value 0x5d0e6d90b6c46755
sw x3, 0(x2) # store 0x5d0e6d90b6c46755 in memory
flw f23, 0(x2) # load 0x5d0e6d90b6c46755 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmadd.s f12, f8, f23, f31, dyn # perform operation
fmadd.s f12, f8, f23, f31, rdn # perform operation
fmadd.s f12, f8, f23, f31, rmm # perform operation
fmadd.s f12, f8, f23, f31, rne # perform operation
fmadd.s f12, f8, f23, f31, rtz # perform operation
fmadd.s f12, f8, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f8, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f8, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x52650d5e449f464b # load x3 with value 0x52650d5e449f464b
sw x3, 0(x2) # store 0x52650d5e449f464b in memory
flw f12, 0(x2) # load 0x52650d5e449f464b from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmadd.s f27, f30, f12, f21, dyn # perform operation
fmadd.s f27, f30, f12, f21, rdn # perform operation
fmadd.s f27, f30, f12, f21, rmm # perform operation
fmadd.s f27, f30, f12, f21, rne # perform operation
fmadd.s f27, f30, f12, f21, rtz # perform operation
fmadd.s f27, f30, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x42e91ce7aa89193d # load x3 with value 0x42e91ce7aa89193d
sw x3, 0(x2) # store 0x42e91ce7aa89193d in memory
flw f7, 0(x2) # load 0x42e91ce7aa89193d from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmadd.s f17, f30, f7, f11, dyn # perform operation
fmadd.s f17, f30, f7, f11, rdn # perform operation
fmadd.s f17, f30, f7, f11, rmm # perform operation
fmadd.s f17, f30, f7, f11, rne # perform operation
fmadd.s f17, f30, f7, f11, rtz # perform operation
fmadd.s f17, f30, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x495893a3d48f791 # load x3 with value 0x495893a3d48f791
sw x3, 0(x2) # store 0x495893a3d48f791 in memory
flw f7, 0(x2) # load 0x495893a3d48f791 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmadd.s f19, f28, f7, f5, dyn # perform operation
fmadd.s f19, f28, f7, f5, rdn # perform operation
fmadd.s f19, f28, f7, f5, rmm # perform operation
fmadd.s f19, f28, f7, f5, rne # perform operation
fmadd.s f19, f28, f7, f5, rtz # perform operation
fmadd.s f19, f28, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f7, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x67e52066cd142ec0 # load x3 with value 0x67e52066cd142ec0
sw x3, 0(x2) # store 0x67e52066cd142ec0 in memory
flw f6, 0(x2) # load 0x67e52066cd142ec0 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fmadd.s f24, f17, f6, f7, dyn # perform operation
fmadd.s f24, f17, f6, f7, rdn # perform operation
fmadd.s f24, f17, f6, f7, rmm # perform operation
fmadd.s f24, f17, f6, f7, rne # perform operation
fmadd.s f24, f17, f6, f7, rtz # perform operation
fmadd.s f24, f17, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xd061dc1e56c25602 # load x3 with value 0xd061dc1e56c25602
sw x3, 0(x2) # store 0xd061dc1e56c25602 in memory
flw f13, 0(x2) # load 0xd061dc1e56c25602 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fmadd.s f20, f28, f13, f18, dyn # perform operation
fmadd.s f20, f28, f13, f18, rdn # perform operation
fmadd.s f20, f28, f13, f18, rmm # perform operation
fmadd.s f20, f28, f13, f18, rne # perform operation
fmadd.s f20, f28, f13, f18, rtz # perform operation
fmadd.s f20, f28, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f28, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f28, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f28, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f28, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f28, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xf029efb3fd144396 # load x3 with value 0xf029efb3fd144396
sw x3, 0(x2) # store 0xf029efb3fd144396 in memory
flw f16, 0(x2) # load 0xf029efb3fd144396 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmadd.s f11, f26, f16, f5, dyn # perform operation
fmadd.s f11, f26, f16, f5, rdn # perform operation
fmadd.s f11, f26, f16, f5, rmm # perform operation
fmadd.s f11, f26, f16, f5, rne # perform operation
fmadd.s f11, f26, f16, f5, rtz # perform operation
fmadd.s f11, f26, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f26, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0xdac92c35a408ca3d # load x3 with value 0xdac92c35a408ca3d
sw x3, 0(x2) # store 0xdac92c35a408ca3d in memory
flw f5, 0(x2) # load 0xdac92c35a408ca3d from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fmadd.s f20, f11, f5, f24, dyn # perform operation
fmadd.s f20, f11, f5, f24, rdn # perform operation
fmadd.s f20, f11, f5, f24, rmm # perform operation
fmadd.s f20, f11, f5, f24, rne # perform operation
fmadd.s f20, f11, f5, f24, rtz # perform operation
fmadd.s f20, f11, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f11, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x27d41342aeaf6d30 # load x3 with value 0x27d41342aeaf6d30
sw x3, 0(x2) # store 0x27d41342aeaf6d30 in memory
flw f11, 0(x2) # load 0x27d41342aeaf6d30 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmadd.s f19, f15, f11, f22, dyn # perform operation
fmadd.s f19, f15, f11, f22, rdn # perform operation
fmadd.s f19, f15, f11, f22, rmm # perform operation
fmadd.s f19, f15, f11, f22, rne # perform operation
fmadd.s f19, f15, f11, f22, rtz # perform operation
fmadd.s f19, f15, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f15, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x501fca9e48b96389 # load x3 with value 0x501fca9e48b96389
sw x3, 0(x2) # store 0x501fca9e48b96389 in memory
flw f28, 0(x2) # load 0x501fca9e48b96389 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmadd.s f24, f16, f28, f11, dyn # perform operation
fmadd.s f24, f16, f28, f11, rdn # perform operation
fmadd.s f24, f16, f28, f11, rmm # perform operation
fmadd.s f24, f16, f28, f11, rne # perform operation
fmadd.s f24, f16, f28, f11, rtz # perform operation
fmadd.s f24, f16, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f16, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f16, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x71b0f292fd4f4db0 # load x3 with value 0x71b0f292fd4f4db0
sw x3, 0(x2) # store 0x71b0f292fd4f4db0 in memory
flw f27, 0(x2) # load 0x71b0f292fd4f4db0 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmadd.s f11, f19, f27, f20, dyn # perform operation
fmadd.s f11, f19, f27, f20, rdn # perform operation
fmadd.s f11, f19, f27, f20, rmm # perform operation
fmadd.s f11, f19, f27, f20, rne # perform operation
fmadd.s f11, f19, f27, f20, rtz # perform operation
fmadd.s f11, f19, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xe90b6446376000ef # load x3 with value 0xe90b6446376000ef
sw x3, 0(x2) # store 0xe90b6446376000ef in memory
flw f19, 0(x2) # load 0xe90b6446376000ef from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fmadd.s f28, f20, f19, f14, dyn # perform operation
fmadd.s f28, f20, f19, f14, rdn # perform operation
fmadd.s f28, f20, f19, f14, rmm # perform operation
fmadd.s f28, f20, f19, f14, rne # perform operation
fmadd.s f28, f20, f19, f14, rtz # perform operation
fmadd.s f28, f20, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x4be8b512c68006fd # load x3 with value 0x4be8b512c68006fd
sw x3, 0(x2) # store 0x4be8b512c68006fd in memory
flw f26, 0(x2) # load 0x4be8b512c68006fd from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmadd.s f24, f19, f26, f22, dyn # perform operation
fmadd.s f24, f19, f26, f22, rdn # perform operation
fmadd.s f24, f19, f26, f22, rmm # perform operation
fmadd.s f24, f19, f26, f22, rne # perform operation
fmadd.s f24, f19, f26, f22, rtz # perform operation
fmadd.s f24, f19, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x2b25daafa54d094d # load x3 with value 0x2b25daafa54d094d
sw x3, 0(x2) # store 0x2b25daafa54d094d in memory
flw f22, 0(x2) # load 0x2b25daafa54d094d from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f29, f7, f22, f27, dyn # perform operation
fmadd.s f29, f7, f22, f27, rdn # perform operation
fmadd.s f29, f7, f22, f27, rmm # perform operation
fmadd.s f29, f7, f22, f27, rne # perform operation
fmadd.s f29, f7, f22, f27, rtz # perform operation
fmadd.s f29, f7, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x2636e1d99180fcc1 # load x3 with value 0x2636e1d99180fcc1
sw x3, 0(x2) # store 0x2636e1d99180fcc1 in memory
flw f5, 0(x2) # load 0x2636e1d99180fcc1 from memory into f5
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fmadd.s f14, f21, f5, f6, dyn # perform operation
fmadd.s f14, f21, f5, f6, rdn # perform operation
fmadd.s f14, f21, f5, f6, rmm # perform operation
fmadd.s f14, f21, f5, f6, rne # perform operation
fmadd.s f14, f21, f5, f6, rtz # perform operation
fmadd.s f14, f21, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f21, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xf25f2d284efe31d4 # load x3 with value 0xf25f2d284efe31d4
sw x3, 0(x2) # store 0xf25f2d284efe31d4 in memory
flw f21, 0(x2) # load 0xf25f2d284efe31d4 from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f15, f18, f21, f6, dyn # perform operation
fmadd.s f15, f18, f21, f6, rdn # perform operation
fmadd.s f15, f18, f21, f6, rmm # perform operation
fmadd.s f15, f18, f21, f6, rne # perform operation
fmadd.s f15, f18, f21, f6, rtz # perform operation
fmadd.s f15, f18, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xf47c2c082a6b646f # load x3 with value 0xf47c2c082a6b646f
sw x3, 0(x2) # store 0xf47c2c082a6b646f in memory
flw f27, 0(x2) # load 0xf47c2c082a6b646f from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmadd.s f24, f7, f27, f13, dyn # perform operation
fmadd.s f24, f7, f27, f13, rdn # perform operation
fmadd.s f24, f7, f27, f13, rmm # perform operation
fmadd.s f24, f7, f27, f13, rne # perform operation
fmadd.s f24, f7, f27, f13, rtz # perform operation
fmadd.s f24, f7, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x4b5c910754ecf0c7 # load x3 with value 0x4b5c910754ecf0c7
sw x3, 0(x2) # store 0x4b5c910754ecf0c7 in memory
flw f25, 0(x2) # load 0x4b5c910754ecf0c7 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmadd.s f9, f21, f25, f8, dyn # perform operation
fmadd.s f9, f21, f25, f8, rdn # perform operation
fmadd.s f9, f21, f25, f8, rmm # perform operation
fmadd.s f9, f21, f25, f8, rne # perform operation
fmadd.s f9, f21, f25, f8, rtz # perform operation
fmadd.s f9, f21, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x9e4ea7aef8657998 # load x3 with value 0x9e4ea7aef8657998
sw x3, 0(x2) # store 0x9e4ea7aef8657998 in memory
flw f27, 0(x2) # load 0x9e4ea7aef8657998 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fmadd.s f12, f8, f27, f30, dyn # perform operation
fmadd.s f12, f8, f27, f30, rdn # perform operation
fmadd.s f12, f8, f27, f30, rmm # perform operation
fmadd.s f12, f8, f27, f30, rne # perform operation
fmadd.s f12, f8, f27, f30, rtz # perform operation
fmadd.s f12, f8, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f8, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f8, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x8852282dfc611776 # load x3 with value 0x8852282dfc611776
sw x3, 0(x2) # store 0x8852282dfc611776 in memory
flw f18, 0(x2) # load 0x8852282dfc611776 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmadd.s f25, f27, f18, f28, dyn # perform operation
fmadd.s f25, f27, f18, f28, rdn # perform operation
fmadd.s f25, f27, f18, f28, rmm # perform operation
fmadd.s f25, f27, f18, f28, rne # perform operation
fmadd.s f25, f27, f18, f28, rtz # perform operation
fmadd.s f25, f27, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f18, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xc4bcbd580257904e # load x3 with value 0xc4bcbd580257904e
sw x3, 0(x2) # store 0xc4bcbd580257904e in memory
flw f24, 0(x2) # load 0xc4bcbd580257904e from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fmadd.s f20, f11, f24, f10, dyn # perform operation
fmadd.s f20, f11, f24, f10, rdn # perform operation
fmadd.s f20, f11, f24, f10, rmm # perform operation
fmadd.s f20, f11, f24, f10, rne # perform operation
fmadd.s f20, f11, f24, f10, rtz # perform operation
fmadd.s f20, f11, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f11, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f11, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x1e4e0a2a159cb9e7 # load x3 with value 0x1e4e0a2a159cb9e7
sw x3, 0(x2) # store 0x1e4e0a2a159cb9e7 in memory
flw f11, 0(x2) # load 0x1e4e0a2a159cb9e7 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f2, f25, f11, f5, dyn # perform operation
fmadd.s f2, f25, f11, f5, rdn # perform operation
fmadd.s f2, f25, f11, f5, rmm # perform operation
fmadd.s f2, f25, f11, f5, rne # perform operation
fmadd.s f2, f25, f11, f5, rtz # perform operation
fmadd.s f2, f25, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f25, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f25, f11, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x850d6a89d52eb455 # load x3 with value 0x850d6a89d52eb455
sw x3, 0(x2) # store 0x850d6a89d52eb455 in memory
flw f8, 0(x2) # load 0x850d6a89d52eb455 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmadd.s f23, f22, f8, f15, dyn # perform operation
fmadd.s f23, f22, f8, f15, rdn # perform operation
fmadd.s f23, f22, f8, f15, rmm # perform operation
fmadd.s f23, f22, f8, f15, rne # perform operation
fmadd.s f23, f22, f8, f15, rtz # perform operation
fmadd.s f23, f22, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0xbfe58c902f885d4b # load x3 with value 0xbfe58c902f885d4b
sw x3, 0(x2) # store 0xbfe58c902f885d4b in memory
flw f7, 0(x2) # load 0xbfe58c902f885d4b from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmadd.s f8, f5, f7, f25, dyn # perform operation
fmadd.s f8, f5, f7, f25, rdn # perform operation
fmadd.s f8, f5, f7, f25, rmm # perform operation
fmadd.s f8, f5, f7, f25, rne # perform operation
fmadd.s f8, f5, f7, f25, rtz # perform operation
fmadd.s f8, f5, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f5, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f5, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f5, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f5, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f5, f7, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x7ad6f4e343050d30 # load x3 with value 0x7ad6f4e343050d30
sw x3, 0(x2) # store 0x7ad6f4e343050d30 in memory
flw f17, 0(x2) # load 0x7ad6f4e343050d30 from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmadd.s f15, f30, f17, f13, dyn # perform operation
fmadd.s f15, f30, f17, f13, rdn # perform operation
fmadd.s f15, f30, f17, f13, rmm # perform operation
fmadd.s f15, f30, f17, f13, rne # perform operation
fmadd.s f15, f30, f17, f13, rtz # perform operation
fmadd.s f15, f30, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f17, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xc6aee224b76b1e8e # load x3 with value 0xc6aee224b76b1e8e
sw x3, 0(x2) # store 0xc6aee224b76b1e8e in memory
flw f6, 0(x2) # load 0xc6aee224b76b1e8e from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f3, f8, f6, f11, dyn # perform operation
fmadd.s f3, f8, f6, f11, rdn # perform operation
fmadd.s f3, f8, f6, f11, rmm # perform operation
fmadd.s f3, f8, f6, f11, rne # perform operation
fmadd.s f3, f8, f6, f11, rtz # perform operation
fmadd.s f3, f8, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f8, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xb178873184315621 # load x3 with value 0xb178873184315621
sw x3, 0(x2) # store 0xb178873184315621 in memory
flw f21, 0(x2) # load 0xb178873184315621 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f24, f28, f21, f25, dyn # perform operation
fmadd.s f24, f28, f21, f25, rdn # perform operation
fmadd.s f24, f28, f21, f25, rmm # perform operation
fmadd.s f24, f28, f21, f25, rne # perform operation
fmadd.s f24, f28, f21, f25, rtz # perform operation
fmadd.s f24, f28, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f21, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x2c863ed88ebc7313 # load x3 with value 0x2c863ed88ebc7313
sw x3, 0(x2) # store 0x2c863ed88ebc7313 in memory
flw f14, 0(x2) # load 0x2c863ed88ebc7313 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmadd.s f17, f22, f14, f25, dyn # perform operation
fmadd.s f17, f22, f14, f25, rdn # perform operation
fmadd.s f17, f22, f14, f25, rmm # perform operation
fmadd.s f17, f22, f14, f25, rne # perform operation
fmadd.s f17, f22, f14, f25, rtz # perform operation
fmadd.s f17, f22, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f22, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f22, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x7b2c0048056d2d1f # load x3 with value 0x7b2c0048056d2d1f
sw x3, 0(x2) # store 0x7b2c0048056d2d1f in memory
flw f12, 0(x2) # load 0x7b2c0048056d2d1f from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmadd.s f30, f13, f12, f28, dyn # perform operation
fmadd.s f30, f13, f12, f28, rdn # perform operation
fmadd.s f30, f13, f12, f28, rmm # perform operation
fmadd.s f30, f13, f12, f28, rne # perform operation
fmadd.s f30, f13, f12, f28, rtz # perform operation
fmadd.s f30, f13, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x634f681dc968e3d0 # load x3 with value 0x634f681dc968e3d0
sw x3, 0(x2) # store 0x634f681dc968e3d0 in memory
flw f14, 0(x2) # load 0x634f681dc968e3d0 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmadd.s f15, f2, f14, f9, dyn # perform operation
fmadd.s f15, f2, f14, f9, rdn # perform operation
fmadd.s f15, f2, f14, f9, rmm # perform operation
fmadd.s f15, f2, f14, f9, rne # perform operation
fmadd.s f15, f2, f14, f9, rtz # perform operation
fmadd.s f15, f2, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x146c3f028f58a8a4 # load x3 with value 0x146c3f028f58a8a4
sw x3, 0(x2) # store 0x146c3f028f58a8a4 in memory
flw f24, 0(x2) # load 0x146c3f028f58a8a4 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fmadd.s f2, f20, f24, f3, dyn # perform operation
fmadd.s f2, f20, f24, f3, rdn # perform operation
fmadd.s f2, f20, f24, f3, rmm # perform operation
fmadd.s f2, f20, f24, f3, rne # perform operation
fmadd.s f2, f20, f24, f3, rtz # perform operation
fmadd.s f2, f20, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xe12c6fd5ec085613 # load x3 with value 0xe12c6fd5ec085613
sw x3, 0(x2) # store 0xe12c6fd5ec085613 in memory
flw f7, 0(x2) # load 0xe12c6fd5ec085613 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmadd.s f6, f13, f7, f11, dyn # perform operation
fmadd.s f6, f13, f7, f11, rdn # perform operation
fmadd.s f6, f13, f7, f11, rmm # perform operation
fmadd.s f6, f13, f7, f11, rne # perform operation
fmadd.s f6, f13, f7, f11, rtz # perform operation
fmadd.s f6, f13, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x4cdb1ac821255376 # load x3 with value 0x4cdb1ac821255376
sw x3, 0(x2) # store 0x4cdb1ac821255376 in memory
flw f22, 0(x2) # load 0x4cdb1ac821255376 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fmadd.s f2, f31, f22, f9, dyn # perform operation
fmadd.s f2, f31, f22, f9, rdn # perform operation
fmadd.s f2, f31, f22, f9, rmm # perform operation
fmadd.s f2, f31, f22, f9, rne # perform operation
fmadd.s f2, f31, f22, f9, rtz # perform operation
fmadd.s f2, f31, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x6f1b137577b067be # load x3 with value 0x6f1b137577b067be
sw x3, 0(x2) # store 0x6f1b137577b067be in memory
flw f23, 0(x2) # load 0x6f1b137577b067be from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmadd.s f16, f7, f23, f20, dyn # perform operation
fmadd.s f16, f7, f23, f20, rdn # perform operation
fmadd.s f16, f7, f23, f20, rmm # perform operation
fmadd.s f16, f7, f23, f20, rne # perform operation
fmadd.s f16, f7, f23, f20, rtz # perform operation
fmadd.s f16, f7, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f7, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x7807108acb191dd2 # load x3 with value 0x7807108acb191dd2
sw x3, 0(x2) # store 0x7807108acb191dd2 in memory
flw f28, 0(x2) # load 0x7807108acb191dd2 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmadd.s f29, f12, f28, f5, dyn # perform operation
fmadd.s f29, f12, f28, f5, rdn # perform operation
fmadd.s f29, f12, f28, f5, rmm # perform operation
fmadd.s f29, f12, f28, f5, rne # perform operation
fmadd.s f29, f12, f28, f5, rtz # perform operation
fmadd.s f29, f12, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f28, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xc943a258092fff8a # load x3 with value 0xc943a258092fff8a
sw x3, 0(x2) # store 0xc943a258092fff8a in memory
flw f23, 0(x2) # load 0xc943a258092fff8a from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
fmadd.s f30, f31, f23, f10, dyn # perform operation
fmadd.s f30, f31, f23, f10, rdn # perform operation
fmadd.s f30, f31, f23, f10, rmm # perform operation
fmadd.s f30, f31, f23, f10, rne # perform operation
fmadd.s f30, f31, f23, f10, rtz # perform operation
fmadd.s f30, f31, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f31, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f31, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f31, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f31, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f31, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x74e2a5765797d705 # load x3 with value 0x74e2a5765797d705
sw x3, 0(x2) # store 0x74e2a5765797d705 in memory
flw f29, 0(x2) # load 0x74e2a5765797d705 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
fmadd.s f7, f15, f29, f8, dyn # perform operation
fmadd.s f7, f15, f29, f8, rdn # perform operation
fmadd.s f7, f15, f29, f8, rmm # perform operation
fmadd.s f7, f15, f29, f8, rne # perform operation
fmadd.s f7, f15, f29, f8, rtz # perform operation
fmadd.s f7, f15, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xd9762e11a2592ecd # load x3 with value 0xd9762e11a2592ecd
sw x3, 0(x2) # store 0xd9762e11a2592ecd in memory
flw f17, 0(x2) # load 0xd9762e11a2592ecd from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmadd.s f13, f21, f17, f27, dyn # perform operation
fmadd.s f13, f21, f17, f27, rdn # perform operation
fmadd.s f13, f21, f17, f27, rmm # perform operation
fmadd.s f13, f21, f17, f27, rne # perform operation
fmadd.s f13, f21, f17, f27, rtz # perform operation
fmadd.s f13, f21, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f17, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x9bf4158aa46a54d6 # load x3 with value 0x9bf4158aa46a54d6
sw x3, 0(x2) # store 0x9bf4158aa46a54d6 in memory
flw f12, 0(x2) # load 0x9bf4158aa46a54d6 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmadd.s f11, f24, f12, f16, dyn # perform operation
fmadd.s f11, f24, f12, f16, rdn # perform operation
fmadd.s f11, f24, f12, f16, rmm # perform operation
fmadd.s f11, f24, f12, f16, rne # perform operation
fmadd.s f11, f24, f12, f16, rtz # perform operation
fmadd.s f11, f24, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0xcd25c0bce585edb2 # load x3 with value 0xcd25c0bce585edb2
sw x3, 0(x2) # store 0xcd25c0bce585edb2 in memory
flw f30, 0(x2) # load 0xcd25c0bce585edb2 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmadd.s f28, f20, f30, f31, dyn # perform operation
fmadd.s f28, f20, f30, f31, rdn # perform operation
fmadd.s f28, f20, f30, f31, rmm # perform operation
fmadd.s f28, f20, f30, f31, rne # perform operation
fmadd.s f28, f20, f30, f31, rtz # perform operation
fmadd.s f28, f20, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f30, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0xe5b5f3bf46f15d93 # load x3 with value 0xe5b5f3bf46f15d93
sw x3, 0(x2) # store 0xe5b5f3bf46f15d93 in memory
flw f8, 0(x2) # load 0xe5b5f3bf46f15d93 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmadd.s f26, f18, f8, f16, dyn # perform operation
fmadd.s f26, f18, f8, f16, rdn # perform operation
fmadd.s f26, f18, f8, f16, rmm # perform operation
fmadd.s f26, f18, f8, f16, rne # perform operation
fmadd.s f26, f18, f8, f16, rtz # perform operation
fmadd.s f26, f18, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f18, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f18, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x1f486b367392ec3b # load x3 with value 0x1f486b367392ec3b
sw x3, 0(x2) # store 0x1f486b367392ec3b in memory
flw f15, 0(x2) # load 0x1f486b367392ec3b from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fmadd.s f18, f30, f15, f21, dyn # perform operation
fmadd.s f18, f30, f15, f21, rdn # perform operation
fmadd.s f18, f30, f15, f21, rmm # perform operation
fmadd.s f18, f30, f15, f21, rne # perform operation
fmadd.s f18, f30, f15, f21, rtz # perform operation
fmadd.s f18, f30, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f30, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f30, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f30, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f30, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f30, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x6e4bc9d215ebccc0 # load x3 with value 0x6e4bc9d215ebccc0
sw x3, 0(x2) # store 0x6e4bc9d215ebccc0 in memory
flw f20, 0(x2) # load 0x6e4bc9d215ebccc0 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fmadd.s f12, f10, f20, f7, dyn # perform operation
fmadd.s f12, f10, f20, f7, rdn # perform operation
fmadd.s f12, f10, f20, f7, rmm # perform operation
fmadd.s f12, f10, f20, f7, rne # perform operation
fmadd.s f12, f10, f20, f7, rtz # perform operation
fmadd.s f12, f10, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f10, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f10, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0xbdb7b309f7bd73df # load x3 with value 0xbdb7b309f7bd73df
sw x3, 0(x2) # store 0xbdb7b309f7bd73df in memory
flw f22, 0(x2) # load 0xbdb7b309f7bd73df from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f24, f9, f22, f21, dyn # perform operation
fmadd.s f24, f9, f22, f21, rdn # perform operation
fmadd.s f24, f9, f22, f21, rmm # perform operation
fmadd.s f24, f9, f22, f21, rne # perform operation
fmadd.s f24, f9, f22, f21, rtz # perform operation
fmadd.s f24, f9, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0xb34a98669a547e70 # load x3 with value 0xb34a98669a547e70
sw x3, 0(x2) # store 0xb34a98669a547e70 in memory
flw f29, 0(x2) # load 0xb34a98669a547e70 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f10, f8, f29, f18, dyn # perform operation
fmadd.s f10, f8, f29, f18, rdn # perform operation
fmadd.s f10, f8, f29, f18, rmm # perform operation
fmadd.s f10, f8, f29, f18, rne # perform operation
fmadd.s f10, f8, f29, f18, rtz # perform operation
fmadd.s f10, f8, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f8, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f8, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f8, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f8, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f8, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0x775d7c8c11335410 # load x3 with value 0x775d7c8c11335410
sw x3, 0(x2) # store 0x775d7c8c11335410 in memory
flw f14, 0(x2) # load 0x775d7c8c11335410 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fmadd.s f13, f26, f14, f12, dyn # perform operation
fmadd.s f13, f26, f14, f12, rdn # perform operation
fmadd.s f13, f26, f14, f12, rmm # perform operation
fmadd.s f13, f26, f14, f12, rne # perform operation
fmadd.s f13, f26, f14, f12, rtz # perform operation
fmadd.s f13, f26, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x7dd784afd943590 # load x3 with value 0x7dd784afd943590
sw x3, 0(x2) # store 0x7dd784afd943590 in memory
flw f18, 0(x2) # load 0x7dd784afd943590 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fmadd.s f21, f28, f18, f14, dyn # perform operation
fmadd.s f21, f28, f18, f14, rdn # perform operation
fmadd.s f21, f28, f18, f14, rmm # perform operation
fmadd.s f21, f28, f18, f14, rne # perform operation
fmadd.s f21, f28, f18, f14, rtz # perform operation
fmadd.s f21, f28, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f28, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xee6a22977fa8e5e1 # load x3 with value 0xee6a22977fa8e5e1
sw x3, 0(x2) # store 0xee6a22977fa8e5e1 in memory
flw f10, 0(x2) # load 0xee6a22977fa8e5e1 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmadd.s f6, f7, f10, f26, dyn # perform operation
fmadd.s f6, f7, f10, f26, rdn # perform operation
fmadd.s f6, f7, f10, f26, rmm # perform operation
fmadd.s f6, f7, f10, f26, rne # perform operation
fmadd.s f6, f7, f10, f26, rtz # perform operation
fmadd.s f6, f7, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f10, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xb62fd3494610d8a6 # load x3 with value 0xb62fd3494610d8a6
sw x3, 0(x2) # store 0xb62fd3494610d8a6 in memory
flw f8, 0(x2) # load 0xb62fd3494610d8a6 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f29, f5, f8, f31, dyn # perform operation
fmadd.s f29, f5, f8, f31, rdn # perform operation
fmadd.s f29, f5, f8, f31, rmm # perform operation
fmadd.s f29, f5, f8, f31, rne # perform operation
fmadd.s f29, f5, f8, f31, rtz # perform operation
fmadd.s f29, f5, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xa7d36afb59d68db1 # load x3 with value 0xa7d36afb59d68db1
sw x3, 0(x2) # store 0xa7d36afb59d68db1 in memory
flw f1, 0(x2) # load 0xa7d36afb59d68db1 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmadd.s f14, f27, f1, f8, dyn # perform operation
fmadd.s f14, f27, f1, f8, rdn # perform operation
fmadd.s f14, f27, f1, f8, rmm # perform operation
fmadd.s f14, f27, f1, f8, rne # perform operation
fmadd.s f14, f27, f1, f8, rtz # perform operation
fmadd.s f14, f27, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f27, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f27, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xa492bee9a6789b5b # load x3 with value 0xa492bee9a6789b5b
sw x3, 0(x2) # store 0xa492bee9a6789b5b in memory
flw f26, 0(x2) # load 0xa492bee9a6789b5b from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmadd.s f27, f22, f26, f25, dyn # perform operation
fmadd.s f27, f22, f26, f25, rdn # perform operation
fmadd.s f27, f22, f26, f25, rmm # perform operation
fmadd.s f27, f22, f26, f25, rne # perform operation
fmadd.s f27, f22, f26, f25, rtz # perform operation
fmadd.s f27, f22, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f22, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xe7385675f7c0937d # load x3 with value 0xe7385675f7c0937d
sw x3, 0(x2) # store 0xe7385675f7c0937d in memory
flw f12, 0(x2) # load 0xe7385675f7c0937d from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fmadd.s f16, f27, f12, f26, dyn # perform operation
fmadd.s f16, f27, f12, f26, rdn # perform operation
fmadd.s f16, f27, f12, f26, rmm # perform operation
fmadd.s f16, f27, f12, f26, rne # perform operation
fmadd.s f16, f27, f12, f26, rtz # perform operation
fmadd.s f16, f27, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f27, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f27, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f27, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f27, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f27, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xda7c041d793df271 # load x3 with value 0xda7c041d793df271
sw x3, 0(x2) # store 0xda7c041d793df271 in memory
flw f7, 0(x2) # load 0xda7c041d793df271 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmadd.s f25, f13, f7, f26, dyn # perform operation
fmadd.s f25, f13, f7, f26, rdn # perform operation
fmadd.s f25, f13, f7, f26, rmm # perform operation
fmadd.s f25, f13, f7, f26, rne # perform operation
fmadd.s f25, f13, f7, f26, rtz # perform operation
fmadd.s f25, f13, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x3476e3a34cb53edb # load x3 with value 0x3476e3a34cb53edb
sw x3, 0(x2) # store 0x3476e3a34cb53edb in memory
flw f21, 0(x2) # load 0x3476e3a34cb53edb from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmadd.s f8, f6, f21, f1, dyn # perform operation
fmadd.s f8, f6, f21, f1, rdn # perform operation
fmadd.s f8, f6, f21, f1, rmm # perform operation
fmadd.s f8, f6, f21, f1, rne # perform operation
fmadd.s f8, f6, f21, f1, rtz # perform operation
fmadd.s f8, f6, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f6, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f6, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xd2263cc5bba44e74 # load x3 with value 0xd2263cc5bba44e74
sw x3, 0(x2) # store 0xd2263cc5bba44e74 in memory
flw f24, 0(x2) # load 0xd2263cc5bba44e74 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f2, f1, f24, f25, dyn # perform operation
fmadd.s f2, f1, f24, f25, rdn # perform operation
fmadd.s f2, f1, f24, f25, rmm # perform operation
fmadd.s f2, f1, f24, f25, rne # perform operation
fmadd.s f2, f1, f24, f25, rtz # perform operation
fmadd.s f2, f1, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f1, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f1, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x7cd05de2c25c7120 # load x3 with value 0x7cd05de2c25c7120
sw x3, 0(x2) # store 0x7cd05de2c25c7120 in memory
flw f26, 0(x2) # load 0x7cd05de2c25c7120 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fmadd.s f12, f8, f26, f23, dyn # perform operation
fmadd.s f12, f8, f26, f23, rdn # perform operation
fmadd.s f12, f8, f26, f23, rmm # perform operation
fmadd.s f12, f8, f26, f23, rne # perform operation
fmadd.s f12, f8, f26, f23, rtz # perform operation
fmadd.s f12, f8, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f8, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f8, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x54abe5564d170f20 # load x3 with value 0x54abe5564d170f20
sw x3, 0(x2) # store 0x54abe5564d170f20 in memory
flw f6, 0(x2) # load 0x54abe5564d170f20 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmadd.s f27, f10, f6, f28, dyn # perform operation
fmadd.s f27, f10, f6, f28, rdn # perform operation
fmadd.s f27, f10, f6, f28, rmm # perform operation
fmadd.s f27, f10, f6, f28, rne # perform operation
fmadd.s f27, f10, f6, f28, rtz # perform operation
fmadd.s f27, f10, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xd4bfdfe757d9eac8 # load x3 with value 0xd4bfdfe757d9eac8
sw x3, 0(x2) # store 0xd4bfdfe757d9eac8 in memory
flw f13, 0(x2) # load 0xd4bfdfe757d9eac8 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fmadd.s f20, f22, f13, f29, dyn # perform operation
fmadd.s f20, f22, f13, f29, rdn # perform operation
fmadd.s f20, f22, f13, f29, rmm # perform operation
fmadd.s f20, f22, f13, f29, rne # perform operation
fmadd.s f20, f22, f13, f29, rtz # perform operation
fmadd.s f20, f22, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f22, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f22, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f22, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f22, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f22, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x48bb4497e377bc7d # load x3 with value 0x48bb4497e377bc7d
sw x3, 0(x2) # store 0x48bb4497e377bc7d in memory
flw f18, 0(x2) # load 0x48bb4497e377bc7d from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fmadd.s f31, f20, f18, f6, dyn # perform operation
fmadd.s f31, f20, f18, f6, rdn # perform operation
fmadd.s f31, f20, f18, f6, rmm # perform operation
fmadd.s f31, f20, f18, f6, rne # perform operation
fmadd.s f31, f20, f18, f6, rtz # perform operation
fmadd.s f31, f20, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xad740f7c5eff98cc # load x3 with value 0xad740f7c5eff98cc
sw x3, 0(x2) # store 0xad740f7c5eff98cc in memory
flw f17, 0(x2) # load 0xad740f7c5eff98cc from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmadd.s f10, f2, f17, f23, dyn # perform operation
fmadd.s f10, f2, f17, f23, rdn # perform operation
fmadd.s f10, f2, f17, f23, rmm # perform operation
fmadd.s f10, f2, f17, f23, rne # perform operation
fmadd.s f10, f2, f17, f23, rtz # perform operation
fmadd.s f10, f2, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f2, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f2, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x3e052f19c893a623 # load x3 with value 0x3e052f19c893a623
sw x3, 0(x2) # store 0x3e052f19c893a623 in memory
flw f18, 0(x2) # load 0x3e052f19c893a623 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
fmadd.s f28, f23, f18, f22, dyn # perform operation
fmadd.s f28, f23, f18, f22, rdn # perform operation
fmadd.s f28, f23, f18, f22, rmm # perform operation
fmadd.s f28, f23, f18, f22, rne # perform operation
fmadd.s f28, f23, f18, f22, rtz # perform operation
fmadd.s f28, f23, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x8a66ea55aa887203 # load x3 with value 0x8a66ea55aa887203
sw x3, 0(x2) # store 0x8a66ea55aa887203 in memory
flw f15, 0(x2) # load 0x8a66ea55aa887203 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmadd.s f14, f12, f15, f29, dyn # perform operation
fmadd.s f14, f12, f15, f29, rdn # perform operation
fmadd.s f14, f12, f15, f29, rmm # perform operation
fmadd.s f14, f12, f15, f29, rne # perform operation
fmadd.s f14, f12, f15, f29, rtz # perform operation
fmadd.s f14, f12, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x84e6d5c93b2544d # load x3 with value 0x84e6d5c93b2544d
sw x3, 0(x2) # store 0x84e6d5c93b2544d in memory
flw f9, 0(x2) # load 0x84e6d5c93b2544d from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fmadd.s f8, f15, f9, f13, dyn # perform operation
fmadd.s f8, f15, f9, f13, rdn # perform operation
fmadd.s f8, f15, f9, f13, rmm # perform operation
fmadd.s f8, f15, f9, f13, rne # perform operation
fmadd.s f8, f15, f9, f13, rtz # perform operation
fmadd.s f8, f15, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f15, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x5bcd2849905a8079 # load x3 with value 0x5bcd2849905a8079
sw x3, 0(x2) # store 0x5bcd2849905a8079 in memory
flw f3, 0(x2) # load 0x5bcd2849905a8079 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fmadd.s f31, f12, f3, f1, dyn # perform operation
fmadd.s f31, f12, f3, f1, rdn # perform operation
fmadd.s f31, f12, f3, f1, rmm # perform operation
fmadd.s f31, f12, f3, f1, rne # perform operation
fmadd.s f31, f12, f3, f1, rtz # perform operation
fmadd.s f31, f12, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f12, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f12, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f12, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f12, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f12, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xe9f0a9a228d2fe78 # load x3 with value 0xe9f0a9a228d2fe78
sw x3, 0(x2) # store 0xe9f0a9a228d2fe78 in memory
flw f2, 0(x2) # load 0xe9f0a9a228d2fe78 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f28, f25, f2, f31, dyn # perform operation
fmadd.s f28, f25, f2, f31, rdn # perform operation
fmadd.s f28, f25, f2, f31, rmm # perform operation
fmadd.s f28, f25, f2, f31, rne # perform operation
fmadd.s f28, f25, f2, f31, rtz # perform operation
fmadd.s f28, f25, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f2, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xb66231bb13b6c947 # load x3 with value 0xb66231bb13b6c947
sw x3, 0(x2) # store 0xb66231bb13b6c947 in memory
flw f16, 0(x2) # load 0xb66231bb13b6c947 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmadd.s f3, f14, f16, f22, dyn # perform operation
fmadd.s f3, f14, f16, f22, rdn # perform operation
fmadd.s f3, f14, f16, f22, rmm # perform operation
fmadd.s f3, f14, f16, f22, rne # perform operation
fmadd.s f3, f14, f16, f22, rtz # perform operation
fmadd.s f3, f14, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f14, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f14, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f14, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f14, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f14, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xf355d8121d20fa47 # load x3 with value 0xf355d8121d20fa47
sw x3, 0(x2) # store 0xf355d8121d20fa47 in memory
flw f27, 0(x2) # load 0xf355d8121d20fa47 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fmadd.s f2, f12, f27, f31, dyn # perform operation
fmadd.s f2, f12, f27, f31, rdn # perform operation
fmadd.s f2, f12, f27, f31, rmm # perform operation
fmadd.s f2, f12, f27, f31, rne # perform operation
fmadd.s f2, f12, f27, f31, rtz # perform operation
fmadd.s f2, f12, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f12, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f12, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x725d24a9babf269b # load x3 with value 0x725d24a9babf269b
sw x3, 0(x2) # store 0x725d24a9babf269b in memory
flw f11, 0(x2) # load 0x725d24a9babf269b from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmadd.s f20, f3, f11, f22, dyn # perform operation
fmadd.s f20, f3, f11, f22, rdn # perform operation
fmadd.s f20, f3, f11, f22, rmm # perform operation
fmadd.s f20, f3, f11, f22, rne # perform operation
fmadd.s f20, f3, f11, f22, rtz # perform operation
fmadd.s f20, f3, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x8e7e2ea42af8e2fb # load x3 with value 0x8e7e2ea42af8e2fb
sw x3, 0(x2) # store 0x8e7e2ea42af8e2fb in memory
flw f6, 0(x2) # load 0x8e7e2ea42af8e2fb from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f5, f26, f6, f3, dyn # perform operation
fmadd.s f5, f26, f6, f3, rdn # perform operation
fmadd.s f5, f26, f6, f3, rmm # perform operation
fmadd.s f5, f26, f6, f3, rne # perform operation
fmadd.s f5, f26, f6, f3, rtz # perform operation
fmadd.s f5, f26, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f6, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xc89e875dad77e412 # load x3 with value 0xc89e875dad77e412
sw x3, 0(x2) # store 0xc89e875dad77e412 in memory
flw f17, 0(x2) # load 0xc89e875dad77e412 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f9, f11, f17, f10, dyn # perform operation
fmadd.s f9, f11, f17, f10, rdn # perform operation
fmadd.s f9, f11, f17, f10, rmm # perform operation
fmadd.s f9, f11, f17, f10, rne # perform operation
fmadd.s f9, f11, f17, f10, rtz # perform operation
fmadd.s f9, f11, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f11, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f11, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x48ed5f655f88a042 # load x3 with value 0x48ed5f655f88a042
sw x3, 0(x2) # store 0x48ed5f655f88a042 in memory
flw f19, 0(x2) # load 0x48ed5f655f88a042 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmadd.s f2, f7, f19, f17, dyn # perform operation
fmadd.s f2, f7, f19, f17, rdn # perform operation
fmadd.s f2, f7, f19, f17, rmm # perform operation
fmadd.s f2, f7, f19, f17, rne # perform operation
fmadd.s f2, f7, f19, f17, rtz # perform operation
fmadd.s f2, f7, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f7, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f7, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f7, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f7, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f7, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x7bbe6c20404bf3ee # load x3 with value 0x7bbe6c20404bf3ee
sw x3, 0(x2) # store 0x7bbe6c20404bf3ee in memory
flw f12, 0(x2) # load 0x7bbe6c20404bf3ee from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmadd.s f14, f30, f12, f1, dyn # perform operation
fmadd.s f14, f30, f12, f1, rdn # perform operation
fmadd.s f14, f30, f12, f1, rmm # perform operation
fmadd.s f14, f30, f12, f1, rne # perform operation
fmadd.s f14, f30, f12, f1, rtz # perform operation
fmadd.s f14, f30, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f30, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f30, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f30, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f30, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f30, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x6301a1122e5177c5 # load x3 with value 0x6301a1122e5177c5
sw x3, 0(x2) # store 0x6301a1122e5177c5 in memory
flw f8, 0(x2) # load 0x6301a1122e5177c5 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmadd.s f31, f9, f8, f12, dyn # perform operation
fmadd.s f31, f9, f8, f12, rdn # perform operation
fmadd.s f31, f9, f8, f12, rmm # perform operation
fmadd.s f31, f9, f8, f12, rne # perform operation
fmadd.s f31, f9, f8, f12, rtz # perform operation
fmadd.s f31, f9, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0xe294b20111d71fac # load x3 with value 0xe294b20111d71fac
sw x3, 0(x2) # store 0xe294b20111d71fac in memory
flw f22, 0(x2) # load 0xe294b20111d71fac from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmadd.s f23, f15, f22, f18, dyn # perform operation
fmadd.s f23, f15, f22, f18, rdn # perform operation
fmadd.s f23, f15, f22, f18, rmm # perform operation
fmadd.s f23, f15, f22, f18, rne # perform operation
fmadd.s f23, f15, f22, f18, rtz # perform operation
fmadd.s f23, f15, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f15, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f15, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xe3a3c43578d5815b # load x3 with value 0xe3a3c43578d5815b
sw x3, 0(x2) # store 0xe3a3c43578d5815b in memory
flw f6, 0(x2) # load 0xe3a3c43578d5815b from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmadd.s f16, f12, f6, f27, dyn # perform operation
fmadd.s f16, f12, f6, f27, rdn # perform operation
fmadd.s f16, f12, f6, f27, rmm # perform operation
fmadd.s f16, f12, f6, f27, rne # perform operation
fmadd.s f16, f12, f6, f27, rtz # perform operation
fmadd.s f16, f12, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x541c77e9831dc321 # load x3 with value 0x541c77e9831dc321
sw x3, 0(x2) # store 0x541c77e9831dc321 in memory
flw f22, 0(x2) # load 0x541c77e9831dc321 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f19, f11, f22, f18, dyn # perform operation
fmadd.s f19, f11, f22, f18, rdn # perform operation
fmadd.s f19, f11, f22, f18, rmm # perform operation
fmadd.s f19, f11, f22, f18, rne # perform operation
fmadd.s f19, f11, f22, f18, rtz # perform operation
fmadd.s f19, f11, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x2212bbe118562a8a # load x3 with value 0x2212bbe118562a8a
sw x3, 0(x2) # store 0x2212bbe118562a8a in memory
flw f7, 0(x2) # load 0x2212bbe118562a8a from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmadd.s f5, f10, f7, f8, dyn # perform operation
fmadd.s f5, f10, f7, f8, rdn # perform operation
fmadd.s f5, f10, f7, f8, rmm # perform operation
fmadd.s f5, f10, f7, f8, rne # perform operation
fmadd.s f5, f10, f7, f8, rtz # perform operation
fmadd.s f5, f10, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f7, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x5cf7c7b144d98266 # load x3 with value 0x5cf7c7b144d98266
sw x3, 0(x2) # store 0x5cf7c7b144d98266 in memory
flw f7, 0(x2) # load 0x5cf7c7b144d98266 from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmadd.s f22, f23, f7, f6, dyn # perform operation
fmadd.s f22, f23, f7, f6, rdn # perform operation
fmadd.s f22, f23, f7, f6, rmm # perform operation
fmadd.s f22, f23, f7, f6, rne # perform operation
fmadd.s f22, f23, f7, f6, rtz # perform operation
fmadd.s f22, f23, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f23, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x1a41a27b065e6816 # load x3 with value 0x1a41a27b065e6816
sw x3, 0(x2) # store 0x1a41a27b065e6816 in memory
flw f11, 0(x2) # load 0x1a41a27b065e6816 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmadd.s f15, f30, f11, f13, dyn # perform operation
fmadd.s f15, f30, f11, f13, rdn # perform operation
fmadd.s f15, f30, f11, f13, rmm # perform operation
fmadd.s f15, f30, f11, f13, rne # perform operation
fmadd.s f15, f30, f11, f13, rtz # perform operation
fmadd.s f15, f30, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x9101394125789095 # load x3 with value 0x9101394125789095
sw x3, 0(x2) # store 0x9101394125789095 in memory
flw f22, 0(x2) # load 0x9101394125789095 from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f20, f26, f22, f14, dyn # perform operation
fmadd.s f20, f26, f22, f14, rdn # perform operation
fmadd.s f20, f26, f22, f14, rmm # perform operation
fmadd.s f20, f26, f22, f14, rne # perform operation
fmadd.s f20, f26, f22, f14, rtz # perform operation
fmadd.s f20, f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f22, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0xc4e688bf86cdfd61 # load x3 with value 0xc4e688bf86cdfd61
sw x3, 0(x2) # store 0xc4e688bf86cdfd61 in memory
flw f30, 0(x2) # load 0xc4e688bf86cdfd61 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f21, f2, f30, f5, dyn # perform operation
fmadd.s f21, f2, f30, f5, rdn # perform operation
fmadd.s f21, f2, f30, f5, rmm # perform operation
fmadd.s f21, f2, f30, f5, rne # perform operation
fmadd.s f21, f2, f30, f5, rtz # perform operation
fmadd.s f21, f2, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x85d89d50bdc09024 # load x3 with value 0x85d89d50bdc09024
sw x3, 0(x2) # store 0x85d89d50bdc09024 in memory
flw f16, 0(x2) # load 0x85d89d50bdc09024 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmadd.s f12, f8, f16, f13, dyn # perform operation
fmadd.s f12, f8, f16, f13, rdn # perform operation
fmadd.s f12, f8, f16, f13, rmm # perform operation
fmadd.s f12, f8, f16, f13, rne # perform operation
fmadd.s f12, f8, f16, f13, rtz # perform operation
fmadd.s f12, f8, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f8, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f8, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0xceeceb9f2033c7d6 # load x3 with value 0xceeceb9f2033c7d6
sw x3, 0(x2) # store 0xceeceb9f2033c7d6 in memory
flw f21, 0(x2) # load 0xceeceb9f2033c7d6 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmadd.s f23, f18, f21, f10, dyn # perform operation
fmadd.s f23, f18, f21, f10, rdn # perform operation
fmadd.s f23, f18, f21, f10, rmm # perform operation
fmadd.s f23, f18, f21, f10, rne # perform operation
fmadd.s f23, f18, f21, f10, rtz # perform operation
fmadd.s f23, f18, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f21, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x12dbed91f969740b # load x3 with value 0x12dbed91f969740b
sw x3, 0(x2) # store 0x12dbed91f969740b in memory
flw f28, 0(x2) # load 0x12dbed91f969740b from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmadd.s f21, f17, f28, f29, dyn # perform operation
fmadd.s f21, f17, f28, f29, rdn # perform operation
fmadd.s f21, f17, f28, f29, rmm # perform operation
fmadd.s f21, f17, f28, f29, rne # perform operation
fmadd.s f21, f17, f28, f29, rtz # perform operation
fmadd.s f21, f17, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f17, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f17, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f17, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f17, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f17, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x6a3caf7aea1098b2 # load x3 with value 0x6a3caf7aea1098b2
sw x3, 0(x2) # store 0x6a3caf7aea1098b2 in memory
flw f26, 0(x2) # load 0x6a3caf7aea1098b2 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmadd.s f11, f20, f26, f15, dyn # perform operation
fmadd.s f11, f20, f26, f15, rdn # perform operation
fmadd.s f11, f20, f26, f15, rmm # perform operation
fmadd.s f11, f20, f26, f15, rne # perform operation
fmadd.s f11, f20, f26, f15, rtz # perform operation
fmadd.s f11, f20, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f20, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f20, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x262332ead3f2992d # load x3 with value 0x262332ead3f2992d
sw x3, 0(x2) # store 0x262332ead3f2992d in memory
flw f3, 0(x2) # load 0x262332ead3f2992d from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmadd.s f28, f19, f3, f1, dyn # perform operation
fmadd.s f28, f19, f3, f1, rdn # perform operation
fmadd.s f28, f19, f3, f1, rmm # perform operation
fmadd.s f28, f19, f3, f1, rne # perform operation
fmadd.s f28, f19, f3, f1, rtz # perform operation
fmadd.s f28, f19, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x2a4ed8d8787862b5 # load x3 with value 0x2a4ed8d8787862b5
sw x3, 0(x2) # store 0x2a4ed8d8787862b5 in memory
flw f3, 0(x2) # load 0x2a4ed8d8787862b5 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmadd.s f25, f20, f3, f14, dyn # perform operation
fmadd.s f25, f20, f3, f14, rdn # perform operation
fmadd.s f25, f20, f3, f14, rmm # perform operation
fmadd.s f25, f20, f3, f14, rne # perform operation
fmadd.s f25, f20, f3, f14, rtz # perform operation
fmadd.s f25, f20, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xd7929401ebfa2406 # load x3 with value 0xd7929401ebfa2406
sw x3, 0(x2) # store 0xd7929401ebfa2406 in memory
flw f19, 0(x2) # load 0xd7929401ebfa2406 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fmadd.s f2, f13, f19, f26, dyn # perform operation
fmadd.s f2, f13, f19, f26, rdn # perform operation
fmadd.s f2, f13, f19, f26, rmm # perform operation
fmadd.s f2, f13, f19, f26, rne # perform operation
fmadd.s f2, f13, f19, f26, rtz # perform operation
fmadd.s f2, f13, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0xf9387d6c639ff0f # load x3 with value 0xf9387d6c639ff0f
sw x3, 0(x2) # store 0xf9387d6c639ff0f in memory
flw f20, 0(x2) # load 0xf9387d6c639ff0f from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
fmadd.s f18, f26, f20, f11, dyn # perform operation
fmadd.s f18, f26, f20, f11, rdn # perform operation
fmadd.s f18, f26, f20, f11, rmm # perform operation
fmadd.s f18, f26, f20, f11, rne # perform operation
fmadd.s f18, f26, f20, f11, rtz # perform operation
fmadd.s f18, f26, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f26, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f26, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f26, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f26, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f26, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x788d781794a8e153 # load x3 with value 0x788d781794a8e153
sw x3, 0(x2) # store 0x788d781794a8e153 in memory
flw f25, 0(x2) # load 0x788d781794a8e153 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmadd.s f18, f1, f25, f2, dyn # perform operation
fmadd.s f18, f1, f25, f2, rdn # perform operation
fmadd.s f18, f1, f25, f2, rmm # perform operation
fmadd.s f18, f1, f25, f2, rne # perform operation
fmadd.s f18, f1, f25, f2, rtz # perform operation
fmadd.s f18, f1, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x17cd3c87e76f9790 # load x3 with value 0x17cd3c87e76f9790
sw x3, 0(x2) # store 0x17cd3c87e76f9790 in memory
flw f12, 0(x2) # load 0x17cd3c87e76f9790 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fmadd.s f18, f11, f12, f26, dyn # perform operation
fmadd.s f18, f11, f12, f26, rdn # perform operation
fmadd.s f18, f11, f12, f26, rmm # perform operation
fmadd.s f18, f11, f12, f26, rne # perform operation
fmadd.s f18, f11, f12, f26, rtz # perform operation
fmadd.s f18, f11, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x6ca6fd7a8fbb7bfb # load x3 with value 0x6ca6fd7a8fbb7bfb
sw x3, 0(x2) # store 0x6ca6fd7a8fbb7bfb in memory
flw f17, 0(x2) # load 0x6ca6fd7a8fbb7bfb from memory into f17
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fmadd.s f13, f15, f17, f16, dyn # perform operation
fmadd.s f13, f15, f17, f16, rdn # perform operation
fmadd.s f13, f15, f17, f16, rmm # perform operation
fmadd.s f13, f15, f17, f16, rne # perform operation
fmadd.s f13, f15, f17, f16, rtz # perform operation
fmadd.s f13, f15, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f15, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x1036e1dec6482101 # load x3 with value 0x1036e1dec6482101
sw x3, 0(x2) # store 0x1036e1dec6482101 in memory
flw f20, 0(x2) # load 0x1036e1dec6482101 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fmadd.s f2, f31, f20, f19, dyn # perform operation
fmadd.s f2, f31, f20, f19, rdn # perform operation
fmadd.s f2, f31, f20, f19, rmm # perform operation
fmadd.s f2, f31, f20, f19, rne # perform operation
fmadd.s f2, f31, f20, f19, rtz # perform operation
fmadd.s f2, f31, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x8676b85131b3f139 # load x3 with value 0x8676b85131b3f139
sw x3, 0(x2) # store 0x8676b85131b3f139 in memory
flw f26, 0(x2) # load 0x8676b85131b3f139 from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmadd.s f21, f31, f26, f18, dyn # perform operation
fmadd.s f21, f31, f26, f18, rdn # perform operation
fmadd.s f21, f31, f26, f18, rmm # perform operation
fmadd.s f21, f31, f26, f18, rne # perform operation
fmadd.s f21, f31, f26, f18, rtz # perform operation
fmadd.s f21, f31, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x9dc6f99c699cba7f # load x3 with value 0x9dc6f99c699cba7f
sw x3, 0(x2) # store 0x9dc6f99c699cba7f in memory
flw f6, 0(x2) # load 0x9dc6f99c699cba7f from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmadd.s f27, f12, f6, f2, dyn # perform operation
fmadd.s f27, f12, f6, f2, rdn # perform operation
fmadd.s f27, f12, f6, f2, rmm # perform operation
fmadd.s f27, f12, f6, f2, rne # perform operation
fmadd.s f27, f12, f6, f2, rtz # perform operation
fmadd.s f27, f12, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f12, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f12, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x1d878c4e82cd2727 # load x3 with value 0x1d878c4e82cd2727
sw x3, 0(x2) # store 0x1d878c4e82cd2727 in memory
flw f31, 0(x2) # load 0x1d878c4e82cd2727 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fmadd.s f3, f25, f31, f20, dyn # perform operation
fmadd.s f3, f25, f31, f20, rdn # perform operation
fmadd.s f3, f25, f31, f20, rmm # perform operation
fmadd.s f3, f25, f31, f20, rne # perform operation
fmadd.s f3, f25, f31, f20, rtz # perform operation
fmadd.s f3, f25, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f25, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x75ff1599b6737e2f # load x3 with value 0x75ff1599b6737e2f
sw x3, 0(x2) # store 0x75ff1599b6737e2f in memory
flw f3, 0(x2) # load 0x75ff1599b6737e2f from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fmadd.s f17, f27, f3, f30, dyn # perform operation
fmadd.s f17, f27, f3, f30, rdn # perform operation
fmadd.s f17, f27, f3, f30, rmm # perform operation
fmadd.s f17, f27, f3, f30, rne # perform operation
fmadd.s f17, f27, f3, f30, rtz # perform operation
fmadd.s f17, f27, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f27, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f27, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x115065063b987cbf # load x3 with value 0x115065063b987cbf
sw x3, 0(x2) # store 0x115065063b987cbf in memory
flw f31, 0(x2) # load 0x115065063b987cbf from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmadd.s f21, f26, f31, f12, dyn # perform operation
fmadd.s f21, f26, f31, f12, rdn # perform operation
fmadd.s f21, f26, f31, f12, rmm # perform operation
fmadd.s f21, f26, f31, f12, rne # perform operation
fmadd.s f21, f26, f31, f12, rtz # perform operation
fmadd.s f21, f26, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f26, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f26, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x544fe722878353ff # load x3 with value 0x544fe722878353ff
sw x3, 0(x2) # store 0x544fe722878353ff in memory
flw f25, 0(x2) # load 0x544fe722878353ff from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmadd.s f22, f19, f25, f26, dyn # perform operation
fmadd.s f22, f19, f25, f26, rdn # perform operation
fmadd.s f22, f19, f25, f26, rmm # perform operation
fmadd.s f22, f19, f25, f26, rne # perform operation
fmadd.s f22, f19, f25, f26, rtz # perform operation
fmadd.s f22, f19, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xdc98a9c947bcf329 # load x3 with value 0xdc98a9c947bcf329
sw x3, 0(x2) # store 0xdc98a9c947bcf329 in memory
flw f2, 0(x2) # load 0xdc98a9c947bcf329 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmadd.s f15, f19, f2, f1, dyn # perform operation
fmadd.s f15, f19, f2, f1, rdn # perform operation
fmadd.s f15, f19, f2, f1, rmm # perform operation
fmadd.s f15, f19, f2, f1, rne # perform operation
fmadd.s f15, f19, f2, f1, rtz # perform operation
fmadd.s f15, f19, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f19, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f19, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f19, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f19, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f19, f2, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xa057d12bf9d4d930 # load x3 with value 0xa057d12bf9d4d930
sw x3, 0(x2) # store 0xa057d12bf9d4d930 in memory
flw f9, 0(x2) # load 0xa057d12bf9d4d930 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmadd.s f6, f19, f9, f22, dyn # perform operation
fmadd.s f6, f19, f9, f22, rdn # perform operation
fmadd.s f6, f19, f9, f22, rmm # perform operation
fmadd.s f6, f19, f9, f22, rne # perform operation
fmadd.s f6, f19, f9, f22, rtz # perform operation
fmadd.s f6, f19, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f9, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x95df3377dc53c1a9 # load x3 with value 0x95df3377dc53c1a9
sw x3, 0(x2) # store 0x95df3377dc53c1a9 in memory
flw f15, 0(x2) # load 0x95df3377dc53c1a9 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fmadd.s f29, f24, f15, f26, dyn # perform operation
fmadd.s f29, f24, f15, f26, rdn # perform operation
fmadd.s f29, f24, f15, f26, rmm # perform operation
fmadd.s f29, f24, f15, f26, rne # perform operation
fmadd.s f29, f24, f15, f26, rtz # perform operation
fmadd.s f29, f24, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f24, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x5821f100e3bcf95 # load x3 with value 0x5821f100e3bcf95
sw x3, 0(x2) # store 0x5821f100e3bcf95 in memory
flw f25, 0(x2) # load 0x5821f100e3bcf95 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f16, f7, f25, f3, dyn # perform operation
fmadd.s f16, f7, f25, f3, rdn # perform operation
fmadd.s f16, f7, f25, f3, rmm # perform operation
fmadd.s f16, f7, f25, f3, rne # perform operation
fmadd.s f16, f7, f25, f3, rtz # perform operation
fmadd.s f16, f7, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f7, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f7, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x616362076634f8f8 # load x3 with value 0x616362076634f8f8
sw x3, 0(x2) # store 0x616362076634f8f8 in memory
flw f22, 0(x2) # load 0x616362076634f8f8 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmadd.s f5, f2, f22, f12, dyn # perform operation
fmadd.s f5, f2, f22, f12, rdn # perform operation
fmadd.s f5, f2, f22, f12, rmm # perform operation
fmadd.s f5, f2, f22, f12, rne # perform operation
fmadd.s f5, f2, f22, f12, rtz # perform operation
fmadd.s f5, f2, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x5be0e9d1d511855 # load x3 with value 0x5be0e9d1d511855
sw x3, 0(x2) # store 0x5be0e9d1d511855 in memory
flw f28, 0(x2) # load 0x5be0e9d1d511855 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmadd.s f23, f15, f28, f7, dyn # perform operation
fmadd.s f23, f15, f28, f7, rdn # perform operation
fmadd.s f23, f15, f28, f7, rmm # perform operation
fmadd.s f23, f15, f28, f7, rne # perform operation
fmadd.s f23, f15, f28, f7, rtz # perform operation
fmadd.s f23, f15, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f15, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x63ea28480aa2dbc9 # load x3 with value 0x63ea28480aa2dbc9
sw x3, 0(x2) # store 0x63ea28480aa2dbc9 in memory
flw f26, 0(x2) # load 0x63ea28480aa2dbc9 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmadd.s f21, f1, f26, f23, dyn # perform operation
fmadd.s f21, f1, f26, f23, rdn # perform operation
fmadd.s f21, f1, f26, f23, rmm # perform operation
fmadd.s f21, f1, f26, f23, rne # perform operation
fmadd.s f21, f1, f26, f23, rtz # perform operation
fmadd.s f21, f1, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xa969e465162bd34c # load x3 with value 0xa969e465162bd34c
sw x3, 0(x2) # store 0xa969e465162bd34c in memory
flw f31, 0(x2) # load 0xa969e465162bd34c from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmadd.s f13, f1, f31, f28, dyn # perform operation
fmadd.s f13, f1, f31, f28, rdn # perform operation
fmadd.s f13, f1, f31, f28, rmm # perform operation
fmadd.s f13, f1, f31, f28, rne # perform operation
fmadd.s f13, f1, f31, f28, rtz # perform operation
fmadd.s f13, f1, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f1, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f1, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x6c1282c7cee4d731 # load x3 with value 0x6c1282c7cee4d731
sw x3, 0(x2) # store 0x6c1282c7cee4d731 in memory
flw f26, 0(x2) # load 0x6c1282c7cee4d731 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmadd.s f10, f1, f26, f13, dyn # perform operation
fmadd.s f10, f1, f26, f13, rdn # perform operation
fmadd.s f10, f1, f26, f13, rmm # perform operation
fmadd.s f10, f1, f26, f13, rne # perform operation
fmadd.s f10, f1, f26, f13, rtz # perform operation
fmadd.s f10, f1, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f1, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f1, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f1, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f1, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f1, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x8e886215ca57ed00 # load x3 with value 0x8e886215ca57ed00
sw x3, 0(x2) # store 0x8e886215ca57ed00 in memory
flw f18, 0(x2) # load 0x8e886215ca57ed00 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmadd.s f15, f26, f18, f25, dyn # perform operation
fmadd.s f15, f26, f18, f25, rdn # perform operation
fmadd.s f15, f26, f18, f25, rmm # perform operation
fmadd.s f15, f26, f18, f25, rne # perform operation
fmadd.s f15, f26, f18, f25, rtz # perform operation
fmadd.s f15, f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f18, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x7aa8d0298e415862 # load x3 with value 0x7aa8d0298e415862
sw x3, 0(x2) # store 0x7aa8d0298e415862 in memory
flw f23, 0(x2) # load 0x7aa8d0298e415862 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmadd.s f15, f8, f23, f21, dyn # perform operation
fmadd.s f15, f8, f23, f21, rdn # perform operation
fmadd.s f15, f8, f23, f21, rmm # perform operation
fmadd.s f15, f8, f23, f21, rne # perform operation
fmadd.s f15, f8, f23, f21, rtz # perform operation
fmadd.s f15, f8, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f23, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x6a28fe9eea1ef518 # load x3 with value 0x6a28fe9eea1ef518
sw x3, 0(x2) # store 0x6a28fe9eea1ef518 in memory
flw f23, 0(x2) # load 0x6a28fe9eea1ef518 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmadd.s f24, f7, f23, f20, dyn # perform operation
fmadd.s f24, f7, f23, f20, rdn # perform operation
fmadd.s f24, f7, f23, f20, rmm # perform operation
fmadd.s f24, f7, f23, f20, rne # perform operation
fmadd.s f24, f7, f23, f20, rtz # perform operation
fmadd.s f24, f7, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0xde3528308f3b63ea # load x3 with value 0xde3528308f3b63ea
sw x3, 0(x2) # store 0xde3528308f3b63ea in memory
flw f7, 0(x2) # load 0xde3528308f3b63ea from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f26, f22, f7, f14, dyn # perform operation
fmadd.s f26, f22, f7, f14, rdn # perform operation
fmadd.s f26, f22, f7, f14, rmm # perform operation
fmadd.s f26, f22, f7, f14, rne # perform operation
fmadd.s f26, f22, f7, f14, rtz # perform operation
fmadd.s f26, f22, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xab6fece0f7afdcc # load x3 with value 0xab6fece0f7afdcc
sw x3, 0(x2) # store 0xab6fece0f7afdcc in memory
flw f15, 0(x2) # load 0xab6fece0f7afdcc from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmadd.s f25, f21, f15, f23, dyn # perform operation
fmadd.s f25, f21, f15, f23, rdn # perform operation
fmadd.s f25, f21, f15, f23, rmm # perform operation
fmadd.s f25, f21, f15, f23, rne # perform operation
fmadd.s f25, f21, f15, f23, rtz # perform operation
fmadd.s f25, f21, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x56289222d6ea7707 # load x3 with value 0x56289222d6ea7707
sw x3, 0(x2) # store 0x56289222d6ea7707 in memory
flw f16, 0(x2) # load 0x56289222d6ea7707 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fmadd.s f12, f19, f16, f5, dyn # perform operation
fmadd.s f12, f19, f16, f5, rdn # perform operation
fmadd.s f12, f19, f16, f5, rmm # perform operation
fmadd.s f12, f19, f16, f5, rne # perform operation
fmadd.s f12, f19, f16, f5, rtz # perform operation
fmadd.s f12, f19, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x12e782591c928024 # load x3 with value 0x12e782591c928024
sw x3, 0(x2) # store 0x12e782591c928024 in memory
flw f25, 0(x2) # load 0x12e782591c928024 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f10, f7, f25, f13, dyn # perform operation
fmadd.s f10, f7, f25, f13, rdn # perform operation
fmadd.s f10, f7, f25, f13, rmm # perform operation
fmadd.s f10, f7, f25, f13, rne # perform operation
fmadd.s f10, f7, f25, f13, rtz # perform operation
fmadd.s f10, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x53b6c8451f14bd69 # load x3 with value 0x53b6c8451f14bd69
sw x3, 0(x2) # store 0x53b6c8451f14bd69 in memory
flw f29, 0(x2) # load 0x53b6c8451f14bd69 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fmadd.s f30, f27, f29, f17, dyn # perform operation
fmadd.s f30, f27, f29, f17, rdn # perform operation
fmadd.s f30, f27, f29, f17, rmm # perform operation
fmadd.s f30, f27, f29, f17, rne # perform operation
fmadd.s f30, f27, f29, f17, rtz # perform operation
fmadd.s f30, f27, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xeb1e76f2cd428614 # load x3 with value 0xeb1e76f2cd428614
sw x3, 0(x2) # store 0xeb1e76f2cd428614 in memory
flw f20, 0(x2) # load 0xeb1e76f2cd428614 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fmadd.s f1, f23, f20, f2, dyn # perform operation
fmadd.s f1, f23, f20, f2, rdn # perform operation
fmadd.s f1, f23, f20, f2, rmm # perform operation
fmadd.s f1, f23, f20, f2, rne # perform operation
fmadd.s f1, f23, f20, f2, rtz # perform operation
fmadd.s f1, f23, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f23, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f23, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x77103b575734df50 # load x3 with value 0x77103b575734df50
sw x3, 0(x2) # store 0x77103b575734df50 in memory
flw f29, 0(x2) # load 0x77103b575734df50 from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f19, f25, f29, f5, dyn # perform operation
fmadd.s f19, f25, f29, f5, rdn # perform operation
fmadd.s f19, f25, f29, f5, rmm # perform operation
fmadd.s f19, f25, f29, f5, rne # perform operation
fmadd.s f19, f25, f29, f5, rtz # perform operation
fmadd.s f19, f25, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f25, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x7bd8471de90060ff # load x3 with value 0x7bd8471de90060ff
sw x3, 0(x2) # store 0x7bd8471de90060ff in memory
flw f7, 0(x2) # load 0x7bd8471de90060ff from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmadd.s f17, f6, f7, f29, dyn # perform operation
fmadd.s f17, f6, f7, f29, rdn # perform operation
fmadd.s f17, f6, f7, f29, rmm # perform operation
fmadd.s f17, f6, f7, f29, rne # perform operation
fmadd.s f17, f6, f7, f29, rtz # perform operation
fmadd.s f17, f6, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xc38952ef687050e2 # load x3 with value 0xc38952ef687050e2
sw x3, 0(x2) # store 0xc38952ef687050e2 in memory
flw f2, 0(x2) # load 0xc38952ef687050e2 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fmadd.s f27, f10, f2, f20, dyn # perform operation
fmadd.s f27, f10, f2, f20, rdn # perform operation
fmadd.s f27, f10, f2, f20, rmm # perform operation
fmadd.s f27, f10, f2, f20, rne # perform operation
fmadd.s f27, f10, f2, f20, rtz # perform operation
fmadd.s f27, f10, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f2, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x2574e4e695b0ac0 # load x3 with value 0x2574e4e695b0ac0
sw x3, 0(x2) # store 0x2574e4e695b0ac0 in memory
flw f30, 0(x2) # load 0x2574e4e695b0ac0 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmadd.s f16, f29, f30, f21, dyn # perform operation
fmadd.s f16, f29, f30, f21, rdn # perform operation
fmadd.s f16, f29, f30, f21, rmm # perform operation
fmadd.s f16, f29, f30, f21, rne # perform operation
fmadd.s f16, f29, f30, f21, rtz # perform operation
fmadd.s f16, f29, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f29, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f29, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f29, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f29, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f29, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x686eae3b6570173d # load x3 with value 0x686eae3b6570173d
sw x3, 0(x2) # store 0x686eae3b6570173d in memory
flw f29, 0(x2) # load 0x686eae3b6570173d from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmadd.s f16, f18, f29, f9, dyn # perform operation
fmadd.s f16, f18, f29, f9, rdn # perform operation
fmadd.s f16, f18, f29, f9, rmm # perform operation
fmadd.s f16, f18, f29, f9, rne # perform operation
fmadd.s f16, f18, f29, f9, rtz # perform operation
fmadd.s f16, f18, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f18, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f18, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xff17a7945540cf9f # load x3 with value 0xff17a7945540cf9f
sw x3, 0(x2) # store 0xff17a7945540cf9f in memory
flw f1, 0(x2) # load 0xff17a7945540cf9f from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fmadd.s f22, f29, f1, f18, dyn # perform operation
fmadd.s f22, f29, f1, f18, rdn # perform operation
fmadd.s f22, f29, f1, f18, rmm # perform operation
fmadd.s f22, f29, f1, f18, rne # perform operation
fmadd.s f22, f29, f1, f18, rtz # perform operation
fmadd.s f22, f29, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x2c0fdf0e4679da36 # load x3 with value 0x2c0fdf0e4679da36
sw x3, 0(x2) # store 0x2c0fdf0e4679da36 in memory
flw f22, 0(x2) # load 0x2c0fdf0e4679da36 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmadd.s f5, f15, f22, f1, dyn # perform operation
fmadd.s f5, f15, f22, f1, rdn # perform operation
fmadd.s f5, f15, f22, f1, rmm # perform operation
fmadd.s f5, f15, f22, f1, rne # perform operation
fmadd.s f5, f15, f22, f1, rtz # perform operation
fmadd.s f5, f15, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0xf952fc83eb3b38ef # load x3 with value 0xf952fc83eb3b38ef
sw x3, 0(x2) # store 0xf952fc83eb3b38ef in memory
flw f26, 0(x2) # load 0xf952fc83eb3b38ef from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fmadd.s f27, f23, f26, f21, dyn # perform operation
fmadd.s f27, f23, f26, f21, rdn # perform operation
fmadd.s f27, f23, f26, f21, rmm # perform operation
fmadd.s f27, f23, f26, f21, rne # perform operation
fmadd.s f27, f23, f26, f21, rtz # perform operation
fmadd.s f27, f23, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f23, f26, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x12206b4e2b1775f6 # load x3 with value 0x12206b4e2b1775f6
sw x3, 0(x2) # store 0x12206b4e2b1775f6 in memory
flw f5, 0(x2) # load 0x12206b4e2b1775f6 from memory into f5
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f28, f25, f5, f10, dyn # perform operation
fmadd.s f28, f25, f5, f10, rdn # perform operation
fmadd.s f28, f25, f5, f10, rmm # perform operation
fmadd.s f28, f25, f5, f10, rne # perform operation
fmadd.s f28, f25, f5, f10, rtz # perform operation
fmadd.s f28, f25, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x86f8522f13c50dcf # load x3 with value 0x86f8522f13c50dcf
sw x3, 0(x2) # store 0x86f8522f13c50dcf in memory
flw f26, 0(x2) # load 0x86f8522f13c50dcf from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fmadd.s f5, f2, f26, f6, dyn # perform operation
fmadd.s f5, f2, f26, f6, rdn # perform operation
fmadd.s f5, f2, f26, f6, rmm # perform operation
fmadd.s f5, f2, f26, f6, rne # perform operation
fmadd.s f5, f2, f26, f6, rtz # perform operation
fmadd.s f5, f2, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f26, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xa59523556f58788d # load x3 with value 0xa59523556f58788d
sw x3, 0(x2) # store 0xa59523556f58788d in memory
flw f14, 0(x2) # load 0xa59523556f58788d from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmadd.s f28, f31, f14, f1, dyn # perform operation
fmadd.s f28, f31, f14, f1, rdn # perform operation
fmadd.s f28, f31, f14, f1, rmm # perform operation
fmadd.s f28, f31, f14, f1, rne # perform operation
fmadd.s f28, f31, f14, f1, rtz # perform operation
fmadd.s f28, f31, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f31, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f31, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0xd37e4bb4a7b4aae # load x3 with value 0xd37e4bb4a7b4aae
sw x3, 0(x2) # store 0xd37e4bb4a7b4aae in memory
flw f12, 0(x2) # load 0xd37e4bb4a7b4aae from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fmadd.s f18, f6, f12, f20, dyn # perform operation
fmadd.s f18, f6, f12, f20, rdn # perform operation
fmadd.s f18, f6, f12, f20, rmm # perform operation
fmadd.s f18, f6, f12, f20, rne # perform operation
fmadd.s f18, f6, f12, f20, rtz # perform operation
fmadd.s f18, f6, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0xff586401cae38107 # load x3 with value 0xff586401cae38107
sw x3, 0(x2) # store 0xff586401cae38107 in memory
flw f28, 0(x2) # load 0xff586401cae38107 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmadd.s f23, f19, f28, f25, dyn # perform operation
fmadd.s f23, f19, f28, f25, rdn # perform operation
fmadd.s f23, f19, f28, f25, rmm # perform operation
fmadd.s f23, f19, f28, f25, rne # perform operation
fmadd.s f23, f19, f28, f25, rtz # perform operation
fmadd.s f23, f19, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xea3c59fcef104ac6 # load x3 with value 0xea3c59fcef104ac6
sw x3, 0(x2) # store 0xea3c59fcef104ac6 in memory
flw f26, 0(x2) # load 0xea3c59fcef104ac6 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f9, f29, f26, f20, dyn # perform operation
fmadd.s f9, f29, f26, f20, rdn # perform operation
fmadd.s f9, f29, f26, f20, rmm # perform operation
fmadd.s f9, f29, f26, f20, rne # perform operation
fmadd.s f9, f29, f26, f20, rtz # perform operation
fmadd.s f9, f29, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f29, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f29, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f29, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f29, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f29, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x7861367d392fef5b # load x3 with value 0x7861367d392fef5b
sw x3, 0(x2) # store 0x7861367d392fef5b in memory
flw f24, 0(x2) # load 0x7861367d392fef5b from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fmadd.s f26, f5, f24, f6, dyn # perform operation
fmadd.s f26, f5, f24, f6, rdn # perform operation
fmadd.s f26, f5, f24, f6, rmm # perform operation
fmadd.s f26, f5, f24, f6, rne # perform operation
fmadd.s f26, f5, f24, f6, rtz # perform operation
fmadd.s f26, f5, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x66aa9bd0a9ef3d39 # load x3 with value 0x66aa9bd0a9ef3d39
sw x3, 0(x2) # store 0x66aa9bd0a9ef3d39 in memory
flw f25, 0(x2) # load 0x66aa9bd0a9ef3d39 from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fmadd.s f6, f24, f25, f1, dyn # perform operation
fmadd.s f6, f24, f25, f1, rdn # perform operation
fmadd.s f6, f24, f25, f1, rmm # perform operation
fmadd.s f6, f24, f25, f1, rne # perform operation
fmadd.s f6, f24, f25, f1, rtz # perform operation
fmadd.s f6, f24, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f24, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f24, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xb6cfc7461d52979a # load x3 with value 0xb6cfc7461d52979a
sw x3, 0(x2) # store 0xb6cfc7461d52979a in memory
flw f26, 0(x2) # load 0xb6cfc7461d52979a from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fmadd.s f17, f10, f26, f13, dyn # perform operation
fmadd.s f17, f10, f26, f13, rdn # perform operation
fmadd.s f17, f10, f26, f13, rmm # perform operation
fmadd.s f17, f10, f26, f13, rne # perform operation
fmadd.s f17, f10, f26, f13, rtz # perform operation
fmadd.s f17, f10, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xccbe0e32a604e023 # load x3 with value 0xccbe0e32a604e023
sw x3, 0(x2) # store 0xccbe0e32a604e023 in memory
flw f29, 0(x2) # load 0xccbe0e32a604e023 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmadd.s f19, f5, f29, f8, dyn # perform operation
fmadd.s f19, f5, f29, f8, rdn # perform operation
fmadd.s f19, f5, f29, f8, rmm # perform operation
fmadd.s f19, f5, f29, f8, rne # perform operation
fmadd.s f19, f5, f29, f8, rtz # perform operation
fmadd.s f19, f5, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f5, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x4518c5f1685aa3a1 # load x3 with value 0x4518c5f1685aa3a1
sw x3, 0(x2) # store 0x4518c5f1685aa3a1 in memory
flw f29, 0(x2) # load 0x4518c5f1685aa3a1 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f30, f20, f29, f14, dyn # perform operation
fmadd.s f30, f20, f29, f14, rdn # perform operation
fmadd.s f30, f20, f29, f14, rmm # perform operation
fmadd.s f30, f20, f29, f14, rne # perform operation
fmadd.s f30, f20, f29, f14, rtz # perform operation
fmadd.s f30, f20, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xf6034d7fa7daed9 # load x3 with value 0xf6034d7fa7daed9
sw x3, 0(x2) # store 0xf6034d7fa7daed9 in memory
flw f22, 0(x2) # load 0xf6034d7fa7daed9 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmadd.s f11, f10, f22, f8, dyn # perform operation
fmadd.s f11, f10, f22, f8, rdn # perform operation
fmadd.s f11, f10, f22, f8, rmm # perform operation
fmadd.s f11, f10, f22, f8, rne # perform operation
fmadd.s f11, f10, f22, f8, rtz # perform operation
fmadd.s f11, f10, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f10, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x4fe5577d9c3493ff # load x3 with value 0x4fe5577d9c3493ff
sw x3, 0(x2) # store 0x4fe5577d9c3493ff in memory
flw f14, 0(x2) # load 0x4fe5577d9c3493ff from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmadd.s f7, f13, f14, f27, dyn # perform operation
fmadd.s f7, f13, f14, f27, rdn # perform operation
fmadd.s f7, f13, f14, f27, rmm # perform operation
fmadd.s f7, f13, f14, f27, rne # perform operation
fmadd.s f7, f13, f14, f27, rtz # perform operation
fmadd.s f7, f13, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f14, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xbab74a9d538ac1d5 # load x3 with value 0xbab74a9d538ac1d5
sw x3, 0(x2) # store 0xbab74a9d538ac1d5 in memory
flw f11, 0(x2) # load 0xbab74a9d538ac1d5 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmadd.s f3, f9, f11, f29, dyn # perform operation
fmadd.s f3, f9, f11, f29, rdn # perform operation
fmadd.s f3, f9, f11, f29, rmm # perform operation
fmadd.s f3, f9, f11, f29, rne # perform operation
fmadd.s f3, f9, f11, f29, rtz # perform operation
fmadd.s f3, f9, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f9, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f9, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0xff6c8faba09d9f21 # load x3 with value 0xff6c8faba09d9f21
sw x3, 0(x2) # store 0xff6c8faba09d9f21 in memory
flw f16, 0(x2) # load 0xff6c8faba09d9f21 from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmadd.s f25, f2, f16, f26, dyn # perform operation
fmadd.s f25, f2, f16, f26, rdn # perform operation
fmadd.s f25, f2, f16, f26, rmm # perform operation
fmadd.s f25, f2, f16, f26, rne # perform operation
fmadd.s f25, f2, f16, f26, rtz # perform operation
fmadd.s f25, f2, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x36a86d93cfc374f5 # load x3 with value 0x36a86d93cfc374f5
sw x3, 0(x2) # store 0x36a86d93cfc374f5 in memory
flw f30, 0(x2) # load 0x36a86d93cfc374f5 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f21, f13, f30, f8, dyn # perform operation
fmadd.s f21, f13, f30, f8, rdn # perform operation
fmadd.s f21, f13, f30, f8, rmm # perform operation
fmadd.s f21, f13, f30, f8, rne # perform operation
fmadd.s f21, f13, f30, f8, rtz # perform operation
fmadd.s f21, f13, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x8264daf5c061ead6 # load x3 with value 0x8264daf5c061ead6
sw x3, 0(x2) # store 0x8264daf5c061ead6 in memory
flw f3, 0(x2) # load 0x8264daf5c061ead6 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fmadd.s f8, f21, f3, f29, dyn # perform operation
fmadd.s f8, f21, f3, f29, rdn # perform operation
fmadd.s f8, f21, f3, f29, rmm # perform operation
fmadd.s f8, f21, f3, f29, rne # perform operation
fmadd.s f8, f21, f3, f29, rtz # perform operation
fmadd.s f8, f21, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0xd9144e4f2431ea98 # load x3 with value 0xd9144e4f2431ea98
sw x3, 0(x2) # store 0xd9144e4f2431ea98 in memory
flw f8, 0(x2) # load 0xd9144e4f2431ea98 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f25, f23, f8, f5, dyn # perform operation
fmadd.s f25, f23, f8, f5, rdn # perform operation
fmadd.s f25, f23, f8, f5, rmm # perform operation
fmadd.s f25, f23, f8, f5, rne # perform operation
fmadd.s f25, f23, f8, f5, rtz # perform operation
fmadd.s f25, f23, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x98197e6a0a6cf48b # load x3 with value 0x98197e6a0a6cf48b
sw x3, 0(x2) # store 0x98197e6a0a6cf48b in memory
flw f16, 0(x2) # load 0x98197e6a0a6cf48b from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fmadd.s f22, f18, f16, f25, dyn # perform operation
fmadd.s f22, f18, f16, f25, rdn # perform operation
fmadd.s f22, f18, f16, f25, rmm # perform operation
fmadd.s f22, f18, f16, f25, rne # perform operation
fmadd.s f22, f18, f16, f25, rtz # perform operation
fmadd.s f22, f18, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f16, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xa708e5195f150b3d # load x3 with value 0xa708e5195f150b3d
sw x3, 0(x2) # store 0xa708e5195f150b3d in memory
flw f25, 0(x2) # load 0xa708e5195f150b3d from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
fmadd.s f20, f12, f25, f18, dyn # perform operation
fmadd.s f20, f12, f25, f18, rdn # perform operation
fmadd.s f20, f12, f25, f18, rmm # perform operation
fmadd.s f20, f12, f25, f18, rne # perform operation
fmadd.s f20, f12, f25, f18, rtz # perform operation
fmadd.s f20, f12, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xd1ebe55bb9a50de1 # load x3 with value 0xd1ebe55bb9a50de1
sw x3, 0(x2) # store 0xd1ebe55bb9a50de1 in memory
flw f7, 0(x2) # load 0xd1ebe55bb9a50de1 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmadd.s f9, f31, f7, f16, dyn # perform operation
fmadd.s f9, f31, f7, f16, rdn # perform operation
fmadd.s f9, f31, f7, f16, rmm # perform operation
fmadd.s f9, f31, f7, f16, rne # perform operation
fmadd.s f9, f31, f7, f16, rtz # perform operation
fmadd.s f9, f31, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f7, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x80357b8ee682dd5d # load x3 with value 0x80357b8ee682dd5d
sw x3, 0(x2) # store 0x80357b8ee682dd5d in memory
flw f19, 0(x2) # load 0x80357b8ee682dd5d from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmadd.s f29, f5, f19, f8, dyn # perform operation
fmadd.s f29, f5, f19, f8, rdn # perform operation
fmadd.s f29, f5, f19, f8, rmm # perform operation
fmadd.s f29, f5, f19, f8, rne # perform operation
fmadd.s f29, f5, f19, f8, rtz # perform operation
fmadd.s f29, f5, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x9333ac3793a7f2f9 # load x3 with value 0x9333ac3793a7f2f9
sw x3, 0(x2) # store 0x9333ac3793a7f2f9 in memory
flw f8, 0(x2) # load 0x9333ac3793a7f2f9 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fmadd.s f22, f25, f8, f6, dyn # perform operation
fmadd.s f22, f25, f8, f6, rdn # perform operation
fmadd.s f22, f25, f8, f6, rmm # perform operation
fmadd.s f22, f25, f8, f6, rne # perform operation
fmadd.s f22, f25, f8, f6, rtz # perform operation
fmadd.s f22, f25, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f25, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f25, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xa3d0bd0a4b39a655 # load x3 with value 0xa3d0bd0a4b39a655
sw x3, 0(x2) # store 0xa3d0bd0a4b39a655 in memory
flw f5, 0(x2) # load 0xa3d0bd0a4b39a655 from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmadd.s f24, f30, f5, f3, dyn # perform operation
fmadd.s f24, f30, f5, f3, rdn # perform operation
fmadd.s f24, f30, f5, f3, rmm # perform operation
fmadd.s f24, f30, f5, f3, rne # perform operation
fmadd.s f24, f30, f5, f3, rtz # perform operation
fmadd.s f24, f30, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f30, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f30, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x16647c5a974263eb # load x3 with value 0x16647c5a974263eb
sw x3, 0(x2) # store 0x16647c5a974263eb in memory
flw f31, 0(x2) # load 0x16647c5a974263eb from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmadd.s f13, f14, f31, f25, dyn # perform operation
fmadd.s f13, f14, f31, f25, rdn # perform operation
fmadd.s f13, f14, f31, f25, rmm # perform operation
fmadd.s f13, f14, f31, f25, rne # perform operation
fmadd.s f13, f14, f31, f25, rtz # perform operation
fmadd.s f13, f14, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f31, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x1c823c03821aec48 # load x3 with value 0x1c823c03821aec48
sw x3, 0(x2) # store 0x1c823c03821aec48 in memory
flw f15, 0(x2) # load 0x1c823c03821aec48 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmadd.s f18, f14, f15, f25, dyn # perform operation
fmadd.s f18, f14, f15, f25, rdn # perform operation
fmadd.s f18, f14, f15, f25, rmm # perform operation
fmadd.s f18, f14, f15, f25, rne # perform operation
fmadd.s f18, f14, f15, f25, rtz # perform operation
fmadd.s f18, f14, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f14, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f14, f15, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0xbf7647a10319361e # load x3 with value 0xbf7647a10319361e
sw x3, 0(x2) # store 0xbf7647a10319361e in memory
flw f30, 0(x2) # load 0xbf7647a10319361e from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
fmadd.s f27, f6, f30, f14, dyn # perform operation
fmadd.s f27, f6, f30, f14, rdn # perform operation
fmadd.s f27, f6, f30, f14, rmm # perform operation
fmadd.s f27, f6, f30, f14, rne # perform operation
fmadd.s f27, f6, f30, f14, rtz # perform operation
fmadd.s f27, f6, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f6, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f6, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x40730d6c2b735b9c # load x3 with value 0x40730d6c2b735b9c
sw x3, 0(x2) # store 0x40730d6c2b735b9c in memory
flw f28, 0(x2) # load 0x40730d6c2b735b9c from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f15, f16, f28, f5, dyn # perform operation
fmadd.s f15, f16, f28, f5, rdn # perform operation
fmadd.s f15, f16, f28, f5, rmm # perform operation
fmadd.s f15, f16, f28, f5, rne # perform operation
fmadd.s f15, f16, f28, f5, rtz # perform operation
fmadd.s f15, f16, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f28, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x8c5db6fee7adcd56 # load x3 with value 0x8c5db6fee7adcd56
sw x3, 0(x2) # store 0x8c5db6fee7adcd56 in memory
flw f24, 0(x2) # load 0x8c5db6fee7adcd56 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fmadd.s f27, f26, f24, f5, dyn # perform operation
fmadd.s f27, f26, f24, f5, rdn # perform operation
fmadd.s f27, f26, f24, f5, rmm # perform operation
fmadd.s f27, f26, f24, f5, rne # perform operation
fmadd.s f27, f26, f24, f5, rtz # perform operation
fmadd.s f27, f26, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x7df27df1a04d7941 # load x3 with value 0x7df27df1a04d7941
sw x3, 0(x2) # store 0x7df27df1a04d7941 in memory
flw f18, 0(x2) # load 0x7df27df1a04d7941 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f24, f2, f18, f12, dyn # perform operation
fmadd.s f24, f2, f18, f12, rdn # perform operation
fmadd.s f24, f2, f18, f12, rmm # perform operation
fmadd.s f24, f2, f18, f12, rne # perform operation
fmadd.s f24, f2, f18, f12, rtz # perform operation
fmadd.s f24, f2, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x1d675c466c18c50f # load x3 with value 0x1d675c466c18c50f
sw x3, 0(x2) # store 0x1d675c466c18c50f in memory
flw f28, 0(x2) # load 0x1d675c466c18c50f from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f18, f1, f28, f21, dyn # perform operation
fmadd.s f18, f1, f28, f21, rdn # perform operation
fmadd.s f18, f1, f28, f21, rmm # perform operation
fmadd.s f18, f1, f28, f21, rne # perform operation
fmadd.s f18, f1, f28, f21, rtz # perform operation
fmadd.s f18, f1, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x4108e9fce44d04eb # load x3 with value 0x4108e9fce44d04eb
sw x3, 0(x2) # store 0x4108e9fce44d04eb in memory
flw f13, 0(x2) # load 0x4108e9fce44d04eb from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmadd.s f26, f25, f13, f3, dyn # perform operation
fmadd.s f26, f25, f13, f3, rdn # perform operation
fmadd.s f26, f25, f13, f3, rmm # perform operation
fmadd.s f26, f25, f13, f3, rne # perform operation
fmadd.s f26, f25, f13, f3, rtz # perform operation
fmadd.s f26, f25, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x47363e20b7cdaa0c # load x3 with value 0x47363e20b7cdaa0c
sw x3, 0(x2) # store 0x47363e20b7cdaa0c in memory
flw f14, 0(x2) # load 0x47363e20b7cdaa0c from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmadd.s f9, f26, f14, f7, dyn # perform operation
fmadd.s f9, f26, f14, f7, rdn # perform operation
fmadd.s f9, f26, f14, f7, rmm # perform operation
fmadd.s f9, f26, f14, f7, rne # perform operation
fmadd.s f9, f26, f14, f7, rtz # perform operation
fmadd.s f9, f26, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f14, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xecce346af7fd42b0 # load x3 with value 0xecce346af7fd42b0
sw x3, 0(x2) # store 0xecce346af7fd42b0 in memory
flw f15, 0(x2) # load 0xecce346af7fd42b0 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f29, f17, f15, f3, dyn # perform operation
fmadd.s f29, f17, f15, f3, rdn # perform operation
fmadd.s f29, f17, f15, f3, rmm # perform operation
fmadd.s f29, f17, f15, f3, rne # perform operation
fmadd.s f29, f17, f15, f3, rtz # perform operation
fmadd.s f29, f17, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x9efac33568608f36 # load x3 with value 0x9efac33568608f36
sw x3, 0(x2) # store 0x9efac33568608f36 in memory
flw f28, 0(x2) # load 0x9efac33568608f36 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f12, f19, f28, f1, dyn # perform operation
fmadd.s f12, f19, f28, f1, rdn # perform operation
fmadd.s f12, f19, f28, f1, rmm # perform operation
fmadd.s f12, f19, f28, f1, rne # perform operation
fmadd.s f12, f19, f28, f1, rtz # perform operation
fmadd.s f12, f19, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x49a0fe169ce05ffc # load x3 with value 0x49a0fe169ce05ffc
sw x3, 0(x2) # store 0x49a0fe169ce05ffc in memory
flw f26, 0(x2) # load 0x49a0fe169ce05ffc from memory into f26
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmadd.s f31, f7, f26, f3, dyn # perform operation
fmadd.s f31, f7, f26, f3, rdn # perform operation
fmadd.s f31, f7, f26, f3, rmm # perform operation
fmadd.s f31, f7, f26, f3, rne # perform operation
fmadd.s f31, f7, f26, f3, rtz # perform operation
fmadd.s f31, f7, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f7, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f7, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x2441b930fda133ea # load x3 with value 0x2441b930fda133ea
sw x3, 0(x2) # store 0x2441b930fda133ea in memory
flw f25, 0(x2) # load 0x2441b930fda133ea from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f9, f12, f25, f21, dyn # perform operation
fmadd.s f9, f12, f25, f21, rdn # perform operation
fmadd.s f9, f12, f25, f21, rmm # perform operation
fmadd.s f9, f12, f25, f21, rne # perform operation
fmadd.s f9, f12, f25, f21, rtz # perform operation
fmadd.s f9, f12, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f12, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f12, f25, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xf87035551432bdc8 # load x3 with value 0xf87035551432bdc8
sw x3, 0(x2) # store 0xf87035551432bdc8 in memory
flw f14, 0(x2) # load 0xf87035551432bdc8 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fmadd.s f8, f13, f14, f9, dyn # perform operation
fmadd.s f8, f13, f14, f9, rdn # perform operation
fmadd.s f8, f13, f14, f9, rmm # perform operation
fmadd.s f8, f13, f14, f9, rne # perform operation
fmadd.s f8, f13, f14, f9, rtz # perform operation
fmadd.s f8, f13, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xcd951bc923a8cc3e # load x3 with value 0xcd951bc923a8cc3e
sw x3, 0(x2) # store 0xcd951bc923a8cc3e in memory
flw f31, 0(x2) # load 0xcd951bc923a8cc3e from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fmadd.s f20, f21, f31, f16, dyn # perform operation
fmadd.s f20, f21, f31, f16, rdn # perform operation
fmadd.s f20, f21, f31, f16, rmm # perform operation
fmadd.s f20, f21, f31, f16, rne # perform operation
fmadd.s f20, f21, f31, f16, rtz # perform operation
fmadd.s f20, f21, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xd7edaabeb0e87898 # load x3 with value 0xd7edaabeb0e87898
sw x3, 0(x2) # store 0xd7edaabeb0e87898 in memory
flw f19, 0(x2) # load 0xd7edaabeb0e87898 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmadd.s f6, f21, f19, f16, dyn # perform operation
fmadd.s f6, f21, f19, f16, rdn # perform operation
fmadd.s f6, f21, f19, f16, rmm # perform operation
fmadd.s f6, f21, f19, f16, rne # perform operation
fmadd.s f6, f21, f19, f16, rtz # perform operation
fmadd.s f6, f21, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f19, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0xf6a843ca8af34ec4 # load x3 with value 0xf6a843ca8af34ec4
sw x3, 0(x2) # store 0xf6a843ca8af34ec4 in memory
flw f14, 0(x2) # load 0xf6a843ca8af34ec4 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fmadd.s f31, f3, f14, f15, dyn # perform operation
fmadd.s f31, f3, f14, f15, rdn # perform operation
fmadd.s f31, f3, f14, f15, rmm # perform operation
fmadd.s f31, f3, f14, f15, rne # perform operation
fmadd.s f31, f3, f14, f15, rtz # perform operation
fmadd.s f31, f3, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0x9ca77b3f6d037b68 # load x3 with value 0x9ca77b3f6d037b68
sw x3, 0(x2) # store 0x9ca77b3f6d037b68 in memory
flw f5, 0(x2) # load 0x9ca77b3f6d037b68 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmadd.s f29, f30, f5, f10, dyn # perform operation
fmadd.s f29, f30, f5, f10, rdn # perform operation
fmadd.s f29, f30, f5, f10, rmm # perform operation
fmadd.s f29, f30, f5, f10, rne # perform operation
fmadd.s f29, f30, f5, f10, rtz # perform operation
fmadd.s f29, f30, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f30, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x66ab769f0149acaf # load x3 with value 0x66ab769f0149acaf
sw x3, 0(x2) # store 0x66ab769f0149acaf in memory
flw f1, 0(x2) # load 0x66ab769f0149acaf from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fmadd.s f6, f16, f1, f31, dyn # perform operation
fmadd.s f6, f16, f1, f31, rdn # perform operation
fmadd.s f6, f16, f1, f31, rmm # perform operation
fmadd.s f6, f16, f1, f31, rne # perform operation
fmadd.s f6, f16, f1, f31, rtz # perform operation
fmadd.s f6, f16, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x915a449f6af43c6f # load x3 with value 0x915a449f6af43c6f
sw x3, 0(x2) # store 0x915a449f6af43c6f in memory
flw f19, 0(x2) # load 0x915a449f6af43c6f from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmadd.s f29, f18, f19, f25, dyn # perform operation
fmadd.s f29, f18, f19, f25, rdn # perform operation
fmadd.s f29, f18, f19, f25, rmm # perform operation
fmadd.s f29, f18, f19, f25, rne # perform operation
fmadd.s f29, f18, f19, f25, rtz # perform operation
fmadd.s f29, f18, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f19, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xafc30ef7aebd65e3 # load x3 with value 0xafc30ef7aebd65e3
sw x3, 0(x2) # store 0xafc30ef7aebd65e3 in memory
flw f7, 0(x2) # load 0xafc30ef7aebd65e3 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmadd.s f9, f24, f7, f21, dyn # perform operation
fmadd.s f9, f24, f7, f21, rdn # perform operation
fmadd.s f9, f24, f7, f21, rmm # perform operation
fmadd.s f9, f24, f7, f21, rne # perform operation
fmadd.s f9, f24, f7, f21, rtz # perform operation
fmadd.s f9, f24, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xa509a0031318304a # load x3 with value 0xa509a0031318304a
sw x3, 0(x2) # store 0xa509a0031318304a in memory
flw f8, 0(x2) # load 0xa509a0031318304a from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fmadd.s f19, f31, f8, f1, dyn # perform operation
fmadd.s f19, f31, f8, f1, rdn # perform operation
fmadd.s f19, f31, f8, f1, rmm # perform operation
fmadd.s f19, f31, f8, f1, rne # perform operation
fmadd.s f19, f31, f8, f1, rtz # perform operation
fmadd.s f19, f31, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f31, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f31, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x624908283d7d01b4 # load x3 with value 0x624908283d7d01b4
sw x3, 0(x2) # store 0x624908283d7d01b4 in memory
flw f1, 0(x2) # load 0x624908283d7d01b4 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f29, f23, f1, f12, dyn # perform operation
fmadd.s f29, f23, f1, f12, rdn # perform operation
fmadd.s f29, f23, f1, f12, rmm # perform operation
fmadd.s f29, f23, f1, f12, rne # perform operation
fmadd.s f29, f23, f1, f12, rtz # perform operation
fmadd.s f29, f23, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f23, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x5b76a64a3c3cfc4 # load x3 with value 0x5b76a64a3c3cfc4
sw x3, 0(x2) # store 0x5b76a64a3c3cfc4 in memory
flw f12, 0(x2) # load 0x5b76a64a3c3cfc4 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fmadd.s f24, f7, f12, f27, dyn # perform operation
fmadd.s f24, f7, f12, f27, rdn # perform operation
fmadd.s f24, f7, f12, f27, rmm # perform operation
fmadd.s f24, f7, f12, f27, rne # perform operation
fmadd.s f24, f7, f12, f27, rtz # perform operation
fmadd.s f24, f7, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xf5f8fa1a44672e4c # load x3 with value 0xf5f8fa1a44672e4c
sw x3, 0(x2) # store 0xf5f8fa1a44672e4c in memory
flw f23, 0(x2) # load 0xf5f8fa1a44672e4c from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f27, f10, f23, f5, dyn # perform operation
fmadd.s f27, f10, f23, f5, rdn # perform operation
fmadd.s f27, f10, f23, f5, rmm # perform operation
fmadd.s f27, f10, f23, f5, rne # perform operation
fmadd.s f27, f10, f23, f5, rtz # perform operation
fmadd.s f27, f10, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x6afa9f437d411647 # load x3 with value 0x6afa9f437d411647
sw x3, 0(x2) # store 0x6afa9f437d411647 in memory
flw f1, 0(x2) # load 0x6afa9f437d411647 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmadd.s f16, f12, f1, f20, dyn # perform operation
fmadd.s f16, f12, f1, f20, rdn # perform operation
fmadd.s f16, f12, f1, f20, rmm # perform operation
fmadd.s f16, f12, f1, f20, rne # perform operation
fmadd.s f16, f12, f1, f20, rtz # perform operation
fmadd.s f16, f12, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xc3343344a7f37aac # load x3 with value 0xc3343344a7f37aac
sw x3, 0(x2) # store 0xc3343344a7f37aac in memory
flw f8, 0(x2) # load 0xc3343344a7f37aac from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fmadd.s f5, f13, f8, f1, dyn # perform operation
fmadd.s f5, f13, f8, f1, rdn # perform operation
fmadd.s f5, f13, f8, f1, rmm # perform operation
fmadd.s f5, f13, f8, f1, rne # perform operation
fmadd.s f5, f13, f8, f1, rtz # perform operation
fmadd.s f5, f13, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xfc1a2c2699ee22e7 # load x3 with value 0xfc1a2c2699ee22e7
sw x3, 0(x2) # store 0xfc1a2c2699ee22e7 in memory
flw f12, 0(x2) # load 0xfc1a2c2699ee22e7 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fmadd.s f23, f5, f12, f26, dyn # perform operation
fmadd.s f23, f5, f12, f26, rdn # perform operation
fmadd.s f23, f5, f12, f26, rmm # perform operation
fmadd.s f23, f5, f12, f26, rne # perform operation
fmadd.s f23, f5, f12, f26, rtz # perform operation
fmadd.s f23, f5, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x8fc4c15eacaf3e83 # load x3 with value 0x8fc4c15eacaf3e83
sw x3, 0(x2) # store 0x8fc4c15eacaf3e83 in memory
flw f21, 0(x2) # load 0x8fc4c15eacaf3e83 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmadd.s f16, f22, f21, f18, dyn # perform operation
fmadd.s f16, f22, f21, f18, rdn # perform operation
fmadd.s f16, f22, f21, f18, rmm # perform operation
fmadd.s f16, f22, f21, f18, rne # perform operation
fmadd.s f16, f22, f21, f18, rtz # perform operation
fmadd.s f16, f22, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f21, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x226dbab647e2309b # load x3 with value 0x226dbab647e2309b
sw x3, 0(x2) # store 0x226dbab647e2309b in memory
flw f24, 0(x2) # load 0x226dbab647e2309b from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmadd.s f23, f8, f24, f16, dyn # perform operation
fmadd.s f23, f8, f24, f16, rdn # perform operation
fmadd.s f23, f8, f24, f16, rmm # perform operation
fmadd.s f23, f8, f24, f16, rne # perform operation
fmadd.s f23, f8, f24, f16, rtz # perform operation
fmadd.s f23, f8, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f8, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f8, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0xeffe859a1f9959df # load x3 with value 0xeffe859a1f9959df
sw x3, 0(x2) # store 0xeffe859a1f9959df in memory
flw f21, 0(x2) # load 0xeffe859a1f9959df from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fmadd.s f29, f15, f21, f8, dyn # perform operation
fmadd.s f29, f15, f21, f8, rdn # perform operation
fmadd.s f29, f15, f21, f8, rmm # perform operation
fmadd.s f29, f15, f21, f8, rne # perform operation
fmadd.s f29, f15, f21, f8, rtz # perform operation
fmadd.s f29, f15, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f15, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f15, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xab1f1dec5045dbde # load x3 with value 0xab1f1dec5045dbde
sw x3, 0(x2) # store 0xab1f1dec5045dbde in memory
flw f24, 0(x2) # load 0xab1f1dec5045dbde from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f6, f2, f24, f3, dyn # perform operation
fmadd.s f6, f2, f24, f3, rdn # perform operation
fmadd.s f6, f2, f24, f3, rmm # perform operation
fmadd.s f6, f2, f24, f3, rne # perform operation
fmadd.s f6, f2, f24, f3, rtz # perform operation
fmadd.s f6, f2, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f2, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f2, f24, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xc57299b8cbee2b0c # load x3 with value 0xc57299b8cbee2b0c
sw x3, 0(x2) # store 0xc57299b8cbee2b0c in memory
flw f10, 0(x2) # load 0xc57299b8cbee2b0c from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmadd.s f9, f13, f10, f1, dyn # perform operation
fmadd.s f9, f13, f10, f1, rdn # perform operation
fmadd.s f9, f13, f10, f1, rmm # perform operation
fmadd.s f9, f13, f10, f1, rne # perform operation
fmadd.s f9, f13, f10, f1, rtz # perform operation
fmadd.s f9, f13, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x9f7cbcf1293e8ce7 # load x3 with value 0x9f7cbcf1293e8ce7
sw x3, 0(x2) # store 0x9f7cbcf1293e8ce7 in memory
flw f17, 0(x2) # load 0x9f7cbcf1293e8ce7 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmadd.s f27, f24, f17, f10, dyn # perform operation
fmadd.s f27, f24, f17, f10, rdn # perform operation
fmadd.s f27, f24, f17, f10, rmm # perform operation
fmadd.s f27, f24, f17, f10, rne # perform operation
fmadd.s f27, f24, f17, f10, rtz # perform operation
fmadd.s f27, f24, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f17, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xa8068b70ba87de8e # load x3 with value 0xa8068b70ba87de8e
sw x3, 0(x2) # store 0xa8068b70ba87de8e in memory
flw f11, 0(x2) # load 0xa8068b70ba87de8e from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmadd.s f29, f30, f11, f19, dyn # perform operation
fmadd.s f29, f30, f11, f19, rdn # perform operation
fmadd.s f29, f30, f11, f19, rmm # perform operation
fmadd.s f29, f30, f11, f19, rne # perform operation
fmadd.s f29, f30, f11, f19, rtz # perform operation
fmadd.s f29, f30, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f30, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f30, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x685d363a3d841f84 # load x3 with value 0x685d363a3d841f84
sw x3, 0(x2) # store 0x685d363a3d841f84 in memory
flw f19, 0(x2) # load 0x685d363a3d841f84 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmadd.s f15, f30, f19, f17, dyn # perform operation
fmadd.s f15, f30, f19, f17, rdn # perform operation
fmadd.s f15, f30, f19, f17, rmm # perform operation
fmadd.s f15, f30, f19, f17, rne # perform operation
fmadd.s f15, f30, f19, f17, rtz # perform operation
fmadd.s f15, f30, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x99a4726755d6c27f # load x3 with value 0x99a4726755d6c27f
sw x3, 0(x2) # store 0x99a4726755d6c27f in memory
flw f1, 0(x2) # load 0x99a4726755d6c27f from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmadd.s f24, f22, f1, f3, dyn # perform operation
fmadd.s f24, f22, f1, f3, rdn # perform operation
fmadd.s f24, f22, f1, f3, rmm # perform operation
fmadd.s f24, f22, f1, f3, rne # perform operation
fmadd.s f24, f22, f1, f3, rtz # perform operation
fmadd.s f24, f22, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xb00c2f2f2ed650f7 # load x3 with value 0xb00c2f2f2ed650f7
sw x3, 0(x2) # store 0xb00c2f2f2ed650f7 in memory
flw f5, 0(x2) # load 0xb00c2f2f2ed650f7 from memory into f5
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fmadd.s f11, f22, f5, f18, dyn # perform operation
fmadd.s f11, f22, f5, f18, rdn # perform operation
fmadd.s f11, f22, f5, f18, rmm # perform operation
fmadd.s f11, f22, f5, f18, rne # perform operation
fmadd.s f11, f22, f5, f18, rtz # perform operation
fmadd.s f11, f22, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f22, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f22, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x74dba87b1246a803 # load x3 with value 0x74dba87b1246a803
sw x3, 0(x2) # store 0x74dba87b1246a803 in memory
flw f21, 0(x2) # load 0x74dba87b1246a803 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f27, f18, f21, f22, dyn # perform operation
fmadd.s f27, f18, f21, f22, rdn # perform operation
fmadd.s f27, f18, f21, f22, rmm # perform operation
fmadd.s f27, f18, f21, f22, rne # perform operation
fmadd.s f27, f18, f21, f22, rtz # perform operation
fmadd.s f27, f18, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0x30b9502e9b21acb9 # load x3 with value 0x30b9502e9b21acb9
sw x3, 0(x2) # store 0x30b9502e9b21acb9 in memory
flw f31, 0(x2) # load 0x30b9502e9b21acb9 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmadd.s f29, f25, f31, f28, dyn # perform operation
fmadd.s f29, f25, f31, f28, rdn # perform operation
fmadd.s f29, f25, f31, f28, rmm # perform operation
fmadd.s f29, f25, f31, f28, rne # perform operation
fmadd.s f29, f25, f31, f28, rtz # perform operation
fmadd.s f29, f25, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f25, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f25, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x74d6e680afb0eb25 # load x3 with value 0x74d6e680afb0eb25
sw x3, 0(x2) # store 0x74d6e680afb0eb25 in memory
flw f6, 0(x2) # load 0x74d6e680afb0eb25 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmadd.s f27, f14, f6, f19, dyn # perform operation
fmadd.s f27, f14, f6, f19, rdn # perform operation
fmadd.s f27, f14, f6, f19, rmm # perform operation
fmadd.s f27, f14, f6, f19, rne # perform operation
fmadd.s f27, f14, f6, f19, rtz # perform operation
fmadd.s f27, f14, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xd8fd4d213af6f8fc # load x3 with value 0xd8fd4d213af6f8fc
sw x3, 0(x2) # store 0xd8fd4d213af6f8fc in memory
flw f6, 0(x2) # load 0xd8fd4d213af6f8fc from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmadd.s f5, f23, f6, f10, dyn # perform operation
fmadd.s f5, f23, f6, f10, rdn # perform operation
fmadd.s f5, f23, f6, f10, rmm # perform operation
fmadd.s f5, f23, f6, f10, rne # perform operation
fmadd.s f5, f23, f6, f10, rtz # perform operation
fmadd.s f5, f23, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f23, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f23, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x792f9ea7776b2f63 # load x3 with value 0x792f9ea7776b2f63
sw x3, 0(x2) # store 0x792f9ea7776b2f63 in memory
flw f23, 0(x2) # load 0x792f9ea7776b2f63 from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmadd.s f12, f15, f23, f30, dyn # perform operation
fmadd.s f12, f15, f23, f30, rdn # perform operation
fmadd.s f12, f15, f23, f30, rmm # perform operation
fmadd.s f12, f15, f23, f30, rne # perform operation
fmadd.s f12, f15, f23, f30, rtz # perform operation
fmadd.s f12, f15, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0xe2a0204f911388be # load x3 with value 0xe2a0204f911388be
sw x3, 0(x2) # store 0xe2a0204f911388be in memory
flw f11, 0(x2) # load 0xe2a0204f911388be from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmadd.s f1, f6, f11, f13, dyn # perform operation
fmadd.s f1, f6, f11, f13, rdn # perform operation
fmadd.s f1, f6, f11, f13, rmm # perform operation
fmadd.s f1, f6, f11, f13, rne # perform operation
fmadd.s f1, f6, f11, f13, rtz # perform operation
fmadd.s f1, f6, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f6, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f6, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f6, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f6, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f6, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x51d77cb65dd75859 # load x3 with value 0x51d77cb65dd75859
sw x3, 0(x2) # store 0x51d77cb65dd75859 in memory
flw f17, 0(x2) # load 0x51d77cb65dd75859 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmadd.s f10, f22, f17, f23, dyn # perform operation
fmadd.s f10, f22, f17, f23, rdn # perform operation
fmadd.s f10, f22, f17, f23, rmm # perform operation
fmadd.s f10, f22, f17, f23, rne # perform operation
fmadd.s f10, f22, f17, f23, rtz # perform operation
fmadd.s f10, f22, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xea219ef15c956ea2 # load x3 with value 0xea219ef15c956ea2
sw x3, 0(x2) # store 0xea219ef15c956ea2 in memory
flw f14, 0(x2) # load 0xea219ef15c956ea2 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fmadd.s f10, f13, f14, f16, dyn # perform operation
fmadd.s f10, f13, f14, f16, rdn # perform operation
fmadd.s f10, f13, f14, f16, rmm # perform operation
fmadd.s f10, f13, f14, f16, rne # perform operation
fmadd.s f10, f13, f14, f16, rtz # perform operation
fmadd.s f10, f13, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x8191f54a83c878e8 # load x3 with value 0x8191f54a83c878e8
sw x3, 0(x2) # store 0x8191f54a83c878e8 in memory
flw f19, 0(x2) # load 0x8191f54a83c878e8 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmadd.s f13, f14, f19, f26, dyn # perform operation
fmadd.s f13, f14, f19, f26, rdn # perform operation
fmadd.s f13, f14, f19, f26, rmm # perform operation
fmadd.s f13, f14, f19, f26, rne # perform operation
fmadd.s f13, f14, f19, f26, rtz # perform operation
fmadd.s f13, f14, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x9816aee6503595e0 # load x3 with value 0x9816aee6503595e0
sw x3, 0(x2) # store 0x9816aee6503595e0 in memory
flw f19, 0(x2) # load 0x9816aee6503595e0 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmadd.s f1, f8, f19, f28, dyn # perform operation
fmadd.s f1, f8, f19, f28, rdn # perform operation
fmadd.s f1, f8, f19, f28, rmm # perform operation
fmadd.s f1, f8, f19, f28, rne # perform operation
fmadd.s f1, f8, f19, f28, rtz # perform operation
fmadd.s f1, f8, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f8, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f8, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f8, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f8, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f8, f19, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xa56eeb235bbce384 # load x3 with value 0xa56eeb235bbce384
sw x3, 0(x2) # store 0xa56eeb235bbce384 in memory
flw f5, 0(x2) # load 0xa56eeb235bbce384 from memory into f5
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmadd.s f30, f24, f5, f6, dyn # perform operation
fmadd.s f30, f24, f5, f6, rdn # perform operation
fmadd.s f30, f24, f5, f6, rmm # perform operation
fmadd.s f30, f24, f5, f6, rne # perform operation
fmadd.s f30, f24, f5, f6, rtz # perform operation
fmadd.s f30, f24, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f24, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f24, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f24, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f24, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f24, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x96c0508bc4c048c9 # load x3 with value 0x96c0508bc4c048c9
sw x3, 0(x2) # store 0x96c0508bc4c048c9 in memory
flw f1, 0(x2) # load 0x96c0508bc4c048c9 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f30, f12, f1, f2, dyn # perform operation
fmadd.s f30, f12, f1, f2, rdn # perform operation
fmadd.s f30, f12, f1, f2, rmm # perform operation
fmadd.s f30, f12, f1, f2, rne # perform operation
fmadd.s f30, f12, f1, f2, rtz # perform operation
fmadd.s f30, f12, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x5dde7031525e37b # load x3 with value 0x5dde7031525e37b
sw x3, 0(x2) # store 0x5dde7031525e37b in memory
flw f8, 0(x2) # load 0x5dde7031525e37b from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmadd.s f18, f28, f8, f15, dyn # perform operation
fmadd.s f18, f28, f8, f15, rdn # perform operation
fmadd.s f18, f28, f8, f15, rmm # perform operation
fmadd.s f18, f28, f8, f15, rne # perform operation
fmadd.s f18, f28, f8, f15, rtz # perform operation
fmadd.s f18, f28, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x4089885e38306a88 # load x3 with value 0x4089885e38306a88
sw x3, 0(x2) # store 0x4089885e38306a88 in memory
flw f8, 0(x2) # load 0x4089885e38306a88 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fmadd.s f5, f10, f8, f16, dyn # perform operation
fmadd.s f5, f10, f8, f16, rdn # perform operation
fmadd.s f5, f10, f8, f16, rmm # perform operation
fmadd.s f5, f10, f8, f16, rne # perform operation
fmadd.s f5, f10, f8, f16, rtz # perform operation
fmadd.s f5, f10, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0xff5088e1ce39070c # load x3 with value 0xff5088e1ce39070c
sw x3, 0(x2) # store 0xff5088e1ce39070c in memory
flw f26, 0(x2) # load 0xff5088e1ce39070c from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmadd.s f21, f17, f26, f10, dyn # perform operation
fmadd.s f21, f17, f26, f10, rdn # perform operation
fmadd.s f21, f17, f26, f10, rmm # perform operation
fmadd.s f21, f17, f26, f10, rne # perform operation
fmadd.s f21, f17, f26, f10, rtz # perform operation
fmadd.s f21, f17, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f17, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f17, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xebc71e3b38e692e0 # load x3 with value 0xebc71e3b38e692e0
sw x3, 0(x2) # store 0xebc71e3b38e692e0 in memory
flw f3, 0(x2) # load 0xebc71e3b38e692e0 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f20, f14, f3, f18, dyn # perform operation
fmadd.s f20, f14, f3, f18, rdn # perform operation
fmadd.s f20, f14, f3, f18, rmm # perform operation
fmadd.s f20, f14, f3, f18, rne # perform operation
fmadd.s f20, f14, f3, f18, rtz # perform operation
fmadd.s f20, f14, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f14, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f14, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f14, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f14, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f14, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x77d3a116414ab293 # load x3 with value 0x77d3a116414ab293
sw x3, 0(x2) # store 0x77d3a116414ab293 in memory
flw f8, 0(x2) # load 0x77d3a116414ab293 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fmadd.s f20, f1, f8, f18, dyn # perform operation
fmadd.s f20, f1, f8, f18, rdn # perform operation
fmadd.s f20, f1, f8, f18, rmm # perform operation
fmadd.s f20, f1, f8, f18, rne # perform operation
fmadd.s f20, f1, f8, f18, rtz # perform operation
fmadd.s f20, f1, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0xf9e4b0a7b0a46f43 # load x3 with value 0xf9e4b0a7b0a46f43
sw x3, 0(x2) # store 0xf9e4b0a7b0a46f43 in memory
flw f25, 0(x2) # load 0xf9e4b0a7b0a46f43 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fmadd.s f28, f3, f25, f12, dyn # perform operation
fmadd.s f28, f3, f25, f12, rdn # perform operation
fmadd.s f28, f3, f25, f12, rmm # perform operation
fmadd.s f28, f3, f25, f12, rne # perform operation
fmadd.s f28, f3, f25, f12, rtz # perform operation
fmadd.s f28, f3, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f25, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x699969e2c967cddf # load x3 with value 0x699969e2c967cddf
sw x3, 0(x2) # store 0x699969e2c967cddf in memory
flw f6, 0(x2) # load 0x699969e2c967cddf from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmadd.s f5, f2, f6, f18, dyn # perform operation
fmadd.s f5, f2, f6, f18, rdn # perform operation
fmadd.s f5, f2, f6, f18, rmm # perform operation
fmadd.s f5, f2, f6, f18, rne # perform operation
fmadd.s f5, f2, f6, f18, rtz # perform operation
fmadd.s f5, f2, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xbdb2b96c9fea599 # load x3 with value 0xbdb2b96c9fea599
sw x3, 0(x2) # store 0xbdb2b96c9fea599 in memory
flw f16, 0(x2) # load 0xbdb2b96c9fea599 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmadd.s f27, f31, f16, f17, dyn # perform operation
fmadd.s f27, f31, f16, f17, rdn # perform operation
fmadd.s f27, f31, f16, f17, rmm # perform operation
fmadd.s f27, f31, f16, f17, rne # perform operation
fmadd.s f27, f31, f16, f17, rtz # perform operation
fmadd.s f27, f31, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f16, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x51e3dabdd140a8da # load x3 with value 0x51e3dabdd140a8da
sw x3, 0(x2) # store 0x51e3dabdd140a8da in memory
flw f15, 0(x2) # load 0x51e3dabdd140a8da from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmadd.s f19, f23, f15, f28, dyn # perform operation
fmadd.s f19, f23, f15, f28, rdn # perform operation
fmadd.s f19, f23, f15, f28, rmm # perform operation
fmadd.s f19, f23, f15, f28, rne # perform operation
fmadd.s f19, f23, f15, f28, rtz # perform operation
fmadd.s f19, f23, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f23, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x70ff01f458865e27 # load x3 with value 0x70ff01f458865e27
sw x3, 0(x2) # store 0x70ff01f458865e27 in memory
flw f18, 0(x2) # load 0x70ff01f458865e27 from memory into f18
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fmadd.s f1, f27, f18, f26, dyn # perform operation
fmadd.s f1, f27, f18, f26, rdn # perform operation
fmadd.s f1, f27, f18, f26, rmm # perform operation
fmadd.s f1, f27, f18, f26, rne # perform operation
fmadd.s f1, f27, f18, f26, rtz # perform operation
fmadd.s f1, f27, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x2c133e4599cc7a52 # load x3 with value 0x2c133e4599cc7a52
sw x3, 0(x2) # store 0x2c133e4599cc7a52 in memory
flw f2, 0(x2) # load 0x2c133e4599cc7a52 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f14, f23, f2, f19, dyn # perform operation
fmadd.s f14, f23, f2, f19, rdn # perform operation
fmadd.s f14, f23, f2, f19, rmm # perform operation
fmadd.s f14, f23, f2, f19, rne # perform operation
fmadd.s f14, f23, f2, f19, rtz # perform operation
fmadd.s f14, f23, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f23, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f23, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f23, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f23, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f23, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xd6ec3fb2cc360e42 # load x3 with value 0xd6ec3fb2cc360e42
sw x3, 0(x2) # store 0xd6ec3fb2cc360e42 in memory
flw f3, 0(x2) # load 0xd6ec3fb2cc360e42 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fmadd.s f19, f8, f3, f9, dyn # perform operation
fmadd.s f19, f8, f3, f9, rdn # perform operation
fmadd.s f19, f8, f3, f9, rmm # perform operation
fmadd.s f19, f8, f3, f9, rne # perform operation
fmadd.s f19, f8, f3, f9, rtz # perform operation
fmadd.s f19, f8, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xf12763a1b3c588a2 # load x3 with value 0xf12763a1b3c588a2
sw x3, 0(x2) # store 0xf12763a1b3c588a2 in memory
flw f11, 0(x2) # load 0xf12763a1b3c588a2 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmadd.s f25, f8, f11, f19, dyn # perform operation
fmadd.s f25, f8, f11, f19, rdn # perform operation
fmadd.s f25, f8, f11, f19, rmm # perform operation
fmadd.s f25, f8, f11, f19, rne # perform operation
fmadd.s f25, f8, f11, f19, rtz # perform operation
fmadd.s f25, f8, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f8, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x33613a202a480353 # load x3 with value 0x33613a202a480353
sw x3, 0(x2) # store 0x33613a202a480353 in memory
flw f10, 0(x2) # load 0x33613a202a480353 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmadd.s f15, f11, f10, f23, dyn # perform operation
fmadd.s f15, f11, f10, f23, rdn # perform operation
fmadd.s f15, f11, f10, f23, rmm # perform operation
fmadd.s f15, f11, f10, f23, rne # perform operation
fmadd.s f15, f11, f10, f23, rtz # perform operation
fmadd.s f15, f11, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f11, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f11, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f11, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f11, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f11, f10, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xad8380248263c014 # load x3 with value 0xad8380248263c014
sw x3, 0(x2) # store 0xad8380248263c014 in memory
flw f25, 0(x2) # load 0xad8380248263c014 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmadd.s f27, f22, f25, f8, dyn # perform operation
fmadd.s f27, f22, f25, f8, rdn # perform operation
fmadd.s f27, f22, f25, f8, rmm # perform operation
fmadd.s f27, f22, f25, f8, rne # perform operation
fmadd.s f27, f22, f25, f8, rtz # perform operation
fmadd.s f27, f22, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f22, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f22, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xfc91efc8c738e150 # load x3 with value 0xfc91efc8c738e150
sw x3, 0(x2) # store 0xfc91efc8c738e150 in memory
flw f22, 0(x2) # load 0xfc91efc8c738e150 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f7, f11, f22, f3, dyn # perform operation
fmadd.s f7, f11, f22, f3, rdn # perform operation
fmadd.s f7, f11, f22, f3, rmm # perform operation
fmadd.s f7, f11, f22, f3, rne # perform operation
fmadd.s f7, f11, f22, f3, rtz # perform operation
fmadd.s f7, f11, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x89a046120938d2b9 # load x3 with value 0x89a046120938d2b9
sw x3, 0(x2) # store 0x89a046120938d2b9 in memory
flw f7, 0(x2) # load 0x89a046120938d2b9 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f14, f13, f7, f18, dyn # perform operation
fmadd.s f14, f13, f7, f18, rdn # perform operation
fmadd.s f14, f13, f7, f18, rmm # perform operation
fmadd.s f14, f13, f7, f18, rne # perform operation
fmadd.s f14, f13, f7, f18, rtz # perform operation
fmadd.s f14, f13, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x1ba2a1ce618eb88 # load x3 with value 0x1ba2a1ce618eb88
sw x3, 0(x2) # store 0x1ba2a1ce618eb88 in memory
flw f13, 0(x2) # load 0x1ba2a1ce618eb88 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmadd.s f6, f24, f13, f17, dyn # perform operation
fmadd.s f6, f24, f13, f17, rdn # perform operation
fmadd.s f6, f24, f13, f17, rmm # perform operation
fmadd.s f6, f24, f13, f17, rne # perform operation
fmadd.s f6, f24, f13, f17, rtz # perform operation
fmadd.s f6, f24, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f24, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f24, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f24, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f24, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f24, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xdc42da99626dfd85 # load x3 with value 0xdc42da99626dfd85
sw x3, 0(x2) # store 0xdc42da99626dfd85 in memory
flw f22, 0(x2) # load 0xdc42da99626dfd85 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f23, f19, f22, f5, dyn # perform operation
fmadd.s f23, f19, f22, f5, rdn # perform operation
fmadd.s f23, f19, f22, f5, rmm # perform operation
fmadd.s f23, f19, f22, f5, rne # perform operation
fmadd.s f23, f19, f22, f5, rtz # perform operation
fmadd.s f23, f19, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0xa51d65848f061693 # load x3 with value 0xa51d65848f061693
sw x3, 0(x2) # store 0xa51d65848f061693 in memory
flw f31, 0(x2) # load 0xa51d65848f061693 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fmadd.s f14, f9, f31, f24, dyn # perform operation
fmadd.s f14, f9, f31, f24, rdn # perform operation
fmadd.s f14, f9, f31, f24, rmm # perform operation
fmadd.s f14, f9, f31, f24, rne # perform operation
fmadd.s f14, f9, f31, f24, rtz # perform operation
fmadd.s f14, f9, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x2726af39928369ee # load x3 with value 0x2726af39928369ee
sw x3, 0(x2) # store 0x2726af39928369ee in memory
flw f11, 0(x2) # load 0x2726af39928369ee from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmadd.s f3, f20, f11, f30, dyn # perform operation
fmadd.s f3, f20, f11, f30, rdn # perform operation
fmadd.s f3, f20, f11, f30, rmm # perform operation
fmadd.s f3, f20, f11, f30, rne # perform operation
fmadd.s f3, f20, f11, f30, rtz # perform operation
fmadd.s f3, f20, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x18a9020f3bc04f49 # load x3 with value 0x18a9020f3bc04f49
sw x3, 0(x2) # store 0x18a9020f3bc04f49 in memory
flw f19, 0(x2) # load 0x18a9020f3bc04f49 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f29, f27, f19, f5, dyn # perform operation
fmadd.s f29, f27, f19, f5, rdn # perform operation
fmadd.s f29, f27, f19, f5, rmm # perform operation
fmadd.s f29, f27, f19, f5, rne # perform operation
fmadd.s f29, f27, f19, f5, rtz # perform operation
fmadd.s f29, f27, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x6bafe04d4aa697c2 # load x3 with value 0x6bafe04d4aa697c2
sw x3, 0(x2) # store 0x6bafe04d4aa697c2 in memory
flw f27, 0(x2) # load 0x6bafe04d4aa697c2 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
fmadd.s f18, f20, f27, f24, dyn # perform operation
fmadd.s f18, f20, f27, f24, rdn # perform operation
fmadd.s f18, f20, f27, f24, rmm # perform operation
fmadd.s f18, f20, f27, f24, rne # perform operation
fmadd.s f18, f20, f27, f24, rtz # perform operation
fmadd.s f18, f20, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f27, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x722dcaa0b07f00ea # load x3 with value 0x722dcaa0b07f00ea
sw x3, 0(x2) # store 0x722dcaa0b07f00ea in memory
flw f11, 0(x2) # load 0x722dcaa0b07f00ea from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fmadd.s f1, f12, f11, f2, dyn # perform operation
fmadd.s f1, f12, f11, f2, rdn # perform operation
fmadd.s f1, f12, f11, f2, rmm # perform operation
fmadd.s f1, f12, f11, f2, rne # perform operation
fmadd.s f1, f12, f11, f2, rtz # perform operation
fmadd.s f1, f12, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f12, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f12, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f12, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f12, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f12, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x8c49a3e51263dad6 # load x3 with value 0x8c49a3e51263dad6
sw x3, 0(x2) # store 0x8c49a3e51263dad6 in memory
flw f30, 0(x2) # load 0x8c49a3e51263dad6 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmadd.s f17, f28, f30, f24, dyn # perform operation
fmadd.s f17, f28, f30, f24, rdn # perform operation
fmadd.s f17, f28, f30, f24, rmm # perform operation
fmadd.s f17, f28, f30, f24, rne # perform operation
fmadd.s f17, f28, f30, f24, rtz # perform operation
fmadd.s f17, f28, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f30, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xa5facaf4e087adb4 # load x3 with value 0xa5facaf4e087adb4
sw x3, 0(x2) # store 0xa5facaf4e087adb4 in memory
flw f30, 0(x2) # load 0xa5facaf4e087adb4 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f22, f20, f30, f26, dyn # perform operation
fmadd.s f22, f20, f30, f26, rdn # perform operation
fmadd.s f22, f20, f30, f26, rmm # perform operation
fmadd.s f22, f20, f30, f26, rne # perform operation
fmadd.s f22, f20, f30, f26, rtz # perform operation
fmadd.s f22, f20, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x356f9f86028562ed # load x3 with value 0x356f9f86028562ed
sw x3, 0(x2) # store 0x356f9f86028562ed in memory
flw f9, 0(x2) # load 0x356f9f86028562ed from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmadd.s f17, f10, f9, f14, dyn # perform operation
fmadd.s f17, f10, f9, f14, rdn # perform operation
fmadd.s f17, f10, f9, f14, rmm # perform operation
fmadd.s f17, f10, f9, f14, rne # perform operation
fmadd.s f17, f10, f9, f14, rtz # perform operation
fmadd.s f17, f10, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xbbe1a620c8eb3ec4 # load x3 with value 0xbbe1a620c8eb3ec4
sw x3, 0(x2) # store 0xbbe1a620c8eb3ec4 in memory
flw f3, 0(x2) # load 0xbbe1a620c8eb3ec4 from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f28, f14, f3, f5, dyn # perform operation
fmadd.s f28, f14, f3, f5, rdn # perform operation
fmadd.s f28, f14, f3, f5, rmm # perform operation
fmadd.s f28, f14, f3, f5, rne # perform operation
fmadd.s f28, f14, f3, f5, rtz # perform operation
fmadd.s f28, f14, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x3beb872042525987 # load x3 with value 0x3beb872042525987
sw x3, 0(x2) # store 0x3beb872042525987 in memory
flw f28, 0(x2) # load 0x3beb872042525987 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmadd.s f12, f27, f28, f23, dyn # perform operation
fmadd.s f12, f27, f28, f23, rdn # perform operation
fmadd.s f12, f27, f28, f23, rmm # perform operation
fmadd.s f12, f27, f28, f23, rne # perform operation
fmadd.s f12, f27, f28, f23, rtz # perform operation
fmadd.s f12, f27, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f27, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f27, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f27, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f27, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f27, f28, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x472f3f26cc12e424 # load x3 with value 0x472f3f26cc12e424
sw x3, 0(x2) # store 0x472f3f26cc12e424 in memory
flw f29, 0(x2) # load 0x472f3f26cc12e424 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
fmadd.s f24, f1, f29, f28, dyn # perform operation
fmadd.s f24, f1, f29, f28, rdn # perform operation
fmadd.s f24, f1, f29, f28, rmm # perform operation
fmadd.s f24, f1, f29, f28, rne # perform operation
fmadd.s f24, f1, f29, f28, rtz # perform operation
fmadd.s f24, f1, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f29, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xa5c25b1594799c04 # load x3 with value 0xa5c25b1594799c04
sw x3, 0(x2) # store 0xa5c25b1594799c04 in memory
flw f14, 0(x2) # load 0xa5c25b1594799c04 from memory into f14
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmadd.s f20, f22, f14, f12, dyn # perform operation
fmadd.s f20, f22, f14, f12, rdn # perform operation
fmadd.s f20, f22, f14, f12, rmm # perform operation
fmadd.s f20, f22, f14, f12, rne # perform operation
fmadd.s f20, f22, f14, f12, rtz # perform operation
fmadd.s f20, f22, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f22, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f22, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x10854b0d17f3c1c7 # load x3 with value 0x10854b0d17f3c1c7
sw x3, 0(x2) # store 0x10854b0d17f3c1c7 in memory
flw f15, 0(x2) # load 0x10854b0d17f3c1c7 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmadd.s f22, f10, f15, f20, dyn # perform operation
fmadd.s f22, f10, f15, f20, rdn # perform operation
fmadd.s f22, f10, f15, f20, rmm # perform operation
fmadd.s f22, f10, f15, f20, rne # perform operation
fmadd.s f22, f10, f15, f20, rtz # perform operation
fmadd.s f22, f10, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x5b4b925c69af1828 # load x3 with value 0x5b4b925c69af1828
sw x3, 0(x2) # store 0x5b4b925c69af1828 in memory
flw f11, 0(x2) # load 0x5b4b925c69af1828 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fmadd.s f29, f27, f11, f24, dyn # perform operation
fmadd.s f29, f27, f11, f24, rdn # perform operation
fmadd.s f29, f27, f11, f24, rmm # perform operation
fmadd.s f29, f27, f11, f24, rne # perform operation
fmadd.s f29, f27, f11, f24, rtz # perform operation
fmadd.s f29, f27, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x708a3f8f8d2c2db3 # load x3 with value 0x708a3f8f8d2c2db3
sw x3, 0(x2) # store 0x708a3f8f8d2c2db3 in memory
flw f7, 0(x2) # load 0x708a3f8f8d2c2db3 from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmadd.s f20, f13, f7, f23, dyn # perform operation
fmadd.s f20, f13, f7, f23, rdn # perform operation
fmadd.s f20, f13, f7, f23, rmm # perform operation
fmadd.s f20, f13, f7, f23, rne # perform operation
fmadd.s f20, f13, f7, f23, rtz # perform operation
fmadd.s f20, f13, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f13, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f13, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x56c88c3ebdfe341c # load x3 with value 0x56c88c3ebdfe341c
sw x3, 0(x2) # store 0x56c88c3ebdfe341c in memory
flw f23, 0(x2) # load 0x56c88c3ebdfe341c from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fmadd.s f6, f15, f23, f28, dyn # perform operation
fmadd.s f6, f15, f23, f28, rdn # perform operation
fmadd.s f6, f15, f23, f28, rmm # perform operation
fmadd.s f6, f15, f23, f28, rne # perform operation
fmadd.s f6, f15, f23, f28, rtz # perform operation
fmadd.s f6, f15, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f23, f28 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
