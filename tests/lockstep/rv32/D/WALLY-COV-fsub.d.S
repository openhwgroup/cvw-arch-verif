///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/D/WALLY-COV-fsub.d.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x2, x15, x14 # perform first operation
fsub.d f22, f21, f7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x26, x23, x12 # perform first operation
fsub.d f15, f11, f28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x31, x21, x16 # perform first operation
fsub.d f26, f20, f2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f31, f21, f25 # perform first operation
fsub.d f21, f31, f30 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f21, f1, f18 # perform first operation
fsub.d f1, f5, f21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x29, x16, x10 # perform first operation
fsub.d f29, f9, f1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f30, f1, f5 # perform first operation
fsub.d f30, f11, f21 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f10, f1, f24 # perform first operation
fsub.d f10, f18, f26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f31, f5, f18 # perform first operation
fsub.d f31, f1, f2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f15, f1, f6 # perform first operation
fsub.d f1, f24, f11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f7, f28, f27 # perform first operation
fsub.d f27, f9, f18 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f6, f15, f12 # perform first operation
fsub.d f9, f1, f27 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x16959163 # load x3 with 32 MSBs 0x0000000016959163
sw x3, 0(x2) # store x3 (0x16959163) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000016959163
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x0000000016959163 from memory into f0
la x2, scratch
li x3, 0x63c5c015 # load x3 with 32 MSBs 0x0000000063c5c015
sw x3, 0(x2) # store x3 (0x63c5c015) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000063c5c015
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000063c5c015 from memory into f21
fsub.d f7, f0, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0xd06c87d5 # load x3 with 32 MSBs 0x00000000d06c87d5
sw x3, 0(x2) # store x3 (0xd06c87d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d06c87d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d06c87d5 from memory into f1
la x2, scratch
li x3, 0x51d4d67f # load x3 with 32 MSBs 0x0000000051d4d67f
sw x3, 0(x2) # store x3 (0x51d4d67f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000051d4d67f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000051d4d67f from memory into f20
fsub.d f5, f1, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x2203f9d7 # load x3 with 32 MSBs 0x000000002203f9d7
sw x3, 0(x2) # store x3 (0x2203f9d7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002203f9d7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002203f9d7 from memory into f2
la x2, scratch
li x3, 0x64955572 # load x3 with 32 MSBs 0x0000000064955572
sw x3, 0(x2) # store x3 (0x64955572) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000064955572
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000064955572 from memory into f17
fsub.d f27, f2, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0x000d41fe # load x3 with 32 MSBs 0x00000000000d41fe
sw x3, 0(x2) # store x3 (0x000d41fe) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000000d41fe
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000000d41fe from memory into f3
la x2, scratch
li x3, 0xf11019e9 # load x3 with 32 MSBs 0x00000000f11019e9
sw x3, 0(x2) # store x3 (0xf11019e9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f11019e9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000f11019e9 from memory into f5
fsub.d f15, f3, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc0b7b3a6 # load x3 with 32 MSBs 0x00000000c0b7b3a6
sw x3, 0(x2) # store x3 (0xc0b7b3a6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c0b7b3a6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000c0b7b3a6 from memory into f4
la x2, scratch
li x3, 0xbdafc005 # load x3 with 32 MSBs 0x00000000bdafc005
sw x3, 0(x2) # store x3 (0xbdafc005) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bdafc005
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000bdafc005 from memory into f14
fsub.d f10, f4, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x32b7950b # load x3 with 32 MSBs 0x0000000032b7950b
sw x3, 0(x2) # store x3 (0x32b7950b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000032b7950b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000032b7950b from memory into f5
la x2, scratch
li x3, 0x548f9ae7 # load x3 with 32 MSBs 0x00000000548f9ae7
sw x3, 0(x2) # store x3 (0x548f9ae7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000548f9ae7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000548f9ae7 from memory into f26
fsub.d f25, f5, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x68520038 # load x3 with 32 MSBs 0x0000000068520038
sw x3, 0(x2) # store x3 (0x68520038) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000068520038
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000068520038 from memory into f6
la x2, scratch
li x3, 0xb04b7edb # load x3 with 32 MSBs 0x00000000b04b7edb
sw x3, 0(x2) # store x3 (0xb04b7edb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b04b7edb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b04b7edb from memory into f8
fsub.d f5, f6, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x52e5ba4d # load x3 with 32 MSBs 0x0000000052e5ba4d
sw x3, 0(x2) # store x3 (0x52e5ba4d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000052e5ba4d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000052e5ba4d from memory into f7
la x2, scratch
li x3, 0xbe8e959f # load x3 with 32 MSBs 0x00000000be8e959f
sw x3, 0(x2) # store x3 (0xbe8e959f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000be8e959f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000be8e959f from memory into f3
fsub.d f23, f7, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x2d539b35 # load x3 with 32 MSBs 0x000000002d539b35
sw x3, 0(x2) # store x3 (0x2d539b35) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002d539b35
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002d539b35 from memory into f8
la x2, scratch
li x3, 0x2d5ca784 # load x3 with 32 MSBs 0x000000002d5ca784
sw x3, 0(x2) # store x3 (0x2d5ca784) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002d5ca784
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002d5ca784 from memory into f5
fsub.d f14, f8, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x0886a741 # load x3 with 32 MSBs 0x000000000886a741
sw x3, 0(x2) # store x3 (0x0886a741) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000886a741
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000000886a741 from memory into f9
la x2, scratch
li x3, 0x921b9f29 # load x3 with 32 MSBs 0x00000000921b9f29
sw x3, 0(x2) # store x3 (0x921b9f29) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000921b9f29
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000921b9f29 from memory into f14
fsub.d f8, f9, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0xe518b720 # load x3 with 32 MSBs 0x00000000e518b720
sw x3, 0(x2) # store x3 (0xe518b720) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e518b720
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000e518b720 from memory into f10
la x2, scratch
li x3, 0xb7bae61e # load x3 with 32 MSBs 0x00000000b7bae61e
sw x3, 0(x2) # store x3 (0xb7bae61e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b7bae61e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b7bae61e from memory into f23
fsub.d f29, f10, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x8fed2fbf # load x3 with 32 MSBs 0x000000008fed2fbf
sw x3, 0(x2) # store x3 (0x8fed2fbf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008fed2fbf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000008fed2fbf from memory into f11
la x2, scratch
li x3, 0x48836abf # load x3 with 32 MSBs 0x0000000048836abf
sw x3, 0(x2) # store x3 (0x48836abf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000048836abf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000048836abf from memory into f31
fsub.d f24, f11, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x7d1645e8 # load x3 with 32 MSBs 0x000000007d1645e8
sw x3, 0(x2) # store x3 (0x7d1645e8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007d1645e8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007d1645e8 from memory into f12
la x2, scratch
li x3, 0x8d77ac22 # load x3 with 32 MSBs 0x000000008d77ac22
sw x3, 0(x2) # store x3 (0x8d77ac22) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008d77ac22
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000008d77ac22 from memory into f30
fsub.d f16, f12, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xc1477482 # load x3 with 32 MSBs 0x00000000c1477482
sw x3, 0(x2) # store x3 (0xc1477482) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c1477482
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c1477482 from memory into f13
la x2, scratch
li x3, 0x49bd2675 # load x3 with 32 MSBs 0x0000000049bd2675
sw x3, 0(x2) # store x3 (0x49bd2675) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000049bd2675
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000049bd2675 from memory into f25
fsub.d f15, f13, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x6aa922dc # load x3 with 32 MSBs 0x000000006aa922dc
sw x3, 0(x2) # store x3 (0x6aa922dc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006aa922dc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006aa922dc from memory into f14
la x2, scratch
li x3, 0xfdc99872 # load x3 with 32 MSBs 0x00000000fdc99872
sw x3, 0(x2) # store x3 (0xfdc99872) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fdc99872
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000fdc99872 from memory into f13
fsub.d f29, f14, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0xde16600b # load x3 with 32 MSBs 0x00000000de16600b
sw x3, 0(x2) # store x3 (0xde16600b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000de16600b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000de16600b from memory into f15
la x2, scratch
li x3, 0x77a70099 # load x3 with 32 MSBs 0x0000000077a70099
sw x3, 0(x2) # store x3 (0x77a70099) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000077a70099
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000077a70099 from memory into f19
fsub.d f24, f15, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0xd8e97e83 # load x3 with 32 MSBs 0x00000000d8e97e83
sw x3, 0(x2) # store x3 (0xd8e97e83) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d8e97e83
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000d8e97e83 from memory into f16
la x2, scratch
li x3, 0x8628d7af # load x3 with 32 MSBs 0x000000008628d7af
sw x3, 0(x2) # store x3 (0x8628d7af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008628d7af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008628d7af from memory into f23
fsub.d f6, f16, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0xa46d0655 # load x3 with 32 MSBs 0x00000000a46d0655
sw x3, 0(x2) # store x3 (0xa46d0655) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a46d0655
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a46d0655 from memory into f17
la x2, scratch
li x3, 0x1fa65481 # load x3 with 32 MSBs 0x000000001fa65481
sw x3, 0(x2) # store x3 (0x1fa65481) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001fa65481
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001fa65481 from memory into f22
fsub.d f12, f17, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xa034e8c5 # load x3 with 32 MSBs 0x00000000a034e8c5
sw x3, 0(x2) # store x3 (0xa034e8c5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a034e8c5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a034e8c5 from memory into f18
la x2, scratch
li x3, 0x28d30273 # load x3 with 32 MSBs 0x0000000028d30273
sw x3, 0(x2) # store x3 (0x28d30273) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000028d30273
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000028d30273 from memory into f28
fsub.d f7, f18, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xad7a8a7b # load x3 with 32 MSBs 0x00000000ad7a8a7b
sw x3, 0(x2) # store x3 (0xad7a8a7b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ad7a8a7b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ad7a8a7b from memory into f19
la x2, scratch
li x3, 0x7fbe830a # load x3 with 32 MSBs 0x000000007fbe830a
sw x3, 0(x2) # store x3 (0x7fbe830a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007fbe830a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007fbe830a from memory into f10
fsub.d f22, f19, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0x7fd516ae # load x3 with 32 MSBs 0x000000007fd516ae
sw x3, 0(x2) # store x3 (0x7fd516ae) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007fd516ae
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007fd516ae from memory into f20
la x2, scratch
li x3, 0xbb7e026e # load x3 with 32 MSBs 0x00000000bb7e026e
sw x3, 0(x2) # store x3 (0xbb7e026e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bb7e026e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000bb7e026e from memory into f30
fsub.d f22, f20, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0xfeb27eec # load x3 with 32 MSBs 0x00000000feb27eec
sw x3, 0(x2) # store x3 (0xfeb27eec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000feb27eec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000feb27eec from memory into f21
la x2, scratch
li x3, 0x9cc08e09 # load x3 with 32 MSBs 0x000000009cc08e09
sw x3, 0(x2) # store x3 (0x9cc08e09) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009cc08e09
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000009cc08e09 from memory into f30
fsub.d f19, f21, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0xce3a2510 # load x3 with 32 MSBs 0x00000000ce3a2510
sw x3, 0(x2) # store x3 (0xce3a2510) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ce3a2510
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000ce3a2510 from memory into f22
la x2, scratch
li x3, 0x12c17f65 # load x3 with 32 MSBs 0x0000000012c17f65
sw x3, 0(x2) # store x3 (0x12c17f65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000012c17f65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000012c17f65 from memory into f31
fsub.d f12, f22, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x484c446c # load x3 with 32 MSBs 0x00000000484c446c
sw x3, 0(x2) # store x3 (0x484c446c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000484c446c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000484c446c from memory into f23
la x2, scratch
li x3, 0x5fe93948 # load x3 with 32 MSBs 0x000000005fe93948
sw x3, 0(x2) # store x3 (0x5fe93948) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005fe93948
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000005fe93948 from memory into f11
fsub.d f24, f23, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x963105e2 # load x3 with 32 MSBs 0x00000000963105e2
sw x3, 0(x2) # store x3 (0x963105e2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000963105e2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000963105e2 from memory into f24
la x2, scratch
li x3, 0x87e58f2a # load x3 with 32 MSBs 0x0000000087e58f2a
sw x3, 0(x2) # store x3 (0x87e58f2a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000087e58f2a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000087e58f2a from memory into f11
fsub.d f19, f24, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x578b2f9c # load x3 with 32 MSBs 0x00000000578b2f9c
sw x3, 0(x2) # store x3 (0x578b2f9c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000578b2f9c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000578b2f9c from memory into f25
la x2, scratch
li x3, 0xb37502f5 # load x3 with 32 MSBs 0x00000000b37502f5
sw x3, 0(x2) # store x3 (0xb37502f5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b37502f5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b37502f5 from memory into f2
fsub.d f30, f25, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x23ad81a7 # load x3 with 32 MSBs 0x0000000023ad81a7
sw x3, 0(x2) # store x3 (0x23ad81a7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000023ad81a7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000023ad81a7 from memory into f26
la x2, scratch
li x3, 0x08248439 # load x3 with 32 MSBs 0x0000000008248439
sw x3, 0(x2) # store x3 (0x08248439) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000008248439
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000008248439 from memory into f31
fsub.d f8, f26, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0xa17aa3ec # load x3 with 32 MSBs 0x00000000a17aa3ec
sw x3, 0(x2) # store x3 (0xa17aa3ec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a17aa3ec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000a17aa3ec from memory into f27
la x2, scratch
li x3, 0x889df99f # load x3 with 32 MSBs 0x00000000889df99f
sw x3, 0(x2) # store x3 (0x889df99f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000889df99f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000889df99f from memory into f20
fsub.d f27, f27, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xe4a12737 # load x3 with 32 MSBs 0x00000000e4a12737
sw x3, 0(x2) # store x3 (0xe4a12737) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e4a12737
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e4a12737 from memory into f28
la x2, scratch
li x3, 0x35b345ad # load x3 with 32 MSBs 0x0000000035b345ad
sw x3, 0(x2) # store x3 (0x35b345ad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000035b345ad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000035b345ad from memory into f12
fsub.d f16, f28, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0x2253b646 # load x3 with 32 MSBs 0x000000002253b646
sw x3, 0(x2) # store x3 (0x2253b646) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002253b646
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000002253b646 from memory into f29
la x2, scratch
li x3, 0xd895bbb5 # load x3 with 32 MSBs 0x00000000d895bbb5
sw x3, 0(x2) # store x3 (0xd895bbb5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d895bbb5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000d895bbb5 from memory into f13
fsub.d f15, f29, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x1235cf6e # load x3 with 32 MSBs 0x000000001235cf6e
sw x3, 0(x2) # store x3 (0x1235cf6e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001235cf6e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000001235cf6e from memory into f30
la x2, scratch
li x3, 0xa62ee568 # load x3 with 32 MSBs 0x00000000a62ee568
sw x3, 0(x2) # store x3 (0xa62ee568) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a62ee568
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a62ee568 from memory into f5
fsub.d f20, f30, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0x33b039e2 # load x3 with 32 MSBs 0x0000000033b039e2
sw x3, 0(x2) # store x3 (0x33b039e2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000033b039e2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000033b039e2 from memory into f31
la x2, scratch
li x3, 0x5f2b9d38 # load x3 with 32 MSBs 0x000000005f2b9d38
sw x3, 0(x2) # store x3 (0x5f2b9d38) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005f2b9d38
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005f2b9d38 from memory into f16
fsub.d f26, f31, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0xe4e9d732 # load x3 with 32 MSBs 0x00000000e4e9d732
sw x3, 0(x2) # store x3 (0xe4e9d732) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e4e9d732
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000e4e9d732 from memory into f24
la x2, scratch
li x3, 0x26a7392b # load x3 with 32 MSBs 0x0000000026a7392b
sw x3, 0(x2) # store x3 (0x26a7392b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000026a7392b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x0000000026a7392b from memory into f0
fsub.d f21, f24, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x4cfb6cfb # load x3 with 32 MSBs 0x000000004cfb6cfb
sw x3, 0(x2) # store x3 (0x4cfb6cfb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004cfb6cfb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004cfb6cfb from memory into f22
la x2, scratch
li x3, 0x4d7aa9eb # load x3 with 32 MSBs 0x000000004d7aa9eb
sw x3, 0(x2) # store x3 (0x4d7aa9eb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004d7aa9eb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000004d7aa9eb from memory into f1
fsub.d f16, f22, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x55616042 # load x3 with 32 MSBs 0x0000000055616042
sw x3, 0(x2) # store x3 (0x55616042) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000055616042
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000055616042 from memory into f1
la x2, scratch
li x3, 0xb54f4507 # load x3 with 32 MSBs 0x00000000b54f4507
sw x3, 0(x2) # store x3 (0xb54f4507) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b54f4507
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000b54f4507 from memory into f2
fsub.d f13, f1, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x45c47a7c # load x3 with 32 MSBs 0x0000000045c47a7c
sw x3, 0(x2) # store x3 (0x45c47a7c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000045c47a7c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000045c47a7c from memory into f11
la x2, scratch
li x3, 0x9a34e375 # load x3 with 32 MSBs 0x000000009a34e375
sw x3, 0(x2) # store x3 (0x9a34e375) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009a34e375
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009a34e375 from memory into f3
fsub.d f2, f11, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1df7c731 # load x3 with 32 MSBs 0x000000001df7c731
sw x3, 0(x2) # store x3 (0x1df7c731) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001df7c731
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000001df7c731 from memory into f25
la x2, scratch
li x3, 0x4d654484 # load x3 with 32 MSBs 0x000000004d654484
sw x3, 0(x2) # store x3 (0x4d654484) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004d654484
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000004d654484 from memory into f4
fsub.d f5, f25, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
la x2, scratch
li x3, 0x35c7ffd5 # load x3 with 32 MSBs 0x0000000035c7ffd5
sw x3, 0(x2) # store x3 (0x35c7ffd5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000035c7ffd5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000035c7ffd5 from memory into f27
la x2, scratch
li x3, 0x877e084d # load x3 with 32 MSBs 0x00000000877e084d
sw x3, 0(x2) # store x3 (0x877e084d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000877e084d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000877e084d from memory into f5
fsub.d f22, f27, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x35fdc06d # load x3 with 32 MSBs 0x0000000035fdc06d
sw x3, 0(x2) # store x3 (0x35fdc06d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000035fdc06d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000035fdc06d from memory into f30
la x2, scratch
li x3, 0x5e17cc0f # load x3 with 32 MSBs 0x000000005e17cc0f
sw x3, 0(x2) # store x3 (0x5e17cc0f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005e17cc0f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005e17cc0f from memory into f6
fsub.d f4, f30, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x597d8261 # load x3 with 32 MSBs 0x00000000597d8261
sw x3, 0(x2) # store x3 (0x597d8261) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000597d8261
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000597d8261 from memory into f24
la x2, scratch
li x3, 0x45ecebf5 # load x3 with 32 MSBs 0x0000000045ecebf5
sw x3, 0(x2) # store x3 (0x45ecebf5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000045ecebf5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000045ecebf5 from memory into f7
fsub.d f25, f24, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0x766343fd # load x3 with 32 MSBs 0x00000000766343fd
sw x3, 0(x2) # store x3 (0x766343fd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000766343fd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000766343fd from memory into f14
la x2, scratch
li x3, 0x075354da # load x3 with 32 MSBs 0x00000000075354da
sw x3, 0(x2) # store x3 (0x075354da) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000075354da
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000075354da from memory into f8
fsub.d f20, f14, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0x2efca206 # load x3 with 32 MSBs 0x000000002efca206
sw x3, 0(x2) # store x3 (0x2efca206) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002efca206
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000002efca206 from memory into f17
la x2, scratch
li x3, 0xdf535f00 # load x3 with 32 MSBs 0x00000000df535f00
sw x3, 0(x2) # store x3 (0xdf535f00) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000df535f00
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000df535f00 from memory into f9
fsub.d f20, f17, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x162a6a58 # load x3 with 32 MSBs 0x00000000162a6a58
sw x3, 0(x2) # store x3 (0x162a6a58) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000162a6a58
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000162a6a58 from memory into f25
la x2, scratch
li x3, 0x44d66ade # load x3 with 32 MSBs 0x0000000044d66ade
sw x3, 0(x2) # store x3 (0x44d66ade) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000044d66ade
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000044d66ade from memory into f10
fsub.d f3, f25, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0xc195118b # load x3 with 32 MSBs 0x00000000c195118b
sw x3, 0(x2) # store x3 (0xc195118b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c195118b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c195118b from memory into f15
la x2, scratch
li x3, 0x27f4f040 # load x3 with 32 MSBs 0x0000000027f4f040
sw x3, 0(x2) # store x3 (0x27f4f040) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000027f4f040
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000027f4f040 from memory into f11
fsub.d f22, f15, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0x6840573f # load x3 with 32 MSBs 0x000000006840573f
sw x3, 0(x2) # store x3 (0x6840573f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006840573f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006840573f from memory into f5
la x2, scratch
li x3, 0x5552abda # load x3 with 32 MSBs 0x000000005552abda
sw x3, 0(x2) # store x3 (0x5552abda) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005552abda
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000005552abda from memory into f12
fsub.d f9, f5, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0xa5b2df29 # load x3 with 32 MSBs 0x00000000a5b2df29
sw x3, 0(x2) # store x3 (0xa5b2df29) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a5b2df29
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000a5b2df29 from memory into f18
la x2, scratch
li x3, 0x667d92f8 # load x3 with 32 MSBs 0x00000000667d92f8
sw x3, 0(x2) # store x3 (0x667d92f8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000667d92f8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000667d92f8 from memory into f13
fsub.d f10, f18, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x4e1f4486 # load x3 with 32 MSBs 0x000000004e1f4486
sw x3, 0(x2) # store x3 (0x4e1f4486) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004e1f4486
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004e1f4486 from memory into f29
la x2, scratch
li x3, 0xf0e345db # load x3 with 32 MSBs 0x00000000f0e345db
sw x3, 0(x2) # store x3 (0xf0e345db) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f0e345db
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000f0e345db from memory into f14
fsub.d f3, f29, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x8b11e25c # load x3 with 32 MSBs 0x000000008b11e25c
sw x3, 0(x2) # store x3 (0x8b11e25c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008b11e25c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008b11e25c from memory into f25
la x2, scratch
li x3, 0x0384905e # load x3 with 32 MSBs 0x000000000384905e
sw x3, 0(x2) # store x3 (0x0384905e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000384905e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000000384905e from memory into f15
fsub.d f1, f25, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0xbbd4aa4d # load x3 with 32 MSBs 0x00000000bbd4aa4d
sw x3, 0(x2) # store x3 (0xbbd4aa4d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bbd4aa4d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000bbd4aa4d from memory into f24
la x2, scratch
li x3, 0xa82505ec # load x3 with 32 MSBs 0x00000000a82505ec
sw x3, 0(x2) # store x3 (0xa82505ec) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a82505ec
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000a82505ec from memory into f16
fsub.d f21, f24, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x1526a8c5 # load x3 with 32 MSBs 0x000000001526a8c5
sw x3, 0(x2) # store x3 (0x1526a8c5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001526a8c5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000001526a8c5 from memory into f8
la x2, scratch
li x3, 0x4822738d # load x3 with 32 MSBs 0x000000004822738d
sw x3, 0(x2) # store x3 (0x4822738d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004822738d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000004822738d from memory into f17
fsub.d f16, f8, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x90124058 # load x3 with 32 MSBs 0x0000000090124058
sw x3, 0(x2) # store x3 (0x90124058) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000090124058
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000090124058 from memory into f20
la x2, scratch
li x3, 0x58806259 # load x3 with 32 MSBs 0x0000000058806259
sw x3, 0(x2) # store x3 (0x58806259) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000058806259
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000058806259 from memory into f18
fsub.d f10, f20, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0xa0838767 # load x3 with 32 MSBs 0x00000000a0838767
sw x3, 0(x2) # store x3 (0xa0838767) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a0838767
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000a0838767 from memory into f7
la x2, scratch
li x3, 0xc137a3bf # load x3 with 32 MSBs 0x00000000c137a3bf
sw x3, 0(x2) # store x3 (0xc137a3bf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c137a3bf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000c137a3bf from memory into f19
fsub.d f18, f7, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x841bacf1 # load x3 with 32 MSBs 0x00000000841bacf1
sw x3, 0(x2) # store x3 (0x841bacf1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000841bacf1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000841bacf1 from memory into f3
la x2, scratch
li x3, 0x8f942d16 # load x3 with 32 MSBs 0x000000008f942d16
sw x3, 0(x2) # store x3 (0x8f942d16) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008f942d16
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000008f942d16 from memory into f20
fsub.d f18, f3, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x4b6d82da # load x3 with 32 MSBs 0x000000004b6d82da
sw x3, 0(x2) # store x3 (0x4b6d82da) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004b6d82da
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004b6d82da from memory into f31
la x2, scratch
li x3, 0xbc794003 # load x3 with 32 MSBs 0x00000000bc794003
sw x3, 0(x2) # store x3 (0xbc794003) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bc794003
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000bc794003 from memory into f21
fsub.d f20, f31, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x8a351658 # load x3 with 32 MSBs 0x000000008a351658
sw x3, 0(x2) # store x3 (0x8a351658) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008a351658
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000008a351658 from memory into f20
la x2, scratch
li x3, 0xb4740910 # load x3 with 32 MSBs 0x00000000b4740910
sw x3, 0(x2) # store x3 (0xb4740910) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b4740910
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b4740910 from memory into f22
fsub.d f29, f20, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x02610681 # load x3 with 32 MSBs 0x0000000002610681
sw x3, 0(x2) # store x3 (0x02610681) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000002610681
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000002610681 from memory into f10
la x2, scratch
li x3, 0x2d0d98d7 # load x3 with 32 MSBs 0x000000002d0d98d7
sw x3, 0(x2) # store x3 (0x2d0d98d7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002d0d98d7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000002d0d98d7 from memory into f23
fsub.d f3, f10, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xc38a4df7 # load x3 with 32 MSBs 0x00000000c38a4df7
sw x3, 0(x2) # store x3 (0xc38a4df7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c38a4df7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c38a4df7 from memory into f30
la x2, scratch
li x3, 0xaaea998a # load x3 with 32 MSBs 0x00000000aaea998a
sw x3, 0(x2) # store x3 (0xaaea998a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000aaea998a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000aaea998a from memory into f24
fsub.d f8, f30, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x5e46ef82 # load x3 with 32 MSBs 0x000000005e46ef82
sw x3, 0(x2) # store x3 (0x5e46ef82) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005e46ef82
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000005e46ef82 from memory into f21
la x2, scratch
li x3, 0x7d0e3049 # load x3 with 32 MSBs 0x000000007d0e3049
sw x3, 0(x2) # store x3 (0x7d0e3049) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007d0e3049
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007d0e3049 from memory into f25
fsub.d f14, f21, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x9ea8dab1 # load x3 with 32 MSBs 0x000000009ea8dab1
sw x3, 0(x2) # store x3 (0x9ea8dab1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ea8dab1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000009ea8dab1 from memory into f1
la x2, scratch
li x3, 0x10e76799 # load x3 with 32 MSBs 0x0000000010e76799
sw x3, 0(x2) # store x3 (0x10e76799) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000010e76799
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000010e76799 from memory into f26
fsub.d f13, f1, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0xb031d86a # load x3 with 32 MSBs 0x00000000b031d86a
sw x3, 0(x2) # store x3 (0xb031d86a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b031d86a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b031d86a from memory into f18
la x2, scratch
li x3, 0x62e1d8b0 # load x3 with 32 MSBs 0x0000000062e1d8b0
sw x3, 0(x2) # store x3 (0x62e1d8b0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000062e1d8b0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000062e1d8b0 from memory into f27
fsub.d f14, f18, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0xc21d35a4 # load x3 with 32 MSBs 0x00000000c21d35a4
sw x3, 0(x2) # store x3 (0xc21d35a4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c21d35a4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c21d35a4 from memory into f9
la x2, scratch
li x3, 0x4f640aa8 # load x3 with 32 MSBs 0x000000004f640aa8
sw x3, 0(x2) # store x3 (0x4f640aa8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004f640aa8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000004f640aa8 from memory into f28
fsub.d f2, f9, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0xc8fd6cf6 # load x3 with 32 MSBs 0x00000000c8fd6cf6
sw x3, 0(x2) # store x3 (0xc8fd6cf6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c8fd6cf6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c8fd6cf6 from memory into f24
la x2, scratch
li x3, 0xc79e0933 # load x3 with 32 MSBs 0x00000000c79e0933
sw x3, 0(x2) # store x3 (0xc79e0933) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c79e0933
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000c79e0933 from memory into f29
fsub.d f25, f24, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0xd8afc6db # load x3 with 32 MSBs 0x00000000d8afc6db
sw x3, 0(x2) # store x3 (0xd8afc6db) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d8afc6db
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d8afc6db from memory into f20
la x2, scratch
li x3, 0x5531db2a # load x3 with 32 MSBs 0x000000005531db2a
sw x3, 0(x2) # store x3 (0x5531db2a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005531db2a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005531db2a from memory into f30
fsub.d f16, f20, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x95cfe6de # load x3 with 32 MSBs 0x0000000095cfe6de
sw x3, 0(x2) # store x3 (0x95cfe6de) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000095cfe6de
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000095cfe6de from memory into f10
la x2, scratch
li x3, 0xf147238e # load x3 with 32 MSBs 0x00000000f147238e
sw x3, 0(x2) # store x3 (0xf147238e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f147238e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000f147238e from memory into f31
fsub.d f11, f10, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xea66d25e # load x3 with 32 MSBs 0x00000000ea66d25e
sw x3, 0(x2) # store x3 (0xea66d25e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ea66d25e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ea66d25e from memory into f5
la x2, scratch
li x3, 0xb8841abe # load x3 with 32 MSBs 0x00000000b8841abe
sw x3, 0(x2) # store x3 (0xb8841abe) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b8841abe
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b8841abe from memory into f20
fsub.d f0, f5, f20 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x53053b17 # load x3 with 32 MSBs 0x0000000053053b17
sw x3, 0(x2) # store x3 (0x53053b17) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000053053b17
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000053053b17 from memory into f24
la x2, scratch
li x3, 0x7bf54edf # load x3 with 32 MSBs 0x000000007bf54edf
sw x3, 0(x2) # store x3 (0x7bf54edf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007bf54edf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007bf54edf from memory into f25
fsub.d f1, f24, f25 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x4b464445 # load x3 with 32 MSBs 0x000000004b464445
sw x3, 0(x2) # store x3 (0x4b464445) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004b464445
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004b464445 from memory into f11
la x2, scratch
li x3, 0xc0dbdbcd # load x3 with 32 MSBs 0x00000000c0dbdbcd
sw x3, 0(x2) # store x3 (0xc0dbdbcd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c0dbdbcd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c0dbdbcd from memory into f18
fsub.d f2, f11, f18 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x13b26475 # load x3 with 32 MSBs 0x0000000013b26475
sw x3, 0(x2) # store x3 (0x13b26475) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000013b26475
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000013b26475 from memory into f17
la x2, scratch
li x3, 0xd7d55379 # load x3 with 32 MSBs 0x00000000d7d55379
sw x3, 0(x2) # store x3 (0xd7d55379) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d7d55379
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d7d55379 from memory into f6
fsub.d f3, f17, f6 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x553948b9 # load x3 with 32 MSBs 0x00000000553948b9
sw x3, 0(x2) # store x3 (0x553948b9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000553948b9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000553948b9 from memory into f18
la x2, scratch
li x3, 0xf915d2ff # load x3 with 32 MSBs 0x00000000f915d2ff
sw x3, 0(x2) # store x3 (0xf915d2ff) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f915d2ff
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f915d2ff from memory into f9
fsub.d f4, f18, f9 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc0be1efb # load x3 with 32 MSBs 0x00000000c0be1efb
sw x3, 0(x2) # store x3 (0xc0be1efb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c0be1efb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c0be1efb from memory into f25
la x2, scratch
li x3, 0xf45901fd # load x3 with 32 MSBs 0x00000000f45901fd
sw x3, 0(x2) # store x3 (0xf45901fd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f45901fd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000f45901fd from memory into f11
fsub.d f5, f25, f11 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x4, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1b4478d0 # load x3 with 32 MSBs 0x000000001b4478d0
sw x3, 0(x2) # store x3 (0x1b4478d0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001b4478d0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000001b4478d0 from memory into f22
la x2, scratch
li x3, 0x09a638c4 # load x3 with 32 MSBs 0x0000000009a638c4
sw x3, 0(x2) # store x3 (0x09a638c4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000009a638c4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000009a638c4 from memory into f7
fsub.d f6, f22, f7 # perform operation

# Testcase cp_fd (Test destination fd = x7)
la x2, scratch
li x3, 0xbf5f6a28 # load x3 with 32 MSBs 0x00000000bf5f6a28
sw x3, 0(x2) # store x3 (0xbf5f6a28) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bf5f6a28
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bf5f6a28 from memory into f22
la x2, scratch
li x3, 0x2882742b # load x3 with 32 MSBs 0x000000002882742b
sw x3, 0(x2) # store x3 (0x2882742b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002882742b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002882742b from memory into f3
fsub.d f7, f22, f3 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0xffd9d855 # load x3 with 32 MSBs 0x00000000ffd9d855
sw x3, 0(x2) # store x3 (0xffd9d855) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ffd9d855
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ffd9d855 from memory into f7
la x2, scratch
li x3, 0x432550c7 # load x3 with 32 MSBs 0x00000000432550c7
sw x3, 0(x2) # store x3 (0x432550c7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000432550c7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000432550c7 from memory into f8
fsub.d f8, f7, f8 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x1ed8e6f8 # load x3 with 32 MSBs 0x000000001ed8e6f8
sw x3, 0(x2) # store x3 (0x1ed8e6f8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001ed8e6f8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001ed8e6f8 from memory into f17
la x2, scratch
li x3, 0x802eb506 # load x3 with 32 MSBs 0x00000000802eb506
sw x3, 0(x2) # store x3 (0x802eb506) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000802eb506
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000802eb506 from memory into f12
fsub.d f9, f17, f12 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0xe6caa2d9 # load x3 with 32 MSBs 0x00000000e6caa2d9
sw x3, 0(x2) # store x3 (0xe6caa2d9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e6caa2d9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e6caa2d9 from memory into f18
la x2, scratch
li x3, 0x31a78a51 # load x3 with 32 MSBs 0x0000000031a78a51
sw x3, 0(x2) # store x3 (0x31a78a51) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000031a78a51
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000031a78a51 from memory into f24
fsub.d f10, f18, f24 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xd0810234 # load x3 with 32 MSBs 0x00000000d0810234
sw x3, 0(x2) # store x3 (0xd0810234) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d0810234
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000d0810234 from memory into f2
la x2, scratch
li x3, 0x818a945e # load x3 with 32 MSBs 0x00000000818a945e
sw x3, 0(x2) # store x3 (0x818a945e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000818a945e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000818a945e from memory into f9
fsub.d f11, f2, f9 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x9698b49e # load x3 with 32 MSBs 0x000000009698b49e
sw x3, 0(x2) # store x3 (0x9698b49e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009698b49e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000009698b49e from memory into f31
la x2, scratch
li x3, 0xb258c3b5 # load x3 with 32 MSBs 0x00000000b258c3b5
sw x3, 0(x2) # store x3 (0xb258c3b5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b258c3b5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b258c3b5 from memory into f8
fsub.d f12, f31, f8 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xaa8ceb72 # load x3 with 32 MSBs 0x00000000aa8ceb72
sw x3, 0(x2) # store x3 (0xaa8ceb72) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000aa8ceb72
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000aa8ceb72 from memory into f26
la x2, scratch
li x3, 0xa3d75950 # load x3 with 32 MSBs 0x00000000a3d75950
sw x3, 0(x2) # store x3 (0xa3d75950) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a3d75950
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000a3d75950 from memory into f21
fsub.d f13, f26, f21 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x14a25de2 # load x3 with 32 MSBs 0x0000000014a25de2
sw x3, 0(x2) # store x3 (0x14a25de2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000014a25de2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000014a25de2 from memory into f15
la x2, scratch
li x3, 0x5e8a7e67 # load x3 with 32 MSBs 0x000000005e8a7e67
sw x3, 0(x2) # store x3 (0x5e8a7e67) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005e8a7e67
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000005e8a7e67 from memory into f27
fsub.d f14, f15, f27 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xa4ba1e78 # load x3 with 32 MSBs 0x00000000a4ba1e78
sw x3, 0(x2) # store x3 (0xa4ba1e78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a4ba1e78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000a4ba1e78 from memory into f19
la x2, scratch
li x3, 0x17a85f56 # load x3 with 32 MSBs 0x0000000017a85f56
sw x3, 0(x2) # store x3 (0x17a85f56) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000017a85f56
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000017a85f56 from memory into f31
fsub.d f15, f19, f31 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x557609c9 # load x3 with 32 MSBs 0x00000000557609c9
sw x3, 0(x2) # store x3 (0x557609c9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000557609c9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000557609c9 from memory into f26
la x2, scratch
li x3, 0xf6a4a26c # load x3 with 32 MSBs 0x00000000f6a4a26c
sw x3, 0(x2) # store x3 (0xf6a4a26c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f6a4a26c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000f6a4a26c from memory into f3
fsub.d f16, f26, f3 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0xa6b98497 # load x3 with 32 MSBs 0x00000000a6b98497
sw x3, 0(x2) # store x3 (0xa6b98497) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a6b98497
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a6b98497 from memory into f17
la x2, scratch
li x3, 0xb25e7ce6 # load x3 with 32 MSBs 0x00000000b25e7ce6
sw x3, 0(x2) # store x3 (0xb25e7ce6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b25e7ce6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b25e7ce6 from memory into f10
fsub.d f17, f17, f10 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x938a4322 # load x3 with 32 MSBs 0x00000000938a4322
sw x3, 0(x2) # store x3 (0x938a4322) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000938a4322
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000938a4322 from memory into f27
la x2, scratch
li x3, 0x6b9ffed6 # load x3 with 32 MSBs 0x000000006b9ffed6
sw x3, 0(x2) # store x3 (0x6b9ffed6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006b9ffed6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006b9ffed6 from memory into f8
fsub.d f18, f27, f8 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0xda2bc503 # load x3 with 32 MSBs 0x00000000da2bc503
sw x3, 0(x2) # store x3 (0xda2bc503) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000da2bc503
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000da2bc503 from memory into f12
la x2, scratch
li x3, 0x85302e2a # load x3 with 32 MSBs 0x0000000085302e2a
sw x3, 0(x2) # store x3 (0x85302e2a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000085302e2a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000085302e2a from memory into f17
fsub.d f19, f12, f17 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0xb23f0abd # load x3 with 32 MSBs 0x00000000b23f0abd
sw x3, 0(x2) # store x3 (0xb23f0abd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b23f0abd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000b23f0abd from memory into f14
la x2, scratch
li x3, 0x07705a77 # load x3 with 32 MSBs 0x0000000007705a77
sw x3, 0(x2) # store x3 (0x07705a77) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000007705a77
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000007705a77 from memory into f2
fsub.d f20, f14, f2 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x6e0b215a # load x3 with 32 MSBs 0x000000006e0b215a
sw x3, 0(x2) # store x3 (0x6e0b215a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006e0b215a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000006e0b215a from memory into f26
la x2, scratch
li x3, 0x04793770 # load x3 with 32 MSBs 0x0000000004793770
sw x3, 0(x2) # store x3 (0x04793770) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000004793770
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000004793770 from memory into f2
fsub.d f21, f26, f2 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x6618aab0 # load x3 with 32 MSBs 0x000000006618aab0
sw x3, 0(x2) # store x3 (0x6618aab0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006618aab0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006618aab0 from memory into f9
la x2, scratch
li x3, 0x5dffc8c1 # load x3 with 32 MSBs 0x000000005dffc8c1
sw x3, 0(x2) # store x3 (0x5dffc8c1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005dffc8c1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000005dffc8c1 from memory into f8
fsub.d f22, f9, f8 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0xb8020d39 # load x3 with 32 MSBs 0x00000000b8020d39
sw x3, 0(x2) # store x3 (0xb8020d39) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b8020d39
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b8020d39 from memory into f5
la x2, scratch
li x3, 0xef188bfd # load x3 with 32 MSBs 0x00000000ef188bfd
sw x3, 0(x2) # store x3 (0xef188bfd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ef188bfd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ef188bfd from memory into f11
fsub.d f23, f5, f11 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xdf39e565 # load x3 with 32 MSBs 0x00000000df39e565
sw x3, 0(x2) # store x3 (0xdf39e565) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000df39e565
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000df39e565 from memory into f9
la x2, scratch
li x3, 0xf8b939f1 # load x3 with 32 MSBs 0x00000000f8b939f1
sw x3, 0(x2) # store x3 (0xf8b939f1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f8b939f1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000f8b939f1 from memory into f26
fsub.d f24, f9, f26 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x25b98038 # load x3 with 32 MSBs 0x0000000025b98038
sw x3, 0(x2) # store x3 (0x25b98038) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000025b98038
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000025b98038 from memory into f17
la x2, scratch
li x3, 0xd04139b9 # load x3 with 32 MSBs 0x00000000d04139b9
sw x3, 0(x2) # store x3 (0xd04139b9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d04139b9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000d04139b9 from memory into f6
fsub.d f25, f17, f6 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x574c0b7c # load x3 with 32 MSBs 0x00000000574c0b7c
sw x3, 0(x2) # store x3 (0x574c0b7c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000574c0b7c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000574c0b7c from memory into f16
la x2, scratch
li x3, 0xc7df257c # load x3 with 32 MSBs 0x00000000c7df257c
sw x3, 0(x2) # store x3 (0xc7df257c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c7df257c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000c7df257c from memory into f1
fsub.d f26, f16, f1 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x4de33747 # load x3 with 32 MSBs 0x000000004de33747
sw x3, 0(x2) # store x3 (0x4de33747) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004de33747
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000004de33747 from memory into f18
la x2, scratch
li x3, 0x944249e0 # load x3 with 32 MSBs 0x00000000944249e0
sw x3, 0(x2) # store x3 (0x944249e0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000944249e0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000944249e0 from memory into f10
fsub.d f27, f18, f10 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x4dc82c8a # load x3 with 32 MSBs 0x000000004dc82c8a
sw x3, 0(x2) # store x3 (0x4dc82c8a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004dc82c8a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004dc82c8a from memory into f9
la x2, scratch
li x3, 0x6155a524 # load x3 with 32 MSBs 0x000000006155a524
sw x3, 0(x2) # store x3 (0x6155a524) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006155a524
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006155a524 from memory into f5
fsub.d f28, f9, f5 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xc82138dc # load x3 with 32 MSBs 0x00000000c82138dc
sw x3, 0(x2) # store x3 (0xc82138dc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c82138dc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000c82138dc from memory into f15
la x2, scratch
li x3, 0xec724afd # load x3 with 32 MSBs 0x00000000ec724afd
sw x3, 0(x2) # store x3 (0xec724afd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ec724afd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ec724afd from memory into f9
fsub.d f29, f15, f9 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x5a373fc3 # load x3 with 32 MSBs 0x000000005a373fc3
sw x3, 0(x2) # store x3 (0x5a373fc3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005a373fc3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005a373fc3 from memory into f22
la x2, scratch
li x3, 0x63edf22e # load x3 with 32 MSBs 0x0000000063edf22e
sw x3, 0(x2) # store x3 (0x63edf22e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000063edf22e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000063edf22e from memory into f15
fsub.d f30, f22, f15 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x31e05c65 # load x3 with 32 MSBs 0x0000000031e05c65
sw x3, 0(x2) # store x3 (0x31e05c65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000031e05c65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000031e05c65 from memory into f27
la x2, scratch
li x3, 0x751edae4 # load x3 with 32 MSBs 0x00000000751edae4
sw x3, 0(x2) # store x3 (0x751edae4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000751edae4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000751edae4 from memory into f6
fsub.d f31, f27, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
la x2, scratch
li x3, 0xcf10bb27 # load x3 with 32 MSBs 0x00000000cf10bb27
sw x3, 0(x2) # store x3 (0xcf10bb27) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cf10bb27
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000cf10bb27 from memory into f14
fsub.d f8, f5, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
la x2, scratch
li x3, 0xde6908b6 # load x3 with 32 MSBs 0x00000000de6908b6
sw x3, 0(x2) # store x3 (0xde6908b6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000de6908b6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000de6908b6 from memory into f30
fsub.d f15, f22, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
la x2, scratch
li x3, 0x8933e866 # load x3 with 32 MSBs 0x000000008933e866
sw x3, 0(x2) # store x3 (0x8933e866) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008933e866
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000008933e866 from memory into f6
fsub.d f20, f16, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
la x2, scratch
li x3, 0xf8671168 # load x3 with 32 MSBs 0x00000000f8671168
sw x3, 0(x2) # store x3 (0xf8671168) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f8671168
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000f8671168 from memory into f8
fsub.d f2, f7, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
la x2, scratch
li x3, 0x10a1a120 # load x3 with 32 MSBs 0x0000000010a1a120
sw x3, 0(x2) # store x3 (0x10a1a120) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000010a1a120
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000010a1a120 from memory into f6
fsub.d f25, f24, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
la x2, scratch
li x3, 0xb69224c7 # load x3 with 32 MSBs 0x00000000b69224c7
sw x3, 0(x2) # store x3 (0xb69224c7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b69224c7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000b69224c7 from memory into f16
fsub.d f22, f13, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
la x2, scratch
li x3, 0xbefb322c # load x3 with 32 MSBs 0x00000000befb322c
sw x3, 0(x2) # store x3 (0xbefb322c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000befb322c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000befb322c from memory into f24
fsub.d f17, f21, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x430505ce # load x3 with 32 MSBs 0x00000000430505ce
sw x3, 0(x2) # store x3 (0x430505ce) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000430505ce
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000430505ce from memory into f13
fsub.d f21, f27, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
la x2, scratch
li x3, 0x564277ba # load x3 with 32 MSBs 0x00000000564277ba
sw x3, 0(x2) # store x3 (0x564277ba) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000564277ba
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000564277ba from memory into f11
fsub.d f8, f7, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
la x2, scratch
li x3, 0xf9c9df1d # load x3 with 32 MSBs 0x00000000f9c9df1d
sw x3, 0(x2) # store x3 (0xf9c9df1d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f9c9df1d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000f9c9df1d from memory into f17
fsub.d f29, f27, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
la x2, scratch
li x3, 0x817e1788 # load x3 with 32 MSBs 0x00000000817e1788
sw x3, 0(x2) # store x3 (0x817e1788) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000817e1788
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000817e1788 from memory into f5
fsub.d f17, f30, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
la x2, scratch
li x3, 0xfedd34d0 # load x3 with 32 MSBs 0x00000000fedd34d0
sw x3, 0(x2) # store x3 (0xfedd34d0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fedd34d0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000fedd34d0 from memory into f24
fsub.d f17, f19, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
la x2, scratch
li x3, 0x9e5643b5 # load x3 with 32 MSBs 0x000000009e5643b5
sw x3, 0(x2) # store x3 (0x9e5643b5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009e5643b5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009e5643b5 from memory into f29
fsub.d f24, f20, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
la x2, scratch
li x3, 0xa08b8971 # load x3 with 32 MSBs 0x00000000a08b8971
sw x3, 0(x2) # store x3 (0xa08b8971) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a08b8971
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000a08b8971 from memory into f26
fsub.d f11, f15, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0x7d847778 # load x3 with 32 MSBs 0x000000007d847778
sw x3, 0(x2) # store x3 (0x7d847778) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007d847778
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007d847778 from memory into f27
fsub.d f8, f5, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
la x2, scratch
li x3, 0xac3b1348 # load x3 with 32 MSBs 0x00000000ac3b1348
sw x3, 0(x2) # store x3 (0xac3b1348) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ac3b1348
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ac3b1348 from memory into f15
fsub.d f20, f28, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
la x2, scratch
li x3, 0x7f499425 # load x3 with 32 MSBs 0x000000007f499425
sw x3, 0(x2) # store x3 (0x7f499425) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007f499425
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000007f499425 from memory into f10
fsub.d f6, f3, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
la x2, scratch
li x3, 0x3eda05c3 # load x3 with 32 MSBs 0x000000003eda05c3
sw x3, 0(x2) # store x3 (0x3eda05c3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003eda05c3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000003eda05c3 from memory into f28
fsub.d f5, f19, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
la x2, scratch
li x3, 0x3eaa9038 # load x3 with 32 MSBs 0x000000003eaa9038
sw x3, 0(x2) # store x3 (0x3eaa9038) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003eaa9038
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000003eaa9038 from memory into f27
fsub.d f31, f11, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
la x2, scratch
li x3, 0x9bf46a89 # load x3 with 32 MSBs 0x000000009bf46a89
sw x3, 0(x2) # store x3 (0x9bf46a89) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009bf46a89
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009bf46a89 from memory into f16
fsub.d f17, f28, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
la x2, scratch
li x3, 0xc6a502c2 # load x3 with 32 MSBs 0x00000000c6a502c2
sw x3, 0(x2) # store x3 (0xc6a502c2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c6a502c2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c6a502c2 from memory into f22
fsub.d f15, f3, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
la x2, scratch
li x3, 0xf462ae8c # load x3 with 32 MSBs 0x00000000f462ae8c
sw x3, 0(x2) # store x3 (0xf462ae8c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f462ae8c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f462ae8c from memory into f28
fsub.d f29, f21, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff8000000000000 from memory into f13
la x2, scratch
li x3, 0xbd17b179 # load x3 with 32 MSBs 0x00000000bd17b179
sw x3, 0(x2) # store x3 (0xbd17b179) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bd17b179
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bd17b179 from memory into f22
fsub.d f24, f13, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000001 from memory into f27
la x2, scratch
li x3, 0x186bc4aa # load x3 with 32 MSBs 0x00000000186bc4aa
sw x3, 0(x2) # store x3 (0x186bc4aa) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000186bc4aa
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000186bc4aa from memory into f22
fsub.d f31, f27, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
la x2, scratch
li x3, 0x877c3f80 # load x3 with 32 MSBs 0x00000000877c3f80
sw x3, 0(x2) # store x3 (0x877c3f80) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000877c3f80
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000877c3f80 from memory into f16
fsub.d f31, f24, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
la x2, scratch
li x3, 0x18d5b224 # load x3 with 32 MSBs 0x0000000018d5b224
sw x3, 0(x2) # store x3 (0x18d5b224) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000018d5b224
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000018d5b224 from memory into f7
fsub.d f12, f22, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
la x2, scratch
li x3, 0xd516b459 # load x3 with 32 MSBs 0x00000000d516b459
sw x3, 0(x2) # store x3 (0xd516b459) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d516b459
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000d516b459 from memory into f28
fsub.d f24, f30, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
la x2, scratch
li x3, 0xfce74e85 # load x3 with 32 MSBs 0x00000000fce74e85
sw x3, 0(x2) # store x3 (0xfce74e85) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fce74e85
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000fce74e85 from memory into f27
fsub.d f12, f9, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x6fc5ed17 # load x3 with 32 MSBs 0x000000006fc5ed17
sw x3, 0(x2) # store x3 (0x6fc5ed17) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006fc5ed17
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000006fc5ed17 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fsub.d f29, f11, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
la x2, scratch
li x3, 0x4ebd834f # load x3 with 32 MSBs 0x000000004ebd834f
sw x3, 0(x2) # store x3 (0x4ebd834f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004ebd834f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004ebd834f from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f25, f13, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
la x2, scratch
li x3, 0x10fe2c54 # load x3 with 32 MSBs 0x0000000010fe2c54
sw x3, 0(x2) # store x3 (0x10fe2c54) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000010fe2c54
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000010fe2c54 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fsub.d f12, f17, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
la x2, scratch
li x3, 0xe9b5f792 # load x3 with 32 MSBs 0x00000000e9b5f792
sw x3, 0(x2) # store x3 (0xe9b5f792) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e9b5f792
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e9b5f792 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fsub.d f12, f28, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
la x2, scratch
li x3, 0xc8f0be1c # load x3 with 32 MSBs 0x00000000c8f0be1c
sw x3, 0(x2) # store x3 (0xc8f0be1c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c8f0be1c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c8f0be1c from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
fsub.d f8, f28, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
la x2, scratch
li x3, 0x25035f61 # load x3 with 32 MSBs 0x0000000025035f61
sw x3, 0(x2) # store x3 (0x25035f61) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000025035f61
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000025035f61 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fsub.d f7, f21, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
la x2, scratch
li x3, 0xda53adfb # load x3 with 32 MSBs 0x00000000da53adfb
sw x3, 0(x2) # store x3 (0xda53adfb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000da53adfb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000da53adfb from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fsub.d f16, f30, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
la x2, scratch
li x3, 0x5123eef7 # load x3 with 32 MSBs 0x000000005123eef7
sw x3, 0(x2) # store x3 (0x5123eef7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005123eef7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000005123eef7 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fsub.d f27, f6, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
la x2, scratch
li x3, 0x50f284e9 # load x3 with 32 MSBs 0x0000000050f284e9
sw x3, 0(x2) # store x3 (0x50f284e9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000050f284e9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000050f284e9 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fsub.d f14, f26, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
la x2, scratch
li x3, 0xe9fe0cde # load x3 with 32 MSBs 0x00000000e9fe0cde
sw x3, 0(x2) # store x3 (0xe9fe0cde) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e9fe0cde
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000e9fe0cde from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fsub.d f18, f12, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
la x2, scratch
li x3, 0x6bb0e625 # load x3 with 32 MSBs 0x000000006bb0e625
sw x3, 0(x2) # store x3 (0x6bb0e625) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006bb0e625
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006bb0e625 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fsub.d f8, f18, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
la x2, scratch
li x3, 0x0a5fba1f # load x3 with 32 MSBs 0x000000000a5fba1f
sw x3, 0(x2) # store x3 (0x0a5fba1f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000a5fba1f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000a5fba1f from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
fsub.d f20, f17, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
la x2, scratch
li x3, 0xf5a3e010 # load x3 with 32 MSBs 0x00000000f5a3e010
sw x3, 0(x2) # store x3 (0xf5a3e010) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f5a3e010
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f5a3e010 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fsub.d f24, f1, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
la x2, scratch
li x3, 0x98ab6f7e # load x3 with 32 MSBs 0x0000000098ab6f7e
sw x3, 0(x2) # store x3 (0x98ab6f7e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000098ab6f7e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000098ab6f7e from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fsub.d f22, f5, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
la x2, scratch
li x3, 0x78111c5f # load x3 with 32 MSBs 0x0000000078111c5f
sw x3, 0(x2) # store x3 (0x78111c5f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000078111c5f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000078111c5f from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
fsub.d f21, f27, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
la x2, scratch
li x3, 0x9ec2d7cb # load x3 with 32 MSBs 0x000000009ec2d7cb
sw x3, 0(x2) # store x3 (0x9ec2d7cb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ec2d7cb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009ec2d7cb from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fsub.d f28, f26, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0xd28cec78 # load x3 with 32 MSBs 0x00000000d28cec78
sw x3, 0(x2) # store x3 (0xd28cec78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d28cec78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000d28cec78 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
fsub.d f27, f17, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
la x2, scratch
li x3, 0xe2d8de05 # load x3 with 32 MSBs 0x00000000e2d8de05
sw x3, 0(x2) # store x3 (0xe2d8de05) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e2d8de05
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e2d8de05 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fsub.d f9, f27, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
la x2, scratch
li x3, 0x2a546f78 # load x3 with 32 MSBs 0x000000002a546f78
sw x3, 0(x2) # store x3 (0x2a546f78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002a546f78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000002a546f78 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fsub.d f10, f9, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
la x2, scratch
li x3, 0x9a11da64 # load x3 with 32 MSBs 0x000000009a11da64
sw x3, 0(x2) # store x3 (0x9a11da64) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009a11da64
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000009a11da64 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fsub.d f25, f29, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
la x2, scratch
li x3, 0x734625a6 # load x3 with 32 MSBs 0x00000000734625a6
sw x3, 0(x2) # store x3 (0x734625a6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000734625a6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000734625a6 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fsub.d f2, f29, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
la x2, scratch
li x3, 0x65535f3e # load x3 with 32 MSBs 0x0000000065535f3e
sw x3, 0(x2) # store x3 (0x65535f3e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000065535f3e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000065535f3e from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f7, f15, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff8000000000000)
la x2, scratch
li x3, 0xd787bd65 # load x3 with 32 MSBs 0x00000000d787bd65
sw x3, 0(x2) # store x3 (0xd787bd65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d787bd65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000d787bd65 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff8000000000000 from memory into f14
fsub.d f5, f28, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
la x2, scratch
li x3, 0x40268ce6 # load x3 with 32 MSBs 0x0000000040268ce6
sw x3, 0(x2) # store x3 (0x40268ce6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000040268ce6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000040268ce6 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fsub.d f9, f7, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
la x2, scratch
li x3, 0x4db91f49 # load x3 with 32 MSBs 0x000000004db91f49
sw x3, 0(x2) # store x3 (0x4db91f49) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004db91f49
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004db91f49 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fsub.d f12, f22, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000001)
la x2, scratch
li x3, 0x8cb3aa5c # load x3 with 32 MSBs 0x000000008cb3aa5c
sw x3, 0(x2) # store x3 (0x8cb3aa5c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008cb3aa5c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000008cb3aa5c from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000001 from memory into f5
fsub.d f24, f29, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
la x2, scratch
li x3, 0x33d0a94f # load x3 with 32 MSBs 0x0000000033d0a94f
sw x3, 0(x2) # store x3 (0x33d0a94f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000033d0a94f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000033d0a94f from memory into f9
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x5a392534a57711ad from memory into f22
fsub.d f18, f9, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
la x2, scratch
li x3, 0x1812566d # load x3 with 32 MSBs 0x000000001812566d
sw x3, 0(x2) # store x3 (0x1812566d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001812566d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001812566d from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fsub.d f11, f28, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x4431284e # load x3 with 32 MSBs 0x000000004431284e
sw x3, 0(x2) # store x3 (0x4431284e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004431284e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000004431284e from memory into f0
la x2, scratch
li x3, 0x05e39844 # load x3 with 32 MSBs 0x0000000005e39844
sw x3, 0(x2) # store x3 (0x05e39844) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000005e39844
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000005e39844 from memory into f17
fsub.d f0, f0, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x1103cd1b # load x3 with 32 MSBs 0x000000001103cd1b
sw x3, 0(x2) # store x3 (0x1103cd1b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001103cd1b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001103cd1b from memory into f1
la x2, scratch
li x3, 0xdd6c63e5 # load x3 with 32 MSBs 0x00000000dd6c63e5
sw x3, 0(x2) # store x3 (0xdd6c63e5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dd6c63e5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000dd6c63e5 from memory into f13
fsub.d f1, f1, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xbb4ba954 # load x3 with 32 MSBs 0x00000000bb4ba954
sw x3, 0(x2) # store x3 (0xbb4ba954) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bb4ba954
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000bb4ba954 from memory into f2
la x2, scratch
li x3, 0x7068f245 # load x3 with 32 MSBs 0x000000007068f245
sw x3, 0(x2) # store x3 (0x7068f245) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007068f245
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000007068f245 from memory into f31
fsub.d f2, f2, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x97fc45ef # load x3 with 32 MSBs 0x0000000097fc45ef
sw x3, 0(x2) # store x3 (0x97fc45ef) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000097fc45ef
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000097fc45ef from memory into f3
la x2, scratch
li x3, 0x78412249 # load x3 with 32 MSBs 0x0000000078412249
sw x3, 0(x2) # store x3 (0x78412249) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000078412249
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000078412249 from memory into f18
fsub.d f3, f3, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x02433c15 # load x3 with 32 MSBs 0x0000000002433c15
sw x3, 0(x2) # store x3 (0x02433c15) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000002433c15
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x0000000002433c15 from memory into f4
la x2, scratch
li x3, 0x7c14601e # load x3 with 32 MSBs 0x000000007c14601e
sw x3, 0(x2) # store x3 (0x7c14601e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007c14601e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007c14601e from memory into f13
fsub.d f4, f4, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa4240846 # load x3 with 32 MSBs 0x00000000a4240846
sw x3, 0(x2) # store x3 (0xa4240846) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a4240846
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a4240846 from memory into f5
la x2, scratch
li x3, 0x2b17c35d # load x3 with 32 MSBs 0x000000002b17c35d
sw x3, 0(x2) # store x3 (0x2b17c35d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002b17c35d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000002b17c35d from memory into f10
fsub.d f5, f5, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb1dee46e # load x3 with 32 MSBs 0x00000000b1dee46e
sw x3, 0(x2) # store x3 (0xb1dee46e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b1dee46e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b1dee46e from memory into f6
la x2, scratch
li x3, 0xe9704d57 # load x3 with 32 MSBs 0x00000000e9704d57
sw x3, 0(x2) # store x3 (0xe9704d57) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e9704d57
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000e9704d57 from memory into f23
fsub.d f6, f6, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7a1c2b88 # load x3 with 32 MSBs 0x000000007a1c2b88
sw x3, 0(x2) # store x3 (0x7a1c2b88) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007a1c2b88
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007a1c2b88 from memory into f7
la x2, scratch
li x3, 0x3d3f6e4f # load x3 with 32 MSBs 0x000000003d3f6e4f
sw x3, 0(x2) # store x3 (0x3d3f6e4f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003d3f6e4f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000003d3f6e4f from memory into f24
fsub.d f7, f7, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x2f8616ca # load x3 with 32 MSBs 0x000000002f8616ca
sw x3, 0(x2) # store x3 (0x2f8616ca) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002f8616ca
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002f8616ca from memory into f8
la x2, scratch
li x3, 0x0c129061 # load x3 with 32 MSBs 0x000000000c129061
sw x3, 0(x2) # store x3 (0x0c129061) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000c129061
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000c129061 from memory into f21
fsub.d f8, f8, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xfdbfeb0a # load x3 with 32 MSBs 0x00000000fdbfeb0a
sw x3, 0(x2) # store x3 (0xfdbfeb0a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fdbfeb0a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000fdbfeb0a from memory into f9
la x2, scratch
li x3, 0x1e17d2f2 # load x3 with 32 MSBs 0x000000001e17d2f2
sw x3, 0(x2) # store x3 (0x1e17d2f2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001e17d2f2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001e17d2f2 from memory into f17
fsub.d f9, f9, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0xeb2209d9 # load x3 with 32 MSBs 0x00000000eb2209d9
sw x3, 0(x2) # store x3 (0xeb2209d9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eb2209d9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000eb2209d9 from memory into f10
la x2, scratch
li x3, 0xed29d7d2 # load x3 with 32 MSBs 0x00000000ed29d7d2
sw x3, 0(x2) # store x3 (0xed29d7d2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ed29d7d2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ed29d7d2 from memory into f29
fsub.d f10, f10, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0xc9166e59 # load x3 with 32 MSBs 0x00000000c9166e59
sw x3, 0(x2) # store x3 (0xc9166e59) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c9166e59
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c9166e59 from memory into f11
la x2, scratch
li x3, 0x2e65f5a9 # load x3 with 32 MSBs 0x000000002e65f5a9
sw x3, 0(x2) # store x3 (0x2e65f5a9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002e65f5a9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002e65f5a9 from memory into f3
fsub.d f11, f11, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x1d14f8a0 # load x3 with 32 MSBs 0x000000001d14f8a0
sw x3, 0(x2) # store x3 (0x1d14f8a0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001d14f8a0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000001d14f8a0 from memory into f12
la x2, scratch
li x3, 0xebb681ce # load x3 with 32 MSBs 0x00000000ebb681ce
sw x3, 0(x2) # store x3 (0xebb681ce) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ebb681ce
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ebb681ce from memory into f12
fsub.d f12, f12, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x2eb6a7de # load x3 with 32 MSBs 0x000000002eb6a7de
sw x3, 0(x2) # store x3 (0x2eb6a7de) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002eb6a7de
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002eb6a7de from memory into f13
la x2, scratch
li x3, 0x8497adb1 # load x3 with 32 MSBs 0x000000008497adb1
sw x3, 0(x2) # store x3 (0x8497adb1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008497adb1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008497adb1 from memory into f12
fsub.d f13, f13, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x5dab4c77 # load x3 with 32 MSBs 0x000000005dab4c77
sw x3, 0(x2) # store x3 (0x5dab4c77) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005dab4c77
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005dab4c77 from memory into f14
la x2, scratch
li x3, 0x510b3d01 # load x3 with 32 MSBs 0x00000000510b3d01
sw x3, 0(x2) # store x3 (0x510b3d01) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000510b3d01
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000510b3d01 from memory into f3
fsub.d f14, f14, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x8d896a2e # load x3 with 32 MSBs 0x000000008d896a2e
sw x3, 0(x2) # store x3 (0x8d896a2e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008d896a2e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008d896a2e from memory into f15
la x2, scratch
li x3, 0x57daa4eb # load x3 with 32 MSBs 0x0000000057daa4eb
sw x3, 0(x2) # store x3 (0x57daa4eb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000057daa4eb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000057daa4eb from memory into f14
fsub.d f15, f15, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x457d7dde # load x3 with 32 MSBs 0x00000000457d7dde
sw x3, 0(x2) # store x3 (0x457d7dde) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000457d7dde
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000457d7dde from memory into f16
la x2, scratch
li x3, 0x853a4cef # load x3 with 32 MSBs 0x00000000853a4cef
sw x3, 0(x2) # store x3 (0x853a4cef) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000853a4cef
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000853a4cef from memory into f26
fsub.d f16, f16, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0x87de4eaf # load x3 with 32 MSBs 0x0000000087de4eaf
sw x3, 0(x2) # store x3 (0x87de4eaf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000087de4eaf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000087de4eaf from memory into f17
la x2, scratch
li x3, 0x8bce849b # load x3 with 32 MSBs 0x000000008bce849b
sw x3, 0(x2) # store x3 (0x8bce849b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008bce849b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008bce849b from memory into f15
fsub.d f17, f17, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0xc0a5a288 # load x3 with 32 MSBs 0x00000000c0a5a288
sw x3, 0(x2) # store x3 (0xc0a5a288) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c0a5a288
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c0a5a288 from memory into f18
la x2, scratch
li x3, 0x36d4606e # load x3 with 32 MSBs 0x0000000036d4606e
sw x3, 0(x2) # store x3 (0x36d4606e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000036d4606e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000036d4606e from memory into f9
fsub.d f18, f18, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x3c914598 # load x3 with 32 MSBs 0x000000003c914598
sw x3, 0(x2) # store x3 (0x3c914598) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003c914598
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000003c914598 from memory into f19
la x2, scratch
li x3, 0x4337a62c # load x3 with 32 MSBs 0x000000004337a62c
sw x3, 0(x2) # store x3 (0x4337a62c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004337a62c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004337a62c from memory into f16
fsub.d f19, f19, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x1a59dee2 # load x3 with 32 MSBs 0x000000001a59dee2
sw x3, 0(x2) # store x3 (0x1a59dee2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001a59dee2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000001a59dee2 from memory into f20
la x2, scratch
li x3, 0xa5b90907 # load x3 with 32 MSBs 0x00000000a5b90907
sw x3, 0(x2) # store x3 (0xa5b90907) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a5b90907
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a5b90907 from memory into f15
fsub.d f20, f20, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x0f4effff # load x3 with 32 MSBs 0x000000000f4effff
sw x3, 0(x2) # store x3 (0x0f4effff) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000f4effff
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000000f4effff from memory into f21
la x2, scratch
li x3, 0x62a4abf8 # load x3 with 32 MSBs 0x0000000062a4abf8
sw x3, 0(x2) # store x3 (0x62a4abf8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000062a4abf8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000062a4abf8 from memory into f9
fsub.d f21, f21, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x867f42c2 # load x3 with 32 MSBs 0x00000000867f42c2
sw x3, 0(x2) # store x3 (0x867f42c2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000867f42c2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000867f42c2 from memory into f22
la x2, scratch
li x3, 0x7bb8153c # load x3 with 32 MSBs 0x000000007bb8153c
sw x3, 0(x2) # store x3 (0x7bb8153c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007bb8153c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000007bb8153c from memory into f30
fsub.d f22, f22, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x37585bbc # load x3 with 32 MSBs 0x0000000037585bbc
sw x3, 0(x2) # store x3 (0x37585bbc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000037585bbc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000037585bbc from memory into f23
la x2, scratch
li x3, 0x217d7263 # load x3 with 32 MSBs 0x00000000217d7263
sw x3, 0(x2) # store x3 (0x217d7263) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000217d7263
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000217d7263 from memory into f2
fsub.d f23, f23, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xea3e33bc # load x3 with 32 MSBs 0x00000000ea3e33bc
sw x3, 0(x2) # store x3 (0xea3e33bc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ea3e33bc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000ea3e33bc from memory into f24
la x2, scratch
li x3, 0x1c59af3a # load x3 with 32 MSBs 0x000000001c59af3a
sw x3, 0(x2) # store x3 (0x1c59af3a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001c59af3a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000001c59af3a from memory into f3
fsub.d f24, f24, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xbdee5109 # load x3 with 32 MSBs 0x00000000bdee5109
sw x3, 0(x2) # store x3 (0xbdee5109) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bdee5109
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000bdee5109 from memory into f25
la x2, scratch
li x3, 0x44cedcc5 # load x3 with 32 MSBs 0x0000000044cedcc5
sw x3, 0(x2) # store x3 (0x44cedcc5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000044cedcc5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000044cedcc5 from memory into f25
fsub.d f25, f25, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0xe76cb992 # load x3 with 32 MSBs 0x00000000e76cb992
sw x3, 0(x2) # store x3 (0xe76cb992) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e76cb992
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000e76cb992 from memory into f26
la x2, scratch
li x3, 0x48bf4944 # load x3 with 32 MSBs 0x0000000048bf4944
sw x3, 0(x2) # store x3 (0x48bf4944) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000048bf4944
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000048bf4944 from memory into f30
fsub.d f26, f26, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0xd604d805 # load x3 with 32 MSBs 0x00000000d604d805
sw x3, 0(x2) # store x3 (0xd604d805) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d604d805
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d604d805 from memory into f27
la x2, scratch
li x3, 0x7ed97dfb # load x3 with 32 MSBs 0x000000007ed97dfb
sw x3, 0(x2) # store x3 (0x7ed97dfb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007ed97dfb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007ed97dfb from memory into f7
fsub.d f27, f27, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x593c8b78 # load x3 with 32 MSBs 0x00000000593c8b78
sw x3, 0(x2) # store x3 (0x593c8b78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000593c8b78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000593c8b78 from memory into f28
la x2, scratch
li x3, 0x38fe48ad # load x3 with 32 MSBs 0x0000000038fe48ad
sw x3, 0(x2) # store x3 (0x38fe48ad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000038fe48ad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000038fe48ad from memory into f31
fsub.d f28, f28, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x0a7cc8b1 # load x3 with 32 MSBs 0x000000000a7cc8b1
sw x3, 0(x2) # store x3 (0x0a7cc8b1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000a7cc8b1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000a7cc8b1 from memory into f29
la x2, scratch
li x3, 0xfa128e99 # load x3 with 32 MSBs 0x00000000fa128e99
sw x3, 0(x2) # store x3 (0xfa128e99) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fa128e99
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000fa128e99 from memory into f18
fsub.d f29, f29, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0xe7995f8a # load x3 with 32 MSBs 0x00000000e7995f8a
sw x3, 0(x2) # store x3 (0xe7995f8a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e7995f8a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000e7995f8a from memory into f30
la x2, scratch
li x3, 0x7d72849e # load x3 with 32 MSBs 0x000000007d72849e
sw x3, 0(x2) # store x3 (0x7d72849e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007d72849e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000007d72849e from memory into f13
fsub.d f30, f30, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x61b03cdc # load x3 with 32 MSBs 0x0000000061b03cdc
sw x3, 0(x2) # store x3 (0x61b03cdc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000061b03cdc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000061b03cdc from memory into f31
la x2, scratch
li x3, 0xa293aa50 # load x3 with 32 MSBs 0x00000000a293aa50
sw x3, 0(x2) # store x3 (0xa293aa50) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a293aa50
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000a293aa50 from memory into f14
fsub.d f31, f31, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0xd12d48c5 # load x3 with 32 MSBs 0x00000000d12d48c5
sw x3, 0(x2) # store x3 (0xd12d48c5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d12d48c5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000d12d48c5 from memory into f29
la x2, scratch
li x3, 0xec685778 # load x3 with 32 MSBs 0x00000000ec685778
sw x3, 0(x2) # store x3 (0xec685778) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ec685778
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000ec685778 from memory into f0
fsub.d f0, f29, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0xe768bbca # load x3 with 32 MSBs 0x00000000e768bbca
sw x3, 0(x2) # store x3 (0xe768bbca) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e768bbca
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000e768bbca from memory into f27
la x2, scratch
li x3, 0xd0aaf915 # load x3 with 32 MSBs 0x00000000d0aaf915
sw x3, 0(x2) # store x3 (0xd0aaf915) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d0aaf915
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d0aaf915 from memory into f1
fsub.d f1, f27, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x172a2b5e # load x3 with 32 MSBs 0x00000000172a2b5e
sw x3, 0(x2) # store x3 (0x172a2b5e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000172a2b5e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000172a2b5e from memory into f28
la x2, scratch
li x3, 0x126e5a10 # load x3 with 32 MSBs 0x00000000126e5a10
sw x3, 0(x2) # store x3 (0x126e5a10) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000126e5a10
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000126e5a10 from memory into f2
fsub.d f2, f28, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x26533553 # load x3 with 32 MSBs 0x0000000026533553
sw x3, 0(x2) # store x3 (0x26533553) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000026533553
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000026533553 from memory into f23
la x2, scratch
li x3, 0xd59d53f8 # load x3 with 32 MSBs 0x00000000d59d53f8
sw x3, 0(x2) # store x3 (0xd59d53f8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d59d53f8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d59d53f8 from memory into f3
fsub.d f3, f23, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xcf177bf8 # load x3 with 32 MSBs 0x00000000cf177bf8
sw x3, 0(x2) # store x3 (0xcf177bf8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cf177bf8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000cf177bf8 from memory into f28
la x2, scratch
li x3, 0xe03d93fa # load x3 with 32 MSBs 0x00000000e03d93fa
sw x3, 0(x2) # store x3 (0xe03d93fa) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e03d93fa
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000e03d93fa from memory into f4
fsub.d f4, f28, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x7fc6b863 # load x3 with 32 MSBs 0x000000007fc6b863
sw x3, 0(x2) # store x3 (0x7fc6b863) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007fc6b863
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000007fc6b863 from memory into f12
la x2, scratch
li x3, 0x162fb5ed # load x3 with 32 MSBs 0x00000000162fb5ed
sw x3, 0(x2) # store x3 (0x162fb5ed) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000162fb5ed
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000162fb5ed from memory into f5
fsub.d f5, f12, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x87ded5e6 # load x3 with 32 MSBs 0x0000000087ded5e6
sw x3, 0(x2) # store x3 (0x87ded5e6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000087ded5e6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000087ded5e6 from memory into f20
la x2, scratch
li x3, 0xb6986826 # load x3 with 32 MSBs 0x00000000b6986826
sw x3, 0(x2) # store x3 (0xb6986826) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b6986826
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b6986826 from memory into f6
fsub.d f6, f20, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x42ca4b51 # load x3 with 32 MSBs 0x0000000042ca4b51
sw x3, 0(x2) # store x3 (0x42ca4b51) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000042ca4b51
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000042ca4b51 from memory into f1
la x2, scratch
li x3, 0x26bcd552 # load x3 with 32 MSBs 0x0000000026bcd552
sw x3, 0(x2) # store x3 (0x26bcd552) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000026bcd552
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000026bcd552 from memory into f7
fsub.d f7, f1, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x4e032d85 # load x3 with 32 MSBs 0x000000004e032d85
sw x3, 0(x2) # store x3 (0x4e032d85) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004e032d85
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004e032d85 from memory into f9
la x2, scratch
li x3, 0x67e97849 # load x3 with 32 MSBs 0x0000000067e97849
sw x3, 0(x2) # store x3 (0x67e97849) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000067e97849
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000067e97849 from memory into f8
fsub.d f8, f9, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0xb4df8455 # load x3 with 32 MSBs 0x00000000b4df8455
sw x3, 0(x2) # store x3 (0xb4df8455) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b4df8455
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b4df8455 from memory into f22
la x2, scratch
li x3, 0xdd14d5fd # load x3 with 32 MSBs 0x00000000dd14d5fd
sw x3, 0(x2) # store x3 (0xdd14d5fd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dd14d5fd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000dd14d5fd from memory into f9
fsub.d f9, f22, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0xf56144db # load x3 with 32 MSBs 0x00000000f56144db
sw x3, 0(x2) # store x3 (0xf56144db) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f56144db
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000f56144db from memory into f24
la x2, scratch
li x3, 0x5538232b # load x3 with 32 MSBs 0x000000005538232b
sw x3, 0(x2) # store x3 (0x5538232b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005538232b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005538232b from memory into f10
fsub.d f10, f24, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xad53d24c # load x3 with 32 MSBs 0x00000000ad53d24c
sw x3, 0(x2) # store x3 (0xad53d24c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ad53d24c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ad53d24c from memory into f8
la x2, scratch
li x3, 0x9d5ef3af # load x3 with 32 MSBs 0x000000009d5ef3af
sw x3, 0(x2) # store x3 (0x9d5ef3af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009d5ef3af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000009d5ef3af from memory into f11
fsub.d f11, f8, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x5285c7c1 # load x3 with 32 MSBs 0x000000005285c7c1
sw x3, 0(x2) # store x3 (0x5285c7c1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005285c7c1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005285c7c1 from memory into f30
la x2, scratch
li x3, 0xb44356f6 # load x3 with 32 MSBs 0x00000000b44356f6
sw x3, 0(x2) # store x3 (0xb44356f6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b44356f6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000b44356f6 from memory into f12
fsub.d f12, f30, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x0de56599 # load x3 with 32 MSBs 0x000000000de56599
sw x3, 0(x2) # store x3 (0x0de56599) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000de56599
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000000de56599 from memory into f5
la x2, scratch
li x3, 0x51d4b8bc # load x3 with 32 MSBs 0x0000000051d4b8bc
sw x3, 0(x2) # store x3 (0x51d4b8bc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000051d4b8bc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000051d4b8bc from memory into f13
fsub.d f13, f5, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xfaf2c523 # load x3 with 32 MSBs 0x00000000faf2c523
sw x3, 0(x2) # store x3 (0xfaf2c523) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000faf2c523
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000faf2c523 from memory into f14
la x2, scratch
li x3, 0x6676bb3d # load x3 with 32 MSBs 0x000000006676bb3d
sw x3, 0(x2) # store x3 (0x6676bb3d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006676bb3d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000006676bb3d from memory into f14
fsub.d f14, f14, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0xc6c4ee9f # load x3 with 32 MSBs 0x00000000c6c4ee9f
sw x3, 0(x2) # store x3 (0xc6c4ee9f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c6c4ee9f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000c6c4ee9f from memory into f31
la x2, scratch
li x3, 0x68fae4d1 # load x3 with 32 MSBs 0x0000000068fae4d1
sw x3, 0(x2) # store x3 (0x68fae4d1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000068fae4d1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000068fae4d1 from memory into f15
fsub.d f15, f31, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xbdc74891 # load x3 with 32 MSBs 0x00000000bdc74891
sw x3, 0(x2) # store x3 (0xbdc74891) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bdc74891
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000bdc74891 from memory into f31
la x2, scratch
li x3, 0xac6fad49 # load x3 with 32 MSBs 0x00000000ac6fad49
sw x3, 0(x2) # store x3 (0xac6fad49) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ac6fad49
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000ac6fad49 from memory into f16
fsub.d f16, f31, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0x580327d5 # load x3 with 32 MSBs 0x00000000580327d5
sw x3, 0(x2) # store x3 (0x580327d5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000580327d5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000580327d5 from memory into f26
la x2, scratch
li x3, 0xaab82531 # load x3 with 32 MSBs 0x00000000aab82531
sw x3, 0(x2) # store x3 (0xaab82531) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000aab82531
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000aab82531 from memory into f17
fsub.d f17, f26, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xfaf16ddf # load x3 with 32 MSBs 0x00000000faf16ddf
sw x3, 0(x2) # store x3 (0xfaf16ddf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000faf16ddf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000faf16ddf from memory into f11
la x2, scratch
li x3, 0xc7ef58ab # load x3 with 32 MSBs 0x00000000c7ef58ab
sw x3, 0(x2) # store x3 (0xc7ef58ab) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c7ef58ab
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000c7ef58ab from memory into f18
fsub.d f18, f11, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x8d62ad91 # load x3 with 32 MSBs 0x000000008d62ad91
sw x3, 0(x2) # store x3 (0x8d62ad91) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008d62ad91
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000008d62ad91 from memory into f16
la x2, scratch
li x3, 0x28245329 # load x3 with 32 MSBs 0x0000000028245329
sw x3, 0(x2) # store x3 (0x28245329) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000028245329
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000028245329 from memory into f19
fsub.d f19, f16, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0xc02e19d3 # load x3 with 32 MSBs 0x00000000c02e19d3
sw x3, 0(x2) # store x3 (0xc02e19d3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c02e19d3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c02e19d3 from memory into f25
la x2, scratch
li x3, 0xefd59277 # load x3 with 32 MSBs 0x00000000efd59277
sw x3, 0(x2) # store x3 (0xefd59277) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000efd59277
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000efd59277 from memory into f20
fsub.d f20, f25, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xad8a50a6 # load x3 with 32 MSBs 0x00000000ad8a50a6
sw x3, 0(x2) # store x3 (0xad8a50a6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ad8a50a6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000ad8a50a6 from memory into f11
la x2, scratch
li x3, 0xd66edf65 # load x3 with 32 MSBs 0x00000000d66edf65
sw x3, 0(x2) # store x3 (0xd66edf65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d66edf65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d66edf65 from memory into f21
fsub.d f21, f11, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x1d380ab9 # load x3 with 32 MSBs 0x000000001d380ab9
sw x3, 0(x2) # store x3 (0x1d380ab9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001d380ab9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000001d380ab9 from memory into f1
la x2, scratch
li x3, 0xd77cc496 # load x3 with 32 MSBs 0x00000000d77cc496
sw x3, 0(x2) # store x3 (0xd77cc496) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d77cc496
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000d77cc496 from memory into f22
fsub.d f22, f1, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0xc76e8310 # load x3 with 32 MSBs 0x00000000c76e8310
sw x3, 0(x2) # store x3 (0xc76e8310) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c76e8310
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000c76e8310 from memory into f28
la x2, scratch
li x3, 0x8f283d3c # load x3 with 32 MSBs 0x000000008f283d3c
sw x3, 0(x2) # store x3 (0x8f283d3c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008f283d3c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000008f283d3c from memory into f23
fsub.d f23, f28, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0x140fc579 # load x3 with 32 MSBs 0x00000000140fc579
sw x3, 0(x2) # store x3 (0x140fc579) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000140fc579
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000140fc579 from memory into f23
la x2, scratch
li x3, 0xb8b55338 # load x3 with 32 MSBs 0x00000000b8b55338
sw x3, 0(x2) # store x3 (0xb8b55338) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b8b55338
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000b8b55338 from memory into f24
fsub.d f24, f23, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x0ff1311c # load x3 with 32 MSBs 0x000000000ff1311c
sw x3, 0(x2) # store x3 (0x0ff1311c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000ff1311c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000000ff1311c from memory into f24
la x2, scratch
li x3, 0x02bbcf44 # load x3 with 32 MSBs 0x0000000002bbcf44
sw x3, 0(x2) # store x3 (0x02bbcf44) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000002bbcf44
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000002bbcf44 from memory into f25
fsub.d f25, f24, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x9168e922 # load x3 with 32 MSBs 0x000000009168e922
sw x3, 0(x2) # store x3 (0x9168e922) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009168e922
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009168e922 from memory into f18
la x2, scratch
li x3, 0xd4207917 # load x3 with 32 MSBs 0x00000000d4207917
sw x3, 0(x2) # store x3 (0xd4207917) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d4207917
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000d4207917 from memory into f26
fsub.d f26, f18, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0xe519b293 # load x3 with 32 MSBs 0x00000000e519b293
sw x3, 0(x2) # store x3 (0xe519b293) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e519b293
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000e519b293 from memory into f5
la x2, scratch
li x3, 0x811c5354 # load x3 with 32 MSBs 0x00000000811c5354
sw x3, 0(x2) # store x3 (0x811c5354) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000811c5354
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000811c5354 from memory into f27
fsub.d f27, f5, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x6807ea13 # load x3 with 32 MSBs 0x000000006807ea13
sw x3, 0(x2) # store x3 (0x6807ea13) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006807ea13
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000006807ea13 from memory into f18
la x2, scratch
li x3, 0x01b25d73 # load x3 with 32 MSBs 0x0000000001b25d73
sw x3, 0(x2) # store x3 (0x01b25d73) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000001b25d73
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000001b25d73 from memory into f28
fsub.d f28, f18, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0x68fd1e93 # load x3 with 32 MSBs 0x0000000068fd1e93
sw x3, 0(x2) # store x3 (0x68fd1e93) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000068fd1e93
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000068fd1e93 from memory into f10
la x2, scratch
li x3, 0x774234bc # load x3 with 32 MSBs 0x00000000774234bc
sw x3, 0(x2) # store x3 (0x774234bc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000774234bc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000774234bc from memory into f29
fsub.d f29, f10, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x15a28cbc # load x3 with 32 MSBs 0x0000000015a28cbc
sw x3, 0(x2) # store x3 (0x15a28cbc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000015a28cbc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000015a28cbc from memory into f24
la x2, scratch
li x3, 0x08ee0dc2 # load x3 with 32 MSBs 0x0000000008ee0dc2
sw x3, 0(x2) # store x3 (0x08ee0dc2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000008ee0dc2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000008ee0dc2 from memory into f30
fsub.d f30, f24, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x14867710 # load x3 with 32 MSBs 0x0000000014867710
sw x3, 0(x2) # store x3 (0x14867710) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000014867710
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000014867710 from memory into f14
la x2, scratch
li x3, 0x4326037c # load x3 with 32 MSBs 0x000000004326037c
sw x3, 0(x2) # store x3 (0x4326037c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004326037c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000004326037c from memory into f31
fsub.d f31, f14, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x8e0f7b78 # load x3 with 32 MSBs 0x000000008e0f7b78
sw x3, 0(x2) # store x3 (0x8e0f7b78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008e0f7b78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000008e0f7b78 from memory into f3
la x2, scratch
li x3, 0x5431a934 # load x3 with 32 MSBs 0x000000005431a934
sw x3, 0(x2) # store x3 (0x5431a934) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005431a934
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005431a934 from memory into f14
fsub.d f12, f3, f14, dyn # perform operation
fsub.d f12, f3, f14, rdn # perform operation
fsub.d f12, f3, f14, rmm # perform operation
fsub.d f12, f3, f14, rne # perform operation
fsub.d f12, f3, f14, rtz # perform operation
fsub.d f12, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fsub.d f8, f23, f31, dyn # perform operation
fsub.d f8, f23, f31, rdn # perform operation
fsub.d f8, f23, f31, rmm # perform operation
fsub.d f8, f23, f31, rne # perform operation
fsub.d f8, f23, f31, rtz # perform operation
fsub.d f8, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000000 from memory into f8
fsub.d f7, f15, f8, dyn # perform operation
fsub.d f7, f15, f8, rdn # perform operation
fsub.d f7, f15, f8, rmm # perform operation
fsub.d f7, f15, f8, rne # perform operation
fsub.d f7, f15, f8, rtz # perform operation
fsub.d f7, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fsub.d f15, f23, f14, dyn # perform operation
fsub.d f15, f23, f14, rdn # perform operation
fsub.d f15, f23, f14, rmm # perform operation
fsub.d f15, f23, f14, rne # perform operation
fsub.d f15, f23, f14, rtz # perform operation
fsub.d f15, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fsub.d f1, f30, f13, dyn # perform operation
fsub.d f1, f30, f13, rdn # perform operation
fsub.d f1, f30, f13, rmm # perform operation
fsub.d f1, f30, f13, rne # perform operation
fsub.d f1, f30, f13, rtz # perform operation
fsub.d f1, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fsub.d f9, f30, f13, dyn # perform operation
fsub.d f9, f30, f13, rdn # perform operation
fsub.d f9, f30, f13, rmm # perform operation
fsub.d f9, f30, f13, rne # perform operation
fsub.d f9, f30, f13, rtz # perform operation
fsub.d f9, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fsub.d f15, f8, f11, dyn # perform operation
fsub.d f15, f8, f11, rdn # perform operation
fsub.d f15, f8, f11, rmm # perform operation
fsub.d f15, f8, f11, rne # perform operation
fsub.d f15, f8, f11, rtz # perform operation
fsub.d f15, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
fsub.d f5, f14, f1, dyn # perform operation
fsub.d f5, f14, f1, rdn # perform operation
fsub.d f5, f14, f1, rmm # perform operation
fsub.d f5, f14, f1, rne # perform operation
fsub.d f5, f14, f1, rtz # perform operation
fsub.d f5, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
fsub.d f28, f31, f16, dyn # perform operation
fsub.d f28, f31, f16, rdn # perform operation
fsub.d f28, f31, f16, rmm # perform operation
fsub.d f28, f31, f16, rne # perform operation
fsub.d f28, f31, f16, rtz # perform operation
fsub.d f28, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fsub.d f27, f8, f21, dyn # perform operation
fsub.d f27, f8, f21, rdn # perform operation
fsub.d f27, f8, f21, rmm # perform operation
fsub.d f27, f8, f21, rne # perform operation
fsub.d f27, f8, f21, rtz # perform operation
fsub.d f27, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fsub.d f25, f6, f21, dyn # perform operation
fsub.d f25, f6, f21, rdn # perform operation
fsub.d f25, f6, f21, rmm # perform operation
fsub.d f25, f6, f21, rne # perform operation
fsub.d f25, f6, f21, rtz # perform operation
fsub.d f25, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fsub.d f20, f1, f6, dyn # perform operation
fsub.d f20, f1, f6, rdn # perform operation
fsub.d f20, f1, f6, rmm # perform operation
fsub.d f20, f1, f6, rne # perform operation
fsub.d f20, f1, f6, rtz # perform operation
fsub.d f20, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fsub.d f31, f26, f20, dyn # perform operation
fsub.d f31, f26, f20, rdn # perform operation
fsub.d f31, f26, f20, rmm # perform operation
fsub.d f31, f26, f20, rne # perform operation
fsub.d f31, f26, f20, rtz # perform operation
fsub.d f31, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fsub.d f27, f20, f1, dyn # perform operation
fsub.d f27, f20, f1, rdn # perform operation
fsub.d f27, f20, f1, rmm # perform operation
fsub.d f27, f20, f1, rne # perform operation
fsub.d f27, f20, f1, rtz # perform operation
fsub.d f27, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fsub.d f20, f12, f3, dyn # perform operation
fsub.d f20, f12, f3, rdn # perform operation
fsub.d f20, f12, f3, rmm # perform operation
fsub.d f20, f12, f3, rne # perform operation
fsub.d f20, f12, f3, rtz # perform operation
fsub.d f20, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fsub.d f18, f20, f2, dyn # perform operation
fsub.d f18, f20, f2, rdn # perform operation
fsub.d f18, f20, f2, rmm # perform operation
fsub.d f18, f20, f2, rne # perform operation
fsub.d f18, f20, f2, rtz # perform operation
fsub.d f18, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fsub.d f21, f31, f15, dyn # perform operation
fsub.d f21, f31, f15, rdn # perform operation
fsub.d f21, f31, f15, rmm # perform operation
fsub.d f21, f31, f15, rne # perform operation
fsub.d f21, f31, f15, rtz # perform operation
fsub.d f21, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fsub.d f31, f2, f18, dyn # perform operation
fsub.d f31, f2, f18, rdn # perform operation
fsub.d f31, f2, f18, rmm # perform operation
fsub.d f31, f2, f18, rne # perform operation
fsub.d f31, f2, f18, rtz # perform operation
fsub.d f31, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fsub.d f25, f7, f9, dyn # perform operation
fsub.d f25, f7, f9, rdn # perform operation
fsub.d f25, f7, f9, rmm # perform operation
fsub.d f25, f7, f9, rne # perform operation
fsub.d f25, f7, f9, rtz # perform operation
fsub.d f25, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fsub.d f19, f22, f30, dyn # perform operation
fsub.d f19, f22, f30, rdn # perform operation
fsub.d f19, f22, f30, rmm # perform operation
fsub.d f19, f22, f30, rne # perform operation
fsub.d f19, f22, f30, rtz # perform operation
fsub.d f19, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fsub.d f12, f26, f16, dyn # perform operation
fsub.d f12, f26, f16, rdn # perform operation
fsub.d f12, f26, f16, rmm # perform operation
fsub.d f12, f26, f16, rne # perform operation
fsub.d f12, f26, f16, rtz # perform operation
fsub.d f12, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fsub.d f31, f1, f20, dyn # perform operation
fsub.d f31, f1, f20, rdn # perform operation
fsub.d f31, f1, f20, rmm # perform operation
fsub.d f31, f1, f20, rne # perform operation
fsub.d f31, f1, f20, rtz # perform operation
fsub.d f31, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f1, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fsub.d f1, f19, f26, dyn # perform operation
fsub.d f1, f19, f26, rdn # perform operation
fsub.d f1, f19, f26, rmm # perform operation
fsub.d f1, f19, f26, rne # perform operation
fsub.d f1, f19, f26, rtz # perform operation
fsub.d f1, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff8000000000000 from memory into f21
fsub.d f24, f20, f21, dyn # perform operation
fsub.d f24, f20, f21, rdn # perform operation
fsub.d f24, f20, f21, rmm # perform operation
fsub.d f24, f20, f21, rne # perform operation
fsub.d f24, f20, f21, rtz # perform operation
fsub.d f24, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f20, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fsub.d f7, f26, f6, dyn # perform operation
fsub.d f7, f26, f6, rdn # perform operation
fsub.d f7, f26, f6, rmm # perform operation
fsub.d f7, f26, f6, rne # perform operation
fsub.d f7, f26, f6, rtz # perform operation
fsub.d f7, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fsub.d f28, f15, f16, dyn # perform operation
fsub.d f28, f15, f16, rdn # perform operation
fsub.d f28, f15, f16, rmm # perform operation
fsub.d f28, f15, f16, rne # perform operation
fsub.d f28, f15, f16, rtz # perform operation
fsub.d f28, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000001 from memory into f27
fsub.d f9, f19, f27, dyn # perform operation
fsub.d f9, f19, f27, rdn # perform operation
fsub.d f9, f19, f27, rmm # perform operation
fsub.d f9, f19, f27, rne # perform operation
fsub.d f9, f19, f27, rtz # perform operation
fsub.d f9, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fsub.d f12, f24, f29, dyn # perform operation
fsub.d f12, f24, f29, rdn # perform operation
fsub.d f12, f24, f29, rmm # perform operation
fsub.d f12, f24, f29, rne # perform operation
fsub.d f12, f24, f29, rtz # perform operation
fsub.d f12, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
fsub.d f14, f17, f23, dyn # perform operation
fsub.d f14, f17, f23, rdn # perform operation
fsub.d f14, f17, f23, rmm # perform operation
fsub.d f14, f17, f23, rne # perform operation
fsub.d f14, f17, f23, rtz # perform operation
fsub.d f14, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000000 from memory into f9
fsub.d f24, f30, f9, dyn # perform operation
fsub.d f24, f30, f9, rdn # perform operation
fsub.d f24, f30, f9, rmm # perform operation
fsub.d f24, f30, f9, rne # perform operation
fsub.d f24, f30, f9, rtz # perform operation
fsub.d f24, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fsub.d f8, f6, f1, dyn # perform operation
fsub.d f8, f6, f1, rdn # perform operation
fsub.d f8, f6, f1, rmm # perform operation
fsub.d f8, f6, f1, rne # perform operation
fsub.d f8, f6, f1, rtz # perform operation
fsub.d f8, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fsub.d f21, f26, f5, dyn # perform operation
fsub.d f21, f26, f5, rdn # perform operation
fsub.d f21, f26, f5, rmm # perform operation
fsub.d f21, f26, f5, rne # perform operation
fsub.d f21, f26, f5, rtz # perform operation
fsub.d f21, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fsub.d f13, f2, f7, dyn # perform operation
fsub.d f13, f2, f7, rdn # perform operation
fsub.d f13, f2, f7, rmm # perform operation
fsub.d f13, f2, f7, rne # perform operation
fsub.d f13, f2, f7, rtz # perform operation
fsub.d f13, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fsub.d f22, f15, f27, dyn # perform operation
fsub.d f22, f15, f27, rdn # perform operation
fsub.d f22, f15, f27, rmm # perform operation
fsub.d f22, f15, f27, rne # perform operation
fsub.d f22, f15, f27, rtz # perform operation
fsub.d f22, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fsub.d f2, f1, f27, dyn # perform operation
fsub.d f2, f1, f27, rdn # perform operation
fsub.d f2, f1, f27, rmm # perform operation
fsub.d f2, f1, f27, rne # perform operation
fsub.d f2, f1, f27, rtz # perform operation
fsub.d f2, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fsub.d f12, f14, f18, dyn # perform operation
fsub.d f12, f14, f18, rdn # perform operation
fsub.d f12, f14, f18, rmm # perform operation
fsub.d f12, f14, f18, rne # perform operation
fsub.d f12, f14, f18, rtz # perform operation
fsub.d f12, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fsub.d f25, f6, f27, dyn # perform operation
fsub.d f25, f6, f27, rdn # perform operation
fsub.d f25, f6, f27, rmm # perform operation
fsub.d f25, f6, f27, rne # perform operation
fsub.d f25, f6, f27, rtz # perform operation
fsub.d f25, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
fsub.d f12, f1, f2, dyn # perform operation
fsub.d f12, f1, f2, rdn # perform operation
fsub.d f12, f1, f2, rmm # perform operation
fsub.d f12, f1, f2, rne # perform operation
fsub.d f12, f1, f2, rtz # perform operation
fsub.d f12, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fsub.d f16, f2, f30, dyn # perform operation
fsub.d f16, f2, f30, rdn # perform operation
fsub.d f16, f2, f30, rmm # perform operation
fsub.d f16, f2, f30, rne # perform operation
fsub.d f16, f2, f30, rtz # perform operation
fsub.d f16, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fsub.d f16, f5, f23, dyn # perform operation
fsub.d f16, f5, f23, rdn # perform operation
fsub.d f16, f5, f23, rmm # perform operation
fsub.d f16, f5, f23, rne # perform operation
fsub.d f16, f5, f23, rtz # perform operation
fsub.d f16, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fsub.d f11, f21, f3, dyn # perform operation
fsub.d f11, f21, f3, rdn # perform operation
fsub.d f11, f21, f3, rmm # perform operation
fsub.d f11, f21, f3, rne # perform operation
fsub.d f11, f21, f3, rtz # perform operation
fsub.d f11, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fsub.d f18, f27, f14, dyn # perform operation
fsub.d f18, f27, f14, rdn # perform operation
fsub.d f18, f27, f14, rmm # perform operation
fsub.d f18, f27, f14, rne # perform operation
fsub.d f18, f27, f14, rtz # perform operation
fsub.d f18, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fsub.d f3, f19, f27, dyn # perform operation
fsub.d f3, f19, f27, rdn # perform operation
fsub.d f3, f19, f27, rmm # perform operation
fsub.d f3, f19, f27, rne # perform operation
fsub.d f3, f19, f27, rtz # perform operation
fsub.d f3, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fsub.d f8, f21, f29, dyn # perform operation
fsub.d f8, f21, f29, rdn # perform operation
fsub.d f8, f21, f29, rmm # perform operation
fsub.d f8, f21, f29, rne # perform operation
fsub.d f8, f21, f29, rtz # perform operation
fsub.d f8, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fsub.d f28, f7, f1, dyn # perform operation
fsub.d f28, f7, f1, rdn # perform operation
fsub.d f28, f7, f1, rmm # perform operation
fsub.d f28, f7, f1, rne # perform operation
fsub.d f28, f7, f1, rtz # perform operation
fsub.d f28, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fsub.d f17, f11, f7, dyn # perform operation
fsub.d f17, f11, f7, rdn # perform operation
fsub.d f17, f11, f7, rmm # perform operation
fsub.d f17, f11, f7, rne # perform operation
fsub.d f17, f11, f7, rtz # perform operation
fsub.d f17, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
fsub.d f19, f27, f7, dyn # perform operation
fsub.d f19, f27, f7, rdn # perform operation
fsub.d f19, f27, f7, rmm # perform operation
fsub.d f19, f27, f7, rne # perform operation
fsub.d f19, f27, f7, rtz # perform operation
fsub.d f19, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fsub.d f27, f10, f21, dyn # perform operation
fsub.d f27, f10, f21, rdn # perform operation
fsub.d f27, f10, f21, rmm # perform operation
fsub.d f27, f10, f21, rne # perform operation
fsub.d f27, f10, f21, rtz # perform operation
fsub.d f27, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fsub.d f26, f13, f20, dyn # perform operation
fsub.d f26, f13, f20, rdn # perform operation
fsub.d f26, f13, f20, rmm # perform operation
fsub.d f26, f13, f20, rne # perform operation
fsub.d f26, f13, f20, rtz # perform operation
fsub.d f26, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
fsub.d f31, f10, f1, dyn # perform operation
fsub.d f31, f10, f1, rdn # perform operation
fsub.d f31, f10, f1, rmm # perform operation
fsub.d f31, f10, f1, rne # perform operation
fsub.d f31, f10, f1, rtz # perform operation
fsub.d f31, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fsub.d f10, f28, f31, dyn # perform operation
fsub.d f10, f28, f31, rdn # perform operation
fsub.d f10, f28, f31, rmm # perform operation
fsub.d f10, f28, f31, rne # perform operation
fsub.d f10, f28, f31, rtz # perform operation
fsub.d f10, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff8000000000000 from memory into f7
fsub.d f8, f5, f7, dyn # perform operation
fsub.d f8, f5, f7, rdn # perform operation
fsub.d f8, f5, f7, rmm # perform operation
fsub.d f8, f5, f7, rne # perform operation
fsub.d f8, f5, f7, rtz # perform operation
fsub.d f8, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f5, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fsub.d f12, f14, f29, dyn # perform operation
fsub.d f12, f14, f29, rdn # perform operation
fsub.d f12, f14, f29, rmm # perform operation
fsub.d f12, f14, f29, rne # perform operation
fsub.d f12, f14, f29, rtz # perform operation
fsub.d f12, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fsub.d f17, f15, f13, dyn # perform operation
fsub.d f17, f15, f13, rdn # perform operation
fsub.d f17, f15, f13, rmm # perform operation
fsub.d f17, f15, f13, rne # perform operation
fsub.d f17, f15, f13, rtz # perform operation
fsub.d f17, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
fsub.d f16, f7, f25, dyn # perform operation
fsub.d f16, f7, f25, rdn # perform operation
fsub.d f16, f7, f25, rmm # perform operation
fsub.d f16, f7, f25, rne # perform operation
fsub.d f16, f7, f25, rtz # perform operation
fsub.d f16, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fsub.d f13, f16, f19, dyn # perform operation
fsub.d f13, f16, f19, rdn # perform operation
fsub.d f13, f16, f19, rmm # perform operation
fsub.d f13, f16, f19, rne # perform operation
fsub.d f13, f16, f19, rtz # perform operation
fsub.d f13, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fsub.d f24, f27, f17, dyn # perform operation
fsub.d f24, f27, f17, rdn # perform operation
fsub.d f24, f27, f17, rmm # perform operation
fsub.d f24, f27, f17, rne # perform operation
fsub.d f24, f27, f17, rtz # perform operation
fsub.d f24, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fsub.d f30, f1, f27, dyn # perform operation
fsub.d f30, f1, f27, rdn # perform operation
fsub.d f30, f1, f27, rmm # perform operation
fsub.d f30, f1, f27, rne # perform operation
fsub.d f30, f1, f27, rtz # perform operation
fsub.d f30, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fsub.d f12, f6, f10, dyn # perform operation
fsub.d f12, f6, f10, rdn # perform operation
fsub.d f12, f6, f10, rmm # perform operation
fsub.d f12, f6, f10, rne # perform operation
fsub.d f12, f6, f10, rtz # perform operation
fsub.d f12, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fsub.d f3, f9, f24, dyn # perform operation
fsub.d f3, f9, f24, rdn # perform operation
fsub.d f3, f9, f24, rmm # perform operation
fsub.d f3, f9, f24, rne # perform operation
fsub.d f3, f9, f24, rtz # perform operation
fsub.d f3, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fsub.d f19, f22, f31, dyn # perform operation
fsub.d f19, f22, f31, rdn # perform operation
fsub.d f19, f22, f31, rmm # perform operation
fsub.d f19, f22, f31, rne # perform operation
fsub.d f19, f22, f31, rtz # perform operation
fsub.d f19, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fsub.d f5, f6, f12, dyn # perform operation
fsub.d f5, f6, f12, rdn # perform operation
fsub.d f5, f6, f12, rmm # perform operation
fsub.d f5, f6, f12, rne # perform operation
fsub.d f5, f6, f12, rtz # perform operation
fsub.d f5, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fsub.d f14, f9, f16, dyn # perform operation
fsub.d f14, f9, f16, rdn # perform operation
fsub.d f14, f9, f16, rmm # perform operation
fsub.d f14, f9, f16, rne # perform operation
fsub.d f14, f9, f16, rtz # perform operation
fsub.d f14, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fsub.d f1, f23, f30, dyn # perform operation
fsub.d f1, f23, f30, rdn # perform operation
fsub.d f1, f23, f30, rmm # perform operation
fsub.d f1, f23, f30, rne # perform operation
fsub.d f1, f23, f30, rtz # perform operation
fsub.d f1, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fsub.d f1, f21, f15, dyn # perform operation
fsub.d f1, f21, f15, rdn # perform operation
fsub.d f1, f21, f15, rmm # perform operation
fsub.d f1, f21, f15, rne # perform operation
fsub.d f1, f21, f15, rtz # perform operation
fsub.d f1, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fsub.d f20, f1, f24, dyn # perform operation
fsub.d f20, f1, f24, rdn # perform operation
fsub.d f20, f1, f24, rmm # perform operation
fsub.d f20, f1, f24, rne # perform operation
fsub.d f20, f1, f24, rtz # perform operation
fsub.d f20, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fsub.d f3, f20, f26, dyn # perform operation
fsub.d f3, f20, f26, rdn # perform operation
fsub.d f3, f20, f26, rmm # perform operation
fsub.d f3, f20, f26, rne # perform operation
fsub.d f3, f20, f26, rtz # perform operation
fsub.d f3, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fsub.d f10, f1, f7, dyn # perform operation
fsub.d f10, f1, f7, rdn # perform operation
fsub.d f10, f1, f7, rmm # perform operation
fsub.d f10, f1, f7, rne # perform operation
fsub.d f10, f1, f7, rtz # perform operation
fsub.d f10, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fsub.d f11, f23, f5, dyn # perform operation
fsub.d f11, f23, f5, rdn # perform operation
fsub.d f11, f23, f5, rmm # perform operation
fsub.d f11, f23, f5, rne # perform operation
fsub.d f11, f23, f5, rtz # perform operation
fsub.d f11, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fsub.d f28, f7, f9, dyn # perform operation
fsub.d f28, f7, f9, rdn # perform operation
fsub.d f28, f7, f9, rmm # perform operation
fsub.d f28, f7, f9, rne # perform operation
fsub.d f28, f7, f9, rtz # perform operation
fsub.d f28, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fsub.d f6, f9, f12, dyn # perform operation
fsub.d f6, f9, f12, rdn # perform operation
fsub.d f6, f9, f12, rmm # perform operation
fsub.d f6, f9, f12, rne # perform operation
fsub.d f6, f9, f12, rtz # perform operation
fsub.d f6, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fsub.d f16, f18, f2, dyn # perform operation
fsub.d f16, f18, f2, rdn # perform operation
fsub.d f16, f18, f2, rmm # perform operation
fsub.d f16, f18, f2, rne # perform operation
fsub.d f16, f18, f2, rtz # perform operation
fsub.d f16, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fsub.d f28, f7, f19, dyn # perform operation
fsub.d f28, f7, f19, rdn # perform operation
fsub.d f28, f7, f19, rmm # perform operation
fsub.d f28, f7, f19, rne # perform operation
fsub.d f28, f7, f19, rtz # perform operation
fsub.d f28, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fsub.d f8, f31, f2, dyn # perform operation
fsub.d f8, f31, f2, rdn # perform operation
fsub.d f8, f31, f2, rmm # perform operation
fsub.d f8, f31, f2, rne # perform operation
fsub.d f8, f31, f2, rtz # perform operation
fsub.d f8, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fsub.d f26, f17, f31, dyn # perform operation
fsub.d f26, f17, f31, rdn # perform operation
fsub.d f26, f17, f31, rmm # perform operation
fsub.d f26, f17, f31, rne # perform operation
fsub.d f26, f17, f31, rtz # perform operation
fsub.d f26, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fsub.d f12, f13, f31, dyn # perform operation
fsub.d f12, f13, f31, rdn # perform operation
fsub.d f12, f13, f31, rmm # perform operation
fsub.d f12, f13, f31, rne # perform operation
fsub.d f12, f13, f31, rtz # perform operation
fsub.d f12, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f13, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fsub.d f25, f23, f16, dyn # perform operation
fsub.d f25, f23, f16, rdn # perform operation
fsub.d f25, f23, f16, rmm # perform operation
fsub.d f25, f23, f16, rne # perform operation
fsub.d f25, f23, f16, rtz # perform operation
fsub.d f25, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f23, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fsub.d f1, f17, f23, dyn # perform operation
fsub.d f1, f17, f23, rdn # perform operation
fsub.d f1, f17, f23, rmm # perform operation
fsub.d f1, f17, f23, rne # perform operation
fsub.d f1, f17, f23, rtz # perform operation
fsub.d f1, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f15, f23, f25, dyn # perform operation
fsub.d f15, f23, f25, rdn # perform operation
fsub.d f15, f23, f25, rmm # perform operation
fsub.d f15, f23, f25, rne # perform operation
fsub.d f15, f23, f25, rtz # perform operation
fsub.d f15, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fsub.d f12, f9, f1, dyn # perform operation
fsub.d f12, f9, f1, rdn # perform operation
fsub.d f12, f9, f1, rmm # perform operation
fsub.d f12, f9, f1, rne # perform operation
fsub.d f12, f9, f1, rtz # perform operation
fsub.d f12, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fsub.d f6, f23, f18, dyn # perform operation
fsub.d f6, f23, f18, rdn # perform operation
fsub.d f6, f23, f18, rmm # perform operation
fsub.d f6, f23, f18, rne # perform operation
fsub.d f6, f23, f18, rtz # perform operation
fsub.d f6, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fsub.d f30, f19, f11, dyn # perform operation
fsub.d f30, f19, f11, rdn # perform operation
fsub.d f30, f19, f11, rmm # perform operation
fsub.d f30, f19, f11, rne # perform operation
fsub.d f30, f19, f11, rtz # perform operation
fsub.d f30, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000001 from memory into f17
fsub.d f15, f25, f17, dyn # perform operation
fsub.d f15, f25, f17, rdn # perform operation
fsub.d f15, f25, f17, rmm # perform operation
fsub.d f15, f25, f17, rne # perform operation
fsub.d f15, f25, f17, rtz # perform operation
fsub.d f15, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
fsub.d f26, f24, f27, dyn # perform operation
fsub.d f26, f24, f27, rdn # perform operation
fsub.d f26, f24, f27, rmm # perform operation
fsub.d f26, f24, f27, rne # perform operation
fsub.d f26, f24, f27, rtz # perform operation
fsub.d f26, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
fsub.d f14, f3, f5, dyn # perform operation
fsub.d f14, f3, f5, rdn # perform operation
fsub.d f14, f3, f5, rmm # perform operation
fsub.d f14, f3, f5, rne # perform operation
fsub.d f14, f3, f5, rtz # perform operation
fsub.d f14, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fsub.d f17, f21, f28, dyn # perform operation
fsub.d f17, f21, f28, rdn # perform operation
fsub.d f17, f21, f28, rmm # perform operation
fsub.d f17, f21, f28, rne # perform operation
fsub.d f17, f21, f28, rtz # perform operation
fsub.d f17, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fsub.d f10, f8, f12, dyn # perform operation
fsub.d f10, f8, f12, rdn # perform operation
fsub.d f10, f8, f12, rmm # perform operation
fsub.d f10, f8, f12, rne # perform operation
fsub.d f10, f8, f12, rtz # perform operation
fsub.d f10, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fsub.d f14, f2, f8, dyn # perform operation
fsub.d f14, f2, f8, rdn # perform operation
fsub.d f14, f2, f8, rmm # perform operation
fsub.d f14, f2, f8, rne # perform operation
fsub.d f14, f2, f8, rtz # perform operation
fsub.d f14, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fsub.d f28, f15, f6, dyn # perform operation
fsub.d f28, f15, f6, rdn # perform operation
fsub.d f28, f15, f6, rmm # perform operation
fsub.d f28, f15, f6, rne # perform operation
fsub.d f28, f15, f6, rtz # perform operation
fsub.d f28, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
fsub.d f14, f27, f22, dyn # perform operation
fsub.d f14, f27, f22, rdn # perform operation
fsub.d f14, f27, f22, rmm # perform operation
fsub.d f14, f27, f22, rne # perform operation
fsub.d f14, f27, f22, rtz # perform operation
fsub.d f14, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fsub.d f24, f31, f22, dyn # perform operation
fsub.d f24, f31, f22, rdn # perform operation
fsub.d f24, f31, f22, rmm # perform operation
fsub.d f24, f31, f22, rne # perform operation
fsub.d f24, f31, f22, rtz # perform operation
fsub.d f24, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f31, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fsub.d f9, f27, f15, dyn # perform operation
fsub.d f9, f27, f15, rdn # perform operation
fsub.d f9, f27, f15, rmm # perform operation
fsub.d f9, f27, f15, rne # perform operation
fsub.d f9, f27, f15, rtz # perform operation
fsub.d f9, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fsub.d f21, f12, f15, dyn # perform operation
fsub.d f21, f12, f15, rdn # perform operation
fsub.d f21, f12, f15, rmm # perform operation
fsub.d f21, f12, f15, rne # perform operation
fsub.d f21, f12, f15, rtz # perform operation
fsub.d f21, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fsub.d f28, f23, f29, dyn # perform operation
fsub.d f28, f23, f29, rdn # perform operation
fsub.d f28, f23, f29, rmm # perform operation
fsub.d f28, f23, f29, rne # perform operation
fsub.d f28, f23, f29, rtz # perform operation
fsub.d f28, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fsub.d f31, f10, f14, dyn # perform operation
fsub.d f31, f10, f14, rdn # perform operation
fsub.d f31, f10, f14, rmm # perform operation
fsub.d f31, f10, f14, rne # perform operation
fsub.d f31, f10, f14, rtz # perform operation
fsub.d f31, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
fsub.d f25, f24, f3, dyn # perform operation
fsub.d f25, f24, f3, rdn # perform operation
fsub.d f25, f24, f3, rmm # perform operation
fsub.d f25, f24, f3, rne # perform operation
fsub.d f25, f24, f3, rtz # perform operation
fsub.d f25, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fsub.d f11, f17, f28, dyn # perform operation
fsub.d f11, f17, f28, rdn # perform operation
fsub.d f11, f17, f28, rmm # perform operation
fsub.d f11, f17, f28, rne # perform operation
fsub.d f11, f17, f28, rtz # perform operation
fsub.d f11, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fsub.d f20, f6, f21, dyn # perform operation
fsub.d f20, f6, f21, rdn # perform operation
fsub.d f20, f6, f21, rmm # perform operation
fsub.d f20, f6, f21, rne # perform operation
fsub.d f20, f6, f21, rtz # perform operation
fsub.d f20, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
fsub.d f16, f15, f14, dyn # perform operation
fsub.d f16, f15, f14, rdn # perform operation
fsub.d f16, f15, f14, rmm # perform operation
fsub.d f16, f15, f14, rne # perform operation
fsub.d f16, f15, f14, rtz # perform operation
fsub.d f16, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f15, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
fsub.d f3, f22, f18, dyn # perform operation
fsub.d f3, f22, f18, rdn # perform operation
fsub.d f3, f22, f18, rmm # perform operation
fsub.d f3, f22, f18, rne # perform operation
fsub.d f3, f22, f18, rtz # perform operation
fsub.d f3, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fsub.d f30, f9, f1, dyn # perform operation
fsub.d f30, f9, f1, rdn # perform operation
fsub.d f30, f9, f1, rmm # perform operation
fsub.d f30, f9, f1, rne # perform operation
fsub.d f30, f9, f1, rtz # perform operation
fsub.d f30, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fsub.d f19, f14, f8, dyn # perform operation
fsub.d f19, f14, f8, rdn # perform operation
fsub.d f19, f14, f8, rmm # perform operation
fsub.d f19, f14, f8, rne # perform operation
fsub.d f19, f14, f8, rtz # perform operation
fsub.d f19, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fsub.d f15, f14, f28, dyn # perform operation
fsub.d f15, f14, f28, rdn # perform operation
fsub.d f15, f14, f28, rmm # perform operation
fsub.d f15, f14, f28, rne # perform operation
fsub.d f15, f14, f28, rtz # perform operation
fsub.d f15, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fsub.d f16, f29, f31, dyn # perform operation
fsub.d f16, f29, f31, rdn # perform operation
fsub.d f16, f29, f31, rmm # perform operation
fsub.d f16, f29, f31, rne # perform operation
fsub.d f16, f29, f31, rtz # perform operation
fsub.d f16, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fsub.d f23, f5, f3, dyn # perform operation
fsub.d f23, f5, f3, rdn # perform operation
fsub.d f23, f5, f3, rmm # perform operation
fsub.d f23, f5, f3, rne # perform operation
fsub.d f23, f5, f3, rtz # perform operation
fsub.d f23, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fsub.d f12, f3, f31, dyn # perform operation
fsub.d f12, f3, f31, rdn # perform operation
fsub.d f12, f3, f31, rmm # perform operation
fsub.d f12, f3, f31, rne # perform operation
fsub.d f12, f3, f31, rtz # perform operation
fsub.d f12, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fsub.d f28, f29, f13, dyn # perform operation
fsub.d f28, f29, f13, rdn # perform operation
fsub.d f28, f29, f13, rmm # perform operation
fsub.d f28, f29, f13, rne # perform operation
fsub.d f28, f29, f13, rtz # perform operation
fsub.d f28, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff8000000000000 from memory into f11
fsub.d f18, f23, f11, dyn # perform operation
fsub.d f18, f23, f11, rdn # perform operation
fsub.d f18, f23, f11, rmm # perform operation
fsub.d f18, f23, f11, rne # perform operation
fsub.d f18, f23, f11, rtz # perform operation
fsub.d f18, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fsub.d f16, f14, f19, dyn # perform operation
fsub.d f16, f14, f19, rdn # perform operation
fsub.d f16, f14, f19, rmm # perform operation
fsub.d f16, f14, f19, rne # perform operation
fsub.d f16, f14, f19, rtz # perform operation
fsub.d f16, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
fsub.d f26, f19, f7, dyn # perform operation
fsub.d f26, f19, f7, rdn # perform operation
fsub.d f26, f19, f7, rmm # perform operation
fsub.d f26, f19, f7, rne # perform operation
fsub.d f26, f19, f7, rtz # perform operation
fsub.d f26, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
fsub.d f15, f28, f20, dyn # perform operation
fsub.d f15, f28, f20, rdn # perform operation
fsub.d f15, f28, f20, rmm # perform operation
fsub.d f15, f28, f20, rne # perform operation
fsub.d f15, f28, f20, rtz # perform operation
fsub.d f15, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fsub.d f13, f11, f30, dyn # perform operation
fsub.d f13, f11, f30, rdn # perform operation
fsub.d f13, f11, f30, rmm # perform operation
fsub.d f13, f11, f30, rne # perform operation
fsub.d f13, f11, f30, rtz # perform operation
fsub.d f13, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fsub.d f21, f13, f19, dyn # perform operation
fsub.d f21, f13, f19, rdn # perform operation
fsub.d f21, f13, f19, rmm # perform operation
fsub.d f21, f13, f19, rne # perform operation
fsub.d f21, f13, f19, rtz # perform operation
fsub.d f21, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fsub.d f8, f10, f27, dyn # perform operation
fsub.d f8, f10, f27, rdn # perform operation
fsub.d f8, f10, f27, rmm # perform operation
fsub.d f8, f10, f27, rne # perform operation
fsub.d f8, f10, f27, rtz # perform operation
fsub.d f8, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fsub.d f31, f25, f13, dyn # perform operation
fsub.d f31, f25, f13, rdn # perform operation
fsub.d f31, f25, f13, rmm # perform operation
fsub.d f31, f25, f13, rne # perform operation
fsub.d f31, f25, f13, rtz # perform operation
fsub.d f31, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fsub.d f11, f16, f18, dyn # perform operation
fsub.d f11, f16, f18, rdn # perform operation
fsub.d f11, f16, f18, rmm # perform operation
fsub.d f11, f16, f18, rne # perform operation
fsub.d f11, f16, f18, rtz # perform operation
fsub.d f11, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fsub.d f2, f21, f16, dyn # perform operation
fsub.d f2, f21, f16, rdn # perform operation
fsub.d f2, f21, f16, rmm # perform operation
fsub.d f2, f21, f16, rne # perform operation
fsub.d f2, f21, f16, rtz # perform operation
fsub.d f2, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fsub.d f10, f14, f13, dyn # perform operation
fsub.d f10, f14, f13, rdn # perform operation
fsub.d f10, f14, f13, rmm # perform operation
fsub.d f10, f14, f13, rne # perform operation
fsub.d f10, f14, f13, rtz # perform operation
fsub.d f10, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f14, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fsub.d f6, f14, f30, dyn # perform operation
fsub.d f6, f14, f30, rdn # perform operation
fsub.d f6, f14, f30, rmm # perform operation
fsub.d f6, f14, f30, rne # perform operation
fsub.d f6, f14, f30, rtz # perform operation
fsub.d f6, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fsub.d f16, f23, f5, dyn # perform operation
fsub.d f16, f23, f5, rdn # perform operation
fsub.d f16, f23, f5, rmm # perform operation
fsub.d f16, f23, f5, rne # perform operation
fsub.d f16, f23, f5, rtz # perform operation
fsub.d f16, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fsub.d f14, f8, f28, dyn # perform operation
fsub.d f14, f8, f28, rdn # perform operation
fsub.d f14, f8, f28, rmm # perform operation
fsub.d f14, f8, f28, rne # perform operation
fsub.d f14, f8, f28, rtz # perform operation
fsub.d f14, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f8, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
fsub.d f21, f9, f13, dyn # perform operation
fsub.d f21, f9, f13, rdn # perform operation
fsub.d f21, f9, f13, rmm # perform operation
fsub.d f21, f9, f13, rne # perform operation
fsub.d f21, f9, f13, rtz # perform operation
fsub.d f21, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fsub.d f22, f8, f30, dyn # perform operation
fsub.d f22, f8, f30, rdn # perform operation
fsub.d f22, f8, f30, rmm # perform operation
fsub.d f22, f8, f30, rne # perform operation
fsub.d f22, f8, f30, rtz # perform operation
fsub.d f22, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fsub.d f9, f17, f28, dyn # perform operation
fsub.d f9, f17, f28, rdn # perform operation
fsub.d f9, f17, f28, rmm # perform operation
fsub.d f9, f17, f28, rne # perform operation
fsub.d f9, f17, f28, rtz # perform operation
fsub.d f9, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fsub.d f17, f29, f28, dyn # perform operation
fsub.d f17, f29, f28, rdn # perform operation
fsub.d f17, f29, f28, rmm # perform operation
fsub.d f17, f29, f28, rne # perform operation
fsub.d f17, f29, f28, rtz # perform operation
fsub.d f17, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff8000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
fsub.d f27, f15, f24, dyn # perform operation
fsub.d f27, f15, f24, rdn # perform operation
fsub.d f27, f15, f24, rmm # perform operation
fsub.d f27, f15, f24, rne # perform operation
fsub.d f27, f15, f24, rtz # perform operation
fsub.d f27, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fsub.d f14, f28, f9, dyn # perform operation
fsub.d f14, f28, f9, rdn # perform operation
fsub.d f14, f28, f9, rmm # perform operation
fsub.d f14, f28, f9, rne # perform operation
fsub.d f14, f28, f9, rtz # perform operation
fsub.d f14, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fsub.d f18, f22, f13, dyn # perform operation
fsub.d f18, f22, f13, rdn # perform operation
fsub.d f18, f22, f13, rmm # perform operation
fsub.d f18, f22, f13, rne # perform operation
fsub.d f18, f22, f13, rtz # perform operation
fsub.d f18, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fsub.d f15, f8, f18, dyn # perform operation
fsub.d f15, f8, f18, rdn # perform operation
fsub.d f15, f8, f18, rmm # perform operation
fsub.d f15, f8, f18, rne # perform operation
fsub.d f15, f8, f18, rtz # perform operation
fsub.d f15, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fsub.d f17, f28, f22, dyn # perform operation
fsub.d f17, f28, f22, rdn # perform operation
fsub.d f17, f28, f22, rmm # perform operation
fsub.d f17, f28, f22, rne # perform operation
fsub.d f17, f28, f22, rtz # perform operation
fsub.d f17, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fsub.d f22, f8, f18, dyn # perform operation
fsub.d f22, f8, f18, rdn # perform operation
fsub.d f22, f8, f18, rmm # perform operation
fsub.d f22, f8, f18, rne # perform operation
fsub.d f22, f8, f18, rtz # perform operation
fsub.d f22, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f8, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fsub.d f2, f22, f17, dyn # perform operation
fsub.d f2, f22, f17, rdn # perform operation
fsub.d f2, f22, f17, rmm # perform operation
fsub.d f2, f22, f17, rne # perform operation
fsub.d f2, f22, f17, rtz # perform operation
fsub.d f2, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f22, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
fsub.d f19, f2, f16, dyn # perform operation
fsub.d f19, f2, f16, rdn # perform operation
fsub.d f19, f2, f16, rmm # perform operation
fsub.d f19, f2, f16, rne # perform operation
fsub.d f19, f2, f16, rtz # perform operation
fsub.d f19, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fsub.d f15, f5, f12, dyn # perform operation
fsub.d f15, f5, f12, rdn # perform operation
fsub.d f15, f5, f12, rmm # perform operation
fsub.d f15, f5, f12, rne # perform operation
fsub.d f15, f5, f12, rtz # perform operation
fsub.d f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fsub.d f16, f24, f27, dyn # perform operation
fsub.d f16, f24, f27, rdn # perform operation
fsub.d f16, f24, f27, rmm # perform operation
fsub.d f16, f24, f27, rne # perform operation
fsub.d f16, f24, f27, rtz # perform operation
fsub.d f16, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fsub.d f3, f11, f6, dyn # perform operation
fsub.d f3, f11, f6, rdn # perform operation
fsub.d f3, f11, f6, rmm # perform operation
fsub.d f3, f11, f6, rne # perform operation
fsub.d f3, f11, f6, rtz # perform operation
fsub.d f3, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fsub.d f11, f21, f12, dyn # perform operation
fsub.d f11, f21, f12, rdn # perform operation
fsub.d f11, f21, f12, rmm # perform operation
fsub.d f11, f21, f12, rne # perform operation
fsub.d f11, f21, f12, rtz # perform operation
fsub.d f11, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff8000000000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fsub.d f31, f21, f10, dyn # perform operation
fsub.d f31, f21, f10, rdn # perform operation
fsub.d f31, f21, f10, rmm # perform operation
fsub.d f31, f21, f10, rne # perform operation
fsub.d f31, f21, f10, rtz # perform operation
fsub.d f31, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
fsub.d f24, f28, f25, dyn # perform operation
fsub.d f24, f28, f25, rdn # perform operation
fsub.d f24, f28, f25, rmm # perform operation
fsub.d f24, f28, f25, rne # perform operation
fsub.d f24, f28, f25, rtz # perform operation
fsub.d f24, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fsub.d f31, f25, f17, dyn # perform operation
fsub.d f31, f25, f17, rdn # perform operation
fsub.d f31, f25, f17, rmm # perform operation
fsub.d f31, f25, f17, rne # perform operation
fsub.d f31, f25, f17, rtz # perform operation
fsub.d f31, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fsub.d f8, f19, f28, dyn # perform operation
fsub.d f8, f19, f28, rdn # perform operation
fsub.d f8, f19, f28, rmm # perform operation
fsub.d f8, f19, f28, rne # perform operation
fsub.d f8, f19, f28, rtz # perform operation
fsub.d f8, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fsub.d f13, f29, f1, dyn # perform operation
fsub.d f13, f29, f1, rdn # perform operation
fsub.d f13, f29, f1, rmm # perform operation
fsub.d f13, f29, f1, rne # perform operation
fsub.d f13, f29, f1, rtz # perform operation
fsub.d f13, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f22, f5, f31, dyn # perform operation
fsub.d f22, f5, f31, rdn # perform operation
fsub.d f22, f5, f31, rmm # perform operation
fsub.d f22, f5, f31, rne # perform operation
fsub.d f22, f5, f31, rtz # perform operation
fsub.d f22, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fsub.d f3, f19, f23, dyn # perform operation
fsub.d f3, f19, f23, rdn # perform operation
fsub.d f3, f19, f23, rmm # perform operation
fsub.d f3, f19, f23, rne # perform operation
fsub.d f3, f19, f23, rtz # perform operation
fsub.d f3, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
fsub.d f30, f25, f6, dyn # perform operation
fsub.d f30, f25, f6, rdn # perform operation
fsub.d f30, f25, f6, rmm # perform operation
fsub.d f30, f25, f6, rne # perform operation
fsub.d f30, f25, f6, rtz # perform operation
fsub.d f30, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fsub.d f6, f2, f18, dyn # perform operation
fsub.d f6, f2, f18, rdn # perform operation
fsub.d f6, f2, f18, rmm # perform operation
fsub.d f6, f2, f18, rne # perform operation
fsub.d f6, f2, f18, rtz # perform operation
fsub.d f6, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fsub.d f31, f20, f26, dyn # perform operation
fsub.d f31, f20, f26, rdn # perform operation
fsub.d f31, f20, f26, rmm # perform operation
fsub.d f31, f20, f26, rne # perform operation
fsub.d f31, f20, f26, rtz # perform operation
fsub.d f31, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
fsub.d f26, f24, f16, dyn # perform operation
fsub.d f26, f24, f16, rdn # perform operation
fsub.d f26, f24, f16, rmm # perform operation
fsub.d f26, f24, f16, rne # perform operation
fsub.d f26, f24, f16, rtz # perform operation
fsub.d f26, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fsub.d f30, f20, f27, dyn # perform operation
fsub.d f30, f20, f27, rdn # perform operation
fsub.d f30, f20, f27, rmm # perform operation
fsub.d f30, f20, f27, rne # perform operation
fsub.d f30, f20, f27, rtz # perform operation
fsub.d f30, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fsub.d f30, f21, f27, dyn # perform operation
fsub.d f30, f21, f27, rdn # perform operation
fsub.d f30, f21, f27, rmm # perform operation
fsub.d f30, f21, f27, rne # perform operation
fsub.d f30, f21, f27, rtz # perform operation
fsub.d f30, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f21, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
fsub.d f15, f23, f9, dyn # perform operation
fsub.d f15, f23, f9, rdn # perform operation
fsub.d f15, f23, f9, rmm # perform operation
fsub.d f15, f23, f9, rne # perform operation
fsub.d f15, f23, f9, rtz # perform operation
fsub.d f15, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fsub.d f27, f16, f20, dyn # perform operation
fsub.d f27, f16, f20, rdn # perform operation
fsub.d f27, f16, f20, rmm # perform operation
fsub.d f27, f16, f20, rne # perform operation
fsub.d f27, f16, f20, rtz # perform operation
fsub.d f27, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fsub.d f7, f28, f27, dyn # perform operation
fsub.d f7, f28, f27, rdn # perform operation
fsub.d f7, f28, f27, rmm # perform operation
fsub.d f7, f28, f27, rne # perform operation
fsub.d f7, f28, f27, rtz # perform operation
fsub.d f7, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
fsub.d f7, f9, f30, dyn # perform operation
fsub.d f7, f9, f30, rdn # perform operation
fsub.d f7, f9, f30, rmm # perform operation
fsub.d f7, f9, f30, rne # perform operation
fsub.d f7, f9, f30, rtz # perform operation
fsub.d f7, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
fsub.d f20, f11, f7, dyn # perform operation
fsub.d f20, f11, f7, rdn # perform operation
fsub.d f20, f11, f7, rmm # perform operation
fsub.d f20, f11, f7, rne # perform operation
fsub.d f20, f11, f7, rtz # perform operation
fsub.d f20, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fsub.d f17, f20, f28, dyn # perform operation
fsub.d f17, f20, f28, rdn # perform operation
fsub.d f17, f20, f28, rmm # perform operation
fsub.d f17, f20, f28, rne # perform operation
fsub.d f17, f20, f28, rtz # perform operation
fsub.d f17, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
fsub.d f7, f11, f6, dyn # perform operation
fsub.d f7, f11, f6, rdn # perform operation
fsub.d f7, f11, f6, rmm # perform operation
fsub.d f7, f11, f6, rne # perform operation
fsub.d f7, f11, f6, rtz # perform operation
fsub.d f7, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fsub.d f11, f23, f19, dyn # perform operation
fsub.d f11, f23, f19, rdn # perform operation
fsub.d f11, f23, f19, rmm # perform operation
fsub.d f11, f23, f19, rne # perform operation
fsub.d f11, f23, f19, rtz # perform operation
fsub.d f11, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fsub.d f15, f30, f17, dyn # perform operation
fsub.d f15, f30, f17, rdn # perform operation
fsub.d f15, f30, f17, rmm # perform operation
fsub.d f15, f30, f17, rne # perform operation
fsub.d f15, f30, f17, rtz # perform operation
fsub.d f15, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fsub.d f29, f31, f27, dyn # perform operation
fsub.d f29, f31, f27, rdn # perform operation
fsub.d f29, f31, f27, rmm # perform operation
fsub.d f29, f31, f27, rne # perform operation
fsub.d f29, f31, f27, rtz # perform operation
fsub.d f29, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
fsub.d f8, f9, f10, dyn # perform operation
fsub.d f8, f9, f10, rdn # perform operation
fsub.d f8, f9, f10, rmm # perform operation
fsub.d f8, f9, f10, rne # perform operation
fsub.d f8, f9, f10, rtz # perform operation
fsub.d f8, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
fsub.d f27, f25, f11, dyn # perform operation
fsub.d f27, f25, f11, rdn # perform operation
fsub.d f27, f25, f11, rmm # perform operation
fsub.d f27, f25, f11, rne # perform operation
fsub.d f27, f25, f11, rtz # perform operation
fsub.d f27, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fsub.d f13, f17, f31, dyn # perform operation
fsub.d f13, f17, f31, rdn # perform operation
fsub.d f13, f17, f31, rmm # perform operation
fsub.d f13, f17, f31, rne # perform operation
fsub.d f13, f17, f31, rtz # perform operation
fsub.d f13, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
fsub.d f8, f29, f30, dyn # perform operation
fsub.d f8, f29, f30, rdn # perform operation
fsub.d f8, f29, f30, rmm # perform operation
fsub.d f8, f29, f30, rne # perform operation
fsub.d f8, f29, f30, rtz # perform operation
fsub.d f8, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fsub.d f10, f22, f31, dyn # perform operation
fsub.d f10, f22, f31, rdn # perform operation
fsub.d f10, f22, f31, rmm # perform operation
fsub.d f10, f22, f31, rne # perform operation
fsub.d f10, f22, f31, rtz # perform operation
fsub.d f10, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fsub.d f1, f27, f18, dyn # perform operation
fsub.d f1, f27, f18, rdn # perform operation
fsub.d f1, f27, f18, rmm # perform operation
fsub.d f1, f27, f18, rne # perform operation
fsub.d f1, f27, f18, rtz # perform operation
fsub.d f1, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000001 from memory into f28
fsub.d f6, f1, f28, dyn # perform operation
fsub.d f6, f1, f28, rdn # perform operation
fsub.d f6, f1, f28, rmm # perform operation
fsub.d f6, f1, f28, rne # perform operation
fsub.d f6, f1, f28, rtz # perform operation
fsub.d f6, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fsub.d f19, f15, f11, dyn # perform operation
fsub.d f19, f15, f11, rdn # perform operation
fsub.d f19, f15, f11, rmm # perform operation
fsub.d f19, f15, f11, rne # perform operation
fsub.d f19, f15, f11, rtz # perform operation
fsub.d f19, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fsub.d f28, f21, f30, dyn # perform operation
fsub.d f28, f21, f30, rdn # perform operation
fsub.d f28, f21, f30, rmm # perform operation
fsub.d f28, f21, f30, rne # perform operation
fsub.d f28, f21, f30, rtz # perform operation
fsub.d f28, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x4000000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fsub.d f25, f16, f3, dyn # perform operation
fsub.d f25, f16, f3, rdn # perform operation
fsub.d f25, f16, f3, rmm # perform operation
fsub.d f25, f16, f3, rne # perform operation
fsub.d f25, f16, f3, rtz # perform operation
fsub.d f25, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x4000000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fsub.d f13, f21, f24, dyn # perform operation
fsub.d f13, f21, f24, rdn # perform operation
fsub.d f13, f21, f24, rmm # perform operation
fsub.d f13, f21, f24, rne # perform operation
fsub.d f13, f21, f24, rtz # perform operation
fsub.d f13, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fsub.d f26, f12, f5, dyn # perform operation
fsub.d f26, f12, f5, rdn # perform operation
fsub.d f26, f12, f5, rmm # perform operation
fsub.d f26, f12, f5, rne # perform operation
fsub.d f26, f12, f5, rtz # perform operation
fsub.d f26, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fsub.d f9, f19, f24, dyn # perform operation
fsub.d f9, f19, f24, rdn # perform operation
fsub.d f9, f19, f24, rmm # perform operation
fsub.d f9, f19, f24, rne # perform operation
fsub.d f9, f19, f24, rtz # perform operation
fsub.d f9, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fsub.d f14, f10, f7, dyn # perform operation
fsub.d f14, f10, f7, rdn # perform operation
fsub.d f14, f10, f7, rmm # perform operation
fsub.d f14, f10, f7, rne # perform operation
fsub.d f14, f10, f7, rtz # perform operation
fsub.d f14, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fsub.d f7, f23, f12, dyn # perform operation
fsub.d f7, f23, f12, rdn # perform operation
fsub.d f7, f23, f12, rmm # perform operation
fsub.d f7, f23, f12, rne # perform operation
fsub.d f7, f23, f12, rtz # perform operation
fsub.d f7, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fsub.d f16, f11, f22, dyn # perform operation
fsub.d f16, f11, f22, rdn # perform operation
fsub.d f16, f11, f22, rmm # perform operation
fsub.d f16, f11, f22, rne # perform operation
fsub.d f16, f11, f22, rtz # perform operation
fsub.d f16, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fsub.d f24, f3, f19, dyn # perform operation
fsub.d f24, f3, f19, rdn # perform operation
fsub.d f24, f3, f19, rmm # perform operation
fsub.d f24, f3, f19, rne # perform operation
fsub.d f24, f3, f19, rtz # perform operation
fsub.d f24, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fsub.d f14, f18, f5, dyn # perform operation
fsub.d f14, f18, f5, rdn # perform operation
fsub.d f14, f18, f5, rmm # perform operation
fsub.d f14, f18, f5, rne # perform operation
fsub.d f14, f18, f5, rtz # perform operation
fsub.d f14, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fsub.d f16, f6, f20, dyn # perform operation
fsub.d f16, f6, f20, rdn # perform operation
fsub.d f16, f6, f20, rmm # perform operation
fsub.d f16, f6, f20, rne # perform operation
fsub.d f16, f6, f20, rtz # perform operation
fsub.d f16, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fsub.d f22, f9, f14, dyn # perform operation
fsub.d f22, f9, f14, rdn # perform operation
fsub.d f22, f9, f14, rmm # perform operation
fsub.d f22, f9, f14, rne # perform operation
fsub.d f22, f9, f14, rtz # perform operation
fsub.d f22, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xffefffffffffffff from memory into f23
fsub.d f29, f25, f23, dyn # perform operation
fsub.d f29, f25, f23, rdn # perform operation
fsub.d f29, f25, f23, rmm # perform operation
fsub.d f29, f25, f23, rne # perform operation
fsub.d f29, f25, f23, rtz # perform operation
fsub.d f29, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fsub.d f17, f12, f6, dyn # perform operation
fsub.d f17, f12, f6, rdn # perform operation
fsub.d f17, f12, f6, rmm # perform operation
fsub.d f17, f12, f6, rne # perform operation
fsub.d f17, f12, f6, rtz # perform operation
fsub.d f17, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fsub.d f16, f18, f25, dyn # perform operation
fsub.d f16, f18, f25, rdn # perform operation
fsub.d f16, f18, f25, rmm # perform operation
fsub.d f16, f18, f25, rne # perform operation
fsub.d f16, f18, f25, rtz # perform operation
fsub.d f16, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fsub.d f6, f24, f11, dyn # perform operation
fsub.d f6, f24, f11, rdn # perform operation
fsub.d f6, f24, f11, rmm # perform operation
fsub.d f6, f24, f11, rne # perform operation
fsub.d f6, f24, f11, rtz # perform operation
fsub.d f6, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
fsub.d f30, f18, f17, dyn # perform operation
fsub.d f30, f18, f17, rdn # perform operation
fsub.d f30, f18, f17, rmm # perform operation
fsub.d f30, f18, f17, rne # perform operation
fsub.d f30, f18, f17, rtz # perform operation
fsub.d f30, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fsub.d f27, f17, f7, dyn # perform operation
fsub.d f27, f17, f7, rdn # perform operation
fsub.d f27, f17, f7, rmm # perform operation
fsub.d f27, f17, f7, rne # perform operation
fsub.d f27, f17, f7, rtz # perform operation
fsub.d f27, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fsub.d f9, f25, f30, dyn # perform operation
fsub.d f9, f25, f30, rdn # perform operation
fsub.d f9, f25, f30, rmm # perform operation
fsub.d f9, f25, f30, rne # perform operation
fsub.d f9, f25, f30, rtz # perform operation
fsub.d f9, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fsub.d f19, f5, f25, dyn # perform operation
fsub.d f19, f5, f25, rdn # perform operation
fsub.d f19, f5, f25, rmm # perform operation
fsub.d f19, f5, f25, rne # perform operation
fsub.d f19, f5, f25, rtz # perform operation
fsub.d f19, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
fsub.d f21, f10, f27, dyn # perform operation
fsub.d f21, f10, f27, rdn # perform operation
fsub.d f21, f10, f27, rmm # perform operation
fsub.d f21, f10, f27, rne # perform operation
fsub.d f21, f10, f27, rtz # perform operation
fsub.d f21, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
fsub.d f22, f27, f26, dyn # perform operation
fsub.d f22, f27, f26, rdn # perform operation
fsub.d f22, f27, f26, rmm # perform operation
fsub.d f22, f27, f26, rne # perform operation
fsub.d f22, f27, f26, rtz # perform operation
fsub.d f22, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x4000000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fsub.d f2, f17, f22, dyn # perform operation
fsub.d f2, f17, f22, rdn # perform operation
fsub.d f2, f17, f22, rmm # perform operation
fsub.d f2, f17, f22, rne # perform operation
fsub.d f2, f17, f22, rtz # perform operation
fsub.d f2, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff8000000000000 from memory into f2
fsub.d f22, f9, f2, dyn # perform operation
fsub.d f22, f9, f2, rdn # perform operation
fsub.d f22, f9, f2, rmm # perform operation
fsub.d f22, f9, f2, rne # perform operation
fsub.d f22, f9, f2, rtz # perform operation
fsub.d f22, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fsub.d f2, f27, f14, dyn # perform operation
fsub.d f2, f27, f14, rdn # perform operation
fsub.d f2, f27, f14, rmm # perform operation
fsub.d f2, f27, f14, rne # perform operation
fsub.d f2, f27, f14, rtz # perform operation
fsub.d f2, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fsub.d f24, f8, f15, dyn # perform operation
fsub.d f24, f8, f15, rdn # perform operation
fsub.d f24, f8, f15, rmm # perform operation
fsub.d f24, f8, f15, rne # perform operation
fsub.d f24, f8, f15, rtz # perform operation
fsub.d f24, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
fsub.d f11, f2, f12, dyn # perform operation
fsub.d f11, f2, f12, rdn # perform operation
fsub.d f11, f2, f12, rmm # perform operation
fsub.d f11, f2, f12, rne # perform operation
fsub.d f11, f2, f12, rtz # perform operation
fsub.d f11, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
fsub.d f31, f1, f7, dyn # perform operation
fsub.d f31, f1, f7, rdn # perform operation
fsub.d f31, f1, f7, rmm # perform operation
fsub.d f31, f1, f7, rne # perform operation
fsub.d f31, f1, f7, rtz # perform operation
fsub.d f31, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fsub.d f21, f19, f17, dyn # perform operation
fsub.d f21, f19, f17, rdn # perform operation
fsub.d f21, f19, f17, rmm # perform operation
fsub.d f21, f19, f17, rne # perform operation
fsub.d f21, f19, f17, rtz # perform operation
fsub.d f21, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
fsub.d f9, f31, f25, dyn # perform operation
fsub.d f9, f31, f25, rdn # perform operation
fsub.d f9, f31, f25, rmm # perform operation
fsub.d f9, f31, f25, rne # perform operation
fsub.d f9, f31, f25, rtz # perform operation
fsub.d f9, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fsub.d f16, f28, f1, dyn # perform operation
fsub.d f16, f28, f1, rdn # perform operation
fsub.d f16, f28, f1, rmm # perform operation
fsub.d f16, f28, f1, rne # perform operation
fsub.d f16, f28, f1, rtz # perform operation
fsub.d f16, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fsub.d f14, f27, f2, dyn # perform operation
fsub.d f14, f27, f2, rdn # perform operation
fsub.d f14, f27, f2, rmm # perform operation
fsub.d f14, f27, f2, rne # perform operation
fsub.d f14, f27, f2, rtz # perform operation
fsub.d f14, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fsub.d f27, f3, f16, dyn # perform operation
fsub.d f27, f3, f16, rdn # perform operation
fsub.d f27, f3, f16, rmm # perform operation
fsub.d f27, f3, f16, rne # perform operation
fsub.d f27, f3, f16, rtz # perform operation
fsub.d f27, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fsub.d f9, f13, f5, dyn # perform operation
fsub.d f9, f13, f5, rdn # perform operation
fsub.d f9, f13, f5, rmm # perform operation
fsub.d f9, f13, f5, rne # perform operation
fsub.d f9, f13, f5, rtz # perform operation
fsub.d f9, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
fsub.d f11, f27, f3, dyn # perform operation
fsub.d f11, f27, f3, rdn # perform operation
fsub.d f11, f27, f3, rmm # perform operation
fsub.d f11, f27, f3, rne # perform operation
fsub.d f11, f27, f3, rtz # perform operation
fsub.d f11, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fsub.d f25, f12, f28, dyn # perform operation
fsub.d f25, f12, f28, rdn # perform operation
fsub.d f25, f12, f28, rmm # perform operation
fsub.d f25, f12, f28, rne # perform operation
fsub.d f25, f12, f28, rtz # perform operation
fsub.d f25, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fsub.d f11, f3, f6, dyn # perform operation
fsub.d f11, f3, f6, rdn # perform operation
fsub.d f11, f3, f6, rmm # perform operation
fsub.d f11, f3, f6, rne # perform operation
fsub.d f11, f3, f6, rtz # perform operation
fsub.d f11, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fsub.d f11, f29, f26, dyn # perform operation
fsub.d f11, f29, f26, rdn # perform operation
fsub.d f11, f29, f26, rmm # perform operation
fsub.d f11, f29, f26, rne # perform operation
fsub.d f11, f29, f26, rtz # perform operation
fsub.d f11, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xc000000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
fsub.d f24, f16, f28, dyn # perform operation
fsub.d f24, f16, f28, rdn # perform operation
fsub.d f24, f16, f28, rmm # perform operation
fsub.d f24, f16, f28, rne # perform operation
fsub.d f24, f16, f28, rtz # perform operation
fsub.d f24, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xc000000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fsub.d f19, f23, f29, dyn # perform operation
fsub.d f19, f23, f29, rdn # perform operation
fsub.d f19, f23, f29, rmm # perform operation
fsub.d f19, f23, f29, rne # perform operation
fsub.d f19, f23, f29, rtz # perform operation
fsub.d f19, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fsub.d f19, f7, f8, dyn # perform operation
fsub.d f19, f7, f8, rdn # perform operation
fsub.d f19, f7, f8, rmm # perform operation
fsub.d f19, f7, f8, rne # perform operation
fsub.d f19, f7, f8, rtz # perform operation
fsub.d f19, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fsub.d f15, f10, f13, dyn # perform operation
fsub.d f15, f10, f13, rdn # perform operation
fsub.d f15, f10, f13, rmm # perform operation
fsub.d f15, f10, f13, rne # perform operation
fsub.d f15, f10, f13, rtz # perform operation
fsub.d f15, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xc000000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fsub.d f2, f7, f1, dyn # perform operation
fsub.d f2, f7, f1, rdn # perform operation
fsub.d f2, f7, f1, rmm # perform operation
fsub.d f2, f7, f1, rne # perform operation
fsub.d f2, f7, f1, rtz # perform operation
fsub.d f2, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fsub.d f5, f27, f29, dyn # perform operation
fsub.d f5, f27, f29, rdn # perform operation
fsub.d f5, f27, f29, rmm # perform operation
fsub.d f5, f27, f29, rne # perform operation
fsub.d f5, f27, f29, rtz # perform operation
fsub.d f5, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fsub.d f8, f22, f29, dyn # perform operation
fsub.d f8, f22, f29, rdn # perform operation
fsub.d f8, f22, f29, rmm # perform operation
fsub.d f8, f22, f29, rne # perform operation
fsub.d f8, f22, f29, rtz # perform operation
fsub.d f8, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fsub.d f29, f3, f7, dyn # perform operation
fsub.d f29, f3, f7, rdn # perform operation
fsub.d f29, f3, f7, rmm # perform operation
fsub.d f29, f3, f7, rne # perform operation
fsub.d f29, f3, f7, rtz # perform operation
fsub.d f29, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
fsub.d f16, f22, f10, dyn # perform operation
fsub.d f16, f22, f10, rdn # perform operation
fsub.d f16, f22, f10, rmm # perform operation
fsub.d f16, f22, f10, rne # perform operation
fsub.d f16, f22, f10, rtz # perform operation
fsub.d f16, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fsub.d f6, f15, f25, dyn # perform operation
fsub.d f6, f15, f25, rdn # perform operation
fsub.d f6, f15, f25, rmm # perform operation
fsub.d f6, f15, f25, rne # perform operation
fsub.d f6, f15, f25, rtz # perform operation
fsub.d f6, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fsub.d f21, f11, f14, dyn # perform operation
fsub.d f21, f11, f14, rdn # perform operation
fsub.d f21, f11, f14, rmm # perform operation
fsub.d f21, f11, f14, rne # perform operation
fsub.d f21, f11, f14, rtz # perform operation
fsub.d f21, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
fsub.d f6, f27, f29, dyn # perform operation
fsub.d f6, f27, f29, rdn # perform operation
fsub.d f6, f27, f29, rmm # perform operation
fsub.d f6, f27, f29, rne # perform operation
fsub.d f6, f27, f29, rtz # perform operation
fsub.d f6, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f24, f8, f25, dyn # perform operation
fsub.d f24, f8, f25, rdn # perform operation
fsub.d f24, f8, f25, rmm # perform operation
fsub.d f24, f8, f25, rne # perform operation
fsub.d f24, f8, f25, rtz # perform operation
fsub.d f24, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fsub.d f25, f12, f6, dyn # perform operation
fsub.d f25, f12, f6, rdn # perform operation
fsub.d f25, f12, f6, rmm # perform operation
fsub.d f25, f12, f6, rne # perform operation
fsub.d f25, f12, f6, rtz # perform operation
fsub.d f25, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fsub.d f22, f9, f16, dyn # perform operation
fsub.d f22, f9, f16, rdn # perform operation
fsub.d f22, f9, f16, rmm # perform operation
fsub.d f22, f9, f16, rne # perform operation
fsub.d f22, f9, f16, rtz # perform operation
fsub.d f22, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fsub.d f29, f12, f20, dyn # perform operation
fsub.d f29, f12, f20, rdn # perform operation
fsub.d f29, f12, f20, rmm # perform operation
fsub.d f29, f12, f20, rne # perform operation
fsub.d f29, f12, f20, rtz # perform operation
fsub.d f29, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f12, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
fsub.d f17, f11, f7, dyn # perform operation
fsub.d f17, f11, f7, rdn # perform operation
fsub.d f17, f11, f7, rmm # perform operation
fsub.d f17, f11, f7, rne # perform operation
fsub.d f17, f11, f7, rtz # perform operation
fsub.d f17, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
fsub.d f6, f8, f21, dyn # perform operation
fsub.d f6, f8, f21, rdn # perform operation
fsub.d f6, f8, f21, rmm # perform operation
fsub.d f6, f8, f21, rne # perform operation
fsub.d f6, f8, f21, rtz # perform operation
fsub.d f6, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fsub.d f29, f27, f20, dyn # perform operation
fsub.d f29, f27, f20, rdn # perform operation
fsub.d f29, f27, f20, rmm # perform operation
fsub.d f29, f27, f20, rne # perform operation
fsub.d f29, f27, f20, rtz # perform operation
fsub.d f29, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
fsub.d f7, f31, f25, dyn # perform operation
fsub.d f7, f31, f25, rdn # perform operation
fsub.d f7, f31, f25, rmm # perform operation
fsub.d f7, f31, f25, rne # perform operation
fsub.d f7, f31, f25, rtz # perform operation
fsub.d f7, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fsub.d f31, f12, f1, dyn # perform operation
fsub.d f31, f12, f1, rdn # perform operation
fsub.d f31, f12, f1, rmm # perform operation
fsub.d f31, f12, f1, rne # perform operation
fsub.d f31, f12, f1, rtz # perform operation
fsub.d f31, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fsub.d f20, f1, f23, dyn # perform operation
fsub.d f20, f1, f23, rdn # perform operation
fsub.d f20, f1, f23, rmm # perform operation
fsub.d f20, f1, f23, rne # perform operation
fsub.d f20, f1, f23, rtz # perform operation
fsub.d f20, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fsub.d f7, f30, f28, dyn # perform operation
fsub.d f7, f30, f28, rdn # perform operation
fsub.d f7, f30, f28, rmm # perform operation
fsub.d f7, f30, f28, rne # perform operation
fsub.d f7, f30, f28, rtz # perform operation
fsub.d f7, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fsub.d f7, f19, f9, dyn # perform operation
fsub.d f7, f19, f9, rdn # perform operation
fsub.d f7, f19, f9, rmm # perform operation
fsub.d f7, f19, f9, rne # perform operation
fsub.d f7, f19, f9, rtz # perform operation
fsub.d f7, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fsub.d f12, f26, f5, dyn # perform operation
fsub.d f12, f26, f5, rdn # perform operation
fsub.d f12, f26, f5, rmm # perform operation
fsub.d f12, f26, f5, rne # perform operation
fsub.d f12, f26, f5, rtz # perform operation
fsub.d f12, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fsub.d f3, f2, f18, dyn # perform operation
fsub.d f3, f2, f18, rdn # perform operation
fsub.d f3, f2, f18, rmm # perform operation
fsub.d f3, f2, f18, rne # perform operation
fsub.d f3, f2, f18, rtz # perform operation
fsub.d f3, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fsub.d f31, f15, f11, dyn # perform operation
fsub.d f31, f15, f11, rdn # perform operation
fsub.d f31, f15, f11, rmm # perform operation
fsub.d f31, f15, f11, rne # perform operation
fsub.d f31, f15, f11, rtz # perform operation
fsub.d f31, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fsub.d f24, f19, f9, dyn # perform operation
fsub.d f24, f19, f9, rdn # perform operation
fsub.d f24, f19, f9, rmm # perform operation
fsub.d f24, f19, f9, rne # perform operation
fsub.d f24, f19, f9, rtz # perform operation
fsub.d f24, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fsub.d f21, f5, f3, dyn # perform operation
fsub.d f21, f5, f3, rdn # perform operation
fsub.d f21, f5, f3, rmm # perform operation
fsub.d f21, f5, f3, rne # perform operation
fsub.d f21, f5, f3, rtz # perform operation
fsub.d f21, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fsub.d f16, f29, f30, dyn # perform operation
fsub.d f16, f29, f30, rdn # perform operation
fsub.d f16, f29, f30, rmm # perform operation
fsub.d f16, f29, f30, rne # perform operation
fsub.d f16, f29, f30, rtz # perform operation
fsub.d f16, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
fsub.d f5, f23, f28, dyn # perform operation
fsub.d f5, f23, f28, rdn # perform operation
fsub.d f5, f23, f28, rmm # perform operation
fsub.d f5, f23, f28, rne # perform operation
fsub.d f5, f23, f28, rtz # perform operation
fsub.d f5, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fsub.d f12, f1, f17, dyn # perform operation
fsub.d f12, f1, f17, rdn # perform operation
fsub.d f12, f1, f17, rmm # perform operation
fsub.d f12, f1, f17, rne # perform operation
fsub.d f12, f1, f17, rtz # perform operation
fsub.d f12, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f1, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fsub.d f5, f7, f12, dyn # perform operation
fsub.d f5, f7, f12, rdn # perform operation
fsub.d f5, f7, f12, rmm # perform operation
fsub.d f5, f7, f12, rne # perform operation
fsub.d f5, f7, f12, rtz # perform operation
fsub.d f5, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
fsub.d f21, f7, f20, dyn # perform operation
fsub.d f21, f7, f20, rdn # perform operation
fsub.d f21, f7, f20, rmm # perform operation
fsub.d f21, f7, f20, rne # perform operation
fsub.d f21, f7, f20, rtz # perform operation
fsub.d f21, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fsub.d f27, f7, f19, dyn # perform operation
fsub.d f27, f7, f19, rdn # perform operation
fsub.d f27, f7, f19, rmm # perform operation
fsub.d f27, f7, f19, rne # perform operation
fsub.d f27, f7, f19, rtz # perform operation
fsub.d f27, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
fsub.d f26, f31, f8, dyn # perform operation
fsub.d f26, f31, f8, rdn # perform operation
fsub.d f26, f31, f8, rmm # perform operation
fsub.d f26, f31, f8, rne # perform operation
fsub.d f26, f31, f8, rtz # perform operation
fsub.d f26, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fsub.d f9, f12, f8, dyn # perform operation
fsub.d f9, f12, f8, rdn # perform operation
fsub.d f9, f12, f8, rmm # perform operation
fsub.d f9, f12, f8, rne # perform operation
fsub.d f9, f12, f8, rtz # perform operation
fsub.d f9, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fsub.d f14, f3, f26, dyn # perform operation
fsub.d f14, f3, f26, rdn # perform operation
fsub.d f14, f3, f26, rmm # perform operation
fsub.d f14, f3, f26, rne # perform operation
fsub.d f14, f3, f26, rtz # perform operation
fsub.d f14, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fsub.d f19, f18, f5, dyn # perform operation
fsub.d f19, f18, f5, rdn # perform operation
fsub.d f19, f18, f5, rmm # perform operation
fsub.d f19, f18, f5, rne # perform operation
fsub.d f19, f18, f5, rtz # perform operation
fsub.d f19, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fsub.d f7, f5, f12, dyn # perform operation
fsub.d f7, f5, f12, rdn # perform operation
fsub.d f7, f5, f12, rmm # perform operation
fsub.d f7, f5, f12, rne # perform operation
fsub.d f7, f5, f12, rtz # perform operation
fsub.d f7, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0010000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f7, f13, f25, dyn # perform operation
fsub.d f7, f13, f25, rdn # perform operation
fsub.d f7, f13, f25, rmm # perform operation
fsub.d f7, f13, f25, rne # perform operation
fsub.d f7, f13, f25, rtz # perform operation
fsub.d f7, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fsub.d f16, f24, f6, dyn # perform operation
fsub.d f16, f24, f6, rdn # perform operation
fsub.d f16, f24, f6, rmm # perform operation
fsub.d f16, f24, f6, rne # perform operation
fsub.d f16, f24, f6, rtz # perform operation
fsub.d f16, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fsub.d f27, f2, f16, dyn # perform operation
fsub.d f27, f2, f16, rdn # perform operation
fsub.d f27, f2, f16, rmm # perform operation
fsub.d f27, f2, f16, rne # perform operation
fsub.d f27, f2, f16, rtz # perform operation
fsub.d f27, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
fsub.d f12, f27, f15, dyn # perform operation
fsub.d f12, f27, f15, rdn # perform operation
fsub.d f12, f27, f15, rmm # perform operation
fsub.d f12, f27, f15, rne # perform operation
fsub.d f12, f27, f15, rtz # perform operation
fsub.d f12, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f27, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
fsub.d f5, f21, f30, dyn # perform operation
fsub.d f5, f21, f30, rdn # perform operation
fsub.d f5, f21, f30, rmm # perform operation
fsub.d f5, f21, f30, rne # perform operation
fsub.d f5, f21, f30, rtz # perform operation
fsub.d f5, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fsub.d f18, f24, f12, dyn # perform operation
fsub.d f18, f24, f12, rdn # perform operation
fsub.d f18, f24, f12, rmm # perform operation
fsub.d f18, f24, f12, rne # perform operation
fsub.d f18, f24, f12, rtz # perform operation
fsub.d f18, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
fsub.d f5, f27, f7, dyn # perform operation
fsub.d f5, f27, f7, rdn # perform operation
fsub.d f5, f27, f7, rmm # perform operation
fsub.d f5, f27, f7, rne # perform operation
fsub.d f5, f27, f7, rtz # perform operation
fsub.d f5, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fsub.d f19, f28, f31, dyn # perform operation
fsub.d f19, f28, f31, rdn # perform operation
fsub.d f19, f28, f31, rmm # perform operation
fsub.d f19, f28, f31, rne # perform operation
fsub.d f19, f28, f31, rtz # perform operation
fsub.d f19, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fsub.d f9, f22, f30, dyn # perform operation
fsub.d f9, f22, f30, rdn # perform operation
fsub.d f9, f22, f30, rmm # perform operation
fsub.d f9, f22, f30, rne # perform operation
fsub.d f9, f22, f30, rtz # perform operation
fsub.d f9, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff0000000000000 from memory into f5
fsub.d f27, f18, f5, dyn # perform operation
fsub.d f27, f18, f5, rdn # perform operation
fsub.d f27, f18, f5, rmm # perform operation
fsub.d f27, f18, f5, rne # perform operation
fsub.d f27, f18, f5, rtz # perform operation
fsub.d f27, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fsub.d f23, f26, f11, dyn # perform operation
fsub.d f23, f26, f11, rdn # perform operation
fsub.d f23, f26, f11, rmm # perform operation
fsub.d f23, f26, f11, rne # perform operation
fsub.d f23, f26, f11, rtz # perform operation
fsub.d f23, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fsub.d f11, f21, f24, dyn # perform operation
fsub.d f11, f21, f24, rdn # perform operation
fsub.d f11, f21, f24, rmm # perform operation
fsub.d f11, f21, f24, rne # perform operation
fsub.d f11, f21, f24, rtz # perform operation
fsub.d f11, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
fsub.d f6, f29, f5, dyn # perform operation
fsub.d f6, f29, f5, rdn # perform operation
fsub.d f6, f29, f5, rmm # perform operation
fsub.d f6, f29, f5, rne # perform operation
fsub.d f6, f29, f5, rtz # perform operation
fsub.d f6, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
fsub.d f24, f17, f26, dyn # perform operation
fsub.d f24, f17, f26, rdn # perform operation
fsub.d f24, f17, f26, rmm # perform operation
fsub.d f24, f17, f26, rne # perform operation
fsub.d f24, f17, f26, rtz # perform operation
fsub.d f24, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f17, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fsub.d f6, f12, f19, dyn # perform operation
fsub.d f6, f12, f19, rdn # perform operation
fsub.d f6, f12, f19, rmm # perform operation
fsub.d f6, f12, f19, rne # perform operation
fsub.d f6, f12, f19, rtz # perform operation
fsub.d f6, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
fsub.d f30, f24, f7, dyn # perform operation
fsub.d f30, f24, f7, rdn # perform operation
fsub.d f30, f24, f7, rmm # perform operation
fsub.d f30, f24, f7, rne # perform operation
fsub.d f30, f24, f7, rtz # perform operation
fsub.d f30, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fsub.d f15, f22, f2, dyn # perform operation
fsub.d f15, f22, f2, rdn # perform operation
fsub.d f15, f22, f2, rmm # perform operation
fsub.d f15, f22, f2, rne # perform operation
fsub.d f15, f22, f2, rtz # perform operation
fsub.d f15, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
fsub.d f8, f10, f20, dyn # perform operation
fsub.d f8, f10, f20, rdn # perform operation
fsub.d f8, f10, f20, rmm # perform operation
fsub.d f8, f10, f20, rne # perform operation
fsub.d f8, f10, f20, rtz # perform operation
fsub.d f8, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
fsub.d f25, f19, f13, dyn # perform operation
fsub.d f25, f19, f13, rdn # perform operation
fsub.d f25, f19, f13, rmm # perform operation
fsub.d f25, f19, f13, rne # perform operation
fsub.d f25, f19, f13, rtz # perform operation
fsub.d f25, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fsub.d f24, f2, f11, dyn # perform operation
fsub.d f24, f2, f11, rdn # perform operation
fsub.d f24, f2, f11, rmm # perform operation
fsub.d f24, f2, f11, rne # perform operation
fsub.d f24, f2, f11, rtz # perform operation
fsub.d f24, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f2, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
fsub.d f31, f20, f23, dyn # perform operation
fsub.d f31, f20, f23, rdn # perform operation
fsub.d f31, f20, f23, rmm # perform operation
fsub.d f31, f20, f23, rne # perform operation
fsub.d f31, f20, f23, rtz # perform operation
fsub.d f31, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fsub.d f18, f3, f28, dyn # perform operation
fsub.d f18, f3, f28, rdn # perform operation
fsub.d f18, f3, f28, rmm # perform operation
fsub.d f18, f3, f28, rne # perform operation
fsub.d f18, f3, f28, rtz # perform operation
fsub.d f18, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8010000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fsub.d f28, f9, f14, dyn # perform operation
fsub.d f28, f9, f14, rdn # perform operation
fsub.d f28, f9, f14, rmm # perform operation
fsub.d f28, f9, f14, rne # perform operation
fsub.d f28, f9, f14, rtz # perform operation
fsub.d f28, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fsub.d f15, f18, f12, dyn # perform operation
fsub.d f15, f18, f12, rdn # perform operation
fsub.d f15, f18, f12, rmm # perform operation
fsub.d f15, f18, f12, rne # perform operation
fsub.d f15, f18, f12, rtz # perform operation
fsub.d f15, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fsub.d f9, f14, f18, dyn # perform operation
fsub.d f9, f14, f18, rdn # perform operation
fsub.d f9, f14, f18, rmm # perform operation
fsub.d f9, f14, f18, rne # perform operation
fsub.d f9, f14, f18, rtz # perform operation
fsub.d f9, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
fsub.d f5, f21, f8, dyn # perform operation
fsub.d f5, f21, f8, rdn # perform operation
fsub.d f5, f21, f8, rmm # perform operation
fsub.d f5, f21, f8, rne # perform operation
fsub.d f5, f21, f8, rtz # perform operation
fsub.d f5, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
fsub.d f13, f1, f28, dyn # perform operation
fsub.d f13, f1, f28, rdn # perform operation
fsub.d f13, f1, f28, rmm # perform operation
fsub.d f13, f1, f28, rne # perform operation
fsub.d f13, f1, f28, rtz # perform operation
fsub.d f13, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fsub.d f31, f29, f10, dyn # perform operation
fsub.d f31, f29, f10, rdn # perform operation
fsub.d f31, f29, f10, rmm # perform operation
fsub.d f31, f29, f10, rne # perform operation
fsub.d f31, f29, f10, rtz # perform operation
fsub.d f31, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fsub.d f25, f2, f12, dyn # perform operation
fsub.d f25, f2, f12, rdn # perform operation
fsub.d f25, f2, f12, rmm # perform operation
fsub.d f25, f2, f12, rne # perform operation
fsub.d f25, f2, f12, rtz # perform operation
fsub.d f25, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fsub.d f6, f29, f25, dyn # perform operation
fsub.d f6, f29, f25, rdn # perform operation
fsub.d f6, f29, f25, rmm # perform operation
fsub.d f6, f29, f25, rne # perform operation
fsub.d f6, f29, f25, rtz # perform operation
fsub.d f6, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f29, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
fsub.d f18, f21, f15, dyn # perform operation
fsub.d f18, f21, f15, rdn # perform operation
fsub.d f18, f21, f15, rmm # perform operation
fsub.d f18, f21, f15, rne # perform operation
fsub.d f18, f21, f15, rtz # perform operation
fsub.d f18, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fsub.d f25, f24, f19, dyn # perform operation
fsub.d f25, f24, f19, rdn # perform operation
fsub.d f25, f24, f19, rmm # perform operation
fsub.d f25, f24, f19, rne # perform operation
fsub.d f25, f24, f19, rtz # perform operation
fsub.d f25, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f24, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000001 from memory into f21
fsub.d f17, f27, f21, dyn # perform operation
fsub.d f17, f27, f21, rdn # perform operation
fsub.d f17, f27, f21, rmm # perform operation
fsub.d f17, f27, f21, rne # perform operation
fsub.d f17, f27, f21, rtz # perform operation
fsub.d f17, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fsub.d f18, f2, f17, dyn # perform operation
fsub.d f18, f2, f17, rdn # perform operation
fsub.d f18, f2, f17, rmm # perform operation
fsub.d f18, f2, f17, rne # perform operation
fsub.d f18, f2, f17, rtz # perform operation
fsub.d f18, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8010000000000000 from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fsub.d f9, f28, f8, dyn # perform operation
fsub.d f9, f28, f8, rdn # perform operation
fsub.d f9, f28, f8, rmm # perform operation
fsub.d f9, f28, f8, rne # perform operation
fsub.d f9, f28, f8, rtz # perform operation
fsub.d f9, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000000 from memory into f25
fsub.d f29, f16, f25, dyn # perform operation
fsub.d f29, f16, f25, rdn # perform operation
fsub.d f29, f16, f25, rmm # perform operation
fsub.d f29, f16, f25, rne # perform operation
fsub.d f29, f16, f25, rtz # perform operation
fsub.d f29, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fsub.d f23, f18, f13, dyn # perform operation
fsub.d f23, f18, f13, rdn # perform operation
fsub.d f23, f18, f13, rmm # perform operation
fsub.d f23, f18, f13, rne # perform operation
fsub.d f23, f18, f13, rtz # perform operation
fsub.d f23, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fsub.d f12, f23, f8, dyn # perform operation
fsub.d f12, f23, f8, rdn # perform operation
fsub.d f12, f23, f8, rmm # perform operation
fsub.d f12, f23, f8, rne # perform operation
fsub.d f12, f23, f8, rtz # perform operation
fsub.d f12, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
fsub.d f25, f23, f24, dyn # perform operation
fsub.d f25, f23, f24, rdn # perform operation
fsub.d f25, f23, f24, rmm # perform operation
fsub.d f25, f23, f24, rne # perform operation
fsub.d f25, f23, f24, rtz # perform operation
fsub.d f25, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f23, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
fsub.d f10, f24, f28, dyn # perform operation
fsub.d f10, f24, f28, rdn # perform operation
fsub.d f10, f24, f28, rmm # perform operation
fsub.d f10, f24, f28, rne # perform operation
fsub.d f10, f24, f28, rtz # perform operation
fsub.d f10, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fsub.d f16, f22, f18, dyn # perform operation
fsub.d f16, f22, f18, rdn # perform operation
fsub.d f16, f22, f18, rmm # perform operation
fsub.d f16, f22, f18, rne # perform operation
fsub.d f16, f22, f18, rtz # perform operation
fsub.d f16, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fsub.d f23, f14, f22, dyn # perform operation
fsub.d f23, f14, f22, rdn # perform operation
fsub.d f23, f14, f22, rmm # perform operation
fsub.d f23, f14, f22, rne # perform operation
fsub.d f23, f14, f22, rtz # perform operation
fsub.d f23, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fsub.d f24, f3, f28, dyn # perform operation
fsub.d f24, f3, f28, rdn # perform operation
fsub.d f24, f3, f28, rmm # perform operation
fsub.d f24, f3, f28, rne # perform operation
fsub.d f24, f3, f28, rtz # perform operation
fsub.d f24, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fsub.d f6, f20, f31, dyn # perform operation
fsub.d f6, f20, f31, rdn # perform operation
fsub.d f6, f20, f31, rmm # perform operation
fsub.d f6, f20, f31, rne # perform operation
fsub.d f6, f20, f31, rtz # perform operation
fsub.d f6, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fsub.d f12, f9, f21, dyn # perform operation
fsub.d f12, f9, f21, rdn # perform operation
fsub.d f12, f9, f21, rmm # perform operation
fsub.d f12, f9, f21, rne # perform operation
fsub.d f12, f9, f21, rtz # perform operation
fsub.d f12, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
fsub.d f30, f18, f7, dyn # perform operation
fsub.d f30, f18, f7, rdn # perform operation
fsub.d f30, f18, f7, rmm # perform operation
fsub.d f30, f18, f7, rne # perform operation
fsub.d f30, f18, f7, rtz # perform operation
fsub.d f30, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fsub.d f11, f7, f6, dyn # perform operation
fsub.d f11, f7, f6, rdn # perform operation
fsub.d f11, f7, f6, rmm # perform operation
fsub.d f11, f7, f6, rne # perform operation
fsub.d f11, f7, f6, rtz # perform operation
fsub.d f11, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
fsub.d f29, f19, f5, dyn # perform operation
fsub.d f29, f19, f5, rdn # perform operation
fsub.d f29, f19, f5, rmm # perform operation
fsub.d f29, f19, f5, rne # perform operation
fsub.d f29, f19, f5, rtz # perform operation
fsub.d f29, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
fsub.d f5, f25, f2, dyn # perform operation
fsub.d f5, f25, f2, rdn # perform operation
fsub.d f5, f25, f2, rmm # perform operation
fsub.d f5, f25, f2, rne # perform operation
fsub.d f5, f25, f2, rtz # perform operation
fsub.d f5, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fsub.d f1, f24, f22, dyn # perform operation
fsub.d f1, f24, f22, rdn # perform operation
fsub.d f1, f24, f22, rmm # perform operation
fsub.d f1, f24, f22, rne # perform operation
fsub.d f1, f24, f22, rtz # perform operation
fsub.d f1, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fsub.d f29, f8, f26, dyn # perform operation
fsub.d f29, f8, f26, rdn # perform operation
fsub.d f29, f8, f26, rmm # perform operation
fsub.d f29, f8, f26, rne # perform operation
fsub.d f29, f8, f26, rtz # perform operation
fsub.d f29, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fsub.d f11, f29, f31, dyn # perform operation
fsub.d f11, f29, f31, rdn # perform operation
fsub.d f11, f29, f31, rmm # perform operation
fsub.d f11, f29, f31, rne # perform operation
fsub.d f11, f29, f31, rtz # perform operation
fsub.d f11, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
fsub.d f22, f28, f20, dyn # perform operation
fsub.d f22, f28, f20, rdn # perform operation
fsub.d f22, f28, f20, rmm # perform operation
fsub.d f22, f28, f20, rne # perform operation
fsub.d f22, f28, f20, rtz # perform operation
fsub.d f22, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
fsub.d f17, f2, f27, dyn # perform operation
fsub.d f17, f2, f27, rdn # perform operation
fsub.d f17, f2, f27, rmm # perform operation
fsub.d f17, f2, f27, rne # perform operation
fsub.d f17, f2, f27, rtz # perform operation
fsub.d f17, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fsub.d f28, f5, f23, dyn # perform operation
fsub.d f28, f5, f23, rdn # perform operation
fsub.d f28, f5, f23, rmm # perform operation
fsub.d f28, f5, f23, rne # perform operation
fsub.d f28, f5, f23, rtz # perform operation
fsub.d f28, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fsub.d f21, f28, f30, dyn # perform operation
fsub.d f21, f28, f30, rdn # perform operation
fsub.d f21, f28, f30, rmm # perform operation
fsub.d f21, f28, f30, rne # perform operation
fsub.d f21, f28, f30, rtz # perform operation
fsub.d f21, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
fsub.d f9, f28, f10, dyn # perform operation
fsub.d f9, f28, f10, rdn # perform operation
fsub.d f9, f28, f10, rmm # perform operation
fsub.d f9, f28, f10, rne # perform operation
fsub.d f9, f28, f10, rtz # perform operation
fsub.d f9, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
fsub.d f22, f27, f8, dyn # perform operation
fsub.d f22, f27, f8, rdn # perform operation
fsub.d f22, f27, f8, rmm # perform operation
fsub.d f22, f27, f8, rne # perform operation
fsub.d f22, f27, f8, rtz # perform operation
fsub.d f22, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fsub.d f7, f8, f12, dyn # perform operation
fsub.d f7, f8, f12, rdn # perform operation
fsub.d f7, f8, f12, rmm # perform operation
fsub.d f7, f8, f12, rne # perform operation
fsub.d f7, f8, f12, rtz # perform operation
fsub.d f7, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fsub.d f21, f27, f31, dyn # perform operation
fsub.d f21, f27, f31, rdn # perform operation
fsub.d f21, f27, f31, rmm # perform operation
fsub.d f21, f27, f31, rne # perform operation
fsub.d f21, f27, f31, rtz # perform operation
fsub.d f21, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000001 from memory into f1
fsub.d f5, f8, f1, dyn # perform operation
fsub.d f5, f8, f1, rdn # perform operation
fsub.d f5, f8, f1, rmm # perform operation
fsub.d f5, f8, f1, rne # perform operation
fsub.d f5, f8, f1, rtz # perform operation
fsub.d f5, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fsub.d f13, f7, f12, dyn # perform operation
fsub.d f13, f7, f12, rdn # perform operation
fsub.d f13, f7, f12, rmm # perform operation
fsub.d f13, f7, f12, rne # perform operation
fsub.d f13, f7, f12, rtz # perform operation
fsub.d f13, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fsub.d f24, f31, f16, dyn # perform operation
fsub.d f24, f31, f16, rdn # perform operation
fsub.d f24, f31, f16, rmm # perform operation
fsub.d f24, f31, f16, rne # perform operation
fsub.d f24, f31, f16, rtz # perform operation
fsub.d f24, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fsub.d f6, f14, f19, dyn # perform operation
fsub.d f6, f14, f19, rdn # perform operation
fsub.d f6, f14, f19, rmm # perform operation
fsub.d f6, f14, f19, rne # perform operation
fsub.d f6, f14, f19, rtz # perform operation
fsub.d f6, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
fsub.d f8, f17, f13, dyn # perform operation
fsub.d f8, f17, f13, rdn # perform operation
fsub.d f8, f17, f13, rmm # perform operation
fsub.d f8, f17, f13, rne # perform operation
fsub.d f8, f17, f13, rtz # perform operation
fsub.d f8, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fsub.d f29, f11, f6, dyn # perform operation
fsub.d f29, f11, f6, rdn # perform operation
fsub.d f29, f11, f6, rmm # perform operation
fsub.d f29, f11, f6, rne # perform operation
fsub.d f29, f11, f6, rtz # perform operation
fsub.d f29, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fsub.d f24, f13, f27, dyn # perform operation
fsub.d f24, f13, f27, rdn # perform operation
fsub.d f24, f13, f27, rmm # perform operation
fsub.d f24, f13, f27, rne # perform operation
fsub.d f24, f13, f27, rtz # perform operation
fsub.d f24, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fsub.d f31, f7, f3, dyn # perform operation
fsub.d f31, f7, f3, rdn # perform operation
fsub.d f31, f7, f3, rmm # perform operation
fsub.d f31, f7, f3, rne # perform operation
fsub.d f31, f7, f3, rtz # perform operation
fsub.d f31, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fsub.d f25, f18, f16, dyn # perform operation
fsub.d f25, f18, f16, rdn # perform operation
fsub.d f25, f18, f16, rmm # perform operation
fsub.d f25, f18, f16, rne # perform operation
fsub.d f25, f18, f16, rtz # perform operation
fsub.d f25, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fsub.d f12, f27, f14, dyn # perform operation
fsub.d f12, f27, f14, rdn # perform operation
fsub.d f12, f27, f14, rmm # perform operation
fsub.d f12, f27, f14, rne # perform operation
fsub.d f12, f27, f14, rtz # perform operation
fsub.d f12, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fsub.d f17, f15, f2, dyn # perform operation
fsub.d f17, f15, f2, rdn # perform operation
fsub.d f17, f15, f2, rmm # perform operation
fsub.d f17, f15, f2, rne # perform operation
fsub.d f17, f15, f2, rtz # perform operation
fsub.d f17, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0010000000000000 from memory into f14
fsub.d f10, f19, f14, dyn # perform operation
fsub.d f10, f19, f14, rdn # perform operation
fsub.d f10, f19, f14, rmm # perform operation
fsub.d f10, f19, f14, rne # perform operation
fsub.d f10, f19, f14, rtz # perform operation
fsub.d f10, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8010000000000000 from memory into f3
fsub.d f8, f20, f3, dyn # perform operation
fsub.d f8, f20, f3, rdn # perform operation
fsub.d f8, f20, f3, rmm # perform operation
fsub.d f8, f20, f3, rne # perform operation
fsub.d f8, f20, f3, rtz # perform operation
fsub.d f8, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fsub.d f21, f13, f22, dyn # perform operation
fsub.d f21, f13, f22, rdn # perform operation
fsub.d f21, f13, f22, rmm # perform operation
fsub.d f21, f13, f22, rne # perform operation
fsub.d f21, f13, f22, rtz # perform operation
fsub.d f21, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fsub.d f1, f16, f25, dyn # perform operation
fsub.d f1, f16, f25, rdn # perform operation
fsub.d f1, f16, f25, rmm # perform operation
fsub.d f1, f16, f25, rne # perform operation
fsub.d f1, f16, f25, rtz # perform operation
fsub.d f1, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fsub.d f30, f8, f3, dyn # perform operation
fsub.d f30, f8, f3, rdn # perform operation
fsub.d f30, f8, f3, rmm # perform operation
fsub.d f30, f8, f3, rne # perform operation
fsub.d f30, f8, f3, rtz # perform operation
fsub.d f30, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fsub.d f10, f30, f20, dyn # perform operation
fsub.d f10, f30, f20, rdn # perform operation
fsub.d f10, f30, f20, rmm # perform operation
fsub.d f10, f30, f20, rne # perform operation
fsub.d f10, f30, f20, rtz # perform operation
fsub.d f10, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
fsub.d f31, f24, f8, dyn # perform operation
fsub.d f31, f24, f8, rdn # perform operation
fsub.d f31, f24, f8, rmm # perform operation
fsub.d f31, f24, f8, rne # perform operation
fsub.d f31, f24, f8, rtz # perform operation
fsub.d f31, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fsub.d f31, f13, f28, dyn # perform operation
fsub.d f31, f13, f28, rdn # perform operation
fsub.d f31, f13, f28, rmm # perform operation
fsub.d f31, f13, f28, rne # perform operation
fsub.d f31, f13, f28, rtz # perform operation
fsub.d f31, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fsub.d f8, f6, f14, dyn # perform operation
fsub.d f8, f6, f14, rdn # perform operation
fsub.d f8, f6, f14, rmm # perform operation
fsub.d f8, f6, f14, rne # perform operation
fsub.d f8, f6, f14, rtz # perform operation
fsub.d f8, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fsub.d f1, f30, f18, dyn # perform operation
fsub.d f1, f30, f18, rdn # perform operation
fsub.d f1, f30, f18, rmm # perform operation
fsub.d f1, f30, f18, rne # perform operation
fsub.d f1, f30, f18, rtz # perform operation
fsub.d f1, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fsub.d f5, f19, f15, dyn # perform operation
fsub.d f5, f19, f15, rdn # perform operation
fsub.d f5, f19, f15, rmm # perform operation
fsub.d f5, f19, f15, rne # perform operation
fsub.d f5, f19, f15, rtz # perform operation
fsub.d f5, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fsub.d f17, f27, f25, dyn # perform operation
fsub.d f17, f27, f25, rdn # perform operation
fsub.d f17, f27, f25, rmm # perform operation
fsub.d f17, f27, f25, rne # perform operation
fsub.d f17, f27, f25, rtz # perform operation
fsub.d f17, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fsub.d f31, f29, f21, dyn # perform operation
fsub.d f31, f29, f21, rdn # perform operation
fsub.d f31, f29, f21, rmm # perform operation
fsub.d f31, f29, f21, rne # perform operation
fsub.d f31, f29, f21, rtz # perform operation
fsub.d f31, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fsub.d f27, f31, f7, dyn # perform operation
fsub.d f27, f31, f7, rdn # perform operation
fsub.d f27, f31, f7, rmm # perform operation
fsub.d f27, f31, f7, rne # perform operation
fsub.d f27, f31, f7, rtz # perform operation
fsub.d f27, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
fsub.d f3, f22, f8, dyn # perform operation
fsub.d f3, f22, f8, rdn # perform operation
fsub.d f3, f22, f8, rmm # perform operation
fsub.d f3, f22, f8, rne # perform operation
fsub.d f3, f22, f8, rtz # perform operation
fsub.d f3, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fsub.d f12, f7, f16, dyn # perform operation
fsub.d f12, f7, f16, rdn # perform operation
fsub.d f12, f7, f16, rmm # perform operation
fsub.d f12, f7, f16, rne # perform operation
fsub.d f12, f7, f16, rtz # perform operation
fsub.d f12, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fsub.d f1, f22, f9, dyn # perform operation
fsub.d f1, f22, f9, rdn # perform operation
fsub.d f1, f22, f9, rmm # perform operation
fsub.d f1, f22, f9, rne # perform operation
fsub.d f1, f22, f9, rtz # perform operation
fsub.d f1, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000001 from memory into f18
fsub.d f15, f31, f18, dyn # perform operation
fsub.d f15, f31, f18, rdn # perform operation
fsub.d f15, f31, f18, rmm # perform operation
fsub.d f15, f31, f18, rne # perform operation
fsub.d f15, f31, f18, rtz # perform operation
fsub.d f15, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fsub.d f5, f20, f30, dyn # perform operation
fsub.d f5, f20, f30, rdn # perform operation
fsub.d f5, f20, f30, rmm # perform operation
fsub.d f5, f20, f30, rne # perform operation
fsub.d f5, f20, f30, rtz # perform operation
fsub.d f5, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fsub.d f18, f20, f17, dyn # perform operation
fsub.d f18, f20, f17, rdn # perform operation
fsub.d f18, f20, f17, rmm # perform operation
fsub.d f18, f20, f17, rne # perform operation
fsub.d f18, f20, f17, rtz # perform operation
fsub.d f18, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
fsub.d f7, f14, f22, dyn # perform operation
fsub.d f7, f14, f22, rdn # perform operation
fsub.d f7, f14, f22, rmm # perform operation
fsub.d f7, f14, f22, rne # perform operation
fsub.d f7, f14, f22, rtz # perform operation
fsub.d f7, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fsub.d f8, f27, f21, dyn # perform operation
fsub.d f8, f27, f21, rdn # perform operation
fsub.d f8, f27, f21, rmm # perform operation
fsub.d f8, f27, f21, rne # perform operation
fsub.d f8, f27, f21, rtz # perform operation
fsub.d f8, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fsub.d f17, f5, f20, dyn # perform operation
fsub.d f17, f5, f20, rdn # perform operation
fsub.d f17, f5, f20, rmm # perform operation
fsub.d f17, f5, f20, rne # perform operation
fsub.d f17, f5, f20, rtz # perform operation
fsub.d f17, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fsub.d f25, f13, f20, dyn # perform operation
fsub.d f25, f13, f20, rdn # perform operation
fsub.d f25, f13, f20, rmm # perform operation
fsub.d f25, f13, f20, rne # perform operation
fsub.d f25, f13, f20, rtz # perform operation
fsub.d f25, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fsub.d f15, f25, f2, dyn # perform operation
fsub.d f15, f25, f2, rdn # perform operation
fsub.d f15, f25, f2, rmm # perform operation
fsub.d f15, f25, f2, rne # perform operation
fsub.d f15, f25, f2, rtz # perform operation
fsub.d f15, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fsub.d f3, f24, f30, dyn # perform operation
fsub.d f3, f24, f30, rdn # perform operation
fsub.d f3, f24, f30, rmm # perform operation
fsub.d f3, f24, f30, rne # perform operation
fsub.d f3, f24, f30, rtz # perform operation
fsub.d f3, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fsub.d f16, f2, f12, dyn # perform operation
fsub.d f16, f2, f12, rdn # perform operation
fsub.d f16, f2, f12, rmm # perform operation
fsub.d f16, f2, f12, rne # perform operation
fsub.d f16, f2, f12, rtz # perform operation
fsub.d f16, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xc000000000000000 from memory into f20
fsub.d f28, f5, f20, dyn # perform operation
fsub.d f28, f5, f20, rdn # perform operation
fsub.d f28, f5, f20, rmm # perform operation
fsub.d f28, f5, f20, rne # perform operation
fsub.d f28, f5, f20, rtz # perform operation
fsub.d f28, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fsub.d f18, f9, f23, dyn # perform operation
fsub.d f18, f9, f23, rdn # perform operation
fsub.d f18, f9, f23, rmm # perform operation
fsub.d f18, f9, f23, rne # perform operation
fsub.d f18, f9, f23, rtz # perform operation
fsub.d f18, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fsub.d f31, f13, f20, dyn # perform operation
fsub.d f31, f13, f20, rdn # perform operation
fsub.d f31, f13, f20, rmm # perform operation
fsub.d f31, f13, f20, rne # perform operation
fsub.d f31, f13, f20, rtz # perform operation
fsub.d f31, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fsub.d f12, f14, f6, dyn # perform operation
fsub.d f12, f14, f6, rdn # perform operation
fsub.d f12, f14, f6, rmm # perform operation
fsub.d f12, f14, f6, rne # perform operation
fsub.d f12, f14, f6, rtz # perform operation
fsub.d f12, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fsub.d f12, f30, f6, dyn # perform operation
fsub.d f12, f30, f6, rdn # perform operation
fsub.d f12, f30, f6, rmm # perform operation
fsub.d f12, f30, f6, rne # perform operation
fsub.d f12, f30, f6, rtz # perform operation
fsub.d f12, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fsub.d f1, f29, f17, dyn # perform operation
fsub.d f1, f29, f17, rdn # perform operation
fsub.d f1, f29, f17, rmm # perform operation
fsub.d f1, f29, f17, rne # perform operation
fsub.d f1, f29, f17, rtz # perform operation
fsub.d f1, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fsub.d f30, f26, f22, dyn # perform operation
fsub.d f30, f26, f22, rdn # perform operation
fsub.d f30, f26, f22, rmm # perform operation
fsub.d f30, f26, f22, rne # perform operation
fsub.d f30, f26, f22, rtz # perform operation
fsub.d f30, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fsub.d f3, f26, f11, dyn # perform operation
fsub.d f3, f26, f11, rdn # perform operation
fsub.d f3, f26, f11, rmm # perform operation
fsub.d f3, f26, f11, rne # perform operation
fsub.d f3, f26, f11, rtz # perform operation
fsub.d f3, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fsub.d f13, f31, f21, dyn # perform operation
fsub.d f13, f31, f21, rdn # perform operation
fsub.d f13, f31, f21, rmm # perform operation
fsub.d f13, f31, f21, rne # perform operation
fsub.d f13, f31, f21, rtz # perform operation
fsub.d f13, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
fsub.d f12, f11, f15, dyn # perform operation
fsub.d f12, f11, f15, rdn # perform operation
fsub.d f12, f11, f15, rmm # perform operation
fsub.d f12, f11, f15, rne # perform operation
fsub.d f12, f11, f15, rtz # perform operation
fsub.d f12, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fsub.d f25, f9, f14, dyn # perform operation
fsub.d f25, f9, f14, rdn # perform operation
fsub.d f25, f9, f14, rmm # perform operation
fsub.d f25, f9, f14, rne # perform operation
fsub.d f25, f9, f14, rtz # perform operation
fsub.d f25, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fsub.d f13, f7, f29, dyn # perform operation
fsub.d f13, f7, f29, rdn # perform operation
fsub.d f13, f7, f29, rmm # perform operation
fsub.d f13, f7, f29, rne # perform operation
fsub.d f13, f7, f29, rtz # perform operation
fsub.d f13, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000000 from memory into f29
fsub.d f23, f16, f29, dyn # perform operation
fsub.d f23, f16, f29, rdn # perform operation
fsub.d f23, f16, f29, rmm # perform operation
fsub.d f23, f16, f29, rne # perform operation
fsub.d f23, f16, f29, rtz # perform operation
fsub.d f23, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fsub.d f19, f24, f18, dyn # perform operation
fsub.d f19, f24, f18, rdn # perform operation
fsub.d f19, f24, f18, rmm # perform operation
fsub.d f19, f24, f18, rne # perform operation
fsub.d f19, f24, f18, rtz # perform operation
fsub.d f19, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fsub.d f24, f7, f17, dyn # perform operation
fsub.d f24, f7, f17, rdn # perform operation
fsub.d f24, f7, f17, rmm # perform operation
fsub.d f24, f7, f17, rne # perform operation
fsub.d f24, f7, f17, rtz # perform operation
fsub.d f24, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff8000000000000 from memory into f29
fsub.d f17, f5, f29, dyn # perform operation
fsub.d f17, f5, f29, rdn # perform operation
fsub.d f17, f5, f29, rmm # perform operation
fsub.d f17, f5, f29, rne # perform operation
fsub.d f17, f5, f29, rtz # perform operation
fsub.d f17, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fsub.d f10, f5, f16, dyn # perform operation
fsub.d f10, f5, f16, rdn # perform operation
fsub.d f10, f5, f16, rmm # perform operation
fsub.d f10, f5, f16, rne # perform operation
fsub.d f10, f5, f16, rtz # perform operation
fsub.d f10, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fsub.d f10, f20, f11, dyn # perform operation
fsub.d f10, f20, f11, rdn # perform operation
fsub.d f10, f20, f11, rmm # perform operation
fsub.d f10, f20, f11, rne # perform operation
fsub.d f10, f20, f11, rtz # perform operation
fsub.d f10, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000001 from memory into f15
fsub.d f29, f19, f15, dyn # perform operation
fsub.d f29, f19, f15, rdn # perform operation
fsub.d f29, f19, f15, rmm # perform operation
fsub.d f29, f19, f15, rne # perform operation
fsub.d f29, f19, f15, rtz # perform operation
fsub.d f29, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
fsub.d f1, f7, f18, dyn # perform operation
fsub.d f1, f7, f18, rdn # perform operation
fsub.d f1, f7, f18, rmm # perform operation
fsub.d f1, f7, f18, rne # perform operation
fsub.d f1, f7, f18, rtz # perform operation
fsub.d f1, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fsub.d f13, f7, f2, dyn # perform operation
fsub.d f13, f7, f2, rdn # perform operation
fsub.d f13, f7, f2, rmm # perform operation
fsub.d f13, f7, f2, rne # perform operation
fsub.d f13, f7, f2, rtz # perform operation
fsub.d f13, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fsub.d f29, f23, f1, dyn # perform operation
fsub.d f29, f23, f1, rdn # perform operation
fsub.d f29, f23, f1, rmm # perform operation
fsub.d f29, f23, f1, rne # perform operation
fsub.d f29, f23, f1, rtz # perform operation
fsub.d f29, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
fsub.d f15, f26, f19, dyn # perform operation
fsub.d f15, f26, f19, rdn # perform operation
fsub.d f15, f26, f19, rmm # perform operation
fsub.d f15, f26, f19, rne # perform operation
fsub.d f15, f26, f19, rtz # perform operation
fsub.d f15, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fsub.d f24, f10, f21, dyn # perform operation
fsub.d f24, f10, f21, rdn # perform operation
fsub.d f24, f10, f21, rmm # perform operation
fsub.d f24, f10, f21, rne # perform operation
fsub.d f24, f10, f21, rtz # perform operation
fsub.d f24, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fsub.d f23, f7, f29, dyn # perform operation
fsub.d f23, f7, f29, rdn # perform operation
fsub.d f23, f7, f29, rmm # perform operation
fsub.d f23, f7, f29, rne # perform operation
fsub.d f23, f7, f29, rtz # perform operation
fsub.d f23, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
fsub.d f23, f27, f12, dyn # perform operation
fsub.d f23, f27, f12, rdn # perform operation
fsub.d f23, f27, f12, rmm # perform operation
fsub.d f23, f27, f12, rne # perform operation
fsub.d f23, f27, f12, rtz # perform operation
fsub.d f23, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff8000000000000 from memory into f18
fsub.d f16, f27, f18, dyn # perform operation
fsub.d f16, f27, f18, rdn # perform operation
fsub.d f16, f27, f18, rmm # perform operation
fsub.d f16, f27, f18, rne # perform operation
fsub.d f16, f27, f18, rtz # perform operation
fsub.d f16, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x800fffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fsub.d f7, f14, f20, dyn # perform operation
fsub.d f7, f14, f20, rdn # perform operation
fsub.d f7, f14, f20, rmm # perform operation
fsub.d f7, f14, f20, rne # perform operation
fsub.d f7, f14, f20, rtz # perform operation
fsub.d f7, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fsub.d f10, f15, f2, dyn # perform operation
fsub.d f10, f15, f2, rdn # perform operation
fsub.d f10, f15, f2, rmm # perform operation
fsub.d f10, f15, f2, rne # perform operation
fsub.d f10, f15, f2, rtz # perform operation
fsub.d f10, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fsub.d f20, f8, f11, dyn # perform operation
fsub.d f20, f8, f11, rdn # perform operation
fsub.d f20, f8, f11, rmm # perform operation
fsub.d f20, f8, f11, rne # perform operation
fsub.d f20, f8, f11, rtz # perform operation
fsub.d f20, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fsub.d f13, f18, f14, dyn # perform operation
fsub.d f13, f18, f14, rdn # perform operation
fsub.d f13, f18, f14, rmm # perform operation
fsub.d f13, f18, f14, rne # perform operation
fsub.d f13, f18, f14, rtz # perform operation
fsub.d f13, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x800fffffffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fsub.d f21, f7, f11, dyn # perform operation
fsub.d f21, f7, f11, rdn # perform operation
fsub.d f21, f7, f11, rmm # perform operation
fsub.d f21, f7, f11, rne # perform operation
fsub.d f21, f7, f11, rtz # perform operation
fsub.d f21, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xffefffffffffffff from memory into f30
fsub.d f1, f29, f30, dyn # perform operation
fsub.d f1, f29, f30, rdn # perform operation
fsub.d f1, f29, f30, rmm # perform operation
fsub.d f1, f29, f30, rne # perform operation
fsub.d f1, f29, f30, rtz # perform operation
fsub.d f1, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
fsub.d f19, f12, f15, dyn # perform operation
fsub.d f19, f12, f15, rdn # perform operation
fsub.d f19, f12, f15, rmm # perform operation
fsub.d f19, f12, f15, rne # perform operation
fsub.d f19, f12, f15, rtz # perform operation
fsub.d f19, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
fsub.d f31, f6, f9, dyn # perform operation
fsub.d f31, f6, f9, rdn # perform operation
fsub.d f31, f6, f9, rmm # perform operation
fsub.d f31, f6, f9, rne # perform operation
fsub.d f31, f6, f9, rtz # perform operation
fsub.d f31, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
fsub.d f17, f12, f31, dyn # perform operation
fsub.d f17, f12, f31, rdn # perform operation
fsub.d f17, f12, f31, rmm # perform operation
fsub.d f17, f12, f31, rne # perform operation
fsub.d f17, f12, f31, rtz # perform operation
fsub.d f17, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
fsub.d f31, f22, f5, dyn # perform operation
fsub.d f31, f22, f5, rdn # perform operation
fsub.d f31, f22, f5, rmm # perform operation
fsub.d f31, f22, f5, rne # perform operation
fsub.d f31, f22, f5, rtz # perform operation
fsub.d f31, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f22, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fsub.d f10, f31, f20, dyn # perform operation
fsub.d f10, f31, f20, rdn # perform operation
fsub.d f10, f31, f20, rmm # perform operation
fsub.d f10, f31, f20, rne # perform operation
fsub.d f10, f31, f20, rtz # perform operation
fsub.d f10, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fsub.d f26, f6, f30, dyn # perform operation
fsub.d f26, f6, f30, rdn # perform operation
fsub.d f26, f6, f30, rmm # perform operation
fsub.d f26, f6, f30, rne # perform operation
fsub.d f26, f6, f30, rtz # perform operation
fsub.d f26, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fsub.d f9, f26, f6, dyn # perform operation
fsub.d f9, f26, f6, rdn # perform operation
fsub.d f9, f26, f6, rmm # perform operation
fsub.d f9, f26, f6, rne # perform operation
fsub.d f9, f26, f6, rtz # perform operation
fsub.d f9, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fsub.d f22, f24, f17, dyn # perform operation
fsub.d f22, f24, f17, rdn # perform operation
fsub.d f22, f24, f17, rmm # perform operation
fsub.d f22, f24, f17, rne # perform operation
fsub.d f22, f24, f17, rtz # perform operation
fsub.d f22, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fsub.d f25, f5, f6, dyn # perform operation
fsub.d f25, f5, f6, rdn # perform operation
fsub.d f25, f5, f6, rmm # perform operation
fsub.d f25, f5, f6, rne # perform operation
fsub.d f25, f5, f6, rtz # perform operation
fsub.d f25, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7fffffffffffffff from memory into f15
fsub.d f2, f5, f15, dyn # perform operation
fsub.d f2, f5, f15, rdn # perform operation
fsub.d f2, f5, f15, rmm # perform operation
fsub.d f2, f5, f15, rne # perform operation
fsub.d f2, f5, f15, rtz # perform operation
fsub.d f2, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
fsub.d f23, f25, f19, dyn # perform operation
fsub.d f23, f25, f19, rdn # perform operation
fsub.d f23, f25, f19, rmm # perform operation
fsub.d f23, f25, f19, rne # perform operation
fsub.d f23, f25, f19, rtz # perform operation
fsub.d f23, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fsub.d f21, f5, f2, dyn # perform operation
fsub.d f21, f5, f2, rdn # perform operation
fsub.d f21, f5, f2, rmm # perform operation
fsub.d f21, f5, f2, rne # perform operation
fsub.d f21, f5, f2, rtz # perform operation
fsub.d f21, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fsub.d f20, f12, f10, dyn # perform operation
fsub.d f20, f12, f10, rdn # perform operation
fsub.d f20, f12, f10, rmm # perform operation
fsub.d f20, f12, f10, rne # perform operation
fsub.d f20, f12, f10, rtz # perform operation
fsub.d f20, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
fsub.d f7, f13, f12, dyn # perform operation
fsub.d f7, f13, f12, rdn # perform operation
fsub.d f7, f13, f12, rmm # perform operation
fsub.d f7, f13, f12, rne # perform operation
fsub.d f7, f13, f12, rtz # perform operation
fsub.d f7, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fsub.d f25, f12, f1, dyn # perform operation
fsub.d f25, f12, f1, rdn # perform operation
fsub.d f25, f12, f1, rmm # perform operation
fsub.d f25, f12, f1, rne # perform operation
fsub.d f25, f12, f1, rtz # perform operation
fsub.d f25, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fsub.d f7, f31, f20, dyn # perform operation
fsub.d f7, f31, f20, rdn # perform operation
fsub.d f7, f31, f20, rmm # perform operation
fsub.d f7, f31, f20, rne # perform operation
fsub.d f7, f31, f20, rtz # perform operation
fsub.d f7, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fsub.d f17, f20, f31, dyn # perform operation
fsub.d f17, f20, f31, rdn # perform operation
fsub.d f17, f20, f31, rmm # perform operation
fsub.d f17, f20, f31, rne # perform operation
fsub.d f17, f20, f31, rtz # perform operation
fsub.d f17, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f22, f7, f31, dyn # perform operation
fsub.d f22, f7, f31, rdn # perform operation
fsub.d f22, f7, f31, rmm # perform operation
fsub.d f22, f7, f31, rne # perform operation
fsub.d f22, f7, f31, rtz # perform operation
fsub.d f22, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fsub.d f7, f8, f29, dyn # perform operation
fsub.d f7, f8, f29, rdn # perform operation
fsub.d f7, f8, f29, rmm # perform operation
fsub.d f7, f8, f29, rne # perform operation
fsub.d f7, f8, f29, rtz # perform operation
fsub.d f7, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0008000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fsub.d f13, f8, f5, dyn # perform operation
fsub.d f13, f8, f5, rdn # perform operation
fsub.d f13, f8, f5, rmm # perform operation
fsub.d f13, f8, f5, rne # perform operation
fsub.d f13, f8, f5, rtz # perform operation
fsub.d f13, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0008000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fsub.d f21, f7, f2, dyn # perform operation
fsub.d f21, f7, f2, rdn # perform operation
fsub.d f21, f7, f2, rmm # perform operation
fsub.d f21, f7, f2, rne # perform operation
fsub.d f21, f7, f2, rtz # perform operation
fsub.d f21, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f7, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fsub.d f29, f1, f17, dyn # perform operation
fsub.d f29, f1, f17, rdn # perform operation
fsub.d f29, f1, f17, rmm # perform operation
fsub.d f29, f1, f17, rne # perform operation
fsub.d f29, f1, f17, rtz # perform operation
fsub.d f29, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f1, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fsub.d f26, f16, f24, dyn # perform operation
fsub.d f26, f16, f24, rdn # perform operation
fsub.d f26, f16, f24, rmm # perform operation
fsub.d f26, f16, f24, rne # perform operation
fsub.d f26, f16, f24, rtz # perform operation
fsub.d f26, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
fsub.d f13, f12, f11, dyn # perform operation
fsub.d f13, f12, f11, rdn # perform operation
fsub.d f13, f12, f11, rmm # perform operation
fsub.d f13, f12, f11, rne # perform operation
fsub.d f13, f12, f11, rtz # perform operation
fsub.d f13, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fsub.d f8, f26, f9, dyn # perform operation
fsub.d f8, f26, f9, rdn # perform operation
fsub.d f8, f26, f9, rmm # perform operation
fsub.d f8, f26, f9, rne # perform operation
fsub.d f8, f26, f9, rtz # perform operation
fsub.d f8, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fsub.d f1, f22, f8, dyn # perform operation
fsub.d f1, f22, f8, rdn # perform operation
fsub.d f1, f22, f8, rmm # perform operation
fsub.d f1, f22, f8, rne # perform operation
fsub.d f1, f22, f8, rtz # perform operation
fsub.d f1, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fsub.d f15, f5, f12, dyn # perform operation
fsub.d f15, f5, f12, rdn # perform operation
fsub.d f15, f5, f12, rmm # perform operation
fsub.d f15, f5, f12, rne # perform operation
fsub.d f15, f5, f12, rtz # perform operation
fsub.d f15, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fsub.d f27, f31, f8, dyn # perform operation
fsub.d f27, f31, f8, rdn # perform operation
fsub.d f27, f31, f8, rmm # perform operation
fsub.d f27, f31, f8, rne # perform operation
fsub.d f27, f31, f8, rtz # perform operation
fsub.d f27, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fsub.d f25, f2, f29, dyn # perform operation
fsub.d f25, f2, f29, rdn # perform operation
fsub.d f25, f2, f29, rmm # perform operation
fsub.d f25, f2, f29, rne # perform operation
fsub.d f25, f2, f29, rtz # perform operation
fsub.d f25, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fsub.d f30, f25, f11, dyn # perform operation
fsub.d f30, f25, f11, rdn # perform operation
fsub.d f30, f25, f11, rmm # perform operation
fsub.d f30, f25, f11, rne # perform operation
fsub.d f30, f25, f11, rtz # perform operation
fsub.d f30, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fsub.d f8, f6, f3, dyn # perform operation
fsub.d f8, f6, f3, rdn # perform operation
fsub.d f8, f6, f3, rmm # perform operation
fsub.d f8, f6, f3, rne # perform operation
fsub.d f8, f6, f3, rtz # perform operation
fsub.d f8, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fsub.d f1, f20, f23, dyn # perform operation
fsub.d f1, f20, f23, rdn # perform operation
fsub.d f1, f20, f23, rmm # perform operation
fsub.d f1, f20, f23, rne # perform operation
fsub.d f1, f20, f23, rtz # perform operation
fsub.d f1, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0008000000000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fsub.d f21, f18, f2, dyn # perform operation
fsub.d f21, f18, f2, rdn # perform operation
fsub.d f21, f18, f2, rmm # perform operation
fsub.d f21, f18, f2, rne # perform operation
fsub.d f21, f18, f2, rtz # perform operation
fsub.d f21, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fsub.d f17, f13, f28, dyn # perform operation
fsub.d f17, f13, f28, rdn # perform operation
fsub.d f17, f13, f28, rmm # perform operation
fsub.d f17, f13, f28, rne # perform operation
fsub.d f17, f13, f28, rtz # perform operation
fsub.d f17, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fsub.d f5, f17, f25, dyn # perform operation
fsub.d f5, f17, f25, rdn # perform operation
fsub.d f5, f17, f25, rmm # perform operation
fsub.d f5, f17, f25, rne # perform operation
fsub.d f5, f17, f25, rtz # perform operation
fsub.d f5, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f17, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fsub.d f5, f27, f7, dyn # perform operation
fsub.d f5, f27, f7, rdn # perform operation
fsub.d f5, f27, f7, rmm # perform operation
fsub.d f5, f27, f7, rne # perform operation
fsub.d f5, f27, f7, rtz # perform operation
fsub.d f5, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fsub.d f26, f31, f6, dyn # perform operation
fsub.d f26, f31, f6, rdn # perform operation
fsub.d f26, f31, f6, rmm # perform operation
fsub.d f26, f31, f6, rne # perform operation
fsub.d f26, f31, f6, rtz # perform operation
fsub.d f26, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
fsub.d f12, f9, f31, dyn # perform operation
fsub.d f12, f9, f31, rdn # perform operation
fsub.d f12, f9, f31, rmm # perform operation
fsub.d f12, f9, f31, rne # perform operation
fsub.d f12, f9, f31, rtz # perform operation
fsub.d f12, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
fsub.d f29, f10, f3, dyn # perform operation
fsub.d f29, f10, f3, rdn # perform operation
fsub.d f29, f10, f3, rmm # perform operation
fsub.d f29, f10, f3, rne # perform operation
fsub.d f29, f10, f3, rtz # perform operation
fsub.d f29, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fsub.d f22, f11, f18, dyn # perform operation
fsub.d f22, f11, f18, rdn # perform operation
fsub.d f22, f11, f18, rmm # perform operation
fsub.d f22, f11, f18, rne # perform operation
fsub.d f22, f11, f18, rtz # perform operation
fsub.d f22, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fsub.d f11, f24, f3, dyn # perform operation
fsub.d f11, f24, f3, rdn # perform operation
fsub.d f11, f24, f3, rmm # perform operation
fsub.d f11, f24, f3, rne # perform operation
fsub.d f11, f24, f3, rtz # perform operation
fsub.d f11, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
fsub.d f30, f5, f7, dyn # perform operation
fsub.d f30, f5, f7, rdn # perform operation
fsub.d f30, f5, f7, rmm # perform operation
fsub.d f30, f5, f7, rne # perform operation
fsub.d f30, f5, f7, rtz # perform operation
fsub.d f30, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f5, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
fsub.d f21, f14, f9, dyn # perform operation
fsub.d f21, f14, f9, rdn # perform operation
fsub.d f21, f14, f9, rmm # perform operation
fsub.d f21, f14, f9, rne # perform operation
fsub.d f21, f14, f9, rtz # perform operation
fsub.d f21, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fsub.d f2, f9, f3, dyn # perform operation
fsub.d f2, f9, f3, rdn # perform operation
fsub.d f2, f9, f3, rmm # perform operation
fsub.d f2, f9, f3, rne # perform operation
fsub.d f2, f9, f3, rtz # perform operation
fsub.d f2, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fsub.d f14, f23, f31, dyn # perform operation
fsub.d f14, f23, f31, rdn # perform operation
fsub.d f14, f23, f31, rmm # perform operation
fsub.d f14, f23, f31, rne # perform operation
fsub.d f14, f23, f31, rtz # perform operation
fsub.d f14, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fsub.d f25, f30, f5, dyn # perform operation
fsub.d f25, f30, f5, rdn # perform operation
fsub.d f25, f30, f5, rmm # perform operation
fsub.d f25, f30, f5, rne # perform operation
fsub.d f25, f30, f5, rtz # perform operation
fsub.d f25, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fsub.d f9, f29, f3, dyn # perform operation
fsub.d f9, f29, f3, rdn # perform operation
fsub.d f9, f29, f3, rmm # perform operation
fsub.d f9, f29, f3, rne # perform operation
fsub.d f9, f29, f3, rtz # perform operation
fsub.d f9, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
fsub.d f3, f18, f23, dyn # perform operation
fsub.d f3, f18, f23, rdn # perform operation
fsub.d f3, f18, f23, rmm # perform operation
fsub.d f3, f18, f23, rne # perform operation
fsub.d f3, f18, f23, rtz # perform operation
fsub.d f3, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fsub.d f24, f21, f1, dyn # perform operation
fsub.d f24, f21, f1, rdn # perform operation
fsub.d f24, f21, f1, rmm # perform operation
fsub.d f24, f21, f1, rne # perform operation
fsub.d f24, f21, f1, rtz # perform operation
fsub.d f24, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fsub.d f19, f7, f12, dyn # perform operation
fsub.d f19, f7, f12, rdn # perform operation
fsub.d f19, f7, f12, rmm # perform operation
fsub.d f19, f7, f12, rne # perform operation
fsub.d f19, f7, f12, rtz # perform operation
fsub.d f19, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fsub.d f25, f21, f3, dyn # perform operation
fsub.d f25, f21, f3, rdn # perform operation
fsub.d f25, f21, f3, rmm # perform operation
fsub.d f25, f21, f3, rne # perform operation
fsub.d f25, f21, f3, rtz # perform operation
fsub.d f25, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fsub.d f20, f28, f31, dyn # perform operation
fsub.d f20, f28, f31, rdn # perform operation
fsub.d f20, f28, f31, rmm # perform operation
fsub.d f20, f28, f31, rne # perform operation
fsub.d f20, f28, f31, rtz # perform operation
fsub.d f20, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fsub.d f17, f25, f18, dyn # perform operation
fsub.d f17, f25, f18, rdn # perform operation
fsub.d f17, f25, f18, rmm # perform operation
fsub.d f17, f25, f18, rne # perform operation
fsub.d f17, f25, f18, rtz # perform operation
fsub.d f17, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fsub.d f3, f20, f14, dyn # perform operation
fsub.d f3, f20, f14, rdn # perform operation
fsub.d f3, f20, f14, rmm # perform operation
fsub.d f3, f20, f14, rne # perform operation
fsub.d f3, f20, f14, rtz # perform operation
fsub.d f3, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fsub.d f9, f23, f17, dyn # perform operation
fsub.d f9, f23, f17, rdn # perform operation
fsub.d f9, f23, f17, rmm # perform operation
fsub.d f9, f23, f17, rne # perform operation
fsub.d f9, f23, f17, rtz # perform operation
fsub.d f9, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8008000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fsub.d f21, f5, f29, dyn # perform operation
fsub.d f21, f5, f29, rdn # perform operation
fsub.d f21, f5, f29, rmm # perform operation
fsub.d f21, f5, f29, rne # perform operation
fsub.d f21, f5, f29, rtz # perform operation
fsub.d f21, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8008000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fsub.d f17, f16, f7, dyn # perform operation
fsub.d f17, f16, f7, rdn # perform operation
fsub.d f17, f16, f7, rmm # perform operation
fsub.d f17, f16, f7, rne # perform operation
fsub.d f17, f16, f7, rtz # perform operation
fsub.d f17, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fsub.d f19, f2, f20, dyn # perform operation
fsub.d f19, f2, f20, rdn # perform operation
fsub.d f19, f2, f20, rmm # perform operation
fsub.d f19, f2, f20, rne # perform operation
fsub.d f19, f2, f20, rtz # perform operation
fsub.d f19, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fsub.d f18, f28, f22, dyn # perform operation
fsub.d f18, f28, f22, rdn # perform operation
fsub.d f18, f28, f22, rmm # perform operation
fsub.d f18, f28, f22, rne # perform operation
fsub.d f18, f28, f22, rtz # perform operation
fsub.d f18, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fsub.d f13, f31, f27, dyn # perform operation
fsub.d f13, f31, f27, rdn # perform operation
fsub.d f13, f31, f27, rmm # perform operation
fsub.d f13, f31, f27, rne # perform operation
fsub.d f13, f31, f27, rtz # perform operation
fsub.d f13, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fsub.d f29, f20, f23, dyn # perform operation
fsub.d f29, f20, f23, rdn # perform operation
fsub.d f29, f20, f23, rmm # perform operation
fsub.d f29, f20, f23, rne # perform operation
fsub.d f29, f20, f23, rtz # perform operation
fsub.d f29, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fsub.d f18, f2, f12, dyn # perform operation
fsub.d f18, f2, f12, rdn # perform operation
fsub.d f18, f2, f12, rmm # perform operation
fsub.d f18, f2, f12, rne # perform operation
fsub.d f18, f2, f12, rtz # perform operation
fsub.d f18, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fsub.d f23, f6, f17, dyn # perform operation
fsub.d f23, f6, f17, rdn # perform operation
fsub.d f23, f6, f17, rmm # perform operation
fsub.d f23, f6, f17, rne # perform operation
fsub.d f23, f6, f17, rtz # perform operation
fsub.d f23, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fsub.d f30, f25, f12, dyn # perform operation
fsub.d f30, f25, f12, rdn # perform operation
fsub.d f30, f25, f12, rmm # perform operation
fsub.d f30, f25, f12, rne # perform operation
fsub.d f30, f25, f12, rtz # perform operation
fsub.d f30, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff8000000000000 from memory into f23
fsub.d f6, f21, f23, dyn # perform operation
fsub.d f6, f21, f23, rdn # perform operation
fsub.d f6, f21, f23, rmm # perform operation
fsub.d f6, f21, f23, rne # perform operation
fsub.d f6, f21, f23, rtz # perform operation
fsub.d f6, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f30, f26, f25, dyn # perform operation
fsub.d f30, f26, f25, rdn # perform operation
fsub.d f30, f26, f25, rmm # perform operation
fsub.d f30, f26, f25, rne # perform operation
fsub.d f30, f26, f25, rtz # perform operation
fsub.d f30, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
fsub.d f11, f2, f19, dyn # perform operation
fsub.d f11, f2, f19, rdn # perform operation
fsub.d f11, f2, f19, rmm # perform operation
fsub.d f11, f2, f19, rne # perform operation
fsub.d f11, f2, f19, rtz # perform operation
fsub.d f11, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fsub.d f27, f29, f9, dyn # perform operation
fsub.d f27, f29, f9, rdn # perform operation
fsub.d f27, f29, f9, rmm # perform operation
fsub.d f27, f29, f9, rne # perform operation
fsub.d f27, f29, f9, rtz # perform operation
fsub.d f27, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
fsub.d f10, f7, f12, dyn # perform operation
fsub.d f10, f7, f12, rdn # perform operation
fsub.d f10, f7, f12, rmm # perform operation
fsub.d f10, f7, f12, rne # perform operation
fsub.d f10, f7, f12, rtz # perform operation
fsub.d f10, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000001 from memory into f16
fsub.d f6, f11, f16, dyn # perform operation
fsub.d f6, f11, f16, rdn # perform operation
fsub.d f6, f11, f16, rmm # perform operation
fsub.d f6, f11, f16, rne # perform operation
fsub.d f6, f11, f16, rtz # perform operation
fsub.d f6, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
fsub.d f18, f31, f11, dyn # perform operation
fsub.d f18, f31, f11, rdn # perform operation
fsub.d f18, f31, f11, rmm # perform operation
fsub.d f18, f31, f11, rne # perform operation
fsub.d f18, f31, f11, rtz # perform operation
fsub.d f18, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8008000000000000 from memory into f24
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fsub.d f13, f24, f25, dyn # perform operation
fsub.d f13, f24, f25, rdn # perform operation
fsub.d f13, f24, f25, rmm # perform operation
fsub.d f13, f24, f25, rne # perform operation
fsub.d f13, f24, f25, rtz # perform operation
fsub.d f13, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fsub.d f13, f5, f20, dyn # perform operation
fsub.d f13, f5, f20, rdn # perform operation
fsub.d f13, f5, f20, rmm # perform operation
fsub.d f13, f5, f20, rne # perform operation
fsub.d f13, f5, f20, rtz # perform operation
fsub.d f13, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
fsub.d f16, f12, f15, dyn # perform operation
fsub.d f16, f12, f15, rdn # perform operation
fsub.d f16, f12, f15, rmm # perform operation
fsub.d f16, f12, f15, rne # perform operation
fsub.d f16, f12, f15, rtz # perform operation
fsub.d f16, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fsub.d f27, f10, f15, dyn # perform operation
fsub.d f27, f10, f15, rdn # perform operation
fsub.d f27, f10, f15, rmm # perform operation
fsub.d f27, f10, f15, rne # perform operation
fsub.d f27, f10, f15, rtz # perform operation
fsub.d f27, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f10, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
fsub.d f26, f12, f25, dyn # perform operation
fsub.d f26, f12, f25, rdn # perform operation
fsub.d f26, f12, f25, rmm # perform operation
fsub.d f26, f12, f25, rne # perform operation
fsub.d f26, f12, f25, rtz # perform operation
fsub.d f26, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fsub.d f19, f16, f24, dyn # perform operation
fsub.d f19, f16, f24, rdn # perform operation
fsub.d f19, f16, f24, rmm # perform operation
fsub.d f19, f16, f24, rne # perform operation
fsub.d f19, f16, f24, rtz # perform operation
fsub.d f19, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
fsub.d f15, f10, f30, dyn # perform operation
fsub.d f15, f10, f30, rdn # perform operation
fsub.d f15, f10, f30, rmm # perform operation
fsub.d f15, f10, f30, rne # perform operation
fsub.d f15, f10, f30, rtz # perform operation
fsub.d f15, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
fsub.d f15, f27, f23, dyn # perform operation
fsub.d f15, f27, f23, rdn # perform operation
fsub.d f15, f27, f23, rmm # perform operation
fsub.d f15, f27, f23, rne # perform operation
fsub.d f15, f27, f23, rtz # perform operation
fsub.d f15, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fsub.d f25, f26, f18, dyn # perform operation
fsub.d f25, f26, f18, rdn # perform operation
fsub.d f25, f26, f18, rmm # perform operation
fsub.d f25, f26, f18, rne # perform operation
fsub.d f25, f26, f18, rtz # perform operation
fsub.d f25, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fsub.d f26, f12, f9, dyn # perform operation
fsub.d f26, f12, f9, rdn # perform operation
fsub.d f26, f12, f9, rmm # perform operation
fsub.d f26, f12, f9, rne # perform operation
fsub.d f26, f12, f9, rtz # perform operation
fsub.d f26, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
fsub.d f8, f22, f2, dyn # perform operation
fsub.d f8, f22, f2, rdn # perform operation
fsub.d f8, f22, f2, rmm # perform operation
fsub.d f8, f22, f2, rne # perform operation
fsub.d f8, f22, f2, rtz # perform operation
fsub.d f8, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
fsub.d f7, f13, f27, dyn # perform operation
fsub.d f7, f13, f27, rdn # perform operation
fsub.d f7, f13, f27, rmm # perform operation
fsub.d f7, f13, f27, rne # perform operation
fsub.d f7, f13, f27, rtz # perform operation
fsub.d f7, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fsub.d f12, f2, f24, dyn # perform operation
fsub.d f12, f2, f24, rdn # perform operation
fsub.d f12, f2, f24, rmm # perform operation
fsub.d f12, f2, f24, rne # perform operation
fsub.d f12, f2, f24, rtz # perform operation
fsub.d f12, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
fsub.d f29, f16, f11, dyn # perform operation
fsub.d f29, f16, f11, rdn # perform operation
fsub.d f29, f16, f11, rmm # perform operation
fsub.d f29, f16, f11, rne # perform operation
fsub.d f29, f16, f11, rtz # perform operation
fsub.d f29, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fsub.d f5, f31, f11, dyn # perform operation
fsub.d f5, f31, f11, rdn # perform operation
fsub.d f5, f31, f11, rmm # perform operation
fsub.d f5, f31, f11, rne # perform operation
fsub.d f5, f31, f11, rtz # perform operation
fsub.d f5, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fsub.d f13, f18, f22, dyn # perform operation
fsub.d f13, f18, f22, rdn # perform operation
fsub.d f13, f18, f22, rmm # perform operation
fsub.d f13, f18, f22, rne # perform operation
fsub.d f13, f18, f22, rtz # perform operation
fsub.d f13, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fsub.d f18, f14, f8, dyn # perform operation
fsub.d f18, f14, f8, rdn # perform operation
fsub.d f18, f14, f8, rmm # perform operation
fsub.d f18, f14, f8, rne # perform operation
fsub.d f18, f14, f8, rtz # perform operation
fsub.d f18, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fsub.d f11, f6, f24, dyn # perform operation
fsub.d f11, f6, f24, rdn # perform operation
fsub.d f11, f6, f24, rmm # perform operation
fsub.d f11, f6, f24, rne # perform operation
fsub.d f11, f6, f24, rtz # perform operation
fsub.d f11, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fsub.d f7, f9, f11, dyn # perform operation
fsub.d f7, f9, f11, rdn # perform operation
fsub.d f7, f9, f11, rmm # perform operation
fsub.d f7, f9, f11, rne # perform operation
fsub.d f7, f9, f11, rtz # perform operation
fsub.d f7, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
fsub.d f13, f1, f7, dyn # perform operation
fsub.d f13, f1, f7, rdn # perform operation
fsub.d f13, f1, f7, rmm # perform operation
fsub.d f13, f1, f7, rne # perform operation
fsub.d f13, f1, f7, rtz # perform operation
fsub.d f13, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fsub.d f26, f6, f18, dyn # perform operation
fsub.d f26, f6, f18, rdn # perform operation
fsub.d f26, f6, f18, rmm # perform operation
fsub.d f26, f6, f18, rne # perform operation
fsub.d f26, f6, f18, rtz # perform operation
fsub.d f26, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fsub.d f26, f25, f18, dyn # perform operation
fsub.d f26, f25, f18, rdn # perform operation
fsub.d f26, f25, f18, rmm # perform operation
fsub.d f26, f25, f18, rne # perform operation
fsub.d f26, f25, f18, rtz # perform operation
fsub.d f26, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fsub.d f10, f21, f2, dyn # perform operation
fsub.d f10, f21, f2, rdn # perform operation
fsub.d f10, f21, f2, rmm # perform operation
fsub.d f10, f21, f2, rne # perform operation
fsub.d f10, f21, f2, rtz # perform operation
fsub.d f10, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff8000000000000 from memory into f9
fsub.d f26, f19, f9, dyn # perform operation
fsub.d f26, f19, f9, rdn # perform operation
fsub.d f26, f19, f9, rmm # perform operation
fsub.d f26, f19, f9, rne # perform operation
fsub.d f26, f19, f9, rtz # perform operation
fsub.d f26, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fsub.d f8, f10, f2, dyn # perform operation
fsub.d f8, f10, f2, rdn # perform operation
fsub.d f8, f10, f2, rmm # perform operation
fsub.d f8, f10, f2, rne # perform operation
fsub.d f8, f10, f2, rtz # perform operation
fsub.d f8, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
fsub.d f12, f10, f22, dyn # perform operation
fsub.d f12, f10, f22, rdn # perform operation
fsub.d f12, f10, f22, rmm # perform operation
fsub.d f12, f10, f22, rne # perform operation
fsub.d f12, f10, f22, rtz # perform operation
fsub.d f12, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
fsub.d f18, f13, f22, dyn # perform operation
fsub.d f18, f13, f22, rdn # perform operation
fsub.d f18, f13, f22, rmm # perform operation
fsub.d f18, f13, f22, rne # perform operation
fsub.d f18, f13, f22, rtz # perform operation
fsub.d f18, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fsub.d f20, f15, f1, dyn # perform operation
fsub.d f20, f15, f1, rdn # perform operation
fsub.d f20, f15, f1, rmm # perform operation
fsub.d f20, f15, f1, rne # perform operation
fsub.d f20, f15, f1, rtz # perform operation
fsub.d f20, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fsub.d f21, f26, f27, dyn # perform operation
fsub.d f21, f26, f27, rdn # perform operation
fsub.d f21, f26, f27, rmm # perform operation
fsub.d f21, f26, f27, rne # perform operation
fsub.d f21, f26, f27, rtz # perform operation
fsub.d f21, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fsub.d f9, f3, f15, dyn # perform operation
fsub.d f9, f3, f15, rdn # perform operation
fsub.d f9, f3, f15, rmm # perform operation
fsub.d f9, f3, f15, rne # perform operation
fsub.d f9, f3, f15, rtz # perform operation
fsub.d f9, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
fsub.d f9, f3, f6, dyn # perform operation
fsub.d f9, f3, f6, rdn # perform operation
fsub.d f9, f3, f6, rmm # perform operation
fsub.d f9, f3, f6, rne # perform operation
fsub.d f9, f3, f6, rtz # perform operation
fsub.d f9, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fsub.d f15, f26, f13, dyn # perform operation
fsub.d f15, f26, f13, rdn # perform operation
fsub.d f15, f26, f13, rmm # perform operation
fsub.d f15, f26, f13, rne # perform operation
fsub.d f15, f26, f13, rtz # perform operation
fsub.d f15, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
fsub.d f3, f27, f29, dyn # perform operation
fsub.d f3, f27, f29, rdn # perform operation
fsub.d f3, f27, f29, rmm # perform operation
fsub.d f3, f27, f29, rne # perform operation
fsub.d f3, f27, f29, rtz # perform operation
fsub.d f3, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fsub.d f25, f15, f13, dyn # perform operation
fsub.d f25, f15, f13, rdn # perform operation
fsub.d f25, f15, f13, rmm # perform operation
fsub.d f25, f15, f13, rne # perform operation
fsub.d f25, f15, f13, rtz # perform operation
fsub.d f25, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000001 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fsub.d f1, f23, f21, dyn # perform operation
fsub.d f1, f23, f21, rdn # perform operation
fsub.d f1, f23, f21, rmm # perform operation
fsub.d f1, f23, f21, rne # perform operation
fsub.d f1, f23, f21, rtz # perform operation
fsub.d f1, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fsub.d f20, f24, f7, dyn # perform operation
fsub.d f20, f24, f7, rdn # perform operation
fsub.d f20, f24, f7, rmm # perform operation
fsub.d f20, f24, f7, rne # perform operation
fsub.d f20, f24, f7, rtz # perform operation
fsub.d f20, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fsub.d f24, f16, f18, dyn # perform operation
fsub.d f24, f16, f18, rdn # perform operation
fsub.d f24, f16, f18, rmm # perform operation
fsub.d f24, f16, f18, rne # perform operation
fsub.d f24, f16, f18, rtz # perform operation
fsub.d f24, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0010000000000000 from memory into f11
fsub.d f27, f30, f11, dyn # perform operation
fsub.d f27, f30, f11, rdn # perform operation
fsub.d f27, f30, f11, rmm # perform operation
fsub.d f27, f30, f11, rne # perform operation
fsub.d f27, f30, f11, rtz # perform operation
fsub.d f27, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fsub.d f30, f28, f25, dyn # perform operation
fsub.d f30, f28, f25, rdn # perform operation
fsub.d f30, f28, f25, rmm # perform operation
fsub.d f30, f28, f25, rne # perform operation
fsub.d f30, f28, f25, rtz # perform operation
fsub.d f30, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fsub.d f6, f26, f1, dyn # perform operation
fsub.d f6, f26, f1, rdn # perform operation
fsub.d f6, f26, f1, rmm # perform operation
fsub.d f6, f26, f1, rne # perform operation
fsub.d f6, f26, f1, rtz # perform operation
fsub.d f6, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
fsub.d f26, f15, f20, dyn # perform operation
fsub.d f26, f15, f20, rdn # perform operation
fsub.d f26, f15, f20, rmm # perform operation
fsub.d f26, f15, f20, rne # perform operation
fsub.d f26, f15, f20, rtz # perform operation
fsub.d f26, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fsub.d f18, f29, f23, dyn # perform operation
fsub.d f18, f29, f23, rdn # perform operation
fsub.d f18, f29, f23, rmm # perform operation
fsub.d f18, f29, f23, rne # perform operation
fsub.d f18, f29, f23, rtz # perform operation
fsub.d f18, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f29, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x800fffffffffffff from memory into f29
fsub.d f20, f30, f29, dyn # perform operation
fsub.d f20, f30, f29, rdn # perform operation
fsub.d f20, f30, f29, rmm # perform operation
fsub.d f20, f30, f29, rne # perform operation
fsub.d f20, f30, f29, rtz # perform operation
fsub.d f20, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f30, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fsub.d f11, f24, f1, dyn # perform operation
fsub.d f11, f24, f1, rdn # perform operation
fsub.d f11, f24, f1, rmm # perform operation
fsub.d f11, f24, f1, rne # perform operation
fsub.d f11, f24, f1, rtz # perform operation
fsub.d f11, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
fsub.d f21, f24, f25, dyn # perform operation
fsub.d f21, f24, f25, rdn # perform operation
fsub.d f21, f24, f25, rmm # perform operation
fsub.d f21, f24, f25, rne # perform operation
fsub.d f21, f24, f25, rtz # perform operation
fsub.d f21, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000001 from memory into f2
fsub.d f13, f18, f2, dyn # perform operation
fsub.d f13, f18, f2, rdn # perform operation
fsub.d f13, f18, f2, rmm # perform operation
fsub.d f13, f18, f2, rne # perform operation
fsub.d f13, f18, f2, rtz # perform operation
fsub.d f13, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fsub.d f18, f31, f1, dyn # perform operation
fsub.d f18, f31, f1, rdn # perform operation
fsub.d f18, f31, f1, rmm # perform operation
fsub.d f18, f31, f1, rne # perform operation
fsub.d f18, f31, f1, rtz # perform operation
fsub.d f18, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fsub.d f2, f29, f31, dyn # perform operation
fsub.d f2, f29, f31, rdn # perform operation
fsub.d f2, f29, f31, rmm # perform operation
fsub.d f2, f29, f31, rne # perform operation
fsub.d f2, f29, f31, rtz # perform operation
fsub.d f2, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fsub.d f17, f18, f6, dyn # perform operation
fsub.d f17, f18, f6, rdn # perform operation
fsub.d f17, f18, f6, rmm # perform operation
fsub.d f17, f18, f6, rne # perform operation
fsub.d f17, f18, f6, rtz # perform operation
fsub.d f17, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fsub.d f19, f30, f14, dyn # perform operation
fsub.d f19, f30, f14, rdn # perform operation
fsub.d f19, f30, f14, rmm # perform operation
fsub.d f19, f30, f14, rne # perform operation
fsub.d f19, f30, f14, rtz # perform operation
fsub.d f19, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
fsub.d f17, f5, f27, dyn # perform operation
fsub.d f17, f5, f27, rdn # perform operation
fsub.d f17, f5, f27, rmm # perform operation
fsub.d f17, f5, f27, rne # perform operation
fsub.d f17, f5, f27, rtz # perform operation
fsub.d f17, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fsub.d f23, f10, f25, dyn # perform operation
fsub.d f23, f10, f25, rdn # perform operation
fsub.d f23, f10, f25, rmm # perform operation
fsub.d f23, f10, f25, rne # perform operation
fsub.d f23, f10, f25, rtz # perform operation
fsub.d f23, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fsub.d f12, f19, f1, dyn # perform operation
fsub.d f12, f19, f1, rdn # perform operation
fsub.d f12, f19, f1, rmm # perform operation
fsub.d f12, f19, f1, rne # perform operation
fsub.d f12, f19, f1, rtz # perform operation
fsub.d f12, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fsub.d f21, f3, f6, dyn # perform operation
fsub.d f21, f3, f6, rdn # perform operation
fsub.d f21, f3, f6, rmm # perform operation
fsub.d f21, f3, f6, rne # perform operation
fsub.d f21, f3, f6, rtz # perform operation
fsub.d f21, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
fsub.d f15, f25, f7, dyn # perform operation
fsub.d f15, f25, f7, rdn # perform operation
fsub.d f15, f25, f7, rmm # perform operation
fsub.d f15, f25, f7, rne # perform operation
fsub.d f15, f25, f7, rtz # perform operation
fsub.d f15, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fsub.d f1, f29, f14, dyn # perform operation
fsub.d f1, f29, f14, rdn # perform operation
fsub.d f1, f29, f14, rmm # perform operation
fsub.d f1, f29, f14, rne # perform operation
fsub.d f1, f29, f14, rtz # perform operation
fsub.d f1, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fsub.d f30, f18, f3, dyn # perform operation
fsub.d f30, f18, f3, rdn # perform operation
fsub.d f30, f18, f3, rmm # perform operation
fsub.d f30, f18, f3, rne # perform operation
fsub.d f30, f18, f3, rtz # perform operation
fsub.d f30, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
fsub.d f20, f12, f27, dyn # perform operation
fsub.d f20, f12, f27, rdn # perform operation
fsub.d f20, f12, f27, rmm # perform operation
fsub.d f20, f12, f27, rne # perform operation
fsub.d f20, f12, f27, rtz # perform operation
fsub.d f20, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000000 from memory into f21
fsub.d f25, f12, f21, dyn # perform operation
fsub.d f25, f12, f21, rdn # perform operation
fsub.d f25, f12, f21, rmm # perform operation
fsub.d f25, f12, f21, rne # perform operation
fsub.d f25, f12, f21, rtz # perform operation
fsub.d f25, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fsub.d f8, f1, f3, dyn # perform operation
fsub.d f8, f1, f3, rdn # perform operation
fsub.d f8, f1, f3, rmm # perform operation
fsub.d f8, f1, f3, rne # perform operation
fsub.d f8, f1, f3, rtz # perform operation
fsub.d f8, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
fsub.d f23, f30, f19, dyn # perform operation
fsub.d f23, f30, f19, rdn # perform operation
fsub.d f23, f30, f19, rmm # perform operation
fsub.d f23, f30, f19, rne # perform operation
fsub.d f23, f30, f19, rtz # perform operation
fsub.d f23, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
fsub.d f15, f12, f22, dyn # perform operation
fsub.d f15, f12, f22, rdn # perform operation
fsub.d f15, f12, f22, rmm # perform operation
fsub.d f15, f12, f22, rne # perform operation
fsub.d f15, f12, f22, rtz # perform operation
fsub.d f15, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fsub.d f19, f17, f8, dyn # perform operation
fsub.d f19, f17, f8, rdn # perform operation
fsub.d f19, f17, f8, rmm # perform operation
fsub.d f19, f17, f8, rne # perform operation
fsub.d f19, f17, f8, rtz # perform operation
fsub.d f19, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fsub.d f22, f12, f25, dyn # perform operation
fsub.d f22, f12, f25, rdn # perform operation
fsub.d f22, f12, f25, rmm # perform operation
fsub.d f22, f12, f25, rne # perform operation
fsub.d f22, f12, f25, rtz # perform operation
fsub.d f22, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fsub.d f12, f20, f15, dyn # perform operation
fsub.d f12, f20, f15, rdn # perform operation
fsub.d f12, f20, f15, rmm # perform operation
fsub.d f12, f20, f15, rne # perform operation
fsub.d f12, f20, f15, rtz # perform operation
fsub.d f12, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
fsub.d f9, f26, f30, dyn # perform operation
fsub.d f9, f26, f30, rdn # perform operation
fsub.d f9, f26, f30, rmm # perform operation
fsub.d f9, f26, f30, rne # perform operation
fsub.d f9, f26, f30, rtz # perform operation
fsub.d f9, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fsub.d f9, f5, f17, dyn # perform operation
fsub.d f9, f5, f17, rdn # perform operation
fsub.d f9, f5, f17, rmm # perform operation
fsub.d f9, f5, f17, rne # perform operation
fsub.d f9, f5, f17, rtz # perform operation
fsub.d f9, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fsub.d f7, f28, f30, dyn # perform operation
fsub.d f7, f28, f30, rdn # perform operation
fsub.d f7, f28, f30, rmm # perform operation
fsub.d f7, f28, f30, rne # perform operation
fsub.d f7, f28, f30, rtz # perform operation
fsub.d f7, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fsub.d f28, f2, f22, dyn # perform operation
fsub.d f28, f2, f22, rdn # perform operation
fsub.d f28, f2, f22, rmm # perform operation
fsub.d f28, f2, f22, rne # perform operation
fsub.d f28, f2, f22, rtz # perform operation
fsub.d f28, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fsub.d f7, f13, f22, dyn # perform operation
fsub.d f7, f13, f22, rdn # perform operation
fsub.d f7, f13, f22, rmm # perform operation
fsub.d f7, f13, f22, rne # perform operation
fsub.d f7, f13, f22, rtz # perform operation
fsub.d f7, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
fsub.d f24, f28, f22, dyn # perform operation
fsub.d f24, f28, f22, rdn # perform operation
fsub.d f24, f28, f22, rmm # perform operation
fsub.d f24, f28, f22, rne # perform operation
fsub.d f24, f28, f22, rtz # perform operation
fsub.d f24, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f28, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
fsub.d f22, f13, f16, dyn # perform operation
fsub.d f22, f13, f16, rdn # perform operation
fsub.d f22, f13, f16, rmm # perform operation
fsub.d f22, f13, f16, rne # perform operation
fsub.d f22, f13, f16, rtz # perform operation
fsub.d f22, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fsub.d f31, f11, f7, dyn # perform operation
fsub.d f31, f11, f7, rdn # perform operation
fsub.d f31, f11, f7, rmm # perform operation
fsub.d f31, f11, f7, rne # perform operation
fsub.d f31, f11, f7, rtz # perform operation
fsub.d f31, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fsub.d f10, f30, f7, dyn # perform operation
fsub.d f10, f30, f7, rdn # perform operation
fsub.d f10, f30, f7, rmm # perform operation
fsub.d f10, f30, f7, rne # perform operation
fsub.d f10, f30, f7, rtz # perform operation
fsub.d f10, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fsub.d f11, f2, f25, dyn # perform operation
fsub.d f11, f2, f25, rdn # perform operation
fsub.d f11, f2, f25, rmm # perform operation
fsub.d f11, f2, f25, rne # perform operation
fsub.d f11, f2, f25, rtz # perform operation
fsub.d f11, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
fsub.d f11, f12, f14, dyn # perform operation
fsub.d f11, f12, f14, rdn # perform operation
fsub.d f11, f12, f14, rmm # perform operation
fsub.d f11, f12, f14, rne # perform operation
fsub.d f11, f12, f14, rtz # perform operation
fsub.d f11, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fsub.d f31, f19, f23, dyn # perform operation
fsub.d f31, f19, f23, rdn # perform operation
fsub.d f31, f19, f23, rmm # perform operation
fsub.d f31, f19, f23, rne # perform operation
fsub.d f31, f19, f23, rtz # perform operation
fsub.d f31, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fsub.d f7, f8, f27, dyn # perform operation
fsub.d f7, f8, f27, rdn # perform operation
fsub.d f7, f8, f27, rmm # perform operation
fsub.d f7, f8, f27, rne # perform operation
fsub.d f7, f8, f27, rtz # perform operation
fsub.d f7, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
fsub.d f25, f6, f21, dyn # perform operation
fsub.d f25, f6, f21, rdn # perform operation
fsub.d f25, f6, f21, rmm # perform operation
fsub.d f25, f6, f21, rne # perform operation
fsub.d f25, f6, f21, rtz # perform operation
fsub.d f25, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f6, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
fsub.d f22, f20, f23, dyn # perform operation
fsub.d f22, f20, f23, rdn # perform operation
fsub.d f22, f20, f23, rmm # perform operation
fsub.d f22, f20, f23, rne # perform operation
fsub.d f22, f20, f23, rtz # perform operation
fsub.d f22, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fsub.d f3, f9, f22, dyn # perform operation
fsub.d f3, f9, f22, rdn # perform operation
fsub.d f3, f9, f22, rmm # perform operation
fsub.d f3, f9, f22, rne # perform operation
fsub.d f3, f9, f22, rtz # perform operation
fsub.d f3, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f9, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fsub.d f1, f12, f18, dyn # perform operation
fsub.d f1, f12, f18, rdn # perform operation
fsub.d f1, f12, f18, rmm # perform operation
fsub.d f1, f12, f18, rne # perform operation
fsub.d f1, f12, f18, rtz # perform operation
fsub.d f1, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000001 from memory into f14
fsub.d f19, f9, f14, dyn # perform operation
fsub.d f19, f9, f14, rdn # perform operation
fsub.d f19, f9, f14, rmm # perform operation
fsub.d f19, f9, f14, rne # perform operation
fsub.d f19, f9, f14, rtz # perform operation
fsub.d f19, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f9, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fsub.d f7, f2, f29, dyn # perform operation
fsub.d f7, f2, f29, rdn # perform operation
fsub.d f7, f2, f29, rmm # perform operation
fsub.d f7, f2, f29, rne # perform operation
fsub.d f7, f2, f29, rtz # perform operation
fsub.d f7, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fsub.d f24, f22, f10, dyn # perform operation
fsub.d f24, f22, f10, rdn # perform operation
fsub.d f24, f22, f10, rmm # perform operation
fsub.d f24, f22, f10, rne # perform operation
fsub.d f24, f22, f10, rtz # perform operation
fsub.d f24, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fsub.d f25, f10, f12, dyn # perform operation
fsub.d f25, f10, f12, rdn # perform operation
fsub.d f25, f10, f12, rmm # perform operation
fsub.d f25, f10, f12, rne # perform operation
fsub.d f25, f10, f12, rtz # perform operation
fsub.d f25, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fsub.d f28, f11, f18, dyn # perform operation
fsub.d f28, f11, f18, rdn # perform operation
fsub.d f28, f11, f18, rmm # perform operation
fsub.d f28, f11, f18, rne # perform operation
fsub.d f28, f11, f18, rtz # perform operation
fsub.d f28, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fsub.d f19, f5, f3, dyn # perform operation
fsub.d f19, f5, f3, rdn # perform operation
fsub.d f19, f5, f3, rmm # perform operation
fsub.d f19, f5, f3, rne # perform operation
fsub.d f19, f5, f3, rtz # perform operation
fsub.d f19, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fsub.d f18, f2, f10, dyn # perform operation
fsub.d f18, f2, f10, rdn # perform operation
fsub.d f18, f2, f10, rmm # perform operation
fsub.d f18, f2, f10, rne # perform operation
fsub.d f18, f2, f10, rtz # perform operation
fsub.d f18, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f2, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fsub.d f11, f18, f23, dyn # perform operation
fsub.d f11, f18, f23, rdn # perform operation
fsub.d f11, f18, f23, rmm # perform operation
fsub.d f11, f18, f23, rne # perform operation
fsub.d f11, f18, f23, rtz # perform operation
fsub.d f11, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fsub.d f28, f30, f13, dyn # perform operation
fsub.d f28, f30, f13, rdn # perform operation
fsub.d f28, f30, f13, rmm # perform operation
fsub.d f28, f30, f13, rne # perform operation
fsub.d f28, f30, f13, rtz # perform operation
fsub.d f28, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fsub.d f18, f15, f6, dyn # perform operation
fsub.d f18, f15, f6, rdn # perform operation
fsub.d f18, f15, f6, rmm # perform operation
fsub.d f18, f15, f6, rne # perform operation
fsub.d f18, f15, f6, rtz # perform operation
fsub.d f18, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fsub.d f20, f27, f25, dyn # perform operation
fsub.d f20, f27, f25, rdn # perform operation
fsub.d f20, f27, f25, rmm # perform operation
fsub.d f20, f27, f25, rne # perform operation
fsub.d f20, f27, f25, rtz # perform operation
fsub.d f20, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fsub.d f17, f6, f1, dyn # perform operation
fsub.d f17, f6, f1, rdn # perform operation
fsub.d f17, f6, f1, rmm # perform operation
fsub.d f17, f6, f1, rne # perform operation
fsub.d f17, f6, f1, rtz # perform operation
fsub.d f17, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fsub.d f19, f9, f13, dyn # perform operation
fsub.d f19, f9, f13, rdn # perform operation
fsub.d f19, f9, f13, rmm # perform operation
fsub.d f19, f9, f13, rne # perform operation
fsub.d f19, f9, f13, rtz # perform operation
fsub.d f19, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fefffffffffffff from memory into f8
fsub.d f22, f16, f8, dyn # perform operation
fsub.d f22, f16, f8, rdn # perform operation
fsub.d f22, f16, f8, rmm # perform operation
fsub.d f22, f16, f8, rne # perform operation
fsub.d f22, f16, f8, rtz # perform operation
fsub.d f22, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fsub.d f21, f3, f17, dyn # perform operation
fsub.d f21, f3, f17, rdn # perform operation
fsub.d f21, f3, f17, rmm # perform operation
fsub.d f21, f3, f17, rne # perform operation
fsub.d f21, f3, f17, rtz # perform operation
fsub.d f21, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fsub.d f29, f7, f3, dyn # perform operation
fsub.d f29, f7, f3, rdn # perform operation
fsub.d f29, f7, f3, rmm # perform operation
fsub.d f29, f7, f3, rne # perform operation
fsub.d f29, f7, f3, rtz # perform operation
fsub.d f29, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f7, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fsub.d f6, f5, f24, dyn # perform operation
fsub.d f6, f5, f24, rdn # perform operation
fsub.d f6, f5, f24, rmm # perform operation
fsub.d f6, f5, f24, rne # perform operation
fsub.d f6, f5, f24, rtz # perform operation
fsub.d f6, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fsub.d f5, f26, f15, dyn # perform operation
fsub.d f5, f26, f15, rdn # perform operation
fsub.d f5, f26, f15, rmm # perform operation
fsub.d f5, f26, f15, rne # perform operation
fsub.d f5, f26, f15, rtz # perform operation
fsub.d f5, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fsub.d f11, f9, f10, dyn # perform operation
fsub.d f11, f9, f10, rdn # perform operation
fsub.d f11, f9, f10, rmm # perform operation
fsub.d f11, f9, f10, rne # perform operation
fsub.d f11, f9, f10, rtz # perform operation
fsub.d f11, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fsub.d f31, f12, f10, dyn # perform operation
fsub.d f31, f12, f10, rdn # perform operation
fsub.d f31, f12, f10, rmm # perform operation
fsub.d f31, f12, f10, rne # perform operation
fsub.d f31, f12, f10, rtz # perform operation
fsub.d f31, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
fsub.d f6, f2, f29, dyn # perform operation
fsub.d f6, f2, f29, rdn # perform operation
fsub.d f6, f2, f29, rmm # perform operation
fsub.d f6, f2, f29, rne # perform operation
fsub.d f6, f2, f29, rtz # perform operation
fsub.d f6, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f2, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000000 from memory into f19
fsub.d f14, f11, f19, dyn # perform operation
fsub.d f14, f11, f19, rdn # perform operation
fsub.d f14, f11, f19, rmm # perform operation
fsub.d f14, f11, f19, rne # perform operation
fsub.d f14, f11, f19, rtz # perform operation
fsub.d f14, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fsub.d f18, f19, f30, dyn # perform operation
fsub.d f18, f19, f30, rdn # perform operation
fsub.d f18, f19, f30, rmm # perform operation
fsub.d f18, f19, f30, rne # perform operation
fsub.d f18, f19, f30, rtz # perform operation
fsub.d f18, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f19, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fsub.d f26, f8, f3, dyn # perform operation
fsub.d f26, f8, f3, rdn # perform operation
fsub.d f26, f8, f3, rmm # perform operation
fsub.d f26, f8, f3, rne # perform operation
fsub.d f26, f8, f3, rtz # perform operation
fsub.d f26, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fsub.d f19, f2, f8, dyn # perform operation
fsub.d f19, f2, f8, rdn # perform operation
fsub.d f19, f2, f8, rmm # perform operation
fsub.d f19, f2, f8, rne # perform operation
fsub.d f19, f2, f8, rtz # perform operation
fsub.d f19, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fsub.d f27, f9, f1, dyn # perform operation
fsub.d f27, f9, f1, rdn # perform operation
fsub.d f27, f9, f1, rmm # perform operation
fsub.d f27, f9, f1, rne # perform operation
fsub.d f27, f9, f1, rtz # perform operation
fsub.d f27, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
fsub.d f16, f13, f12, dyn # perform operation
fsub.d f16, f13, f12, rdn # perform operation
fsub.d f16, f13, f12, rmm # perform operation
fsub.d f16, f13, f12, rne # perform operation
fsub.d f16, f13, f12, rtz # perform operation
fsub.d f16, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f13, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fsub.d f8, f24, f19, dyn # perform operation
fsub.d f8, f24, f19, rdn # perform operation
fsub.d f8, f24, f19, rmm # perform operation
fsub.d f8, f24, f19, rne # perform operation
fsub.d f8, f24, f19, rtz # perform operation
fsub.d f8, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f24, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
fsub.d f29, f22, f8, dyn # perform operation
fsub.d f29, f22, f8, rdn # perform operation
fsub.d f29, f22, f8, rmm # perform operation
fsub.d f29, f22, f8, rne # perform operation
fsub.d f29, f22, f8, rtz # perform operation
fsub.d f29, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f22, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fsub.d f3, f20, f2, dyn # perform operation
fsub.d f3, f20, f2, rdn # perform operation
fsub.d f3, f20, f2, rmm # perform operation
fsub.d f3, f20, f2, rne # perform operation
fsub.d f3, f20, f2, rtz # perform operation
fsub.d f3, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f20, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fsub.d f27, f13, f9, dyn # perform operation
fsub.d f27, f13, f9, rdn # perform operation
fsub.d f27, f13, f9, rmm # perform operation
fsub.d f27, f13, f9, rne # perform operation
fsub.d f27, f13, f9, rtz # perform operation
fsub.d f27, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fsub.d f28, f20, f31, dyn # perform operation
fsub.d f28, f20, f31, rdn # perform operation
fsub.d f28, f20, f31, rmm # perform operation
fsub.d f28, f20, f31, rne # perform operation
fsub.d f28, f20, f31, rtz # perform operation
fsub.d f28, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
fsub.d f8, f30, f23, dyn # perform operation
fsub.d f8, f30, f23, rdn # perform operation
fsub.d f8, f30, f23, rmm # perform operation
fsub.d f8, f30, f23, rne # perform operation
fsub.d f8, f30, f23, rtz # perform operation
fsub.d f8, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
fsub.d f20, f18, f11, dyn # perform operation
fsub.d f20, f18, f11, rdn # perform operation
fsub.d f20, f18, f11, rmm # perform operation
fsub.d f20, f18, f11, rne # perform operation
fsub.d f20, f18, f11, rtz # perform operation
fsub.d f20, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fsub.d f12, f19, f17, dyn # perform operation
fsub.d f12, f19, f17, rdn # perform operation
fsub.d f12, f19, f17, rmm # perform operation
fsub.d f12, f19, f17, rne # perform operation
fsub.d f12, f19, f17, rtz # perform operation
fsub.d f12, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fsub.d f23, f7, f13, dyn # perform operation
fsub.d f23, f7, f13, rdn # perform operation
fsub.d f23, f7, f13, rmm # perform operation
fsub.d f23, f7, f13, rne # perform operation
fsub.d f23, f7, f13, rtz # perform operation
fsub.d f23, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fsub.d f21, f31, f13, dyn # perform operation
fsub.d f21, f31, f13, rdn # perform operation
fsub.d f21, f31, f13, rmm # perform operation
fsub.d f21, f31, f13, rne # perform operation
fsub.d f21, f31, f13, rtz # perform operation
fsub.d f21, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fsub.d f17, f18, f5, dyn # perform operation
fsub.d f17, f18, f5, rdn # perform operation
fsub.d f17, f18, f5, rmm # perform operation
fsub.d f17, f18, f5, rne # perform operation
fsub.d f17, f18, f5, rtz # perform operation
fsub.d f17, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fsub.d f22, f24, f31, dyn # perform operation
fsub.d f22, f24, f31, rdn # perform operation
fsub.d f22, f24, f31, rmm # perform operation
fsub.d f22, f24, f31, rne # perform operation
fsub.d f22, f24, f31, rtz # perform operation
fsub.d f22, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fsub.d f6, f3, f26, dyn # perform operation
fsub.d f6, f3, f26, rdn # perform operation
fsub.d f6, f3, f26, rmm # perform operation
fsub.d f6, f3, f26, rne # perform operation
fsub.d f6, f3, f26, rtz # perform operation
fsub.d f6, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fsub.d f22, f13, f30, dyn # perform operation
fsub.d f22, f13, f30, rdn # perform operation
fsub.d f22, f13, f30, rmm # perform operation
fsub.d f22, f13, f30, rne # perform operation
fsub.d f22, f13, f30, rtz # perform operation
fsub.d f22, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fsub.d f9, f29, f6, dyn # perform operation
fsub.d f9, f29, f6, rdn # perform operation
fsub.d f9, f29, f6, rmm # perform operation
fsub.d f9, f29, f6, rne # perform operation
fsub.d f9, f29, f6, rtz # perform operation
fsub.d f9, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fsub.d f15, f28, f18, dyn # perform operation
fsub.d f15, f28, f18, rdn # perform operation
fsub.d f15, f28, f18, rmm # perform operation
fsub.d f15, f28, f18, rne # perform operation
fsub.d f15, f28, f18, rtz # perform operation
fsub.d f15, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fsub.d f17, f18, f20, dyn # perform operation
fsub.d f17, f18, f20, rdn # perform operation
fsub.d f17, f18, f20, rmm # perform operation
fsub.d f17, f18, f20, rne # perform operation
fsub.d f17, f18, f20, rtz # perform operation
fsub.d f17, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fsub.d f12, f1, f21, dyn # perform operation
fsub.d f12, f1, f21, rdn # perform operation
fsub.d f12, f1, f21, rmm # perform operation
fsub.d f12, f1, f21, rne # perform operation
fsub.d f12, f1, f21, rtz # perform operation
fsub.d f12, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fsub.d f15, f7, f9, dyn # perform operation
fsub.d f15, f7, f9, rdn # perform operation
fsub.d f15, f7, f9, rmm # perform operation
fsub.d f15, f7, f9, rne # perform operation
fsub.d f15, f7, f9, rtz # perform operation
fsub.d f15, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fsub.d f19, f17, f29, dyn # perform operation
fsub.d f19, f17, f29, rdn # perform operation
fsub.d f19, f17, f29, rmm # perform operation
fsub.d f19, f17, f29, rne # perform operation
fsub.d f19, f17, f29, rtz # perform operation
fsub.d f19, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fsub.d f8, f14, f31, dyn # perform operation
fsub.d f8, f14, f31, rdn # perform operation
fsub.d f8, f14, f31, rmm # perform operation
fsub.d f8, f14, f31, rne # perform operation
fsub.d f8, f14, f31, rtz # perform operation
fsub.d f8, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
fsub.d f19, f7, f14, dyn # perform operation
fsub.d f19, f7, f14, rdn # perform operation
fsub.d f19, f7, f14, rmm # perform operation
fsub.d f19, f7, f14, rne # perform operation
fsub.d f19, f7, f14, rtz # perform operation
fsub.d f19, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fsub.d f8, f17, f11, dyn # perform operation
fsub.d f8, f17, f11, rdn # perform operation
fsub.d f8, f17, f11, rmm # perform operation
fsub.d f8, f17, f11, rne # perform operation
fsub.d f8, f17, f11, rtz # perform operation
fsub.d f8, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fsub.d f20, f14, f3, dyn # perform operation
fsub.d f20, f14, f3, rdn # perform operation
fsub.d f20, f14, f3, rmm # perform operation
fsub.d f20, f14, f3, rne # perform operation
fsub.d f20, f14, f3, rtz # perform operation
fsub.d f20, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fsub.d f8, f12, f27, dyn # perform operation
fsub.d f8, f12, f27, rdn # perform operation
fsub.d f8, f12, f27, rmm # perform operation
fsub.d f8, f12, f27, rne # perform operation
fsub.d f8, f12, f27, rtz # perform operation
fsub.d f8, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff8000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
fsub.d f7, f17, f5, dyn # perform operation
fsub.d f7, f17, f5, rdn # perform operation
fsub.d f7, f17, f5, rmm # perform operation
fsub.d f7, f17, f5, rne # perform operation
fsub.d f7, f17, f5, rtz # perform operation
fsub.d f7, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff8000000000000 from memory into f11
fsub.d f23, f27, f11, dyn # perform operation
fsub.d f23, f27, f11, rdn # perform operation
fsub.d f23, f27, f11, rmm # perform operation
fsub.d f23, f27, f11, rne # perform operation
fsub.d f23, f27, f11, rtz # perform operation
fsub.d f23, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
fsub.d f12, f11, f19, dyn # perform operation
fsub.d f12, f11, f19, rdn # perform operation
fsub.d f12, f11, f19, rmm # perform operation
fsub.d f12, f11, f19, rne # perform operation
fsub.d f12, f11, f19, rtz # perform operation
fsub.d f12, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fsub.d f13, f26, f5, dyn # perform operation
fsub.d f13, f26, f5, rdn # perform operation
fsub.d f13, f26, f5, rmm # perform operation
fsub.d f13, f26, f5, rne # perform operation
fsub.d f13, f26, f5, rtz # perform operation
fsub.d f13, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000001 from memory into f5
fsub.d f27, f15, f5, dyn # perform operation
fsub.d f27, f15, f5, rdn # perform operation
fsub.d f27, f15, f5, rmm # perform operation
fsub.d f27, f15, f5, rne # perform operation
fsub.d f27, f15, f5, rtz # perform operation
fsub.d f27, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fsub.d f24, f12, f29, dyn # perform operation
fsub.d f24, f12, f29, rdn # perform operation
fsub.d f24, f12, f29, rmm # perform operation
fsub.d f24, f12, f29, rne # perform operation
fsub.d f24, f12, f29, rtz # perform operation
fsub.d f24, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
fsub.d f2, f30, f16, dyn # perform operation
fsub.d f2, f30, f16, rdn # perform operation
fsub.d f2, f30, f16, rmm # perform operation
fsub.d f2, f30, f16, rne # perform operation
fsub.d f2, f30, f16, rtz # perform operation
fsub.d f2, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000000 from memory into f16
fsub.d f6, f25, f16, dyn # perform operation
fsub.d f6, f25, f16, rdn # perform operation
fsub.d f6, f25, f16, rmm # perform operation
fsub.d f6, f25, f16, rne # perform operation
fsub.d f6, f25, f16, rtz # perform operation
fsub.d f6, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fsub.d f5, f1, f22, dyn # perform operation
fsub.d f5, f1, f22, rdn # perform operation
fsub.d f5, f1, f22, rmm # perform operation
fsub.d f5, f1, f22, rne # perform operation
fsub.d f5, f1, f22, rtz # perform operation
fsub.d f5, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fsub.d f20, f24, f15, dyn # perform operation
fsub.d f20, f24, f15, rdn # perform operation
fsub.d f20, f24, f15, rmm # perform operation
fsub.d f20, f24, f15, rne # perform operation
fsub.d f20, f24, f15, rtz # perform operation
fsub.d f20, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fsub.d f24, f19, f9, dyn # perform operation
fsub.d f24, f19, f9, rdn # perform operation
fsub.d f24, f19, f9, rmm # perform operation
fsub.d f24, f19, f9, rne # perform operation
fsub.d f24, f19, f9, rtz # perform operation
fsub.d f24, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fsub.d f16, f22, f19, dyn # perform operation
fsub.d f16, f22, f19, rdn # perform operation
fsub.d f16, f22, f19, rmm # perform operation
fsub.d f16, f22, f19, rne # perform operation
fsub.d f16, f22, f19, rtz # perform operation
fsub.d f16, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fsub.d f14, f1, f27, dyn # perform operation
fsub.d f14, f1, f27, rdn # perform operation
fsub.d f14, f1, f27, rmm # perform operation
fsub.d f14, f1, f27, rne # perform operation
fsub.d f14, f1, f27, rtz # perform operation
fsub.d f14, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fsub.d f15, f21, f2, dyn # perform operation
fsub.d f15, f21, f2, rdn # perform operation
fsub.d f15, f21, f2, rmm # perform operation
fsub.d f15, f21, f2, rne # perform operation
fsub.d f15, f21, f2, rtz # perform operation
fsub.d f15, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
fsub.d f7, f9, f21, dyn # perform operation
fsub.d f7, f9, f21, rdn # perform operation
fsub.d f7, f9, f21, rmm # perform operation
fsub.d f7, f9, f21, rne # perform operation
fsub.d f7, f9, f21, rtz # perform operation
fsub.d f7, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fsub.d f20, f17, f3, dyn # perform operation
fsub.d f20, f17, f3, rdn # perform operation
fsub.d f20, f17, f3, rmm # perform operation
fsub.d f20, f17, f3, rne # perform operation
fsub.d f20, f17, f3, rtz # perform operation
fsub.d f20, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fsub.d f12, f2, f22, dyn # perform operation
fsub.d f12, f2, f22, rdn # perform operation
fsub.d f12, f2, f22, rmm # perform operation
fsub.d f12, f2, f22, rne # perform operation
fsub.d f12, f2, f22, rtz # perform operation
fsub.d f12, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fsub.d f7, f22, f29, dyn # perform operation
fsub.d f7, f22, f29, rdn # perform operation
fsub.d f7, f22, f29, rmm # perform operation
fsub.d f7, f22, f29, rne # perform operation
fsub.d f7, f22, f29, rtz # perform operation
fsub.d f7, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fffffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xffefffffffffffff from memory into f24
fsub.d f1, f31, f24, dyn # perform operation
fsub.d f1, f31, f24, rdn # perform operation
fsub.d f1, f31, f24, rmm # perform operation
fsub.d f1, f31, f24, rne # perform operation
fsub.d f1, f31, f24, rtz # perform operation
fsub.d f1, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fsub.d f22, f5, f27, dyn # perform operation
fsub.d f22, f5, f27, rdn # perform operation
fsub.d f22, f5, f27, rmm # perform operation
fsub.d f22, f5, f27, rne # perform operation
fsub.d f22, f5, f27, rtz # perform operation
fsub.d f22, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fsub.d f1, f18, f5, dyn # perform operation
fsub.d f1, f18, f5, rdn # perform operation
fsub.d f1, f18, f5, rmm # perform operation
fsub.d f1, f18, f5, rne # perform operation
fsub.d f1, f18, f5, rtz # perform operation
fsub.d f1, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fsub.d f15, f14, f29, dyn # perform operation
fsub.d f15, f14, f29, rdn # perform operation
fsub.d f15, f14, f29, rmm # perform operation
fsub.d f15, f14, f29, rne # perform operation
fsub.d f15, f14, f29, rtz # perform operation
fsub.d f15, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fffffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fsub.d f13, f3, f11, dyn # perform operation
fsub.d f13, f3, f11, rdn # perform operation
fsub.d f13, f3, f11, rmm # perform operation
fsub.d f13, f3, f11, rne # perform operation
fsub.d f13, f3, f11, rtz # perform operation
fsub.d f13, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fsub.d f27, f7, f10, dyn # perform operation
fsub.d f27, f7, f10, rdn # perform operation
fsub.d f27, f7, f10, rmm # perform operation
fsub.d f27, f7, f10, rne # perform operation
fsub.d f27, f7, f10, rtz # perform operation
fsub.d f27, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fsub.d f19, f5, f31, dyn # perform operation
fsub.d f19, f5, f31, rdn # perform operation
fsub.d f19, f5, f31, rmm # perform operation
fsub.d f19, f5, f31, rne # perform operation
fsub.d f19, f5, f31, rtz # perform operation
fsub.d f19, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
fsub.d f8, f19, f10, dyn # perform operation
fsub.d f8, f19, f10, rdn # perform operation
fsub.d f8, f19, f10, rmm # perform operation
fsub.d f8, f19, f10, rne # perform operation
fsub.d f8, f19, f10, rtz # perform operation
fsub.d f8, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fffffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fsub.d f7, f6, f24, dyn # perform operation
fsub.d f7, f6, f24, rdn # perform operation
fsub.d f7, f6, f24, rmm # perform operation
fsub.d f7, f6, f24, rne # perform operation
fsub.d f7, f6, f24, rtz # perform operation
fsub.d f7, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fsub.d f24, f23, f27, dyn # perform operation
fsub.d f24, f23, f27, rdn # perform operation
fsub.d f24, f23, f27, rmm # perform operation
fsub.d f24, f23, f27, rne # perform operation
fsub.d f24, f23, f27, rtz # perform operation
fsub.d f24, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f23, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
fsub.d f26, f16, f13, dyn # perform operation
fsub.d f26, f16, f13, rdn # perform operation
fsub.d f26, f16, f13, rmm # perform operation
fsub.d f26, f16, f13, rne # perform operation
fsub.d f26, f16, f13, rtz # perform operation
fsub.d f26, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fffffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff8000000000000 from memory into f2
fsub.d f18, f16, f2, dyn # perform operation
fsub.d f18, f16, f2, rdn # perform operation
fsub.d f18, f16, f2, rmm # perform operation
fsub.d f18, f16, f2, rne # perform operation
fsub.d f18, f16, f2, rtz # perform operation
fsub.d f18, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fffffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fsub.d f2, f14, f16, dyn # perform operation
fsub.d f2, f14, f16, rdn # perform operation
fsub.d f2, f14, f16, rmm # perform operation
fsub.d f2, f14, f16, rne # perform operation
fsub.d f2, f14, f16, rtz # perform operation
fsub.d f2, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fsub.d f6, f5, f8, dyn # perform operation
fsub.d f6, f5, f8, rdn # perform operation
fsub.d f6, f5, f8, rmm # perform operation
fsub.d f6, f5, f8, rne # perform operation
fsub.d f6, f5, f8, rtz # perform operation
fsub.d f6, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000001 from memory into f21
fsub.d f29, f9, f21, dyn # perform operation
fsub.d f29, f9, f21, rdn # perform operation
fsub.d f29, f9, f21, rmm # perform operation
fsub.d f29, f9, f21, rne # perform operation
fsub.d f29, f9, f21, rtz # perform operation
fsub.d f29, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fsub.d f8, f25, f6, dyn # perform operation
fsub.d f8, f25, f6, rdn # perform operation
fsub.d f8, f25, f6, rmm # perform operation
fsub.d f8, f25, f6, rne # perform operation
fsub.d f8, f25, f6, rtz # perform operation
fsub.d f8, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fsub.d f6, f9, f21, dyn # perform operation
fsub.d f6, f9, f21, rdn # perform operation
fsub.d f6, f9, f21, rmm # perform operation
fsub.d f6, f9, f21, rne # perform operation
fsub.d f6, f9, f21, rtz # perform operation
fsub.d f6, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fsub.d f17, f30, f13, dyn # perform operation
fsub.d f17, f30, f13, rdn # perform operation
fsub.d f17, f30, f13, rmm # perform operation
fsub.d f17, f30, f13, rne # perform operation
fsub.d f17, f30, f13, rtz # perform operation
fsub.d f17, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff8000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fsub.d f10, f16, f9, dyn # perform operation
fsub.d f10, f16, f9, rdn # perform operation
fsub.d f10, f16, f9, rmm # perform operation
fsub.d f10, f16, f9, rne # perform operation
fsub.d f10, f16, f9, rtz # perform operation
fsub.d f10, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fsub.d f7, f13, f1, dyn # perform operation
fsub.d f7, f13, f1, rdn # perform operation
fsub.d f7, f13, f1, rmm # perform operation
fsub.d f7, f13, f1, rne # perform operation
fsub.d f7, f13, f1, rtz # perform operation
fsub.d f7, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f13, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
fsub.d f3, f5, f13, dyn # perform operation
fsub.d f3, f5, f13, rdn # perform operation
fsub.d f3, f5, f13, rmm # perform operation
fsub.d f3, f5, f13, rne # perform operation
fsub.d f3, f5, f13, rtz # perform operation
fsub.d f3, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
fsub.d f2, f22, f25, dyn # perform operation
fsub.d f2, f22, f25, rdn # perform operation
fsub.d f2, f22, f25, rmm # perform operation
fsub.d f2, f22, f25, rne # perform operation
fsub.d f2, f22, f25, rtz # perform operation
fsub.d f2, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff8000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fsub.d f7, f10, f22, dyn # perform operation
fsub.d f7, f10, f22, rdn # perform operation
fsub.d f7, f10, f22, rmm # perform operation
fsub.d f7, f10, f22, rne # perform operation
fsub.d f7, f10, f22, rtz # perform operation
fsub.d f7, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fsub.d f8, f6, f7, dyn # perform operation
fsub.d f8, f6, f7, rdn # perform operation
fsub.d f8, f6, f7, rmm # perform operation
fsub.d f8, f6, f7, rne # perform operation
fsub.d f8, f6, f7, rtz # perform operation
fsub.d f8, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fsub.d f22, f17, f29, dyn # perform operation
fsub.d f22, f17, f29, rdn # perform operation
fsub.d f22, f17, f29, rmm # perform operation
fsub.d f22, f17, f29, rne # perform operation
fsub.d f22, f17, f29, rtz # perform operation
fsub.d f22, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fsub.d f2, f17, f5, dyn # perform operation
fsub.d f2, f17, f5, rdn # perform operation
fsub.d f2, f17, f5, rmm # perform operation
fsub.d f2, f17, f5, rne # perform operation
fsub.d f2, f17, f5, rtz # perform operation
fsub.d f2, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f17, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8010000000000000 from memory into f25
fsub.d f22, f31, f25, dyn # perform operation
fsub.d f22, f31, f25, rdn # perform operation
fsub.d f22, f31, f25, rmm # perform operation
fsub.d f22, f31, f25, rne # perform operation
fsub.d f22, f31, f25, rtz # perform operation
fsub.d f22, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff8000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
fsub.d f3, f20, f23, dyn # perform operation
fsub.d f3, f20, f23, rdn # perform operation
fsub.d f3, f20, f23, rmm # perform operation
fsub.d f3, f20, f23, rne # perform operation
fsub.d f3, f20, f23, rtz # perform operation
fsub.d f3, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fsub.d f23, f3, f26, dyn # perform operation
fsub.d f23, f3, f26, rdn # perform operation
fsub.d f23, f3, f26, rmm # perform operation
fsub.d f23, f3, f26, rne # perform operation
fsub.d f23, f3, f26, rtz # perform operation
fsub.d f23, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fsub.d f1, f6, f26, dyn # perform operation
fsub.d f1, f6, f26, rdn # perform operation
fsub.d f1, f6, f26, rmm # perform operation
fsub.d f1, f6, f26, rne # perform operation
fsub.d f1, f6, f26, rtz # perform operation
fsub.d f1, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f1, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f1, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f1, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f1, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f1, f6, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff8000000000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fsub.d f22, f21, f27, dyn # perform operation
fsub.d f22, f21, f27, rdn # perform operation
fsub.d f22, f21, f27, rmm # perform operation
fsub.d f22, f21, f27, rne # perform operation
fsub.d f22, f21, f27, rtz # perform operation
fsub.d f22, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f21, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fsub.d f3, f19, f12, dyn # perform operation
fsub.d f3, f19, f12, rdn # perform operation
fsub.d f3, f19, f12, rmm # perform operation
fsub.d f3, f19, f12, rne # perform operation
fsub.d f3, f19, f12, rtz # perform operation
fsub.d f3, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8008000000000000 from memory into f14
fsub.d f9, f17, f14, dyn # perform operation
fsub.d f9, f17, f14, rdn # perform operation
fsub.d f9, f17, f14, rmm # perform operation
fsub.d f9, f17, f14, rne # perform operation
fsub.d f9, f17, f14, rtz # perform operation
fsub.d f9, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fsub.d f14, f23, f31, dyn # perform operation
fsub.d f14, f23, f31, rdn # perform operation
fsub.d f14, f23, f31, rmm # perform operation
fsub.d f14, f23, f31, rne # perform operation
fsub.d f14, f23, f31, rtz # perform operation
fsub.d f14, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
fsub.d f10, f5, f11, dyn # perform operation
fsub.d f10, f5, f11, rdn # perform operation
fsub.d f10, f5, f11, rmm # perform operation
fsub.d f10, f5, f11, rne # perform operation
fsub.d f10, f5, f11, rtz # perform operation
fsub.d f10, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fsub.d f19, f24, f9, dyn # perform operation
fsub.d f19, f24, f9, rdn # perform operation
fsub.d f19, f24, f9, rmm # perform operation
fsub.d f19, f24, f9, rne # perform operation
fsub.d f19, f24, f9, rtz # perform operation
fsub.d f19, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff8000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
fsub.d f30, f27, f1, dyn # perform operation
fsub.d f30, f27, f1, rdn # perform operation
fsub.d f30, f27, f1, rmm # perform operation
fsub.d f30, f27, f1, rne # perform operation
fsub.d f30, f27, f1, rtz # perform operation
fsub.d f30, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fsub.d f20, f26, f14, dyn # perform operation
fsub.d f20, f26, f14, rdn # perform operation
fsub.d f20, f26, f14, rmm # perform operation
fsub.d f20, f26, f14, rne # perform operation
fsub.d f20, f26, f14, rtz # perform operation
fsub.d f20, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff8000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fsub.d f14, f12, f25, dyn # perform operation
fsub.d f14, f12, f25, rdn # perform operation
fsub.d f14, f12, f25, rmm # perform operation
fsub.d f14, f12, f25, rne # perform operation
fsub.d f14, f12, f25, rtz # perform operation
fsub.d f14, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
fsub.d f19, f2, f23, dyn # perform operation
fsub.d f19, f2, f23, rdn # perform operation
fsub.d f19, f2, f23, rmm # perform operation
fsub.d f19, f2, f23, rne # perform operation
fsub.d f19, f2, f23, rtz # perform operation
fsub.d f19, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fsub.d f13, f24, f21, dyn # perform operation
fsub.d f13, f24, f21, rdn # perform operation
fsub.d f13, f24, f21, rmm # perform operation
fsub.d f13, f24, f21, rne # perform operation
fsub.d f13, f24, f21, rtz # perform operation
fsub.d f13, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff8000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fsub.d f29, f2, f3, dyn # perform operation
fsub.d f29, f2, f3, rdn # perform operation
fsub.d f29, f2, f3, rmm # perform operation
fsub.d f29, f2, f3, rne # perform operation
fsub.d f29, f2, f3, rtz # perform operation
fsub.d f29, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
fsub.d f26, f17, f9, dyn # perform operation
fsub.d f26, f17, f9, rdn # perform operation
fsub.d f26, f17, f9, rmm # perform operation
fsub.d f26, f17, f9, rne # perform operation
fsub.d f26, f17, f9, rtz # perform operation
fsub.d f26, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff8000000000000 from memory into f20
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fsub.d f28, f20, f10, dyn # perform operation
fsub.d f28, f20, f10, rdn # perform operation
fsub.d f28, f20, f10, rmm # perform operation
fsub.d f28, f20, f10, rne # perform operation
fsub.d f28, f20, f10, rtz # perform operation
fsub.d f28, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff8000000000000 from memory into f16
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fsub.d f28, f16, f2, dyn # perform operation
fsub.d f28, f16, f2, rdn # perform operation
fsub.d f28, f16, f2, rmm # perform operation
fsub.d f28, f16, f2, rne # perform operation
fsub.d f28, f16, f2, rtz # perform operation
fsub.d f28, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fsub.d f31, f5, f11, dyn # perform operation
fsub.d f31, f5, f11, rdn # perform operation
fsub.d f31, f5, f11, rmm # perform operation
fsub.d f31, f5, f11, rne # perform operation
fsub.d f31, f5, f11, rtz # perform operation
fsub.d f31, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f12, f10, f31, dyn # perform operation
fsub.d f12, f10, f31, rdn # perform operation
fsub.d f12, f10, f31, rmm # perform operation
fsub.d f12, f10, f31, rne # perform operation
fsub.d f12, f10, f31, rtz # perform operation
fsub.d f12, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fsub.d f14, f8, f9, dyn # perform operation
fsub.d f14, f8, f9, rdn # perform operation
fsub.d f14, f8, f9, rmm # perform operation
fsub.d f14, f8, f9, rne # perform operation
fsub.d f14, f8, f9, rtz # perform operation
fsub.d f14, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fsub.d f15, f13, f11, dyn # perform operation
fsub.d f15, f13, f11, rdn # perform operation
fsub.d f15, f13, f11, rmm # perform operation
fsub.d f15, f13, f11, rne # perform operation
fsub.d f15, f13, f11, rtz # perform operation
fsub.d f15, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fsub.d f21, f23, f14, dyn # perform operation
fsub.d f21, f23, f14, rdn # perform operation
fsub.d f21, f23, f14, rmm # perform operation
fsub.d f21, f23, f14, rne # perform operation
fsub.d f21, f23, f14, rtz # perform operation
fsub.d f21, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fsub.d f27, f8, f31, dyn # perform operation
fsub.d f27, f8, f31, rdn # perform operation
fsub.d f27, f8, f31, rmm # perform operation
fsub.d f27, f8, f31, rne # perform operation
fsub.d f27, f8, f31, rtz # perform operation
fsub.d f27, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x4000000000000000 from memory into f8
fsub.d f31, f10, f8, dyn # perform operation
fsub.d f31, f10, f8, rdn # perform operation
fsub.d f31, f10, f8, rmm # perform operation
fsub.d f31, f10, f8, rne # perform operation
fsub.d f31, f10, f8, rtz # perform operation
fsub.d f31, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f10, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
fsub.d f10, f21, f6, dyn # perform operation
fsub.d f10, f21, f6, rdn # perform operation
fsub.d f10, f21, f6, rmm # perform operation
fsub.d f10, f21, f6, rne # perform operation
fsub.d f10, f21, f6, rtz # perform operation
fsub.d f10, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000001 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fsub.d f29, f26, f19, dyn # perform operation
fsub.d f29, f26, f19, rdn # perform operation
fsub.d f29, f26, f19, rmm # perform operation
fsub.d f29, f26, f19, rne # perform operation
fsub.d f29, f26, f19, rtz # perform operation
fsub.d f29, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8010000000000000 from memory into f30
fsub.d f18, f23, f30, dyn # perform operation
fsub.d f18, f23, f30, rdn # perform operation
fsub.d f18, f23, f30, rmm # perform operation
fsub.d f18, f23, f30, rne # perform operation
fsub.d f18, f23, f30, rtz # perform operation
fsub.d f18, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fefffffffffffff from memory into f11
fsub.d f14, f22, f11, dyn # perform operation
fsub.d f14, f22, f11, rdn # perform operation
fsub.d f14, f22, f11, rmm # perform operation
fsub.d f14, f22, f11, rne # perform operation
fsub.d f14, f22, f11, rtz # perform operation
fsub.d f14, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fsub.d f25, f31, f10, dyn # perform operation
fsub.d f25, f31, f10, rdn # perform operation
fsub.d f25, f31, f10, rmm # perform operation
fsub.d f25, f31, f10, rne # perform operation
fsub.d f25, f31, f10, rtz # perform operation
fsub.d f25, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f31, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
fsub.d f23, f29, f19, dyn # perform operation
fsub.d f23, f29, f19, rdn # perform operation
fsub.d f23, f29, f19, rmm # perform operation
fsub.d f23, f29, f19, rne # perform operation
fsub.d f23, f29, f19, rtz # perform operation
fsub.d f23, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
fsub.d f28, f24, f15, dyn # perform operation
fsub.d f28, f24, f15, rdn # perform operation
fsub.d f28, f24, f15, rmm # perform operation
fsub.d f28, f24, f15, rne # perform operation
fsub.d f28, f24, f15, rtz # perform operation
fsub.d f28, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
fsub.d f7, f31, f17, dyn # perform operation
fsub.d f7, f31, f17, rdn # perform operation
fsub.d f7, f31, f17, rmm # perform operation
fsub.d f7, f31, f17, rne # perform operation
fsub.d f7, f31, f17, rtz # perform operation
fsub.d f7, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fsub.d f10, f29, f26, dyn # perform operation
fsub.d f10, f29, f26, rdn # perform operation
fsub.d f10, f29, f26, rmm # perform operation
fsub.d f10, f29, f26, rne # perform operation
fsub.d f10, f29, f26, rtz # perform operation
fsub.d f10, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
fsub.d f30, f23, f17, dyn # perform operation
fsub.d f30, f23, f17, rdn # perform operation
fsub.d f30, f23, f17, rmm # perform operation
fsub.d f30, f23, f17, rne # perform operation
fsub.d f30, f23, f17, rtz # perform operation
fsub.d f30, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fsub.d f29, f18, f17, dyn # perform operation
fsub.d f29, f18, f17, rdn # perform operation
fsub.d f29, f18, f17, rmm # perform operation
fsub.d f29, f18, f17, rne # perform operation
fsub.d f29, f18, f17, rtz # perform operation
fsub.d f29, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fsub.d f5, f13, f25, dyn # perform operation
fsub.d f5, f13, f25, rdn # perform operation
fsub.d f5, f13, f25, rmm # perform operation
fsub.d f5, f13, f25, rne # perform operation
fsub.d f5, f13, f25, rtz # perform operation
fsub.d f5, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fsub.d f15, f1, f30, dyn # perform operation
fsub.d f15, f1, f30, rdn # perform operation
fsub.d f15, f1, f30, rmm # perform operation
fsub.d f15, f1, f30, rne # perform operation
fsub.d f15, f1, f30, rtz # perform operation
fsub.d f15, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fsub.d f26, f15, f2, dyn # perform operation
fsub.d f26, f15, f2, rdn # perform operation
fsub.d f26, f15, f2, rmm # perform operation
fsub.d f26, f15, f2, rne # perform operation
fsub.d f26, f15, f2, rtz # perform operation
fsub.d f26, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
fsub.d f5, f29, f8, dyn # perform operation
fsub.d f5, f29, f8, rdn # perform operation
fsub.d f5, f29, f8, rmm # perform operation
fsub.d f5, f29, f8, rne # perform operation
fsub.d f5, f29, f8, rtz # perform operation
fsub.d f5, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fsub.d f31, f22, f6, dyn # perform operation
fsub.d f31, f22, f6, rdn # perform operation
fsub.d f31, f22, f6, rmm # perform operation
fsub.d f31, f22, f6, rne # perform operation
fsub.d f31, f22, f6, rtz # perform operation
fsub.d f31, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fsub.d f26, f9, f8, dyn # perform operation
fsub.d f26, f9, f8, rdn # perform operation
fsub.d f26, f9, f8, rmm # perform operation
fsub.d f26, f9, f8, rne # perform operation
fsub.d f26, f9, f8, rtz # perform operation
fsub.d f26, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
fsub.d f17, f13, f26, dyn # perform operation
fsub.d f17, f13, f26, rdn # perform operation
fsub.d f17, f13, f26, rmm # perform operation
fsub.d f17, f13, f26, rne # perform operation
fsub.d f17, f13, f26, rtz # perform operation
fsub.d f17, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff0000000000001 from memory into f29
fsub.d f18, f5, f29, dyn # perform operation
fsub.d f18, f5, f29, rdn # perform operation
fsub.d f18, f5, f29, rmm # perform operation
fsub.d f18, f5, f29, rne # perform operation
fsub.d f18, f5, f29, rtz # perform operation
fsub.d f18, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
fsub.d f14, f13, f26, dyn # perform operation
fsub.d f14, f13, f26, rdn # perform operation
fsub.d f14, f13, f26, rmm # perform operation
fsub.d f14, f13, f26, rne # perform operation
fsub.d f14, f13, f26, rtz # perform operation
fsub.d f14, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
fsub.d f23, f28, f30, dyn # perform operation
fsub.d f23, f28, f30, rdn # perform operation
fsub.d f23, f28, f30, rmm # perform operation
fsub.d f23, f28, f30, rne # perform operation
fsub.d f23, f28, f30, rtz # perform operation
fsub.d f23, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
fsub.d f3, f29, f26, dyn # perform operation
fsub.d f3, f29, f26, rdn # perform operation
fsub.d f3, f29, f26, rmm # perform operation
fsub.d f3, f29, f26, rne # perform operation
fsub.d f3, f29, f26, rtz # perform operation
fsub.d f3, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f29, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fsub.d f19, f3, f20, dyn # perform operation
fsub.d f19, f3, f20, rdn # perform operation
fsub.d f19, f3, f20, rmm # perform operation
fsub.d f19, f3, f20, rne # perform operation
fsub.d f19, f3, f20, rtz # perform operation
fsub.d f19, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff0000000000000 from memory into f29
fsub.d f28, f13, f29, dyn # perform operation
fsub.d f28, f13, f29, rdn # perform operation
fsub.d f28, f13, f29, rmm # perform operation
fsub.d f28, f13, f29, rne # perform operation
fsub.d f28, f13, f29, rtz # perform operation
fsub.d f28, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fsub.d f19, f3, f31, dyn # perform operation
fsub.d f19, f3, f31, rdn # perform operation
fsub.d f19, f3, f31, rmm # perform operation
fsub.d f19, f3, f31, rne # perform operation
fsub.d f19, f3, f31, rtz # perform operation
fsub.d f19, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fsub.d f10, f27, f1, dyn # perform operation
fsub.d f10, f27, f1, rdn # perform operation
fsub.d f10, f27, f1, rmm # perform operation
fsub.d f10, f27, f1, rne # perform operation
fsub.d f10, f27, f1, rtz # perform operation
fsub.d f10, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fsub.d f14, f12, f13, dyn # perform operation
fsub.d f14, f12, f13, rdn # perform operation
fsub.d f14, f12, f13, rmm # perform operation
fsub.d f14, f12, f13, rne # perform operation
fsub.d f14, f12, f13, rtz # perform operation
fsub.d f14, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fsub.d f3, f5, f14, dyn # perform operation
fsub.d f3, f5, f14, rdn # perform operation
fsub.d f3, f5, f14, rmm # perform operation
fsub.d f3, f5, f14, rne # perform operation
fsub.d f3, f5, f14, rtz # perform operation
fsub.d f3, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fsub.d f2, f8, f13, dyn # perform operation
fsub.d f2, f8, f13, rdn # perform operation
fsub.d f2, f8, f13, rmm # perform operation
fsub.d f2, f8, f13, rne # perform operation
fsub.d f2, f8, f13, rtz # perform operation
fsub.d f2, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f2, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f2, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f2, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f2, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f2, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
fsub.d f28, f7, f15, dyn # perform operation
fsub.d f28, f7, f15, rdn # perform operation
fsub.d f28, f7, f15, rmm # perform operation
fsub.d f28, f7, f15, rne # perform operation
fsub.d f28, f7, f15, rtz # perform operation
fsub.d f28, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fsub.d f23, f2, f31, dyn # perform operation
fsub.d f23, f2, f31, rdn # perform operation
fsub.d f23, f2, f31, rmm # perform operation
fsub.d f23, f2, f31, rne # perform operation
fsub.d f23, f2, f31, rtz # perform operation
fsub.d f23, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f2, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fsub.d f16, f6, f31, dyn # perform operation
fsub.d f16, f6, f31, rdn # perform operation
fsub.d f16, f6, f31, rmm # perform operation
fsub.d f16, f6, f31, rne # perform operation
fsub.d f16, f6, f31, rtz # perform operation
fsub.d f16, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fsub.d f22, f7, f17, dyn # perform operation
fsub.d f22, f7, f17, rdn # perform operation
fsub.d f22, f7, f17, rmm # perform operation
fsub.d f22, f7, f17, rne # perform operation
fsub.d f22, f7, f17, rtz # perform operation
fsub.d f22, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fsub.d f18, f2, f21, dyn # perform operation
fsub.d f18, f2, f21, rdn # perform operation
fsub.d f18, f2, f21, rmm # perform operation
fsub.d f18, f2, f21, rne # perform operation
fsub.d f18, f2, f21, rtz # perform operation
fsub.d f18, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f2, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
fsub.d f6, f31, f21, dyn # perform operation
fsub.d f6, f31, f21, rdn # perform operation
fsub.d f6, f31, f21, rmm # perform operation
fsub.d f6, f31, f21, rne # perform operation
fsub.d f6, f31, f21, rtz # perform operation
fsub.d f6, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0008000000000000 from memory into f5
fsub.d f22, f7, f5, dyn # perform operation
fsub.d f22, f7, f5, rdn # perform operation
fsub.d f22, f7, f5, rmm # perform operation
fsub.d f22, f7, f5, rne # perform operation
fsub.d f22, f7, f5, rtz # perform operation
fsub.d f22, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fsub.d f5, f9, f19, dyn # perform operation
fsub.d f5, f9, f19, rdn # perform operation
fsub.d f5, f9, f19, rmm # perform operation
fsub.d f5, f9, f19, rne # perform operation
fsub.d f5, f9, f19, rtz # perform operation
fsub.d f5, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fsub.d f14, f31, f27, dyn # perform operation
fsub.d f14, f31, f27, rdn # perform operation
fsub.d f14, f31, f27, rmm # perform operation
fsub.d f14, f31, f27, rne # perform operation
fsub.d f14, f31, f27, rtz # perform operation
fsub.d f14, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8000000000000001 from memory into f21
fsub.d f28, f11, f21, dyn # perform operation
fsub.d f28, f11, f21, rdn # perform operation
fsub.d f28, f11, f21, rmm # perform operation
fsub.d f28, f11, f21, rne # perform operation
fsub.d f28, f11, f21, rtz # perform operation
fsub.d f28, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000000 from memory into f12
fsub.d f30, f15, f12, dyn # perform operation
fsub.d f30, f15, f12, rdn # perform operation
fsub.d f30, f15, f12, rmm # perform operation
fsub.d f30, f15, f12, rne # perform operation
fsub.d f30, f15, f12, rtz # perform operation
fsub.d f30, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000000 from memory into f20
fsub.d f12, f9, f20, dyn # perform operation
fsub.d f12, f9, f20, rdn # perform operation
fsub.d f12, f9, f20, rmm # perform operation
fsub.d f12, f9, f20, rne # perform operation
fsub.d f12, f9, f20, rtz # perform operation
fsub.d f12, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fsub.d f30, f8, f14, dyn # perform operation
fsub.d f30, f8, f14, rdn # perform operation
fsub.d f30, f8, f14, rmm # perform operation
fsub.d f30, f8, f14, rne # perform operation
fsub.d f30, f8, f14, rtz # perform operation
fsub.d f30, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fsub.d f3, f22, f9, dyn # perform operation
fsub.d f3, f22, f9, rdn # perform operation
fsub.d f3, f22, f9, rmm # perform operation
fsub.d f3, f22, f9, rne # perform operation
fsub.d f3, f22, f9, rtz # perform operation
fsub.d f3, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff8000000000000 from memory into f16
fsub.d f31, f28, f16, dyn # perform operation
fsub.d f31, f28, f16, rdn # perform operation
fsub.d f31, f28, f16, rmm # perform operation
fsub.d f31, f28, f16, rne # perform operation
fsub.d f31, f28, f16, rtz # perform operation
fsub.d f31, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff7ffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fsub.d f24, f29, f21, dyn # perform operation
fsub.d f24, f29, f21, rdn # perform operation
fsub.d f24, f29, f21, rmm # perform operation
fsub.d f24, f29, f21, rne # perform operation
fsub.d f24, f29, f21, rtz # perform operation
fsub.d f24, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fsub.d f15, f9, f25, dyn # perform operation
fsub.d f15, f9, f25, rdn # perform operation
fsub.d f15, f9, f25, rmm # perform operation
fsub.d f15, f9, f25, rne # perform operation
fsub.d f15, f9, f25, rtz # perform operation
fsub.d f15, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f9, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
fsub.d f12, f10, f20, dyn # perform operation
fsub.d f12, f10, f20, rdn # perform operation
fsub.d f12, f10, f20, rmm # perform operation
fsub.d f12, f10, f20, rne # perform operation
fsub.d f12, f10, f20, rtz # perform operation
fsub.d f12, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fsub.d f24, f12, f15, dyn # perform operation
fsub.d f24, f12, f15, rdn # perform operation
fsub.d f24, f12, f15, rmm # perform operation
fsub.d f24, f12, f15, rne # perform operation
fsub.d f24, f12, f15, rtz # perform operation
fsub.d f24, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f24, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f24, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f24, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f24, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f24, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff7ffffffffffff from memory into f26
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fsub.d f5, f26, f29, dyn # perform operation
fsub.d f5, f26, f29, rdn # perform operation
fsub.d f5, f26, f29, rmm # perform operation
fsub.d f5, f26, f29, rne # perform operation
fsub.d f5, f26, f29, rtz # perform operation
fsub.d f5, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
fsub.d f7, f14, f20, dyn # perform operation
fsub.d f7, f14, f20, rdn # perform operation
fsub.d f7, f14, f20, rmm # perform operation
fsub.d f7, f14, f20, rne # perform operation
fsub.d f7, f14, f20, rtz # perform operation
fsub.d f7, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fsub.d f18, f15, f1, dyn # perform operation
fsub.d f18, f15, f1, rdn # perform operation
fsub.d f18, f15, f1, rmm # perform operation
fsub.d f18, f15, f1, rne # perform operation
fsub.d f18, f15, f1, rtz # perform operation
fsub.d f18, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff0000000000000 from memory into f25
fsub.d f8, f22, f25, dyn # perform operation
fsub.d f8, f22, f25, rdn # perform operation
fsub.d f8, f22, f25, rmm # perform operation
fsub.d f8, f22, f25, rne # perform operation
fsub.d f8, f22, f25, rtz # perform operation
fsub.d f8, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xbff0000000000000 from memory into f2
fsub.d f23, f12, f2, dyn # perform operation
fsub.d f23, f12, f2, rdn # perform operation
fsub.d f23, f12, f2, rmm # perform operation
fsub.d f23, f12, f2, rne # perform operation
fsub.d f23, f12, f2, rtz # perform operation
fsub.d f23, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fsub.d f25, f2, f5, dyn # perform operation
fsub.d f25, f2, f5, rdn # perform operation
fsub.d f25, f2, f5, rmm # perform operation
fsub.d f25, f2, f5, rne # perform operation
fsub.d f25, f2, f5, rtz # perform operation
fsub.d f25, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f25, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f25, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f25, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f25, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f25, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fsub.d f26, f20, f23, dyn # perform operation
fsub.d f26, f20, f23, rdn # perform operation
fsub.d f26, f20, f23, rmm # perform operation
fsub.d f26, f20, f23, rne # perform operation
fsub.d f26, f20, f23, rtz # perform operation
fsub.d f26, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000001 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
fsub.d f9, f1, f7, dyn # perform operation
fsub.d f9, f1, f7, rdn # perform operation
fsub.d f9, f1, f7, rmm # perform operation
fsub.d f9, f1, f7, rne # perform operation
fsub.d f9, f1, f7, rtz # perform operation
fsub.d f9, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000001 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fsub.d f10, f31, f27, dyn # perform operation
fsub.d f10, f31, f27, rdn # perform operation
fsub.d f10, f31, f27, rmm # perform operation
fsub.d f10, f31, f27, rne # perform operation
fsub.d f10, f31, f27, rtz # perform operation
fsub.d f10, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fsub.d f28, f3, f20, dyn # perform operation
fsub.d f28, f3, f20, rdn # perform operation
fsub.d f28, f3, f20, rmm # perform operation
fsub.d f28, f3, f20, rne # perform operation
fsub.d f28, f3, f20, rtz # perform operation
fsub.d f28, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
fsub.d f18, f30, f23, dyn # perform operation
fsub.d f18, f30, f23, rdn # perform operation
fsub.d f18, f30, f23, rmm # perform operation
fsub.d f18, f30, f23, rne # perform operation
fsub.d f18, f30, f23, rtz # perform operation
fsub.d f18, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fsub.d f13, f8, f14, dyn # perform operation
fsub.d f13, f8, f14, rdn # perform operation
fsub.d f13, f8, f14, rmm # perform operation
fsub.d f13, f8, f14, rne # perform operation
fsub.d f13, f8, f14, rtz # perform operation
fsub.d f13, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000001 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xffefffffffffffff from memory into f27
fsub.d f12, f1, f27, dyn # perform operation
fsub.d f12, f1, f27, rdn # perform operation
fsub.d f12, f1, f27, rmm # perform operation
fsub.d f12, f1, f27, rne # perform operation
fsub.d f12, f1, f27, rtz # perform operation
fsub.d f12, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000001 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fsub.d f11, f5, f26, dyn # perform operation
fsub.d f11, f5, f26, rdn # perform operation
fsub.d f11, f5, f26, rmm # perform operation
fsub.d f11, f5, f26, rne # perform operation
fsub.d f11, f5, f26, rtz # perform operation
fsub.d f11, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fsub.d f7, f9, f16, dyn # perform operation
fsub.d f7, f9, f16, rdn # perform operation
fsub.d f7, f9, f16, rmm # perform operation
fsub.d f7, f9, f16, rne # perform operation
fsub.d f7, f9, f16, rtz # perform operation
fsub.d f7, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f7, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f7, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0008000000000000 from memory into f23
fsub.d f29, f25, f23, dyn # perform operation
fsub.d f29, f25, f23, rdn # perform operation
fsub.d f29, f25, f23, rmm # perform operation
fsub.d f29, f25, f23, rne # perform operation
fsub.d f29, f25, f23, rtz # perform operation
fsub.d f29, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f29, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f29, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8008000000000000 from memory into f8
fsub.d f21, f2, f8, dyn # perform operation
fsub.d f21, f2, f8, rdn # perform operation
fsub.d f21, f2, f8, rmm # perform operation
fsub.d f21, f2, f8, rne # perform operation
fsub.d f21, f2, f8, rtz # perform operation
fsub.d f21, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000001 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
fsub.d f5, f31, f18, dyn # perform operation
fsub.d f5, f31, f18, rdn # perform operation
fsub.d f5, f31, f18, rmm # perform operation
fsub.d f5, f31, f18, rne # perform operation
fsub.d f5, f31, f18, rtz # perform operation
fsub.d f5, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000001 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fsub.d f3, f13, f9, dyn # perform operation
fsub.d f3, f13, f9, rdn # perform operation
fsub.d f3, f13, f9, rmm # perform operation
fsub.d f3, f13, f9, rne # perform operation
fsub.d f3, f13, f9, rtz # perform operation
fsub.d f3, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fsub.d f27, f20, f22, dyn # perform operation
fsub.d f27, f20, f22, rdn # perform operation
fsub.d f27, f20, f22, rmm # perform operation
fsub.d f27, f20, f22, rne # perform operation
fsub.d f27, f20, f22, rtz # perform operation
fsub.d f27, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
fsub.d f22, f5, f28, dyn # perform operation
fsub.d f22, f5, f28, rdn # perform operation
fsub.d f22, f5, f28, rmm # perform operation
fsub.d f22, f5, f28, rne # perform operation
fsub.d f22, f5, f28, rtz # perform operation
fsub.d f22, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fsub.d f16, f22, f13, dyn # perform operation
fsub.d f16, f22, f13, rdn # perform operation
fsub.d f16, f22, f13, rmm # perform operation
fsub.d f16, f22, f13, rne # perform operation
fsub.d f16, f22, f13, rtz # perform operation
fsub.d f16, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000001 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fsub.d f10, f21, f26, dyn # perform operation
fsub.d f10, f21, f26, rdn # perform operation
fsub.d f10, f21, f26, rmm # perform operation
fsub.d f10, f21, f26, rne # perform operation
fsub.d f10, f21, f26, rtz # perform operation
fsub.d f10, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff8000000000000 from memory into f21
fsub.d f23, f17, f21, dyn # perform operation
fsub.d f23, f17, f21, rdn # perform operation
fsub.d f23, f17, f21, rmm # perform operation
fsub.d f23, f17, f21, rne # perform operation
fsub.d f23, f17, f21, rtz # perform operation
fsub.d f23, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f17, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000001 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fsub.d f31, f3, f28, dyn # perform operation
fsub.d f31, f3, f28, rdn # perform operation
fsub.d f31, f3, f28, rmm # perform operation
fsub.d f31, f3, f28, rne # perform operation
fsub.d f31, f3, f28, rtz # perform operation
fsub.d f31, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000001 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fsub.d f20, f18, f17, dyn # perform operation
fsub.d f20, f18, f17, rdn # perform operation
fsub.d f20, f18, f17, rmm # perform operation
fsub.d f20, f18, f17, rne # perform operation
fsub.d f20, f18, f17, rtz # perform operation
fsub.d f20, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000001 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
fsub.d f9, f27, f2, dyn # perform operation
fsub.d f9, f27, f2, rdn # perform operation
fsub.d f9, f27, f2, rmm # perform operation
fsub.d f9, f27, f2, rne # perform operation
fsub.d f9, f27, f2, rtz # perform operation
fsub.d f9, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000001 from memory into f16
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fsub.d f14, f16, f20, dyn # perform operation
fsub.d f14, f16, f20, rdn # perform operation
fsub.d f14, f16, f20, rmm # perform operation
fsub.d f14, f16, f20, rne # perform operation
fsub.d f14, f16, f20, rtz # perform operation
fsub.d f14, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fsub.d f12, f25, f19, dyn # perform operation
fsub.d f12, f25, f19, rdn # perform operation
fsub.d f12, f25, f19, rmm # perform operation
fsub.d f12, f25, f19, rne # perform operation
fsub.d f12, f25, f19, rtz # perform operation
fsub.d f12, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
fsub.d f12, f29, f1, dyn # perform operation
fsub.d f12, f29, f1, rdn # perform operation
fsub.d f12, f29, f1, rmm # perform operation
fsub.d f12, f29, f1, rne # perform operation
fsub.d f12, f29, f1, rtz # perform operation
fsub.d f12, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fsub.d f9, f2, f22, dyn # perform operation
fsub.d f9, f2, f22, rdn # perform operation
fsub.d f9, f2, f22, rmm # perform operation
fsub.d f9, f2, f22, rne # perform operation
fsub.d f9, f2, f22, rtz # perform operation
fsub.d f9, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fsub.d f16, f15, f6, dyn # perform operation
fsub.d f16, f15, f6, rdn # perform operation
fsub.d f16, f15, f6, rmm # perform operation
fsub.d f16, f15, f6, rne # perform operation
fsub.d f16, f15, f6, rtz # perform operation
fsub.d f16, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fsub.d f8, f18, f20, dyn # perform operation
fsub.d f8, f18, f20, rdn # perform operation
fsub.d f8, f18, f20, rmm # perform operation
fsub.d f8, f18, f20, rne # perform operation
fsub.d f8, f18, f20, rtz # perform operation
fsub.d f8, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
fsub.d f20, f16, f23, dyn # perform operation
fsub.d f20, f16, f23, rdn # perform operation
fsub.d f20, f16, f23, rmm # perform operation
fsub.d f20, f16, f23, rne # perform operation
fsub.d f20, f16, f23, rtz # perform operation
fsub.d f20, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fsub.d f19, f23, f9, dyn # perform operation
fsub.d f19, f23, f9, rdn # perform operation
fsub.d f19, f23, f9, rmm # perform operation
fsub.d f19, f23, f9, rne # perform operation
fsub.d f19, f23, f9, rtz # perform operation
fsub.d f19, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fsub.d f22, f24, f31, dyn # perform operation
fsub.d f22, f24, f31, rdn # perform operation
fsub.d f22, f24, f31, rmm # perform operation
fsub.d f22, f24, f31, rne # perform operation
fsub.d f22, f24, f31, rtz # perform operation
fsub.d f22, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fsub.d f12, f20, f28, dyn # perform operation
fsub.d f12, f20, f28, rdn # perform operation
fsub.d f12, f20, f28, rmm # perform operation
fsub.d f12, f20, f28, rne # perform operation
fsub.d f12, f20, f28, rtz # perform operation
fsub.d f12, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f12, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f12, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f12, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f12, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f12, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0010000000000000 from memory into f25
fsub.d f19, f17, f25, dyn # perform operation
fsub.d f19, f17, f25, rdn # perform operation
fsub.d f19, f17, f25, rmm # perform operation
fsub.d f19, f17, f25, rne # perform operation
fsub.d f19, f17, f25, rtz # perform operation
fsub.d f19, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f17, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fsub.d f23, f14, f10, dyn # perform operation
fsub.d f23, f14, f10, rdn # perform operation
fsub.d f23, f14, f10, rmm # perform operation
fsub.d f23, f14, f10, rne # perform operation
fsub.d f23, f14, f10, rtz # perform operation
fsub.d f23, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fsub.d f27, f7, f28, dyn # perform operation
fsub.d f27, f7, f28, rdn # perform operation
fsub.d f27, f7, f28, rmm # perform operation
fsub.d f27, f7, f28, rne # perform operation
fsub.d f27, f7, f28, rtz # perform operation
fsub.d f27, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fsub.d f8, f10, f25, dyn # perform operation
fsub.d f8, f10, f25, rdn # perform operation
fsub.d f8, f10, f25, rmm # perform operation
fsub.d f8, f10, f25, rne # perform operation
fsub.d f8, f10, f25, rtz # perform operation
fsub.d f8, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fsub.d f17, f26, f22, dyn # perform operation
fsub.d f17, f26, f22, rdn # perform operation
fsub.d f17, f26, f22, rmm # perform operation
fsub.d f17, f26, f22, rne # perform operation
fsub.d f17, f26, f22, rtz # perform operation
fsub.d f17, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fsub.d f31, f25, f18, dyn # perform operation
fsub.d f31, f25, f18, rdn # perform operation
fsub.d f31, f25, f18, rmm # perform operation
fsub.d f31, f25, f18, rne # perform operation
fsub.d f31, f25, f18, rtz # perform operation
fsub.d f31, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fsub.d f28, f5, f9, dyn # perform operation
fsub.d f28, f5, f9, rdn # perform operation
fsub.d f28, f5, f9, rmm # perform operation
fsub.d f28, f5, f9, rne # perform operation
fsub.d f28, f5, f9, rtz # perform operation
fsub.d f28, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x5a392534a57711ad from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8008000000000000 from memory into f29
fsub.d f16, f23, f29, dyn # perform operation
fsub.d f16, f23, f29, rdn # perform operation
fsub.d f16, f23, f29, rmm # perform operation
fsub.d f16, f23, f29, rne # perform operation
fsub.d f16, f23, f29, rtz # perform operation
fsub.d f16, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f16, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f16, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f16, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f16, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f16, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fsub.d f3, f31, f14, dyn # perform operation
fsub.d f3, f31, f14, rdn # perform operation
fsub.d f3, f31, f14, rmm # perform operation
fsub.d f3, f31, f14, rne # perform operation
fsub.d f3, f31, f14, rtz # perform operation
fsub.d f3, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f3, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f3, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f3, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f3, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f3, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000001 from memory into f24
fsub.d f23, f11, f24, dyn # perform operation
fsub.d f23, f11, f24, rdn # perform operation
fsub.d f23, f11, f24, rmm # perform operation
fsub.d f23, f11, f24, rne # perform operation
fsub.d f23, f11, f24, rtz # perform operation
fsub.d f23, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fsub.d f14, f20, f3, dyn # perform operation
fsub.d f14, f20, f3, rdn # perform operation
fsub.d f14, f20, f3, rmm # perform operation
fsub.d f14, f20, f3, rne # perform operation
fsub.d f14, f20, f3, rtz # perform operation
fsub.d f14, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
fsub.d f28, f17, f6, dyn # perform operation
fsub.d f28, f17, f6, rdn # perform operation
fsub.d f28, f17, f6, rmm # perform operation
fsub.d f28, f17, f6, rne # perform operation
fsub.d f28, f17, f6, rtz # perform operation
fsub.d f28, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
fsub.d f19, f18, f26, dyn # perform operation
fsub.d f19, f18, f26, rdn # perform operation
fsub.d f19, f18, f26, rmm # perform operation
fsub.d f19, f18, f26, rne # perform operation
fsub.d f19, f18, f26, rtz # perform operation
fsub.d f19, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fsub.d f11, f20, f24, dyn # perform operation
fsub.d f11, f20, f24, rdn # perform operation
fsub.d f11, f20, f24, rmm # perform operation
fsub.d f11, f20, f24, rne # perform operation
fsub.d f11, f20, f24, rtz # perform operation
fsub.d f11, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff8000000000000 from memory into f14
fsub.d f11, f17, f14, dyn # perform operation
fsub.d f11, f17, f14, rdn # perform operation
fsub.d f11, f17, f14, rmm # perform operation
fsub.d f11, f17, f14, rne # perform operation
fsub.d f11, f17, f14, rtz # perform operation
fsub.d f11, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fsub.d f19, f11, f28, dyn # perform operation
fsub.d f19, f11, f28, rdn # perform operation
fsub.d f19, f11, f28, rmm # perform operation
fsub.d f19, f11, f28, rne # perform operation
fsub.d f19, f11, f28, rtz # perform operation
fsub.d f19, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f19, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f19, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f19, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f19, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f19, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fsub.d f23, f30, f10, dyn # perform operation
fsub.d f23, f30, f10, rdn # perform operation
fsub.d f23, f30, f10, rmm # perform operation
fsub.d f23, f30, f10, rne # perform operation
fsub.d f23, f30, f10, rtz # perform operation
fsub.d f23, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f23, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f23, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f23, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f23, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f23, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000001 from memory into f13
fsub.d f20, f21, f13, dyn # perform operation
fsub.d f20, f21, f13, rdn # perform operation
fsub.d f20, f21, f13, rmm # perform operation
fsub.d f20, f21, f13, rne # perform operation
fsub.d f20, f21, f13, rtz # perform operation
fsub.d f20, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f21, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
fsub.d f28, f12, f30, dyn # perform operation
fsub.d f28, f12, f30, rdn # perform operation
fsub.d f28, f12, f30, rmm # perform operation
fsub.d f28, f12, f30, rne # perform operation
fsub.d f28, f12, f30, rtz # perform operation
fsub.d f28, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
fsub.d f30, f17, f20, dyn # perform operation
fsub.d f30, f17, f20, rdn # perform operation
fsub.d f30, f17, f20, rmm # perform operation
fsub.d f30, f17, f20, rne # perform operation
fsub.d f30, f17, f20, rtz # perform operation
fsub.d f30, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f30, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f30, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f30, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f30, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f30, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fsub.d f21, f5, f8, dyn # perform operation
fsub.d f21, f5, f8, rdn # perform operation
fsub.d f21, f5, f8, rmm # perform operation
fsub.d f21, f5, f8, rne # perform operation
fsub.d f21, f5, f8, rtz # perform operation
fsub.d f21, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f21, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f21, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f21, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f21, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f21, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fsub.d f22, f17, f31, dyn # perform operation
fsub.d f22, f17, f31, rdn # perform operation
fsub.d f22, f17, f31, rmm # perform operation
fsub.d f22, f17, f31, rne # perform operation
fsub.d f22, f17, f31, rtz # perform operation
fsub.d f22, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f22, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f22, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f22, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f22, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f22, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fsub.d f17, f22, f6, dyn # perform operation
fsub.d f17, f22, f6, rdn # perform operation
fsub.d f17, f22, f6, rmm # perform operation
fsub.d f17, f22, f6, rne # perform operation
fsub.d f17, f22, f6, rtz # perform operation
fsub.d f17, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xa6e895993737426c from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fsub.d f11, f13, f22, dyn # perform operation
fsub.d f11, f13, f22, rdn # perform operation
fsub.d f11, f13, f22, rmm # perform operation
fsub.d f11, f13, f22, rne # perform operation
fsub.d f11, f13, f22, rtz # perform operation
fsub.d f11, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff8000000000000 from memory into f19
fsub.d f18, f5, f19, dyn # perform operation
fsub.d f18, f5, f19, rdn # perform operation
fsub.d f18, f5, f19, rmm # perform operation
fsub.d f18, f5, f19, rne # perform operation
fsub.d f18, f5, f19, rtz # perform operation
fsub.d f18, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fsub.d f15, f22, f31, dyn # perform operation
fsub.d f15, f22, f31, rdn # perform operation
fsub.d f15, f22, f31, rmm # perform operation
fsub.d f15, f22, f31, rne # perform operation
fsub.d f15, f22, f31, rtz # perform operation
fsub.d f15, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f15, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f15, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f15, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f15, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f15, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fsub.d f28, f29, f18, dyn # perform operation
fsub.d f28, f29, f18, rdn # perform operation
fsub.d f28, f29, f18, rmm # perform operation
fsub.d f28, f29, f18, rne # perform operation
fsub.d f28, f29, f18, rtz # perform operation
fsub.d f28, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
fsub.d f9, f3, f17, dyn # perform operation
fsub.d f9, f3, f17, rdn # perform operation
fsub.d f9, f3, f17, rmm # perform operation
fsub.d f9, f3, f17, rne # perform operation
fsub.d f9, f3, f17, rtz # perform operation
fsub.d f9, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fsub.d f9, f21, f12, dyn # perform operation
fsub.d f9, f21, f12, rdn # perform operation
fsub.d f9, f21, f12, rmm # perform operation
fsub.d f9, f21, f12, rne # perform operation
fsub.d f9, f21, f12, rtz # perform operation
fsub.d f9, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f9, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f9, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f9, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f9, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f9, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fsub.d f27, f19, f14, dyn # perform operation
fsub.d f27, f19, f14, rdn # perform operation
fsub.d f27, f19, f14, rmm # perform operation
fsub.d f27, f19, f14, rne # perform operation
fsub.d f27, f19, f14, rtz # perform operation
fsub.d f27, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f27, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f27, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f27, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f27, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f27, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fsub.d f10, f9, f1, dyn # perform operation
fsub.d f10, f9, f1, rdn # perform operation
fsub.d f10, f9, f1, rmm # perform operation
fsub.d f10, f9, f1, rne # perform operation
fsub.d f10, f9, f1, rtz # perform operation
fsub.d f10, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fsub.d f11, f15, f22, dyn # perform operation
fsub.d f11, f15, f22, rdn # perform operation
fsub.d f11, f15, f22, rmm # perform operation
fsub.d f11, f15, f22, rne # perform operation
fsub.d f11, f15, f22, rtz # perform operation
fsub.d f11, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fsub.d f5, f21, f6, dyn # perform operation
fsub.d f5, f21, f6, rdn # perform operation
fsub.d f5, f21, f6, rmm # perform operation
fsub.d f5, f21, f6, rne # perform operation
fsub.d f5, f21, f6, rtz # perform operation
fsub.d f5, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f5, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fsub.d f26, f15, f17, dyn # perform operation
fsub.d f26, f15, f17, rdn # perform operation
fsub.d f26, f15, f17, rmm # perform operation
fsub.d f26, f15, f17, rne # perform operation
fsub.d f26, f15, f17, rtz # perform operation
fsub.d f26, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f26, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f26, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f26, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f26, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f26, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fsub.d f17, f24, f28, dyn # perform operation
fsub.d f17, f24, f28, rdn # perform operation
fsub.d f17, f24, f28, rmm # perform operation
fsub.d f17, f24, f28, rne # perform operation
fsub.d f17, f24, f28, rtz # perform operation
fsub.d f17, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fsub.d f11, f18, f2, dyn # perform operation
fsub.d f11, f18, f2, rdn # perform operation
fsub.d f11, f18, f2, rmm # perform operation
fsub.d f11, f18, f2, rne # perform operation
fsub.d f11, f18, f2, rtz # perform operation
fsub.d f11, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f11, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f11, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f11, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f11, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f11, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000001 from memory into f22
fsub.d f10, f6, f22, dyn # perform operation
fsub.d f10, f6, f22, rdn # perform operation
fsub.d f10, f6, f22, rmm # perform operation
fsub.d f10, f6, f22, rne # perform operation
fsub.d f10, f6, f22, rtz # perform operation
fsub.d f10, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fsub.d f13, f26, f31, dyn # perform operation
fsub.d f13, f26, f31, rdn # perform operation
fsub.d f13, f26, f31, rmm # perform operation
fsub.d f13, f26, f31, rne # perform operation
fsub.d f13, f26, f31, rtz # perform operation
fsub.d f13, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f13, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f13, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f13, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f13, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f13, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xa6e895993737426c from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fsub.d f18, f15, f5, dyn # perform operation
fsub.d f18, f15, f5, rdn # perform operation
fsub.d f18, f15, f5, rmm # perform operation
fsub.d f18, f15, f5, rne # perform operation
fsub.d f18, f15, f5, rtz # perform operation
fsub.d f18, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f18, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f18, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000000 from memory into f9
fsub.d f17, f20, f9, dyn # perform operation
fsub.d f17, f20, f9, rdn # perform operation
fsub.d f17, f20, f9, rmm # perform operation
fsub.d f17, f20, f9, rne # perform operation
fsub.d f17, f20, f9, rtz # perform operation
fsub.d f17, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f17, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f17, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f17, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f17, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f17, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
fsub.d f20, f28, f12, dyn # perform operation
fsub.d f20, f28, f12, rdn # perform operation
fsub.d f20, f28, f12, rmm # perform operation
fsub.d f20, f28, f12, rne # perform operation
fsub.d f20, f28, f12, rtz # perform operation
fsub.d f20, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f20, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f20, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f20, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f20, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f20, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fsub.d f8, f28, f24, dyn # perform operation
fsub.d f8, f28, f24, rdn # perform operation
fsub.d f8, f28, f24, rmm # perform operation
fsub.d f8, f28, f24, rne # perform operation
fsub.d f8, f28, f24, rtz # perform operation
fsub.d f8, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f8, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f8, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f8, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f8, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f8, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fsub.d f14, f24, f25, dyn # perform operation
fsub.d f14, f24, f25, rdn # perform operation
fsub.d f14, f24, f25, rmm # perform operation
fsub.d f14, f24, f25, rne # perform operation
fsub.d f14, f24, f25, rtz # perform operation
fsub.d f14, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000001 from memory into f28
fsub.d f6, f26, f28, dyn # perform operation
fsub.d f6, f26, f28, rdn # perform operation
fsub.d f6, f26, f28, rmm # perform operation
fsub.d f6, f26, f28, rne # perform operation
fsub.d f6, f26, f28, rtz # perform operation
fsub.d f6, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f6, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f6, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f6, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f6, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f6, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fsub.d f28, f24, f2, dyn # perform operation
fsub.d f28, f24, f2, rdn # perform operation
fsub.d f28, f24, f2, rmm # perform operation
fsub.d f28, f24, f2, rne # perform operation
fsub.d f28, f24, f2, rtz # perform operation
fsub.d f28, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f28, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f28, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f28, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f28, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f28, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
fsub.d f31, f22, f2, dyn # perform operation
fsub.d f31, f22, f2, rdn # perform operation
fsub.d f31, f22, f2, rmm # perform operation
fsub.d f31, f22, f2, rne # perform operation
fsub.d f31, f22, f2, rtz # perform operation
fsub.d f31, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f31, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f31, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f31, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f31, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f31, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x5a392534a57711ad from memory into f12
fsub.d f10, f18, f12, dyn # perform operation
fsub.d f10, f18, f12, rdn # perform operation
fsub.d f10, f18, f12, rmm # perform operation
fsub.d f10, f18, f12, rne # perform operation
fsub.d f10, f18, f12, rtz # perform operation
fsub.d f10, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f10, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f10, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f10, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f10, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f10, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fsub.d f14, f28, f3, dyn # perform operation
fsub.d f14, f28, f3, rdn # perform operation
fsub.d f14, f28, f3, rmm # perform operation
fsub.d f14, f28, f3, rne # perform operation
fsub.d f14, f28, f3, rtz # perform operation
fsub.d f14, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fsub.d f14, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fsub.d f14, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fsub.d f14, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fsub.d f14, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fsub.d f14, f28, f3 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
